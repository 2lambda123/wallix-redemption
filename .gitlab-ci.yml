variables:
  GIT_STRATEGY: fetch
  GIT_SUBMODULE_STRATEGY: recursive
  TZ: Europe/Paris

stages:
  - build
  - analysis

build_package:
  stage: build
  needs: []
  image: debian:buster-slim
  script:
    - apt-get -qq update
    - DEBIAN_FRONTEND=noninteractive TZ=Europe/Paris apt-get -y install g++ libboost-tools-dev libboost-test-dev libssl-dev libkrb5-dev libgssglue-dev libsnappy-dev libpng-dev libavcodec-dev libavformat-dev libavutil-dev libswscale-dev libx264-dev libbz2-dev gettext git libhyperscan-dev
    - git submodule update --init
    - mkdir test_tmpdir
    - OPENSSL_NO_DEPRECATED_3_0=1 TMPDIR_TEST=test_tmpdir bjam -j4 linkflags="-static-libstdc++" variant=release -q cxxflags='-DREDEMPTION_DISABLE_NO_BOOST_PREPROCESSOR_WARNING'
  artifacts:
    when: always
    name: "$CI_JOB_NAME"
    paths:
      - bin/gcc-*/release
      - test_tmpdir
    exclude:
      - bin/**/*.o
      - bin/gcc-*/release/tests/**/*
    expire_in: 1 day


sonarqube-check:
  stage: analysis
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    GIT_SUBMODULE_STRATEGY: normal
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - echo "${SONAR_SSL}" >> sonarqube.crt
    - keytool -noprompt -trustcacerts -cacerts -storepass changeit -importcert -alias sonarqube -file "sonarqube.crt"
    - sonar-scanner
  allow_failure: true
  only:
    - merge_requests
    - future
