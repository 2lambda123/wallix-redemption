/*
  This program is free software; you can redistribute it and/or modify it
  under the terms of the GNU General Public License as published by the
  Free Software Foundation; either version 2 of the License, or (at your
  option) any later version.

  This program is distributed in the hope that it will be useful, but
  WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
  Public License for more details.

  You should have received a copy of the GNU General Public License along
  with this program; if not, write to the Free Software Foundation, Inc.,
  675 Mass Ave, Cambridge, MA 02139, USA.

  Product name: redemption, a FLOSS RDP proxy
  Copyright (C) Wallix 2013
  Author(s): Christophe Grosjean, Raphael Zhou, Meng Tan
*/

#include "test_only/test_framework/redemption_unit_tests.hpp"

#include "core/RDP/nla/nla_server_ntlm.hpp"
#include "core/RDP/nla/nla_client_ntlm.hpp"
#include "core/RDP/tpdu_buffer.hpp"
#include <iostream>

#include "test_only/transport/test_transport.hpp"

#include "test_only/lcg_random.hpp"

RED_TEST_DELEGATE_PRINT_ENUM(credssp::State);

RED_AUTO_TEST_CASE(TestNlaclient)
{
    RED_TEST_MESSAGE("==================== TestNlaClient ===================");
    auto public_key = std::vector<uint8_t>{} << bytes_view("1245789652325415"_av); 
    std::string user("Ulysse");
    std::string domain("Ithaque");
    uint8_t pass[] = "Pénélope";
    uint8_t host[] = "Télémaque";
    
    
    ReplayRandom rand(std::vector<uint8_t>({
    // Client Random Challenge 
    0xb8, 0x6c, 0xda, 0xa6, 0xf0, 0xf6, 0x30, 0x8d,
    // Exported Session Key 
    0xa8, 0x16, 0xa6, 0x6e, 0xe0, 0xc3, 0xe5, 0xcc, 0x98, 0x76, 0xdd, 0xf5, 0xd0, 0x26, 0x74, 0x5f
    }));
    
//    std::array<uint8_t,8> tmp;
//    rand.random(tmp.data(), tmp.size());
//    RED_CHECK_HMEM(bytes_view(tmp), bytes_view(std::array<uint8_t,8>{0xb8, 0x6c, 0xda, 0xa6, 0xf0, 0xf6, 0x30, 0x8d}));
    
    
    ReplayTime timeobj(std::vector<timeval>{{3598079566, 1510905191}});
//    LCGTime timeobj;
    std::string extra_message;
    rdpClientNTLM ntlm_client(user, domain, pass, host, "107.0.0.1", public_key, false, rand, timeobj, true);

    std::vector<uint8_t> expected_negotiate{
/* 0000 */ 0x30, 0x37, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa1, 0x30, 0x30, 0x2e, 0x30, 0x2c, 0xa0, 0x2a, 0x04,  // 07......00.0,.*.
/* 0010 */ 0x28, 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb7, 0x82, 0x08,  // (NTLMSSP........
/* 0020 */ 0xe2, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00,  // .....(.......(..
/* 0030 */ 0x00, 0x06, 0x01, 0xb1, 0x1d, 0x00, 0x00, 0x00, 0x0f,  
    };

    RED_TEST_MESSAGE("+++++++++++++ Client sending NTLM Negotiate");

    auto negotiate_message = ntlm_client.authenticate_start();
    RED_CHECK_HMEM(negotiate_message, expected_negotiate);

    std::vector<uint8_t> server_answer_challenge{
    /* 0000 */ 0x30, 0x81, 0x88, 0xa0, 0x03, 0x02, 0x01, 0x02, 0xa1, 0x81, 0x80, 0x30, 0x7e, 0x30, 0x7c, 0xa0,  // 0..........0~0|.
    /* 0010 */ 0x7a, 0x04, 0x78, 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,  // z.xNTLMSSP......
    /* 0020 */ 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0xb7, 0x82, 0x08, 0xe2, 0xb8, 0x6c, 0xda, 0xa6, 0xf0,  // ...8........l...
    /* 0030 */ 0xf6, 0x30, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x38,  // .0.........@.@.8
    /* 0040 */ 0x00, 0x00, 0x00, 0x05, 0x01, 0x28, 0x0a, 0x00, 0x00, 0x00, 0x0f, 0x01, 0x00, 0x08, 0x00, 0x57,  // .....(.........W
    /* 0050 */ 0x00, 0x49, 0x00, 0x4e, 0x00, 0x37, 0x00, 0x02, 0x00, 0x08, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e,  // .I.N.7.....W.I.N
    /* 0060 */ 0x00, 0x37, 0x00, 0x03, 0x00, 0x08, 0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x37, 0x00, 0x04,  // .7.....w.i.n.7..
    /* 0070 */ 0x00, 0x08, 0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x37, 0x00, 0x07, 0x00, 0x08, 0x00, 0x67,  // ...w.i.n.7.....g
    /* 0080 */ 0x95, 0x0e, 0x5a, 0x4e, 0x56, 0x76, 0xd6, 0x00, 0x00, 0x00, 0x00,                                // ..ZNVv.....
    };

    std::vector<uint8_t> expected_authenticate{
    /* 0000 */ 0x30, 0x82, 0x01, 0x59, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa1, 0x82, 0x01, 0x2c, 0x30, 0x82, 0x01,  // 0..Y........,0..
    /* 0010 */ 0x28, 0x30, 0x82, 0x01, 0x24, 0xa0, 0x82, 0x01, 0x20, 0x04, 0x82, 0x01, 0x1c, 0x4e, 0x54, 0x4c,  // (0..$... ....NTL
    /* 0020 */ 0x4d, 0x53, 0x53, 0x50, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00, 0x58, 0x00, 0x00,  // MSSP.........X..
    /* 0030 */ 0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0xe0, 0x00, 0x00,  // .p.p.p..........
    /* 0040 */ 0x00, 0x0c, 0x00, 0x0c, 0x00, 0xee, 0x00, 0x00, 0x00, 0x12, 0x00, 0x12, 0x00, 0xfa, 0x00, 0x00,  // ................
    /* 0050 */ 0x00, 0x10, 0x00, 0x10, 0x00, 0x0c, 0x01, 0x00, 0x00, 0x35, 0xa2, 0x88, 0xe2, 0x06, 0x01, 0xb1,  // .........5......
    /* 0060 */ 0x1d, 0x00, 0x00, 0x00, 0x0f, 0x9d, 0x98, 0xe1, 0x30, 0xdc, 0x7a, 0xce, 0x81, 0xa9, 0x7a, 0x11,  // ........0.z...z.
    /* 0070 */ 0x14, 0x7d, 0x5d, 0x73, 0xd0, 0x34, 0xbe, 0xb5, 0x6e, 0xce, 0xec, 0x0a, 0x50, 0x2d, 0x29, 0x63,  // .}]s.4..n...P-)c
    /* 0080 */ 0x7f, 0xcc, 0x5e, 0xe7, 0x18, 0xb8, 0x6c, 0xda, 0xa6, 0xf0, 0xf6, 0x30, 0x8d, 0xa6, 0x41, 0xcc,  // ..^...l....0..A.
    /* 0090 */ 0x7a, 0x52, 0x8e, 0x7a, 0xb3, 0x06, 0x7d, 0x0b, 0xe0, 0x00, 0xd5, 0xf6, 0x13, 0x01, 0x01, 0x00,  // zR.z..}.........
    /* 00a0 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0x95, 0x0e, 0x5a, 0x4e, 0x56, 0x76, 0xd6, 0xb8, 0x6c, 0xda,  // .....g..ZNVv..l.
    /* 00b0 */ 0xa6, 0xf0, 0xf6, 0x30, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x57, 0x00, 0x49,  // ...0.........W.I
    /* 00c0 */ 0x00, 0x4e, 0x00, 0x37, 0x00, 0x02, 0x00, 0x08, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x37,  // .N.7.....W.I.N.7
    /* 00d0 */ 0x00, 0x03, 0x00, 0x08, 0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x37, 0x00, 0x04, 0x00, 0x08,  // .....w.i.n.7....
    /* 00e0 */ 0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x37, 0x00, 0x07, 0x00, 0x08, 0x00, 0x67, 0x95, 0x0e,  // .w.i.n.7.....g..
    /* 00f0 */ 0x5a, 0x4e, 0x56, 0x76, 0xd6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x00, 0x74,  // ZNVv.........I.t
    /* 0100 */ 0x00, 0x68, 0x00, 0x61, 0x00, 0x71, 0x00, 0x75, 0x00, 0x65, 0x00, 0x55, 0x00, 0x6c, 0x00, 0x79,  // .h.a.q.u.e.U.l.y
    /* 0110 */ 0x00, 0x73, 0x00, 0x73, 0x00, 0x65, 0x00, 0x54, 0x00, 0xe9, 0x00, 0x6c, 0x00, 0xe9, 0x00, 0x6d,  // .s.s.e.T...l...m
    /* 0120 */ 0x00, 0x61, 0x00, 0x71, 0x00, 0x75, 0x00, 0x65, 0x00, 0x44, 0xbc, 0x4d, 0x7a, 0x13, 0x3f, 0x6b,  // .a.q.u.e.D.Mz.?k
    /* 0130 */ 0x81, 0xdb, 0x1d, 0x2b, 0x7b, 0xbf, 0x1e, 0x18, 0x0f, 0xa3, 0x22, 0x04, 0x20, 0x01, 0x00, 0x00,  // ...+{.....". ...
    /* 0140 */ 0x00, 0x89, 0xe2, 0xda, 0x48, 0x17, 0x29, 0xb5, 0x08, 0x00, 0x00, 0x00, 0x00, 0x20, 0x59, 0x27,  // ....H.)...... Y'
    /* 0150 */ 0x3f, 0x08, 0xd0, 0xc2, 0xe4, 0x75, 0x66, 0x10, 0x49, 0x7b, 0xbd, 0x8d, 0xf7,                    // ?....uf.I{...
    };

    RED_TEST_MESSAGE("+++++++++++++ Client receive NTLM Challenge -> reply with NTLM Authenticate");

    auto v1 = ntlm_client.authenticate_next(server_answer_challenge);
    RED_CHECK(credssp::State::Cont == ntlm_client.state);
    RED_CHECK_HMEM(v1, expected_authenticate);

    std::vector<uint8_t> server_answer_pubauthkey{
        /* 0000 */ 0x30, 0x29, 0xa0, 0x03, 0x02, 0x01, 0x02, 0xa3, 0x22, 0x04, 0x20, 0x01, 0x00, 0x00, 0x00, 0xa2,  // 0)......". .....
        /* 0010 */ 0xe0, 0x5b, 0x50, 0x97, 0x8e, 0x99, 0x27, 0x00, 0x00, 0x00, 0x00, 0xdc, 0xa7, 0x0b, 0xfe, 0x37,  // .[P...'........7
        /* 0020 */ 0x45, 0x3d, 0x1b, 0x05, 0x15, 0xce, 0x56, 0x0a, 0x54, 0xa1, 0xf1,                                // E=....V.T..
    };
    
    std::vector<uint8_t> expected_tscredentials{
        /* 0000 */ 0x30, 0x5c, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa2, 0x55, 0x04, 0x53, 0x01, 0x00, 0x00, 0x00, 0xaf,  // 0.......U.S.....
        /* 0010 */ 0xad, 0x46, 0x2a, 0x6a, 0x9d, 0xf7, 0x88, 0x01, 0x00, 0x00, 0x00, 0xd5, 0x4f, 0xc8, 0xd0, 0xbd,  // .F*j........O...
        /* 0020 */ 0x89, 0x60, 0xe0, 0x71, 0x60, 0x31, 0x7a, 0xcc, 0xec, 0xc5, 0xbf, 0x23, 0x4b, 0xe5, 0xf9, 0xa5,  // .`.q`1z....#K...
        /* 0030 */ 0x8c, 0x21, 0x66, 0xa6, 0x78, 0xda, 0xd1, 0xbd, 0xef, 0xa4, 0xfd, 0x47, 0xa6, 0xf1, 0x56, 0xa5,  // .!f.x......G..V.
        /* 0040 */ 0xd9, 0x52, 0x72, 0x92, 0xfa, 0x41, 0xa5, 0xb4, 0x9d, 0x94, 0xfb, 0x0e, 0xe2, 0x61, 0xba, 0xfc,  // .Rr..A.......a..
        /* 0050 */ 0xd5, 0xf3, 0xa7, 0xb5, 0x33, 0xd5, 0x62, 0x8d, 0x93, 0x18, 0x54, 0x39, 0x8a, 0xe7,              // ....3.b...T9..
    };
    
    RED_TEST_MESSAGE("+++++++++++++ Client receive NTLM pubauthkey -> reply with NTLM TS Credentials");
    auto v2 = ntlm_client.authenticate_next(server_answer_pubauthkey);
    RED_CHECK(credssp::State::Finish == ntlm_client.state);
    RED_CHECK_HMEM(v2, expected_tscredentials);
    RED_TEST_MESSAGE("\n");
}


RED_AUTO_TEST_CASE(TestNlaclientv6)
{
    RED_TEST_MESSAGE("==================== TestNlaClient ===================");
    auto public_key = std::vector<uint8_t>{
/* 0000 */ 0x30, 0x81, 0x89, 0x02, 0x81, 0x81, 0x00, 0xcb, 0xfc, 0xaa, 0xad, 0x1d, 0x2b, 0x92, 0xa1, 0x11,  // 0...........+...
/* 0010 */ 0x30, 0x99, 0x9c, 0xd6, 0xe6, 0x57, 0x80, 0x25, 0xfc, 0xe4, 0x65, 0x33, 0xe4, 0xf4, 0x21, 0xf9,  // 0....W.%..e3..!.
/* 0020 */ 0x6a, 0x11, 0x8d, 0x6a, 0x5a, 0x70, 0x35, 0x69, 0xd5, 0x58, 0xed, 0x3d, 0x61, 0x83, 0x0e, 0x96,  // j..jZp5i.X.=a...
/* 0030 */ 0x44, 0xbc, 0x01, 0x1e, 0x0e, 0x82, 0x88, 0x58, 0x87, 0xab, 0xdd, 0x04, 0x80, 0xac, 0x57, 0x34,  // D......X......W4
/* 0040 */ 0xe7, 0xfd, 0x69, 0xf4, 0x1e, 0x5c, 0x30, 0x16, 0x69, 0x6f, 0x3e, 0x93, 0xa4, 0x5f, 0x12, 0x2d,  // ..i...0.io>.._.-
/* 0050 */ 0x21, 0xfa, 0x1c, 0xc0, 0x40, 0xf5, 0xe6, 0x49, 0xf3, 0x85, 0x28, 0x80, 0x0d, 0xef, 0xb5, 0xf0,  // !...@..I..(.....
/* 0060 */ 0x77, 0x79, 0x96, 0xef, 0xc8, 0x0a, 0x3d, 0x15, 0x8e, 0x88, 0xeb, 0x39, 0xfa, 0xfd, 0x2d, 0xce,  // wy....=....9..-.
/* 0070 */ 0x34, 0x79, 0xea, 0xa8, 0xc6, 0xc0, 0x3a, 0x38, 0xa9, 0x44, 0xe1, 0xe3, 0x36, 0xfa, 0xd7, 0x4a,  // 4y....:8.D..6..J
/* 0080 */ 0x2b, 0x2f, 0x03, 0xb5, 0x74, 0x5e, 0x35, 0x02, 0x03, 0x01, 0x00, 0x01,                          // +/..t^5.....
    }; 
    std::string user("Christophe");
    std::string domain("");
    uint8_t pass[] = "SecureLinux$42";
    uint8_t host[] = "WIN10CGR";
    ReplayRandom rand(std::vector<uint8_t>({
        0x72, 0x0f, 0xa1, 0x62, 0x9f, 0xbf, 0xe3, 0x5b,
        0x61, 0x52, 0x2f, 0xa9, 0xa9, 0x36, 0x75, 0xda, 0x62, 0x19, 0x9e, 0xcd, 0x22, 0xbe, 0xb4, 0xea,
        // Random Client Nonce
        0xad, 0x88, 0xfa, 0xfb, 0x73, 0x7a, 0x14, 0xbd, 0x20, 0xef, 0xb4, 0x7b, 0x75, 0x9d, 0x4f, 0xac,  // ....sz.. ..{u.O.
        0x0d, 0x13, 0x98, 0x72, 0x06, 0x6b, 0xa7, 0xf1, 0x3a, 0xcd, 0x16, 0xdd, 0x43, 0xee, 0x90, 0xfb,  // ...r.k..:...C...        
    }));
    ReplayTime timeobj({{0x5d91e371,0xdaa63}});
    std::string extra_message;
    rdpClientNTLM ntlm_client(user, domain, pass, host, "107.0.0.1", public_key, false, rand, timeobj, true);

    std::vector<uint8_t> expected_negotiate{
/* 0000 */ 0x30, 0x37, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa1, 0x30, 0x30, 0x2e, 0x30, 0x2c, 0xa0, 0x2a, 0x04,  // 07......00.0,.*.
/* 0010 */ 0x28, 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb7, 0x82, 0x08,  // (NTLMSSP........
/* 0020 */ 0xe2, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00,  // .....(.......(..
/* 0030 */ 0x00, 0x06, 0x01, 0xb1, 0x1d, 0x00, 0x00, 0x00, 0x0f,                                            // .........
    };

    RED_TEST_MESSAGE("+++++++++++++ Client sending NTLM Negotiate");

    auto negotiate_message = ntlm_client.authenticate_start();
    RED_CHECK_HMEM(negotiate_message, expected_negotiate);

    std::vector<uint8_t> server_answer_challenge{
/* 0000 */ 0x30, 0x82, 0x01, 0x02, 0xa0, 0x03, 0x02, 0x01, 0x05, 0xa1, 0x81, 0xfa, 0x30, 0x81, 0xf7, 0x30,  // 0...........0..0
/* 0010 */ 0x81, 0xf4, 0xa0, 0x81, 0xf1, 0x04, 0x81, 0xee, 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00,  // ........NTLMSSP.
/* 0020 */ 0x02, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x38, 0x00, 0x00, 0x00, 0x35, 0x82, 0x8a, 0xe2,  // ........8...5...
/* 0030 */ 0x27, 0xd4, 0x5b, 0x32, 0xdb, 0xb4, 0x4d, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // '.[2..M.........
/* 0040 */ 0x98, 0x00, 0x98, 0x00, 0x56, 0x00, 0x00, 0x00, 0x06, 0x01, 0xb1, 0x1d, 0x00, 0x00, 0x00, 0x0f,  // ....V...........
/* 0050 */ 0x52, 0x00, 0x44, 0x00, 0x50, 0x00, 0x2d, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x44, 0x00,  // R.D.P.-.W.I.N.D.
/* 0060 */ 0x4f, 0x00, 0x57, 0x00, 0x53, 0x00, 0x2d, 0x00, 0x44, 0x00, 0x45, 0x00, 0x56, 0x00, 0x02, 0x00,  // O.W.S.-.D.E.V...
/* 0070 */ 0x1e, 0x00, 0x52, 0x00, 0x44, 0x00, 0x50, 0x00, 0x2d, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00,  // ..R.D.P.-.W.I.N.
/* 0080 */ 0x44, 0x00, 0x4f, 0x00, 0x57, 0x00, 0x53, 0x00, 0x2d, 0x00, 0x44, 0x00, 0x45, 0x00, 0x56, 0x00,  // D.O.W.S.-.D.E.V.
/* 0090 */ 0x01, 0x00, 0x1e, 0x00, 0x52, 0x00, 0x44, 0x00, 0x50, 0x00, 0x2d, 0x00, 0x57, 0x00, 0x49, 0x00,  // ....R.D.P.-.W.I.
/* 00a0 */ 0x4e, 0x00, 0x44, 0x00, 0x4f, 0x00, 0x57, 0x00, 0x53, 0x00, 0x2d, 0x00, 0x44, 0x00, 0x45, 0x00,  // N.D.O.W.S.-.D.E.
/* 00b0 */ 0x56, 0x00, 0x04, 0x00, 0x1e, 0x00, 0x72, 0x00, 0x64, 0x00, 0x70, 0x00, 0x2d, 0x00, 0x77, 0x00,  // V.....r.d.p.-.w.
/* 00c0 */ 0x69, 0x00, 0x6e, 0x00, 0x64, 0x00, 0x6f, 0x00, 0x77, 0x00, 0x73, 0x00, 0x2d, 0x00, 0x64, 0x00,  // i.n.d.o.w.s.-.d.
/* 00d0 */ 0x65, 0x00, 0x76, 0x00, 0x03, 0x00, 0x1e, 0x00, 0x72, 0x00, 0x64, 0x00, 0x70, 0x00, 0x2d, 0x00,  // e.v.....r.d.p.-.
/* 00e0 */ 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x64, 0x00, 0x6f, 0x00, 0x77, 0x00, 0x73, 0x00, 0x2d, 0x00,  // w.i.n.d.o.w.s.-.
/* 00f0 */ 0x64, 0x00, 0x65, 0x00, 0x76, 0x00, 0x07, 0x00, 0x08, 0x00, 0xc2, 0x66, 0xca, 0x24, 0x80, 0x77,  // d.e.v......f.$.w
/* 0100 */ 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00,                                                              // ......
    };

    std::vector<uint8_t> expected_authenticate{
/* 0000 */ 0x30, 0x82, 0x01, 0xdd, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa1, 0x82, 0x01, 0x7c, 0x30, 0x82, 0x01,  // 0...........|0..
/* 0010 */ 0x78, 0x30, 0x82, 0x01, 0x74, 0xa0, 0x82, 0x01, 0x70, 0x04, 0x82, 0x01, 0x6c, 0x4e, 0x54, 0x4c,  // x0..t...p...lNTL
/* 0020 */ 0x4d, 0x53, 0x53, 0x50, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00, 0x58, 0x00, 0x00,  // MSSP.........X..
/* 0030 */ 0x00, 0xc8, 0x00, 0xc8, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x01, 0x00,  // .....p.......8..
/* 0040 */ 0x00, 0x14, 0x00, 0x14, 0x00, 0x38, 0x01, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x4c, 0x01, 0x00,  // .....8.......L..
/* 0050 */ 0x00, 0x10, 0x00, 0x10, 0x00, 0x5c, 0x01, 0x00, 0x00, 0x35, 0xa2, 0x88, 0xe2, 0x06, 0x01, 0xb1,  // .........5......
/* 0060 */ 0x1d, 0x00, 0x00, 0x00, 0x0f, 0x63, 0x9a, 0x4b, 0x20, 0xbb, 0x35, 0x5f, 0xbc, 0xa4, 0xc6, 0xf5,  // .....c.K .5_....
/* 0070 */ 0xd5, 0xb0, 0x1d, 0x9e, 0x07, 0x93, 0xda, 0x97, 0x80, 0x57, 0xec, 0x8a, 0x53, 0xc4, 0x25, 0xc0,  // .........W..S.%.
/* 0080 */ 0x3d, 0x6b, 0x4c, 0x4a, 0x2a, 0x72, 0x0f, 0xa1, 0x62, 0x9f, 0xbf, 0xe3, 0x5b, 0xad, 0x2c, 0x84,  // =kLJ*r..b...[.,.
/* 0090 */ 0x43, 0x4b, 0x79, 0xc9, 0xab, 0xae, 0xdf, 0x2d, 0x15, 0xaa, 0xc4, 0x33, 0x27, 0x01, 0x01, 0x00,  // CKy....-...3'...
/* 00a0 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x63, 0xaa, 0x0d, 0x00, 0x71, 0xe3, 0x91, 0x5d, 0x72, 0x0f, 0xa1,  // .....c...q..]r..
/* 00b0 */ 0x62, 0x9f, 0xbf, 0xe3, 0x5b, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x1e, 0x00, 0x52, 0x00, 0x44,  // b...[........R.D
/* 00c0 */ 0x00, 0x50, 0x00, 0x2d, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x44, 0x00, 0x4f, 0x00, 0x57,  // .P.-.W.I.N.D.O.W
/* 00d0 */ 0x00, 0x53, 0x00, 0x2d, 0x00, 0x44, 0x00, 0x45, 0x00, 0x56, 0x00, 0x01, 0x00, 0x1e, 0x00, 0x52,  // .S.-.D.E.V.....R
/* 00e0 */ 0x00, 0x44, 0x00, 0x50, 0x00, 0x2d, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x44, 0x00, 0x4f,  // .D.P.-.W.I.N.D.O
/* 00f0 */ 0x00, 0x57, 0x00, 0x53, 0x00, 0x2d, 0x00, 0x44, 0x00, 0x45, 0x00, 0x56, 0x00, 0x04, 0x00, 0x1e,  // .W.S.-.D.E.V....
/* 0100 */ 0x00, 0x72, 0x00, 0x64, 0x00, 0x70, 0x00, 0x2d, 0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x64,  // .r.d.p.-.w.i.n.d
/* 0110 */ 0x00, 0x6f, 0x00, 0x77, 0x00, 0x73, 0x00, 0x2d, 0x00, 0x64, 0x00, 0x65, 0x00, 0x76, 0x00, 0x03,  // .o.w.s.-.d.e.v..
/* 0120 */ 0x00, 0x1e, 0x00, 0x72, 0x00, 0x64, 0x00, 0x70, 0x00, 0x2d, 0x00, 0x77, 0x00, 0x69, 0x00, 0x6e,  // ...r.d.p.-.w.i.n
/* 0130 */ 0x00, 0x64, 0x00, 0x6f, 0x00, 0x77, 0x00, 0x73, 0x00, 0x2d, 0x00, 0x64, 0x00, 0x65, 0x00, 0x76,  // .d.o.w.s.-.d.e.v
/* 0140 */ 0x00, 0x07, 0x00, 0x08, 0x00, 0xc2, 0x66, 0xca, 0x24, 0x80, 0x77, 0xd5, 0x01, 0x00, 0x00, 0x00,  // ......f.$.w.....
/* 0150 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x68, 0x00, 0x72, 0x00, 0x69, 0x00, 0x73, 0x00, 0x74,  // .....C.h.r.i.s.t
/* 0160 */ 0x00, 0x6f, 0x00, 0x70, 0x00, 0x68, 0x00, 0x65, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31,  // .o.p.h.e.W.I.N.1
/* 0170 */ 0x00, 0x30, 0x00, 0x43, 0x00, 0x47, 0x00, 0x52, 0x00, 0x35, 0xfa, 0x7c, 0x30, 0xed, 0x2b, 0x2b,  // .0.C.G.R.5.|0.++
/* 0180 */ 0x68, 0x72, 0xd7, 0xb2, 0xbe, 0x9c, 0x89, 0xb9, 0xaa, 0xa3, 0x32, 0x04, 0x30, 0x01, 0x00, 0x00,  // hr........2.0...
/* 0190 */ 0x00, 0x6c, 0x55, 0xa4, 0x5a, 0x71, 0x5a, 0x97, 0x6c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a, 0xdd,  // .lU.ZqZ.l.....:.
/* 01a0 */ 0x21, 0x36, 0x02, 0x1b, 0x93, 0x3b, 0x84, 0x95, 0x8d, 0x54, 0xfd, 0xb3, 0xa8, 0x53, 0x08, 0xc7,  // !6...;...T...S..
/* 01b0 */ 0xd5, 0x73, 0x4e, 0x5d, 0x9f, 0x88, 0x16, 0x36, 0x53, 0xed, 0x0c, 0xc6, 0x35, 0xa5, 0x22, 0x04,  // .sN]...6S...5.".
/* 01c0 */ 0x20, 0xad, 0x88, 0xfa, 0xfb, 0x73, 0x7a, 0x14, 0xbd, 0x20, 0xef, 0xb4, 0x7b, 0x75, 0x9d, 0x4f,  //  ....sz.. ..{u.O
/* 01d0 */ 0xac, 0x0d, 0x13, 0x98, 0x72, 0x06, 0x6b, 0xa7, 0xf1, 0x3a, 0xcd, 0x16, 0xdd, 0x43, 0xee, 0x90,  // ....r.k..:...C..
/* 01e0 */ 0xfb,                                                                                            // .
    };

    RED_TEST_MESSAGE("+++++++++++++ Client receive NTLM Challenge -> reply with NTLM Authenticate");

    auto v1 = ntlm_client.authenticate_next(server_answer_challenge);
    RED_CHECK(credssp::State::Cont == ntlm_client.state);
    RED_CHECK_HMEM(v1, expected_authenticate);

    std::vector<uint8_t> server_answer_pubauthkey{
/* 0000 */ 0x30, 0x39, 0xa0, 0x03, 0x02, 0x01, 0x05, 0xa3, 0x32, 0x04, 0x30, 0x01, 0x00, 0x00, 0x00, 0x95,  // 09......2.0.....
/* 0010 */ 0x22, 0x4f, 0x53, 0x52, 0x97, 0xb4, 0xba, 0x00, 0x00, 0x00, 0x00, 0xf5, 0x77, 0x3b, 0x1c, 0x29,  // "OSR........w;.)
/* 0020 */ 0x79, 0xa8, 0x0a, 0xbf, 0x99, 0x29, 0x16, 0xfd, 0xdb, 0x40, 0x10, 0xb6, 0x0a, 0x13, 0x2e, 0xc8,  // y....)...@......
/* 0030 */ 0x6e, 0x15, 0x82, 0x6d, 0xe3, 0x77, 0x22, 0xbe, 0x2d, 0x6a, 0xc4,                                // n..m.w".-j.
    };
    
    std::vector<uint8_t> expected_tscredentials{
/* 0000 */ 0x30, 0x81, 0x86, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa2, 0x5b, 0x04, 0x59, 0x01, 0x00, 0x00, 0x00,  // 0........[.Y....
/* 0010 */ 0xef, 0x34, 0x7c, 0x32, 0xce, 0xbb, 0x55, 0xf7, 0x01, 0x00, 0x00, 0x00, 0x74, 0xab, 0x77, 0xcd,  // .4|2..U.....t.w.
/* 0020 */ 0x1f, 0x28, 0xbf, 0x3e, 0xc3, 0x1f, 0x07, 0x4f, 0x62, 0x9e, 0x2f, 0xd4, 0xef, 0x7f, 0xaf, 0x5e,  // .(.>...Ob./....^
/* 0030 */ 0x07, 0x4f, 0xee, 0x11, 0x4f, 0xbd, 0xe9, 0xc3, 0x5a, 0x67, 0x68, 0x4c, 0xf3, 0x36, 0xb3, 0xcd,  // .O..O...ZghL.6..
/* 0040 */ 0xd8, 0x1a, 0xab, 0xbc, 0x59, 0x51, 0xbb, 0x9a, 0x03, 0xdf, 0x4e, 0x2f, 0xed, 0xf7, 0xc8, 0x7c,  // ....YQ....N/...|
/* 0050 */ 0xd6, 0xf9, 0x75, 0x9d, 0x4d, 0x3b, 0x16, 0xe5, 0x6e, 0x1d, 0x9f, 0x89, 0xa3, 0x2c, 0x2e, 0x47,  // ..u.M;..n....,.G
/* 0060 */ 0x8d, 0x8c, 0xf3, 0xde, 0x42, 0xa5, 0x22, 0x04, 0x20, 0xad, 0x88, 0xfa, 0xfb, 0x73, 0x7a, 0x14,  // ....B.". ....sz.
/* 0070 */ 0xbd, 0x20, 0xef, 0xb4, 0x7b, 0x75, 0x9d, 0x4f, 0xac, 0x0d, 0x13, 0x98, 0x72, 0x06, 0x6b, 0xa7,  // . ..{u.O....r.k.
/* 0080 */ 0xf1, 0x3a, 0xcd, 0x16, 0xdd, 0x43, 0xee, 0x90, 0xfb,                                            // .:...C...
    };
    
    RED_TEST_MESSAGE("+++++++++++++ Client receive NTLM pubauthkey -> reply with NTLM TS Credentials");
    auto v2 = ntlm_client.authenticate_next(server_answer_pubauthkey);
    RED_CHECK(credssp::State::Finish == ntlm_client.state);
    RED_CHECK_HMEM(v2, expected_tscredentials);
    RED_TEST_MESSAGE("\n");
}



RED_AUTO_TEST_CASE(TestNlaserver)
{
    RED_TEST_MESSAGE("==================== TestNlaserver ===================");
    LCGRandom rand(0);
    LCGTime timeobj;

    auto get_password = [&](bytes_view user_av, bytes_view domain_av, std::vector<uint8_t> & password_array){
            auto user_str = ::UTF16toUTF8(user_av);
            auto domain_str = ::UTF16toUTF8(domain_av);
            RED_TEST_MESSAGE("+++++++++++++ Password Callback" 
                          << " user (" << user_av.size() << "):" << user_str.c_str()
                          << " domain (" << domain_av.size() << "):" << domain_str.c_str());
            RED_CHECK(user_str == std::string("Ulysse"));
            RED_CHECK(domain_str == std::string("Ithaque"));
            password_array = ::UTF8toUTF16("Pénélope"_av);
            return PasswordCallback::Ok;
        }; 

    auto public_key = std::vector<uint8_t>{} << bytes_view("1245789652325415"_av); 
    
    NtlmServer ntlm_server(false, false, ""_av, "WIN7"_av,"WIN7"_av,"win7"_av,"win7"_av,public_key, 
                          {}, rand, timeobj, get_password, 6, 
                          NtlmVersion{WINDOWS_MAJOR_VERSION_6, WINDOWS_MINOR_VERSION_1, 7601, NTLMSSP_REVISION_W2K3}, true, true);

    std::vector<uint8_t> negotiate{ 
       0x30, 0x37, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa1, 0x30, 0x30, 0x2e, 0x30, 0x2c, 0xa0, 0x2a, 0x04, //07......00.0,.*. !
       0x28, 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb7, 0x82, 0x08, //(NTLMSSP........ !
       0xe2, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, //.....(.......(.. !
       0x00, 0x06, 0x01, 0xb1, 0x1d, 0x00, 0x00, 0x00, 0x0f                                            //......... !
    };
    // Recv negotiate, send challenge
    std::vector<uint8_t> challenge{
        0x30, 0x81, 0x88, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa1, 0x81, 0x80, 0x30, 0x7e, 0x30, 0x7c, 0xa0, //0..........0~0|. !
        0x7a, 0x04, 0x78, 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, //z.xNTLMSSP...... !
        0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0xb7, 0x82, 0x08, 0xe2, 0xb8, 0x6c, 0xda, 0xa6, 0xf0, //...8........l... !
        0xf6, 0x30, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x38, //.0.........@.@.8 !
        0x00, 0x00, 0x00, 0x06, 0x01, 0xb1, 0x1d, 0x00, 0x00, 0x00, 0x0f, 0x01, 0x00, 0x08, 0x00, 0x57, //...............W !
        0x00, 0x49, 0x00, 0x4e, 0x00, 0x37, 0x00, 0x02, 0x00, 0x08, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, //.I.N.7.....W.I.N !
        0x00, 0x37, 0x00, 0x03, 0x00, 0x08, 0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x37, 0x00, 0x04, //.7.....w.i.n.7.. !
        0x00, 0x08, 0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x37, 0x00, 0x07, 0x00, 0x08, 0x00, 0x67, //...w.i.n.7.....g !
        0x95, 0x0e, 0x5a, 0x4e, 0x56, 0x76, 0xd6, 0x00, 0x00, 0x00, 0x00                                //..ZNVv..... !]
    };

    RED_TEST_MESSAGE("+++++++++++++ Server receive NTLM Negotiate --> answer with NTLM Challenge");

    RED_CHECK_HMEM(challenge, ntlm_server.authenticate_next(negotiate));
    RED_CHECK_EQUAL(credssp::State::Cont, ntlm_server.state);

    std::vector<uint8_t> authenticate{ 
        0x30, 0x82, 0x01, 0x59, 0xa0, 0x03, 0x02, 0x01, 0x02, 0xa1, 0x82, 0x01, 0x2c, 0x30, 0x82, 0x01, //0..Y........,0.. !
        0x28, 0x30, 0x82, 0x01, 0x24, 0xa0, 0x82, 0x01, 0x20, 0x04, 0x82, 0x01, 0x1c, 0x4e, 0x54, 0x4c, //(0..$... ....NTL !
        0x4d, 0x53, 0x53, 0x50, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00, 0x58, 0x00, 0x00, //MSSP.........X.. !
        0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0xe0, 0x00, 0x00, //.p.p.p.......... !
        0x00, 0x0c, 0x00, 0x0c, 0x00, 0xee, 0x00, 0x00, 0x00, 0x12, 0x00, 0x12, 0x00, 0xfa, 0x00, 0x00, //................ !
        0x00, 0x10, 0x00, 0x10, 0x00, 0x0c, 0x01, 0x00, 0x00, 0x35, 0xa2, 0x88, 0xe2, 0x06, 0x01, 0xb1, //.........5...... !
        0x1d, 0x00, 0x00, 0x00, 0x0f, 0x2e, 0x5b, 0xe2, 0x1f, 0x57, 0x20, 0x79, 0xa8, 0x5c, 0x70, 0x2d, //......[..W y..p- !
        0x3d, 0xb6, 0x46, 0x81, 0x9a, 0x34, 0xbe, 0xb5, 0x6e, 0xce, 0xec, 0x0a, 0x50, 0x2d, 0x29, 0x63, //=.F..4..n...P-)c !
        0x7f, 0xcc, 0x5e, 0xe7, 0x18, 0xb8, 0x6c, 0xda, 0xa6, 0xf0, 0xf6, 0x30, 0x8d, 0xa6, 0x41, 0xcc, //.^...l....0..A. !
        0x7a, 0x52, 0x8e, 0x7a, 0xb3, 0x06, 0x7d, 0x0b, 0xe0, 0x00, 0xd5, 0xf6, 0x13, 0x01, 0x01, 0x00, //zR.z..}......... !
        0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0x95, 0x0e, 0x5a, 0x4e, 0x56, 0x76, 0xd6, 0xb8, 0x6c, 0xda, //.....g..ZNVv..l. !
        0xa6, 0xf0, 0xf6, 0x30, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x57, 0x00, 0x49, //...0.........W.I !
        0x00, 0x4e, 0x00, 0x37, 0x00, 0x02, 0x00, 0x08, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x37, //.N.7.....W.I.N.7 !
        0x00, 0x03, 0x00, 0x08, 0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x37, 0x00, 0x04, 0x00, 0x08, //.....w.i.n.7.... !
        0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x37, 0x00, 0x07, 0x00, 0x08, 0x00, 0x67, 0x95, 0x0e, //.w.i.n.7.....g.. !
        0x5a, 0x4e, 0x56, 0x76, 0xd6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x00, 0x74, //ZNVv.........I.t !
        0x00, 0x68, 0x00, 0x61, 0x00, 0x71, 0x00, 0x75, 0x00, 0x65, 0x00, 0x55, 0x00, 0x6c, 0x00, 0x79, //.h.a.q.u.e.U.l.y !
        0x00, 0x73, 0x00, 0x73, 0x00, 0x65, 0x00, 0x54, 0x00, 0xe9, 0x00, 0x6c, 0x00, 0xe9, 0x00, 0x6d, //.s.s.e.T...l...m !
        0x00, 0x61, 0x00, 0x71, 0x00, 0x75, 0x00, 0x65, 0x00, 0x44, 0xbc, 0x4d, 0x7a, 0x13, 0x3f, 0x6b, //.a.q.u.e.D.Mz.?k !
        0x81, 0xdb, 0x1d, 0x2b, 0x7b, 0xbf, 0x1e, 0x18, 0x0f, 0xa3, 0x22, 0x04, 0x20, 0x01, 0x00, 0x00, //...+{.....". ... !
        0x00, 0x89, 0xe2, 0xda, 0x48, 0x17, 0x29, 0xb5, 0x08, 0x00, 0x00, 0x00, 0x00, 0x20, 0x59, 0x27, //....H.)...... Y' !
        0x3f, 0x08, 0xd0, 0xc2, 0xe4, 0x75, 0x66, 0x10, 0x49, 0x7b, 0xbd, 0x8d, 0xf7                    //?....uf.I{... !]
    };

    std::vector<uint8_t> pubauthkey{
        0x30, 0x29, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa3, 0x22, 0x04, 0x20, 0x01, 0x00, 0x00, 0x00, 0xa2, //0)......". .....
        0xe0, 0x5b, 0x50, 0x97, 0x8e, 0x99, 0x27, 0x00, 0x00, 0x00, 0x00, 0xdc, 0xa7, 0x0b, 0xfe, 0x37, //.[P...'........7
        0x45, 0x3d, 0x1b, 0x05, 0x15, 0xce, 0x56, 0x0a, 0x54, 0xa1, 0xf1,                     //E=....V.T..
    };

    RED_TEST_MESSAGE("+++++++++++++ Server receive NTLM Authenticate --> answer with NTLM Pubauthkey");
    RED_CHECK_HMEM(pubauthkey, ntlm_server.authenticate_next(authenticate));
    
    RED_CHECK_EQUAL(credssp::State::Cont, ntlm_server.state);
    
    std::vector<uint8_t>  ts_credentials{
        0x30, 0x5c, 0xa0, 0x03, 0x02, 0x01, 0x02, 0xa2, 0x55, 0x04, 0x53, 0x01, 0x00, 0x00, 0x00, 0xaf, // 0.......U.S.....
        0xad, 0x46, 0x2a, 0x6a, 0x9d, 0xf7, 0x88, 0x01, 0x00, 0x00, 0x00, 0xd5, 0x4f, 0xc8, 0xd0, 0xbd, // .F*j........O...
        0x89, 0x60, 0xe0, 0x71, 0x60, 0x31, 0x7a, 0xcc, 0xec, 0xc5, 0xbf, 0x23, 0x4b, 0xe5, 0xf9, 0xa5, // .`.q`1z....#K...
        0x8c, 0x21, 0x66, 0xa6, 0x78, 0xda, 0xd1, 0xbd, 0xef, 0xa4, 0xfd, 0x47, 0xa6, 0xf1, 0x56, 0xa5, // .!f.x......G..V.
        0xd9, 0x52, 0x72, 0x92, 0xfa, 0x41, 0xa5, 0xb4, 0x9d, 0x94, 0xfb, 0x0e, 0xe2, 0x61, 0xba, 0xfc, // .Rr..A.......a..
        0xd5, 0xf3, 0xa7, 0xb5, 0x33, 0xd5, 0x62, 0x8d, 0x93, 0x18, 0x54, 0x39, 0x8a, 0xe7              // ....3.b...T9..
    };

    RED_TEST_MESSAGE("+++++++++++++ Server receive NTLM TS Credentials --> NTLM Finished");
    
    // Recv ts_credential, -> finished
    RED_CHECK_EQUAL(ntlm_server.authenticate_next(ts_credentials).size(), 0);
    RED_CHECK_EQUAL(ntlm_server.state, credssp::State::Finish);
    RED_TEST_MESSAGE("\n");
}


RED_AUTO_TEST_CASE(TestClientToServerInteraction)
{
    RED_TEST_MESSAGE("==================== TestClientToServerInteraction ===================");

    LCGRandom rand_server(0);
    LCGTime timeobj_server;

    auto get_password = [&](bytes_view user_av, bytes_view domain_av, std::vector<uint8_t> & password_array){
            auto user_str = ::UTF16toUTF8(user_av);
            auto domain_str = ::UTF16toUTF8(domain_av);
            RED_TEST_MESSAGE("+++++++++++++ Password Callback" 
                          << " user (" << user_av.size() << "):" << user_str.c_str()
                          << " domain (" << domain_av.size() << "):" << domain_str.c_str());
            RED_CHECK(user_str == std::string("Ulysse"));
            RED_CHECK(domain_str == std::string("Ithaque"));
            password_array = ::UTF8toUTF16("Pénélope"_av);
            return PasswordCallback::Ok;
        }; 

    auto public_key = std::vector<uint8_t>{} << bytes_view("1245789652325415"_av); 
    NtlmServer ntlm_server(false, false, ""_av, "WIN7"_av,"WIN7"_av,"win7"_av,"win7"_av,public_key, 
                           {MsvAvNbDomainName,MsvAvNbComputerName,MsvAvDnsDomainName,MsvAvDnsComputerName},
                           rand_server, timeobj_server, get_password, 6, 
                           NtlmVersion{WINDOWS_MAJOR_VERSION_6, WINDOWS_MINOR_VERSION_1, 7601, NTLMSSP_REVISION_W2K3},
                           true, true);

    std::string user("Ulysse");
    std::string domain("Ithaque");
    uint8_t pass[] = "Pénélope";
    uint8_t host[] = "Télémaque";
    LCGRandom rand(0);
    LCGTime timeobj;
    std::string extra_message;
    rdpClientNTLM ntlm_client(user, domain, pass, host, "107.0.0.1", public_key, false, rand, timeobj);

    std::vector<uint8_t> expected_negotiate{
/* 0000 */ 0x30, 0x37, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa1, 0x30, 0x30, 0x2e, 0x30, 0x2c, 0xa0, 0x2a, 0x04,  // 07......00.0,.*.
/* 0010 */ 0x28, 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb7, 0x82, 0x08,  // (NTLMSSP........
/* 0020 */ 0xe2, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00,  // .....(.......(..
/* 0030 */ 0x00, 0x06, 0x01, 0xb1, 0x1d, 0x00, 0x00, 0x00, 0x0f,  
    };

    RED_TEST_MESSAGE("+++++++++++++ Client sending NTLM Negotiate");

    auto negotiate_message = ntlm_client.authenticate_start();
    RED_CHECK_HMEM(negotiate_message, expected_negotiate);

    RED_TEST_MESSAGE("+++++++++++++ Server receive NTLM Negotiate --> answer with NTLM Challenge");

//    std::vector<uint8_t> challenge{
//    /* 0000 */ 0x30, 0x81, 0x88, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa1, 0x81, 0x80, 0x30, 0x7e, 0x30, 0x7c, 0xa0,  // 0..........0~0|.
//    /* 0010 */ 0x7a, 0x04, 0x78, 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00,  // z.xNTLMSSP......
//    /* 0020 */ 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0xb7, 0x82, 0x08, 0xe2, 0xb8, 0x6c, 0xda, 0xa6, 0xf0,  // ...8........l...
//    /* 0030 */ 0xf6, 0x30, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x38,  // .0.........@.@.8
//    /* 0040 */ 0x00, 0x00, 0x00, 0x05, 0x01, 0x28, 0x0a, 0x00, 0x00, 0x00, 0x0f, 0x01, 0x00, 0x08, 0x00, 0x57,  // .....(.........W
//    /* 0050 */ 0x00, 0x49, 0x00, 0x4e, 0x00, 0x37, 0x00, 0x02, 0x00, 0x08, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e,  // .I.N.7.....W.I.N
//    /* 0060 */ 0x00, 0x37, 0x00, 0x03, 0x00, 0x08, 0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x37, 0x00, 0x04,  // .7.....w.i.n.7..
//    /* 0070 */ 0x00, 0x08, 0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x37, 0x00, 0x07, 0x00, 0x08, 0x00, 0x67,  // ...w.i.n.7.....g
//    /* 0080 */ 0x95, 0x0e, 0x5a, 0x4e, 0x56, 0x76, 0xd6, 0x00, 0x00, 0x00, 0x00,                                // ..ZNVv.....
//    };

//    RED_CHECK_HMEM(challenge, ntlm_server.authenticate_next(negotiate_message));
//    RED_CHECK_EQUAL(credssp::State::Cont, ntlm_server.state);

//    std::vector<uint8_t> expected_authenticate{
//        0x30, 0x82, 0x01, 0x59, 0xa0, 0x03, 0x02, 0x01, 0x02, 0xa1, 0x82, 0x01, 0x2c, 0x30, 0x82, 0x01, //0..Y........,0.. !
//        0x28, 0x30, 0x82, 0x01, 0x24, 0xa0, 0x82, 0x01, 0x20, 0x04, 0x82, 0x01, 0x1c, 0x4e, 0x54, 0x4c, //(0..$... ....NTL !
//        0x4d, 0x53, 0x53, 0x50, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00, 0x58, 0x00, 0x00, //MSSP.........X.. !
//        0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0xe0, 0x00, 0x00, //.p.p.p.......... !
//        0x00, 0x0c, 0x00, 0x0c, 0x00, 0xee, 0x00, 0x00, 0x00, 0x12, 0x00, 0x12, 0x00, 0xfa, 0x00, 0x00, //................ !
//        0x00, 0x10, 0x00, 0x10, 0x00, 0x0c, 0x01, 0x00, 0x00, 0x35, 0xa2, 0x88, 0xe2, 0x06, 0x01, 0xb1, //.........5...... !
//        0x1d, 0x00, 0x00, 0x00, 0x0f, 0x2e, 0x5b, 0xe2, 0x1f, 0x57, 0x20, 0x79, 0xa8, 0x5c, 0x70, 0x2d, //......[..W y..p- !
//        0x3d, 0xb6, 0x46, 0x81, 0x9a, 0x34, 0xbe, 0xb5, 0x6e, 0xce, 0xec, 0x0a, 0x50, 0x2d, 0x29, 0x63, //=.F..4..n...P-)c !
//        0x7f, 0xcc, 0x5e, 0xe7, 0x18, 0xb8, 0x6c, 0xda, 0xa6, 0xf0, 0xf6, 0x30, 0x8d, 0xa6, 0x41, 0xcc, //.^...l....0..A. !
//        0x7a, 0x52, 0x8e, 0x7a, 0xb3, 0x06, 0x7d, 0x0b, 0xe0, 0x00, 0xd5, 0xf6, 0x13, 0x01, 0x01, 0x00, //zR.z..}......... !
//        0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0x95, 0x0e, 0x5a, 0x4e, 0x56, 0x76, 0xd6, 0xb8, 0x6c, 0xda, //.....g..ZNVv..l. !
//        0xa6, 0xf0, 0xf6, 0x30, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x57, 0x00, 0x49, //...0.........W.I !
//        0x00, 0x4e, 0x00, 0x37, 0x00, 0x02, 0x00, 0x08, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x37, //.N.7.....W.I.N.7 !
//        0x00, 0x03, 0x00, 0x08, 0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x37, 0x00, 0x04, 0x00, 0x08, //.....w.i.n.7.... !
//        0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x37, 0x00, 0x07, 0x00, 0x08, 0x00, 0x67, 0x95, 0x0e, //.w.i.n.7.....g.. !
//        0x5a, 0x4e, 0x56, 0x76, 0xd6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x00, 0x74, //ZNVv.........I.t !
//        0x00, 0x68, 0x00, 0x61, 0x00, 0x71, 0x00, 0x75, 0x00, 0x65, 0x00, 0x55, 0x00, 0x6c, 0x00, 0x79, //.h.a.q.u.e.U.l.y !
//        0x00, 0x73, 0x00, 0x73, 0x00, 0x65, 0x00, 0x54, 0x00, 0xe9, 0x00, 0x6c, 0x00, 0xe9, 0x00, 0x6d, //.s.s.e.T...l...m !
//        0x00, 0x61, 0x00, 0x71, 0x00, 0x75, 0x00, 0x65, 0x00, 0x44, 0xbc, 0x4d, 0x7a, 0x13, 0x3f, 0x6b, //.a.q.u.e.D.Mz.?k !
//        0x81, 0xdb, 0x1d, 0x2b, 0x7b, 0xbf, 0x1e, 0x18, 0x0f, 0xa3, 0x22, 0x04, 0x20, 0x01, 0x00, 0x00, //...+{.....". ... !
//        0x00, 0x89, 0xe2, 0xda, 0x48, 0x17, 0x29, 0xb5, 0x08, 0x00, 0x00, 0x00, 0x00, 0x20, 0x59, 0x27, //....H.)...... Y' !
//        0x3f, 0x08, 0xd0, 0xc2, 0xe4, 0x75, 0x66, 0x10, 0x49, 0x7b, 0xbd, 0x8d, 0xf7                    //?....uf.I{... !]
//    };

//    RED_TEST_MESSAGE("+++++++++++++ Client receive NTLM Challenge -> reply with NTLM Authenticate");

//    RED_CHECK_HMEM(ntlm_client.authenticate_next(challenge), expected_authenticate);
//    RED_CHECK(credssp::State::Cont == ntlm_client.state);



}

// Tpdu class is used to extract one Credssp packet from stream in authentication sequence
// and afterward to commute to extraction of an RDP TPKT (PDU)
RED_AUTO_TEST_CASE(TestTpdu)
{
    RED_TEST_MESSAGE("==================== TestTpdu (extraction of full packets - Credssp or TPKT - from input stream) ===================");

    RED_TEST_PASSPOINT();
    auto client =
        // negotiate
    "\x30\x37\xa0\x03\x02\x01\x06\xa1\x30\x30\x2e\x30\x2c\xa0\x2a\x04" //07......00.0,.*. !
    "\x28\x4e\x54\x4c\x4d\x53\x53\x50\x00\x01\x00\x00\x00\xb7\x82\x08" //(NTLMSSP........ !
    "\xe2\x00\x00\x00\x00\x28\x00\x00\x00\x00\x00\x00\x00\x28\x00\x00" //.....(.......(.. !
    "\x00\x06\x01\xb1\x1d\x00\x00\x00\x0f" //......... !
        // authenticate + pubauthkey
    "\x30\x82\x01\x59\xa0\x03\x02\x01\x02\xa1\x82\x01\x2c\x30\x82\x01" //0..Y........,0.. !
    "\x28\x30\x82\x01\x24\xa0\x82\x01\x20\x04\x82\x01\x1c\x4e\x54\x4c" //(0..$... ....NTL !
    "\x4d\x53\x53\x50\x00\x03\x00\x00\x00\x18\x00\x18\x00\x58\x00\x00" //MSSP.........X.. !
    "\x00\x70\x00\x70\x00\x70\x00\x00\x00\x0e\x00\x0e\x00\xe0\x00\x00" //.p.p.p.......... !
    "\x00\x0c\x00\x0c\x00\xee\x00\x00\x00\x12\x00\x12\x00\xfa\x00\x00" //................ !
    "\x00\x10\x00\x10\x00\x0c\x01\x00\x00\x35\xa2\x88\xe2\x06\x01\xb1" //.........5...... !
    "\x1d\x00\x00\x00\x0f\x2e\x5b\xe2\x1f\x57\x20\x79\xa8\x5c\x70\x2d" //......[..W y..p- !
    "\x3d\xb6\x46\x81\x9a\x34\xbe\xb5\x6e\xce\xec\x0a\x50\x2d\x29\x63" //=.F..4..n...P-)c !
    "\x7f\xcc\x5e\xe7\x18\xb8\x6c\xda\xa6\xf0\xf6\x30\x8d\xa6\x41\xcc" //.^...l....0..A. !
    "\x7a\x52\x8e\x7a\xb3\x06\x7d\x0b\xe0\x00\xd5\xf6\x13\x01\x01\x00" //zR.z..}......... !
    "\x00\x00\x00\x00\x00\x67\x95\x0e\x5a\x4e\x56\x76\xd6\xb8\x6c\xda" //.....g..ZNVv..l. !
    "\xa6\xf0\xf6\x30\x8d\x00\x00\x00\x00\x01\x00\x08\x00\x57\x00\x49" //...0.........W.I !
    "\x00\x4e\x00\x37\x00\x02\x00\x08\x00\x57\x00\x49\x00\x4e\x00\x37" //.N.7.....W.I.N.7 !
    "\x00\x03\x00\x08\x00\x77\x00\x69\x00\x6e\x00\x37\x00\x04\x00\x08" //.....w.i.n.7.... !
    "\x00\x77\x00\x69\x00\x6e\x00\x37\x00\x07\x00\x08\x00\x67\x95\x0e" //.w.i.n.7.....g.. !
    "\x5a\x4e\x56\x76\xd6\x00\x00\x00\x00\x00\x00\x00\x00\x49\x00\x74" //ZNVv.........I.t !
    "\x00\x68\x00\x61\x00\x71\x00\x75\x00\x65\x00\x55\x00\x6c\x00\x79" //.h.a.q.u.e.U.l.y !
    "\x00\x73\x00\x73\x00\x65\x00\x54\x00\xe9\x00\x6c\x00\xe9\x00\x6d" //.s.s.e.T...l...m !
    "\x00\x61\x00\x71\x00\x75\x00\x65\x00\x44\xbc\x4d\x7a\x13\x3f\x6b" //.a.q.u.e.D.Mz.?k !
    "\x81\xdb\x1d\x2b\x7b\xbf\x1e\x18\x0f\xa3\x22\x04\x20\x01\x00\x00" //...+{.....". ... !
    "\x00\x89\xe2\xda\x48\x17\x29\xb5\x08\x00\x00\x00\x00\x20\x59\x27" //....H.)...... Y' !
    "\x3f\x08\xd0\xc2\xe4\x75\x66\x10\x49\x7b\xbd\x8d\xf7" //?....uf.I{... !]

        // ts credentials (authinfo)
/* 0000 */ "\x30\x5c\xa0\x03\x02\x01\x02\xa2\x55\x04\x53\x01\x00\x00\x00\xaf" // 0.......U.S.....
/* 0010 */ "\xad\x46\x2a\x6a\x9d\xf7\x88\x01\x00\x00\x00\xd5\x4f\xc8\xd0\xbd" // .F*j........O...
/* 0020 */ "\x89\x60\xe0\x71\x60\x31\x7a\xcc\xec\xc5\xbf\x23\x4b\xe5\xf9\xa5" // .`.q`1z....#K...
/* 0030 */ "\x8c\x21\x66\xa6\x78\xda\xd1\xbd\xef\xa4\xfd\x47\xa6\xf1\x56\xa5" // .!f.x......G..V.
/* 0040 */ "\xd9\x52\x72\x92\xfa\x41\xa5\xb4\x9d\x94\xfb\x0e\xe2\x61\xba\xfc" // .Rr..A.......a..
/* 0050 */ "\xd5\xf3\xa7\xb5\x33\xd5\x62\x8d\x93\x18\x54\x39\x8a\xe7"         // ....3.b...T9..
    ""_av
        ;

    auto server =
        // challenge
    "\x30\x81\x88\xa0\x03\x02\x01\x06\xa1\x81\x80\x30\x7e\x30\x7c\xa0" //0..........0~0|. !
    "\x7a\x04\x78\x4e\x54\x4c\x4d\x53\x53\x50\x00\x02\x00\x00\x00\x00" //z.xNTLMSSP...... !
    "\x00\x00\x00\x38\x00\x00\x00\xb7\x82\x08\xe2\xb8\x6c\xda\xa6\xf0" //...8........l... !
    "\xf6\x30\x8d\x00\x00\x00\x00\x00\x00\x00\x00\x40\x00\x40\x00\x38" //.0.........@.@.8 !
    "\x00\x00\x00\x06\x01\xb1\x1d\x00\x00\x00\x0f\x01\x00\x08\x00\x57" //...............W !
    "\x00\x49\x00\x4e\x00\x37\x00\x02\x00\x08\x00\x57\x00\x49\x00\x4e" //.I.N.7.....W.I.N !
    "\x00\x37\x00\x03\x00\x08\x00\x77\x00\x69\x00\x6e\x00\x37\x00\x04" //.7.....w.i.n.7.. !
    "\x00\x08\x00\x77\x00\x69\x00\x6e\x00\x37\x00\x07\x00\x08\x00\x67" //...w.i.n.7.....g !
    "\x95\x0e\x5a\x4e\x56\x76\xd6\x00\x00\x00\x00" //..ZNVv..... !]
//         // pubauthkey
/* 0000 */ "\x30\x29\xa0\x03\x02\x01\x06\xa3\x22\x04\x20\x01\x00\x00\x00\xa2" //0)......". .....
/* 0010 */ "\xe0\x5b\x50\x97\x8e\x99\x27\x00\x00\x00\x00\xdc\xa7\x0b\xfe\x37" //.[P...'........7
/* 0020 */ "\x45\x3d\x1b\x05\x15\xce\x56\x0a\x54\xa1\xf1"                     //E=....V.T..
    ""_av
        ;

    TestTransport logtrans(client, server);
    TpduBuffer buf;
    buf.load_data(logtrans);
    RED_CHECK_EQUAL(buf.remaining(), 500);
    RED_CHECK_EQUAL(true, buf.next(TpduBuffer::CREDSSP));

    std::vector<uint8_t> negotiate{ 
       0x30, 0x37, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa1, 0x30, 0x30, 0x2e, 0x30, 0x2c, 0xa0, 0x2a, 0x04, //07......00.0,.*. !
       0x28, 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb7, 0x82, 0x08, //(NTLMSSP........ !
       0xe2, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, //.....(.......(.. !
       0x00, 0x06, 0x01, 0xb1, 0x1d, 0x00, 0x00, 0x00, 0x0f                                            //......... !
    };

    RED_CHECK_EQUAL(buf.remaining(), 500);
    RED_CHECK_HMEM(negotiate, buf.current_pdu_buffer());

    std::vector<uint8_t> challenge{
        0x30, 0x81, 0x88, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa1, 0x81, 0x80, 0x30, 0x7e, 0x30, 0x7c, 0xa0, //0..........0~0|. !
        0x7a, 0x04, 0x78, 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, //z.xNTLMSSP...... !
        0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0xb7, 0x82, 0x08, 0xe2, 0xb8, 0x6c, 0xda, 0xa6, 0xf0, //...8........l... !
        0xf6, 0x30, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x40, 0x00, 0x38, //.0.........@.@.8 !
        0x00, 0x00, 0x00, 0x06, 0x01, 0xb1, 0x1d, 0x00, 0x00, 0x00, 0x0f, 0x01, 0x00, 0x08, 0x00, 0x57, //...............W !
        0x00, 0x49, 0x00, 0x4e, 0x00, 0x37, 0x00, 0x02, 0x00, 0x08, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, //.I.N.7.....W.I.N !
        0x00, 0x37, 0x00, 0x03, 0x00, 0x08, 0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x37, 0x00, 0x04, //.7.....w.i.n.7.. !
        0x00, 0x08, 0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x37, 0x00, 0x07, 0x00, 0x08, 0x00, 0x67, //...w.i.n.7.....g !
        0x95, 0x0e, 0x5a, 0x4e, 0x56, 0x76, 0xd6, 0x00, 0x00, 0x00, 0x00                                //..ZNVv..... !]
    };

    logtrans.send(challenge);

    std::vector<uint8_t> authenticate{ 
        0x30, 0x82, 0x01, 0x59, 0xa0, 0x03, 0x02, 0x01, 0x02, 0xa1, 0x82, 0x01, 0x2c, 0x30, 0x82, 0x01, //0..Y........,0.. !
        0x28, 0x30, 0x82, 0x01, 0x24, 0xa0, 0x82, 0x01, 0x20, 0x04, 0x82, 0x01, 0x1c, 0x4e, 0x54, 0x4c, //(0..$... ....NTL !
        0x4d, 0x53, 0x53, 0x50, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00, 0x58, 0x00, 0x00, //MSSP.........X.. !
        0x00, 0x70, 0x00, 0x70, 0x00, 0x70, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0xe0, 0x00, 0x00, //.p.p.p.......... !
        0x00, 0x0c, 0x00, 0x0c, 0x00, 0xee, 0x00, 0x00, 0x00, 0x12, 0x00, 0x12, 0x00, 0xfa, 0x00, 0x00, //................ !
        0x00, 0x10, 0x00, 0x10, 0x00, 0x0c, 0x01, 0x00, 0x00, 0x35, 0xa2, 0x88, 0xe2, 0x06, 0x01, 0xb1, //.........5...... !
        0x1d, 0x00, 0x00, 0x00, 0x0f, 0x2e, 0x5b, 0xe2, 0x1f, 0x57, 0x20, 0x79, 0xa8, 0x5c, 0x70, 0x2d, //......[..W y..p- !
        0x3d, 0xb6, 0x46, 0x81, 0x9a, 0x34, 0xbe, 0xb5, 0x6e, 0xce, 0xec, 0x0a, 0x50, 0x2d, 0x29, 0x63, //=.F..4..n...P-)c !
        0x7f, 0xcc, 0x5e, 0xe7, 0x18, 0xb8, 0x6c, 0xda, 0xa6, 0xf0, 0xf6, 0x30, 0x8d, 0xa6, 0x41, 0xcc, //.^...l....0..A. !
        0x7a, 0x52, 0x8e, 0x7a, 0xb3, 0x06, 0x7d, 0x0b, 0xe0, 0x00, 0xd5, 0xf6, 0x13, 0x01, 0x01, 0x00, //zR.z..}......... !
        0x00, 0x00, 0x00, 0x00, 0x00, 0x67, 0x95, 0x0e, 0x5a, 0x4e, 0x56, 0x76, 0xd6, 0xb8, 0x6c, 0xda, //.....g..ZNVv..l. !
        0xa6, 0xf0, 0xf6, 0x30, 0x8d, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x08, 0x00, 0x57, 0x00, 0x49, //...0.........W.I !
        0x00, 0x4e, 0x00, 0x37, 0x00, 0x02, 0x00, 0x08, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x37, //.N.7.....W.I.N.7 !
        0x00, 0x03, 0x00, 0x08, 0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x37, 0x00, 0x04, 0x00, 0x08, //.....w.i.n.7.... !
        0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x37, 0x00, 0x07, 0x00, 0x08, 0x00, 0x67, 0x95, 0x0e, //.w.i.n.7.....g.. !
        0x5a, 0x4e, 0x56, 0x76, 0xd6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x49, 0x00, 0x74, //ZNVv.........I.t !
        0x00, 0x68, 0x00, 0x61, 0x00, 0x71, 0x00, 0x75, 0x00, 0x65, 0x00, 0x55, 0x00, 0x6c, 0x00, 0x79, //.h.a.q.u.e.U.l.y !
        0x00, 0x73, 0x00, 0x73, 0x00, 0x65, 0x00, 0x54, 0x00, 0xe9, 0x00, 0x6c, 0x00, 0xe9, 0x00, 0x6d, //.s.s.e.T...l...m !
        0x00, 0x61, 0x00, 0x71, 0x00, 0x75, 0x00, 0x65, 0x00, 0x44, 0xbc, 0x4d, 0x7a, 0x13, 0x3f, 0x6b, //.a.q.u.e.D.Mz.?k !
        0x81, 0xdb, 0x1d, 0x2b, 0x7b, 0xbf, 0x1e, 0x18, 0x0f, 0xa3, 0x22, 0x04, 0x20, 0x01, 0x00, 0x00, //...+{.....". ... !
        0x00, 0x89, 0xe2, 0xda, 0x48, 0x17, 0x29, 0xb5, 0x08, 0x00, 0x00, 0x00, 0x00, 0x20, 0x59, 0x27, //....H.)...... Y' !
        0x3f, 0x08, 0xd0, 0xc2, 0xe4, 0x75, 0x66, 0x10, 0x49, 0x7b, 0xbd, 0x8d, 0xf7                    //?....uf.I{... !]
    };

    RED_CHECK_EQUAL(true, buf.next(TpduBuffer::CREDSSP));
    RED_CHECK_EQUAL(buf.remaining(), 443);
    RED_CHECK_HMEM(authenticate, buf.current_pdu_buffer());

    std::vector<uint8_t> pubauthkey{
        0x30, 0x29, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa3, 0x22, 0x04, 0x20, 0x01, 0x00, 0x00, 0x00, 0xa2, //0)......". .....
        0xe0, 0x5b, 0x50, 0x97, 0x8e, 0x99, 0x27, 0x00, 0x00, 0x00, 0x00, 0xdc, 0xa7, 0x0b, 0xfe, 0x37, //.[P...'........7
        0x45, 0x3d, 0x1b, 0x05, 0x15, 0xce, 0x56, 0x0a, 0x54, 0xa1, 0xf1,                     //E=....V.T..
    };

    logtrans.send(pubauthkey);

    std::vector<uint8_t>  ts_credentials{
        0x30, 0x5c, 0xa0, 0x03, 0x02, 0x01, 0x02, 0xa2, 0x55, 0x04, 0x53, 0x01, 0x00, 0x00, 0x00, 0xaf, // 0.......U.S.....
        0xad, 0x46, 0x2a, 0x6a, 0x9d, 0xf7, 0x88, 0x01, 0x00, 0x00, 0x00, 0xd5, 0x4f, 0xc8, 0xd0, 0xbd, // .F*j........O...
        0x89, 0x60, 0xe0, 0x71, 0x60, 0x31, 0x7a, 0xcc, 0xec, 0xc5, 0xbf, 0x23, 0x4b, 0xe5, 0xf9, 0xa5, // .`.q`1z....#K...
        0x8c, 0x21, 0x66, 0xa6, 0x78, 0xda, 0xd1, 0xbd, 0xef, 0xa4, 0xfd, 0x47, 0xa6, 0xf1, 0x56, 0xa5, // .!f.x......G..V.
        0xd9, 0x52, 0x72, 0x92, 0xfa, 0x41, 0xa5, 0xb4, 0x9d, 0x94, 0xfb, 0x0e, 0xe2, 0x61, 0xba, 0xfc, // .Rr..A.......a..
        0xd5, 0xf3, 0xa7, 0xb5, 0x33, 0xd5, 0x62, 0x8d, 0x93, 0x18, 0x54, 0x39, 0x8a, 0xe7              // ....3.b...T9..
    };

    RED_CHECK_EQUAL(true, buf.next(TpduBuffer::CREDSSP));
    RED_CHECK_EQUAL(buf.remaining(), 94);

    RED_CHECK_HMEM(ts_credentials, buf.current_pdu_buffer());
    RED_CHECK_EQUAL(false, buf.next(TpduBuffer::CREDSSP));
    RED_CHECK_EQUAL(buf.remaining(), 0);
    RED_TEST_MESSAGE("\n");
}




RED_AUTO_TEST_CASE(TestNlaserver0)
{
    RED_TEST_MESSAGE("==================== TestNlaserver0 ===================");

    std::string user("Christophe");
    std::string domain("");
    uint8_t pass[] = "SecureLinux$42";
    uint8_t host[] = "WIN10CGR";
    ReplayRandom rand(std::vector<uint8_t>({0xab, 0xad, 0x62, 0xb1, 0xe4, 0x68, 0x0d, 0x3c}));
    ReplayTime timeobj({{0x01d5754E,0x9df41160}});

    auto get_password = [&](bytes_view user_av, bytes_view domain_av, std::vector<uint8_t> & password_array){
            auto user_str = ::UTF16toUTF8(user_av);
            auto domain_str = ::UTF16toUTF8(domain_av);
            RED_TEST_MESSAGE("+++++++++++++ Password Callback" 
                          << " user (" << user_av.size() << "):" << user_str.c_str()
                          << " domain (" << domain_av.size() << "):" << domain_str.c_str());
            RED_CHECK(user_str == std::string("Christophe"));
            RED_CHECK(domain_str == std::string(""));
            password_array = ::UTF8toUTF16("SecureLinux$42"_av);
            return PasswordCallback::Ok;
        }; 

    auto public_key = std::vector<uint8_t>{
/* 0000 */ 0x30, 0x81, 0x89, 0x02, 0x81, 0x81, 0x00, 0xcb, 0xfc, 0xaa, 0xad, 0x1d, 0x2b, 0x92, 0xa1, 0x11,  // 0...........+...
/* 0010 */ 0x30, 0x99, 0x9c, 0xd6, 0xe6, 0x57, 0x80, 0x25, 0xfc, 0xe4, 0x65, 0x33, 0xe4, 0xf4, 0x21, 0xf9,  // 0....W.%..e3..!.
/* 0020 */ 0x6a, 0x11, 0x8d, 0x6a, 0x5a, 0x70, 0x35, 0x69, 0xd5, 0x58, 0xed, 0x3d, 0x61, 0x83, 0x0e, 0x96,  // j..jZp5i.X.=a...
/* 0030 */ 0x44, 0xbc, 0x01, 0x1e, 0x0e, 0x82, 0x88, 0x58, 0x87, 0xab, 0xdd, 0x04, 0x80, 0xac, 0x57, 0x34,  // D......X......W4
/* 0040 */ 0xe7, 0xfd, 0x69, 0xf4, 0x1e, 0x5c, 0x30, 0x16, 0x69, 0x6f, 0x3e, 0x93, 0xa4, 0x5f, 0x12, 0x2d,  // ..i...0.io>.._.-
/* 0050 */ 0x21, 0xfa, 0x1c, 0xc0, 0x40, 0xf5, 0xe6, 0x49, 0xf3, 0x85, 0x28, 0x80, 0x0d, 0xef, 0xb5, 0xf0,  // !...@..I..(.....
/* 0060 */ 0x77, 0x79, 0x96, 0xef, 0xc8, 0x0a, 0x3d, 0x15, 0x8e, 0x88, 0xeb, 0x39, 0xfa, 0xfd, 0x2d, 0xce,  // wy....=....9..-.
/* 0070 */ 0x34, 0x79, 0xea, 0xa8, 0xc6, 0xc0, 0x3a, 0x38, 0xa9, 0x44, 0xe1, 0xe3, 0x36, 0xfa, 0xd7, 0x4a,  // 4y....:8.D..6..J
/* 0080 */ 0x2b, 0x2f, 0x03, 0xb5, 0x74, 0x5e, 0x35, 0x02, 0x03, 0x01, 0x00, 0x01,                          // +/..t^5.....
    }; 
    NtlmServer ntlm_server(false, true, "RDP-WINDOWS-DEV"_av,"RDP-WINDOWS-DEV"_av,"RDP-WINDOWS-DEV"_av,"rdp-windows-dev"_av,"rdp-windows-dev"_av,
                           public_key, {MsvAvNbDomainName,MsvAvNbComputerName,MsvAvDnsDomainName,MsvAvDnsComputerName,MsvAvTimestamp}, 
                           rand, timeobj, get_password, 5,
                           NtlmVersion{WINDOWS_MAJOR_VERSION_6, WINDOWS_MINOR_VERSION_1, 7601, NTLMSSP_REVISION_W2K3},
                           false, true);

    std::vector<uint8_t> negotiate{ 
/* 0000 */ 0x30, 0x37, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa1, 0x30, 0x30, 0x2e, 0x30, 0x2c, 0xa0, 0x2a, 0x04,  // 07......00.0,.*.
/* 0010 */ 0x28, 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb7, 0x82, 0x08,  // (NTLMSSP........
/* 0020 */ 0xe2, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00,  // .....(.......(..
/* 0030 */ 0x00, 0x06, 0x01, 0xb1, 0x1d, 0x00, 0x00, 0x00, 0x0f,  
    };


//     Recv negotiate, send challenge
    std::vector<uint8_t> answer_challenge{
/* 0000 */ 0x30, 0x82, 0x01, 0x02, 0xa0, 0x03, 0x02, 0x01, 0x05, 0xa1, 0x81, 0xfa, 0x30, 0x81, 0xf7, 0x30,  // 0...........0..0
/* 0010 */ 0x81, 0xf4, 0xa0, 0x81, 0xf1, 0x04, 0x81, 0xee, 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00,  // ........NTLMSSP.
/* 0020 */ 0x02, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x1e, 0x00, 0x38, 0x00, 0x00, 0x00, 0x35, 0x82, 0x8a, 0xe2,  // ........8...5...
/* 0030 */ 0xab, 0xad, 0x62, 0xb1, 0xe4, 0x68, 0x0d, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // ..b..h.<........
/* 0040 */ 0x98, 0x00, 0x98, 0x00, 0x56, 0x00, 0x00, 0x00, 0x06, 0x01, 0xb1, 0x1d, 0x00, 0x00, 0x00, 0x0f,  // ....V...........
/* 0050 */ 0x52, 0x00, 0x44, 0x00, 0x50, 0x00, 0x2d, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x44, 0x00,  // R.D.P.-.W.I.N.D.
/* 0060 */ 0x4f, 0x00, 0x57, 0x00, 0x53, 0x00, 0x2d, 0x00, 0x44, 0x00, 0x45, 0x00, 0x56, 0x00, 0x02, 0x00,  // O.W.S.-.D.E.V...
/* 0070 */ 0x1e, 0x00, 0x52, 0x00, 0x44, 0x00, 0x50, 0x00, 0x2d, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00,  // ..R.D.P.-.W.I.N.
/* 0080 */ 0x44, 0x00, 0x4f, 0x00, 0x57, 0x00, 0x53, 0x00, 0x2d, 0x00, 0x44, 0x00, 0x45, 0x00, 0x56, 0x00,  // D.O.W.S.-.D.E.V.
/* 0090 */ 0x01, 0x00, 0x1e, 0x00, 0x52, 0x00, 0x44, 0x00, 0x50, 0x00, 0x2d, 0x00, 0x57, 0x00, 0x49, 0x00,  // ....R.D.P.-.W.I.
/* 00a0 */ 0x4e, 0x00, 0x44, 0x00, 0x4f, 0x00, 0x57, 0x00, 0x53, 0x00, 0x2d, 0x00, 0x44, 0x00, 0x45, 0x00,  // N.D.O.W.S.-.D.E.
/* 00b0 */ 0x56, 0x00, 0x04, 0x00, 0x1e, 0x00, 0x72, 0x00, 0x64, 0x00, 0x70, 0x00, 0x2d, 0x00, 0x77, 0x00,  // V.....r.d.p.-.w.
/* 00c0 */ 0x69, 0x00, 0x6e, 0x00, 0x64, 0x00, 0x6f, 0x00, 0x77, 0x00, 0x73, 0x00, 0x2d, 0x00, 0x64, 0x00,  // i.n.d.o.w.s.-.d.
/* 00d0 */ 0x65, 0x00, 0x76, 0x00, 0x03, 0x00, 0x1e, 0x00, 0x72, 0x00, 0x64, 0x00, 0x70, 0x00, 0x2d, 0x00,  // e.v.....r.d.p.-.
/* 00e0 */ 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x64, 0x00, 0x6f, 0x00, 0x77, 0x00, 0x73, 0x00, 0x2d, 0x00,  // w.i.n.d.o.w.s.-.
/* 00f0 */ 0x64, 0x00, 0x65, 0x00, 0x76, 0x00, 0x07, 0x00, 0x08, 0x00, 0x60, 0x11, 0xf4, 0x9d, 0x4e, 0x75,  // d.e.v.....`...Nu
/* 0100 */ 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00,                                                              // ......
    };

    RED_TEST_MESSAGE("+++++++++++++ Server receive NTLM Negotiate --> answer with NTLM Challenge");

    RED_CHECK_HMEM(answer_challenge, ntlm_server.authenticate_next(negotiate));
    RED_CHECK_EQUAL(credssp::State::Cont, ntlm_server.state);

    std::vector<uint8_t> authenticate{
/* 0000 */ 0x30, 0x82, 0x01, 0xd9, 0xa0, 0x03, 0x02, 0x01, 0x05, 0xa1, 0x82, 0x01, 0x78, 0x30, 0x82, 0x01,  // 0...........x0..
/* 0010 */ 0x74, 0x30, 0x82, 0x01, 0x70, 0xa0, 0x82, 0x01, 0x6c, 0x04, 0x82, 0x01, 0x68, 0x4e, 0x54, 0x4c,  // t0..p...l...hNTL
/* 0020 */ 0x4d, 0x53, 0x53, 0x50, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00, 0x58, 0x00, 0x00,  // MSSP.........X..
/* 0030 */ 0x00, 0xc8, 0x00, 0xc8, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x01, 0x00,  // .....p.......8..
/* 0040 */ 0x00, 0x14, 0x00, 0x14, 0x00, 0x38, 0x01, 0x00, 0x00, 0x0c, 0x00, 0x0c, 0x00, 0x4c, 0x01, 0x00,  // .....8.......L..
/* 0050 */ 0x00, 0x10, 0x00, 0x10, 0x00, 0x58, 0x01, 0x00, 0x00, 0x35, 0xa2, 0x88, 0xe2, 0x06, 0x01, 0xb1,  // .....X...5......
/* 0060 */ 0x1d, 0x00, 0x00, 0x00, 0x0f, 0x19, 0x15, 0x2a, 0x4e, 0xc0, 0x90, 0x3a, 0xd9, 0xc3, 0xae, 0xe4,  // .......*N..:....
/* 0070 */ 0x33, 0xef, 0x1b, 0x30, 0xb3, 0x22, 0xdc, 0xb2, 0xd7, 0xec, 0x2a, 0xef, 0xe8, 0x0f, 0xef, 0xf5,  // 3..0."....*.....
/* 0080 */ 0x06, 0x5e, 0x08, 0x21, 0x98, 0x4a, 0x21, 0xd6, 0x41, 0xa4, 0xc5, 0x6a, 0x85, 0x1c, 0x41, 0x3c,  // .^.!.J!.A..j..A<
/* 0090 */ 0xfe, 0xf1, 0x62, 0x40, 0xfc, 0xcb, 0x4e, 0x8f, 0x52, 0xdf, 0xa7, 0xab, 0xed, 0x01, 0x01, 0x00,  // ..b@..N.R.......
/* 00a0 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x81, 0x03, 0x03, 0x00, 0x61, 0x35, 0x8e, 0x5d, 0x4a, 0x21, 0xd6,  // .........a5.]J!.
/* 00b0 */ 0x41, 0xa4, 0xc5, 0x6a, 0x85, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x1e, 0x00, 0x52, 0x00, 0x44,  // A..j.........R.D
/* 00c0 */ 0x00, 0x50, 0x00, 0x2d, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x44, 0x00, 0x4f, 0x00, 0x57,  // .P.-.W.I.N.D.O.W
/* 00d0 */ 0x00, 0x53, 0x00, 0x2d, 0x00, 0x44, 0x00, 0x45, 0x00, 0x56, 0x00, 0x01, 0x00, 0x1e, 0x00, 0x52,  // .S.-.D.E.V.....R
/* 00e0 */ 0x00, 0x44, 0x00, 0x50, 0x00, 0x2d, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x44, 0x00, 0x4f,  // .D.P.-.W.I.N.D.O
/* 00f0 */ 0x00, 0x57, 0x00, 0x53, 0x00, 0x2d, 0x00, 0x44, 0x00, 0x45, 0x00, 0x56, 0x00, 0x04, 0x00, 0x1e,  // .W.S.-.D.E.V....
/* 0100 */ 0x00, 0x72, 0x00, 0x64, 0x00, 0x70, 0x00, 0x2d, 0x00, 0x77, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x64,  // .r.d.p.-.w.i.n.d
/* 0110 */ 0x00, 0x6f, 0x00, 0x77, 0x00, 0x73, 0x00, 0x2d, 0x00, 0x64, 0x00, 0x65, 0x00, 0x76, 0x00, 0x03,  // .o.w.s.-.d.e.v..
/* 0120 */ 0x00, 0x1e, 0x00, 0x72, 0x00, 0x64, 0x00, 0x70, 0x00, 0x2d, 0x00, 0x77, 0x00, 0x69, 0x00, 0x6e,  // ...r.d.p.-.w.i.n
/* 0130 */ 0x00, 0x64, 0x00, 0x6f, 0x00, 0x77, 0x00, 0x73, 0x00, 0x2d, 0x00, 0x64, 0x00, 0x65, 0x00, 0x76,  // .d.o.w.s.-.d.e.v
/* 0140 */ 0x00, 0x07, 0x00, 0x08, 0x00, 0x60, 0x11, 0xf4, 0x9d, 0x4e, 0x75, 0xd5, 0x01, 0x00, 0x00, 0x00,  // .....`...Nu.....
/* 0150 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x68, 0x00, 0x72, 0x00, 0x69, 0x00, 0x73, 0x00, 0x74,  // .....C.h.r.i.s.t
/* 0160 */ 0x00, 0x6f, 0x00, 0x70, 0x00, 0x68, 0x00, 0x65, 0x00, 0x63, 0x00, 0x67, 0x00, 0x72, 0x00, 0x74,  // .o.p.h.e.c.g.r.t
/* 0170 */ 0x00, 0x68, 0x00, 0x63, 0x00, 0xb7, 0x05, 0x6b, 0xf9, 0x9c, 0xbb, 0xcc, 0x91, 0x92, 0xe1, 0x25,  // .h.c...k.......%
/* 0180 */ 0x28, 0xae, 0x07, 0x64, 0x2a, 0xa3, 0x32, 0x04, 0x30, 0x01, 0x00, 0x00, 0x00, 0xc7, 0xb2, 0xe0,  // (..d*.2.0.......
/* 0190 */ 0x00, 0xa9, 0x61, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x00, 0x4a, 0x66, 0x50, 0x9a, 0xf8, 0xb8, 0x5a,  // ..a......JfP...Z
/* 01a0 */ 0xaa, 0x8b, 0x5e, 0x8d, 0xdd, 0x1b, 0x43, 0xff, 0x85, 0xb4, 0x38, 0x3c, 0x8e, 0xed, 0xa6, 0x6f,  // ..^...C...8<...o
/* 01b0 */ 0x5e, 0xc6, 0x21, 0x2a, 0x13, 0x6d, 0x61, 0xff, 0xe0, 0xa5, 0x22, 0x04, 0x20, 0x43, 0xef, 0x70,  // ^.!*.ma...". C.p
/* 01c0 */ 0x5b, 0x09, 0xf3, 0x0f, 0x1c, 0x4f, 0x76, 0x59, 0x64, 0xe9, 0x87, 0x9c, 0x92, 0xe2, 0x05, 0xb9,  // [....OvYd.......
/* 01d0 */ 0xbd, 0xf5, 0x75, 0x0b, 0xec, 0x06, 0x73, 0x27, 0xdf, 0x8b, 0x40, 0xc2, 0xc9,                    // ..u...s'..@..
    };

    std::vector<uint8_t> pubauthkey{
/* 0000 */ 0x30, 0x39, 0xa0, 0x03, 0x02, 0x01, 0x05, 0xa3, 0x32, 0x04, 0x30, 0x01, 0x00, 0x00, 0x00, 0xe2,  // 09......2.0.....
/* 0010 */ 0xa0, 0x66, 0x3d, 0x15, 0xbe, 0x53, 0x3f, 0x00, 0x00, 0x00, 0x00, 0x32, 0xf6, 0x1c, 0xb6, 0x53,  // .f=..S?....2...S
/* 0020 */ 0xc4, 0xab, 0x98, 0x65, 0x3e, 0xd0, 0xf7, 0x77, 0x79, 0x48, 0xc7, 0x4b, 0x78, 0xc5, 0xeb, 0xfe,  // ...e>..wyH.Kx...
/* 0030 */ 0x5a, 0xc8, 0xba, 0x57, 0x4d, 0x37, 0x53, 0x00, 0x49, 0x35, 0xd1,                                // Z..WM7S.I5.
   
///* 0000 */ 0x30, 0x39, 0xa0, 0x03, 0x02, 0x01, 0x05, 0xa3, 0x32, 0x04, 0x30, 0x01, 0x00, 0x00, 0x00, 0xe4,  // 09......2.0.....
///* 0010 */ 0xd4, 0xe5, 0x47, 0xe0, 0xb5, 0x24, 0x56, 0x00, 0x00, 0x00, 0x00, 0xe7, 0x4c, 0xe3, 0x06, 0xc2,  // ..G..$V.....L...
///* 0020 */ 0x9e, 0x12, 0x08, 0x2e, 0xbe, 0xf9, 0x91, 0xf0, 0xeb, 0x63, 0xbc, 0xf6, 0x00, 0xa9, 0x12, 0xde,  // .........c......
///* 0030 */ 0xee, 0x36, 0xb7, 0xad, 0x29, 0xb9, 0x08, 0x2b, 0xbe, 0xaa, 0x6f,                                // .6..)..+..o
    };

    RED_TEST_MESSAGE("+++++++++++++ Server receive NTLM Authenticate --> answer with NTLM Pubauthkey");
    RED_CHECK_HMEM(pubauthkey, ntlm_server.authenticate_next(authenticate));
//    
//    RED_CHECK_EQUAL(credssp::State::Cont, ntlm_server.state);
//    
//    std::vector<uint8_t>  ts_credentials{
//    };

//    RED_TEST_MESSAGE("+++++++++++++ Server receive NTLM TS Credentials --> NTLM Finished");
//    
//    // Recv ts_credential, -> finished
//    RED_CHECK_EQUAL(ntlm_server.authenticate_next(ts_credentials).size(), 0);
//    RED_CHECK_EQUAL(ntlm_server.state, credssp::State::Finish);
//    RED_TEST_MESSAGE("\n");
}




// Captured traffic to add to tests
// ===============================================================================

//NTLMContextClient Compute response from challenge
//using /dev/urandom as random source
//Field LmChallengeResponse, len: 24
///* 0000 */ 0xe3, 0x52, 0x51, 0x84, 0xf5, 0xc3, 0x5e, 0x23, 0x47, 0xde, 0x7d, 0x3a, 0x52, 0x0e, 0xa1, 0x38,  // .RQ...^#G.}:R..8
///* 0010 */ 0xaa, 0x52, 0xcc, 0x44, 0xe5, 0x73, 0x04, 0xb5,                                                  // .R.D.s..
//Field NtChallengeResponse, len: 186
///* 0000 */ 0x71, 0x93, 0xa7, 0xd1, 0x9d, 0x3d, 0x65, 0x05, 0xa0, 0x9e, 0x84, 0x35, 0xda, 0x31, 0xbe, 0x6e,  // q....=e....5.1.n
///* 0010 */ 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa5, 0x54, 0x0e, 0x00, 0xe0, 0x82, 0x93, 0x5d,  // .........T.....]
///* 0020 */ 0xaa, 0x52, 0xcc, 0x44, 0xe5, 0x73, 0x04, 0xb5, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x10, 0x00,  // .R.D.s..........
///* 0030 */ 0x50, 0x00, 0x52, 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00,  // P.R.O.X.Y.K.D.C.
///* 0040 */ 0x01, 0x00, 0x14, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00,  // ....W.I.N.K.D.C.
///* 0050 */ 0x32, 0x00, 0x30, 0x00, 0x31, 0x00, 0x32, 0x00, 0x04, 0x00, 0x18, 0x00, 0x70, 0x00, 0x72, 0x00,  // 2.0.1.2.....p.r.
///* 0060 */ 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00,  // o.x.y.k.d.c...l.
///* 0070 */ 0x61, 0x00, 0x62, 0x00, 0x03, 0x00, 0x2e, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x4b, 0x00,  // a.b.....W.I.N.K.
///* 0080 */ 0x44, 0x00, 0x43, 0x00, 0x32, 0x00, 0x30, 0x00, 0x31, 0x00, 0x32, 0x00, 0x2e, 0x00, 0x70, 0x00,  // D.C.2.0.1.2...p.
///* 0090 */ 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00,  // r.o.x.y.k.d.c...
///* 00a0 */ 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x07, 0x00, 0x08, 0x00, 0x9e, 0xe6, 0x5f, 0xc2, 0x77, 0x78,  // l.a.b......._.wx
///* 00b0 */ 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,                                      // ..........
//Field DomainName, len: 0
//Field UserName, len: 52
///* 0000 */ 0x41, 0x00, 0x64, 0x00, 0x6d, 0x00, 0x69, 0x00, 0x6e, 0x00, 0x69, 0x00, 0x73, 0x00, 0x74, 0x00,  // A.d.m.i.n.i.s.t.
///* 0010 */ 0x72, 0x00, 0x61, 0x00, 0x74, 0x00, 0x6f, 0x00, 0x72, 0x00, 0x40, 0x00, 0x70, 0x00, 0x72, 0x00,  // r.a.t.o.r.@.p.r.
///* 0020 */ 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00,  // o.x.y.k.d.c...l.
///* 0030 */ 0x61, 0x00, 0x62, 0x00,                                                                          // a.b.
//Field Workstation, len: 16
///* 0000 */ 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00, 0x30, 0x00, 0x43, 0x00, 0x47, 0x00, 0x52, 0x00,  // W.I.N.1.0.C.G.R.
//Field EncryptedRandomSessionKey, len: 16
///* 0000 */ 0xd6, 0xdc, 0x86, 0xeb, 0xb2, 0x6d, 0x59, 0xf5, 0x57, 0xbb, 0x5b, 0x53, 0xb2, 0x96, 0x10, 0x3e,  // .....mY.W.[S...>
//negotiateFlags "0xE288A235"{
//    |NTLMSSP_NEGOTIATE_56, // (31)
//    |NTLMSSP_NEGOTIATE_KEY_EXCH, // (30)
//    |NTLMSSP_NEGOTIATE_128, // (29)
//    |NTLMSSP_NEGOTIATE_VERSION, // (25)
//    |NTLMSSP_NEGOTIATE_TARGET_INFO, // (23)
//    |NTLMSSP_NEGOTIATE_EXTENDED_SESSION_SECURITY, // (19)
//    |NTLMSSP_NEGOTIATE_ALWAYS_SIGN, // (15)
//    |NTLMSSP_NEGOTIATE_WORKSTATION_SUPPLIED, // (13)
//    |NTLMSSP_NEGOTIATE_NTLM, // (9)
//    |NTLMSSP_NEGOTIATE_SEAL, // (5)
//    |NTLMSSP_NEGOTIATE_SIGN, // (4)
//    |NTLMSSP_REQUEST_TARGET, // (2)
//    |NTLMSSP_NEGOTIATE_UNICODE, // (0)
//}
//VERSION = {
//	ProductMajorVersion: 6
//	ProductMinorVersion: 1
//	ProductBuild: 7601
//	NTLMRevisionCurrent: 0x0F
//}
//Field MIC, len: 16
///* 0000 */ 0x83, 0x19, 0x3c, 0x16, 0x65, 0x3f, 0xf0, 0xf3, 0x68, 0xd1, 0x87, 0xd7, 0x43, 0xb0, 0xde, 0x3e,  // ..<.e?..h...C..>
//Full NTLMAuthenticate Dump, len: 382
///* 0000 */ 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00,  // NTLMSSP.........
///* 0010 */ 0x58, 0x00, 0x00, 0x00, 0xba, 0x00, 0xba, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // X.......p.......
///* 0020 */ 0x2a, 0x01, 0x00, 0x00, 0x34, 0x00, 0x34, 0x00, 0x2a, 0x01, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,  // *...4.4.*.......
///* 0030 */ 0x5e, 0x01, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x6e, 0x01, 0x00, 0x00, 0x35, 0xa2, 0x88, 0xe2,  // ^.......n...5...
///* 0040 */ 0x06, 0x01, 0xb1, 0x1d, 0x00, 0x00, 0x00, 0x0f, 0x83, 0x19, 0x3c, 0x16, 0x65, 0x3f, 0xf0, 0xf3,  // ..........<.e?..
///* 0050 */ 0x68, 0xd1, 0x87, 0xd7, 0x43, 0xb0, 0xde, 0x3e, 0xe3, 0x52, 0x51, 0x84, 0xf5, 0xc3, 0x5e, 0x23,  // h...C..>.RQ...^#
///* 0060 */ 0x47, 0xde, 0x7d, 0x3a, 0x52, 0x0e, 0xa1, 0x38, 0xaa, 0x52, 0xcc, 0x44, 0xe5, 0x73, 0x04, 0xb5,  // G.}:R..8.R.D.s..
///* 0070 */ 0x71, 0x93, 0xa7, 0xd1, 0x9d, 0x3d, 0x65, 0x05, 0xa0, 0x9e, 0x84, 0x35, 0xda, 0x31, 0xbe, 0x6e,  // q....=e....5.1.n
///* 0080 */ 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa5, 0x54, 0x0e, 0x00, 0xe0, 0x82, 0x93, 0x5d,  // .........T.....]
///* 0090 */ 0xaa, 0x52, 0xcc, 0x44, 0xe5, 0x73, 0x04, 0xb5, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x10, 0x00,  // .R.D.s..........
///* 00a0 */ 0x50, 0x00, 0x52, 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00,  // P.R.O.X.Y.K.D.C.
///* 00b0 */ 0x01, 0x00, 0x14, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00,  // ....W.I.N.K.D.C.
///* 00c0 */ 0x32, 0x00, 0x30, 0x00, 0x31, 0x00, 0x32, 0x00, 0x04, 0x00, 0x18, 0x00, 0x70, 0x00, 0x72, 0x00,  // 2.0.1.2.....p.r.
///* 00d0 */ 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00,  // o.x.y.k.d.c...l.
///* 00e0 */ 0x61, 0x00, 0x62, 0x00, 0x03, 0x00, 0x2e, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x4b, 0x00,  // a.b.....W.I.N.K.
///* 00f0 */ 0x44, 0x00, 0x43, 0x00, 0x32, 0x00, 0x30, 0x00, 0x31, 0x00, 0x32, 0x00, 0x2e, 0x00, 0x70, 0x00,  // D.C.2.0.1.2...p.
///* 0100 */ 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00,  // r.o.x.y.k.d.c...
///* 0110 */ 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x07, 0x00, 0x08, 0x00, 0x9e, 0xe6, 0x5f, 0xc2, 0x77, 0x78,  // l.a.b......._.wx
///* 0120 */ 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x64, 0x00, 0x6d, 0x00,  // ..........A.d.m.
///* 0130 */ 0x69, 0x00, 0x6e, 0x00, 0x69, 0x00, 0x73, 0x00, 0x74, 0x00, 0x72, 0x00, 0x61, 0x00, 0x74, 0x00,  // i.n.i.s.t.r.a.t.
///* 0140 */ 0x6f, 0x00, 0x72, 0x00, 0x40, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00,  // o.r.@.p.r.o.x.y.
///* 0150 */ 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x57, 0x00,  // k.d.c...l.a.b.W.
///* 0160 */ 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00, 0x30, 0x00, 0x43, 0x00, 0x47, 0x00, 0x52, 0x00, 0xd6, 0xdc,  // I.N.1.0.C.G.R...
///* 0170 */ 0x86, 0xeb, 0xb2, 0x6d, 0x59, 0xf5, 0x57, 0xbb, 0x5b, 0x53, 0xb2, 0x96, 0x10, 0x3e,              // ...mY.W.[S...>
//rdpClientNTLM::encrypt_public_key_echo
//using /dev/urandom as random source
//Random Client Nonce
///* 0000 */ 0x4c, 0x55, 0x31, 0xef, 0xf8, 0xd7, 0xeb, 0x7b, 0xd5, 0x1e, 0xe8, 0x58, 0x3f, 0xc6, 0x7b, 0x69,  // LU1....{...X?.{i
///* 0010 */ 0x9f, 0x31, 0xbb, 0xc8, 0xea, 0x3c, 0x9c, 0x92, 0x9a, 0xe2, 0x6b, 0x70, 0xaa, 0xb8, 0x0d, 0x3e,  // .1...<....kp...>
//TSRequest hexdump ---------------------------------
//TSRequest version 6 ------------------------------
//TSRequest negoTokens ------------------------------
///* 0000 */ 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00,  // NTLMSSP.........
///* 0010 */ 0x58, 0x00, 0x00, 0x00, 0xba, 0x00, 0xba, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  // X.......p.......
///* 0020 */ 0x2a, 0x01, 0x00, 0x00, 0x34, 0x00, 0x34, 0x00, 0x2a, 0x01, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,  // *...4.4.*.......
///* 0030 */ 0x5e, 0x01, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x6e, 0x01, 0x00, 0x00, 0x35, 0xa2, 0x88, 0xe2,  // ^.......n...5...
///* 0040 */ 0x06, 0x01, 0xb1, 0x1d, 0x00, 0x00, 0x00, 0x0f, 0x83, 0x19, 0x3c, 0x16, 0x65, 0x3f, 0xf0, 0xf3,  // ..........<.e?..
///* 0050 */ 0x68, 0xd1, 0x87, 0xd7, 0x43, 0xb0, 0xde, 0x3e, 0xe3, 0x52, 0x51, 0x84, 0xf5, 0xc3, 0x5e, 0x23,  // h...C..>.RQ...^#
///* 0060 */ 0x47, 0xde, 0x7d, 0x3a, 0x52, 0x0e, 0xa1, 0x38, 0xaa, 0x52, 0xcc, 0x44, 0xe5, 0x73, 0x04, 0xb5,  // G.}:R..8.R.D.s..
///* 0070 */ 0x71, 0x93, 0xa7, 0xd1, 0x9d, 0x3d, 0x65, 0x05, 0xa0, 0x9e, 0x84, 0x35, 0xda, 0x31, 0xbe, 0x6e,  // q....=e....5.1.n
///* 0080 */ 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xa5, 0x54, 0x0e, 0x00, 0xe0, 0x82, 0x93, 0x5d,  // .........T.....]
///* 0090 */ 0xaa, 0x52, 0xcc, 0x44, 0xe5, 0x73, 0x04, 0xb5, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x10, 0x00,  // .R.D.s..........
///* 00a0 */ 0x50, 0x00, 0x52, 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00,  // P.R.O.X.Y.K.D.C.
///* 00b0 */ 0x01, 0x00, 0x14, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00,  // ....W.I.N.K.D.C.
///* 00c0 */ 0x32, 0x00, 0x30, 0x00, 0x31, 0x00, 0x32, 0x00, 0x04, 0x00, 0x18, 0x00, 0x70, 0x00, 0x72, 0x00,  // 2.0.1.2.....p.r.
///* 00d0 */ 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00,  // o.x.y.k.d.c...l.
///* 00e0 */ 0x61, 0x00, 0x62, 0x00, 0x03, 0x00, 0x2e, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x4b, 0x00,  // a.b.....W.I.N.K.
///* 00f0 */ 0x44, 0x00, 0x43, 0x00, 0x32, 0x00, 0x30, 0x00, 0x31, 0x00, 0x32, 0x00, 0x2e, 0x00, 0x70, 0x00,  // D.C.2.0.1.2...p.
///* 0100 */ 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00,  // r.o.x.y.k.d.c...
///* 0110 */ 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x07, 0x00, 0x08, 0x00, 0x9e, 0xe6, 0x5f, 0xc2, 0x77, 0x78,  // l.a.b......._.wx
///* 0120 */ 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x64, 0x00, 0x6d, 0x00,  // ..........A.d.m.
///* 0130 */ 0x69, 0x00, 0x6e, 0x00, 0x69, 0x00, 0x73, 0x00, 0x74, 0x00, 0x72, 0x00, 0x61, 0x00, 0x74, 0x00,  // i.n.i.s.t.r.a.t.
///* 0140 */ 0x6f, 0x00, 0x72, 0x00, 0x40, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00,  // o.r.@.p.r.o.x.y.
///* 0150 */ 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x57, 0x00,  // k.d.c...l.a.b.W.
///* 0160 */ 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00, 0x30, 0x00, 0x43, 0x00, 0x47, 0x00, 0x52, 0x00, 0xd6, 0xdc,  // I.N.1.0.C.G.R...
///* 0170 */ 0x86, 0xeb, 0xb2, 0x6d, 0x59, 0xf5, 0x57, 0xbb, 0x5b, 0x53, 0xb2, 0x96, 0x10, 0x3e,              // ...mY.W.[S...>
//TSRequest authInfo --------------------------------
//TSRequest pubkeyAuth ------------------------------
///* 0000 */ 0x01, 0x00, 0x00, 0x00, 0xd7, 0x3e, 0x43, 0x0d, 0xc7, 0x31, 0xf3, 0xf9, 0x00, 0x00, 0x00, 0x00,  // .....>C..1......
///* 0010 */ 0x75, 0x81, 0xcb, 0x4b, 0xfd, 0xe1, 0x0f, 0x85, 0x98, 0x59, 0x33, 0x47, 0x2a, 0x1b, 0x60, 0xc6,  // u..K.....Y3G*.`.
///* 0020 */ 0x24, 0x84, 0xca, 0x98, 0x54, 0xcb, 0x08, 0x9a, 0x94, 0x88, 0xb8, 0x81, 0xcf, 0x27, 0x9b, 0x53,  // $...T........'.S
//TSRequest error_code 0 ---------------------------
//TSRequest clientNonce -----------------------------
///* 0000 */ 0x4c, 0x55, 0x31, 0xef, 0xf8, 0xd7, 0xeb, 0x7b, 0xd5, 0x1e, 0xe8, 0x58, 0x3f, 0xc6, 0x7b, 0x69,  // LU1....{...X?.{i
///* 0010 */ 0x9f, 0x31, 0xbb, 0xc8, 0xea, 0x3c, 0x9c, 0x92, 0x9a, 0xe2, 0x6b, 0x70, 0xaa, 0xb8, 0x0d, 0x3e,  // .1...<....kp...>
//TSRequest ts_request_header --(request length = 495)-
///* 0000 */ 0x30, 0x82, 0x01, 0xef,                                                                          // 0...
//TSRequest version_field ---------------------------
///* 0000 */ 0xa0, 0x03, 0x02, 0x01, 0x06,                                                                    // .....
//TSRequest nego_tokens_header ----------------------
///* 0000 */ 0xa1, 0x82, 0x01, 0x8e, 0x30, 0x82, 0x01, 0x8a, 0x30, 0x82, 0x01, 0x86, 0xa0, 0x82, 0x01, 0x82,  // ....0...0.......
///* 0010 */ 0x04, 0x82, 0x01, 0x7e,                                                                          // ...~
//TSRequest auth_info_header ------------------------
//TSRequest pub_key_auth_header ---------------------
///* 0000 */ 0xa3, 0x32, 0x04, 0x30,                                                                          // .2.0
//TSRequest error_code field ------------------------
//TSRequest nonce -----------------------------------
///* 0000 */ 0xa5, 0x22, 0x04, 0x20,                                                                          // .". 
//emit TSRequest full dump--------------------------------
///* 0000 */ 0x30, 0x82, 0x01, 0xef, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa1, 0x82, 0x01, 0x8e, 0x30, 0x82, 0x01,  // 0............0..
///* 0010 */ 0x8a, 0x30, 0x82, 0x01, 0x86, 0xa0, 0x82, 0x01, 0x82, 0x04, 0x82, 0x01, 0x7e, 0x4e, 0x54, 0x4c,  // .0..........~NTL
///* 0020 */ 0x4d, 0x53, 0x53, 0x50, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00, 0x58, 0x00, 0x00,  // MSSP.........X..
///* 0030 */ 0x00, 0xba, 0x00, 0xba, 0x00, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x01, 0x00,  // .....p.......*..
///* 0040 */ 0x00, 0x34, 0x00, 0x34, 0x00, 0x2a, 0x01, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x5e, 0x01, 0x00,  // .4.4.*.......^..
///* 0050 */ 0x00, 0x10, 0x00, 0x10, 0x00, 0x6e, 0x01, 0x00, 0x00, 0x35, 0xa2, 0x88, 0xe2, 0x06, 0x01, 0xb1,  // .....n...5......
///* 0060 */ 0x1d, 0x00, 0x00, 0x00, 0x0f, 0x83, 0x19, 0x3c, 0x16, 0x65, 0x3f, 0xf0, 0xf3, 0x68, 0xd1, 0x87,  // .......<.e?..h..
///* 0070 */ 0xd7, 0x43, 0xb0, 0xde, 0x3e, 0xe3, 0x52, 0x51, 0x84, 0xf5, 0xc3, 0x5e, 0x23, 0x47, 0xde, 0x7d,  // .C..>.RQ...^#G.}
///* 0080 */ 0x3a, 0x52, 0x0e, 0xa1, 0x38, 0xaa, 0x52, 0xcc, 0x44, 0xe5, 0x73, 0x04, 0xb5, 0x71, 0x93, 0xa7,  // :R..8.R.D.s..q..
///* 0090 */ 0xd1, 0x9d, 0x3d, 0x65, 0x05, 0xa0, 0x9e, 0x84, 0x35, 0xda, 0x31, 0xbe, 0x6e, 0x01, 0x01, 0x00,  // ..=e....5.1.n...
///* 00a0 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0xa5, 0x54, 0x0e, 0x00, 0xe0, 0x82, 0x93, 0x5d, 0xaa, 0x52, 0xcc,  // ......T.....].R.
///* 00b0 */ 0x44, 0xe5, 0x73, 0x04, 0xb5, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x10, 0x00, 0x50, 0x00, 0x52,  // D.s..........P.R
///* 00c0 */ 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00, 0x01, 0x00, 0x14,  // .O.X.Y.K.D.C....
///* 00d0 */ 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00, 0x32, 0x00, 0x30,  // .W.I.N.K.D.C.2.0
///* 00e0 */ 0x00, 0x31, 0x00, 0x32, 0x00, 0x04, 0x00, 0x18, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78,  // .1.2.....p.r.o.x
///* 00f0 */ 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62,  // .y.k.d.c...l.a.b
///* 0100 */ 0x00, 0x03, 0x00, 0x2e, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43,  // .....W.I.N.K.D.C
///* 0110 */ 0x00, 0x32, 0x00, 0x30, 0x00, 0x31, 0x00, 0x32, 0x00, 0x2e, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f,  // .2.0.1.2...p.r.o
///* 0120 */ 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61,  // .x.y.k.d.c...l.a
///* 0130 */ 0x00, 0x62, 0x00, 0x07, 0x00, 0x08, 0x00, 0x9e, 0xe6, 0x5f, 0xc2, 0x77, 0x78, 0xd5, 0x01, 0x00,  // .b......._.wx...
///* 0140 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x00, 0x64, 0x00, 0x6d, 0x00, 0x69, 0x00, 0x6e,  // .......A.d.m.i.n
///* 0150 */ 0x00, 0x69, 0x00, 0x73, 0x00, 0x74, 0x00, 0x72, 0x00, 0x61, 0x00, 0x74, 0x00, 0x6f, 0x00, 0x72,  // .i.s.t.r.a.t.o.r
///* 0160 */ 0x00, 0x40, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64,  // .@.p.r.o.x.y.k.d
///* 0170 */ 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e,  // .c...l.a.b.W.I.N
///* 0180 */ 0x00, 0x31, 0x00, 0x30, 0x00, 0x43, 0x00, 0x47, 0x00, 0x52, 0x00, 0xd6, 0xdc, 0x86, 0xeb, 0xb2,  // .1.0.C.G.R......
///* 0190 */ 0x6d, 0x59, 0xf5, 0x57, 0xbb, 0x5b, 0x53, 0xb2, 0x96, 0x10, 0x3e, 0xa3, 0x32, 0x04, 0x30, 0x01,  // mY.W.[S...>.2.0.
///* 01a0 */ 0x00, 0x00, 0x00, 0xd7, 0x3e, 0x43, 0x0d, 0xc7, 0x31, 0xf3, 0xf9, 0x00, 0x00, 0x00, 0x00, 0x75,  // ....>C..1......u
///* 01b0 */ 0x81, 0xcb, 0x4b, 0xfd, 0xe1, 0x0f, 0x85, 0x98, 0x59, 0x33, 0x47, 0x2a, 0x1b, 0x60, 0xc6, 0x24,  // ..K.....Y3G*.`.$
///* 01c0 */ 0x84, 0xca, 0x98, 0x54, 0xcb, 0x08, 0x9a, 0x94, 0x88, 0xb8, 0x81, 0xcf, 0x27, 0x9b, 0x53, 0xa5,  // ...T........'.S.
///* 01d0 */ 0x22, 0x04, 0x20, 0x4c, 0x55, 0x31, 0xef, 0xf8, 0xd7, 0xeb, 0x7b, 0xd5, 0x1e, 0xe8, 0x58, 0x3f,  // ". LU1....{...X?
///* 01e0 */ 0xc6, 0x7b, 0x69, 0x9f, 0x31, 0xbb, 0xc8, 0xea, 0x3c, 0x9c, 0x92, 0x9a, 0xe2, 0x6b, 0x70, 0xaa,  // .{i.1...<....kp.
///* 01f0 */ 0xb8, 0x0d, 0x3e,                                                                                // ..>
//emit TSRequest hexdump -DONE----------------------------
//RdpNego::recv_next_data::Credssp
//RdpNego::recv_credssp
//Client Authentication : Receiving Encrypted PubKey + 1
//recv TSRequest full dump++++++++++++++++++++++++++++++++
///* 0000 */ 0x30, 0x39, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa3, 0x32, 0x04, 0x30, 0x01, 0x00, 0x00, 0x00, 0xec,  // 09......2.0.....
///* 0010 */ 0x9d, 0xe0, 0xd7, 0xdd, 0xfb, 0xa6, 0xa8, 0x00, 0x00, 0x00, 0x00, 0x37, 0x51, 0x1a, 0x07, 0xf0,  // ...........7Q...
///* 0020 */ 0x3a, 0xab, 0x45, 0x8f, 0x29, 0x0f, 0x2b, 0x25, 0xbf, 0x91, 0x39, 0x02, 0x48, 0x4a, 0xf1, 0x46,  // :.E.).+%..9.HJ.F
///* 0030 */ 0x7f, 0x11, 0x87, 0x7e, 0x64, 0xe9, 0x78, 0xec, 0x2c, 0x20, 0x7d,                                // ...~d.x., }
//recv TSRequest hexdump - START PARSING DATA+++++++++++++
//Credssp recvTSRequest() Remote Version 6, Negotiated version 6
//rdpClientNTLM::encrypt_ts_credentials
//TSCredentialsPassword: Domain User Password
//TSRequest hexdump ---------------------------------
//TSRequest version 6 ------------------------------
//TSRequest negoTokens ------------------------------
//TSRequest authInfo --------------------------------
///* 0000 */ 0x01, 0x00, 0x00, 0x00, 0x05, 0x8b, 0x82, 0x0b, 0xc2, 0xd0, 0x8a, 0x3b, 0x01, 0x00, 0x00, 0x00,  // ...........;....
///* 0010 */ 0x71, 0x09, 0xce, 0x7f, 0x07, 0xbc, 0x61, 0x05, 0x14, 0xa2, 0xbe, 0x9e, 0x96, 0x5b, 0xd5, 0x2e,  // q.....a......[..
///* 0020 */ 0xf5, 0xdb, 0x43, 0xa4, 0x55, 0xe9, 0x58, 0x62, 0x39, 0x5b, 0x3c, 0xfe, 0xe4, 0xe7, 0x7d, 0xc0,  // ..C.U.Xb9[<...}.
///* 0030 */ 0x7a, 0x70, 0x85, 0x93, 0x79, 0x64, 0xa5, 0x18, 0x52, 0xb8, 0x45, 0xd7, 0x0c, 0x4a, 0xc2, 0xd8,  // zp..yd..R.E..J..
///* 0040 */ 0x3a, 0x80, 0xc8, 0xaf, 0xf8, 0x61, 0xd4, 0xf9, 0xf0, 0x13, 0xc8, 0xf0, 0x06, 0x15, 0x6e, 0x67,  // :....a........ng
///* 0050 */ 0x7f, 0x7b, 0xb5, 0xdc, 0x40, 0xd2, 0x13, 0x4c, 0x5e, 0x5f, 0x03, 0xfe, 0x4c, 0xe9, 0x7e, 0x47,  // .{..@..L^_..L.~G
///* 0060 */ 0xbe, 0xa9, 0xd8, 0xba, 0x3e, 0x46, 0x1f, 0xcb, 0x4d, 0xc1, 0xde, 0x45, 0x29, 0x38, 0xfb, 0xd2,  // ....>F..M..E)8..
///* 0070 */ 0x82, 0x50, 0x2c, 0x51, 0xc1, 0x29, 0x57,                                                        // .P,Q.)W
//TSRequest pubkeyAuth ------------------------------
//TSRequest error_code 0 ---------------------------
//TSRequest clientNonce -----------------------------
///* 0000 */ 0x4c, 0x55, 0x31, 0xef, 0xf8, 0xd7, 0xeb, 0x7b, 0xd5, 0x1e, 0xe8, 0x58, 0x3f, 0xc6, 0x7b, 0x69,  // LU1....{...X?.{i
///* 0010 */ 0x9f, 0x31, 0xbb, 0xc8, 0xea, 0x3c, 0x9c, 0x92, 0x9a, 0xe2, 0x6b, 0x70, 0xaa, 0xb8, 0x0d, 0x3e,  // .1...<....kp...>
//TSRequest ts_request_header --(request length = 164)-
///* 0000 */ 0x30, 0x81, 0xa4,                                                                                // 0..
//TSRequest version_field ---------------------------
///* 0000 */ 0xa0, 0x03, 0x02, 0x01, 0x06,                                                                    // .....
//TSRequest nego_tokens_header ----------------------
//TSRequest auth_info_header ------------------------
///* 0000 */ 0xa2, 0x79, 0x04, 0x77,                                                                          // .y.w
//TSRequest pub_key_auth_header ---------------------
//TSRequest error_code field ------------------------
//TSRequest nonce -----------------------------------
///* 0000 */ 0xa5, 0x22, 0x04, 0x20,                                                                          // .". 
//emit TSRequest full dump--------------------------------
///* 0000 */ 0x30, 0x81, 0xa4, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa2, 0x79, 0x04, 0x77, 0x01, 0x00, 0x00, 0x00,  // 0........y.w....
///* 0010 */ 0x05, 0x8b, 0x82, 0x0b, 0xc2, 0xd0, 0x8a, 0x3b, 0x01, 0x00, 0x00, 0x00, 0x71, 0x09, 0xce, 0x7f,  // .......;....q...
///* 0020 */ 0x07, 0xbc, 0x61, 0x05, 0x14, 0xa2, 0xbe, 0x9e, 0x96, 0x5b, 0xd5, 0x2e, 0xf5, 0xdb, 0x43, 0xa4,  // ..a......[....C.
///* 0030 */ 0x55, 0xe9, 0x58, 0x62, 0x39, 0x5b, 0x3c, 0xfe, 0xe4, 0xe7, 0x7d, 0xc0, 0x7a, 0x70, 0x85, 0x93,  // U.Xb9[<...}.zp..
///* 0040 */ 0x79, 0x64, 0xa5, 0x18, 0x52, 0xb8, 0x45, 0xd7, 0x0c, 0x4a, 0xc2, 0xd8, 0x3a, 0x80, 0xc8, 0xaf,  // yd..R.E..J..:...
///* 0050 */ 0xf8, 0x61, 0xd4, 0xf9, 0xf0, 0x13, 0xc8, 0xf0, 0x06, 0x15, 0x6e, 0x67, 0x7f, 0x7b, 0xb5, 0xdc,  // .a........ng.{..
///* 0060 */ 0x40, 0xd2, 0x13, 0x4c, 0x5e, 0x5f, 0x03, 0xfe, 0x4c, 0xe9, 0x7e, 0x47, 0xbe, 0xa9, 0xd8, 0xba,  // @..L^_..L.~G....
///* 0070 */ 0x3e, 0x46, 0x1f, 0xcb, 0x4d, 0xc1, 0xde, 0x45, 0x29, 0x38, 0xfb, 0xd2, 0x82, 0x50, 0x2c, 0x51,  // >F..M..E)8...P,Q
///* 0080 */ 0xc1, 0x29, 0x57, 0xa5, 0x22, 0x04, 0x20, 0x4c, 0x55, 0x31, 0xef, 0xf8, 0xd7, 0xeb, 0x7b, 0xd5,  // .)W.". LU1....{.
///* 0090 */ 0x1e, 0xe8, 0x58, 0x3f, 0xc6, 0x7b, 0x69, 0x9f, 0x31, 0xbb, 0xc8, 0xea, 0x3c, 0x9c, 0x92, 0x9a,  // ..X?.{i.1...<...
///* 00a0 */ 0xe2, 0x6b, 0x70, 0xaa, 0xb8, 0x0d, 0x3e,                                                        // .kp...>
//emit TSRequest hexdump -DONE----------------------------
//CS_Cluster: Server Redirection Supported
//GCC::UserData tag=0c01 length=16
//GCC::UserData tag=0c03 length=16
//GCC::UserData tag=0c02 length=12
//=================== SC_SECURITY =============
//No encryption
//send extended login info (RDP5-style) 107fb :Administrator@proxykdc.lab
//Rdp::Get license: username="Administrator@proxykdc.lab"
//RdpNegociation::get_license LIC::RecvFactory::flic.tag=255
///* 0000 */ 0xff, 0x03, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,  // ................
//use rdp5
//mod_rdp::send_input_fastpath: Synchronize Event toggleFlags=0x0
//Rdp::receiving the server-to-client Monitor Layout PDU MonitorLayoutPDU monitorCount=1 ((left=0, top=0, right=1919, bottom=1079, primary=yes(0x1)))
//Resizing to 1920x1080x16
//rdpproxy: [RDP Session] session_id="SESSIONID-0000" client_ip="10.10.43.9" target_ip="10.10.44.217" user="u" device="win2k12" service="rdp" account="Administrator@proxykdc.lab" type="SESSION_ESTABLISHED_SUCCESSFULLY"
//mod_rdp::send_input_fastpath: Synchronize Event toggleFlags=0x0
//Front::can_be_start_capture: Capture is not necessary
//recv_tls WANT READ
//process save session info : Logon extended info
//process save session info : Logon Errors Info
//ErrorNotificationType=LOGON_MSG_SESSION_CONTINUE(0xFFFFFFFE) "The logon process is continuing." SessionIdentifier=2
//process save session info : Logon long
//Logon Info Version 2 (data): Domain="PROXYKDC" UserName="Administrator" SessionId=2
//process save session info : Logon extended info
//process save session info : Auto-reconnect cookie
//ServerAutoReconnectPacket: Version=1 LogonId=2
//0000 93 bc b4 66 33 bf 5b 17 c6 15 df 05 5a 49 2c 14  ...f3.[.....ZI,.
//Front::incoming: (Fast-Path) Synchronize Event toggleFlags=0x0
//mod_rdp::send_input_fastpath: Synchronize Event toggleFlags=0x0
//Front::incoming: (Fast-Path) Synchronize Event toggleFlags=0x0
//mod_rdp::send_input_fastpath: Synchronize Event toggleFlags=0x0
//Front::incoming: DisconnectProviderUltimatum received
//Front::incoming: DisconnectProviderUltimatum: reason=RN_USER_REQUESTED [3]
//rdpproxy: [RDP Session] session_id="SESSIONID-0000" client_ip="10.10.43.9" target_ip="10.10.44.217" user="u" device="win2k12" service="rdp" account="Administrator@proxykdc.lab" type="SESSION_DISCONNECTION" duration="0:00:25"
//rdpproxy: [rdpproxy] psid="156994835419414" user="u" type="TARGET_DISCONNECTION" 
//RDP Target (-1): total_received=134116, total_sent=24507
//Session::Client Session Disconnected
//rdpproxy: [rdpproxy] psid="156994835419414" user="u" type="DISCONNECT"


RED_AUTO_TEST_CASE(TestNlaserver1)
{
    RED_TEST_MESSAGE("==================== TestNlaserver1 ===================");

    std::string user("Administrator@proxykdc.lab");
    std::string domain("");
    uint8_t pass[] = "SecureLinux!3";
    uint8_t host[] = "WIN10CGR";

//Time Stamp (1569948384, 939173)
//Client Random Challenge {0xaa, 0x52, 0xcc, 0x44, 0xe5, 0x73, 0x04, 0xb5}
//NTLMContextClient Compute response: SessionBaseKey
//using /dev/urandom as random source
//Random ExportedSessionKey
///* 0000 */ 0xd5, 0x3d, 0xb7, 0x01, 0x08, 0x23, 0x6c, 0x84, 0x00, 0xf0, 0xe6, 0x34, 0x6a, 0xf6, 0xc7, 0x49,  // .=...#l....4j..I

    ReplayRandom rand(std::vector<uint8_t>({0xab, 0xb8, 0x4d, 0x26, 0xe0, 0x87, 0x11, 0x87}));
    ReplayTime timeobj({{0x01D57877,0xC25FE69E}});
//\x8a\xe2\xab\xad\x62\xb1\xe4\x68
    auto get_password = [&](bytes_view user_av, bytes_view domain_av, std::vector<uint8_t> & password_array){
            auto user_str = ::UTF16toUTF8(user_av);
            auto domain_str = ::UTF16toUTF8(domain_av);
            RED_TEST_MESSAGE("+++++++++++++ Password Callback" 
                          << " user (" << user_av.size() << "):" << user_str.c_str()
                          << " domain (" << domain_av.size() << "):" << domain_str.c_str());
            RED_CHECK(user_str == user);
            RED_CHECK(domain_str == domain);
            password_array = ::UTF8toUTF16(bytes_view{pass,sizeof(pass)});
            return PasswordCallback::Ok;
        }; 

    auto public_key = std::vector<uint8_t>{
/* 0000 */ 0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01, 0x00, 0xdb, 0xf2, 0x21, 0x0a, 0x32, 0xac, 0x86,  // 0..........!.2..
/* 0010 */ 0x04, 0x88, 0xf1, 0xcc, 0x21, 0xc6, 0x89, 0x66, 0x4b, 0x88, 0xa5, 0xac, 0x84, 0xc0, 0xae, 0x52,  // ....!..fK......R
/* 0020 */ 0x6d, 0xfb, 0x4c, 0xf8, 0x3d, 0x5e, 0x51, 0xd5, 0x20, 0x8a, 0xc4, 0x6f, 0xe6, 0x68, 0x0e, 0x1b,  // m.L.=^Q. ..o.h..
/* 0030 */ 0x1e, 0x19, 0xbd, 0x95, 0x23, 0x5f, 0x67, 0x65, 0x6a, 0x05, 0xe8, 0x19, 0xc6, 0x14, 0x52, 0x88,  // ....#_gej.....R.
/* 0040 */ 0x3b, 0xde, 0x32, 0xbd, 0xd6, 0x85, 0x6a, 0x12, 0xf1, 0xbc, 0xd5, 0x65, 0xfc, 0x75, 0x04, 0xe2,  // ;.2...j....e.u..
/* 0050 */ 0x78, 0x4a, 0x6f, 0x42, 0xd7, 0x2d, 0x5d, 0xb2, 0x38, 0x50, 0xac, 0xd4, 0x1e, 0x00, 0xf1, 0x0c,  // xJoB.-].8P......
/* 0060 */ 0x5d, 0x4d, 0xc1, 0x95, 0x55, 0x17, 0x5a, 0xa4, 0x6a, 0xc3, 0x48, 0x93, 0x56, 0x3b, 0x08, 0x8c,  // ]M..U.Z.j.H.V;..
/* 0070 */ 0x0a, 0x87, 0x12, 0x57, 0x97, 0x23, 0x42, 0x1d, 0x9a, 0xb8, 0x3f, 0xd8, 0x68, 0xb8, 0xa8, 0xba,  // ...W.#B...?.h...
/* 0080 */ 0x16, 0x84, 0x38, 0xa6, 0xee, 0x88, 0x46, 0xfd, 0x0c, 0x7a, 0xdd, 0xcb, 0x72, 0x02, 0x6c, 0x84,  // ..8...F..z..r.l.
/* 0090 */ 0xfa, 0xef, 0xb6, 0x13, 0x8a, 0x6e, 0xf8, 0x71, 0x08, 0x39, 0xb1, 0x87, 0x08, 0xa0, 0xa7, 0x47,  // .....n.q.9.....G
/* 00a0 */ 0x3e, 0x40, 0x0d, 0x73, 0xb6, 0xc9, 0x8c, 0xe1, 0x76, 0xff, 0xb4, 0xa0, 0x18, 0x22, 0x3f, 0x32,  // >@.s....v...."?2
/* 00b0 */ 0x5d, 0xcc, 0xc7, 0x47, 0x4c, 0x15, 0x65, 0x48, 0x1f, 0x6d, 0xdc, 0x57, 0xbe, 0xaf, 0x71, 0xb6,  // ]..GL.eH.m.W..q.
/* 00c0 */ 0x4e, 0xa5, 0x63, 0xff, 0x04, 0xc7, 0x57, 0x3d, 0x83, 0x53, 0xd9, 0xe3, 0x73, 0x30, 0xcb, 0x08,  // N.c...W=.S..s0..
/* 00d0 */ 0xec, 0x7e, 0x98, 0x1d, 0xb2, 0x8a, 0xe6, 0xf2, 0x97, 0xbc, 0xfd, 0x5f, 0xa7, 0xf0, 0xd4, 0x10,  // .~........._....
/* 00e0 */ 0x49, 0xbb, 0x7d, 0xfb, 0xfe, 0x52, 0xd0, 0x68, 0x41, 0x61, 0xf4, 0x82, 0xf4, 0x18, 0x4a, 0x05,  // I.}..R.hAa....J.
/* 00f0 */ 0xa4, 0xe4, 0xed, 0x69, 0x60, 0x27, 0x77, 0x97, 0x20, 0xa0, 0x22, 0x85, 0x8c, 0x91, 0x2e, 0xde,  // ...i`'w. .".....
/* 0100 */ 0x0c, 0xde, 0xba, 0xca, 0x0b, 0x9e, 0xba, 0x22, 0x6b, 0x02, 0x03, 0x01, 0x00, 0x01,              // ......."k.....
    }; 
    NtlmServer ntlm_server(true, false, "PROXYKDC"_av,"WINKDC2012"_av,"PROXYKDC"_av,"WINKDC2012.proxykdc.lab"_av,"proxykdc.lab"_av,
                           public_key, 
//                           {MsvAvNbDomainName, MsvAvDnsDomainName, MsvAvNbComputerName,MsvAvDnsComputerName,MsvAvTimestamp}, 
                           {MsvAvNbDomainName, MsvAvNbComputerName, MsvAvDnsDomainName,MsvAvDnsComputerName,MsvAvTimestamp}, 
                           rand, timeobj, get_password, 6, 
                           NtlmVersion{WINDOWS_MAJOR_VERSION_6, WINDOWS_MINOR_VERSION_3, 9600, NTLMSSP_REVISION_W2K3},
                           false, true);

    std::vector<uint8_t> negotiate{ 
/* 0000 */ 0x30, 0x37, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa1, 0x30, 0x30, 0x2e, 0x30, 0x2c, 0xa0, 0x2a, 0x04,  // 07......00.0,.*.
/* 0010 */ 0x28, 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb7, 0x82, 0x08,  // (NTLMSSP........
/* 0020 */ 0xe2, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00,  // .....(.......(..
/* 0030 */ 0x00, 0x06, 0x01, 0xb1, 0x1d, 0x00, 0x00, 0x00, 0x0f,                                            // .........
    };

//     Recv negotiate, send challenge
    std::vector<uint8_t> answer_challenge{
/* 0000 */ 0x30, 0x81, 0xe6, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa1, 0x81, 0xde, 0x30, 0x81, 0xdb, 0x30, 0x81,  // 0..........0..0.
/* 0010 */ 0xd8, 0xa0, 0x81, 0xd5, 0x04, 0x81, 0xd2, 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x02,  // .......NTLMSSP..
/* 0020 */ 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x38, 0x00, 0x00, 0x00, 
                                                                             0x35, 0x82, 0x89, 0xe2,        // NEGO FLAGS
                                                                                                     0xab,  // .......8...5....
/* 0030 */ 0xb8, 0x4d, 0x26, 0xe0, 0x87, 0x11, 0x87,                                                        // Serveur Random Challenge 
                                                     0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,        // Empty array 0 x 8
                                                                                                     0x8a,  // .M&.............
/* 0040 */ 0x00, 0x8a, 0x00, 0x48, 0x00, 0x00, 0x00,                                                        // TargetInfo AVField1
                                                     0x06, 0x03, 0x80, 0x25, 0x00, 0x00, 0x00, 0x0f, 0x50,  // ...H......%....P
/* 0050 */ 0x00, 0x52, 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00, 0x02,  // .R.O.X.Y.K.D.C..
/* 0060 */ 0x00, 0x10, 0x00, 0x50, 0x00, 0x52, 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44,  // ...P.R.O.X.Y.K.D
/* 0070 */ 0x00, 0x43, 0x00, 0x01, 0x00, 0x14, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x4b, 0x00, 0x44,  // .C.....W.I.N.K.D
/* 0080 */ 0x00, 0x43, 0x00, 0x32, 0x00, 0x30, 0x00, 0x31, 0x00, 0x32, 0x00, 0x04, 0x00, 0x18, 0x00, 0x70,  // .C.2.0.1.2.....p
/* 0090 */ 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e,  // .r.o.x.y.k.d.c..
/* 00a0 */ 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x03, 0x00, 0x2e, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e,  // .l.a.b.....W.I.N
/* 00b0 */ 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00, 0x32, 0x00, 0x30, 0x00, 0x31, 0x00, 0x32, 0x00, 0x2e,  // .K.D.C.2.0.1.2..
/* 00c0 */ 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63,  // .p.r.o.x.y.k.d.c
/* 00d0 */ 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x07, 0x00, 0x08, 0x00, 0x9e, 0xe6, 0x5f,  // ...l.a.b......._
/* 00e0 */ 0xc2, 0x77, 0x78, 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00,                                            // .wx......
    };

    RED_TEST_MESSAGE("+++++++++++++ Server receive NTLM Negotiate --> answer with NTLM Challenge");

    RED_CHECK_HMEM(answer_challenge, ntlm_server.authenticate_next(negotiate));
    RED_CHECK_EQUAL(credssp::State::Cont, ntlm_server.state);

//    std::vector<uint8_t> authenticate{
//    };

//    std::vector<uint8_t> pubauthkey{
//    };

//    RED_TEST_MESSAGE("+++++++++++++ Server receive NTLM Authenticate --> answer with NTLM Pubauthkey");
//    RED_CHECK_HMEM(pubauthkey, ntlm_server.authenticate_next(authenticate));
//    
//    RED_CHECK_EQUAL(credssp::State::Cont, ntlm_server.state);
//    
//    std::vector<uint8_t>  ts_credentials{
//    };

//    RED_TEST_MESSAGE("+++++++++++++ Server receive NTLM TS Credentials --> NTLM Finished");
//    
//    // Recv ts_credential, -> finished
//    RED_CHECK_EQUAL(ntlm_server.authenticate_next(ts_credentials).size(), 0);
//    RED_CHECK_EQUAL(ntlm_server.state, credssp::State::Finish);
//    RED_TEST_MESSAGE("\n");
}



// ============================================================================================================================


//rdpproxy: [rdpproxy] psid="156994862419504" type="INCOMING_CONNECTION" src_ip="10.10.43.9" src_port="65447"
//rdpproxy: INFO (19504/19504) -- Redemption 7.2.23
//rdpproxy: INFO (19504/19504) -- src=10.10.43.9 sport=65447 dst=10.10.43.12 dport=3389
//rdpproxy: INFO (19504/19504) -- New session on 5 (pid=19504) from 10.10.43.9 to 10.10.43.12
//rdpproxy: INFO (19504/19504) -- CR Recv: PROTOCOL TLS
//rdpproxy: INFO (19504/19504) -- CR Recv: PROTOCOL HYBRID
//rdpproxy: INFO (19504/19504) -- CR Recv: PROTOCOL HYBRID EX
//rdpproxy: INFO (19504/19504) -- -----------------> Front::incoming: TLS Support Enabled
//rdpproxy: INFO (19504/19504) -- CC Send: PROTOCOL TLS
//rdpproxy: INFO (19504/19504) -- SocketTransport::enable_server_tls() start
//rdpproxy: INFO (19504/19504) -- TLSContext::enable_server_tls() set SSL options
//rdpproxy: INFO (19504/19504) -- TLSContext::enable_server_tls() set SSL cipher list
//rdpproxy: INFO (19504/19504) -- TLSContext::X509_get_pubkey()
//rdpproxy: INFO (19504/19504) -- TLSContext::i2d_PublicKey()
//rdpproxy: INFO (19504/19504) -- TLSContext::i2d_PublicKey()
//rdpproxy: INFO (19504/19504) -- Incoming connection to Bastion using TLS version TLSv1.2
//rdpproxy: INFO (19504/19504) -- TLSContext::Negociated cipher used ECDHE-RSA-AES256-GCM-SHA384
//rdpproxy: INFO (19504/19504) -- SocketTransport::enable_server_tls() done
//rdpproxy: INFO (19504/19504) -- partial_recv_tls error:00000005:lib(0):func(0):DH lib
//rdpproxy: INFO (19504/19504) -- got SIGPIPE(13) : ignoring
//rdpproxy: INFO (19504/19504) -- Failure in SSL library, error=5, Broken pipe [32]
//rdpproxy: INFO (19504/19504) -- partial_send_tls error:00000005:lib(0):func(0):DH lib
//rdpproxy: WARNING (19504/19504) -- SocketTransport::Send failed on RDP Client (5) errno=32 [Broken pipe]
//rdpproxy: INFO (19504/19504) -- Session::Session Init exception = Exception ERR_TRANSPORT_WRITE_FAILED no: 1502!
//rdpproxy: INFO (19504/19504) -- Session::Client Session Disconnected
//rdpproxy: [rdpproxy] psid="156994862419504" type="DISCONNECT" reason="Exception ERR_TRANSPORT_WRITE_FAILED no: 1502"
//rdpproxy: [rdpproxy] psid="156994862519505" type="INCOMING_CONNECTION" src_ip="10.10.43.9" src_port="65452"
//rdpproxy: INFO (19505/19505) -- Redemption 7.2.23
//rdpproxy: INFO (19505/19505) -- src=10.10.43.9 sport=65452 dst=10.10.43.12 dport=3389
//rdpproxy: INFO (19505/19505) -- New session on 5 (pid=19505) from 10.10.43.9 to 10.10.43.12
//rdpproxy: INFO (19505/19505) -- CR Recv: PROTOCOL TLS
//rdpproxy: INFO (19505/19505) -- CR Recv: PROTOCOL HYBRID
//rdpproxy: INFO (19505/19505) -- CR Recv: PROTOCOL HYBRID EX
//rdpproxy: INFO (19505/19505) -- -----------------> Front::incoming: TLS Support Enabled
//rdpproxy: INFO (19505/19505) -- CC Send: PROTOCOL TLS
//rdpproxy: INFO (19505/19505) -- SocketTransport::enable_server_tls() start
//rdpproxy: INFO (19505/19505) -- TLSContext::enable_server_tls() set SSL options
//rdpproxy: INFO (19505/19505) -- TLSContext::enable_server_tls() set SSL cipher list
//rdpproxy: INFO (19505/19505) -- TLSContext::X509_get_pubkey()
//rdpproxy: INFO (19505/19505) -- TLSContext::i2d_PublicKey()
//rdpproxy: INFO (19505/19505) -- TLSContext::i2d_PublicKey()
//rdpproxy: INFO (19505/19505) -- Incoming connection to Bastion using TLS version TLSv1.2
//rdpproxy: INFO (19505/19505) -- TLSContext::Negociated cipher used ECDHE-RSA-AES256-GCM-SHA384
//rdpproxy: INFO (19505/19505) -- SocketTransport::enable_server_tls() done
//rdpproxy: INFO (19505/19505) -- GCC::UserData tag=c001 length=234
//rdpproxy: INFO (19505/19505) -- GCC::UserData tag=c004 length=12
//rdpproxy: INFO (19505/19505) -- GCC::UserData tag=c002 length=12
//rdpproxy: INFO (19505/19505) -- GCC::UserData tag=c003 length=56
//rdpproxy: INFO (19505/19505) -- GCC::UserData tag=c006 length=8
//rdpproxy: INFO (19505/19505) -- GCC::UserData tag=c00a length=8
//rdpproxy: INFO (19505/19505) -- Front::incoming: TLS mode: exchange packet disabled
//rdpproxy: INFO (19505/19505) -- Front::incoming: Secure Settings Exchange
//rdpproxy: INFO (19505/19505) -- RDP-5 Style logon
//rdpproxy: ERR (19505/19505) -- Missing data for InfoPacket.cbAutoReconnectLen
//rdpproxy: ERR (19505/19505) -- Front::incoming: process_logon all data should have been consumed 70 bytes trailing
//rdpproxy: INFO (19505/19505) -- Front::incoming: Keyboard Layout = 0x40c
//rdpproxy: INFO (19505/19505) -- Front::incoming: ACTIVATED (new license request)
//rdpproxy: INFO (19505/19505) -- Front::process_data: asking for selector
//rdpproxy: INFO (19505/19505) -- connecting to /tmp/redemption-sesman-sock
//rdpproxy: INFO (19505/19505) -- connection to /tmp/redemption-sesman-sock succeeded : socket 4
//rdpproxy: INFO (19505/19505) -- ModuleManager::internal module 'Transition' loaded
//rdpproxy: INFO (19505/19505) -- ===========> MODULE_NEXT
//rdpproxy: INFO (19505/19505) -- ----------> ACL next_module <--------
//rdpproxy: INFO (19505/19505) -- ===========> MODULE_LOGIN
//rdpproxy: INFO (19505/19505) -- ----------> ACL new_mod <--------
//rdpproxy: INFO (19505/19505) -- target_module=MODULE_INTERNAL_WIDGET_LOGIN(7)
//rdpproxy: INFO (19505/19505) -- ModuleManager::Creation of internal module 'Login'
//rdpproxy: INFO (19505/19505) -- LoginMod: Ending session in 120 seconds
//rdpproxy: INFO (19505/19505) -- ModuleManager::internal module Login ready
//rdpproxy: INFO (19505/19505) -- Front::incoming: (Fast-Path) Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- Front::incoming: (Fast-Path) Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- ModuleManager::internal module 'Transition' loaded
//rdpproxy: INFO (19505/19505) -- ===========> MODULE_NEXT
//rdpproxy: INFO (19505/19505) -- ----------> ACL next_module <--------
//rdpproxy: INFO (19505/19505) -- ===============> MODULE_SELECTOR
//rdpproxy: INFO (19505/19505) -- ----------> ACL new_mod <--------
//rdpproxy: INFO (19505/19505) -- target_module=MODULE_INTERNAL_WIDGET_SELECTOR(15)
//rdpproxy: INFO (19505/19505) -- ModuleManager::Creation of internal module 'selector'
//rdpproxy: WARNING (19505/19505) -- Unexpected receving 'end_time' - '-;-;-;-;-;-'
//rdpproxy: INFO (19505/19505) -- ModuleManager::internal module 'Transition' loaded
//rdpproxy: INFO (19505/19505) -- ===========> MODULE_NEXT
//rdpproxy: INFO (19505/19505) -- ----------> ACL next_module <--------
//rdpproxy: INFO (19505/19505) -- ===============> WAIT WITH CURRENT MODULE
//rdpproxy: INFO (19505/19505) -- ===========> MODULE_NEXT
//rdpproxy: INFO (19505/19505) -- ----------> ACL next_module <--------
//rdpproxy: INFO (19505/19505) -- ===============> WAIT WITH CURRENT MODULE
//rdpproxy: INFO (19505/19505) -- ===========> MODULE_NEXT
//rdpproxy: INFO (19505/19505) -- ----------> ACL next_module <--------
//rdpproxy: INFO (19505/19505) -- ===============> WAIT WITH CURRENT MODULE
//rdpproxy: INFO (19505/19505) -- ===========> MODULE_NEXT
//rdpproxy: INFO (19505/19505) -- ----------> ACL next_module <--------
//rdpproxy: INFO (19505/19505) -- ===========> MODULE_RDP
//rdpproxy: INFO (19505/19505) -- ----------> ACL new_mod <--------
//rdpproxy: INFO (19505/19505) -- target_module=MODULE_RDP(2)
//rdpproxy: WARNING (19505/19505) -- AclSerializer::start_session_log: failed to extract date
//rdpproxy: INFO (19505/19505) -- ModuleManager::Creation of new mod 'RDP'
//rdpproxy: [rdpproxy] psid="156994862519505" user="u" type="TARGET_CONNECTION" target="PROXYKDC\hercule" host="WIN10CGR.proxykdc.lab" port="3389"
//rdpproxy: INFO (19505/19505) -- connecting to WIN10CGR.proxykdc.lab:3389
//rdpproxy: INFO (19505/19505) -- connection to WIN10CGR.proxykdc.lab:3389 (10.10.43.9) succeeded : socket 7
//rdpproxy: INFO (19505/19505) -- SocketTransport: recv_timeout=1000
//rdpproxy: INFO (19505/19505) -- Remote RDP Server domain="PROXYKDC" login="hercule" host="WIN10CGR"
//rdpproxy: INFO (19505/19505) -- RdpNego: TLS=Enabled NLA=Enabled adminMode=Disabled
//rdpproxy: INFO (19505/19505) -- Server key layout is 40c
//rdpproxy: INFO (19505/19505) -- ModuleManager::Creation of new mod 'RDP' suceeded
//rdpproxy: INFO (19505/19505) -- RdpNego::NEGO_STATE_INITIAL
//rdpproxy: INFO (19505/19505) -- RdpNego::send_x224_connection_request_pdu
//rdpproxy: INFO (19505/19505) -- Send cookie:
//rdpproxy: INFO (19505/19505) -- /* 0000 */ "\x43\x6f\x6f\x6b\x69\x65\x3a\x20\x6d\x73\x74\x73\x68\x61\x73\x68" // Cookie: mstshash
//rdpproxy: INFO (19505/19505) -- /* 0010 */ "\x3d\x50\x52\x4f\x58\x59\x4b\x44\x43\x5c\x68\x65\x72\x63\x75\x6c" // =PROXYKDC.hercul
//rdpproxy: INFO (19505/19505) -- /* 0020 */ "\x65\x0d\x0a"                                                     // e..
//rdpproxy: INFO (19505/19505) -- RdpNego::send_x224_connection_request_pdu done
//rdpproxy: INFO (19505/19505) -- RdpNego::recv_next_data::Negociate
//rdpproxy: INFO (19505/19505) -- nego->state=RdpNego::NEGO_STATE_NEGOCIATE
//rdpproxy: INFO (19505/19505) -- RdpNego::NEGO_STATE_NLA
//rdpproxy: INFO (19505/19505) -- RdpNego::recv_connection_confirm
//rdpproxy: INFO (19505/19505) -- NEG_RSP_TYPE=2 NEG_RSP_FLAGS=31 NEG_RSP_LENGTH=8 NEG_RSP_SELECTED_PROTOCOL=2
//rdpproxy: INFO (19505/19505) -- CC Recv: PROTOCOL HYBRID
//rdpproxy: INFO (19505/19505) -- activating TLS (HYBRID)
//rdpproxy: INFO (19505/19505) -- RdpNego::activate_ssl_hybrid
//rdpproxy: INFO (19505/19505) -- Client TLS start
//rdpproxy: INFO (19505/19505) -- SSL_connect()
//rdpproxy: INFO (19505/19505) -- RdpNego::recv_next_data::SslHybrid
//rdpproxy: INFO (19505/19505) -- RdpNego::activate_ssl_hybrid
//rdpproxy: INFO (19505/19505) -- RdpNego::recv_next_data::SslHybrid
//rdpproxy: INFO (19505/19505) -- RdpNego::activate_ssl_hybrid
//rdpproxy: INFO (19505/19505) -- SSL_get_peer_certificate()
//rdpproxy: INFO (19505/19505) -- certificate directory is: '/etc/rdpproxy/cert/0000'
//rdpproxy: INFO (19505/19505) -- certificate file is: '/etc/rdpproxy/cert/0000/rdp,WIN10CGR.proxykdc.lab,3389,X509.pem'
//rdpproxy: INFO (19505/19505) -- nb1=1078 nb2=1078
//rdpproxy: INFO (19505/19505) -- TLS::X509 existing::issuer=CN = WIN10CGR.proxykdc.lab
//rdpproxy: INFO (19505/19505) -- TLS::X509 existing::subject=CN = WIN10CGR.proxykdc.lab
//rdpproxy: INFO (19505/19505) -- TLS::X509 existing::fingerprint=10:1b:f8:64:d4:31:1e:95:fa:db:d0:ac:5e:85:0e:4d:23:ec:f6:8b
//rdpproxy: [RDP Session] session_id="SESSIONID-0000" client_ip="10.10.43.9" target_ip="WIN10CGR.proxykdc.lab" user="u" device="win10" service="rdp" account="PROXYKDC\\hercule" type="SERVER_CERTIFICATE_MATCH_SUCCESS" description="X.509 server certificate match"
//rdpproxy: [RDP Session] session_id="SESSIONID-0000" client_ip="10.10.43.9" target_ip="WIN10CGR.proxykdc.lab" user="u" device="win10" service="rdp" account="PROXYKDC\\hercule" type="CERTIFICATE_CHECK_SUCCESS" description="Connexion to server allowed"
//rdpproxy: INFO (19505/19505) -- TLS::X509::issuer=CN = WIN10CGR.proxykdc.lab
//rdpproxy: INFO (19505/19505) -- TLS::X509::subject=CN = WIN10CGR.proxykdc.lab
//rdpproxy: INFO (19505/19505) -- TLS::X509::fingerprint=10:1b:f8:64:d4:31:1e:95:fa:db:d0:ac:5e:85:0e:4d:23:ec:f6:8b
//rdpproxy: INFO (19505/19505) -- TLSContext::X509_get_pubkey()
//rdpproxy: INFO (19505/19505) -- TLSContext::i2d_PublicKey()
//rdpproxy: INFO (19505/19505) -- Connected to target using TLS version TLSv1.2
//rdpproxy: INFO (19505/19505) -- SocketTransport::enable_client_tls() done
//rdpproxy: INFO (19505/19505) -- activating CREDSSP
//rdpproxy: INFO (19505/19505) -- rdpNTLMClient datas: (restricted_admin=false)
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x30, 0x82, 0x01, 0x0a, 0x02, 0x82, 0x01, 0x01, 0x00, 0xaa, 0x2c, 0x3b, 0x36, 0x19, 0x68, 0x7c,  // 0.........,;6.h|
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0x94, 0x11, 0x5f, 0x5f, 0xba, 0x50, 0x49, 0xbe, 0xf1, 0x12, 0x72, 0x8d, 0x2e, 0x60, 0xfb, 0x26,  // ..__.PI...r..`.&
//rdpproxy: INFO (19505/19505) -- /* 0020 */ 0x4d, 0x66, 0x30, 0xf6, 0xcd, 0xf1, 0x69, 0xd0, 0x0f, 0x53, 0xf5, 0x21, 0x9b, 0x92, 0xf0, 0xc5,  // Mf0...i..S.!....
//rdpproxy: INFO (19505/19505) -- /* 0030 */ 0xdf, 0x27, 0x3d, 0x22, 0x22, 0x9f, 0xc5, 0x94, 0xf5, 0xdd, 0xfc, 0xb6, 0x0b, 0x55, 0xb7, 0xb8,  // .'=""........U..
//rdpproxy: INFO (19505/19505) -- /* 0040 */ 0x91, 0xb1, 0x99, 0x96, 0xa1, 0xd2, 0x37, 0x8e, 0xf6, 0xed, 0x01, 0x61, 0x06, 0x95, 0x34, 0xd4,  // ......7....a..4.
//rdpproxy: INFO (19505/19505) -- /* 0050 */ 0x3f, 0xb2, 0x0c, 0xf0, 0xe1, 0x03, 0xfb, 0xc9, 0x6f, 0x08, 0x8d, 0x4b, 0xbb, 0x3c, 0x65, 0x9b,  // ?.......o..K.<e.
//rdpproxy: INFO (19505/19505) -- /* 0060 */ 0xa7, 0x2d, 0x4d, 0x7f, 0xd6, 0xab, 0x05, 0xd0, 0xa6, 0xbf, 0xa7, 0x17, 0x2b, 0x57, 0xef, 0xc8,  // .-M.........+W..
//rdpproxy: INFO (19505/19505) -- /* 0070 */ 0xe3, 0x3d, 0xc1, 0x6a, 0xf8, 0x0b, 0x90, 0x9f, 0x87, 0xfa, 0x37, 0x2e, 0xf1, 0x7e, 0x80, 0xb3,  // .=.j......7..~..
//rdpproxy: INFO (19505/19505) -- /* 0080 */ 0xc5, 0x39, 0x8f, 0x72, 0x53, 0x3d, 0xda, 0x63, 0x6a, 0x8a, 0x81, 0x1a, 0xac, 0x04, 0x4d, 0xd7,  // .9.rS=.cj.....M.
//rdpproxy: INFO (19505/19505) -- /* 0090 */ 0x51, 0x23, 0x25, 0x52, 0x5b, 0xbb, 0x7c, 0x21, 0x72, 0x7c, 0xea, 0xa2, 0xf6, 0xcd, 0xc2, 0xaa,  // Q#%R[.|!r|......
//rdpproxy: INFO (19505/19505) -- /* 00a0 */ 0x0d, 0x68, 0x77, 0xe1, 0x9f, 0x27, 0x99, 0x27, 0x7e, 0x19, 0x07, 0x71, 0x0e, 0x2c, 0xa8, 0x4a,  // .hw..'.'~..q.,.J
//rdpproxy: INFO (19505/19505) -- /* 00b0 */ 0xc7, 0x30, 0x36, 0xc5, 0x14, 0xc1, 0xcb, 0xf3, 0x4f, 0xa6, 0xd8, 0x90, 0x3b, 0x7d, 0xe1, 0x72,  // .06.....O...;}.r
//rdpproxy: INFO (19505/19505) -- /* 00c0 */ 0x4c, 0xda, 0x51, 0x75, 0x04, 0xe2, 0xd7, 0x3b, 0xfb, 0xb0, 0x6f, 0xc9, 0xd0, 0x2a, 0xb8, 0xcc,  // L.Qu...;..o..*..
//rdpproxy: INFO (19505/19505) -- /* 00d0 */ 0xc6, 0x1f, 0x7a, 0xff, 0x22, 0x13, 0x81, 0x73, 0x27, 0x4d, 0x47, 0xbf, 0xbf, 0x4d, 0xa4, 0x19,  // ..z."..s'MG..M..
//rdpproxy: INFO (19505/19505) -- /* 00e0 */ 0x4c, 0x2d, 0xa8, 0x5b, 0xd9, 0x4f, 0x9f, 0xe6, 0xa5, 0x57, 0xe9, 0x00, 0xc9, 0xd4, 0xc9, 0xcd,  // L-.[.O...W......
//rdpproxy: INFO (19505/19505) -- /* 00f0 */ 0xd7, 0x14, 0x2a, 0xcc, 0x21, 0x38, 0x3f, 0xfe, 0x40, 0xd7, 0x75, 0xf2, 0xef, 0x0d, 0x5d, 0x6e,  // ..*.!8?.@.u...]n
//rdpproxy: INFO (19505/19505) -- /* 0100 */ 0x6b, 0xa8, 0xe6, 0x10, 0x89, 0x24, 0x6b, 0xdc, 0x61, 0x02, 0x03, 0x01, 0x00, 0x01,              // k....$k.a.....
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x68, 0x00, 0x65, 0x00, 0x72, 0x00, 0x63, 0x00, 0x75, 0x00, 0x6c, 0x00, 0x65, 0x00,              // h.e.r.c.u.l.e.
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x50, 0x00, 0x52, 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00,  // P.R.O.X.Y.K.D.C.
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x53, 0x00, 0x65, 0x00, 0x63, 0x00, 0x75, 0x00, 0x72, 0x00, 0x65, 0x00, 0x4c, 0x00, 0x69, 0x00,  // S.e.c.u.r.e.L.i.
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0x6e, 0x00, 0x75, 0x00, 0x78, 0x00, 0x24, 0x00, 0x34, 0x00, 0x32, 0x00,                          // n.u.x.$.4.2.
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00, 0x30, 0x00, 0x43, 0x00, 0x47, 0x00, 0x52, 0x00,  // W.I.N.1.0.C.G.R.
//rdpproxy: INFO (19505/19505) -- rdpNTLMClient datas done ==============
//rdpproxy: INFO (19505/19505) -- NTLM Authentication : Negotiate - sending Authentication Token
//rdpproxy: INFO (19505/19505) -- TSRequest hexdump ---------------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest version 6 ------------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest negoTokens ------------------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb7, 0x82, 0x08, 0xe2,  // NTLMSSP.........
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00,  // ....(.......(...
//rdpproxy: INFO (19505/19505) -- /* 0020 */ 0x06, 0x01, 0xb1, 0x1d, 0x00, 0x00, 0x00, 0x0f,                                                  // ........
//rdpproxy: INFO (19505/19505) -- TSRequest authInfo --------------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest pubkeyAuth ------------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest error_code 0 ---------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest clientNonce -----------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest ts_request_header --(request length = 55)-
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x30, 0x37,                                                                                      // 07
//rdpproxy: INFO (19505/19505) -- TSRequest version_field ---------------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0xa0, 0x03, 0x02, 0x01, 0x06,                                                                    // .....
//rdpproxy: INFO (19505/19505) -- TSRequest nego_tokens_header ----------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0xa1, 0x30, 0x30, 0x2e, 0x30, 0x2c, 0xa0, 0x2a, 0x04, 0x28,                                      // .00.0,.*.(
//rdpproxy: INFO (19505/19505) -- TSRequest auth_info_header ------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest pub_key_auth_header ---------------------
//rdpproxy: INFO (19505/19505) -- TSRequest error_code field ------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest nonce -----------------------------------
//rdpproxy: INFO (19505/19505) -- emit TSRequest full dump--------------------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x30, 0x37, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa1, 0x30, 0x30, 0x2e, 0x30, 0x2c, 0xa0, 0x2a, 0x04,  // 07......00.0,.*.
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0x28, 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb7, 0x82, 0x08,  // (NTLMSSP........
//rdpproxy: INFO (19505/19505) -- /* 0020 */ 0xe2, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00,  // .....(.......(..
//rdpproxy: INFO (19505/19505) -- /* 0030 */ 0x00, 0x06, 0x01, 0xb1, 0x1d, 0x00, 0x00, 0x00, 0x0f,                                            // .........
//rdpproxy: INFO (19505/19505) -- emit TSRequest hexdump -DONE----------------------------
//rdpproxy: INFO (19505/19505) -- RdpNego::recv_next_data::Credssp
//rdpproxy: INFO (19505/19505) -- RdpNego::recv_credssp
//rdpproxy: INFO (19505/19505) -- Client Authentication : Receiving Authentication Token - Challenge
//rdpproxy: INFO (19505/19505) -- recv TSRequest full dump++++++++++++++++++++++++++++++++
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x30, 0x81, 0xfa, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa1, 0x81, 0xf2, 0x30, 0x81, 0xef, 0x30, 0x81,  // 0..........0..0.
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0xec, 0xa0, 0x81, 0xe9, 0x04, 0x81, 0xe6, 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x02,  // .......NTLMSSP..
//rdpproxy: INFO (19505/19505) -- /* 0020 */ 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x38, 0x00, 0x00, 0x00, 0x35, 0x82, 0x89, 0xe2, 0x72,  // .......8...5...r
//rdpproxy: INFO (19505/19505) -- /* 0030 */ 0xe9, 0x0e, 0x66, 0x83, 0x2e, 0x12, 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x9e,  // ..f.............
//rdpproxy: INFO (19505/19505) -- /* 0040 */ 0x00, 0x9e, 0x00, 0x48, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x63, 0x45, 0x00, 0x00, 0x00, 0x0f, 0x50,  // ...H.....cE....P
//rdpproxy: INFO (19505/19505) -- /* 0050 */ 0x00, 0x52, 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00, 0x02,  // .R.O.X.Y.K.D.C..
//rdpproxy: INFO (19505/19505) -- /* 0060 */ 0x00, 0x10, 0x00, 0x50, 0x00, 0x52, 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44,  // ...P.R.O.X.Y.K.D
//rdpproxy: INFO (19505/19505) -- /* 0070 */ 0x00, 0x43, 0x00, 0x01, 0x00, 0x10, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00, 0x30,  // .C.....W.I.N.1.0
//rdpproxy: INFO (19505/19505) -- /* 0080 */ 0x00, 0x43, 0x00, 0x47, 0x00, 0x52, 0x00, 0x04, 0x00, 0x18, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f,  // .C.G.R.....p.r.o
//rdpproxy: INFO (19505/19505) -- /* 0090 */ 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61,  // .x.y.k.d.c...l.a
//rdpproxy: INFO (19505/19505) -- /* 00a0 */ 0x00, 0x62, 0x00, 0x03, 0x00, 0x2a, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00, 0x30,  // .b...*.W.I.N.1.0
//rdpproxy: INFO (19505/19505) -- /* 00b0 */ 0x00, 0x43, 0x00, 0x47, 0x00, 0x52, 0x00, 0x2e, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78,  // .C.G.R...p.r.o.x
//rdpproxy: INFO (19505/19505) -- /* 00c0 */ 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62,  // .y.k.d.c...l.a.b
//rdpproxy: INFO (19505/19505) -- /* 00d0 */ 0x00, 0x05, 0x00, 0x18, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b,  // .....p.r.o.x.y.k
//rdpproxy: INFO (19505/19505) -- /* 00e0 */ 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x07, 0x00, 0x08,  // .d.c...l.a.b....
//rdpproxy: INFO (19505/19505) -- /* 00f0 */ 0x00, 0xc1, 0x9c, 0x74, 0x5a, 0x78, 0x78, 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00,                    // ...tZxx......
//rdpproxy: INFO (19505/19505) -- recv TSRequest hexdump - START PARSING DATA+++++++++++++
//rdpproxy: INFO (19505/19505) -- Credssp recvTSRequest() Remote Version 6, Negotiated version 6
//rdpproxy: INFO (19505/19505) -- Target Name (56 16)
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x50, 0x00, 0x52, 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00,  // P.R.O.X.Y.K.D.C.
//rdpproxy: INFO (19505/19505) -- Target Info (72 158)
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x02, 0x00, 0x10, 0x00, 0x50, 0x00, 0x52, 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00,  // ....P.R.O.X.Y.K.
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0x44, 0x00, 0x43, 0x00, 0x01, 0x00, 0x10, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00,  // D.C.....W.I.N.1.
//rdpproxy: INFO (19505/19505) -- /* 0020 */ 0x30, 0x00, 0x43, 0x00, 0x47, 0x00, 0x52, 0x00, 0x04, 0x00, 0x18, 0x00, 0x70, 0x00, 0x72, 0x00,  // 0.C.G.R.....p.r.
//rdpproxy: INFO (19505/19505) -- /* 0030 */ 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00,  // o.x.y.k.d.c...l.
//rdpproxy: INFO (19505/19505) -- /* 0040 */ 0x61, 0x00, 0x62, 0x00, 0x03, 0x00, 0x2a, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00,  // a.b...*.W.I.N.1.
//rdpproxy: INFO (19505/19505) -- /* 0050 */ 0x30, 0x00, 0x43, 0x00, 0x47, 0x00, 0x52, 0x00, 0x2e, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00,  // 0.C.G.R...p.r.o.
//rdpproxy: INFO (19505/19505) -- /* 0060 */ 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00,  // x.y.k.d.c...l.a.
//rdpproxy: INFO (19505/19505) -- /* 0070 */ 0x62, 0x00, 0x05, 0x00, 0x18, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00,  // b.....p.r.o.x.y.
//rdpproxy: INFO (19505/19505) -- /* 0080 */ 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x07, 0x00,  // k.d.c...l.a.b...
//rdpproxy: INFO (19505/19505) -- /* 0090 */ 0x08, 0x00, 0xc1, 0x9c, 0x74, 0x5a, 0x78, 0x78, 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00,              // ....tZxx......
//rdpproxy: INFO (19505/19505) -- NTLMContextClient Compute response from challenge
//rdpproxy: INFO (19505/19505) -- using /dev/urandom as random source
//rdpproxy: INFO (19505/19505) -- Time Stamp (1569948639, 973866)
//rdpproxy: INFO (19505/19505) -- Client Random Challenge {0x61, 0xdf, 0x4c, 0x0d, 0xb7, 0x66, 0xd8, 0xc0}
//rdpproxy: INFO (19505/19505) -- NTLMContextClient Compute response: SessionBaseKey
//rdpproxy: INFO (19505/19505) -- using /dev/urandom as random source
//rdpproxy: INFO (19505/19505) -- Random ExportedSessionKey
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x5c, 0xb8, 0x8b, 0x4f, 0x44, 0x0a, 0x23, 0xda, 0x7a, 0xd1, 0x98, 0x5b, 0x50, 0xc3, 0x93, 0x6b,  // ...OD.#.z..[P..k
//rdpproxy: INFO (19505/19505) -- Field LmChallengeResponse, len: 24
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0xc2, 0x29, 0x7c, 0x45, 0x9a, 0x99, 0x28, 0x6a, 0x0f, 0xa2, 0xd5, 0x53, 0x51, 0xa6, 0x52, 0xff,  // .)|E..(j...SQ.R.
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0x61, 0xdf, 0x4c, 0x0d, 0xb7, 0x66, 0xd8, 0xc0,                                                  // a.L..f..
//rdpproxy: INFO (19505/19505) -- Field NtChallengeResponse, len: 206
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x23, 0xca, 0x37, 0x3f, 0xe6, 0x9e, 0xba, 0xce, 0xc0, 0xbc, 0x5f, 0xb7, 0x8a, 0xdc, 0x29, 0xd9,  // #.7?......_...).
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0xdc, 0x0e, 0x00, 0xdf, 0x83, 0x93, 0x5d,  // ........*......]
//rdpproxy: INFO (19505/19505) -- /* 0020 */ 0x61, 0xdf, 0x4c, 0x0d, 0xb7, 0x66, 0xd8, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x10, 0x00,  // a.L..f..........
//rdpproxy: INFO (19505/19505) -- /* 0030 */ 0x50, 0x00, 0x52, 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00,  // P.R.O.X.Y.K.D.C.
//rdpproxy: INFO (19505/19505) -- /* 0040 */ 0x01, 0x00, 0x10, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00, 0x30, 0x00, 0x43, 0x00,  // ....W.I.N.1.0.C.
//rdpproxy: INFO (19505/19505) -- /* 0050 */ 0x47, 0x00, 0x52, 0x00, 0x04, 0x00, 0x18, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00,  // G.R.....p.r.o.x.
//rdpproxy: INFO (19505/19505) -- /* 0060 */ 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00,  // y.k.d.c...l.a.b.
//rdpproxy: INFO (19505/19505) -- /* 0070 */ 0x03, 0x00, 0x2a, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00, 0x30, 0x00, 0x43, 0x00,  // ..*.W.I.N.1.0.C.
//rdpproxy: INFO (19505/19505) -- /* 0080 */ 0x47, 0x00, 0x52, 0x00, 0x2e, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00,  // G.R...p.r.o.x.y.
//rdpproxy: INFO (19505/19505) -- /* 0090 */ 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x05, 0x00,  // k.d.c...l.a.b...
//rdpproxy: INFO (19505/19505) -- /* 00a0 */ 0x18, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00,  // ..p.r.o.x.y.k.d.
//rdpproxy: INFO (19505/19505) -- /* 00b0 */ 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x07, 0x00, 0x08, 0x00, 0xc1, 0x9c,  // c...l.a.b.......
//rdpproxy: INFO (19505/19505) -- /* 00c0 */ 0x74, 0x5a, 0x78, 0x78, 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,              // tZxx..........
//rdpproxy: INFO (19505/19505) -- Field DomainName, len: 16
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x50, 0x00, 0x52, 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00,  // P.R.O.X.Y.K.D.C.
//rdpproxy: INFO (19505/19505) -- Field UserName, len: 14
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x68, 0x00, 0x65, 0x00, 0x72, 0x00, 0x63, 0x00, 0x75, 0x00, 0x6c, 0x00, 0x65, 0x00,              // h.e.r.c.u.l.e.
//rdpproxy: INFO (19505/19505) -- Field Workstation, len: 16
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00, 0x30, 0x00, 0x43, 0x00, 0x47, 0x00, 0x52, 0x00,  // W.I.N.1.0.C.G.R.
//rdpproxy: INFO (19505/19505) -- Field EncryptedRandomSessionKey, len: 16
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x20, 0x08, 0xa5, 0xb5, 0x02, 0x30, 0x26, 0x94, 0x65, 0xe1, 0x95, 0x5f, 0x5f, 0x4f, 0x68, 0x68,  //  ....0&.e..__Ohh
//rdpproxy: INFO (19505/19505) -- negotiateFlags "0xE288A235"{
//rdpproxy: INFO (19505/19505) --     |NTLMSSP_NEGOTIATE_56, // (31)
//rdpproxy: INFO (19505/19505) --     |NTLMSSP_NEGOTIATE_KEY_EXCH, // (30)
//rdpproxy: INFO (19505/19505) --     |NTLMSSP_NEGOTIATE_128, // (29)
//rdpproxy: INFO (19505/19505) --     |NTLMSSP_NEGOTIATE_VERSION, // (25)
//rdpproxy: INFO (19505/19505) --     |NTLMSSP_NEGOTIATE_TARGET_INFO, // (23)
//rdpproxy: INFO (19505/19505) --     |NTLMSSP_NEGOTIATE_EXTENDED_SESSION_SECURITY, // (19)
//rdpproxy: INFO (19505/19505) --     |NTLMSSP_NEGOTIATE_ALWAYS_SIGN, // (15)
//rdpproxy: INFO (19505/19505) --     |NTLMSSP_NEGOTIATE_WORKSTATION_SUPPLIED, // (13)
//rdpproxy: INFO (19505/19505) --     |NTLMSSP_NEGOTIATE_NTLM, // (9)
//rdpproxy: INFO (19505/19505) --     |NTLMSSP_NEGOTIATE_SEAL, // (5)
//rdpproxy: INFO (19505/19505) --     |NTLMSSP_NEGOTIATE_SIGN, // (4)
//rdpproxy: INFO (19505/19505) --     |NTLMSSP_REQUEST_TARGET, // (2)
//rdpproxy: INFO (19505/19505) --     |NTLMSSP_NEGOTIATE_UNICODE, // (0)
//rdpproxy: INFO (19505/19505) -- }
//rdpproxy: INFO (19505/19505) -- VERSION = {
//rdpproxy: INFO (19505/19505) -- 	ProductMajorVersion: 6
//rdpproxy: INFO (19505/19505) -- 	ProductMinorVersion: 1
//rdpproxy: INFO (19505/19505) -- 	ProductBuild: 7601
//rdpproxy: INFO (19505/19505) -- 	NTLMRevisionCurrent: 0x0F
//rdpproxy: INFO (19505/19505) -- }
//rdpproxy: INFO (19505/19505) -- Field MIC, len: 16
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0xb8, 0x3e, 0x66, 0x09, 0x8f, 0xf8, 0x3e, 0xff, 0x16, 0xca, 0x84, 0x48, 0xef, 0xa1, 0x95, 0xbb,  // .>f...>....H....
//rdpproxy: INFO (19505/19505) -- Full NTLMAuthenticate Dump, len: 380
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00,  // NTLMSSP.........
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0x58, 0x00, 0x00, 0x00, 0xce, 0x00, 0xce, 0x00, 0x70, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,  // X.......p.......
//rdpproxy: INFO (19505/19505) -- /* 0020 */ 0x3e, 0x01, 0x00, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x4e, 0x01, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,  // >.......N.......
//rdpproxy: INFO (19505/19505) -- /* 0030 */ 0x5c, 0x01, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x6c, 0x01, 0x00, 0x00, 0x35, 0xa2, 0x88, 0xe2,  // ........l...5...
//rdpproxy: INFO (19505/19505) -- /* 0040 */ 0x06, 0x01, 0xb1, 0x1d, 0x00, 0x00, 0x00, 0x0f, 0xb8, 0x3e, 0x66, 0x09, 0x8f, 0xf8, 0x3e, 0xff,  // .........>f...>.
//rdpproxy: INFO (19505/19505) -- /* 0050 */ 0x16, 0xca, 0x84, 0x48, 0xef, 0xa1, 0x95, 0xbb, 0xc2, 0x29, 0x7c, 0x45, 0x9a, 0x99, 0x28, 0x6a,  // ...H.....)|E..(j
//rdpproxy: INFO (19505/19505) -- /* 0060 */ 0x0f, 0xa2, 0xd5, 0x53, 0x51, 0xa6, 0x52, 0xff, 0x61, 0xdf, 0x4c, 0x0d, 0xb7, 0x66, 0xd8, 0xc0,  // ...SQ.R.a.L..f..
//rdpproxy: INFO (19505/19505) -- /* 0070 */ 0x23, 0xca, 0x37, 0x3f, 0xe6, 0x9e, 0xba, 0xce, 0xc0, 0xbc, 0x5f, 0xb7, 0x8a, 0xdc, 0x29, 0xd9,  // #.7?......_...).
//rdpproxy: INFO (19505/19505) -- /* 0080 */ 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0xdc, 0x0e, 0x00, 0xdf, 0x83, 0x93, 0x5d,  // ........*......]
//rdpproxy: INFO (19505/19505) -- /* 0090 */ 0x61, 0xdf, 0x4c, 0x0d, 0xb7, 0x66, 0xd8, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x10, 0x00,  // a.L..f..........
//rdpproxy: INFO (19505/19505) -- /* 00a0 */ 0x50, 0x00, 0x52, 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00,  // P.R.O.X.Y.K.D.C.
//rdpproxy: INFO (19505/19505) -- /* 00b0 */ 0x01, 0x00, 0x10, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00, 0x30, 0x00, 0x43, 0x00,  // ....W.I.N.1.0.C.
//rdpproxy: INFO (19505/19505) -- /* 00c0 */ 0x47, 0x00, 0x52, 0x00, 0x04, 0x00, 0x18, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00,  // G.R.....p.r.o.x.
//rdpproxy: INFO (19505/19505) -- /* 00d0 */ 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00,  // y.k.d.c...l.a.b.
//rdpproxy: INFO (19505/19505) -- /* 00e0 */ 0x03, 0x00, 0x2a, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00, 0x30, 0x00, 0x43, 0x00,  // ..*.W.I.N.1.0.C.
//rdpproxy: INFO (19505/19505) -- /* 00f0 */ 0x47, 0x00, 0x52, 0x00, 0x2e, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00,  // G.R...p.r.o.x.y.
//rdpproxy: INFO (19505/19505) -- /* 0100 */ 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x05, 0x00,  // k.d.c...l.a.b...
//rdpproxy: INFO (19505/19505) -- /* 0110 */ 0x18, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00,  // ..p.r.o.x.y.k.d.
//rdpproxy: INFO (19505/19505) -- /* 0120 */ 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x07, 0x00, 0x08, 0x00, 0xc1, 0x9c,  // c...l.a.b.......
//rdpproxy: INFO (19505/19505) -- /* 0130 */ 0x74, 0x5a, 0x78, 0x78, 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00,  // tZxx..........P.
//rdpproxy: INFO (19505/19505) -- /* 0140 */ 0x52, 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00, 0x68, 0x00,  // R.O.X.Y.K.D.C.h.
//rdpproxy: INFO (19505/19505) -- /* 0150 */ 0x65, 0x00, 0x72, 0x00, 0x63, 0x00, 0x75, 0x00, 0x6c, 0x00, 0x65, 0x00, 0x57, 0x00, 0x49, 0x00,  // e.r.c.u.l.e.W.I.
//rdpproxy: INFO (19505/19505) -- /* 0160 */ 0x4e, 0x00, 0x31, 0x00, 0x30, 0x00, 0x43, 0x00, 0x47, 0x00, 0x52, 0x00, 0x20, 0x08, 0xa5, 0xb5,  // N.1.0.C.G.R. ...
//rdpproxy: INFO (19505/19505) -- /* 0170 */ 0x02, 0x30, 0x26, 0x94, 0x65, 0xe1, 0x95, 0x5f, 0x5f, 0x4f, 0x68, 0x68,                          // .0&.e..__Ohh
//rdpproxy: INFO (19505/19505) -- rdpClientNTLM::encrypt_public_key_echo
//rdpproxy: INFO (19505/19505) -- using /dev/urandom as random source
//rdpproxy: INFO (19505/19505) -- Random Client Nonce
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x8d, 0x78, 0x8c, 0x8c, 0xfe, 0x94, 0x74, 0x5c, 0xb2, 0xc2, 0xd6, 0xed, 0x8b, 0x6d, 0x21, 0x83,  // .x....t......m!.
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0x79, 0x43, 0x0f, 0x1c, 0x87, 0xcf, 0xd2, 0xf5, 0xbc, 0x9e, 0xef, 0x9f, 0xd9, 0x11, 0xf1, 0xf0,  // yC..............
//rdpproxy: INFO (19505/19505) -- TSRequest hexdump ---------------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest version 6 ------------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest negoTokens ------------------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x4e, 0x54, 0x4c, 0x4d, 0x53, 0x53, 0x50, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00,  // NTLMSSP.........
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0x58, 0x00, 0x00, 0x00, 0xce, 0x00, 0xce, 0x00, 0x70, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,  // X.......p.......
//rdpproxy: INFO (19505/19505) -- /* 0020 */ 0x3e, 0x01, 0x00, 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x4e, 0x01, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00,  // >.......N.......
//rdpproxy: INFO (19505/19505) -- /* 0030 */ 0x5c, 0x01, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x6c, 0x01, 0x00, 0x00, 0x35, 0xa2, 0x88, 0xe2,  // ........l...5...
//rdpproxy: INFO (19505/19505) -- /* 0040 */ 0x06, 0x01, 0xb1, 0x1d, 0x00, 0x00, 0x00, 0x0f, 0xb8, 0x3e, 0x66, 0x09, 0x8f, 0xf8, 0x3e, 0xff,  // .........>f...>.
//rdpproxy: INFO (19505/19505) -- /* 0050 */ 0x16, 0xca, 0x84, 0x48, 0xef, 0xa1, 0x95, 0xbb, 0xc2, 0x29, 0x7c, 0x45, 0x9a, 0x99, 0x28, 0x6a,  // ...H.....)|E..(j
//rdpproxy: INFO (19505/19505) -- /* 0060 */ 0x0f, 0xa2, 0xd5, 0x53, 0x51, 0xa6, 0x52, 0xff, 0x61, 0xdf, 0x4c, 0x0d, 0xb7, 0x66, 0xd8, 0xc0,  // ...SQ.R.a.L..f..
//rdpproxy: INFO (19505/19505) -- /* 0070 */ 0x23, 0xca, 0x37, 0x3f, 0xe6, 0x9e, 0xba, 0xce, 0xc0, 0xbc, 0x5f, 0xb7, 0x8a, 0xdc, 0x29, 0xd9,  // #.7?......_...).
//rdpproxy: INFO (19505/19505) -- /* 0080 */ 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0xdc, 0x0e, 0x00, 0xdf, 0x83, 0x93, 0x5d,  // ........*......]
//rdpproxy: INFO (19505/19505) -- /* 0090 */ 0x61, 0xdf, 0x4c, 0x0d, 0xb7, 0x66, 0xd8, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x10, 0x00,  // a.L..f..........
//rdpproxy: INFO (19505/19505) -- /* 00a0 */ 0x50, 0x00, 0x52, 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00,  // P.R.O.X.Y.K.D.C.
//rdpproxy: INFO (19505/19505) -- /* 00b0 */ 0x01, 0x00, 0x10, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00, 0x30, 0x00, 0x43, 0x00,  // ....W.I.N.1.0.C.
//rdpproxy: INFO (19505/19505) -- /* 00c0 */ 0x47, 0x00, 0x52, 0x00, 0x04, 0x00, 0x18, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00,  // G.R.....p.r.o.x.
//rdpproxy: INFO (19505/19505) -- /* 00d0 */ 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00,  // y.k.d.c...l.a.b.
//rdpproxy: INFO (19505/19505) -- /* 00e0 */ 0x03, 0x00, 0x2a, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00, 0x30, 0x00, 0x43, 0x00,  // ..*.W.I.N.1.0.C.
//rdpproxy: INFO (19505/19505) -- /* 00f0 */ 0x47, 0x00, 0x52, 0x00, 0x2e, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00,  // G.R...p.r.o.x.y.
//rdpproxy: INFO (19505/19505) -- /* 0100 */ 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x05, 0x00,  // k.d.c...l.a.b...
//rdpproxy: INFO (19505/19505) -- /* 0110 */ 0x18, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00,  // ..p.r.o.x.y.k.d.
//rdpproxy: INFO (19505/19505) -- /* 0120 */ 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x07, 0x00, 0x08, 0x00, 0xc1, 0x9c,  // c...l.a.b.......
//rdpproxy: INFO (19505/19505) -- /* 0130 */ 0x74, 0x5a, 0x78, 0x78, 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00,  // tZxx..........P.
//rdpproxy: INFO (19505/19505) -- /* 0140 */ 0x52, 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00, 0x68, 0x00,  // R.O.X.Y.K.D.C.h.
//rdpproxy: INFO (19505/19505) -- /* 0150 */ 0x65, 0x00, 0x72, 0x00, 0x63, 0x00, 0x75, 0x00, 0x6c, 0x00, 0x65, 0x00, 0x57, 0x00, 0x49, 0x00,  // e.r.c.u.l.e.W.I.
//rdpproxy: INFO (19505/19505) -- /* 0160 */ 0x4e, 0x00, 0x31, 0x00, 0x30, 0x00, 0x43, 0x00, 0x47, 0x00, 0x52, 0x00, 0x20, 0x08, 0xa5, 0xb5,  // N.1.0.C.G.R. ...
//rdpproxy: INFO (19505/19505) -- /* 0170 */ 0x02, 0x30, 0x26, 0x94, 0x65, 0xe1, 0x95, 0x5f, 0x5f, 0x4f, 0x68, 0x68,                          // .0&.e..__Ohh
//rdpproxy: INFO (19505/19505) -- TSRequest authInfo --------------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest pubkeyAuth ------------------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x01, 0x00, 0x00, 0x00, 0xfe, 0xb1, 0x7c, 0x50, 0xb5, 0x73, 0x4f, 0x9c, 0x00, 0x00, 0x00, 0x00,  // ......|P.sO.....
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0xfa, 0xde, 0xb5, 0x27, 0xb5, 0x47, 0xae, 0xf5, 0x47, 0x74, 0x0c, 0x68, 0x2a, 0xda, 0xa4, 0x24,  // ...'.G..Gt.h*..$
//rdpproxy: INFO (19505/19505) -- /* 0020 */ 0x42, 0x7f, 0x3c, 0x28, 0x7e, 0x37, 0x48, 0x27, 0xd4, 0xac, 0xeb, 0x4d, 0x76, 0xb6, 0xdb, 0x10,  // B.<(~7H'...Mv...
//rdpproxy: INFO (19505/19505) -- TSRequest error_code 0 ---------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest clientNonce -----------------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x8d, 0x78, 0x8c, 0x8c, 0xfe, 0x94, 0x74, 0x5c, 0xb2, 0xc2, 0xd6, 0xed, 0x8b, 0x6d, 0x21, 0x83,  // .x....t......m!.
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0x79, 0x43, 0x0f, 0x1c, 0x87, 0xcf, 0xd2, 0xf5, 0xbc, 0x9e, 0xef, 0x9f, 0xd9, 0x11, 0xf1, 0xf0,  // yC..............
//rdpproxy: INFO (19505/19505) -- TSRequest ts_request_header --(request length = 493)-
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x30, 0x82, 0x01, 0xed,                                                                          // 0...
//rdpproxy: INFO (19505/19505) -- TSRequest version_field ---------------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0xa0, 0x03, 0x02, 0x01, 0x06,                                                                    // .....
//rdpproxy: INFO (19505/19505) -- TSRequest nego_tokens_header ----------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0xa1, 0x82, 0x01, 0x8c, 0x30, 0x82, 0x01, 0x88, 0x30, 0x82, 0x01, 0x84, 0xa0, 0x82, 0x01, 0x80,  // ....0...0.......
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0x04, 0x82, 0x01, 0x7c,                                                                          // ...|
//rdpproxy: INFO (19505/19505) -- TSRequest auth_info_header ------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest pub_key_auth_header ---------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0xa3, 0x32, 0x04, 0x30,                                                                          // .2.0
//rdpproxy: INFO (19505/19505) -- TSRequest error_code field ------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest nonce -----------------------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0xa5, 0x22, 0x04, 0x20,                                                                          // .". 
//rdpproxy: INFO (19505/19505) -- emit TSRequest full dump--------------------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x30, 0x82, 0x01, 0xed, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa1, 0x82, 0x01, 0x8c, 0x30, 0x82, 0x01,  // 0............0..
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0x88, 0x30, 0x82, 0x01, 0x84, 0xa0, 0x82, 0x01, 0x80, 0x04, 0x82, 0x01, 0x7c, 0x4e, 0x54, 0x4c,  // .0..........|NTL
//rdpproxy: INFO (19505/19505) -- /* 0020 */ 0x4d, 0x53, 0x53, 0x50, 0x00, 0x03, 0x00, 0x00, 0x00, 0x18, 0x00, 0x18, 0x00, 0x58, 0x00, 0x00,  // MSSP.........X..
//rdpproxy: INFO (19505/19505) -- /* 0030 */ 0x00, 0xce, 0x00, 0xce, 0x00, 0x70, 0x00, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x3e, 0x01, 0x00,  // .....p.......>..
//rdpproxy: INFO (19505/19505) -- /* 0040 */ 0x00, 0x0e, 0x00, 0x0e, 0x00, 0x4e, 0x01, 0x00, 0x00, 0x10, 0x00, 0x10, 0x00, 0x5c, 0x01, 0x00,  // .....N..........
//rdpproxy: INFO (19505/19505) -- /* 0050 */ 0x00, 0x10, 0x00, 0x10, 0x00, 0x6c, 0x01, 0x00, 0x00, 0x35, 0xa2, 0x88, 0xe2, 0x06, 0x01, 0xb1,  // .....l...5......
//rdpproxy: INFO (19505/19505) -- /* 0060 */ 0x1d, 0x00, 0x00, 0x00, 0x0f, 0xb8, 0x3e, 0x66, 0x09, 0x8f, 0xf8, 0x3e, 0xff, 0x16, 0xca, 0x84,  // ......>f...>....
//rdpproxy: INFO (19505/19505) -- /* 0070 */ 0x48, 0xef, 0xa1, 0x95, 0xbb, 0xc2, 0x29, 0x7c, 0x45, 0x9a, 0x99, 0x28, 0x6a, 0x0f, 0xa2, 0xd5,  // H.....)|E..(j...
//rdpproxy: INFO (19505/19505) -- /* 0080 */ 0x53, 0x51, 0xa6, 0x52, 0xff, 0x61, 0xdf, 0x4c, 0x0d, 0xb7, 0x66, 0xd8, 0xc0, 0x23, 0xca, 0x37,  // SQ.R.a.L..f..#.7
//rdpproxy: INFO (19505/19505) -- /* 0090 */ 0x3f, 0xe6, 0x9e, 0xba, 0xce, 0xc0, 0xbc, 0x5f, 0xb7, 0x8a, 0xdc, 0x29, 0xd9, 0x01, 0x01, 0x00,  // ?......_...)....
//rdpproxy: INFO (19505/19505) -- /* 00a0 */ 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0xdc, 0x0e, 0x00, 0xdf, 0x83, 0x93, 0x5d, 0x61, 0xdf, 0x4c,  // .....*......]a.L
//rdpproxy: INFO (19505/19505) -- /* 00b0 */ 0x0d, 0xb7, 0x66, 0xd8, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x10, 0x00, 0x50, 0x00, 0x52,  // ..f..........P.R
//rdpproxy: INFO (19505/19505) -- /* 00c0 */ 0x00, 0x4f, 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00, 0x01, 0x00, 0x10,  // .O.X.Y.K.D.C....
//rdpproxy: INFO (19505/19505) -- /* 00d0 */ 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00, 0x30, 0x00, 0x43, 0x00, 0x47, 0x00, 0x52,  // .W.I.N.1.0.C.G.R
//rdpproxy: INFO (19505/19505) -- /* 00e0 */ 0x00, 0x04, 0x00, 0x18, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b,  // .....p.r.o.x.y.k
//rdpproxy: INFO (19505/19505) -- /* 00f0 */ 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x03, 0x00, 0x2a,  // .d.c...l.a.b...*
//rdpproxy: INFO (19505/19505) -- /* 0100 */ 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31, 0x00, 0x30, 0x00, 0x43, 0x00, 0x47, 0x00, 0x52,  // .W.I.N.1.0.C.G.R
//rdpproxy: INFO (19505/19505) -- /* 0110 */ 0x00, 0x2e, 0x00, 0x70, 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64,  // ...p.r.o.x.y.k.d
//rdpproxy: INFO (19505/19505) -- /* 0120 */ 0x00, 0x63, 0x00, 0x2e, 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x05, 0x00, 0x18, 0x00, 0x70,  // .c...l.a.b.....p
//rdpproxy: INFO (19505/19505) -- /* 0130 */ 0x00, 0x72, 0x00, 0x6f, 0x00, 0x78, 0x00, 0x79, 0x00, 0x6b, 0x00, 0x64, 0x00, 0x63, 0x00, 0x2e,  // .r.o.x.y.k.d.c..
//rdpproxy: INFO (19505/19505) -- /* 0140 */ 0x00, 0x6c, 0x00, 0x61, 0x00, 0x62, 0x00, 0x07, 0x00, 0x08, 0x00, 0xc1, 0x9c, 0x74, 0x5a, 0x78,  // .l.a.b.......tZx
//rdpproxy: INFO (19505/19505) -- /* 0150 */ 0x78, 0xd5, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x50, 0x00, 0x52, 0x00, 0x4f,  // x..........P.R.O
//rdpproxy: INFO (19505/19505) -- /* 0160 */ 0x00, 0x58, 0x00, 0x59, 0x00, 0x4b, 0x00, 0x44, 0x00, 0x43, 0x00, 0x68, 0x00, 0x65, 0x00, 0x72,  // .X.Y.K.D.C.h.e.r
//rdpproxy: INFO (19505/19505) -- /* 0170 */ 0x00, 0x63, 0x00, 0x75, 0x00, 0x6c, 0x00, 0x65, 0x00, 0x57, 0x00, 0x49, 0x00, 0x4e, 0x00, 0x31,  // .c.u.l.e.W.I.N.1
//rdpproxy: INFO (19505/19505) -- /* 0180 */ 0x00, 0x30, 0x00, 0x43, 0x00, 0x47, 0x00, 0x52, 0x00, 0x20, 0x08, 0xa5, 0xb5, 0x02, 0x30, 0x26,  // .0.C.G.R. ....0&
//rdpproxy: INFO (19505/19505) -- /* 0190 */ 0x94, 0x65, 0xe1, 0x95, 0x5f, 0x5f, 0x4f, 0x68, 0x68, 0xa3, 0x32, 0x04, 0x30, 0x01, 0x00, 0x00,  // .e..__Ohh.2.0...
//rdpproxy: INFO (19505/19505) -- /* 01a0 */ 0x00, 0xfe, 0xb1, 0x7c, 0x50, 0xb5, 0x73, 0x4f, 0x9c, 0x00, 0x00, 0x00, 0x00, 0xfa, 0xde, 0xb5,  // ...|P.sO........
//rdpproxy: INFO (19505/19505) -- /* 01b0 */ 0x27, 0xb5, 0x47, 0xae, 0xf5, 0x47, 0x74, 0x0c, 0x68, 0x2a, 0xda, 0xa4, 0x24, 0x42, 0x7f, 0x3c,  // '.G..Gt.h*..$B.<
//rdpproxy: INFO (19505/19505) -- /* 01c0 */ 0x28, 0x7e, 0x37, 0x48, 0x27, 0xd4, 0xac, 0xeb, 0x4d, 0x76, 0xb6, 0xdb, 0x10, 0xa5, 0x22, 0x04,  // (~7H'...Mv....".
//rdpproxy: INFO (19505/19505) -- /* 01d0 */ 0x20, 0x8d, 0x78, 0x8c, 0x8c, 0xfe, 0x94, 0x74, 0x5c, 0xb2, 0xc2, 0xd6, 0xed, 0x8b, 0x6d, 0x21,  //  .x....t......m!
//rdpproxy: INFO (19505/19505) -- /* 01e0 */ 0x83, 0x79, 0x43, 0x0f, 0x1c, 0x87, 0xcf, 0xd2, 0xf5, 0xbc, 0x9e, 0xef, 0x9f, 0xd9, 0x11, 0xf1,  // .yC.............
//rdpproxy: INFO (19505/19505) -- /* 01f0 */ 0xf0,                                                                                            // .
//rdpproxy: INFO (19505/19505) -- emit TSRequest hexdump -DONE----------------------------
//rdpproxy: INFO (19505/19505) -- RdpNego::recv_next_data::Credssp
//rdpproxy: INFO (19505/19505) -- RdpNego::recv_credssp
//rdpproxy: INFO (19505/19505) -- Client Authentication : Receiving Encrypted PubKey + 1
//rdpproxy: INFO (19505/19505) -- recv TSRequest full dump++++++++++++++++++++++++++++++++
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x30, 0x39, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa3, 0x32, 0x04, 0x30, 0x01, 0x00, 0x00, 0x00, 0xdf,  // 09......2.0.....
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0xf2, 0x55, 0x73, 0x09, 0x73, 0xe1, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x99, 0x96, 0x44, 0x19, 0xcd,  // .Us.s........D..
//rdpproxy: INFO (19505/19505) -- /* 0020 */ 0xe1, 0x59, 0x43, 0x13, 0x18, 0xb3, 0x1a, 0xcc, 0x40, 0xd8, 0x1f, 0xbd, 0xdf, 0x93, 0xda, 0xa8,  // .YC.....@.......
//rdpproxy: INFO (19505/19505) -- /* 0030 */ 0x97, 0xa7, 0xed, 0xe2, 0x49, 0x26, 0x7d, 0x16, 0x22, 0x6f, 0x04,                                // ....I&}."o.
//rdpproxy: INFO (19505/19505) -- recv TSRequest hexdump - START PARSING DATA+++++++++++++
//rdpproxy: INFO (19505/19505) -- Credssp recvTSRequest() Remote Version 6, Negotiated version 6
//rdpproxy: INFO (19505/19505) -- rdpClientNTLM::encrypt_ts_credentials
//rdpproxy: INFO (19505/19505) -- TSCredentialsPassword: Domain User Password
//rdpproxy: INFO (19505/19505) -- TSRequest hexdump ---------------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest version 6 ------------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest negoTokens ------------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest authInfo --------------------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x01, 0x00, 0x00, 0x00, 0xde, 0xd4, 0xf7, 0xa1, 0xdb, 0xbc, 0xee, 0x23, 0x01, 0x00, 0x00, 0x00,  // ...........#....
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0x3e, 0x43, 0x4d, 0xbd, 0xf0, 0xd0, 0x72, 0xbb, 0x3c, 0xc8, 0x6c, 0xbd, 0x47, 0x82, 0xab, 0x43,  // >CM...r.<.l.G..C
//rdpproxy: INFO (19505/19505) -- /* 0020 */ 0x7a, 0xe4, 0x2b, 0xf8, 0x99, 0xf5, 0x80, 0x26, 0xae, 0x07, 0xa3, 0x06, 0x59, 0x4a, 0x9a, 0xf7,  // z.+....&....YJ..
//rdpproxy: INFO (19505/19505) -- /* 0030 */ 0x46, 0xc1, 0x6e, 0x56, 0x98, 0x92, 0x42, 0x3c, 0x15, 0x99, 0x17, 0xe1, 0x97, 0x8c, 0xb9, 0xe8,  // F.nV..B<........
//rdpproxy: INFO (19505/19505) -- /* 0040 */ 0xd3, 0x57, 0xb6, 0xf7, 0xb1, 0xb0, 0x8a, 0xe1, 0xd6, 0x72, 0xcb, 0x08, 0x5d, 0x44, 0xcd, 0x6f,  // .W.......r..]D.o
//rdpproxy: INFO (19505/19505) -- /* 0050 */ 0xe6, 0x19, 0x5e, 0xe6, 0x13, 0x18, 0x72, 0xec, 0x80, 0x0e, 0x30, 0x7a, 0x72, 0x2d, 0x35, 0x5f,  // ..^...r...0zr-5_
//rdpproxy: INFO (19505/19505) -- /* 0060 */ 0xca, 0x3c, 0x59,                                                                                // .<Y
//rdpproxy: INFO (19505/19505) -- TSRequest pubkeyAuth ------------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest error_code 0 ---------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest clientNonce -----------------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x8d, 0x78, 0x8c, 0x8c, 0xfe, 0x94, 0x74, 0x5c, 0xb2, 0xc2, 0xd6, 0xed, 0x8b, 0x6d, 0x21, 0x83,  // .x....t......m!.
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0x79, 0x43, 0x0f, 0x1c, 0x87, 0xcf, 0xd2, 0xf5, 0xbc, 0x9e, 0xef, 0x9f, 0xd9, 0x11, 0xf1, 0xf0,  // yC..............
//rdpproxy: INFO (19505/19505) -- TSRequest ts_request_header --(request length = 144)-
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x30, 0x81, 0x90,                                                                                // 0..
//rdpproxy: INFO (19505/19505) -- TSRequest version_field ---------------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0xa0, 0x03, 0x02, 0x01, 0x06,                                                                    // .....
//rdpproxy: INFO (19505/19505) -- TSRequest nego_tokens_header ----------------------
//rdpproxy: INFO (19505/19505) -- TSRequest auth_info_header ------------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0xa2, 0x65, 0x04, 0x63,                                                                          // .e.c
//rdpproxy: INFO (19505/19505) -- TSRequest pub_key_auth_header ---------------------
//rdpproxy: INFO (19505/19505) -- TSRequest error_code field ------------------------
//rdpproxy: INFO (19505/19505) -- TSRequest nonce -----------------------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0xa5, 0x22, 0x04, 0x20,                                                                          // .". 
//rdpproxy: INFO (19505/19505) -- emit TSRequest full dump--------------------------------
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0x30, 0x81, 0x90, 0xa0, 0x03, 0x02, 0x01, 0x06, 0xa2, 0x65, 0x04, 0x63, 0x01, 0x00, 0x00, 0x00,  // 0........e.c....
//rdpproxy: INFO (19505/19505) -- /* 0010 */ 0xde, 0xd4, 0xf7, 0xa1, 0xdb, 0xbc, 0xee, 0x23, 0x01, 0x00, 0x00, 0x00, 0x3e, 0x43, 0x4d, 0xbd,  // .......#....>CM.
//rdpproxy: INFO (19505/19505) -- /* 0020 */ 0xf0, 0xd0, 0x72, 0xbb, 0x3c, 0xc8, 0x6c, 0xbd, 0x47, 0x82, 0xab, 0x43, 0x7a, 0xe4, 0x2b, 0xf8,  // ..r.<.l.G..Cz.+.
//rdpproxy: INFO (19505/19505) -- /* 0030 */ 0x99, 0xf5, 0x80, 0x26, 0xae, 0x07, 0xa3, 0x06, 0x59, 0x4a, 0x9a, 0xf7, 0x46, 0xc1, 0x6e, 0x56,  // ...&....YJ..F.nV
//rdpproxy: INFO (19505/19505) -- /* 0040 */ 0x98, 0x92, 0x42, 0x3c, 0x15, 0x99, 0x17, 0xe1, 0x97, 0x8c, 0xb9, 0xe8, 0xd3, 0x57, 0xb6, 0xf7,  // ..B<.........W..
//rdpproxy: INFO (19505/19505) -- /* 0050 */ 0xb1, 0xb0, 0x8a, 0xe1, 0xd6, 0x72, 0xcb, 0x08, 0x5d, 0x44, 0xcd, 0x6f, 0xe6, 0x19, 0x5e, 0xe6,  // .....r..]D.o..^.
//rdpproxy: INFO (19505/19505) -- /* 0060 */ 0x13, 0x18, 0x72, 0xec, 0x80, 0x0e, 0x30, 0x7a, 0x72, 0x2d, 0x35, 0x5f, 0xca, 0x3c, 0x59, 0xa5,  // ..r...0zr-5_.<Y.
//rdpproxy: INFO (19505/19505) -- /* 0070 */ 0x22, 0x04, 0x20, 0x8d, 0x78, 0x8c, 0x8c, 0xfe, 0x94, 0x74, 0x5c, 0xb2, 0xc2, 0xd6, 0xed, 0x8b,  // ". .x....t......
//rdpproxy: INFO (19505/19505) -- /* 0080 */ 0x6d, 0x21, 0x83, 0x79, 0x43, 0x0f, 0x1c, 0x87, 0xcf, 0xd2, 0xf5, 0xbc, 0x9e, 0xef, 0x9f, 0xd9,  // m!.yC...........
//rdpproxy: INFO (19505/19505) -- /* 0090 */ 0x11, 0xf1, 0xf0,                                                                                // ...
//rdpproxy: INFO (19505/19505) -- emit TSRequest hexdump -DONE----------------------------
//rdpproxy: INFO (19505/19505) -- CS_Cluster: Server Redirection Supported
//rdpproxy: INFO (19505/19505) -- GCC::UserData tag=0c01 length=16
//rdpproxy: INFO (19505/19505) -- GCC::UserData tag=0c03 length=16
//rdpproxy: INFO (19505/19505) -- GCC::UserData tag=0c02 length=12
//rdpproxy: INFO (19505/19505) -- =================== SC_SECURITY =============
//rdpproxy: INFO (19505/19505) -- No encryption
//rdpproxy: INFO (19505/19505) -- send extended login info (RDP5-style) 107fb PROXYKDC:hercule
//rdpproxy: INFO (19505/19505) -- Rdp::Get license: username="hercule@PROXYKDC"
//rdpproxy: INFO (19505/19505) -- RdpNegociation::get_license LIC::RecvFactory::flic.tag=255
//rdpproxy: INFO (19505/19505) -- /* 0000 */ 0xff, 0x03, 0x10, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00,  // ................
//rdpproxy: INFO (19505/19505) -- use rdp5
//rdpproxy: INFO (19505/19505) -- mod_rdp::send_input_fastpath: Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- Resizing to 1920x1080x24
//rdpproxy: [RDP Session] session_id="SESSIONID-0000" client_ip="10.10.43.9" target_ip="WIN10CGR.proxykdc.lab" user="u" device="win10" service="rdp" account="PROXYKDC\\hercule" type="SESSION_ESTABLISHED_SUCCESSFULLY"
//rdpproxy: INFO (19505/19505) -- mod_rdp::send_input_fastpath: Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- Front::can_be_start_capture: Capture is not necessary
//rdpproxy: WARNING (19505/19505) -- PDUTYPE2 unsupported tag=40
//rdpproxy: WARNING (19505/19505) -- Truncated CLIPRDR_FORMAT_LIST remains=6
//rdpproxy: INFO (19505/19505) -- process save session info : Logon long
//rdpproxy: INFO (19505/19505) -- Logon Info Version 2 (data): Domain="PROXYKDC" UserName="hercule" SessionId=2
//rdpproxy: INFO (19505/19505) -- process save session info : Logon extended info
//rdpproxy: INFO (19505/19505) -- process save session info : Auto-reconnect cookie
//rdpproxy: INFO (19505/19505) -- ServerAutoReconnectPacket: Version=1 LogonId=2
//rdpproxy: INFO (19505/19505) -- 0000 0f fb 13 c6 ad 36 0d 1c 9d f1 e9 3c 7a 61 a3 2c  .....6.....<za.,
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- Front::incoming: (Fast-Path) Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- mod_rdp::send_input_fastpath: Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- Front::incoming: (Fast-Path) Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- mod_rdp::send_input_fastpath: Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- Front::incoming: (Fast-Path) Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- mod_rdp::send_input_fastpath: Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- recv_tls WANT READ
//rdpproxy: INFO (19505/19505) -- Front::incoming: (Fast-Path) Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- mod_rdp::send_input_fastpath: Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- Front::incoming: (Fast-Path) Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- mod_rdp::send_input_fastpath: Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- process error info pdu: code=0x00000005 error=DISCONNECTED_BY_OTHERCONNECTION
//rdpproxy: INFO (19505/19505) -- mod::rdp::DisconnectProviderUltimatum received
//rdpproxy: ERR (19505/19505) -- mod::rdp::DisconnectProviderUltimatum: reason=RN_PROVIDER_INITIATED [1]
//rdpproxy: [RDP Session] session_id="SESSIONID-0000" client_ip="10.10.43.9" target_ip="WIN10CGR.proxykdc.lab" user="u" device="win10" service="rdp" account="PROXYKDC\\hercule" type="SESSION_DISCONNECTION" duration="0:00:28"
//rdpproxy: INFO (19505/19505) -- mod_rdp::draw_event() state switch raised exception
//rdpproxy: INFO (19505/19505) -- Connection to server closed
//rdpproxy: INFO (19505/19505) -- ===========> MODULE_NEXT
//rdpproxy: INFO (19505/19505) -- ----------> ACL next_module <--------
//rdpproxy: INFO (19505/19505) -- ===========> MODULE_INTERNAL_CLOSE_BACK
//rdpproxy: [rdpproxy] psid="156994862519505" user="u" type="TARGET_DISCONNECTION" reason="Another user connected to the resource, so your connection was lost."
//rdpproxy: INFO (19505/19505) -- RDP Target (-1): total_received=1123800, total_sent=152812
//rdpproxy: INFO (19505/19505) -- ----------> ACL new_mod <--------
//rdpproxy: INFO (19505/19505) -- target_module=MODULE_INTERNAL_CLOSE_BACK(6)
//rdpproxy: INFO (19505/19505) -- ModuleManager::Creation of new mod 'INTERNAL::CloseBack'
//rdpproxy: INFO (19505/19505) -- WabCloseMod: Ending session in 600 seconds
//rdpproxy: INFO (19505/19505) -- ModuleManager::internal module Close Back ready
//rdpproxy: INFO (19505/19505) -- Front::incoming: (Fast-Path) Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- Front::incoming: (Fast-Path) Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- Front::incoming: (Fast-Path) Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- Front::incoming: (Fast-Path) Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- Front::incoming: (Fast-Path) Synchronize Event toggleFlags=0x0
//rdpproxy: INFO (19505/19505) -- Session::Client Session Disconnected
//rdpproxy: [rdpproxy] psid="156994862519505" user="u" type="DISCONNECT"







