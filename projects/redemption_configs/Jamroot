REDEMPTION_CONFIG_SPECS_PATH ?= ./configs_specs ;
REDEMPTION_CONFIG_PATH ?= . ;
REDEMPTION_ROOT_PATH ?= ../.. ;
REDEMPTION_SRC_PATH ?= $(REDEMPTION_ROOT_PATH)/src ;
REDEMPTION_INCLUDE_PATH ?= $(REDEMPTION_ROOT_PATH)/include ;
SYSTEM_TYPE ?= linux ;
SYSTEM_SRC_PATH ?= $(REDEMPTION_SRC_PATH)/system/$(SYSTEM_TYPE) ;

include ../../jam/redemption-config.jam ;
include ../../jam/cxxflags.jam ;
include ../../jam/defines.jam ;

project configs
    : requirements
    <include>$(REDEMPTION_CONFIG_PATH)/src
    <include>$(REDEMPTION_CONFIG_PATH)/autogen/include
    <include>$(REDEMPTION_CONFIG_SPECS_PATH)
    <include>$(REDEMPTION_INCLUDE_PATH)
    <include>$(REDEMPTION_SRC_PATH)
    <include>$(SYSTEM_SRC_PATH)

    <cxxflags>-std=c++17

    $(CXXFLAGS)
    <toolset>clang:<cxxflags>-Wno-class-varargs

   : default-build release
;

constant AUTOGEN_SPEC_DIR : autogen/spec ;
constant AUTOGEN_INC_DIR : autogen/include/configs/autogen ;
constant FILEGEN_CONF : $(AUTOGEN_INC_DIR)/variables_configuration.hpp ;
constant FILEGEN_CONF_FWD : $(AUTOGEN_INC_DIR)/variables_configuration_fwd.hpp ;
constant FILEGEN_SPEC : $(AUTOGEN_INC_DIR)/str_python_spec.hpp ;
constant FILEGEN_INI : $(AUTOGEN_INC_DIR)/str_ini.hpp ;
constant FILEGEN_SESMAN_CP_SPEC : $(REDEMPTION_ROOT_PATH)/tools/sesman/sesmanworker/sesmanconnpolicyspec.py ;
constant FILEGEN_RDP_CONNPOLICY : $(AUTOGEN_SPEC_DIR)/rdp.spec ;
constant FILEGEN_VNC_CONNPOLICY : $(AUTOGEN_SPEC_DIR)/vnc.spec ;
constant FILEGEN_ENUM : $(AUTOGEN_INC_DIR)/enums.hpp ;

actions generate_cpp_config {
    $(>[0]) \
        $(AUTOGEN_INC_DIR)/authid.hpp \
        $(FILEGEN_CONF_FWD) \
        $(FILEGEN_CONF) \
        $(AUTOGEN_INC_DIR)/set_value.tcc
}

actions generate_python_spec {
    $(>[0]) $(FILEGEN_SPEC)
}

actions generate_ini {
    $(>[0]) $(FILEGEN_INI)
}

actions generate_connection_policy {
    $(>[0]) $(FILEGEN_SESMAN_CP_SPEC) $(FILEGEN_RDP_CONNPOLICY) $(FILEGEN_VNC_CONNPOLICY)
}

actions generate_cpp_enumeration {
    $(>) $(FILEGEN_ENUM) $(AUTOGEN_INC_DIR)/enums_func_ini.hpp
}

obj log_test.o : $(REDEMPTION_SRC_PATH)/utils/log_as_logtest.cpp ;
obj error.o : $(REDEMPTION_SRC_PATH)/core/error.cpp : <define>NDEBUG ;
obj keymap : $(REDEMPTION_SRC_PATH)/keyboard/keymap2.cpp : ;

rule create_generator ( name : file : requirements * )
{
    make $(file) : make_$(name) $(requirements) : @generate_$(name) : <location>. ;
    alias generate_$(name) : $(file) ;
    exe make_$(name) : src/configs/write_$(name).cpp : <library>keymap <library>log_test.o ;
}

create_generator cpp_enumeration : $(FILEGEN_ENUM) ;
create_generator cpp_config : $(FILEGEN_CONF) ;
create_generator python_spec : $(FILEGEN_SPEC) ;
create_generator connection_policy : $(FILEGEN_RDP_CONNPOLICY) ;
create_generator ini : $(FILEGEN_INI) ;


alias generate :
    generate_cpp_enumeration
    generate_ini
    generate_python_spec
    generate_cpp_config
    generate_connection_policy
;


include ../../jam/testing-coverage.jam ;

obj font.o : $(REDEMPTION_SRC_PATH)/core/font.cpp ;
obj cfgloader.o : $(REDEMPTION_SRC_PATH)/utils/cfgloader.cpp ;
obj strutils.o : $(REDEMPTION_SRC_PATH)/utils/strutils.cpp ;
obj fileutils.o : $(REDEMPTION_SRC_PATH)/utils/fileutils.cpp ;
obj hexdump.o : $(REDEMPTION_SRC_PATH)/utils/hexdump.cpp ;
obj app_path_test.o : $(REDEMPTION_SRC_PATH)/core/app_path.cpp :
    <conditional>@defines-for-test
    <define>SHARE_PATH='\"\"'
    <define>CFG_PATH='\"$(REDEMPTION_ROOT_PATH)/etc/rdpproxy/\"'
;

obj config.o : redemption_src/configs/config.cpp
:
    <include>redemption_src
    <implicit-dependency>generate_cpp_config
    <implicit-dependency>generate_python_spec
    <implicit-dependency>generate_cpp_enumeration
;

rule test-run ( name )
{
    unit-test $(name) : tests/$(name).cpp generate_cpp_config :
        $(UNIT_TEST_DEPENDENCIES)
        <library>libunit_test
        <library>app_path_test.o
        <library>cfgloader.o
        <library>config.o
        <library>error.o
        <library>strutils.o
        <library>fileutils.o
        <library>font.o
        <library>hexdump.o
        <library>log_test.o
        <cxxflags>-frtti
        <include>redemption_src
        <conditional>@defines-for-test
    ;

}

## Tests
## @{
test-run test_config ;
test-run test_parser ;
test-run test_config_assign ;
## }
