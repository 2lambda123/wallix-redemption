
#bitmap_perf.cpp
#convert_bitmap.cpp
#core/SMB2/MessageSyntax.hpp
#ftests/regex/benchmark/basic_benchmark.hpp
#headers/openssl_crypto.hpp
#headers/openssl_evp.hpp
#headers/openssl_tls.hpp
#main/version.hpp

my @targets = qw(
acl/mm_api
core/activity_checker
core/authid
core/channel_names
core/defines
core/front_api
core/RDP/autoreconnect
core/RDP/capabilities
core/RDP/compress_and_draw_bitmap_update
core/RDP/mppc_unified_dec
core/RDP/nla/ntlm/ntlm_message
core/RDP/non_null_terminated_utf16_from_utf8
core/RDP/orders/RDPOrdersSecondaryFrameMarker
core/RDP/PersistentKeyListPDU
core/RDP/pointer
core/RDP/protocol
core/RDP/SaveSessionInfoPDU
core/server_notifier_api
mod/internal/flat_selector2_mod
mod/internal/flat_wait_mod
mod/internal/transparent_replay_mod
mod/internal/widget2/columnlayout
mod/internal/widget2/flat_vnc_authentification
mod/internal/widget2/language_button
mod/internal/widget2/layout
mod/internal/widget2/linelayout
mod/internal/widget2/notify_api
mod/internal/widget2/radio_list
mod/internal/widget2/scroll
mod/internal/widget2/stacklayout
mod/internal/widget2/tab.cpp
mod/internal/widget2/tab
mod/rdp/channels/base_channel
mod/rdp/channels/rdpdr_file_system_drive_manager
mod/rdp/channels/sespro_alternate_shell_based_launcher
mod/rdp/channels/sespro_channel
mod/rdp/channels/sespro_clipboard_based_launcher
mod/rdp/channels/sespro_launcher
mod/rdp/rdp_log
mod/rdp/rdp_params
regex/regex_automate
regex/regex_consumer
regex/regex_states_value
regex/regex_utils
ssl
strings
system/linux/system/openssl
transport/buffer/check_buf
transport/buffer/dynarray_buf
transport/buffer/file_buff
transport/buffer/null_buff
transport/detail/meta_hash
transport/detail/no_param
transport/filename_sequence_transport
transport/filename_transport
transport/filter/crypto_filter
transport/mixin_transport
transport/mixion_transport
transport/out_filename_sequence_transport
transport/sequence_generator
transport/sequence_generator
utils/apps/app_decrypter
utils/apps/app_proxy
utils/apps/app_recorder
utils/apps/app_verifier
utils/apps/recording_progress
utils/array
utils/array_view
utils/asynchronous_task_manager
utils/base64
utils/bitmap_data_allocator
utils/bytes_t
utils/cast
utils/cfgloader
utils/exchange
utils/fdbuf
utils/get_printable_password
utils/movable_noncopyable
utils/outbound_connection_monitor_rules
utils/range
utils/server_certificate
utils/socket_transport_utility
utils/text_metrics
utils/timeout
utils/timeval_ops
utils/underlying_cast
utils/update_lock
utils/urandom_read
utils/virtual_channel_data_sender
utils/winpr/pattern);

use warnings;
use strict;
use Path::Class qw( file );
use File::Spec;

for my $x (@targets) {
    my $self_file = file($x);
    my $p = $self_file->parent;
    my $name = $self_file->basename;
    print "Path: ", $self_file->parent, $/,
    "Name: ", $self_file->basename, $/;
    if (!-e "../../tests/$p/test_$name.cpp"){
        `cp test_empty.cpp ../../tests/$p/test_$name.cpp`;
        `echo "test-canonical $p/$name.hpp ;" >> Jamroot`;
        #print "../../tests/$p/test_$name.cpp does not exists\n";
    }
    else {
       print "$x.cpp already exists\n";
    }
}

