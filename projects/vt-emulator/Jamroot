include ../../jam/cxxflags.jam ;

constant SRC : src ;
constant SRC_TEST : test ;
constant RVT_SRC : $(SRC)/rvt ;
constant RVT_SRC_TEST : $(SRC_TEST)/rvt ;

project configs
: requirements
    <include>../../src
    <include>../../src/system/linux
    <include>src

    <cxxflags>-std=c++14

    $(CXXFLAGS)

   : default-build release
;

lib libboost_unit_test : : <name>boost_unit_test_framework <link>shared ;

constant TEST_DEPENDENCIES :
    <cxxflags>-frtti
    <library>libboost_unit_test
;

import testing ;

obj screen : $(RVT_SRC)/screen.cpp ;
obj emulator : $(RVT_SRC)/vt_emulator.cpp ;
obj ansi_rendering : $(RVT_SRC)/ansi_rendering.cpp ;
obj json_rendering : $(RVT_SRC)/json_rendering.cpp ;

alias libemu : emulator screen ;

lib libterm : json_rendering libemu $(SRC)/terminal_emulator.cpp : <link>shared ;

## Tests
## @{
unit-test test_character_color : $(RVT_SRC_TEST)/test_character_color.cpp : $(TEST_DEPENDENCIES) ;
unit-test test_character : $(RVT_SRC_TEST)/test_character.cpp : $(TEST_DEPENDENCIES) ;
unit-test test_charsets : $(RVT_SRC_TEST)/test_charsets.cpp : $(TEST_DEPENDENCIES) ;

unit-test test_screen : $(RVT_SRC_TEST)/test_screen.cpp screen : $(TEST_DEPENDENCIES) ;

unit-test test_utf8_decoder : $(RVT_SRC_TEST)/test_utf8_decoder.cpp : $(TEST_DEPENDENCIES) ;

unit-test test_vt_emulator : $(RVT_SRC_TEST)/test_vt_emulator.cpp libemu : $(TEST_DEPENDENCIES) ;


unit-test enumator : $(SRC)/main.cpp ansi_rendering libemu : $(TEST_DEPENDENCIES) ;
exe terminal_browser : $(SRC)/terminal_browser.cpp libterm : $(TEST_DEPENDENCIES) ;
## }
