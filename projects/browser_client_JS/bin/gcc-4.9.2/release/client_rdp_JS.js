// The Module object: Our interface to the outside world. We import
// and export values on it, and do the work to get that through
// closure compiler if necessary. There are various ways Module can be used:
// 1. Not defined. We create it here
// 2. A function parameter, function(Module) { ..generated code.. }
// 3. pre-run appended it, var Module = {}; ..generated code..
// 4. External script tag defines var Module.
// We need to do an eval in order to handle the closure compiler
// case, where this code here is minified but Module was defined
// elsewhere (e.g. case 4 above). We also need to check if Module
// already exists (e.g. case 3 above).
// Note that if you want to run closure, and also to use Module
// after the generated code, you will need to define   var Module = {};
// before the code. Then that object will be used in the code, and you
// can continue to use Module afterwards as well.
var Module;
if (!Module) Module = (typeof Module !== 'undefined' ? Module : null) || {};

// Sometimes an existing Module object exists with properties
// meant to overwrite the default module functionality. Here
// we collect those properties and reapply _after_ we configure
// the current environment's defaults to avoid having to be so
// defensive during initialization.
var moduleOverrides = {};
for (var key in Module) {
  if (Module.hasOwnProperty(key)) {
    moduleOverrides[key] = Module[key];
  }
}

// The environment setup code below is customized to use Module.
// *** Environment setup code ***
var ENVIRONMENT_IS_WEB = false;
var ENVIRONMENT_IS_WORKER = false;
var ENVIRONMENT_IS_NODE = false;
var ENVIRONMENT_IS_SHELL = false;

// Three configurations we can be running in:
// 1) We could be the application main() thread running in the main JS UI thread. (ENVIRONMENT_IS_WORKER == false and ENVIRONMENT_IS_PTHREAD == false)
// 2) We could be the application main() thread proxied to worker. (with Emscripten -s PROXY_TO_WORKER=1) (ENVIRONMENT_IS_WORKER == true, ENVIRONMENT_IS_PTHREAD == false)
// 3) We could be an application pthread running in a worker. (ENVIRONMENT_IS_WORKER == true and ENVIRONMENT_IS_PTHREAD == true)

if (Module['ENVIRONMENT']) {
  if (Module['ENVIRONMENT'] === 'WEB') {
    ENVIRONMENT_IS_WEB = true;
  } else if (Module['ENVIRONMENT'] === 'WORKER') {
    ENVIRONMENT_IS_WORKER = true;
  } else if (Module['ENVIRONMENT'] === 'NODE') {
    ENVIRONMENT_IS_NODE = true;
  } else if (Module['ENVIRONMENT'] === 'SHELL') {
    ENVIRONMENT_IS_SHELL = true;
  } else {
    throw new Error('The provided Module[\'ENVIRONMENT\'] value is not valid. It must be one of: WEB|WORKER|NODE|SHELL.');
  }
} else {
  ENVIRONMENT_IS_WEB = typeof window === 'object';
  ENVIRONMENT_IS_WORKER = typeof importScripts === 'function';
  ENVIRONMENT_IS_NODE = typeof process === 'object' && typeof require === 'function' && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;
  ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;
}


if (ENVIRONMENT_IS_NODE) {
  // Expose functionality in the same simple way that the shells work
  // Note that we pollute the global namespace here, otherwise we break in node
  if (!Module['print']) Module['print'] = console.log;
  if (!Module['printErr']) Module['printErr'] = console.warn;

  var nodeFS;
  var nodePath;

  Module['read'] = function read(filename, binary) {
    if (!nodeFS) nodeFS = require('fs');
    if (!nodePath) nodePath = require('path');

    filename = nodePath['normalize'](filename);
    var ret = nodeFS['readFileSync'](filename);
    // The path is absolute if the normalized version is the same as the resolved.
    if (!ret && filename != nodePath['resolve'](filename)) {
      filename = path.join(__dirname, '..', 'src', filename);
      ret = nodeFS['readFileSync'](filename);
    }
    if (ret && !binary) ret = ret.toString();
    return ret;
  };

  Module['readBinary'] = function readBinary(filename) {
    var ret = Module['read'](filename, true);
    if (!ret.buffer) {
      ret = new Uint8Array(ret);
    }
    assert(ret.buffer);
    return ret;
  };

  Module['load'] = function load(f) {
    globalEval(read(f));
  };

  if (!Module['thisProgram']) {
    if (process['argv'].length > 1) {
      Module['thisProgram'] = process['argv'][1].replace(/\\/g, '/');
    } else {
      Module['thisProgram'] = 'unknown-program';
    }
  }

  Module['arguments'] = process['argv'].slice(2);

  if (typeof module !== 'undefined') {
    module['exports'] = Module;
  }

  process['on']('uncaughtException', function(ex) {
    // suppress ExitStatus exceptions from showing an error
    if (!(ex instanceof ExitStatus)) {
      throw ex;
    }
  });

  Module['inspect'] = function () { return '[Emscripten Module object]'; };
}
else if (ENVIRONMENT_IS_SHELL) {
  if (!Module['print']) Module['print'] = print;
  if (typeof printErr != 'undefined') Module['printErr'] = printErr; // not present in v8 or older sm

  if (typeof read != 'undefined') {
    Module['read'] = read;
  } else {
    Module['read'] = function read() { throw 'no read() available (jsc?)' };
  }

  Module['readBinary'] = function readBinary(f) {
    if (typeof readbuffer === 'function') {
      return new Uint8Array(readbuffer(f));
    }
    var data = read(f, 'binary');
    assert(typeof data === 'object');
    return data;
  };

  if (typeof scriptArgs != 'undefined') {
    Module['arguments'] = scriptArgs;
  } else if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

}
else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {
  Module['read'] = function read(url) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, false);
    xhr.send(null);
    return xhr.responseText;
  };

  Module['readAsync'] = function readAsync(url, onload, onerror) {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', url, true);
    xhr.responseType = 'arraybuffer';
    xhr.onload = function xhr_onload() {
      if (xhr.status == 200 || (xhr.status == 0 && xhr.response)) { // file URLs can return 0
        onload(xhr.response);
      } else {
        onerror();
      }
    };
    xhr.onerror = onerror;
    xhr.send(null);
  };

  if (typeof arguments != 'undefined') {
    Module['arguments'] = arguments;
  }

  if (typeof console !== 'undefined') {
    if (!Module['print']) Module['print'] = function print(x) {
      console.log(x);
    };
    if (!Module['printErr']) Module['printErr'] = function printErr(x) {
      console.warn(x);
    };
  } else {
    // Probably a worker, and without console.log. We can do very little here...
    var TRY_USE_DUMP = false;
    if (!Module['print']) Module['print'] = (TRY_USE_DUMP && (typeof(dump) !== "undefined") ? (function(x) {
      dump(x);
    }) : (function(x) {
      // self.postMessage(x); // enable this if you want stdout to be sent as messages
    }));
  }

  if (ENVIRONMENT_IS_WORKER) {
    Module['load'] = importScripts;
  }

  if (typeof Module['setWindowTitle'] === 'undefined') {
    Module['setWindowTitle'] = function(title) { document.title = title };
  }
}
else {
  // Unreachable because SHELL is dependant on the others
  throw 'Unknown runtime environment. Where are we?';
}

function globalEval(x) {
  eval.call(null, x);
}
if (!Module['load'] && Module['read']) {
  Module['load'] = function load(f) {
    globalEval(Module['read'](f));
  };
}
if (!Module['print']) {
  Module['print'] = function(){};
}
if (!Module['printErr']) {
  Module['printErr'] = Module['print'];
}
if (!Module['arguments']) {
  Module['arguments'] = [];
}
if (!Module['thisProgram']) {
  Module['thisProgram'] = './this.program';
}

// *** Environment setup code ***

// Closure helpers
Module.print = Module['print'];
Module.printErr = Module['printErr'];

// Callbacks
Module['preRun'] = [];
Module['postRun'] = [];

// Merge back in the overrides
for (var key in moduleOverrides) {
  if (moduleOverrides.hasOwnProperty(key)) {
    Module[key] = moduleOverrides[key];
  }
}
// Free the object hierarchy contained in the overrides, this lets the GC
// reclaim data used e.g. in memoryInitializerRequest, which is a large typed array.
moduleOverrides = undefined;



// {{PREAMBLE_ADDITIONS}}

// === Preamble library stuff ===

// Documentation for the public APIs defined in this file must be updated in: 
//    site/source/docs/api_reference/preamble.js.rst
// A prebuilt local version of the documentation is available at: 
//    site/build/text/docs/api_reference/preamble.js.txt
// You can also build docs locally as HTML or other formats in site/
// An online HTML version (which may be of a different version of Emscripten)
//    is up at http://kripken.github.io/emscripten-site/docs/api_reference/preamble.js.html

//========================================
// Runtime code shared with compiler
//========================================

var Runtime = {
  setTempRet0: function (value) {
    tempRet0 = value;
  },
  getTempRet0: function () {
    return tempRet0;
  },
  stackSave: function () {
    return STACKTOP;
  },
  stackRestore: function (stackTop) {
    STACKTOP = stackTop;
  },
  getNativeTypeSize: function (type) {
    switch (type) {
      case 'i1': case 'i8': return 1;
      case 'i16': return 2;
      case 'i32': return 4;
      case 'i64': return 8;
      case 'float': return 4;
      case 'double': return 8;
      default: {
        if (type[type.length-1] === '*') {
          return Runtime.QUANTUM_SIZE; // A pointer
        } else if (type[0] === 'i') {
          var bits = parseInt(type.substr(1));
          assert(bits % 8 === 0);
          return bits/8;
        } else {
          return 0;
        }
      }
    }
  },
  getNativeFieldSize: function (type) {
    return Math.max(Runtime.getNativeTypeSize(type), Runtime.QUANTUM_SIZE);
  },
  STACK_ALIGN: 16,
  prepVararg: function (ptr, type) {
    if (type === 'double' || type === 'i64') {
      // move so the load is aligned
      if (ptr & 7) {
        assert((ptr & 7) === 4);
        ptr += 4;
      }
    } else {
      assert((ptr & 3) === 0);
    }
    return ptr;
  },
  getAlignSize: function (type, size, vararg) {
    // we align i64s and doubles on 64-bit boundaries, unlike x86
    if (!vararg && (type == 'i64' || type == 'double')) return 8;
    if (!type) return Math.min(size, 8); // align structures internally to 64 bits
    return Math.min(size || (type ? Runtime.getNativeFieldSize(type) : 0), Runtime.QUANTUM_SIZE);
  },
  dynCall: function (sig, ptr, args) {
    if (args && args.length) {
      if (!args.splice) args = Array.prototype.slice.call(args);
      args.splice(0, 0, ptr);
      return Module['dynCall_' + sig].apply(null, args);
    } else {
      return Module['dynCall_' + sig].call(null, ptr);
    }
  },
  functionPointers: [],
  addFunction: function (func) {
    for (var i = 0; i < Runtime.functionPointers.length; i++) {
      if (!Runtime.functionPointers[i]) {
        Runtime.functionPointers[i] = func;
        return 2*(1 + i);
      }
    }
    throw 'Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.';
  },
  removeFunction: function (index) {
    Runtime.functionPointers[(index-2)/2] = null;
  },
  warnOnce: function (text) {
    if (!Runtime.warnOnce.shown) Runtime.warnOnce.shown = {};
    if (!Runtime.warnOnce.shown[text]) {
      Runtime.warnOnce.shown[text] = 1;
      Module.printErr(text);
    }
  },
  funcWrappers: {},
  getFuncWrapper: function (func, sig) {
    assert(sig);
    if (!Runtime.funcWrappers[sig]) {
      Runtime.funcWrappers[sig] = {};
    }
    var sigCache = Runtime.funcWrappers[sig];
    if (!sigCache[func]) {
      sigCache[func] = function dynCall_wrapper() {
        return Runtime.dynCall(sig, func, arguments);
      };
    }
    return sigCache[func];
  },
  getCompilerSetting: function (name) {
    throw 'You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work';
  },
  stackAlloc: function (size) { var ret = STACKTOP;STACKTOP = (STACKTOP + size)|0;STACKTOP = (((STACKTOP)+15)&-16); return ret; },
  staticAlloc: function (size) { var ret = STATICTOP;STATICTOP = (STATICTOP + size)|0;STATICTOP = (((STATICTOP)+15)&-16); return ret; },
  dynamicAlloc: function (size) { var ret = DYNAMICTOP;DYNAMICTOP = (DYNAMICTOP + size)|0;DYNAMICTOP = (((DYNAMICTOP)+15)&-16); if (DYNAMICTOP >= TOTAL_MEMORY) { var success = enlargeMemory(); if (!success) { DYNAMICTOP = ret;  return 0; } }; return ret; },
  alignMemory: function (size,quantum) { var ret = size = Math.ceil((size)/(quantum ? quantum : 16))*(quantum ? quantum : 16); return ret; },
  makeBigInt: function (low,high,unsigned) { var ret = (unsigned ? ((+((low>>>0)))+((+((high>>>0)))*(+4294967296))) : ((+((low>>>0)))+((+((high|0)))*(+4294967296)))); return ret; },
  GLOBAL_BASE: 8,
  QUANTUM_SIZE: 4,
  __dummy__: 0
}



Module["Runtime"] = Runtime;



//========================================
// Runtime essentials
//========================================

var ABORT = false; // whether we are quitting the application. no code should run after this. set in exit() and abort()
var EXITSTATUS = 0;

function assert(condition, text) {
  if (!condition) {
    abort('Assertion failed: ' + text);
  }
}

var globalScope = this;

// Returns the C function with a specified identifier (for C++, you need to do manual name mangling)
function getCFunc(ident) {
  var func = Module['_' + ident]; // closure exported function
  if (!func) {
    try { func = eval('_' + ident); } catch(e) {}
  }
  assert(func, 'Cannot call unknown function ' + ident + ' (perhaps LLVM optimizations or closure removed it?)');
  return func;
}

var cwrap, ccall;
(function(){
  var JSfuncs = {
    // Helpers for cwrap -- it can't refer to Runtime directly because it might
    // be renamed by closure, instead it calls JSfuncs['stackSave'].body to find
    // out what the minified function name is.
    'stackSave': function() {
      Runtime.stackSave()
    },
    'stackRestore': function() {
      Runtime.stackRestore()
    },
    // type conversion from js to c
    'arrayToC' : function(arr) {
      var ret = Runtime.stackAlloc(arr.length);
      writeArrayToMemory(arr, ret);
      return ret;
    },
    'stringToC' : function(str) {
      var ret = 0;
      if (str !== null && str !== undefined && str !== 0) { // null string
        // at most 4 bytes per UTF-8 code point, +1 for the trailing '\0'
        ret = Runtime.stackAlloc((str.length << 2) + 1);
        writeStringToMemory(str, ret);
      }
      return ret;
    }
  };
  // For fast lookup of conversion functions
  var toC = {'string' : JSfuncs['stringToC'], 'array' : JSfuncs['arrayToC']};

  // C calling interface. 
  ccall = function ccallFunc(ident, returnType, argTypes, args, opts) {
    var func = getCFunc(ident);
    var cArgs = [];
    var stack = 0;
    if (args) {
      for (var i = 0; i < args.length; i++) {
        var converter = toC[argTypes[i]];
        if (converter) {
          if (stack === 0) stack = Runtime.stackSave();
          cArgs[i] = converter(args[i]);
        } else {
          cArgs[i] = args[i];
        }
      }
    }
    var ret = func.apply(null, cArgs);
    if (returnType === 'string') ret = Pointer_stringify(ret);
    if (stack !== 0) {
      if (opts && opts.async) {
        EmterpreterAsync.asyncFinalizers.push(function() {
          Runtime.stackRestore(stack);
        });
        return;
      }
      Runtime.stackRestore(stack);
    }
    return ret;
  }

  var sourceRegex = /^function\s*[a-zA-Z$_0-9]*\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/;
  function parseJSFunc(jsfunc) {
    // Match the body and the return value of a javascript function source
    var parsed = jsfunc.toString().match(sourceRegex).slice(1);
    return {arguments : parsed[0], body : parsed[1], returnValue: parsed[2]}
  }

  // sources of useful functions. we create this lazily as it can trigger a source decompression on this entire file
  var JSsource = null;
  function ensureJSsource() {
    if (!JSsource) {
      JSsource = {};
      for (var fun in JSfuncs) {
        if (JSfuncs.hasOwnProperty(fun)) {
          // Elements of toCsource are arrays of three items:
          // the code, and the return value
          JSsource[fun] = parseJSFunc(JSfuncs[fun]);
        }
      }
    }
  }
  
  cwrap = function cwrap(ident, returnType, argTypes) {
    argTypes = argTypes || [];
    var cfunc = getCFunc(ident);
    // When the function takes numbers and returns a number, we can just return
    // the original function
    var numericArgs = argTypes.every(function(type){ return type === 'number'});
    var numericRet = (returnType !== 'string');
    if ( numericRet && numericArgs) {
      return cfunc;
    }
    // Creation of the arguments list (["$1","$2",...,"$nargs"])
    var argNames = argTypes.map(function(x,i){return '$'+i});
    var funcstr = "(function(" + argNames.join(',') + ") {";
    var nargs = argTypes.length;
    if (!numericArgs) {
      // Generate the code needed to convert the arguments from javascript
      // values to pointers
      ensureJSsource();
      funcstr += 'var stack = ' + JSsource['stackSave'].body + ';';
      for (var i = 0; i < nargs; i++) {
        var arg = argNames[i], type = argTypes[i];
        if (type === 'number') continue;
        var convertCode = JSsource[type + 'ToC']; // [code, return]
        funcstr += 'var ' + convertCode.arguments + ' = ' + arg + ';';
        funcstr += convertCode.body + ';';
        funcstr += arg + '=(' + convertCode.returnValue + ');';
      }
    }

    // When the code is compressed, the name of cfunc is not literally 'cfunc' anymore
    var cfuncname = parseJSFunc(function(){return cfunc}).returnValue;
    // Call the function
    funcstr += 'var ret = ' + cfuncname + '(' + argNames.join(',') + ');';
    if (!numericRet) { // Return type can only by 'string' or 'number'
      // Convert the result to a string
      var strgfy = parseJSFunc(function(){return Pointer_stringify}).returnValue;
      funcstr += 'ret = ' + strgfy + '(ret);';
    }
    if (!numericArgs) {
      // If we had a stack, restore it
      ensureJSsource();
      funcstr += JSsource['stackRestore'].body.replace('()', '(stack)') + ';';
    }
    funcstr += 'return ret})';
    return eval(funcstr);
  };
})();
Module["ccall"] = ccall;
Module["cwrap"] = cwrap;

function setValue(ptr, value, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': HEAP8[((ptr)>>0)]=value; break;
      case 'i8': HEAP8[((ptr)>>0)]=value; break;
      case 'i16': HEAP16[((ptr)>>1)]=value; break;
      case 'i32': HEAP32[((ptr)>>2)]=value; break;
      case 'i64': (tempI64 = [value>>>0,(tempDouble=value,(+(Math_abs(tempDouble))) >= (+1) ? (tempDouble > (+0) ? ((Math_min((+(Math_floor((tempDouble)/(+4294967296)))), (+4294967295)))|0)>>>0 : (~~((+(Math_ceil((tempDouble - +(((~~(tempDouble)))>>>0))/(+4294967296))))))>>>0) : 0)],HEAP32[((ptr)>>2)]=tempI64[0],HEAP32[(((ptr)+(4))>>2)]=tempI64[1]); break;
      case 'float': HEAPF32[((ptr)>>2)]=value; break;
      case 'double': HEAPF64[((ptr)>>3)]=value; break;
      default: abort('invalid type for setValue: ' + type);
    }
}
Module["setValue"] = setValue;


function getValue(ptr, type, noSafe) {
  type = type || 'i8';
  if (type.charAt(type.length-1) === '*') type = 'i32'; // pointers are 32-bit
    switch(type) {
      case 'i1': return HEAP8[((ptr)>>0)];
      case 'i8': return HEAP8[((ptr)>>0)];
      case 'i16': return HEAP16[((ptr)>>1)];
      case 'i32': return HEAP32[((ptr)>>2)];
      case 'i64': return HEAP32[((ptr)>>2)];
      case 'float': return HEAPF32[((ptr)>>2)];
      case 'double': return HEAPF64[((ptr)>>3)];
      default: abort('invalid type for setValue: ' + type);
    }
  return null;
}
Module["getValue"] = getValue;

var ALLOC_NORMAL = 0; // Tries to use _malloc()
var ALLOC_STACK = 1; // Lives for the duration of the current function call
var ALLOC_STATIC = 2; // Cannot be freed
var ALLOC_DYNAMIC = 3; // Cannot be freed except through sbrk
var ALLOC_NONE = 4; // Do not allocate
Module["ALLOC_NORMAL"] = ALLOC_NORMAL;
Module["ALLOC_STACK"] = ALLOC_STACK;
Module["ALLOC_STATIC"] = ALLOC_STATIC;
Module["ALLOC_DYNAMIC"] = ALLOC_DYNAMIC;
Module["ALLOC_NONE"] = ALLOC_NONE;

// allocate(): This is for internal use. You can use it yourself as well, but the interface
//             is a little tricky (see docs right below). The reason is that it is optimized
//             for multiple syntaxes to save space in generated code. So you should
//             normally not use allocate(), and instead allocate memory using _malloc(),
//             initialize it with setValue(), and so forth.
// @slab: An array of data, or a number. If a number, then the size of the block to allocate,
//        in *bytes* (note that this is sometimes confusing: the next parameter does not
//        affect this!)
// @types: Either an array of types, one for each byte (or 0 if no type at that position),
//         or a single type which is used for the entire block. This only matters if there
//         is initial data - if @slab is a number, then this does not matter at all and is
//         ignored.
// @allocator: How to allocate memory, see ALLOC_*
function allocate(slab, types, allocator, ptr) {
  var zeroinit, size;
  if (typeof slab === 'number') {
    zeroinit = true;
    size = slab;
  } else {
    zeroinit = false;
    size = slab.length;
  }

  var singleType = typeof types === 'string' ? types : null;

  var ret;
  if (allocator == ALLOC_NONE) {
    ret = ptr;
  } else {
    ret = [typeof _malloc === 'function' ? _malloc : Runtime.staticAlloc, Runtime.stackAlloc, Runtime.staticAlloc, Runtime.dynamicAlloc][allocator === undefined ? ALLOC_STATIC : allocator](Math.max(size, singleType ? 1 : types.length));
  }

  if (zeroinit) {
    var ptr = ret, stop;
    assert((ret & 3) == 0);
    stop = ret + (size & ~3);
    for (; ptr < stop; ptr += 4) {
      HEAP32[((ptr)>>2)]=0;
    }
    stop = ret + size;
    while (ptr < stop) {
      HEAP8[((ptr++)>>0)]=0;
    }
    return ret;
  }

  if (singleType === 'i8') {
    if (slab.subarray || slab.slice) {
      HEAPU8.set(slab, ret);
    } else {
      HEAPU8.set(new Uint8Array(slab), ret);
    }
    return ret;
  }

  var i = 0, type, typeSize, previousType;
  while (i < size) {
    var curr = slab[i];

    if (typeof curr === 'function') {
      curr = Runtime.getFunctionIndex(curr);
    }

    type = singleType || types[i];
    if (type === 0) {
      i++;
      continue;
    }

    if (type == 'i64') type = 'i32'; // special case: we have one i32 here, and one i32 later

    setValue(ret+i, curr, type);

    // no need to look up size unless type changes, so cache it
    if (previousType !== type) {
      typeSize = Runtime.getNativeTypeSize(type);
      previousType = type;
    }
    i += typeSize;
  }

  return ret;
}
Module["allocate"] = allocate;

// Allocate memory during any stage of startup - static memory early on, dynamic memory later, malloc when ready
function getMemory(size) {
  if (!staticSealed) return Runtime.staticAlloc(size);
  if ((typeof _sbrk !== 'undefined' && !_sbrk.called) || !runtimeInitialized) return Runtime.dynamicAlloc(size);
  return _malloc(size);
}
Module["getMemory"] = getMemory;

function Pointer_stringify(ptr, /* optional */ length) {
  if (length === 0 || !ptr) return '';
  // TODO: use TextDecoder
  // Find the length, and check for UTF while doing so
  var hasUtf = 0;
  var t;
  var i = 0;
  while (1) {
    t = HEAPU8[(((ptr)+(i))>>0)];
    hasUtf |= t;
    if (t == 0 && !length) break;
    i++;
    if (length && i == length) break;
  }
  if (!length) length = i;

  var ret = '';

  if (hasUtf < 128) {
    var MAX_CHUNK = 1024; // split up into chunks, because .apply on a huge string can overflow the stack
    var curr;
    while (length > 0) {
      curr = String.fromCharCode.apply(String, HEAPU8.subarray(ptr, ptr + Math.min(length, MAX_CHUNK)));
      ret = ret ? ret + curr : curr;
      ptr += MAX_CHUNK;
      length -= MAX_CHUNK;
    }
    return ret;
  }
  return Module['UTF8ToString'](ptr);
}
Module["Pointer_stringify"] = Pointer_stringify;

// Given a pointer 'ptr' to a null-terminated ASCII-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function AsciiToString(ptr) {
  var str = '';
  while (1) {
    var ch = HEAP8[((ptr++)>>0)];
    if (!ch) return str;
    str += String.fromCharCode(ch);
  }
}
Module["AsciiToString"] = AsciiToString;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in ASCII form. The copy will require at most str.length+1 bytes of space in the HEAP.

function stringToAscii(str, outPtr) {
  return writeAsciiToMemory(str, outPtr, false);
}
Module["stringToAscii"] = stringToAscii;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the given array that contains uint8 values, returns
// a copy of that string as a Javascript String object.

function UTF8ArrayToString(u8Array, idx) {
  var u0, u1, u2, u3, u4, u5;

  var str = '';
  while (1) {
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    u0 = u8Array[idx++];
    if (!u0) return str;
    if (!(u0 & 0x80)) { str += String.fromCharCode(u0); continue; }
    u1 = u8Array[idx++] & 63;
    if ((u0 & 0xE0) == 0xC0) { str += String.fromCharCode(((u0 & 31) << 6) | u1); continue; }
    u2 = u8Array[idx++] & 63;
    if ((u0 & 0xF0) == 0xE0) {
      u0 = ((u0 & 15) << 12) | (u1 << 6) | u2;
    } else {
      u3 = u8Array[idx++] & 63;
      if ((u0 & 0xF8) == 0xF0) {
        u0 = ((u0 & 7) << 18) | (u1 << 12) | (u2 << 6) | u3;
      } else {
        u4 = u8Array[idx++] & 63;
        if ((u0 & 0xFC) == 0xF8) {
          u0 = ((u0 & 3) << 24) | (u1 << 18) | (u2 << 12) | (u3 << 6) | u4;
        } else {
          u5 = u8Array[idx++] & 63;
          u0 = ((u0 & 1) << 30) | (u1 << 24) | (u2 << 18) | (u3 << 12) | (u4 << 6) | u5;
        }
      }
    }
    if (u0 < 0x10000) {
      str += String.fromCharCode(u0);
    } else {
      var ch = u0 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    }
  }
}
Module["UTF8ArrayToString"] = UTF8ArrayToString;

// Given a pointer 'ptr' to a null-terminated UTF8-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF8ToString(ptr) {
  return UTF8ArrayToString(HEAPU8,ptr);
}
Module["UTF8ToString"] = UTF8ToString;

// Copies the given Javascript String object 'str' to the given byte array at address 'outIdx',
// encoded in UTF8 form and null-terminated. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outU8Array: the array to copy to. Each index in this array is assumed to be one 8-byte element.
//   outIdx: The starting offset in the array to begin the copying.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=1, only the null terminator will be written and nothing else.
//                    maxBytesToWrite=0 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {
  if (!(maxBytesToWrite > 0)) // Parameter maxBytesToWrite is not optional. Negative values, 0, null, undefined and false each don't write out any bytes.
    return 0;

  var startIdx = outIdx;
  var endIdx = outIdx + maxBytesToWrite - 1; // -1 for string null terminator.
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    // For UTF8 byte structure, see http://en.wikipedia.org/wiki/UTF-8#Description and https://www.ietf.org/rfc/rfc2279.txt and https://tools.ietf.org/html/rfc3629
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      if (outIdx >= endIdx) break;
      outU8Array[outIdx++] = u;
    } else if (u <= 0x7FF) {
      if (outIdx + 1 >= endIdx) break;
      outU8Array[outIdx++] = 0xC0 | (u >> 6);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0xFFFF) {
      if (outIdx + 2 >= endIdx) break;
      outU8Array[outIdx++] = 0xE0 | (u >> 12);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x1FFFFF) {
      if (outIdx + 3 >= endIdx) break;
      outU8Array[outIdx++] = 0xF0 | (u >> 18);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else if (u <= 0x3FFFFFF) {
      if (outIdx + 4 >= endIdx) break;
      outU8Array[outIdx++] = 0xF8 | (u >> 24);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    } else {
      if (outIdx + 5 >= endIdx) break;
      outU8Array[outIdx++] = 0xFC | (u >> 30);
      outU8Array[outIdx++] = 0x80 | ((u >> 24) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 18) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 12) & 63);
      outU8Array[outIdx++] = 0x80 | ((u >> 6) & 63);
      outU8Array[outIdx++] = 0x80 | (u & 63);
    }
  }
  // Null-terminate the pointer to the buffer.
  outU8Array[outIdx] = 0;
  return outIdx - startIdx;
}
Module["stringToUTF8Array"] = stringToUTF8Array;

// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF8 form. The copy will require at most str.length*4+1 bytes of space in the HEAP.
// Use the function lengthBytesUTF8() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF8(str, outPtr, maxBytesToWrite) {
  return stringToUTF8Array(str, HEAPU8,outPtr, maxBytesToWrite);
}
Module["stringToUTF8"] = stringToUTF8;

// Returns the number of bytes the given Javascript string takes if encoded as a UTF8 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF8(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! So decode UTF16->UTF32->UTF8.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var u = str.charCodeAt(i); // possibly a lead surrogate
    if (u >= 0xD800 && u <= 0xDFFF) u = 0x10000 + ((u & 0x3FF) << 10) | (str.charCodeAt(++i) & 0x3FF);
    if (u <= 0x7F) {
      ++len;
    } else if (u <= 0x7FF) {
      len += 2;
    } else if (u <= 0xFFFF) {
      len += 3;
    } else if (u <= 0x1FFFFF) {
      len += 4;
    } else if (u <= 0x3FFFFFF) {
      len += 5;
    } else {
      len += 6;
    }
  }
  return len;
}
Module["lengthBytesUTF8"] = lengthBytesUTF8;

// Given a pointer 'ptr' to a null-terminated UTF16LE-encoded string in the emscripten HEAP, returns
// a copy of that string as a Javascript String object.

function UTF16ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var codeUnit = HEAP16[(((ptr)+(i*2))>>1)];
    if (codeUnit == 0)
      return str;
    ++i;
    // fromCharCode constructs a character from a UTF-16 code unit, so we can pass the UTF16 string right through.
    str += String.fromCharCode(codeUnit);
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF16 form. The copy will require at most str.length*4+2 bytes of space in the HEAP.
// Use the function lengthBytesUTF16() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=2, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<2 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF16(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 2) return 0;
  maxBytesToWrite -= 2; // Null terminator.
  var startPtr = outPtr;
  var numCharsToWrite = (maxBytesToWrite < str.length*2) ? (maxBytesToWrite / 2) : str.length;
  for (var i = 0; i < numCharsToWrite; ++i) {
    // charCodeAt returns a UTF-16 encoded code unit, so it can be directly written to the HEAP.
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    HEAP16[((outPtr)>>1)]=codeUnit;
    outPtr += 2;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP16[((outPtr)>>1)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF16(str) {
  return str.length*2;
}


function UTF32ToString(ptr) {
  var i = 0;

  var str = '';
  while (1) {
    var utf32 = HEAP32[(((ptr)+(i*4))>>2)];
    if (utf32 == 0)
      return str;
    ++i;
    // Gotcha: fromCharCode constructs a character from a UTF-16 encoded code (pair), not from a Unicode code point! So encode the code point to UTF-16 for constructing.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    if (utf32 >= 0x10000) {
      var ch = utf32 - 0x10000;
      str += String.fromCharCode(0xD800 | (ch >> 10), 0xDC00 | (ch & 0x3FF));
    } else {
      str += String.fromCharCode(utf32);
    }
  }
}


// Copies the given Javascript String object 'str' to the emscripten HEAP at address 'outPtr',
// null-terminated and encoded in UTF32 form. The copy will require at most str.length*4+4 bytes of space in the HEAP.
// Use the function lengthBytesUTF32() to compute the exact number of bytes (excluding null terminator) that this function will write.
// Parameters:
//   str: the Javascript string to copy.
//   outPtr: Byte address in Emscripten HEAP where to write the string to.
//   maxBytesToWrite: The maximum number of bytes this function can write to the array. This count should include the null 
//                    terminator, i.e. if maxBytesToWrite=4, only the null terminator will be written and nothing else.
//                    maxBytesToWrite<4 does not write any bytes to the output, not even the null terminator.
// Returns the number of bytes written, EXCLUDING the null terminator.

function stringToUTF32(str, outPtr, maxBytesToWrite) {
  // Backwards compatibility: if max bytes is not specified, assume unsafe unbounded write is allowed.
  if (maxBytesToWrite === undefined) {
    maxBytesToWrite = 0x7FFFFFFF;
  }
  if (maxBytesToWrite < 4) return 0;
  var startPtr = outPtr;
  var endPtr = startPtr + maxBytesToWrite - 4;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i); // possibly a lead surrogate
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) {
      var trailSurrogate = str.charCodeAt(++i);
      codeUnit = 0x10000 + ((codeUnit & 0x3FF) << 10) | (trailSurrogate & 0x3FF);
    }
    HEAP32[((outPtr)>>2)]=codeUnit;
    outPtr += 4;
    if (outPtr + 4 > endPtr) break;
  }
  // Null-terminate the pointer to the HEAP.
  HEAP32[((outPtr)>>2)]=0;
  return outPtr - startPtr;
}


// Returns the number of bytes the given Javascript string takes if encoded as a UTF16 byte array, EXCLUDING the null terminator byte.

function lengthBytesUTF32(str) {
  var len = 0;
  for (var i = 0; i < str.length; ++i) {
    // Gotcha: charCodeAt returns a 16-bit word that is a UTF-16 encoded code unit, not a Unicode code point of the character! We must decode the string to UTF-32 to the heap.
    // See http://unicode.org/faq/utf_bom.html#utf16-3
    var codeUnit = str.charCodeAt(i);
    if (codeUnit >= 0xD800 && codeUnit <= 0xDFFF) ++i; // possibly a lead surrogate, so skip over the tail surrogate.
    len += 4;
  }

  return len;
}


function demangle(func) {
  var hasLibcxxabi = !!Module['___cxa_demangle'];
  if (hasLibcxxabi) {
    try {
      var buf = _malloc(func.length);
      writeStringToMemory(func.substr(1), buf);
      var status = _malloc(4);
      var ret = Module['___cxa_demangle'](buf, 0, 0, status);
      if (getValue(status, 'i32') === 0 && ret) {
        return Pointer_stringify(ret);
      }
      // otherwise, libcxxabi failed, we can try ours which may return a partial result
    } catch(e) {
      // failure when using libcxxabi, we can try ours which may return a partial result
      return func;
    } finally {
      if (buf) _free(buf);
      if (status) _free(status);
      if (ret) _free(ret);
    }
  }
  Runtime.warnOnce('warning: build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling');
  return func;
}

function demangleAll(text) {
  return text.replace(/__Z[\w\d_]+/g, function(x) { var y = demangle(x); return x === y ? x : (x + ' [' + y + ']') });
}

function jsStackTrace() {
  var err = new Error();
  if (!err.stack) {
    // IE10+ special cases: It does have callstack info, but it is only populated if an Error object is thrown,
    // so try that as a special-case.
    try {
      throw new Error(0);
    } catch(e) {
      err = e;
    }
    if (!err.stack) {
      return '(no stack trace available)';
    }
  }
  return err.stack.toString();
}

function stackTrace() {
  return demangleAll(jsStackTrace());
}
Module["stackTrace"] = stackTrace;

// Memory management

var PAGE_SIZE = 4096;

function alignMemoryPage(x) {
  if (x % 4096 > 0) {
    x += (4096 - (x % 4096));
  }
  return x;
}

var HEAP;
var buffer;
var HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;

function updateGlobalBuffer(buf) {
  Module['buffer'] = buffer = buf;
}

function updateGlobalBufferViews() {
  Module['HEAP8'] = HEAP8 = new Int8Array(buffer);
  Module['HEAP16'] = HEAP16 = new Int16Array(buffer);
  Module['HEAP32'] = HEAP32 = new Int32Array(buffer);
  Module['HEAPU8'] = HEAPU8 = new Uint8Array(buffer);
  Module['HEAPU16'] = HEAPU16 = new Uint16Array(buffer);
  Module['HEAPU32'] = HEAPU32 = new Uint32Array(buffer);
  Module['HEAPF32'] = HEAPF32 = new Float32Array(buffer);
  Module['HEAPF64'] = HEAPF64 = new Float64Array(buffer);
}

var STATIC_BASE = 0, STATICTOP = 0, staticSealed = false; // static area
var STACK_BASE = 0, STACKTOP = 0, STACK_MAX = 0; // stack area
var DYNAMIC_BASE = 0, DYNAMICTOP = 0; // dynamic area handled by sbrk


function abortOnCannotGrowMemory() {
  abort('Cannot enlarge memory arrays. Either (1) compile with  -s TOTAL_MEMORY=X  with X higher than the current value ' + TOTAL_MEMORY + ', (2) compile with  -s ALLOW_MEMORY_GROWTH=1  which adjusts the size at runtime but prevents some optimizations, (3) set Module.TOTAL_MEMORY to a higher value before the program runs, or if you want malloc to return NULL (0) instead of this abort, compile with  -s ABORTING_MALLOC=0 ');
}

function enlargeMemory() {
  abortOnCannotGrowMemory();
}


var TOTAL_STACK = Module['TOTAL_STACK'] || 5242880;
var TOTAL_MEMORY = Module['TOTAL_MEMORY'] || 16777216;

var totalMemory = 64*1024;
while (totalMemory < TOTAL_MEMORY || totalMemory < 2*TOTAL_STACK) {
  if (totalMemory < 16*1024*1024) {
    totalMemory *= 2;
  } else {
    totalMemory += 16*1024*1024
  }
}
if (totalMemory !== TOTAL_MEMORY) {
  TOTAL_MEMORY = totalMemory;
}

// Initialize the runtime's memory



// Use a provided buffer, if there is one, or else allocate a new one
if (Module['buffer']) {
  buffer = Module['buffer'];
} else {
  buffer = new ArrayBuffer(TOTAL_MEMORY);
}
updateGlobalBufferViews();


// Endianness check (note: assumes compiler arch was little-endian)
HEAP32[0] = 255;
if (HEAPU8[0] !== 255 || HEAPU8[3] !== 0) throw 'Typed arrays 2 must be run on a little-endian system';

Module['HEAP'] = HEAP;
Module['buffer'] = buffer;
Module['HEAP8'] = HEAP8;
Module['HEAP16'] = HEAP16;
Module['HEAP32'] = HEAP32;
Module['HEAPU8'] = HEAPU8;
Module['HEAPU16'] = HEAPU16;
Module['HEAPU32'] = HEAPU32;
Module['HEAPF32'] = HEAPF32;
Module['HEAPF64'] = HEAPF64;

function callRuntimeCallbacks(callbacks) {
  while(callbacks.length > 0) {
    var callback = callbacks.shift();
    if (typeof callback == 'function') {
      callback();
      continue;
    }
    var func = callback.func;
    if (typeof func === 'number') {
      if (callback.arg === undefined) {
        Runtime.dynCall('v', func);
      } else {
        Runtime.dynCall('vi', func, [callback.arg]);
      }
    } else {
      func(callback.arg === undefined ? null : callback.arg);
    }
  }
}

var __ATPRERUN__  = []; // functions called before the runtime is initialized
var __ATINIT__    = []; // functions called during startup
var __ATMAIN__    = []; // functions called when main() is to be run
var __ATEXIT__    = []; // functions called during shutdown
var __ATPOSTRUN__ = []; // functions called after the runtime has exited

var runtimeInitialized = false;
var runtimeExited = false;


function preRun() {
  // compatibility - merge in anything from Module['preRun'] at this time
  if (Module['preRun']) {
    if (typeof Module['preRun'] == 'function') Module['preRun'] = [Module['preRun']];
    while (Module['preRun'].length) {
      addOnPreRun(Module['preRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPRERUN__);
}

function ensureInitRuntime() {
  if (runtimeInitialized) return;
  runtimeInitialized = true;
  callRuntimeCallbacks(__ATINIT__);
}

function preMain() {
  callRuntimeCallbacks(__ATMAIN__);
}

function exitRuntime() {
  callRuntimeCallbacks(__ATEXIT__);
  runtimeExited = true;
}

function postRun() {
  // compatibility - merge in anything from Module['postRun'] at this time
  if (Module['postRun']) {
    if (typeof Module['postRun'] == 'function') Module['postRun'] = [Module['postRun']];
    while (Module['postRun'].length) {
      addOnPostRun(Module['postRun'].shift());
    }
  }
  callRuntimeCallbacks(__ATPOSTRUN__);
}

function addOnPreRun(cb) {
  __ATPRERUN__.unshift(cb);
}
Module["addOnPreRun"] = addOnPreRun;

function addOnInit(cb) {
  __ATINIT__.unshift(cb);
}
Module["addOnInit"] = addOnInit;

function addOnPreMain(cb) {
  __ATMAIN__.unshift(cb);
}
Module["addOnPreMain"] = addOnPreMain;

function addOnExit(cb) {
  __ATEXIT__.unshift(cb);
}
Module["addOnExit"] = addOnExit;

function addOnPostRun(cb) {
  __ATPOSTRUN__.unshift(cb);
}
Module["addOnPostRun"] = addOnPostRun;

// Tools


function intArrayFromString(stringy, dontAddNull, length /* optional */) {
  var len = length > 0 ? length : lengthBytesUTF8(stringy)+1;
  var u8array = new Array(len);
  var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
  if (dontAddNull) u8array.length = numBytesWritten;
  return u8array;
}
Module["intArrayFromString"] = intArrayFromString;

function intArrayToString(array) {
  var ret = [];
  for (var i = 0; i < array.length; i++) {
    var chr = array[i];
    if (chr > 0xFF) {
      chr &= 0xFF;
    }
    ret.push(String.fromCharCode(chr));
  }
  return ret.join('');
}
Module["intArrayToString"] = intArrayToString;

function writeStringToMemory(string, buffer, dontAddNull) {
  var array = intArrayFromString(string, dontAddNull);
  var i = 0;
  while (i < array.length) {
    var chr = array[i];
    HEAP8[(((buffer)+(i))>>0)]=chr;
    i = i + 1;
  }
}
Module["writeStringToMemory"] = writeStringToMemory;

function writeArrayToMemory(array, buffer) {
  for (var i = 0; i < array.length; i++) {
    HEAP8[((buffer++)>>0)]=array[i];
  }
}
Module["writeArrayToMemory"] = writeArrayToMemory;

function writeAsciiToMemory(str, buffer, dontAddNull) {
  for (var i = 0; i < str.length; ++i) {
    HEAP8[((buffer++)>>0)]=str.charCodeAt(i);
  }
  // Null-terminate the pointer to the HEAP.
  if (!dontAddNull) HEAP8[((buffer)>>0)]=0;
}
Module["writeAsciiToMemory"] = writeAsciiToMemory;

function unSign(value, bits, ignore) {
  if (value >= 0) {
    return value;
  }
  return bits <= 32 ? 2*Math.abs(1 << (bits-1)) + value // Need some trickery, since if bits == 32, we are right at the limit of the bits JS uses in bitshifts
                    : Math.pow(2, bits)         + value;
}
function reSign(value, bits, ignore) {
  if (value <= 0) {
    return value;
  }
  var half = bits <= 32 ? Math.abs(1 << (bits-1)) // abs is needed if bits == 32
                        : Math.pow(2, bits-1);
  if (value >= half && (bits <= 32 || value > half)) { // for huge values, we can hit the precision limit and always get true here. so don't do that
                                                       // but, in general there is no perfect solution here. With 64-bit ints, we get rounding and errors
                                                       // TODO: In i64 mode 1, resign the two parts separately and safely
    value = -2*half + value; // Cannot bitshift half, as it may be at the limit of the bits JS uses in bitshifts
  }
  return value;
}


// check for imul support, and also for correctness ( https://bugs.webkit.org/show_bug.cgi?id=126345 )
if (!Math['imul'] || Math['imul'](0xffffffff, 5) !== -5) Math['imul'] = function imul(a, b) {
  var ah  = a >>> 16;
  var al = a & 0xffff;
  var bh  = b >>> 16;
  var bl = b & 0xffff;
  return (al*bl + ((ah*bl + al*bh) << 16))|0;
};
Math.imul = Math['imul'];


if (!Math['clz32']) Math['clz32'] = function(x) {
  x = x >>> 0;
  for (var i = 0; i < 32; i++) {
    if (x & (1 << (31 - i))) return i;
  }
  return 32;
};
Math.clz32 = Math['clz32']

var Math_abs = Math.abs;
var Math_cos = Math.cos;
var Math_sin = Math.sin;
var Math_tan = Math.tan;
var Math_acos = Math.acos;
var Math_asin = Math.asin;
var Math_atan = Math.atan;
var Math_atan2 = Math.atan2;
var Math_exp = Math.exp;
var Math_log = Math.log;
var Math_sqrt = Math.sqrt;
var Math_ceil = Math.ceil;
var Math_floor = Math.floor;
var Math_pow = Math.pow;
var Math_imul = Math.imul;
var Math_fround = Math.fround;
var Math_min = Math.min;
var Math_clz32 = Math.clz32;

// A counter of dependencies for calling run(). If we need to
// do asynchronous work before running, increment this and
// decrement it. Incrementing must happen in a place like
// PRE_RUN_ADDITIONS (used by emcc to add file preloading).
// Note that you can add dependencies in preRun, even though
// it happens right before run - run will be postponed until
// the dependencies are met.
var runDependencies = 0;
var runDependencyWatcher = null;
var dependenciesFulfilled = null; // overridden to take different actions when all run dependencies are fulfilled

function getUniqueRunDependency(id) {
  return id;
}

function addRunDependency(id) {
  runDependencies++;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
}
Module["addRunDependency"] = addRunDependency;

function removeRunDependency(id) {
  runDependencies--;
  if (Module['monitorRunDependencies']) {
    Module['monitorRunDependencies'](runDependencies);
  }
  if (runDependencies == 0) {
    if (runDependencyWatcher !== null) {
      clearInterval(runDependencyWatcher);
      runDependencyWatcher = null;
    }
    if (dependenciesFulfilled) {
      var callback = dependenciesFulfilled;
      dependenciesFulfilled = null;
      callback(); // can add another dependenciesFulfilled
    }
  }
}
Module["removeRunDependency"] = removeRunDependency;

Module["preloadedImages"] = {}; // maps url to image data
Module["preloadedAudios"] = {}; // maps url to audio data



var memoryInitializer = null;




// === Body ===

var ASM_CONSTS = [function($0) { { startTimer(); } },
 function($0) { { endTimer(); } },
 function($0, $1, $2, $3, $4, $5, $6) { {drawable.bitmap($0 , $1 , $2 , $3 , HEAPU8.subarray($4, $4 + $5), $6);} },
 function($0, $1, $2, $3, $4) { {drawable.opaqueRect($0 , $1 , $2 , $3 , $4 );} },
 function($0, $1, $2, $3, $4, $5, $6, $7, $8, $9) { {drawable.RDPPatBlt_0x5A($0 , $1 , $2 , $3 , $4, $5, $6, $7, $8, $9);} },
 function($0, $1, $2, $3, $4, $5, $6) { {drawable.RDPPatBlt_0xF0($0 , $1 , $2 , $3 , $4, $5, $6 );} },
 function($0, $1, $2, $3, $4, $5) { { drawable.rDPScrBlt_Invert($0 , $1 , $2 , $3 , $4 , $5); } },
 function($0, $1, $2, $3, $4, $5, $6) { {drawable.bitmap($0, $1, $2, $3, $4, $5, $6);} },
 function($0, $1, $2, $3, $4, $5) { {drawable.rDPScrBlt_Invert($0 , $1 , $2 , $3 , $4 , $5); } },
 function($0, $1, $2, $3, $4, $5) { {drawable.rDPScrBlt($0 , $1 , $2 , $3 , $4 , $5); } },
 function($0, $1, $2, $3, $4, $5) { {drawable.bitmap($0 , $1 , $2 , $3 , HEAPU8.subarray($4, $4 + $5 - 1));} },
 function($0, $1, $2, $3, $4, $5, $6, $7) { {drawable.bitmap($0 , $1 , $2 , $3 , HEAPU8.subarray($4, $4 + $5), $6, $7);} }];

function _emscripten_asm_const_iiiiiiii(code, a0, a1, a2, a3, a4, a5, a6) {
 return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6);
}

function _emscripten_asm_const_iiiiii(code, a0, a1, a2, a3, a4) {
 return ASM_CONSTS[code](a0, a1, a2, a3, a4);
}

function _emscripten_asm_const_iiiiiii(code, a0, a1, a2, a3, a4, a5) {
 return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5);
}

function _emscripten_asm_const_iiiiiiiiiii(code, a0, a1, a2, a3, a4, a5, a6, a7, a8, a9) {
 return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

function _emscripten_asm_const_ii(code, a0) {
 return ASM_CONSTS[code](a0);
}

function _emscripten_asm_const_iiiiiiiii(code, a0, a1, a2, a3, a4, a5, a6, a7) {
 return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6, a7);
}

function _emscripten_asm_const_iddddiii(code, a0, a1, a2, a3, a4, a5, a6) {
 return ASM_CONSTS[code](a0, a1, a2, a3, a4, a5, a6);
}



STATIC_BASE = 8;

STATICTOP = STATIC_BASE + 5234912;
  /* global initializers */  __ATINIT__.push({ func: function() { __GLOBAL__sub_I_bitmap_data_allocator_cpp() } });
  

memoryInitializer = "client_rdp_JS.html.mem";





/* no memory initializer */
var tempDoublePtr = STATICTOP; STATICTOP += 16;

function copyTempFloat(ptr) { // functions, because inlining this code increases code size too much

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

}

function copyTempDouble(ptr) {

  HEAP8[tempDoublePtr] = HEAP8[ptr];

  HEAP8[tempDoublePtr+1] = HEAP8[ptr+1];

  HEAP8[tempDoublePtr+2] = HEAP8[ptr+2];

  HEAP8[tempDoublePtr+3] = HEAP8[ptr+3];

  HEAP8[tempDoublePtr+4] = HEAP8[ptr+4];

  HEAP8[tempDoublePtr+5] = HEAP8[ptr+5];

  HEAP8[tempDoublePtr+6] = HEAP8[ptr+6];

  HEAP8[tempDoublePtr+7] = HEAP8[ptr+7];

}

// {{PRE_LIBRARY}}


  
  function _atexit(func, arg) {
      __ATEXIT__.unshift({ func: func, arg: arg });
    }function ___cxa_atexit() {
  return _atexit.apply(null, arguments)
  }

  function ___cxa_pure_virtual() {
      ABORT = true;
      throw 'Pure virtual function called!';
    }

  function ___assert_fail(condition, filename, line, func) {
      ABORT = true;
      throw 'Assertion failed: ' + Pointer_stringify(condition) + ', at: ' + [filename ? Pointer_stringify(filename) : 'unknown filename', line, func ? Pointer_stringify(func) : 'unknown function'] + ' at ' + stackTrace();
    }

  
  function __ZSt18uncaught_exceptionv() { // std::uncaught_exception()
      return !!__ZSt18uncaught_exceptionv.uncaught_exception;
    }
  
  
  
  var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function (adjusted) {
        if (!adjusted || EXCEPTIONS.infos[adjusted]) return adjusted;
        for (var ptr in EXCEPTIONS.infos) {
          var info = EXCEPTIONS.infos[ptr];
          if (info.adjusted === adjusted) {
            return ptr;
          }
        }
        return adjusted;
      },addRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount++;
      },decRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        assert(info.refcount > 0);
        info.refcount--;
        if (info.refcount === 0) {
          if (info.destructor) {
            Runtime.dynCall('vi', info.destructor, [ptr]);
          }
          delete EXCEPTIONS.infos[ptr];
          ___cxa_free_exception(ptr);
        }
      },clearRef:function (ptr) {
        if (!ptr) return;
        var info = EXCEPTIONS.infos[ptr];
        info.refcount = 0;
      }};
  function ___resumeException(ptr) {
      if (!EXCEPTIONS.last) { EXCEPTIONS.last = ptr; }
      EXCEPTIONS.clearRef(EXCEPTIONS.deAdjust(ptr)); // exception refcount should be cleared, but don't free it
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }function ___cxa_find_matching_catch() {
      var thrown = EXCEPTIONS.last;
      if (!thrown) {
        // just pass through the null ptr
        return ((asm["setTempRet0"](0),0)|0);
      }
      var info = EXCEPTIONS.infos[thrown];
      var throwntype = info.type;
      if (!throwntype) {
        // just pass through the thrown ptr
        return ((asm["setTempRet0"](0),thrown)|0);
      }
      var typeArray = Array.prototype.slice.call(arguments);
  
      var pointer = Module['___cxa_is_pointer_type'](throwntype);
      // can_catch receives a **, add indirection
      if (!___cxa_find_matching_catch.buffer) ___cxa_find_matching_catch.buffer = _malloc(4);
      HEAP32[((___cxa_find_matching_catch.buffer)>>2)]=thrown;
      thrown = ___cxa_find_matching_catch.buffer;
      // The different catch blocks are denoted by different types.
      // Due to inheritance, those types may not precisely match the
      // type of the thrown object. Find one which matches, and
      // return the type of the catch block which should be called.
      for (var i = 0; i < typeArray.length; i++) {
        if (typeArray[i] && Module['___cxa_can_catch'](typeArray[i], throwntype, thrown)) {
          thrown = HEAP32[((thrown)>>2)]; // undo indirection
          info.adjusted = thrown;
          return ((asm["setTempRet0"](typeArray[i]),thrown)|0);
        }
      }
      // Shouldn't happen unless we have bogus data in typeArray
      // or encounter a type for which emscripten doesn't have suitable
      // typeinfo defined. Best-efforts match just in case.
      thrown = HEAP32[((thrown)>>2)]; // undo indirection
      return ((asm["setTempRet0"](throwntype),thrown)|0);
    }function ___cxa_throw(ptr, type, destructor) {
      EXCEPTIONS.infos[ptr] = {
        ptr: ptr,
        adjusted: ptr,
        type: type,
        destructor: destructor,
        refcount: 0
      };
      EXCEPTIONS.last = ptr;
      if (!("uncaught_exception" in __ZSt18uncaught_exceptionv)) {
        __ZSt18uncaught_exceptionv.uncaught_exception = 1;
      } else {
        __ZSt18uncaught_exceptionv.uncaught_exception++;
      }
      throw ptr + " - Exception catching is disabled, this exception cannot be caught. Compile with -s DISABLE_EXCEPTION_CATCHING=0 or DISABLE_EXCEPTION_CATCHING=2 to catch.";
    }

   
  Module["_memset"] = _memset;

  function _pthread_cleanup_push(routine, arg) {
      __ATEXIT__.push(function() { Runtime.dynCall('vi', routine, [arg]) })
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

   
  Module["_bitshift64Lshr"] = _bitshift64Lshr;

  function ___gxx_personality_v0() {
    }

  function ___cxa_guard_acquire(variable) {
      if (!HEAP8[((variable)>>0)]) { // ignore SAFE_HEAP stuff because llvm mixes i64 and i8 here
        HEAP8[((variable)>>0)]=1;
        return 1;
      }
      return 0;
    }

  function _pthread_cleanup_pop() {
      assert(_pthread_cleanup_push.level == __ATEXIT__.length, 'cannot pop if something else added meanwhile!');
      __ATEXIT__.pop();
      _pthread_cleanup_push.level = __ATEXIT__.length;
    }

  function _abort() {
      Module['abort']();
    }

  function ___lock() {}

  function ___unlock() {}

  
  var SYSCALLS={varargs:0,get:function (varargs) {
        SYSCALLS.varargs += 4;
        var ret = HEAP32[(((SYSCALLS.varargs)-(4))>>2)];
        return ret;
      },getStr:function () {
        var ret = Pointer_stringify(SYSCALLS.get());
        return ret;
      },get64:function () {
        var low = SYSCALLS.get(), high = SYSCALLS.get();
        if (low >= 0) assert(high === 0);
        else assert(high === -1);
        return low;
      },getZero:function () {
        assert(SYSCALLS.get() === 0);
      }};function ___syscall6(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // close
      var stream = SYSCALLS.getStreamFromFD();
      FS.close(stream);
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  function ___setErrNo(value) {
      if (Module['___errno_location']) HEAP32[((Module['___errno_location']())>>2)]=value;
      return value;
    }
  
  var ERRNO_CODES={EPERM:1,ENOENT:2,ESRCH:3,EINTR:4,EIO:5,ENXIO:6,E2BIG:7,ENOEXEC:8,EBADF:9,ECHILD:10,EAGAIN:11,EWOULDBLOCK:11,ENOMEM:12,EACCES:13,EFAULT:14,ENOTBLK:15,EBUSY:16,EEXIST:17,EXDEV:18,ENODEV:19,ENOTDIR:20,EISDIR:21,EINVAL:22,ENFILE:23,EMFILE:24,ENOTTY:25,ETXTBSY:26,EFBIG:27,ENOSPC:28,ESPIPE:29,EROFS:30,EMLINK:31,EPIPE:32,EDOM:33,ERANGE:34,ENOMSG:42,EIDRM:43,ECHRNG:44,EL2NSYNC:45,EL3HLT:46,EL3RST:47,ELNRNG:48,EUNATCH:49,ENOCSI:50,EL2HLT:51,EDEADLK:35,ENOLCK:37,EBADE:52,EBADR:53,EXFULL:54,ENOANO:55,EBADRQC:56,EBADSLT:57,EDEADLOCK:35,EBFONT:59,ENOSTR:60,ENODATA:61,ETIME:62,ENOSR:63,ENONET:64,ENOPKG:65,EREMOTE:66,ENOLINK:67,EADV:68,ESRMNT:69,ECOMM:70,EPROTO:71,EMULTIHOP:72,EDOTDOT:73,EBADMSG:74,ENOTUNIQ:76,EBADFD:77,EREMCHG:78,ELIBACC:79,ELIBBAD:80,ELIBSCN:81,ELIBMAX:82,ELIBEXEC:83,ENOSYS:38,ENOTEMPTY:39,ENAMETOOLONG:36,ELOOP:40,EOPNOTSUPP:95,EPFNOSUPPORT:96,ECONNRESET:104,ENOBUFS:105,EAFNOSUPPORT:97,EPROTOTYPE:91,ENOTSOCK:88,ENOPROTOOPT:92,ESHUTDOWN:108,ECONNREFUSED:111,EADDRINUSE:98,ECONNABORTED:103,ENETUNREACH:101,ENETDOWN:100,ETIMEDOUT:110,EHOSTDOWN:112,EHOSTUNREACH:113,EINPROGRESS:115,EALREADY:114,EDESTADDRREQ:89,EMSGSIZE:90,EPROTONOSUPPORT:93,ESOCKTNOSUPPORT:94,EADDRNOTAVAIL:99,ENETRESET:102,EISCONN:106,ENOTCONN:107,ETOOMANYREFS:109,EUSERS:87,EDQUOT:122,ESTALE:116,ENOTSUP:95,ENOMEDIUM:123,EILSEQ:84,EOVERFLOW:75,ECANCELED:125,ENOTRECOVERABLE:131,EOWNERDEAD:130,ESTRPIPE:86};function _sysconf(name) {
      // long sysconf(int name);
      // http://pubs.opengroup.org/onlinepubs/009695399/functions/sysconf.html
      switch(name) {
        case 30: return PAGE_SIZE;
        case 85: return totalMemory / PAGE_SIZE;
        case 132:
        case 133:
        case 12:
        case 137:
        case 138:
        case 15:
        case 235:
        case 16:
        case 17:
        case 18:
        case 19:
        case 20:
        case 149:
        case 13:
        case 10:
        case 236:
        case 153:
        case 9:
        case 21:
        case 22:
        case 159:
        case 154:
        case 14:
        case 77:
        case 78:
        case 139:
        case 80:
        case 81:
        case 82:
        case 68:
        case 67:
        case 164:
        case 11:
        case 29:
        case 47:
        case 48:
        case 95:
        case 52:
        case 51:
        case 46:
          return 200809;
        case 79:
          return 0;
        case 27:
        case 246:
        case 127:
        case 128:
        case 23:
        case 24:
        case 160:
        case 161:
        case 181:
        case 182:
        case 242:
        case 183:
        case 184:
        case 243:
        case 244:
        case 245:
        case 165:
        case 178:
        case 179:
        case 49:
        case 50:
        case 168:
        case 169:
        case 175:
        case 170:
        case 171:
        case 172:
        case 97:
        case 76:
        case 32:
        case 173:
        case 35:
          return -1;
        case 176:
        case 177:
        case 7:
        case 155:
        case 8:
        case 157:
        case 125:
        case 126:
        case 92:
        case 93:
        case 129:
        case 130:
        case 131:
        case 94:
        case 91:
          return 1;
        case 74:
        case 60:
        case 69:
        case 70:
        case 4:
          return 1024;
        case 31:
        case 42:
        case 72:
          return 32;
        case 87:
        case 26:
        case 33:
          return 2147483647;
        case 34:
        case 1:
          return 47839;
        case 38:
        case 36:
          return 99;
        case 43:
        case 37:
          return 2048;
        case 0: return 2097152;
        case 3: return 65536;
        case 28: return 32768;
        case 44: return 32767;
        case 75: return 16384;
        case 39: return 1000;
        case 89: return 700;
        case 71: return 256;
        case 40: return 255;
        case 2: return 100;
        case 180: return 64;
        case 25: return 20;
        case 5: return 16;
        case 6: return 6;
        case 73: return 4;
        case 84: {
          if (typeof navigator === 'object') return navigator['hardwareConcurrency'] || 1;
          return 1;
        }
      }
      ___setErrNo(ERRNO_CODES.EINVAL);
      return -1;
    }

  function _sbrk(bytes) {
      // Implement a Linux-like 'memory area' for our 'process'.
      // Changes the size of the memory area by |bytes|; returns the
      // address of the previous top ('break') of the memory area
      // We control the "dynamic" memory - DYNAMIC_BASE to DYNAMICTOP
      var self = _sbrk;
      if (!self.called) {
        DYNAMICTOP = alignMemoryPage(DYNAMICTOP); // make sure we start out aligned
        self.called = true;
        assert(Runtime.dynamicAlloc);
        self.alloc = Runtime.dynamicAlloc;
        Runtime.dynamicAlloc = function() { abort('cannot dynamically allocate, sbrk now has control') };
      }
      var ret = DYNAMICTOP;
      if (bytes != 0) {
        var success = self.alloc(bytes);
        if (!success) return -1 >>> 0; // sbrk failure code
      }
      return ret;  // Previous break location.
    }

  function ___syscall146(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // writev
      // hack to support printf in NO_FILESYSTEM
      var stream = SYSCALLS.get(), iov = SYSCALLS.get(), iovcnt = SYSCALLS.get();
      var ret = 0;
      if (!___syscall146.buffer) {
        ___syscall146.buffers = [null, [], []]; // 1 => stdout, 2 => stderr
        ___syscall146.printChar = function(stream, curr) {
          var buffer = ___syscall146.buffers[stream];
          assert(buffer);
          if (curr === 0 || curr === 10) {
            (stream === 1 ? Module['print'] : Module['printErr'])(UTF8ArrayToString(buffer, 0));
            buffer.length = 0;
          } else {
            buffer.push(curr);
          }
        };
      }
      for (var i = 0; i < iovcnt; i++) {
        var ptr = HEAP32[(((iov)+(i*8))>>2)];
        var len = HEAP32[(((iov)+(i*8 + 4))>>2)];
        for (var j = 0; j < len; j++) {
          ___syscall146.printChar(stream, HEAPU8[ptr+j]);
        }
        ret += len;
      }
      return ret;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  function _gettimeofday(ptr) {
      var now = Date.now();
      HEAP32[((ptr)>>2)]=(now/1000)|0; // seconds
      HEAP32[(((ptr)+(4))>>2)]=((now % 1000)*1000)|0; // microseconds
      return 0;
    }

  
  function _emscripten_memcpy_big(dest, src, num) {
      HEAPU8.set(HEAPU8.subarray(src, src+num), dest);
      return dest;
    } 
  Module["_memcpy"] = _memcpy;

  var _emscripten_asm_const_int=true;

  
  function __exit(status) {
      // void _exit(int status);
      // http://pubs.opengroup.org/onlinepubs/000095399/functions/exit.html
      Module['exit'](status);
    }function _exit(status) {
      __exit(status);
    }

  function _time(ptr) {
      var ret = (Date.now()/1000)|0;
      if (ptr) {
        HEAP32[((ptr)>>2)]=ret;
      }
      return ret;
    }

  function ___cxa_guard_release() {}

  function _pthread_self() {
      //FIXME: assumes only a single thread
      return 0;
    }

  function ___syscall140(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // llseek
      var stream = SYSCALLS.getStreamFromFD(), offset_high = SYSCALLS.get(), offset_low = SYSCALLS.get(), result = SYSCALLS.get(), whence = SYSCALLS.get();
      var offset = offset_low;
      assert(offset_high === 0);
      FS.llseek(stream, offset, whence);
      HEAP32[((result)>>2)]=stream.position;
      if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null; // reset readdir state
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  
  function _malloc(bytes) {
      /* Over-allocate to make sure it is byte-aligned by 8.
       * This will leak memory, but this is only the dummy
       * implementation (replaced by dlmalloc normally) so
       * not an issue.
       */
      var ptr = Runtime.dynamicAlloc(bytes + 8);
      return (ptr+8) & 0xFFFFFFF8;
    }
  Module["_malloc"] = _malloc;function ___cxa_allocate_exception(size) {
      return _malloc(size);
    }

  function ___syscall54(which, varargs) {SYSCALLS.varargs = varargs;
  try {
   // ioctl
      return 0;
    } catch (e) {
    if (typeof FS === 'undefined' || !(e instanceof FS.ErrnoError)) abort(e);
    return -e.errno;
  }
  }

  var ___dso_handle=STATICTOP; STATICTOP += 16;;
/* flush anything remaining in the buffer during shutdown */ __ATEXIT__.push(function() { var fflush = Module["_fflush"]; if (fflush) fflush(0); var printChar = ___syscall146.printChar; if (!printChar) return; var buffers = ___syscall146.buffers; if (buffers[1].length) printChar(1, 10); if (buffers[2].length) printChar(2, 10); });;
STACK_BASE = STACKTOP = Runtime.alignMemory(STATICTOP);

staticSealed = true; // seal the static portion of memory

STACK_MAX = STACK_BASE + TOTAL_STACK;

DYNAMIC_BASE = DYNAMICTOP = Runtime.alignMemory(STACK_MAX);



function invoke_iiii(index,a1,a2,a3) {
  try {
    return Module["dynCall_iiii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiii(index,a1,a2,a3,a4,a5) {
  try {
    Module["dynCall_viiiii"](index,a1,a2,a3,a4,a5);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vi(index,a1) {
  try {
    Module["dynCall_vi"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_vii(index,a1,a2) {
  try {
    Module["dynCall_vii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_ii(index,a1) {
  try {
    return Module["dynCall_ii"](index,a1);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viii(index,a1,a2,a3) {
  try {
    Module["dynCall_viii"](index,a1,a2,a3);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_v(index) {
  try {
    Module["dynCall_v"](index);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iiiii(index,a1,a2,a3,a4) {
  try {
    return Module["dynCall_iiiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiiiii(index,a1,a2,a3,a4,a5,a6) {
  try {
    Module["dynCall_viiiiii"](index,a1,a2,a3,a4,a5,a6);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_iii(index,a1,a2) {
  try {
    return Module["dynCall_iii"](index,a1,a2);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

function invoke_viiii(index,a1,a2,a3,a4) {
  try {
    Module["dynCall_viiii"](index,a1,a2,a3,a4);
  } catch(e) {
    if (typeof e !== 'number' && e !== 'longjmp') throw e;
    asm["setThrew"](1, 0);
  }
}

Module.asmGlobalArg = { "Math": Math, "Int8Array": Int8Array, "Int16Array": Int16Array, "Int32Array": Int32Array, "Uint8Array": Uint8Array, "Uint16Array": Uint16Array, "Uint32Array": Uint32Array, "Float32Array": Float32Array, "Float64Array": Float64Array, "NaN": NaN, "Infinity": Infinity };

Module.asmLibraryArg = { "abort": abort, "assert": assert, "invoke_iiii": invoke_iiii, "invoke_viiiii": invoke_viiiii, "invoke_vi": invoke_vi, "invoke_vii": invoke_vii, "invoke_ii": invoke_ii, "invoke_viii": invoke_viii, "invoke_v": invoke_v, "invoke_iiiii": invoke_iiiii, "invoke_viiiiii": invoke_viiiiii, "invoke_iii": invoke_iii, "invoke_viiii": invoke_viiii, "_pthread_cleanup_pop": _pthread_cleanup_pop, "_emscripten_asm_const_iddddiii": _emscripten_asm_const_iddddiii, "_emscripten_asm_const_iiiiiii": _emscripten_asm_const_iiiiiii, "_abort": _abort, "___cxa_guard_acquire": ___cxa_guard_acquire, "_emscripten_asm_const_iiiiiiiiiii": _emscripten_asm_const_iiiiiiiiiii, "___gxx_personality_v0": ___gxx_personality_v0, "___assert_fail": ___assert_fail, "___cxa_allocate_exception": ___cxa_allocate_exception, "__ZSt18uncaught_exceptionv": __ZSt18uncaught_exceptionv, "_emscripten_asm_const_ii": _emscripten_asm_const_ii, "___cxa_guard_release": ___cxa_guard_release, "___setErrNo": ___setErrNo, "_sbrk": _sbrk, "_emscripten_memcpy_big": _emscripten_memcpy_big, "___resumeException": ___resumeException, "___cxa_find_matching_catch": ___cxa_find_matching_catch, "_sysconf": _sysconf, "_emscripten_asm_const_iiiiiiiii": _emscripten_asm_const_iiiiiiiii, "_pthread_self": _pthread_self, "_emscripten_asm_const_iiiiiiii": _emscripten_asm_const_iiiiiiii, "___syscall54": ___syscall54, "___unlock": ___unlock, "_emscripten_asm_const_iiiiii": _emscripten_asm_const_iiiiii, "___cxa_atexit": ___cxa_atexit, "___cxa_throw": ___cxa_throw, "__exit": __exit, "___lock": ___lock, "___syscall6": ___syscall6, "_pthread_cleanup_push": _pthread_cleanup_push, "_time": _time, "_gettimeofday": _gettimeofday, "_atexit": _atexit, "___syscall140": ___syscall140, "_exit": _exit, "___cxa_pure_virtual": ___cxa_pure_virtual, "___syscall146": ___syscall146, "STACKTOP": STACKTOP, "STACK_MAX": STACK_MAX, "tempDoublePtr": tempDoublePtr, "ABORT": ABORT, "___dso_handle": ___dso_handle };
// EMSCRIPTEN_START_ASM
var asm = (function(global, env, buffer) {
  'use asm';
  
  
  var HEAP8 = new global.Int8Array(buffer);
  var HEAP16 = new global.Int16Array(buffer);
  var HEAP32 = new global.Int32Array(buffer);
  var HEAPU8 = new global.Uint8Array(buffer);
  var HEAPU16 = new global.Uint16Array(buffer);
  var HEAPU32 = new global.Uint32Array(buffer);
  var HEAPF32 = new global.Float32Array(buffer);
  var HEAPF64 = new global.Float64Array(buffer);


  var STACKTOP=env.STACKTOP|0;
  var STACK_MAX=env.STACK_MAX|0;
  var tempDoublePtr=env.tempDoublePtr|0;
  var ABORT=env.ABORT|0;
  var ___dso_handle=env.___dso_handle|0;

  var __THREW__ = 0;
  var threwValue = 0;
  var setjmpId = 0;
  var undef = 0;
  var nan = global.NaN, inf = global.Infinity;
  var tempInt = 0, tempBigInt = 0, tempBigIntP = 0, tempBigIntS = 0, tempBigIntR = 0.0, tempBigIntI = 0, tempBigIntD = 0, tempValue = 0, tempDouble = 0.0;

  var tempRet0 = 0;
  var tempRet1 = 0;
  var tempRet2 = 0;
  var tempRet3 = 0;
  var tempRet4 = 0;
  var tempRet5 = 0;
  var tempRet6 = 0;
  var tempRet7 = 0;
  var tempRet8 = 0;
  var tempRet9 = 0;
  var Math_floor=global.Math.floor;
  var Math_abs=global.Math.abs;
  var Math_sqrt=global.Math.sqrt;
  var Math_pow=global.Math.pow;
  var Math_cos=global.Math.cos;
  var Math_sin=global.Math.sin;
  var Math_tan=global.Math.tan;
  var Math_acos=global.Math.acos;
  var Math_asin=global.Math.asin;
  var Math_atan=global.Math.atan;
  var Math_atan2=global.Math.atan2;
  var Math_exp=global.Math.exp;
  var Math_log=global.Math.log;
  var Math_ceil=global.Math.ceil;
  var Math_imul=global.Math.imul;
  var Math_min=global.Math.min;
  var Math_clz32=global.Math.clz32;
  var abort=env.abort;
  var assert=env.assert;
  var invoke_iiii=env.invoke_iiii;
  var invoke_viiiii=env.invoke_viiiii;
  var invoke_vi=env.invoke_vi;
  var invoke_vii=env.invoke_vii;
  var invoke_ii=env.invoke_ii;
  var invoke_viii=env.invoke_viii;
  var invoke_v=env.invoke_v;
  var invoke_iiiii=env.invoke_iiiii;
  var invoke_viiiiii=env.invoke_viiiiii;
  var invoke_iii=env.invoke_iii;
  var invoke_viiii=env.invoke_viiii;
  var _pthread_cleanup_pop=env._pthread_cleanup_pop;
  var _emscripten_asm_const_iddddiii=env._emscripten_asm_const_iddddiii;
  var _emscripten_asm_const_iiiiiii=env._emscripten_asm_const_iiiiiii;
  var _abort=env._abort;
  var ___cxa_guard_acquire=env.___cxa_guard_acquire;
  var _emscripten_asm_const_iiiiiiiiiii=env._emscripten_asm_const_iiiiiiiiiii;
  var ___gxx_personality_v0=env.___gxx_personality_v0;
  var ___assert_fail=env.___assert_fail;
  var ___cxa_allocate_exception=env.___cxa_allocate_exception;
  var __ZSt18uncaught_exceptionv=env.__ZSt18uncaught_exceptionv;
  var _emscripten_asm_const_ii=env._emscripten_asm_const_ii;
  var ___cxa_guard_release=env.___cxa_guard_release;
  var ___setErrNo=env.___setErrNo;
  var _sbrk=env._sbrk;
  var _emscripten_memcpy_big=env._emscripten_memcpy_big;
  var ___resumeException=env.___resumeException;
  var ___cxa_find_matching_catch=env.___cxa_find_matching_catch;
  var _sysconf=env._sysconf;
  var _emscripten_asm_const_iiiiiiiii=env._emscripten_asm_const_iiiiiiiii;
  var _pthread_self=env._pthread_self;
  var _emscripten_asm_const_iiiiiiii=env._emscripten_asm_const_iiiiiiii;
  var ___syscall54=env.___syscall54;
  var ___unlock=env.___unlock;
  var _emscripten_asm_const_iiiiii=env._emscripten_asm_const_iiiiii;
  var ___cxa_atexit=env.___cxa_atexit;
  var ___cxa_throw=env.___cxa_throw;
  var __exit=env.__exit;
  var ___lock=env.___lock;
  var ___syscall6=env.___syscall6;
  var _pthread_cleanup_push=env._pthread_cleanup_push;
  var _time=env._time;
  var _gettimeofday=env._gettimeofday;
  var _atexit=env._atexit;
  var ___syscall140=env.___syscall140;
  var _exit=env._exit;
  var ___cxa_pure_virtual=env.___cxa_pure_virtual;
  var ___syscall146=env.___syscall146;
  var tempFloat = 0.0;

// EMSCRIPTEN_START_FUNCS
function _main($argc, $argv) {
 $argc = $argc | 0;
 $argv = $argv | 0;
 var $$3$i$i = 0, $$3$i$i1002 = 0, $$3$i$i1015 = 0, $$3$i$i1028 = 0, $$3$i$i1041 = 0, $$3$i$i1054 = 0, $$3$i$i1067 = 0, $$3$i$i1080 = 0, $$3$i$i1093 = 0, $$3$i$i11 = 0, $$3$i$i1106 = 0, $$3$i$i1119 = 0, $$3$i$i112 = 0, $$3$i$i1132 = 0, $$3$i$i1145 = 0, $$3$i$i1158 = 0, $$3$i$i1171 = 0, $$3$i$i1184 = 0, $$3$i$i1197 = 0, $$3$i$i1210 = 0, $$3$i$i1223 = 0, $$3$i$i1236 = 0, $$3$i$i1249 = 0, $$3$i$i125 = 0, $$3$i$i1262 = 0, $$3$i$i1275 = 0, $$3$i$i1288 = 0, $$3$i$i1301 = 0, $$3$i$i1314 = 0, $$3$i$i1327 = 0, $$3$i$i1340 = 0, $$3$i$i1353 = 0, $$3$i$i1366 = 0, $$3$i$i1379 = 0, $$3$i$i138 = 0, $$3$i$i1392 = 0, $$3$i$i1405 = 0, $$3$i$i1418 = 0, $$3$i$i1431 = 0, $$3$i$i1444 = 0, $$3$i$i1457 = 0, $$3$i$i1470 = 0, $$3$i$i1483 = 0, $$3$i$i1496 = 0, $$3$i$i1509 = 0, $$3$i$i151 = 0, $$3$i$i1522 = 0, $$3$i$i1535 = 0, $$3$i$i1548 = 0, $$3$i$i1561 = 0, $$3$i$i1574 = 0, $$3$i$i1587 = 0, $$3$i$i1600 = 0, $$3$i$i1613 = 0, $$3$i$i1626 = 0, $$3$i$i164 = 0, $$3$i$i1642 = 0, $$3$i$i1655 = 0, $$3$i$i1671 = 0, $$3$i$i1765 = 0, $$3$i$i177 = 0, $$3$i$i1778 = 0, $$3$i$i1791 = 0, $$3$i$i1804 = 0, $$3$i$i1817 = 0, $$3$i$i1830 = 0, $$3$i$i1846 = 0, $$3$i$i190 = 0, $$3$i$i1919 = 0, $$3$i$i1932 = 0, $$3$i$i1945 = 0, $$3$i$i1958 = 0, $$3$i$i1971 = 0, $$3$i$i1984 = 0, $$3$i$i203 = 0, $$3$i$i2040 = 0, $$3$i$i2052 = 0, $$3$i$i2064 = 0, $$3$i$i2076 = 0, $$3$i$i2088 = 0, $$3$i$i2100 = 0, $$3$i$i2112 = 0, $$3$i$i2124 = 0, $$3$i$i2136 = 0, $$3$i$i2148 = 0, $$3$i$i216 = 0, $$3$i$i2160 = 0, $$3$i$i2172 = 0, $$3$i$i2184 = 0, $$3$i$i2196 = 0, $$3$i$i2208 = 0, $$3$i$i2220 = 0, $$3$i$i2232 = 0, $$3$i$i2244 = 0, $$3$i$i2256 = 0, $$3$i$i2267 = 0, $$3$i$i2279 = 0, $$3$i$i229 = 0, $$3$i$i2292 = 0, $$3$i$i23 = 0, $$3$i$i2304 = 0, $$3$i$i2316 = 0, $$3$i$i2327 = 0, $$3$i$i2339 = 0, $$3$i$i2352 = 0, $$3$i$i2364 = 0, $$3$i$i2376 = 0, $$3$i$i2387 = 0, $$3$i$i2399 = 0, $$3$i$i2412 = 0, $$3$i$i242 = 0, $$3$i$i2424 = 0, $$3$i$i2436 = 0, $$3$i$i2447 = 0, $$3$i$i2459 = 0, $$3$i$i2472 = 0, $$3$i$i2484 = 0, $$3$i$i2496 = 0, $$3$i$i2507 = 0, $$3$i$i2519 = 0, $$3$i$i2532 = 0, $$3$i$i2544 = 0, $$3$i$i255 = 0, $$3$i$i2556 = 0, $$3$i$i2567 = 0, $$3$i$i2579 = 0, $$3$i$i2592 = 0, $$3$i$i2604 = 0, $$3$i$i2616 = 0, $$3$i$i2627 = 0, $$3$i$i2639 = 0, $$3$i$i2652 = 0, $$3$i$i2664 = 0, $$3$i$i2676 = 0, $$3$i$i268 = 0, $$3$i$i2687 = 0, $$3$i$i2699 = 0, $$3$i$i2712 = 0, $$3$i$i2724 = 0, $$3$i$i2736 = 0, $$3$i$i2748 = 0, $$3$i$i2760 = 0, $$3$i$i2772 = 0, $$3$i$i2784 = 0, $$3$i$i2796 = 0, $$3$i$i2808 = 0, $$3$i$i281 = 0, $$3$i$i2820 = 0, $$3$i$i2832 = 0, $$3$i$i2844 = 0, $$3$i$i2856 = 0, $$3$i$i2867 = 0, $$3$i$i2880 = 0, $$3$i$i2892 = 0, $$3$i$i2904 = 0, $$3$i$i2915 = 0, $$3$i$i2927 = 0, $$3$i$i294 = 0, $$3$i$i2940 = 0, $$3$i$i2952 = 0, $$3$i$i2964 = 0, $$3$i$i2975 = 0, $$3$i$i2988 = 0, $$3$i$i3000 = 0, $$3$i$i3012 = 0, $$3$i$i3024 = 0, $$3$i$i3036 = 0, $$3$i$i3048 = 0, $$3$i$i3060 = 0, $$3$i$i307 = 0, $$3$i$i3072 = 0, $$3$i$i3084 = 0, $$3$i$i3096 = 0, $$3$i$i3107 = 0, $$3$i$i3119 = 0, $$3$i$i3131 = 0, $$3$i$i3143 = 0, $$3$i$i3155 = 0, $$3$i$i3167 = 0, $$3$i$i3180 = 0, $$3$i$i3192 = 0, $$3$i$i320 = 0, $$3$i$i3204 = 0, $$3$i$i3216 = 0, $$3$i$i3228 = 0, $$3$i$i3240 = 0, $$3$i$i3252 = 0, $$3$i$i3264 = 0, $$3$i$i3276 = 0, $$3$i$i3288 = 0, $$3$i$i3300 = 0, $$3$i$i3312 = 0, $$3$i$i3324 = 0, $$3$i$i333 = 0, $$3$i$i3336 = 0, $$3$i$i3348 = 0, $$3$i$i3360 = 0, $$3$i$i3372 = 0, $$3$i$i3384 = 0, $$3$i$i3396 = 0, $$3$i$i3408 = 0, $$3$i$i3420 = 0, $$3$i$i3432 = 0, $$3$i$i3444 = 0, $$3$i$i3456 = 0, $$3$i$i346 = 0, $$3$i$i3468 = 0, $$3$i$i3480 = 0, $$3$i$i3492 = 0, $$3$i$i35 = 0, $$3$i$i3504 = 0, $$3$i$i3516 = 0, $$3$i$i3528 = 0, $$3$i$i3540 = 0, $$3$i$i3552 = 0, $$3$i$i3564 = 0, $$3$i$i3576 = 0, $$3$i$i3588 = 0, $$3$i$i359 = 0, $$3$i$i3599 = 0, $$3$i$i3611 = 0, $$3$i$i3624 = 0, $$3$i$i3636 = 0, $$3$i$i3648 = 0, $$3$i$i3659 = 0, $$3$i$i3671 = 0, $$3$i$i3683 = 0, $$3$i$i3695 = 0, $$3$i$i3707 = 0, $$3$i$i3719 = 0, $$3$i$i372 = 0, $$3$i$i3731 = 0, $$3$i$i3743 = 0, $$3$i$i3755 = 0, $$3$i$i3767 = 0, $$3$i$i3779 = 0, $$3$i$i3791 = 0, $$3$i$i3803 = 0, $$3$i$i3815 = 0, $$3$i$i3827 = 0, $$3$i$i3839 = 0, $$3$i$i385 = 0, $$3$i$i3851 = 0, $$3$i$i3863 = 0, $$3$i$i3875 = 0, $$3$i$i3888 = 0, $$3$i$i3900 = 0, $$3$i$i3912 = 0, $$3$i$i3924 = 0, $$3$i$i3936 = 0, $$3$i$i3948 = 0, $$3$i$i3960 = 0, $$3$i$i3972 = 0, $$3$i$i398 = 0, $$3$i$i3984 = 0, $$3$i$i3996 = 0, $$3$i$i4008 = 0, $$3$i$i4020 = 0, $$3$i$i4032 = 0, $$3$i$i4044 = 0, $$3$i$i4056 = 0, $$3$i$i4068 = 0, $$3$i$i4080 = 0, $$3$i$i4092 = 0, $$3$i$i4104 = 0, $$3$i$i411 = 0, $$3$i$i4116 = 0, $$3$i$i4128 = 0, $$3$i$i4140 = 0, $$3$i$i4152 = 0, $$3$i$i4164 = 0, $$3$i$i4176 = 0, $$3$i$i4188 = 0, $$3$i$i4200 = 0, $$3$i$i4212 = 0, $$3$i$i4224 = 0, $$3$i$i4236 = 0, $$3$i$i424 = 0, $$3$i$i4248 = 0, $$3$i$i4260 = 0, $$3$i$i4272 = 0, $$3$i$i4284 = 0, $$3$i$i4296 = 0, $$3$i$i4308 = 0, $$3$i$i4320 = 0, $$3$i$i4332 = 0, $$3$i$i4344 = 0, $$3$i$i4356 = 0, $$3$i$i437 = 0, $$3$i$i450 = 0, $$3$i$i463 = 0, $$3$i$i47 = 0, $$3$i$i476 = 0, $$3$i$i489 = 0, $$3$i$i502 = 0, $$3$i$i515 = 0, $$3$i$i528 = 0, $$3$i$i541 = 0, $$3$i$i554 = 0, $$3$i$i567 = 0, $$3$i$i580 = 0, $$3$i$i593 = 0, $$3$i$i60 = 0, $$3$i$i606 = 0, $$3$i$i619 = 0, $$3$i$i632 = 0, $$3$i$i645 = 0, $$3$i$i658 = 0, $$3$i$i671 = 0, $$3$i$i684 = 0, $$3$i$i703 = 0, $$3$i$i716 = 0, $$3$i$i729 = 0, $$3$i$i73 = 0, $$3$i$i742 = 0, $$3$i$i755 = 0, $$3$i$i768 = 0, $$3$i$i781 = 0, $$3$i$i794 = 0, $$3$i$i807 = 0, $$3$i$i820 = 0, $$3$i$i833 = 0, $$3$i$i846 = 0, $$3$i$i859 = 0, $$3$i$i86 = 0, $$3$i$i872 = 0, $$3$i$i885 = 0, $$3$i$i898 = 0, $$3$i$i911 = 0, $$3$i$i924 = 0, $$3$i$i937 = 0, $$3$i$i950 = 0, $$3$i$i963 = 0, $$3$i$i976 = 0, $$3$i$i989 = 0, $$3$i$i99 = 0, $$lcssa$i$i = 0, $$lcssa$i$i10 = 0, $$lcssa$i$i1001 = 0, $$lcssa$i$i1014 = 0, $$lcssa$i$i1027 = 0, $$lcssa$i$i1040 = 0, $$lcssa$i$i1053 = 0, $$lcssa$i$i1066 = 0, $$lcssa$i$i1079 = 0, $$lcssa$i$i1092 = 0, $$lcssa$i$i1105 = 0, $$lcssa$i$i111 = 0, $$lcssa$i$i1118 = 0, $$lcssa$i$i1131 = 0, $$lcssa$i$i1144 = 0, $$lcssa$i$i1157 = 0, $$lcssa$i$i1170 = 0, $$lcssa$i$i1183 = 0, $$lcssa$i$i1196 = 0, $$lcssa$i$i1209 = 0, $$lcssa$i$i1222 = 0, $$lcssa$i$i1235 = 0, $$lcssa$i$i124 = 0, $$lcssa$i$i1248 = 0, $$lcssa$i$i1261 = 0, $$lcssa$i$i1274 = 0, $$lcssa$i$i1287 = 0, $$lcssa$i$i1300 = 0, $$lcssa$i$i1313 = 0, $$lcssa$i$i1326 = 0, $$lcssa$i$i1339 = 0, $$lcssa$i$i1352 = 0, $$lcssa$i$i1365 = 0, $$lcssa$i$i137 = 0, $$lcssa$i$i1378 = 0, $$lcssa$i$i1391 = 0, $$lcssa$i$i1404 = 0, $$lcssa$i$i1417 = 0, $$lcssa$i$i1430 = 0, $$lcssa$i$i1443 = 0, $$lcssa$i$i1456 = 0, $$lcssa$i$i1469 = 0, $$lcssa$i$i1482 = 0, $$lcssa$i$i1495 = 0, $$lcssa$i$i150 = 0, $$lcssa$i$i1508 = 0, $$lcssa$i$i1521 = 0, $$lcssa$i$i1534 = 0, $$lcssa$i$i1547 = 0, $$lcssa$i$i1560 = 0, $$lcssa$i$i1573 = 0, $$lcssa$i$i1586 = 0, $$lcssa$i$i1599 = 0, $$lcssa$i$i1612 = 0, $$lcssa$i$i1625 = 0, $$lcssa$i$i163 = 0, $$lcssa$i$i1641 = 0, $$lcssa$i$i1654 = 0, $$lcssa$i$i1670 = 0, $$lcssa$i$i176 = 0, $$lcssa$i$i1764 = 0, $$lcssa$i$i1777 = 0, $$lcssa$i$i1790 = 0, $$lcssa$i$i1803 = 0, $$lcssa$i$i1816 = 0, $$lcssa$i$i1829 = 0, $$lcssa$i$i1845 = 0, $$lcssa$i$i189 = 0, $$lcssa$i$i1918 = 0, $$lcssa$i$i1931 = 0, $$lcssa$i$i1944 = 0, $$lcssa$i$i1957 = 0, $$lcssa$i$i1970 = 0, $$lcssa$i$i1983 = 0, $$lcssa$i$i202 = 0, $$lcssa$i$i2039 = 0, $$lcssa$i$i2051 = 0, $$lcssa$i$i2063 = 0, $$lcssa$i$i2075 = 0, $$lcssa$i$i2087 = 0, $$lcssa$i$i2099 = 0, $$lcssa$i$i2111 = 0, $$lcssa$i$i2123 = 0, $$lcssa$i$i2135 = 0, $$lcssa$i$i2147 = 0, $$lcssa$i$i215 = 0, $$lcssa$i$i2159 = 0, $$lcssa$i$i2171 = 0, $$lcssa$i$i2183 = 0, $$lcssa$i$i2195 = 0, $$lcssa$i$i22 = 0, $$lcssa$i$i2207 = 0, $$lcssa$i$i2219 = 0, $$lcssa$i$i2231 = 0, $$lcssa$i$i2243 = 0, $$lcssa$i$i2255 = 0, $$lcssa$i$i2266 = 0, $$lcssa$i$i2278 = 0, $$lcssa$i$i228 = 0, $$lcssa$i$i2291 = 0, $$lcssa$i$i2303 = 0, $$lcssa$i$i2315 = 0, $$lcssa$i$i2326 = 0, $$lcssa$i$i2338 = 0, $$lcssa$i$i2351 = 0, $$lcssa$i$i2363 = 0, $$lcssa$i$i2375 = 0, $$lcssa$i$i2386 = 0, $$lcssa$i$i2398 = 0, $$lcssa$i$i241 = 0, $$lcssa$i$i2411 = 0, $$lcssa$i$i2423 = 0, $$lcssa$i$i2435 = 0, $$lcssa$i$i2446 = 0, $$lcssa$i$i2458 = 0, $$lcssa$i$i2471 = 0, $$lcssa$i$i2483 = 0, $$lcssa$i$i2495 = 0, $$lcssa$i$i2506 = 0, $$lcssa$i$i2518 = 0, $$lcssa$i$i2531 = 0, $$lcssa$i$i254 = 0, $$lcssa$i$i2543 = 0, $$lcssa$i$i2555 = 0, $$lcssa$i$i2566 = 0, $$lcssa$i$i2578 = 0, $$lcssa$i$i2591 = 0, $$lcssa$i$i2603 = 0, $$lcssa$i$i2615 = 0, $$lcssa$i$i2626 = 0, $$lcssa$i$i2638 = 0, $$lcssa$i$i2651 = 0, $$lcssa$i$i2663 = 0, $$lcssa$i$i267 = 0, $$lcssa$i$i2675 = 0, $$lcssa$i$i2686 = 0, $$lcssa$i$i2698 = 0, $$lcssa$i$i2711 = 0, $$lcssa$i$i2723 = 0, $$lcssa$i$i2735 = 0, $$lcssa$i$i2747 = 0, $$lcssa$i$i2759 = 0, $$lcssa$i$i2771 = 0, $$lcssa$i$i2783 = 0, $$lcssa$i$i2795 = 0, $$lcssa$i$i280 = 0, $$lcssa$i$i2807 = 0, $$lcssa$i$i2819 = 0, $$lcssa$i$i2831 = 0, $$lcssa$i$i2843 = 0, $$lcssa$i$i2855 = 0, $$lcssa$i$i2866 = 0, $$lcssa$i$i2879 = 0, $$lcssa$i$i2891 = 0, $$lcssa$i$i2903 = 0, $$lcssa$i$i2914 = 0, $$lcssa$i$i2926 = 0, $$lcssa$i$i293 = 0, $$lcssa$i$i2939 = 0, $$lcssa$i$i2951 = 0, $$lcssa$i$i2963 = 0, $$lcssa$i$i2974 = 0, $$lcssa$i$i2987 = 0, $$lcssa$i$i2999 = 0, $$lcssa$i$i3011 = 0, $$lcssa$i$i3023 = 0, $$lcssa$i$i3035 = 0, $$lcssa$i$i3047 = 0, $$lcssa$i$i3059 = 0, $$lcssa$i$i306 = 0, $$lcssa$i$i3071 = 0, $$lcssa$i$i3083 = 0, $$lcssa$i$i3095 = 0, $$lcssa$i$i3106 = 0, $$lcssa$i$i3118 = 0, $$lcssa$i$i3130 = 0, $$lcssa$i$i3142 = 0, $$lcssa$i$i3154 = 0, $$lcssa$i$i3166 = 0, $$lcssa$i$i3179 = 0, $$lcssa$i$i319 = 0, $$lcssa$i$i3191 = 0, $$lcssa$i$i3203 = 0, $$lcssa$i$i3215 = 0, $$lcssa$i$i3227 = 0, $$lcssa$i$i3239 = 0, $$lcssa$i$i3251 = 0, $$lcssa$i$i3263 = 0, $$lcssa$i$i3275 = 0, $$lcssa$i$i3287 = 0, $$lcssa$i$i3299 = 0, $$lcssa$i$i3311 = 0, $$lcssa$i$i332 = 0, $$lcssa$i$i3323 = 0, $$lcssa$i$i3335 = 0, $$lcssa$i$i3347 = 0, $$lcssa$i$i3359 = 0, $$lcssa$i$i3371 = 0, $$lcssa$i$i3383 = 0, $$lcssa$i$i3395 = 0, $$lcssa$i$i34 = 0, $$lcssa$i$i3407 = 0, $$lcssa$i$i3419 = 0, $$lcssa$i$i3431 = 0, $$lcssa$i$i3443 = 0, $$lcssa$i$i345 = 0, $$lcssa$i$i3455 = 0, $$lcssa$i$i3467 = 0, $$lcssa$i$i3479 = 0, $$lcssa$i$i3491 = 0, $$lcssa$i$i3503 = 0, $$lcssa$i$i3515 = 0, $$lcssa$i$i3527 = 0, $$lcssa$i$i3539 = 0, $$lcssa$i$i3551 = 0, $$lcssa$i$i3563 = 0, $$lcssa$i$i3575 = 0, $$lcssa$i$i358 = 0, $$lcssa$i$i3587 = 0, $$lcssa$i$i3598 = 0, $$lcssa$i$i3610 = 0, $$lcssa$i$i3623 = 0, $$lcssa$i$i3635 = 0, $$lcssa$i$i3647 = 0, $$lcssa$i$i3658 = 0, $$lcssa$i$i3670 = 0, $$lcssa$i$i3682 = 0, $$lcssa$i$i3694 = 0, $$lcssa$i$i3706 = 0, $$lcssa$i$i371 = 0, $$lcssa$i$i3718 = 0, $$lcssa$i$i3730 = 0, $$lcssa$i$i3742 = 0, $$lcssa$i$i3754 = 0, $$lcssa$i$i3766 = 0, $$lcssa$i$i3778 = 0, $$lcssa$i$i3790 = 0, $$lcssa$i$i3802 = 0, $$lcssa$i$i3814 = 0, $$lcssa$i$i3826 = 0, $$lcssa$i$i3838 = 0, $$lcssa$i$i384 = 0, $$lcssa$i$i3850 = 0, $$lcssa$i$i3862 = 0, $$lcssa$i$i3874 = 0, $$lcssa$i$i3887 = 0, $$lcssa$i$i3899 = 0, $$lcssa$i$i3911 = 0, $$lcssa$i$i3923 = 0, $$lcssa$i$i3935 = 0, $$lcssa$i$i3947 = 0, $$lcssa$i$i3959 = 0, $$lcssa$i$i397 = 0, $$lcssa$i$i3971 = 0, $$lcssa$i$i3983 = 0, $$lcssa$i$i3995 = 0, $$lcssa$i$i4007 = 0, $$lcssa$i$i4019 = 0, $$lcssa$i$i4031 = 0, $$lcssa$i$i4043 = 0, $$lcssa$i$i4055 = 0, $$lcssa$i$i4067 = 0, $$lcssa$i$i4079 = 0, $$lcssa$i$i4091 = 0, $$lcssa$i$i410 = 0, $$lcssa$i$i4103 = 0, $$lcssa$i$i4115 = 0, $$lcssa$i$i4127 = 0, $$lcssa$i$i4139 = 0, $$lcssa$i$i4151 = 0, $$lcssa$i$i4163 = 0, $$lcssa$i$i4175 = 0, $$lcssa$i$i4187 = 0, $$lcssa$i$i4199 = 0, $$lcssa$i$i4211 = 0, $$lcssa$i$i4223 = 0, $$lcssa$i$i423 = 0, $$lcssa$i$i4235 = 0, $$lcssa$i$i4247 = 0, $$lcssa$i$i4259 = 0, $$lcssa$i$i4271 = 0, $$lcssa$i$i4283 = 0, $$lcssa$i$i4295 = 0, $$lcssa$i$i4307 = 0, $$lcssa$i$i4319 = 0, $$lcssa$i$i4331 = 0, $$lcssa$i$i4343 = 0, $$lcssa$i$i4355 = 0, $$lcssa$i$i436 = 0, $$lcssa$i$i449 = 0, $$lcssa$i$i46 = 0, $$lcssa$i$i462 = 0, $$lcssa$i$i475 = 0, $$lcssa$i$i488 = 0, $$lcssa$i$i501 = 0, $$lcssa$i$i514 = 0, $$lcssa$i$i527 = 0, $$lcssa$i$i540 = 0, $$lcssa$i$i553 = 0, $$lcssa$i$i566 = 0, $$lcssa$i$i579 = 0, $$lcssa$i$i59 = 0, $$lcssa$i$i592 = 0, $$lcssa$i$i605 = 0, $$lcssa$i$i618 = 0, $$lcssa$i$i631 = 0, $$lcssa$i$i644 = 0, $$lcssa$i$i657 = 0, $$lcssa$i$i670 = 0, $$lcssa$i$i683 = 0, $$lcssa$i$i702 = 0, $$lcssa$i$i715 = 0, $$lcssa$i$i72 = 0, $$lcssa$i$i728 = 0, $$lcssa$i$i741 = 0, $$lcssa$i$i754 = 0, $$lcssa$i$i767 = 0, $$lcssa$i$i780 = 0, $$lcssa$i$i793 = 0, $$lcssa$i$i806 = 0, $$lcssa$i$i819 = 0, $$lcssa$i$i832 = 0, $$lcssa$i$i845 = 0, $$lcssa$i$i85 = 0, $$lcssa$i$i858 = 0, $$lcssa$i$i871 = 0, $$lcssa$i$i884 = 0, $$lcssa$i$i897 = 0, $$lcssa$i$i910 = 0, $$lcssa$i$i923 = 0, $$lcssa$i$i936 = 0, $$lcssa$i$i949 = 0, $$lcssa$i$i962 = 0, $$lcssa$i$i975 = 0, $$lcssa$i$i98 = 0, $$lcssa$i$i988 = 0, $$lcssa8$i$i = 0, $$lcssa8$i$i1000 = 0, $$lcssa8$i$i1013 = 0, $$lcssa8$i$i1026 = 0, $$lcssa8$i$i1039 = 0, $$lcssa8$i$i1052 = 0, $$lcssa8$i$i1065 = 0, $$lcssa8$i$i1078 = 0, $$lcssa8$i$i1091 = 0, $$lcssa8$i$i110 = 0, $$lcssa8$i$i1104 = 0, $$lcssa8$i$i1117 = 0, $$lcssa8$i$i1130 = 0, $$lcssa8$i$i1143 = 0, $$lcssa8$i$i1156 = 0, $$lcssa8$i$i1169 = 0, $$lcssa8$i$i1182 = 0, $$lcssa8$i$i1195 = 0, $$lcssa8$i$i1208 = 0, $$lcssa8$i$i1221 = 0, $$lcssa8$i$i123 = 0, $$lcssa8$i$i1234 = 0, $$lcssa8$i$i1247 = 0, $$lcssa8$i$i1260 = 0, $$lcssa8$i$i1273 = 0, $$lcssa8$i$i1286 = 0, $$lcssa8$i$i1299 = 0, $$lcssa8$i$i1312 = 0, $$lcssa8$i$i1325 = 0, $$lcssa8$i$i1338 = 0, $$lcssa8$i$i1351 = 0, $$lcssa8$i$i136 = 0, $$lcssa8$i$i1364 = 0, $$lcssa8$i$i1377 = 0, $$lcssa8$i$i1390 = 0, $$lcssa8$i$i1403 = 0, $$lcssa8$i$i1416 = 0, $$lcssa8$i$i1429 = 0, $$lcssa8$i$i1442 = 0, $$lcssa8$i$i1455 = 0, $$lcssa8$i$i1468 = 0, $$lcssa8$i$i1481 = 0, $$lcssa8$i$i149 = 0, $$lcssa8$i$i1494 = 0, $$lcssa8$i$i1507 = 0, $$lcssa8$i$i1520 = 0, $$lcssa8$i$i1533 = 0, $$lcssa8$i$i1546 = 0, $$lcssa8$i$i1559 = 0, $$lcssa8$i$i1572 = 0, $$lcssa8$i$i1585 = 0, $$lcssa8$i$i1598 = 0, $$lcssa8$i$i1611 = 0, $$lcssa8$i$i162 = 0, $$lcssa8$i$i1624 = 0, $$lcssa8$i$i1640 = 0, $$lcssa8$i$i1653 = 0, $$lcssa8$i$i1669 = 0, $$lcssa8$i$i175 = 0, $$lcssa8$i$i1763 = 0, $$lcssa8$i$i1776 = 0, $$lcssa8$i$i1789 = 0, $$lcssa8$i$i1802 = 0, $$lcssa8$i$i1815 = 0, $$lcssa8$i$i1828 = 0, $$lcssa8$i$i1844 = 0, $$lcssa8$i$i188 = 0, $$lcssa8$i$i1917 = 0, $$lcssa8$i$i1930 = 0, $$lcssa8$i$i1943 = 0, $$lcssa8$i$i1956 = 0, $$lcssa8$i$i1969 = 0, $$lcssa8$i$i1982 = 0, $$lcssa8$i$i201 = 0, $$lcssa8$i$i2038 = 0, $$lcssa8$i$i2050 = 0, $$lcssa8$i$i2062 = 0, $$lcssa8$i$i2074 = 0, $$lcssa8$i$i2086 = 0, $$lcssa8$i$i2098 = 0, $$lcssa8$i$i21 = 0, $$lcssa8$i$i2110 = 0, $$lcssa8$i$i2122 = 0, $$lcssa8$i$i2134 = 0, $$lcssa8$i$i214 = 0, $$lcssa8$i$i2146 = 0, $$lcssa8$i$i2158 = 0, $$lcssa8$i$i2170 = 0, $$lcssa8$i$i2182 = 0, $$lcssa8$i$i2194 = 0, $$lcssa8$i$i2206 = 0, $$lcssa8$i$i2218 = 0, $$lcssa8$i$i2230 = 0, $$lcssa8$i$i2242 = 0, $$lcssa8$i$i2254 = 0, $$lcssa8$i$i2265 = 0, $$lcssa8$i$i227 = 0, $$lcssa8$i$i2277 = 0, $$lcssa8$i$i2290 = 0, $$lcssa8$i$i2302 = 0, $$lcssa8$i$i2314 = 0, $$lcssa8$i$i2325 = 0, $$lcssa8$i$i2337 = 0, $$lcssa8$i$i2350 = 0, $$lcssa8$i$i2362 = 0, $$lcssa8$i$i2374 = 0, $$lcssa8$i$i2385 = 0, $$lcssa8$i$i2397 = 0, $$lcssa8$i$i240 = 0, $$lcssa8$i$i2410 = 0, $$lcssa8$i$i2422 = 0, $$lcssa8$i$i2434 = 0, $$lcssa8$i$i2445 = 0, $$lcssa8$i$i2457 = 0, $$lcssa8$i$i2470 = 0, $$lcssa8$i$i2482 = 0, $$lcssa8$i$i2494 = 0, $$lcssa8$i$i2505 = 0, $$lcssa8$i$i2517 = 0, $$lcssa8$i$i253 = 0, $$lcssa8$i$i2530 = 0, $$lcssa8$i$i2542 = 0, $$lcssa8$i$i2554 = 0, $$lcssa8$i$i2565 = 0, $$lcssa8$i$i2577 = 0, $$lcssa8$i$i2590 = 0, $$lcssa8$i$i2602 = 0, $$lcssa8$i$i2614 = 0, $$lcssa8$i$i2625 = 0, $$lcssa8$i$i2637 = 0, $$lcssa8$i$i2650 = 0, $$lcssa8$i$i266 = 0, $$lcssa8$i$i2662 = 0, $$lcssa8$i$i2674 = 0, $$lcssa8$i$i2685 = 0, $$lcssa8$i$i2697 = 0, $$lcssa8$i$i2710 = 0, $$lcssa8$i$i2722 = 0, $$lcssa8$i$i2734 = 0, $$lcssa8$i$i2746 = 0, $$lcssa8$i$i2758 = 0, $$lcssa8$i$i2770 = 0, $$lcssa8$i$i2782 = 0, $$lcssa8$i$i279 = 0, $$lcssa8$i$i2794 = 0, $$lcssa8$i$i2806 = 0, $$lcssa8$i$i2818 = 0, $$lcssa8$i$i2830 = 0, $$lcssa8$i$i2842 = 0, $$lcssa8$i$i2854 = 0, $$lcssa8$i$i2865 = 0, $$lcssa8$i$i2878 = 0, $$lcssa8$i$i2890 = 0, $$lcssa8$i$i2902 = 0, $$lcssa8$i$i2913 = 0, $$lcssa8$i$i292 = 0, $$lcssa8$i$i2925 = 0, $$lcssa8$i$i2938 = 0, $$lcssa8$i$i2950 = 0, $$lcssa8$i$i2962 = 0, $$lcssa8$i$i2973 = 0, $$lcssa8$i$i2986 = 0, $$lcssa8$i$i2998 = 0, $$lcssa8$i$i3010 = 0, $$lcssa8$i$i3022 = 0, $$lcssa8$i$i3034 = 0, $$lcssa8$i$i3046 = 0, $$lcssa8$i$i305 = 0, $$lcssa8$i$i3058 = 0, $$lcssa8$i$i3070 = 0, $$lcssa8$i$i3082 = 0, $$lcssa8$i$i3094 = 0, $$lcssa8$i$i3105 = 0, $$lcssa8$i$i3117 = 0, $$lcssa8$i$i3129 = 0, $$lcssa8$i$i3141 = 0, $$lcssa8$i$i3153 = 0, $$lcssa8$i$i3165 = 0, $$lcssa8$i$i3178 = 0, $$lcssa8$i$i318 = 0, $$lcssa8$i$i3190 = 0, $$lcssa8$i$i3202 = 0, $$lcssa8$i$i3214 = 0, $$lcssa8$i$i3226 = 0, $$lcssa8$i$i3238 = 0, $$lcssa8$i$i3250 = 0, $$lcssa8$i$i3262 = 0, $$lcssa8$i$i3274 = 0, $$lcssa8$i$i3286 = 0, $$lcssa8$i$i3298 = 0, $$lcssa8$i$i33 = 0, $$lcssa8$i$i331 = 0, $$lcssa8$i$i3310 = 0, $$lcssa8$i$i3322 = 0, $$lcssa8$i$i3334 = 0, $$lcssa8$i$i3346 = 0, $$lcssa8$i$i3358 = 0, $$lcssa8$i$i3370 = 0, $$lcssa8$i$i3382 = 0, $$lcssa8$i$i3394 = 0, $$lcssa8$i$i3406 = 0, $$lcssa8$i$i3418 = 0, $$lcssa8$i$i3430 = 0, $$lcssa8$i$i344 = 0, $$lcssa8$i$i3442 = 0, $$lcssa8$i$i3454 = 0, $$lcssa8$i$i3466 = 0, $$lcssa8$i$i3478 = 0, $$lcssa8$i$i3490 = 0, $$lcssa8$i$i3502 = 0, $$lcssa8$i$i3514 = 0, $$lcssa8$i$i3526 = 0, $$lcssa8$i$i3538 = 0, $$lcssa8$i$i3550 = 0, $$lcssa8$i$i3562 = 0, $$lcssa8$i$i357 = 0, $$lcssa8$i$i3574 = 0, $$lcssa8$i$i3586 = 0, $$lcssa8$i$i3597 = 0, $$lcssa8$i$i3609 = 0, $$lcssa8$i$i3622 = 0, $$lcssa8$i$i3634 = 0, $$lcssa8$i$i3646 = 0, $$lcssa8$i$i3657 = 0, $$lcssa8$i$i3669 = 0, $$lcssa8$i$i3681 = 0, $$lcssa8$i$i3693 = 0, $$lcssa8$i$i370 = 0, $$lcssa8$i$i3705 = 0, $$lcssa8$i$i3717 = 0, $$lcssa8$i$i3729 = 0, $$lcssa8$i$i3741 = 0, $$lcssa8$i$i3753 = 0, $$lcssa8$i$i3765 = 0, $$lcssa8$i$i3777 = 0, $$lcssa8$i$i3789 = 0, $$lcssa8$i$i3801 = 0, $$lcssa8$i$i3813 = 0, $$lcssa8$i$i3825 = 0, $$lcssa8$i$i383 = 0, $$lcssa8$i$i3837 = 0, $$lcssa8$i$i3849 = 0, $$lcssa8$i$i3861 = 0, $$lcssa8$i$i3873 = 0, $$lcssa8$i$i3886 = 0, $$lcssa8$i$i3898 = 0, $$lcssa8$i$i3910 = 0, $$lcssa8$i$i3922 = 0, $$lcssa8$i$i3934 = 0, $$lcssa8$i$i3946 = 0, $$lcssa8$i$i3958 = 0, $$lcssa8$i$i396 = 0, $$lcssa8$i$i3970 = 0, $$lcssa8$i$i3982 = 0, $$lcssa8$i$i3994 = 0, $$lcssa8$i$i4006 = 0, $$lcssa8$i$i4018 = 0, $$lcssa8$i$i4030 = 0, $$lcssa8$i$i4042 = 0, $$lcssa8$i$i4054 = 0, $$lcssa8$i$i4066 = 0, $$lcssa8$i$i4078 = 0, $$lcssa8$i$i409 = 0, $$lcssa8$i$i4090 = 0, $$lcssa8$i$i4102 = 0, $$lcssa8$i$i4114 = 0, $$lcssa8$i$i4126 = 0, $$lcssa8$i$i4138 = 0, $$lcssa8$i$i4150 = 0, $$lcssa8$i$i4162 = 0, $$lcssa8$i$i4174 = 0, $$lcssa8$i$i4186 = 0, $$lcssa8$i$i4198 = 0, $$lcssa8$i$i4210 = 0, $$lcssa8$i$i422 = 0, $$lcssa8$i$i4222 = 0, $$lcssa8$i$i4234 = 0, $$lcssa8$i$i4246 = 0, $$lcssa8$i$i4258 = 0, $$lcssa8$i$i4270 = 0, $$lcssa8$i$i4282 = 0, $$lcssa8$i$i4294 = 0, $$lcssa8$i$i4306 = 0, $$lcssa8$i$i4318 = 0, $$lcssa8$i$i4330 = 0, $$lcssa8$i$i4342 = 0, $$lcssa8$i$i435 = 0, $$lcssa8$i$i4354 = 0, $$lcssa8$i$i448 = 0, $$lcssa8$i$i45 = 0, $$lcssa8$i$i461 = 0, $$lcssa8$i$i474 = 0, $$lcssa8$i$i487 = 0, $$lcssa8$i$i500 = 0, $$lcssa8$i$i513 = 0, $$lcssa8$i$i526 = 0, $$lcssa8$i$i539 = 0, $$lcssa8$i$i552 = 0, $$lcssa8$i$i565 = 0, $$lcssa8$i$i578 = 0, $$lcssa8$i$i58 = 0, $$lcssa8$i$i591 = 0, $$lcssa8$i$i604 = 0, $$lcssa8$i$i617 = 0, $$lcssa8$i$i630 = 0, $$lcssa8$i$i643 = 0, $$lcssa8$i$i656 = 0, $$lcssa8$i$i669 = 0, $$lcssa8$i$i682 = 0, $$lcssa8$i$i701 = 0, $$lcssa8$i$i71 = 0, $$lcssa8$i$i714 = 0, $$lcssa8$i$i727 = 0, $$lcssa8$i$i740 = 0, $$lcssa8$i$i753 = 0, $$lcssa8$i$i766 = 0, $$lcssa8$i$i779 = 0, $$lcssa8$i$i792 = 0, $$lcssa8$i$i805 = 0, $$lcssa8$i$i818 = 0, $$lcssa8$i$i831 = 0, $$lcssa8$i$i84 = 0, $$lcssa8$i$i844 = 0, $$lcssa8$i$i857 = 0, $$lcssa8$i$i870 = 0, $$lcssa8$i$i883 = 0, $$lcssa8$i$i896 = 0, $$lcssa8$i$i9 = 0, $$lcssa8$i$i909 = 0, $$lcssa8$i$i922 = 0, $$lcssa8$i$i935 = 0, $$lcssa8$i$i948 = 0, $$lcssa8$i$i961 = 0, $$lcssa8$i$i97 = 0, $$lcssa8$i$i974 = 0, $$lcssa8$i$i987 = 0, $0 = 0, $1 = 0, $10 = 0, $100 = 0, $1000 = 0, $10000 = 0, $10001 = 0, $10002 = 0, $10003 = 0, $10004 = 0, $10005 = 0, $10006 = 0, $10007 = 0, $10008 = 0, $10009 = 0, $1001 = 0, $10010 = 0, $10011 = 0, $10012 = 0, $10013 = 0, $10014 = 0, $10015 = 0, $10016 = 0, $10017 = 0, $10018 = 0, $10019 = 0, $1002 = 0, $10020 = 0, $10021 = 0, $10022 = 0, $10023 = 0, $10024 = 0, $10025 = 0, $10026 = 0, $10027 = 0, $10028 = 0, $10029 = 0, $1003 = 0, $10030 = 0, $10031 = 0, $10032 = 0, $10033 = 0, $10034 = 0, $10035 = 0, $10036 = 0, $10037 = 0, $10038 = 0, $10039 = 0, $1004 = 0, $10040 = 0, $10041 = 0, $10042 = 0, $10043 = 0, $10044 = 0, $10045 = 0, $10046 = 0, $10047 = 0, $10048 = 0, $10049 = 0, $1005 = 0, $10050 = 0, $10051 = 0, $10052 = 0, $10053 = 0, $10054 = 0, $10055 = 0, $10056 = 0, $10057 = 0, $10058 = 0, $10059 = 0, $1006 = 0, $10060 = 0, $10061 = 0, $10062 = 0, $10063 = 0, $10064 = 0, $10065 = 0, $10066 = 0, $10067 = 0, $10068 = 0, $10069 = 0, $1007 = 0, $10070 = 0, $10071 = 0, $10072 = 0, $10073 = 0, $10074 = 0, $10075 = 0, $10076 = 0, $10077 = 0, $10078 = 0, $10079 = 0, $1008 = 0, $10080 = 0, $10081 = 0, $10082 = 0, $10083 = 0, $10084 = 0, $10085 = 0, $10086 = 0, $10087 = 0, $10088 = 0, $10089 = 0, $1009 = 0, $10090 = 0, $10091 = 0, $10092 = 0, $10093 = 0, $10094 = 0, $10095 = 0, $10096 = 0, $10097 = 0, $10098 = 0, $101 = 0, $1010 = 0, $10101 = 0, $10102 = 0, $10103 = 0, $10104 = 0, $10105 = 0, $1011 = 0, $10110 = 0, $10112 = 0, $10117 = 0, $1012 = 0, $10122 = 0, $10127 = 0, $1013 = 0, $10131 = 0, $1014 = 0, $10142 = 0, $10144 = 0, $10146 = 0, $1015 = 0, $10150 = 0, $10156 = 0, $1016 = 0, $10161 = 0, $10163 = 0, $10168 = 0, $1017 = 0, $10173 = 0, $10178 = 0, $1018 = 0, $10182 = 0, $1019 = 0, $10193 = 0, $10195 = 0, $10199 = 0, $102 = 0, $1020 = 0, $10204 = 0, $10206 = 0, $1021 = 0, $10211 = 0, $10216 = 0, $1022 = 0, $10221 = 0, $10225 = 0, $1023 = 0, $1024 = 0, $1025 = 0, $10250 = 0, $10252 = 0, $10256 = 0, $1026 = 0, $10261 = 0, $10263 = 0, $10268 = 0, $1027 = 0, $10273 = 0, $10278 = 0, $1028 = 0, $10282 = 0, $1029 = 0, $103 = 0, $1030 = 0, $10307 = 0, $10309 = 0, $1031 = 0, $10313 = 0, $10318 = 0, $1032 = 0, $10320 = 0, $10325 = 0, $1033 = 0, $10330 = 0, $10335 = 0, $10339 = 0, $1034 = 0, $1035 = 0, $1036 = 0, $10364 = 0, $10366 = 0, $1037 = 0, $10370 = 0, $10375 = 0, $10377 = 0, $1038 = 0, $10382 = 0, $10387 = 0, $1039 = 0, $10392 = 0, $10396 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1042 = 0, $10421 = 0, $10423 = 0, $10427 = 0, $1043 = 0, $10432 = 0, $10434 = 0, $10439 = 0, $1044 = 0, $10444 = 0, $10449 = 0, $1045 = 0, $10453 = 0, $1046 = 0, $1047 = 0, $10478 = 0, $1048 = 0, $10480 = 0, $10484 = 0, $10489 = 0, $1049 = 0, $10491 = 0, $10496 = 0, $105 = 0, $1050 = 0, $10501 = 0, $10506 = 0, $1051 = 0, $10510 = 0, $1052 = 0, $1053 = 0, $10535 = 0, $10537 = 0, $1054 = 0, $10541 = 0, $10546 = 0, $10548 = 0, $1055 = 0, $10553 = 0, $10558 = 0, $1056 = 0, $10563 = 0, $10567 = 0, $1057 = 0, $1058 = 0, $1059 = 0, $10592 = 0, $10594 = 0, $10598 = 0, $106 = 0, $1060 = 0, $10603 = 0, $10605 = 0, $1061 = 0, $10610 = 0, $10615 = 0, $1062 = 0, $10620 = 0, $10624 = 0, $1063 = 0, $1064 = 0, $10649 = 0, $1065 = 0, $10651 = 0, $10655 = 0, $1066 = 0, $10660 = 0, $10662 = 0, $10667 = 0, $1067 = 0, $10672 = 0, $10677 = 0, $1068 = 0, $10681 = 0, $1069 = 0, $107 = 0, $1070 = 0, $10706 = 0, $10708 = 0, $1071 = 0, $10712 = 0, $10717 = 0, $10719 = 0, $1072 = 0, $10724 = 0, $10729 = 0, $1073 = 0, $10734 = 0, $10738 = 0, $1074 = 0, $1075 = 0, $1076 = 0, $10763 = 0, $10765 = 0, $10769 = 0, $1077 = 0, $10774 = 0, $10776 = 0, $1078 = 0, $10781 = 0, $10786 = 0, $1079 = 0, $10791 = 0, $10795 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1082 = 0, $10820 = 0, $10822 = 0, $10826 = 0, $1083 = 0, $10831 = 0, $10833 = 0, $10838 = 0, $1084 = 0, $10843 = 0, $10848 = 0, $1085 = 0, $10852 = 0, $1086 = 0, $1087 = 0, $10877 = 0, $10879 = 0, $1088 = 0, $10883 = 0, $10888 = 0, $1089 = 0, $10890 = 0, $10895 = 0, $109 = 0, $1090 = 0, $10900 = 0, $10905 = 0, $10909 = 0, $1091 = 0, $1092 = 0, $1093 = 0, $10934 = 0, $10936 = 0, $1094 = 0, $10940 = 0, $10945 = 0, $10947 = 0, $1095 = 0, $10952 = 0, $10957 = 0, $1096 = 0, $10962 = 0, $10966 = 0, $1097 = 0, $1098 = 0, $1099 = 0, $10991 = 0, $10993 = 0, $10997 = 0, $11 = 0, $110 = 0, $1100 = 0, $11002 = 0, $11004 = 0, $11009 = 0, $1101 = 0, $11014 = 0, $11019 = 0, $1102 = 0, $11023 = 0, $1103 = 0, $1104 = 0, $11048 = 0, $1105 = 0, $11050 = 0, $11054 = 0, $11059 = 0, $1106 = 0, $11061 = 0, $11066 = 0, $1107 = 0, $11071 = 0, $11076 = 0, $1108 = 0, $11080 = 0, $1109 = 0, $111 = 0, $1110 = 0, $11105 = 0, $11107 = 0, $1111 = 0, $11111 = 0, $11116 = 0, $11118 = 0, $1112 = 0, $11123 = 0, $11128 = 0, $1113 = 0, $11133 = 0, $11137 = 0, $1114 = 0, $1115 = 0, $1116 = 0, $11162 = 0, $11164 = 0, $11168 = 0, $1117 = 0, $11173 = 0, $11175 = 0, $1118 = 0, $11180 = 0, $11185 = 0, $1119 = 0, $11190 = 0, $11194 = 0, $112 = 0, $1120 = 0, $1121 = 0, $11219 = 0, $1122 = 0, $11221 = 0, $11225 = 0, $1123 = 0, $11230 = 0, $11232 = 0, $11237 = 0, $1124 = 0, $11242 = 0, $11247 = 0, $1125 = 0, $11251 = 0, $1126 = 0, $1127 = 0, $11276 = 0, $11278 = 0, $1128 = 0, $11282 = 0, $11287 = 0, $11289 = 0, $1129 = 0, $11294 = 0, $11299 = 0, $113 = 0, $1130 = 0, $11304 = 0, $11308 = 0, $1131 = 0, $1132 = 0, $1133 = 0, $11333 = 0, $11335 = 0, $11339 = 0, $1134 = 0, $11344 = 0, $11346 = 0, $1135 = 0, $11351 = 0, $11356 = 0, $1136 = 0, $11361 = 0, $11365 = 0, $1137 = 0, $1138 = 0, $1139 = 0, $11390 = 0, $11392 = 0, $11396 = 0, $114 = 0, $1140 = 0, $11401 = 0, $11403 = 0, $11408 = 0, $1141 = 0, $11413 = 0, $11418 = 0, $1142 = 0, $11422 = 0, $1143 = 0, $1144 = 0, $11447 = 0, $11449 = 0, $1145 = 0, $11453 = 0, $11458 = 0, $1146 = 0, $11460 = 0, $11465 = 0, $1147 = 0, $11470 = 0, $11475 = 0, $11479 = 0, $1148 = 0, $1149 = 0, $115 = 0, $1150 = 0, $11504 = 0, $11506 = 0, $1151 = 0, $11510 = 0, $11515 = 0, $11517 = 0, $1152 = 0, $11522 = 0, $11527 = 0, $1153 = 0, $11532 = 0, $11536 = 0, $1154 = 0, $1155 = 0, $1156 = 0, $11561 = 0, $11563 = 0, $11567 = 0, $1157 = 0, $11572 = 0, $11574 = 0, $11579 = 0, $1158 = 0, $11584 = 0, $11589 = 0, $1159 = 0, $11593 = 0, $116 = 0, $1160 = 0, $1161 = 0, $11618 = 0, $1162 = 0, $11620 = 0, $11624 = 0, $11629 = 0, $1163 = 0, $11631 = 0, $11636 = 0, $1164 = 0, $11641 = 0, $11646 = 0, $1165 = 0, $11650 = 0, $1166 = 0, $1167 = 0, $11675 = 0, $11677 = 0, $1168 = 0, $11681 = 0, $11686 = 0, $11688 = 0, $1169 = 0, $11693 = 0, $11698 = 0, $117 = 0, $1170 = 0, $11703 = 0, $11707 = 0, $1171 = 0, $1172 = 0, $1173 = 0, $11732 = 0, $11734 = 0, $11738 = 0, $1174 = 0, $11743 = 0, $11745 = 0, $1175 = 0, $11750 = 0, $11755 = 0, $1176 = 0, $11760 = 0, $11764 = 0, $1177 = 0, $1178 = 0, $11789 = 0, $1179 = 0, $11791 = 0, $11795 = 0, $118 = 0, $1180 = 0, $11800 = 0, $11802 = 0, $11807 = 0, $1181 = 0, $11812 = 0, $11817 = 0, $1182 = 0, $11821 = 0, $1183 = 0, $1184 = 0, $11846 = 0, $11848 = 0, $1185 = 0, $11852 = 0, $11857 = 0, $11859 = 0, $1186 = 0, $11864 = 0, $11869 = 0, $1187 = 0, $11874 = 0, $11878 = 0, $1188 = 0, $1189 = 0, $119 = 0, $1190 = 0, $11903 = 0, $11905 = 0, $11909 = 0, $1191 = 0, $11914 = 0, $11916 = 0, $1192 = 0, $11921 = 0, $11926 = 0, $1193 = 0, $11931 = 0, $11935 = 0, $1194 = 0, $1195 = 0, $1196 = 0, $11960 = 0, $11962 = 0, $11966 = 0, $1197 = 0, $11971 = 0, $11973 = 0, $11978 = 0, $1198 = 0, $11983 = 0, $11988 = 0, $1199 = 0, $11992 = 0, $12 = 0, $120 = 0, $1200 = 0, $1201 = 0, $12017 = 0, $12019 = 0, $1202 = 0, $12023 = 0, $12028 = 0, $1203 = 0, $12030 = 0, $12035 = 0, $1204 = 0, $12040 = 0, $12045 = 0, $12049 = 0, $1205 = 0, $1206 = 0, $1207 = 0, $12074 = 0, $12076 = 0, $1208 = 0, $12080 = 0, $12085 = 0, $12087 = 0, $1209 = 0, $12092 = 0, $12097 = 0, $121 = 0, $1210 = 0, $12102 = 0, $12106 = 0, $1211 = 0, $1212 = 0, $1213 = 0, $12131 = 0, $12133 = 0, $12137 = 0, $1214 = 0, $12142 = 0, $12144 = 0, $12149 = 0, $1215 = 0, $12154 = 0, $12159 = 0, $1216 = 0, $12163 = 0, $1217 = 0, $1218 = 0, $12188 = 0, $1219 = 0, $12190 = 0, $12194 = 0, $12199 = 0, $122 = 0, $1220 = 0, $12201 = 0, $12206 = 0, $1221 = 0, $12211 = 0, $12216 = 0, $1222 = 0, $12220 = 0, $1223 = 0, $1224 = 0, $12245 = 0, $12247 = 0, $1225 = 0, $12251 = 0, $12256 = 0, $12258 = 0, $1226 = 0, $12263 = 0, $12268 = 0, $1227 = 0, $12273 = 0, $12277 = 0, $1228 = 0, $1229 = 0, $123 = 0, $1230 = 0, $12302 = 0, $12304 = 0, $12308 = 0, $1231 = 0, $12313 = 0, $12315 = 0, $1232 = 0, $12320 = 0, $12325 = 0, $1233 = 0, $12330 = 0, $12334 = 0, $1234 = 0, $1235 = 0, $12359 = 0, $1236 = 0, $12361 = 0, $12365 = 0, $1237 = 0, $12370 = 0, $12372 = 0, $12377 = 0, $1238 = 0, $12382 = 0, $12387 = 0, $1239 = 0, $12391 = 0, $124 = 0, $1240 = 0, $1241 = 0, $12416 = 0, $12418 = 0, $1242 = 0, $12422 = 0, $12427 = 0, $12429 = 0, $1243 = 0, $12434 = 0, $12439 = 0, $1244 = 0, $12444 = 0, $12448 = 0, $1245 = 0, $1246 = 0, $1247 = 0, $12473 = 0, $12475 = 0, $12479 = 0, $1248 = 0, $12484 = 0, $12486 = 0, $1249 = 0, $12491 = 0, $12496 = 0, $125 = 0, $1250 = 0, $12501 = 0, $12505 = 0, $1251 = 0, $1252 = 0, $1253 = 0, $12530 = 0, $12532 = 0, $12536 = 0, $1254 = 0, $12541 = 0, $12543 = 0, $12548 = 0, $1255 = 0, $12553 = 0, $12558 = 0, $1256 = 0, $12562 = 0, $1257 = 0, $1258 = 0, $12587 = 0, $12589 = 0, $1259 = 0, $12593 = 0, $12598 = 0, $126 = 0, $1260 = 0, $12600 = 0, $12605 = 0, $1261 = 0, $12610 = 0, $12615 = 0, $12619 = 0, $1262 = 0, $1263 = 0, $1264 = 0, $12644 = 0, $12646 = 0, $1265 = 0, $12650 = 0, $12655 = 0, $12657 = 0, $1266 = 0, $12662 = 0, $12667 = 0, $1267 = 0, $12672 = 0, $12676 = 0, $1268 = 0, $1269 = 0, $127 = 0, $1270 = 0, $12701 = 0, $12703 = 0, $12707 = 0, $1271 = 0, $12712 = 0, $12714 = 0, $12719 = 0, $1272 = 0, $12724 = 0, $12729 = 0, $1273 = 0, $12733 = 0, $1274 = 0, $1275 = 0, $12758 = 0, $1276 = 0, $12760 = 0, $12764 = 0, $12769 = 0, $1277 = 0, $12771 = 0, $12776 = 0, $1278 = 0, $12781 = 0, $12786 = 0, $1279 = 0, $12790 = 0, $128 = 0, $1280 = 0, $1281 = 0, $12815 = 0, $12817 = 0, $1282 = 0, $12821 = 0, $12826 = 0, $12828 = 0, $1283 = 0, $12833 = 0, $12838 = 0, $1284 = 0, $12843 = 0, $12847 = 0, $1285 = 0, $1286 = 0, $1287 = 0, $12872 = 0, $12874 = 0, $12878 = 0, $1288 = 0, $12883 = 0, $12885 = 0, $1289 = 0, $12890 = 0, $12895 = 0, $129 = 0, $1290 = 0, $12900 = 0, $12904 = 0, $1291 = 0, $1292 = 0, $12929 = 0, $1293 = 0, $12931 = 0, $12935 = 0, $1294 = 0, $12940 = 0, $12942 = 0, $12947 = 0, $1295 = 0, $12952 = 0, $12957 = 0, $1296 = 0, $12961 = 0, $1297 = 0, $1298 = 0, $12986 = 0, $12988 = 0, $1299 = 0, $12992 = 0, $12997 = 0, $12999 = 0, $13 = 0, $130 = 0, $1300 = 0, $13004 = 0, $13009 = 0, $1301 = 0, $13014 = 0, $13018 = 0, $1302 = 0, $1303 = 0, $1304 = 0, $13043 = 0, $13045 = 0, $13049 = 0, $1305 = 0, $13054 = 0, $13056 = 0, $1306 = 0, $13061 = 0, $13066 = 0, $1307 = 0, $13071 = 0, $13075 = 0, $1308 = 0, $1309 = 0, $131 = 0, $1310 = 0, $13100 = 0, $13102 = 0, $13106 = 0, $1311 = 0, $13111 = 0, $13113 = 0, $13118 = 0, $1312 = 0, $13123 = 0, $13128 = 0, $1313 = 0, $13132 = 0, $1314 = 0, $13145 = 0, $13147 = 0, $13149 = 0, $1315 = 0, $13153 = 0, $13159 = 0, $1316 = 0, $13164 = 0, $13166 = 0, $1317 = 0, $13171 = 0, $13176 = 0, $1318 = 0, $13181 = 0, $13185 = 0, $1319 = 0, $132 = 0, $1320 = 0, $1321 = 0, $13210 = 0, $13212 = 0, $13216 = 0, $1322 = 0, $13221 = 0, $13223 = 0, $13228 = 0, $1323 = 0, $13233 = 0, $13238 = 0, $1324 = 0, $13242 = 0, $1325 = 0, $1326 = 0, $13267 = 0, $13269 = 0, $1327 = 0, $13273 = 0, $13278 = 0, $1328 = 0, $13280 = 0, $13285 = 0, $1329 = 0, $13290 = 0, $13295 = 0, $13299 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1332 = 0, $13324 = 0, $13326 = 0, $1333 = 0, $13330 = 0, $13335 = 0, $13337 = 0, $1334 = 0, $13342 = 0, $13347 = 0, $1335 = 0, $13352 = 0, $13356 = 0, $1336 = 0, $1337 = 0, $1338 = 0, $13381 = 0, $13383 = 0, $13387 = 0, $1339 = 0, $13392 = 0, $13394 = 0, $13399 = 0, $134 = 0, $1340 = 0, $13404 = 0, $13409 = 0, $1341 = 0, $13413 = 0, $1342 = 0, $1343 = 0, $13438 = 0, $1344 = 0, $13440 = 0, $13444 = 0, $13449 = 0, $1345 = 0, $13451 = 0, $13456 = 0, $1346 = 0, $13461 = 0, $13466 = 0, $1347 = 0, $13470 = 0, $1348 = 0, $1349 = 0, $13495 = 0, $13497 = 0, $135 = 0, $1350 = 0, $13501 = 0, $13506 = 0, $13508 = 0, $1351 = 0, $13513 = 0, $13518 = 0, $1352 = 0, $13523 = 0, $13527 = 0, $1353 = 0, $1354 = 0, $1355 = 0, $13552 = 0, $13554 = 0, $13558 = 0, $1356 = 0, $13563 = 0, $13565 = 0, $1357 = 0, $13570 = 0, $13575 = 0, $1358 = 0, $13580 = 0, $13584 = 0, $1359 = 0, $136 = 0, $1360 = 0, $13609 = 0, $1361 = 0, $13611 = 0, $13615 = 0, $1362 = 0, $13620 = 0, $13622 = 0, $13627 = 0, $1363 = 0, $13632 = 0, $13637 = 0, $1364 = 0, $13641 = 0, $1365 = 0, $1366 = 0, $13666 = 0, $13668 = 0, $1367 = 0, $13672 = 0, $13677 = 0, $13679 = 0, $1368 = 0, $13684 = 0, $13689 = 0, $1369 = 0, $13694 = 0, $13698 = 0, $137 = 0, $1370 = 0, $1371 = 0, $1372 = 0, $13723 = 0, $13725 = 0, $13729 = 0, $1373 = 0, $13734 = 0, $13736 = 0, $1374 = 0, $13741 = 0, $13746 = 0, $1375 = 0, $13751 = 0, $13755 = 0, $1376 = 0, $1377 = 0, $1378 = 0, $13780 = 0, $13782 = 0, $13786 = 0, $1379 = 0, $13791 = 0, $13793 = 0, $13798 = 0, $138 = 0, $1380 = 0, $13803 = 0, $13808 = 0, $1381 = 0, $13812 = 0, $1382 = 0, $1383 = 0, $13837 = 0, $13839 = 0, $1384 = 0, $13843 = 0, $13848 = 0, $1385 = 0, $13850 = 0, $13855 = 0, $1386 = 0, $13860 = 0, $13865 = 0, $13869 = 0, $1387 = 0, $1388 = 0, $1389 = 0, $13894 = 0, $13896 = 0, $139 = 0, $1390 = 0, $13900 = 0, $13905 = 0, $13907 = 0, $1391 = 0, $13912 = 0, $13917 = 0, $1392 = 0, $13922 = 0, $13926 = 0, $1393 = 0, $1394 = 0, $1395 = 0, $13951 = 0, $13953 = 0, $13957 = 0, $1396 = 0, $13962 = 0, $13964 = 0, $13969 = 0, $1397 = 0, $13974 = 0, $13979 = 0, $1398 = 0, $13983 = 0, $1399 = 0, $14 = 0, $140 = 0, $1400 = 0, $14008 = 0, $1401 = 0, $14010 = 0, $14014 = 0, $14019 = 0, $1402 = 0, $14021 = 0, $14026 = 0, $1403 = 0, $14031 = 0, $14036 = 0, $1404 = 0, $14040 = 0, $1405 = 0, $1406 = 0, $14065 = 0, $14067 = 0, $1407 = 0, $14071 = 0, $14076 = 0, $14078 = 0, $1408 = 0, $14083 = 0, $14088 = 0, $1409 = 0, $14093 = 0, $14097 = 0, $141 = 0, $1410 = 0, $1411 = 0, $1412 = 0, $14122 = 0, $14124 = 0, $14128 = 0, $1413 = 0, $14133 = 0, $14135 = 0, $1414 = 0, $14140 = 0, $14145 = 0, $1415 = 0, $14150 = 0, $14154 = 0, $1416 = 0, $1417 = 0, $14179 = 0, $1418 = 0, $14181 = 0, $14185 = 0, $1419 = 0, $14190 = 0, $14192 = 0, $14197 = 0, $142 = 0, $1420 = 0, $14202 = 0, $14207 = 0, $1421 = 0, $14211 = 0, $1422 = 0, $1423 = 0, $14236 = 0, $14238 = 0, $1424 = 0, $14242 = 0, $14247 = 0, $14249 = 0, $1425 = 0, $14254 = 0, $14259 = 0, $1426 = 0, $14264 = 0, $14268 = 0, $1427 = 0, $1428 = 0, $1429 = 0, $14293 = 0, $14295 = 0, $14299 = 0, $143 = 0, $1430 = 0, $14304 = 0, $14306 = 0, $1431 = 0, $14311 = 0, $14316 = 0, $1432 = 0, $14321 = 0, $14325 = 0, $1433 = 0, $1434 = 0, $1435 = 0, $14350 = 0, $14352 = 0, $14356 = 0, $1436 = 0, $14361 = 0, $14363 = 0, $14368 = 0, $1437 = 0, $14373 = 0, $14378 = 0, $1438 = 0, $14382 = 0, $1439 = 0, $144 = 0, $1440 = 0, $14407 = 0, $14409 = 0, $1441 = 0, $14413 = 0, $14418 = 0, $1442 = 0, $14420 = 0, $14425 = 0, $1443 = 0, $14430 = 0, $14435 = 0, $14439 = 0, $1444 = 0, $1445 = 0, $1446 = 0, $14464 = 0, $14466 = 0, $1447 = 0, $14470 = 0, $14475 = 0, $14477 = 0, $1448 = 0, $14482 = 0, $14487 = 0, $1449 = 0, $14492 = 0, $14496 = 0, $145 = 0, $1450 = 0, $1451 = 0, $1452 = 0, $14521 = 0, $14523 = 0, $14527 = 0, $1453 = 0, $14532 = 0, $14534 = 0, $14539 = 0, $1454 = 0, $14544 = 0, $14549 = 0, $1455 = 0, $14553 = 0, $1456 = 0, $1457 = 0, $14578 = 0, $1458 = 0, $14580 = 0, $14584 = 0, $14589 = 0, $1459 = 0, $14591 = 0, $14596 = 0, $146 = 0, $1460 = 0, $14601 = 0, $14606 = 0, $1461 = 0, $14610 = 0, $1462 = 0, $1463 = 0, $14635 = 0, $14637 = 0, $1464 = 0, $14641 = 0, $14646 = 0, $14648 = 0, $1465 = 0, $14653 = 0, $14658 = 0, $1466 = 0, $14663 = 0, $14667 = 0, $1467 = 0, $1468 = 0, $1469 = 0, $14692 = 0, $14694 = 0, $14698 = 0, $147 = 0, $1470 = 0, $14703 = 0, $14705 = 0, $1471 = 0, $14710 = 0, $14715 = 0, $1472 = 0, $14720 = 0, $14724 = 0, $1473 = 0, $1474 = 0, $14749 = 0, $1475 = 0, $14751 = 0, $14755 = 0, $1476 = 0, $14760 = 0, $14762 = 0, $14767 = 0, $1477 = 0, $14772 = 0, $14777 = 0, $1478 = 0, $14781 = 0, $1479 = 0, $148 = 0, $1480 = 0, $14806 = 0, $14808 = 0, $1481 = 0, $14812 = 0, $14817 = 0, $14819 = 0, $1482 = 0, $14824 = 0, $14829 = 0, $1483 = 0, $14834 = 0, $14838 = 0, $1484 = 0, $1485 = 0, $1486 = 0, $14863 = 0, $14865 = 0, $14869 = 0, $1487 = 0, $14874 = 0, $14876 = 0, $1488 = 0, $14881 = 0, $14886 = 0, $1489 = 0, $14891 = 0, $14895 = 0, $149 = 0, $1490 = 0, $1491 = 0, $1492 = 0, $14920 = 0, $14922 = 0, $14926 = 0, $1493 = 0, $14931 = 0, $14933 = 0, $14938 = 0, $1494 = 0, $14943 = 0, $14948 = 0, $1495 = 0, $14952 = 0, $1496 = 0, $1497 = 0, $14977 = 0, $14979 = 0, $1498 = 0, $14983 = 0, $14988 = 0, $1499 = 0, $14990 = 0, $14995 = 0, $15 = 0, $150 = 0, $1500 = 0, $15000 = 0, $15005 = 0, $15009 = 0, $1501 = 0, $1502 = 0, $1503 = 0, $15034 = 0, $15036 = 0, $1504 = 0, $15040 = 0, $15045 = 0, $15047 = 0, $1505 = 0, $15052 = 0, $15057 = 0, $1506 = 0, $15062 = 0, $15066 = 0, $1507 = 0, $1508 = 0, $1509 = 0, $15091 = 0, $15093 = 0, $15097 = 0, $151 = 0, $1510 = 0, $15102 = 0, $15104 = 0, $15109 = 0, $1511 = 0, $15114 = 0, $15119 = 0, $1512 = 0, $15123 = 0, $1513 = 0, $1514 = 0, $15148 = 0, $1515 = 0, $15150 = 0, $15154 = 0, $15159 = 0, $1516 = 0, $15161 = 0, $15166 = 0, $1517 = 0, $15171 = 0, $15176 = 0, $1518 = 0, $15180 = 0, $1519 = 0, $152 = 0, $1520 = 0, $15205 = 0, $15207 = 0, $1521 = 0, $15211 = 0, $15216 = 0, $15218 = 0, $1522 = 0, $15223 = 0, $15228 = 0, $1523 = 0, $15233 = 0, $15237 = 0, $1524 = 0, $1525 = 0, $1526 = 0, $15262 = 0, $15264 = 0, $15268 = 0, $1527 = 0, $15273 = 0, $15275 = 0, $1528 = 0, $15280 = 0, $15285 = 0, $1529 = 0, $15290 = 0, $15294 = 0, $153 = 0, $1530 = 0, $1531 = 0, $15319 = 0, $1532 = 0, $15321 = 0, $15325 = 0, $1533 = 0, $15330 = 0, $15332 = 0, $15337 = 0, $1534 = 0, $15342 = 0, $15347 = 0, $1535 = 0, $15351 = 0, $1536 = 0, $1537 = 0, $15376 = 0, $15378 = 0, $1538 = 0, $15382 = 0, $15387 = 0, $15389 = 0, $1539 = 0, $15394 = 0, $15399 = 0, $154 = 0, $1540 = 0, $15404 = 0, $15408 = 0, $1541 = 0, $1542 = 0, $1543 = 0, $15433 = 0, $15435 = 0, $15439 = 0, $1544 = 0, $15444 = 0, $15446 = 0, $1545 = 0, $15451 = 0, $15456 = 0, $1546 = 0, $15461 = 0, $15465 = 0, $1547 = 0, $1548 = 0, $1549 = 0, $15490 = 0, $15492 = 0, $15496 = 0, $155 = 0, $1550 = 0, $15501 = 0, $15503 = 0, $15508 = 0, $1551 = 0, $15513 = 0, $15518 = 0, $1552 = 0, $15522 = 0, $1553 = 0, $1554 = 0, $15547 = 0, $15549 = 0, $1555 = 0, $15553 = 0, $15558 = 0, $1556 = 0, $15560 = 0, $15565 = 0, $1557 = 0, $15570 = 0, $15575 = 0, $15579 = 0, $1558 = 0, $1559 = 0, $156 = 0, $1560 = 0, $15604 = 0, $15606 = 0, $1561 = 0, $15610 = 0, $15615 = 0, $15617 = 0, $1562 = 0, $15622 = 0, $15627 = 0, $1563 = 0, $15632 = 0, $15636 = 0, $1564 = 0, $1565 = 0, $1566 = 0, $15661 = 0, $15663 = 0, $15667 = 0, $1567 = 0, $15672 = 0, $15674 = 0, $15679 = 0, $1568 = 0, $15684 = 0, $15689 = 0, $1569 = 0, $15693 = 0, $157 = 0, $1570 = 0, $1571 = 0, $15718 = 0, $1572 = 0, $15720 = 0, $15724 = 0, $15729 = 0, $1573 = 0, $15731 = 0, $15736 = 0, $1574 = 0, $15741 = 0, $15746 = 0, $1575 = 0, $15750 = 0, $1576 = 0, $15762 = 0, $15764 = 0, $15768 = 0, $1577 = 0, $15773 = 0, $15775 = 0, $1578 = 0, $15780 = 0, $15785 = 0, $1579 = 0, $15790 = 0, $15794 = 0, $158 = 0, $1580 = 0, $15806 = 0, $15808 = 0, $1581 = 0, $15812 = 0, $15817 = 0, $15819 = 0, $1582 = 0, $15824 = 0, $15829 = 0, $1583 = 0, $15834 = 0, $15838 = 0, $1584 = 0, $1585 = 0, $15850 = 0, $15852 = 0, $15856 = 0, $1586 = 0, $15861 = 0, $15863 = 0, $15868 = 0, $1587 = 0, $15873 = 0, $15878 = 0, $1588 = 0, $15882 = 0, $1589 = 0, $15893 = 0, $15895 = 0, $15899 = 0, $159 = 0, $1590 = 0, $15904 = 0, $15906 = 0, $1591 = 0, $15911 = 0, $15916 = 0, $1592 = 0, $15921 = 0, $15925 = 0, $1593 = 0, $15936 = 0, $15938 = 0, $1594 = 0, $15942 = 0, $15947 = 0, $15949 = 0, $1595 = 0, $15954 = 0, $15959 = 0, $1596 = 0, $15964 = 0, $15968 = 0, $1597 = 0, $15979 = 0, $1598 = 0, $15981 = 0, $15985 = 0, $1599 = 0, $15990 = 0, $15992 = 0, $15997 = 0, $16 = 0, $160 = 0, $1600 = 0, $16002 = 0, $16007 = 0, $1601 = 0, $16011 = 0, $1602 = 0, $16022 = 0, $16024 = 0, $16028 = 0, $1603 = 0, $16033 = 0, $16035 = 0, $1604 = 0, $16040 = 0, $16045 = 0, $1605 = 0, $16050 = 0, $16054 = 0, $1606 = 0, $1607 = 0, $16079 = 0, $1608 = 0, $16081 = 0, $16085 = 0, $1609 = 0, $16090 = 0, $16092 = 0, $16097 = 0, $161 = 0, $1610 = 0, $16102 = 0, $16107 = 0, $1611 = 0, $16111 = 0, $1612 = 0, $16127 = 0, $16129 = 0, $1613 = 0, $16133 = 0, $16138 = 0, $1614 = 0, $16140 = 0, $16145 = 0, $1615 = 0, $16150 = 0, $16155 = 0, $16159 = 0, $1616 = 0, $1617 = 0, $1618 = 0, $16184 = 0, $16186 = 0, $1619 = 0, $16190 = 0, $16195 = 0, $16197 = 0, $162 = 0, $1620 = 0, $16202 = 0, $16207 = 0, $1621 = 0, $16212 = 0, $16216 = 0, $1622 = 0, $1623 = 0, $16238 = 0, $1624 = 0, $16240 = 0, $16244 = 0, $16249 = 0, $1625 = 0, $16251 = 0, $16256 = 0, $1626 = 0, $16261 = 0, $16266 = 0, $1627 = 0, $16270 = 0, $1628 = 0, $16282 = 0, $16284 = 0, $16288 = 0, $1629 = 0, $16293 = 0, $16295 = 0, $163 = 0, $1630 = 0, $16300 = 0, $16305 = 0, $1631 = 0, $16310 = 0, $16314 = 0, $1632 = 0, $1633 = 0, $1634 = 0, $16342 = 0, $16344 = 0, $16348 = 0, $1635 = 0, $16353 = 0, $16355 = 0, $1636 = 0, $16360 = 0, $16365 = 0, $1637 = 0, $16370 = 0, $16374 = 0, $1638 = 0, $1639 = 0, $16394 = 0, $16396 = 0, $164 = 0, $1640 = 0, $16400 = 0, $16405 = 0, $16407 = 0, $1641 = 0, $16412 = 0, $16417 = 0, $1642 = 0, $16422 = 0, $16426 = 0, $1643 = 0, $1644 = 0, $1645 = 0, $1646 = 0, $16464 = 0, $16466 = 0, $1647 = 0, $16470 = 0, $16475 = 0, $16477 = 0, $1648 = 0, $16482 = 0, $16487 = 0, $1649 = 0, $16492 = 0, $16496 = 0, $165 = 0, $1650 = 0, $1651 = 0, $16511 = 0, $16513 = 0, $16517 = 0, $1652 = 0, $16522 = 0, $16524 = 0, $16529 = 0, $1653 = 0, $16534 = 0, $16539 = 0, $1654 = 0, $16543 = 0, $1655 = 0, $1656 = 0, $1657 = 0, $1658 = 0, $16581 = 0, $16583 = 0, $16587 = 0, $1659 = 0, $16592 = 0, $16594 = 0, $16599 = 0, $166 = 0, $1660 = 0, $16604 = 0, $16609 = 0, $1661 = 0, $16613 = 0, $1662 = 0, $16629 = 0, $1663 = 0, $16631 = 0, $16635 = 0, $1664 = 0, $16640 = 0, $16642 = 0, $16647 = 0, $1665 = 0, $16652 = 0, $16657 = 0, $1666 = 0, $16661 = 0, $1667 = 0, $16677 = 0, $16679 = 0, $1668 = 0, $16683 = 0, $16688 = 0, $1669 = 0, $16690 = 0, $16695 = 0, $167 = 0, $1670 = 0, $16700 = 0, $16705 = 0, $16709 = 0, $1671 = 0, $1672 = 0, $16724 = 0, $16726 = 0, $1673 = 0, $16730 = 0, $16735 = 0, $16737 = 0, $1674 = 0, $16742 = 0, $16747 = 0, $1675 = 0, $16752 = 0, $16756 = 0, $1676 = 0, $16769 = 0, $1677 = 0, $16771 = 0, $16775 = 0, $1678 = 0, $16780 = 0, $16782 = 0, $16787 = 0, $1679 = 0, $16792 = 0, $16797 = 0, $168 = 0, $1680 = 0, $16801 = 0, $1681 = 0, $16812 = 0, $16814 = 0, $16818 = 0, $1682 = 0, $16823 = 0, $16825 = 0, $1683 = 0, $16830 = 0, $16835 = 0, $1684 = 0, $16840 = 0, $16844 = 0, $1685 = 0, $1686 = 0, $16869 = 0, $1687 = 0, $16871 = 0, $16875 = 0, $1688 = 0, $16880 = 0, $16882 = 0, $16887 = 0, $1689 = 0, $16892 = 0, $16897 = 0, $169 = 0, $1690 = 0, $16901 = 0, $1691 = 0, $1692 = 0, $1693 = 0, $16931 = 0, $16933 = 0, $16937 = 0, $1694 = 0, $16942 = 0, $16944 = 0, $16949 = 0, $1695 = 0, $16954 = 0, $16959 = 0, $1696 = 0, $16963 = 0, $1697 = 0, $1698 = 0, $1699 = 0, $16992 = 0, $16994 = 0, $16998 = 0, $17 = 0, $170 = 0, $1700 = 0, $17003 = 0, $17005 = 0, $1701 = 0, $17010 = 0, $17015 = 0, $1702 = 0, $17020 = 0, $17024 = 0, $1703 = 0, $1704 = 0, $17048 = 0, $1705 = 0, $17050 = 0, $17054 = 0, $17059 = 0, $1706 = 0, $17061 = 0, $17066 = 0, $1707 = 0, $17071 = 0, $17076 = 0, $1708 = 0, $17080 = 0, $1709 = 0, $17093 = 0, $17095 = 0, $17097 = 0, $171 = 0, $1710 = 0, $17103 = 0, $17108 = 0, $1711 = 0, $17110 = 0, $17115 = 0, $1712 = 0, $17120 = 0, $17125 = 0, $17129 = 0, $1713 = 0, $1714 = 0, $1715 = 0, $1716 = 0, $17167 = 0, $17169 = 0, $1717 = 0, $17173 = 0, $17178 = 0, $1718 = 0, $17180 = 0, $17185 = 0, $1719 = 0, $17190 = 0, $17195 = 0, $17199 = 0, $172 = 0, $1720 = 0, $1721 = 0, $1722 = 0, $17229 = 0, $1723 = 0, $17231 = 0, $17233 = 0, $17239 = 0, $1724 = 0, $17244 = 0, $17246 = 0, $1725 = 0, $17251 = 0, $17256 = 0, $1726 = 0, $17261 = 0, $17265 = 0, $1727 = 0, $1728 = 0, $1729 = 0, $17295 = 0, $17297 = 0, $17299 = 0, $173 = 0, $1730 = 0, $17303 = 0, $17307 = 0, $1731 = 0, $17311 = 0, $17315 = 0, $17319 = 0, $1732 = 0, $17323 = 0, $17327 = 0, $1733 = 0, $17331 = 0, $17335 = 0, $17339 = 0, $1734 = 0, $17343 = 0, $17347 = 0, $1735 = 0, $17351 = 0, $17355 = 0, $17359 = 0, $1736 = 0, $17363 = 0, $17367 = 0, $1737 = 0, $17371 = 0, $17375 = 0, $17379 = 0, $1738 = 0, $17383 = 0, $17387 = 0, $1739 = 0, $17391 = 0, $17395 = 0, $17399 = 0, $174 = 0, $1740 = 0, $17403 = 0, $17409 = 0, $1741 = 0, $17414 = 0, $17416 = 0, $1742 = 0, $17421 = 0, $17426 = 0, $1743 = 0, $17431 = 0, $17435 = 0, $1744 = 0, $1745 = 0, $1746 = 0, $1747 = 0, $1748 = 0, $17483 = 0, $17485 = 0, $17489 = 0, $1749 = 0, $17494 = 0, $17496 = 0, $175 = 0, $1750 = 0, $17501 = 0, $17506 = 0, $1751 = 0, $17511 = 0, $17515 = 0, $1752 = 0, $1753 = 0, $1754 = 0, $1755 = 0, $1756 = 0, $17561 = 0, $17563 = 0, $17567 = 0, $1757 = 0, $17572 = 0, $17574 = 0, $17579 = 0, $1758 = 0, $17584 = 0, $17589 = 0, $1759 = 0, $17593 = 0, $176 = 0, $1760 = 0, $1761 = 0, $1762 = 0, $17621 = 0, $17623 = 0, $17627 = 0, $1763 = 0, $17632 = 0, $17634 = 0, $17639 = 0, $1764 = 0, $17644 = 0, $17649 = 0, $1765 = 0, $17653 = 0, $1766 = 0, $1767 = 0, $17671 = 0, $17673 = 0, $17677 = 0, $1768 = 0, $17682 = 0, $17684 = 0, $17689 = 0, $1769 = 0, $17694 = 0, $17699 = 0, $177 = 0, $1770 = 0, $17703 = 0, $1771 = 0, $1772 = 0, $17725 = 0, $17727 = 0, $1773 = 0, $17731 = 0, $17736 = 0, $17738 = 0, $1774 = 0, $17743 = 0, $17748 = 0, $1775 = 0, $17753 = 0, $17757 = 0, $1776 = 0, $1777 = 0, $1778 = 0, $1779 = 0, $178 = 0, $1780 = 0, $17803 = 0, $17805 = 0, $17807 = 0, $1781 = 0, $17813 = 0, $17818 = 0, $1782 = 0, $17820 = 0, $17825 = 0, $1783 = 0, $17830 = 0, $17835 = 0, $17839 = 0, $1784 = 0, $1785 = 0, $1786 = 0, $1787 = 0, $1788 = 0, $17887 = 0, $17889 = 0, $1789 = 0, $17891 = 0, $17895 = 0, $17899 = 0, $179 = 0, $1790 = 0, $17903 = 0, $17907 = 0, $1791 = 0, $17911 = 0, $17915 = 0, $17919 = 0, $1792 = 0, $17923 = 0, $17927 = 0, $1793 = 0, $17931 = 0, $17935 = 0, $17939 = 0, $1794 = 0, $17943 = 0, $17947 = 0, $1795 = 0, $17951 = 0, $17955 = 0, $17959 = 0, $1796 = 0, $17963 = 0, $17967 = 0, $1797 = 0, $17973 = 0, $17978 = 0, $1798 = 0, $17980 = 0, $17985 = 0, $1799 = 0, $17990 = 0, $17995 = 0, $17999 = 0, $18 = 0, $180 = 0, $1800 = 0, $1801 = 0, $1802 = 0, $1803 = 0, $1804 = 0, $18047 = 0, $18049 = 0, $1805 = 0, $18053 = 0, $18058 = 0, $1806 = 0, $18060 = 0, $18065 = 0, $1807 = 0, $18070 = 0, $18075 = 0, $18079 = 0, $1808 = 0, $1809 = 0, $181 = 0, $1810 = 0, $18108 = 0, $1811 = 0, $18110 = 0, $18114 = 0, $18119 = 0, $1812 = 0, $18121 = 0, $18126 = 0, $1813 = 0, $18131 = 0, $18136 = 0, $1814 = 0, $18140 = 0, $1815 = 0, $18152 = 0, $18154 = 0, $18158 = 0, $1816 = 0, $18163 = 0, $18165 = 0, $1817 = 0, $18170 = 0, $18175 = 0, $1818 = 0, $18180 = 0, $18184 = 0, $1819 = 0, $182 = 0, $1820 = 0, $18204 = 0, $18206 = 0, $1821 = 0, $18210 = 0, $18215 = 0, $18217 = 0, $1822 = 0, $18222 = 0, $18227 = 0, $1823 = 0, $18232 = 0, $18236 = 0, $1824 = 0, $1825 = 0, $18253 = 0, $18255 = 0, $18259 = 0, $1826 = 0, $18264 = 0, $18266 = 0, $1827 = 0, $18271 = 0, $18276 = 0, $1828 = 0, $18281 = 0, $18285 = 0, $1829 = 0, $183 = 0, $1830 = 0, $1831 = 0, $1832 = 0, $1833 = 0, $18331 = 0, $18333 = 0, $18335 = 0, $18339 = 0, $1834 = 0, $18343 = 0, $18347 = 0, $1835 = 0, $18351 = 0, $18355 = 0, $18359 = 0, $1836 = 0, $18363 = 0, $18367 = 0, $1837 = 0, $18371 = 0, $18375 = 0, $18379 = 0, $1838 = 0, $18383 = 0, $18387 = 0, $1839 = 0, $18391 = 0, $18395 = 0, $18399 = 0, $184 = 0, $1840 = 0, $18403 = 0, $18407 = 0, $1841 = 0, $18411 = 0, $18415 = 0, $18419 = 0, $1842 = 0, $18423 = 0, $18427 = 0, $1843 = 0, $18431 = 0, $18435 = 0, $18439 = 0, $1844 = 0, $18443 = 0, $18447 = 0, $1845 = 0, $18451 = 0, $18455 = 0, $18459 = 0, $1846 = 0, $18463 = 0, $18467 = 0, $1847 = 0, $18471 = 0, $18475 = 0, $18479 = 0, $1848 = 0, $18483 = 0, $18487 = 0, $1849 = 0, $18491 = 0, $18495 = 0, $18499 = 0, $185 = 0, $1850 = 0, $18503 = 0, $18507 = 0, $1851 = 0, $18511 = 0, $18515 = 0, $18519 = 0, $1852 = 0, $18523 = 0, $18527 = 0, $1853 = 0, $18533 = 0, $18538 = 0, $1854 = 0, $18540 = 0, $18545 = 0, $1855 = 0, $18550 = 0, $18555 = 0, $18559 = 0, $1856 = 0, $1857 = 0, $1858 = 0, $18582 = 0, $18584 = 0, $18588 = 0, $1859 = 0, $18593 = 0, $18595 = 0, $186 = 0, $1860 = 0, $18600 = 0, $18605 = 0, $1861 = 0, $18610 = 0, $18614 = 0, $1862 = 0, $18624 = 0, $18625 = 0, $18627 = 0, $18629 = 0, $1863 = 0, $18630 = 0, $18632 = 0, $18634 = 0, $18635 = 0, $18637 = 0, $18639 = 0, $1864 = 0, $18640 = 0, $18642 = 0, $18644 = 0, $18645 = 0, $18647 = 0, $18649 = 0, $1865 = 0, $18650 = 0, $18652 = 0, $18654 = 0, $18655 = 0, $18657 = 0, $18659 = 0, $1866 = 0, $18660 = 0, $18662 = 0, $18664 = 0, $18665 = 0, $18667 = 0, $18669 = 0, $1867 = 0, $18670 = 0, $18672 = 0, $18674 = 0, $18675 = 0, $18677 = 0, $18679 = 0, $1868 = 0, $18680 = 0, $18682 = 0, $18684 = 0, $18685 = 0, $18687 = 0, $18689 = 0, $1869 = 0, $18691 = 0, $18695 = 0, $187 = 0, $1870 = 0, $18700 = 0, $18702 = 0, $18707 = 0, $1871 = 0, $18712 = 0, $18717 = 0, $1872 = 0, $18721 = 0, $1873 = 0, $1874 = 0, $18744 = 0, $18746 = 0, $1875 = 0, $18750 = 0, $18755 = 0, $18757 = 0, $1876 = 0, $18762 = 0, $18767 = 0, $1877 = 0, $18772 = 0, $18776 = 0, $1878 = 0, $1879 = 0, $18799 = 0, $188 = 0, $1880 = 0, $18801 = 0, $18805 = 0, $1881 = 0, $18810 = 0, $18812 = 0, $18817 = 0, $1882 = 0, $18822 = 0, $18827 = 0, $1883 = 0, $18831 = 0, $1884 = 0, $1885 = 0, $1886 = 0, $1887 = 0, $1888 = 0, $18889 = 0, $1889 = 0, $18891 = 0, $18895 = 0, $189 = 0, $1890 = 0, $18900 = 0, $18902 = 0, $18907 = 0, $1891 = 0, $18912 = 0, $18917 = 0, $1892 = 0, $18921 = 0, $1893 = 0, $1894 = 0, $18944 = 0, $18946 = 0, $1895 = 0, $18950 = 0, $18955 = 0, $18957 = 0, $1896 = 0, $18962 = 0, $18967 = 0, $1897 = 0, $18972 = 0, $18976 = 0, $1898 = 0, $1899 = 0, $19 = 0, $190 = 0, $1900 = 0, $1901 = 0, $1902 = 0, $1903 = 0, $19034 = 0, $19036 = 0, $1904 = 0, $19040 = 0, $19045 = 0, $19047 = 0, $1905 = 0, $19052 = 0, $19057 = 0, $1906 = 0, $19062 = 0, $19066 = 0, $1907 = 0, $1908 = 0, $19089 = 0, $1909 = 0, $19091 = 0, $19095 = 0, $191 = 0, $1910 = 0, $19100 = 0, $19102 = 0, $19107 = 0, $1911 = 0, $19112 = 0, $19117 = 0, $1912 = 0, $19121 = 0, $1913 = 0, $1914 = 0, $1915 = 0, $19156 = 0, $19158 = 0, $1916 = 0, $19162 = 0, $19167 = 0, $19169 = 0, $1917 = 0, $19174 = 0, $19179 = 0, $1918 = 0, $19184 = 0, $19188 = 0, $1919 = 0, $192 = 0, $1920 = 0, $1921 = 0, $19210 = 0, $19212 = 0, $19216 = 0, $1922 = 0, $19221 = 0, $19223 = 0, $19228 = 0, $1923 = 0, $19233 = 0, $19238 = 0, $1924 = 0, $19242 = 0, $1925 = 0, $19253 = 0, $19255 = 0, $19259 = 0, $1926 = 0, $19264 = 0, $19266 = 0, $1927 = 0, $19271 = 0, $19276 = 0, $1928 = 0, $19281 = 0, $19285 = 0, $1929 = 0, $193 = 0, $1930 = 0, $19305 = 0, $19307 = 0, $1931 = 0, $19311 = 0, $19316 = 0, $19318 = 0, $1932 = 0, $19323 = 0, $19328 = 0, $1933 = 0, $19333 = 0, $19337 = 0, $1934 = 0, $1935 = 0, $1936 = 0, $19360 = 0, $19362 = 0, $19366 = 0, $1937 = 0, $19371 = 0, $19373 = 0, $19378 = 0, $1938 = 0, $19383 = 0, $19388 = 0, $1939 = 0, $19392 = 0, $194 = 0, $1940 = 0, $1941 = 0, $1942 = 0, $1943 = 0, $1944 = 0, $1945 = 0, $19450 = 0, $19452 = 0, $19456 = 0, $1946 = 0, $19461 = 0, $19463 = 0, $19468 = 0, $1947 = 0, $19473 = 0, $19478 = 0, $1948 = 0, $19482 = 0, $1949 = 0, $195 = 0, $1950 = 0, $19505 = 0, $19507 = 0, $1951 = 0, $19511 = 0, $19516 = 0, $19518 = 0, $1952 = 0, $19523 = 0, $19528 = 0, $1953 = 0, $19533 = 0, $19537 = 0, $1954 = 0, $1955 = 0, $1956 = 0, $1957 = 0, $1958 = 0, $1959 = 0, $19595 = 0, $19597 = 0, $196 = 0, $1960 = 0, $19601 = 0, $19606 = 0, $19608 = 0, $1961 = 0, $19613 = 0, $19618 = 0, $1962 = 0, $19623 = 0, $19627 = 0, $1963 = 0, $1964 = 0, $1965 = 0, $19650 = 0, $19652 = 0, $19656 = 0, $1966 = 0, $19661 = 0, $19663 = 0, $19668 = 0, $1967 = 0, $19673 = 0, $19678 = 0, $1968 = 0, $19682 = 0, $1969 = 0, $197 = 0, $1970 = 0, $19704 = 0, $19706 = 0, $1971 = 0, $19710 = 0, $19715 = 0, $19717 = 0, $1972 = 0, $19722 = 0, $19727 = 0, $1973 = 0, $19732 = 0, $19736 = 0, $1974 = 0, $1975 = 0, $19752 = 0, $19754 = 0, $19758 = 0, $1976 = 0, $19763 = 0, $19765 = 0, $1977 = 0, $19770 = 0, $19775 = 0, $1978 = 0, $19780 = 0, $19784 = 0, $1979 = 0, $19797 = 0, $19799 = 0, $198 = 0, $1980 = 0, $19803 = 0, $19808 = 0, $1981 = 0, $19810 = 0, $19815 = 0, $1982 = 0, $19820 = 0, $19825 = 0, $19829 = 0, $1983 = 0, $1984 = 0, $19841 = 0, $19843 = 0, $19847 = 0, $1985 = 0, $19852 = 0, $19854 = 0, $19859 = 0, $1986 = 0, $19864 = 0, $19869 = 0, $1987 = 0, $19873 = 0, $1988 = 0, $19889 = 0, $1989 = 0, $19891 = 0, $19895 = 0, $199 = 0, $1990 = 0, $19900 = 0, $19902 = 0, $19907 = 0, $1991 = 0, $19912 = 0, $19917 = 0, $1992 = 0, $19921 = 0, $1993 = 0, $1994 = 0, $1995 = 0, $19950 = 0, $19952 = 0, $19956 = 0, $1996 = 0, $19961 = 0, $19963 = 0, $19968 = 0, $1997 = 0, $19973 = 0, $19978 = 0, $1998 = 0, $19982 = 0, $1999 = 0, $2 = 0, $20 = 0, $200 = 0, $2000 = 0, $20005 = 0, $20007 = 0, $2001 = 0, $20011 = 0, $20016 = 0, $20018 = 0, $2002 = 0, $20023 = 0, $20028 = 0, $2003 = 0, $20033 = 0, $20037 = 0, $2004 = 0, $2005 = 0, $2006 = 0, $2007 = 0, $2008 = 0, $2009 = 0, $20095 = 0, $20097 = 0, $201 = 0, $2010 = 0, $20101 = 0, $20106 = 0, $20108 = 0, $2011 = 0, $20113 = 0, $20118 = 0, $2012 = 0, $20123 = 0, $20127 = 0, $2013 = 0, $2014 = 0, $2015 = 0, $2016 = 0, $2017 = 0, $2018 = 0, $20185 = 0, $20187 = 0, $2019 = 0, $20191 = 0, $20196 = 0, $20198 = 0, $202 = 0, $2020 = 0, $20203 = 0, $20208 = 0, $2021 = 0, $20213 = 0, $20217 = 0, $2022 = 0, $2023 = 0, $2024 = 0, $20240 = 0, $20242 = 0, $20246 = 0, $2025 = 0, $20251 = 0, $20253 = 0, $20258 = 0, $2026 = 0, $20263 = 0, $20268 = 0, $2027 = 0, $20272 = 0, $2028 = 0, $2029 = 0, $20297 = 0, $20299 = 0, $203 = 0, $2030 = 0, $20303 = 0, $20308 = 0, $2031 = 0, $20310 = 0, $20315 = 0, $2032 = 0, $20320 = 0, $20325 = 0, $20329 = 0, $2033 = 0, $2034 = 0, $20346 = 0, $20348 = 0, $2035 = 0, $20352 = 0, $20357 = 0, $20359 = 0, $2036 = 0, $20364 = 0, $20369 = 0, $2037 = 0, $20374 = 0, $20378 = 0, $2038 = 0, $2039 = 0, $20391 = 0, $20393 = 0, $20397 = 0, $204 = 0, $2040 = 0, $20402 = 0, $20404 = 0, $20409 = 0, $2041 = 0, $20414 = 0, $20419 = 0, $2042 = 0, $20423 = 0, $2043 = 0, $2044 = 0, $2045 = 0, $20456 = 0, $20458 = 0, $2046 = 0, $20460 = 0, $20464 = 0, $20468 = 0, $2047 = 0, $20472 = 0, $20476 = 0, $2048 = 0, $20480 = 0, $20484 = 0, $20488 = 0, $2049 = 0, $20492 = 0, $20496 = 0, $205 = 0, $2050 = 0, $20500 = 0, $20504 = 0, $20508 = 0, $2051 = 0, $20512 = 0, $20516 = 0, $2052 = 0, $20520 = 0, $20524 = 0, $2053 = 0, $20530 = 0, $20535 = 0, $20537 = 0, $2054 = 0, $20542 = 0, $20547 = 0, $2055 = 0, $20552 = 0, $20556 = 0, $2056 = 0, $2057 = 0, $2058 = 0, $20586 = 0, $20588 = 0, $2059 = 0, $20592 = 0, $20597 = 0, $20599 = 0, $206 = 0, $2060 = 0, $20604 = 0, $20609 = 0, $2061 = 0, $20614 = 0, $20618 = 0, $2062 = 0, $2063 = 0, $20634 = 0, $20636 = 0, $2064 = 0, $20640 = 0, $20645 = 0, $20647 = 0, $2065 = 0, $20652 = 0, $20657 = 0, $2066 = 0, $20662 = 0, $20666 = 0, $2067 = 0, $20679 = 0, $2068 = 0, $20681 = 0, $20685 = 0, $2069 = 0, $20690 = 0, $20692 = 0, $20697 = 0, $207 = 0, $2070 = 0, $20702 = 0, $20707 = 0, $2071 = 0, $20711 = 0, $2072 = 0, $20724 = 0, $20726 = 0, $2073 = 0, $20730 = 0, $20735 = 0, $20737 = 0, $2074 = 0, $20742 = 0, $20747 = 0, $2075 = 0, $20752 = 0, $20756 = 0, $2076 = 0, $2077 = 0, $20772 = 0, $20774 = 0, $20778 = 0, $2078 = 0, $20783 = 0, $20785 = 0, $2079 = 0, $20790 = 0, $20795 = 0, $208 = 0, $2080 = 0, $20800 = 0, $20804 = 0, $2081 = 0, $2082 = 0, $2083 = 0, $2084 = 0, $2085 = 0, $20852 = 0, $20854 = 0, $20856 = 0, $2086 = 0, $20860 = 0, $20866 = 0, $2087 = 0, $20871 = 0, $20873 = 0, $20878 = 0, $2088 = 0, $20883 = 0, $20888 = 0, $2089 = 0, $20892 = 0, $209 = 0, $2090 = 0, $2091 = 0, $2092 = 0, $2093 = 0, $2094 = 0, $20940 = 0, $20942 = 0, $20944 = 0, $20948 = 0, $2095 = 0, $20952 = 0, $20956 = 0, $2096 = 0, $20960 = 0, $20964 = 0, $20968 = 0, $2097 = 0, $20972 = 0, $20976 = 0, $2098 = 0, $20980 = 0, $20984 = 0, $20988 = 0, $2099 = 0, $20992 = 0, $20996 = 0, $21 = 0, $210 = 0, $2100 = 0, $21000 = 0, $21004 = 0, $21008 = 0, $2101 = 0, $21012 = 0, $21016 = 0, $2102 = 0, $21020 = 0, $21024 = 0, $21028 = 0, $2103 = 0, $21032 = 0, $21036 = 0, $2104 = 0, $21040 = 0, $21044 = 0, $21048 = 0, $2105 = 0, $21052 = 0, $21056 = 0, $2106 = 0, $21060 = 0, $21064 = 0, $21068 = 0, $2107 = 0, $21072 = 0, $21076 = 0, $2108 = 0, $21080 = 0, $21086 = 0, $2109 = 0, $21091 = 0, $21093 = 0, $21098 = 0, $211 = 0, $2110 = 0, $21103 = 0, $21108 = 0, $2111 = 0, $21112 = 0, $2112 = 0, $2113 = 0, $2114 = 0, $2115 = 0, $2116 = 0, $21160 = 0, $21162 = 0, $21166 = 0, $2117 = 0, $21171 = 0, $21173 = 0, $21178 = 0, $2118 = 0, $21183 = 0, $21188 = 0, $2119 = 0, $21192 = 0, $212 = 0, $2120 = 0, $2121 = 0, $21215 = 0, $21217 = 0, $2122 = 0, $21221 = 0, $21226 = 0, $21228 = 0, $2123 = 0, $21233 = 0, $21238 = 0, $2124 = 0, $21243 = 0, $21247 = 0, $2125 = 0, $2126 = 0, $2127 = 0, $21278 = 0, $2128 = 0, $21280 = 0, $21284 = 0, $21289 = 0, $2129 = 0, $21291 = 0, $21296 = 0, $213 = 0, $2130 = 0, $21301 = 0, $21306 = 0, $2131 = 0, $21310 = 0, $2132 = 0, $21324 = 0, $21326 = 0, $2133 = 0, $21330 = 0, $21335 = 0, $21337 = 0, $2134 = 0, $21342 = 0, $21347 = 0, $2135 = 0, $21352 = 0, $21356 = 0, $2136 = 0, $2137 = 0, $2138 = 0, $2139 = 0, $214 = 0, $2140 = 0, $21404 = 0, $21406 = 0, $2141 = 0, $21410 = 0, $21415 = 0, $21417 = 0, $2142 = 0, $21422 = 0, $21427 = 0, $2143 = 0, $21432 = 0, $21436 = 0, $2144 = 0, $2145 = 0, $2146 = 0, $2147 = 0, $2148 = 0, $21482 = 0, $21484 = 0, $21486 = 0, $2149 = 0, $21490 = 0, $21494 = 0, $21498 = 0, $215 = 0, $2150 = 0, $21502 = 0, $21506 = 0, $2151 = 0, $21510 = 0, $21514 = 0, $21518 = 0, $2152 = 0, $21522 = 0, $21526 = 0, $2153 = 0, $21530 = 0, $21534 = 0, $21538 = 0, $2154 = 0, $21542 = 0, $21546 = 0, $2155 = 0, $21550 = 0, $21554 = 0, $21558 = 0, $2156 = 0, $21562 = 0, $21566 = 0, $2157 = 0, $21570 = 0, $21574 = 0, $21578 = 0, $2158 = 0, $21582 = 0, $21586 = 0, $2159 = 0, $21590 = 0, $21594 = 0, $21598 = 0, $216 = 0, $2160 = 0, $21602 = 0, $21606 = 0, $2161 = 0, $21610 = 0, $21614 = 0, $21618 = 0, $2162 = 0, $21622 = 0, $21626 = 0, $2163 = 0, $21630 = 0, $21634 = 0, $21638 = 0, $2164 = 0, $21642 = 0, $21646 = 0, $2165 = 0, $21650 = 0, $21654 = 0, $21658 = 0, $2166 = 0, $21662 = 0, $21666 = 0, $2167 = 0, $21670 = 0, $21674 = 0, $21678 = 0, $2168 = 0, $21682 = 0, $21686 = 0, $2169 = 0, $21690 = 0, $21694 = 0, $21698 = 0, $217 = 0, $2170 = 0, $21702 = 0, $21706 = 0, $2171 = 0, $21710 = 0, $21714 = 0, $21718 = 0, $2172 = 0, $21722 = 0, $21726 = 0, $2173 = 0, $21730 = 0, $21734 = 0, $21738 = 0, $2174 = 0, $21742 = 0, $21746 = 0, $2175 = 0, $21750 = 0, $21754 = 0, $21758 = 0, $2176 = 0, $21762 = 0, $21766 = 0, $2177 = 0, $21770 = 0, $21774 = 0, $21778 = 0, $2178 = 0, $21782 = 0, $21786 = 0, $2179 = 0, $21790 = 0, $21794 = 0, $21798 = 0, $218 = 0, $2180 = 0, $21802 = 0, $21806 = 0, $2181 = 0, $21810 = 0, $21814 = 0, $21818 = 0, $2182 = 0, $21822 = 0, $21826 = 0, $2183 = 0, $21830 = 0, $21834 = 0, $21838 = 0, $2184 = 0, $21842 = 0, $21846 = 0, $2185 = 0, $21850 = 0, $21854 = 0, $21858 = 0, $2186 = 0, $21862 = 0, $21866 = 0, $2187 = 0, $21870 = 0, $21874 = 0, $21878 = 0, $2188 = 0, $21882 = 0, $21886 = 0, $2189 = 0, $21890 = 0, $21894 = 0, $21898 = 0, $219 = 0, $2190 = 0, $21902 = 0, $21906 = 0, $2191 = 0, $21910 = 0, $21914 = 0, $21918 = 0, $2192 = 0, $21922 = 0, $21926 = 0, $2193 = 0, $21930 = 0, $21934 = 0, $21938 = 0, $2194 = 0, $21942 = 0, $21946 = 0, $2195 = 0, $21950 = 0, $21954 = 0, $21958 = 0, $2196 = 0, $21962 = 0, $21966 = 0, $2197 = 0, $21970 = 0, $21974 = 0, $21978 = 0, $2198 = 0, $21982 = 0, $21986 = 0, $2199 = 0, $21990 = 0, $21994 = 0, $21998 = 0, $22 = 0, $220 = 0, $2200 = 0, $22002 = 0, $22006 = 0, $2201 = 0, $22010 = 0, $22014 = 0, $22018 = 0, $2202 = 0, $22022 = 0, $22026 = 0, $2203 = 0, $22030 = 0, $22034 = 0, $22038 = 0, $2204 = 0, $22042 = 0, $22046 = 0, $2205 = 0, $22050 = 0, $22054 = 0, $22058 = 0, $2206 = 0, $22062 = 0, $22066 = 0, $2207 = 0, $22070 = 0, $22074 = 0, $22078 = 0, $2208 = 0, $22082 = 0, $22086 = 0, $2209 = 0, $22090 = 0, $22094 = 0, $22098 = 0, $221 = 0, $2210 = 0, $22102 = 0, $22106 = 0, $2211 = 0, $22110 = 0, $22114 = 0, $22118 = 0, $2212 = 0, $22122 = 0, $22126 = 0, $2213 = 0, $22130 = 0, $22134 = 0, $2214 = 0, $22140 = 0, $22145 = 0, $22147 = 0, $2215 = 0, $22152 = 0, $22157 = 0, $2216 = 0, $22162 = 0, $22166 = 0, $2217 = 0, $2218 = 0, $2219 = 0, $22197 = 0, $22199 = 0, $222 = 0, $2220 = 0, $22203 = 0, $22208 = 0, $2221 = 0, $22210 = 0, $22215 = 0, $2222 = 0, $22220 = 0, $22225 = 0, $22229 = 0, $2223 = 0, $2224 = 0, $2225 = 0, $22256 = 0, $22258 = 0, $2226 = 0, $22262 = 0, $22267 = 0, $22269 = 0, $2227 = 0, $22274 = 0, $22279 = 0, $2228 = 0, $22284 = 0, $22288 = 0, $2229 = 0, $223 = 0, $2230 = 0, $2231 = 0, $22313 = 0, $22315 = 0, $22319 = 0, $2232 = 0, $22324 = 0, $22326 = 0, $2233 = 0, $22331 = 0, $22336 = 0, $2234 = 0, $22341 = 0, $22345 = 0, $2235 = 0, $2236 = 0, $22362 = 0, $22364 = 0, $22368 = 0, $2237 = 0, $22373 = 0, $22375 = 0, $2238 = 0, $22380 = 0, $22385 = 0, $2239 = 0, $22390 = 0, $22394 = 0, $224 = 0, $2240 = 0, $2241 = 0, $22419 = 0, $2242 = 0, $22421 = 0, $22425 = 0, $2243 = 0, $22430 = 0, $22432 = 0, $22437 = 0, $2244 = 0, $22442 = 0, $22447 = 0, $2245 = 0, $22451 = 0, $2246 = 0, $22468 = 0, $2247 = 0, $22470 = 0, $22474 = 0, $22479 = 0, $2248 = 0, $22481 = 0, $22486 = 0, $2249 = 0, $22491 = 0, $22496 = 0, $225 = 0, $2250 = 0, $22500 = 0, $2251 = 0, $2252 = 0, $22526 = 0, $22528 = 0, $2253 = 0, $22532 = 0, $22537 = 0, $22539 = 0, $2254 = 0, $22544 = 0, $22549 = 0, $2255 = 0, $22554 = 0, $22558 = 0, $2256 = 0, $2257 = 0, $2258 = 0, $22584 = 0, $22586 = 0, $2259 = 0, $22590 = 0, $22595 = 0, $22597 = 0, $226 = 0, $2260 = 0, $22602 = 0, $22607 = 0, $2261 = 0, $22612 = 0, $22616 = 0, $2262 = 0, $2263 = 0, $2264 = 0, $22642 = 0, $22644 = 0, $22648 = 0, $2265 = 0, $22653 = 0, $22655 = 0, $2266 = 0, $22660 = 0, $22665 = 0, $2267 = 0, $22670 = 0, $22674 = 0, $2268 = 0, $2269 = 0, $227 = 0, $2270 = 0, $22700 = 0, $22702 = 0, $22706 = 0, $2271 = 0, $22711 = 0, $22713 = 0, $22718 = 0, $2272 = 0, $22723 = 0, $22728 = 0, $2273 = 0, $22732 = 0, $2274 = 0, $2275 = 0, $22758 = 0, $2276 = 0, $22760 = 0, $22764 = 0, $22769 = 0, $2277 = 0, $22771 = 0, $22776 = 0, $2278 = 0, $22781 = 0, $22786 = 0, $2279 = 0, $22790 = 0, $228 = 0, $2280 = 0, $2281 = 0, $2282 = 0, $2283 = 0, $2284 = 0, $22845 = 0, $22847 = 0, $2285 = 0, $22851 = 0, $22856 = 0, $22858 = 0, $2286 = 0, $22863 = 0, $22868 = 0, $2287 = 0, $22873 = 0, $22877 = 0, $2288 = 0, $2289 = 0, $22894 = 0, $22896 = 0, $229 = 0, $2290 = 0, $22900 = 0, $22905 = 0, $22907 = 0, $2291 = 0, $22912 = 0, $22917 = 0, $2292 = 0, $22922 = 0, $22926 = 0, $2293 = 0, $2294 = 0, $2295 = 0, $2296 = 0, $22964 = 0, $22966 = 0, $2297 = 0, $22970 = 0, $22975 = 0, $22977 = 0, $2298 = 0, $22982 = 0, $22987 = 0, $2299 = 0, $22992 = 0, $22996 = 0, $23 = 0, $230 = 0, $2300 = 0, $2301 = 0, $2302 = 0, $23022 = 0, $23024 = 0, $23028 = 0, $2303 = 0, $23033 = 0, $23035 = 0, $2304 = 0, $23040 = 0, $23045 = 0, $2305 = 0, $23050 = 0, $23054 = 0, $2306 = 0, $2307 = 0, $2308 = 0, $23080 = 0, $23082 = 0, $23086 = 0, $2309 = 0, $23091 = 0, $23093 = 0, $23098 = 0, $231 = 0, $2310 = 0, $23103 = 0, $23108 = 0, $2311 = 0, $23112 = 0, $2312 = 0, $2313 = 0, $23135 = 0, $23137 = 0, $2314 = 0, $23141 = 0, $23146 = 0, $23148 = 0, $2315 = 0, $23153 = 0, $23158 = 0, $2316 = 0, $23163 = 0, $23167 = 0, $2317 = 0, $2318 = 0, $2319 = 0, $232 = 0, $2320 = 0, $23201 = 0, $23203 = 0, $23207 = 0, $2321 = 0, $23212 = 0, $23214 = 0, $23219 = 0, $2322 = 0, $23224 = 0, $23229 = 0, $2323 = 0, $23233 = 0, $2324 = 0, $2325 = 0, $2326 = 0, $23267 = 0, $23269 = 0, $2327 = 0, $23273 = 0, $23278 = 0, $2328 = 0, $23280 = 0, $23285 = 0, $2329 = 0, $23290 = 0, $23295 = 0, $23299 = 0, $233 = 0, $2330 = 0, $2331 = 0, $2332 = 0, $23322 = 0, $23324 = 0, $23328 = 0, $2333 = 0, $23333 = 0, $23335 = 0, $2334 = 0, $23340 = 0, $23345 = 0, $2335 = 0, $23350 = 0, $23354 = 0, $2336 = 0, $2337 = 0, $2338 = 0, $23380 = 0, $23382 = 0, $23386 = 0, $2339 = 0, $23391 = 0, $23393 = 0, $23398 = 0, $234 = 0, $2340 = 0, $23403 = 0, $23408 = 0, $2341 = 0, $23412 = 0, $2342 = 0, $2343 = 0, $23436 = 0, $23438 = 0, $2344 = 0, $23442 = 0, $23447 = 0, $23449 = 0, $2345 = 0, $23454 = 0, $23459 = 0, $2346 = 0, $23464 = 0, $23468 = 0, $2347 = 0, $2348 = 0, $2349 = 0, $23492 = 0, $23494 = 0, $23496 = 0, $235 = 0, $2350 = 0, $23500 = 0, $23504 = 0, $2351 = 0, $23510 = 0, $23515 = 0, $23517 = 0, $2352 = 0, $23522 = 0, $23527 = 0, $2353 = 0, $23532 = 0, $23536 = 0, $2354 = 0, $2355 = 0, $2356 = 0, $23561 = 0, $23563 = 0, $23567 = 0, $2357 = 0, $23572 = 0, $23574 = 0, $23579 = 0, $2358 = 0, $23584 = 0, $23589 = 0, $2359 = 0, $23593 = 0, $236 = 0, $2360 = 0, $2361 = 0, $23610 = 0, $23612 = 0, $23614 = 0, $23618 = 0, $2362 = 0, $23622 = 0, $23626 = 0, $2363 = 0, $23630 = 0, $23634 = 0, $23638 = 0, $2364 = 0, $23642 = 0, $23646 = 0, $2365 = 0, $23650 = 0, $23654 = 0, $23658 = 0, $2366 = 0, $23662 = 0, $23666 = 0, $2367 = 0, $23670 = 0, $23674 = 0, $23678 = 0, $2368 = 0, $23682 = 0, $23686 = 0, $2369 = 0, $23690 = 0, $23694 = 0, $23698 = 0, $237 = 0, $2370 = 0, $23702 = 0, $23706 = 0, $2371 = 0, $23710 = 0, $23714 = 0, $23718 = 0, $2372 = 0, $23722 = 0, $23726 = 0, $2373 = 0, $23730 = 0, $23734 = 0, $23738 = 0, $2374 = 0, $23742 = 0, $23746 = 0, $2375 = 0, $23750 = 0, $23754 = 0, $23758 = 0, $2376 = 0, $23762 = 0, $23766 = 0, $2377 = 0, $23770 = 0, $23774 = 0, $23778 = 0, $2378 = 0, $23782 = 0, $23786 = 0, $2379 = 0, $23790 = 0, $23794 = 0, $23798 = 0, $238 = 0, $2380 = 0, $23802 = 0, $23806 = 0, $2381 = 0, $23810 = 0, $23814 = 0, $23818 = 0, $2382 = 0, $23822 = 0, $23826 = 0, $2383 = 0, $23830 = 0, $23834 = 0, $23838 = 0, $2384 = 0, $23842 = 0, $23846 = 0, $2385 = 0, $23850 = 0, $23854 = 0, $23858 = 0, $2386 = 0, $23862 = 0, $23866 = 0, $2387 = 0, $23870 = 0, $23874 = 0, $23878 = 0, $2388 = 0, $23882 = 0, $23886 = 0, $2389 = 0, $23890 = 0, $23894 = 0, $23898 = 0, $239 = 0, $2390 = 0, $23902 = 0, $23906 = 0, $2391 = 0, $23910 = 0, $23914 = 0, $23918 = 0, $2392 = 0, $23922 = 0, $23926 = 0, $2393 = 0, $23930 = 0, $23934 = 0, $23938 = 0, $2394 = 0, $23942 = 0, $23946 = 0, $2395 = 0, $23950 = 0, $23954 = 0, $23958 = 0, $2396 = 0, $23962 = 0, $23966 = 0, $2397 = 0, $23970 = 0, $23974 = 0, $23978 = 0, $2398 = 0, $23982 = 0, $23986 = 0, $2399 = 0, $23990 = 0, $23994 = 0, $23998 = 0, $24 = 0, $240 = 0, $2400 = 0, $24002 = 0, $24006 = 0, $2401 = 0, $24010 = 0, $24014 = 0, $24018 = 0, $2402 = 0, $24022 = 0, $24026 = 0, $2403 = 0, $24030 = 0, $24034 = 0, $24038 = 0, $2404 = 0, $24042 = 0, $24046 = 0, $2405 = 0, $24050 = 0, $24054 = 0, $24058 = 0, $2406 = 0, $24062 = 0, $24066 = 0, $2407 = 0, $24070 = 0, $24074 = 0, $24078 = 0, $2408 = 0, $24082 = 0, $24086 = 0, $2409 = 0, $24090 = 0, $24094 = 0, $24098 = 0, $241 = 0, $2410 = 0, $24102 = 0, $24106 = 0, $2411 = 0, $24110 = 0, $24114 = 0, $24118 = 0, $2412 = 0, $24122 = 0, $24126 = 0, $2413 = 0, $24130 = 0, $24134 = 0, $24138 = 0, $2414 = 0, $24142 = 0, $24146 = 0, $2415 = 0, $24150 = 0, $24154 = 0, $24158 = 0, $2416 = 0, $24162 = 0, $24166 = 0, $2417 = 0, $24170 = 0, $24174 = 0, $24178 = 0, $2418 = 0, $24182 = 0, $24186 = 0, $2419 = 0, $24190 = 0, $24194 = 0, $24198 = 0, $242 = 0, $2420 = 0, $24202 = 0, $24206 = 0, $2421 = 0, $24210 = 0, $24214 = 0, $24218 = 0, $2422 = 0, $24222 = 0, $24226 = 0, $2423 = 0, $24230 = 0, $24234 = 0, $24238 = 0, $2424 = 0, $24242 = 0, $24246 = 0, $2425 = 0, $24250 = 0, $24254 = 0, $24258 = 0, $2426 = 0, $24262 = 0, $24266 = 0, $2427 = 0, $24270 = 0, $24274 = 0, $24278 = 0, $2428 = 0, $24282 = 0, $24286 = 0, $2429 = 0, $24290 = 0, $24294 = 0, $24298 = 0, $243 = 0, $2430 = 0, $24302 = 0, $24306 = 0, $2431 = 0, $24310 = 0, $24314 = 0, $24318 = 0, $2432 = 0, $24322 = 0, $24326 = 0, $2433 = 0, $24330 = 0, $24334 = 0, $24338 = 0, $2434 = 0, $24342 = 0, $24346 = 0, $2435 = 0, $24350 = 0, $24354 = 0, $24358 = 0, $2436 = 0, $24362 = 0, $24366 = 0, $2437 = 0, $24370 = 0, $24374 = 0, $24378 = 0, $2438 = 0, $24382 = 0, $24386 = 0, $2439 = 0, $24390 = 0, $24394 = 0, $24398 = 0, $244 = 0, $2440 = 0, $24402 = 0, $24406 = 0, $2441 = 0, $24410 = 0, $24414 = 0, $24418 = 0, $2442 = 0, $24422 = 0, $24426 = 0, $2443 = 0, $24430 = 0, $24434 = 0, $24438 = 0, $2444 = 0, $24442 = 0, $24446 = 0, $2445 = 0, $24450 = 0, $24454 = 0, $24458 = 0, $2446 = 0, $24462 = 0, $24466 = 0, $2447 = 0, $24470 = 0, $24474 = 0, $24478 = 0, $2448 = 0, $24482 = 0, $24486 = 0, $2449 = 0, $24490 = 0, $24494 = 0, $24498 = 0, $245 = 0, $2450 = 0, $24502 = 0, $24506 = 0, $2451 = 0, $24510 = 0, $24514 = 0, $24518 = 0, $2452 = 0, $24522 = 0, $24526 = 0, $2453 = 0, $24530 = 0, $24534 = 0, $24538 = 0, $2454 = 0, $24542 = 0, $24546 = 0, $2455 = 0, $24550 = 0, $24554 = 0, $24558 = 0, $2456 = 0, $24562 = 0, $24566 = 0, $2457 = 0, $24570 = 0, $24574 = 0, $24578 = 0, $2458 = 0, $24582 = 0, $24586 = 0, $2459 = 0, $24590 = 0, $24594 = 0, $24598 = 0, $246 = 0, $2460 = 0, $24602 = 0, $24606 = 0, $2461 = 0, $24610 = 0, $24614 = 0, $24618 = 0, $2462 = 0, $24622 = 0, $24626 = 0, $2463 = 0, $24630 = 0, $24634 = 0, $24638 = 0, $2464 = 0, $24642 = 0, $24646 = 0, $2465 = 0, $24650 = 0, $24654 = 0, $24658 = 0, $2466 = 0, $24662 = 0, $24666 = 0, $2467 = 0, $24670 = 0, $24674 = 0, $24678 = 0, $2468 = 0, $24682 = 0, $24686 = 0, $2469 = 0, $24690 = 0, $24694 = 0, $24698 = 0, $247 = 0, $2470 = 0, $24702 = 0, $24706 = 0, $2471 = 0, $24710 = 0, $24714 = 0, $24718 = 0, $2472 = 0, $24722 = 0, $24726 = 0, $2473 = 0, $24730 = 0, $24734 = 0, $24738 = 0, $2474 = 0, $24742 = 0, $24746 = 0, $2475 = 0, $24750 = 0, $24754 = 0, $24758 = 0, $2476 = 0, $24762 = 0, $24766 = 0, $2477 = 0, $24770 = 0, $24774 = 0, $24778 = 0, $2478 = 0, $24782 = 0, $24786 = 0, $2479 = 0, $24790 = 0, $24794 = 0, $24798 = 0, $248 = 0, $2480 = 0, $24802 = 0, $24806 = 0, $2481 = 0, $24810 = 0, $24814 = 0, $24818 = 0, $2482 = 0, $24822 = 0, $24826 = 0, $2483 = 0, $24830 = 0, $24834 = 0, $24838 = 0, $2484 = 0, $24842 = 0, $24846 = 0, $2485 = 0, $24850 = 0, $24854 = 0, $24858 = 0, $2486 = 0, $24862 = 0, $24866 = 0, $2487 = 0, $24870 = 0, $24874 = 0, $24878 = 0, $2488 = 0, $24882 = 0, $24886 = 0, $2489 = 0, $24890 = 0, $24894 = 0, $24898 = 0, $249 = 0, $2490 = 0, $24902 = 0, $24906 = 0, $2491 = 0, $24910 = 0, $24914 = 0, $24918 = 0, $2492 = 0, $24922 = 0, $24926 = 0, $2493 = 0, $24930 = 0, $24934 = 0, $24938 = 0, $2494 = 0, $24942 = 0, $24946 = 0, $2495 = 0, $24950 = 0, $24954 = 0, $24958 = 0, $2496 = 0, $24962 = 0, $24966 = 0, $2497 = 0, $24970 = 0, $24974 = 0, $24978 = 0, $2498 = 0, $24982 = 0, $24986 = 0, $2499 = 0, $24990 = 0, $24994 = 0, $24998 = 0, $25 = 0, $250 = 0, $2500 = 0, $25002 = 0, $25006 = 0, $2501 = 0, $25010 = 0, $25014 = 0, $25018 = 0, $2502 = 0, $25022 = 0, $25026 = 0, $2503 = 0, $25030 = 0, $25034 = 0, $25038 = 0, $2504 = 0, $25042 = 0, $25046 = 0, $2505 = 0, $25050 = 0, $25054 = 0, $25058 = 0, $2506 = 0, $25062 = 0, $25066 = 0, $2507 = 0, $25070 = 0, $25074 = 0, $25078 = 0, $2508 = 0, $25082 = 0, $25086 = 0, $2509 = 0, $25090 = 0, $25094 = 0, $25098 = 0, $251 = 0, $2510 = 0, $25102 = 0, $25106 = 0, $2511 = 0, $25110 = 0, $25114 = 0, $25118 = 0, $2512 = 0, $25122 = 0, $25126 = 0, $2513 = 0, $25130 = 0, $25134 = 0, $25138 = 0, $2514 = 0, $25142 = 0, $25146 = 0, $2515 = 0, $25150 = 0, $25154 = 0, $25158 = 0, $2516 = 0, $25162 = 0, $25166 = 0, $2517 = 0, $25170 = 0, $25174 = 0, $25178 = 0, $2518 = 0, $25182 = 0, $25186 = 0, $2519 = 0, $25190 = 0, $25194 = 0, $25198 = 0, $252 = 0, $2520 = 0, $25202 = 0, $25206 = 0, $2521 = 0, $25210 = 0, $25214 = 0, $25218 = 0, $2522 = 0, $25222 = 0, $25226 = 0, $2523 = 0, $25230 = 0, $25234 = 0, $25238 = 0, $2524 = 0, $25242 = 0, $25246 = 0, $2525 = 0, $25250 = 0, $25254 = 0, $25258 = 0, $2526 = 0, $25262 = 0, $25266 = 0, $2527 = 0, $25270 = 0, $25274 = 0, $25278 = 0, $2528 = 0, $25282 = 0, $25286 = 0, $2529 = 0, $25290 = 0, $25294 = 0, $25298 = 0, $253 = 0, $2530 = 0, $25302 = 0, $25306 = 0, $2531 = 0, $25310 = 0, $25314 = 0, $25318 = 0, $2532 = 0, $25322 = 0, $25326 = 0, $2533 = 0, $25330 = 0, $25334 = 0, $25338 = 0, $2534 = 0, $25342 = 0, $25346 = 0, $2535 = 0, $25350 = 0, $25354 = 0, $25358 = 0, $2536 = 0, $25362 = 0, $25366 = 0, $2537 = 0, $25370 = 0, $25374 = 0, $25378 = 0, $2538 = 0, $25382 = 0, $25386 = 0, $2539 = 0, $25390 = 0, $25394 = 0, $25398 = 0, $254 = 0, $2540 = 0, $25402 = 0, $25406 = 0, $2541 = 0, $25410 = 0, $25414 = 0, $25418 = 0, $2542 = 0, $25422 = 0, $25426 = 0, $2543 = 0, $25430 = 0, $25434 = 0, $25438 = 0, $2544 = 0, $25442 = 0, $25446 = 0, $2545 = 0, $25450 = 0, $25454 = 0, $25458 = 0, $2546 = 0, $25462 = 0, $25466 = 0, $2547 = 0, $25472 = 0, $25477 = 0, $25479 = 0, $2548 = 0, $25484 = 0, $25489 = 0, $2549 = 0, $25494 = 0, $25498 = 0, $255 = 0, $2550 = 0, $2551 = 0, $2552 = 0, $2553 = 0, $2554 = 0, $25547 = 0, $25549 = 0, $2555 = 0, $25553 = 0, $25558 = 0, $2556 = 0, $25560 = 0, $25565 = 0, $2557 = 0, $25570 = 0, $25575 = 0, $25579 = 0, $2558 = 0, $2559 = 0, $256 = 0, $2560 = 0, $2561 = 0, $25615 = 0, $25617 = 0, $2562 = 0, $25621 = 0, $25626 = 0, $25628 = 0, $2563 = 0, $25633 = 0, $25638 = 0, $2564 = 0, $25643 = 0, $25647 = 0, $2565 = 0, $2566 = 0, $2567 = 0, $25673 = 0, $25675 = 0, $25679 = 0, $2568 = 0, $25684 = 0, $25686 = 0, $2569 = 0, $25691 = 0, $25696 = 0, $257 = 0, $2570 = 0, $25701 = 0, $25705 = 0, $2571 = 0, $2572 = 0, $2573 = 0, $25730 = 0, $25732 = 0, $25736 = 0, $2574 = 0, $25741 = 0, $25743 = 0, $25748 = 0, $2575 = 0, $25753 = 0, $25758 = 0, $2576 = 0, $25762 = 0, $2577 = 0, $2578 = 0, $2579 = 0, $25795 = 0, $25797 = 0, $258 = 0, $2580 = 0, $25801 = 0, $25806 = 0, $25808 = 0, $2581 = 0, $25813 = 0, $25818 = 0, $2582 = 0, $25823 = 0, $25827 = 0, $2583 = 0, $2584 = 0, $25841 = 0, $25843 = 0, $25847 = 0, $2585 = 0, $25852 = 0, $25854 = 0, $25859 = 0, $2586 = 0, $25864 = 0, $25869 = 0, $2587 = 0, $25873 = 0, $2588 = 0, $2589 = 0, $25896 = 0, $25898 = 0, $259 = 0, $2590 = 0, $25902 = 0, $25907 = 0, $25909 = 0, $2591 = 0, $25914 = 0, $25919 = 0, $2592 = 0, $25924 = 0, $25928 = 0, $2593 = 0, $2594 = 0, $2595 = 0, $2596 = 0, $25961 = 0, $25963 = 0, $25967 = 0, $2597 = 0, $25972 = 0, $25974 = 0, $25979 = 0, $2598 = 0, $25984 = 0, $25989 = 0, $2599 = 0, $25993 = 0, $26 = 0, $260 = 0, $2600 = 0, $2601 = 0, $26017 = 0, $26019 = 0, $2602 = 0, $26023 = 0, $26028 = 0, $2603 = 0, $26030 = 0, $26035 = 0, $2604 = 0, $26040 = 0, $26045 = 0, $26049 = 0, $2605 = 0, $2606 = 0, $26064 = 0, $26066 = 0, $2607 = 0, $26070 = 0, $26075 = 0, $26077 = 0, $2608 = 0, $26082 = 0, $26087 = 0, $2609 = 0, $26092 = 0, $26096 = 0, $261 = 0, $2610 = 0, $2611 = 0, $26117 = 0, $26119 = 0, $2612 = 0, $26123 = 0, $26128 = 0, $2613 = 0, $26130 = 0, $26135 = 0, $2614 = 0, $26140 = 0, $26145 = 0, $26149 = 0, $2615 = 0, $2616 = 0, $2617 = 0, $26170 = 0, $26172 = 0, $26176 = 0, $2618 = 0, $26181 = 0, $26183 = 0, $26188 = 0, $2619 = 0, $26193 = 0, $26198 = 0, $262 = 0, $2620 = 0, $26202 = 0, $2621 = 0, $2622 = 0, $26223 = 0, $26225 = 0, $26229 = 0, $2623 = 0, $26234 = 0, $26236 = 0, $2624 = 0, $26241 = 0, $26246 = 0, $2625 = 0, $26251 = 0, $26255 = 0, $2626 = 0, $2627 = 0, $2628 = 0, $2629 = 0, $263 = 0, $2630 = 0, $26305 = 0, $26307 = 0, $2631 = 0, $26311 = 0, $26316 = 0, $26318 = 0, $2632 = 0, $26323 = 0, $26328 = 0, $2633 = 0, $26333 = 0, $26337 = 0, $2634 = 0, $2635 = 0, $2636 = 0, $2637 = 0, $2638 = 0, $26387 = 0, $26389 = 0, $2639 = 0, $26393 = 0, $26398 = 0, $264 = 0, $2640 = 0, $26400 = 0, $26405 = 0, $2641 = 0, $26410 = 0, $26415 = 0, $26419 = 0, $2642 = 0, $2643 = 0, $2644 = 0, $2645 = 0, $26450 = 0, $26452 = 0, $26456 = 0, $2646 = 0, $26461 = 0, $26463 = 0, $26468 = 0, $2647 = 0, $26473 = 0, $26478 = 0, $2648 = 0, $26482 = 0, $2649 = 0, $265 = 0, $2650 = 0, $26503 = 0, $26505 = 0, $26509 = 0, $2651 = 0, $26514 = 0, $26516 = 0, $2652 = 0, $26521 = 0, $26526 = 0, $2653 = 0, $26531 = 0, $26535 = 0, $2654 = 0, $2655 = 0, $26550 = 0, $26552 = 0, $26556 = 0, $2656 = 0, $26561 = 0, $26563 = 0, $26568 = 0, $2657 = 0, $26573 = 0, $26578 = 0, $2658 = 0, $26582 = 0, $2659 = 0, $26597 = 0, $26599 = 0, $266 = 0, $2660 = 0, $26603 = 0, $26608 = 0, $2661 = 0, $26610 = 0, $26615 = 0, $2662 = 0, $26620 = 0, $26625 = 0, $26629 = 0, $2663 = 0, $2664 = 0, $26642 = 0, $26644 = 0, $26648 = 0, $2665 = 0, $26653 = 0, $26655 = 0, $2666 = 0, $26660 = 0, $26665 = 0, $2667 = 0, $26670 = 0, $26674 = 0, $2668 = 0, $26689 = 0, $2669 = 0, $26691 = 0, $26695 = 0, $267 = 0, $2670 = 0, $26700 = 0, $26702 = 0, $26707 = 0, $2671 = 0, $26712 = 0, $26717 = 0, $2672 = 0, $26721 = 0, $2673 = 0, $26732 = 0, $26734 = 0, $26738 = 0, $2674 = 0, $26743 = 0, $26745 = 0, $2675 = 0, $26750 = 0, $26755 = 0, $2676 = 0, $26760 = 0, $26764 = 0, $2677 = 0, $26775 = 0, $26777 = 0, $2678 = 0, $26781 = 0, $26786 = 0, $26788 = 0, $2679 = 0, $26793 = 0, $26798 = 0, $268 = 0, $2680 = 0, $26803 = 0, $26807 = 0, $2681 = 0, $26818 = 0, $2682 = 0, $26820 = 0, $26824 = 0, $26829 = 0, $2683 = 0, $26831 = 0, $26836 = 0, $2684 = 0, $26841 = 0, $26846 = 0, $2685 = 0, $26850 = 0, $2686 = 0, $26861 = 0, $26863 = 0, $26867 = 0, $2687 = 0, $26872 = 0, $26874 = 0, $26879 = 0, $2688 = 0, $26884 = 0, $26889 = 0, $2689 = 0, $26893 = 0, $269 = 0, $2690 = 0, $26904 = 0, $26906 = 0, $2691 = 0, $26910 = 0, $26915 = 0, $26917 = 0, $2692 = 0, $26922 = 0, $26927 = 0, $2693 = 0, $26932 = 0, $26936 = 0, $2694 = 0, $26947 = 0, $26949 = 0, $2695 = 0, $26953 = 0, $26958 = 0, $2696 = 0, $26960 = 0, $26965 = 0, $2697 = 0, $26970 = 0, $26975 = 0, $26979 = 0, $2698 = 0, $2699 = 0, $26990 = 0, $26992 = 0, $26996 = 0, $27 = 0, $270 = 0, $2700 = 0, $27001 = 0, $27003 = 0, $27008 = 0, $2701 = 0, $27013 = 0, $27018 = 0, $2702 = 0, $27022 = 0, $2703 = 0, $27037 = 0, $27039 = 0, $2704 = 0, $27043 = 0, $27048 = 0, $2705 = 0, $27050 = 0, $27055 = 0, $2706 = 0, $27060 = 0, $27065 = 0, $27069 = 0, $2707 = 0, $2708 = 0, $27080 = 0, $27082 = 0, $27086 = 0, $2709 = 0, $27091 = 0, $27093 = 0, $27098 = 0, $271 = 0, $2710 = 0, $27103 = 0, $27108 = 0, $2711 = 0, $27112 = 0, $2712 = 0, $27123 = 0, $27125 = 0, $27129 = 0, $2713 = 0, $27134 = 0, $27136 = 0, $2714 = 0, $27141 = 0, $27146 = 0, $2715 = 0, $27151 = 0, $27155 = 0, $2716 = 0, $27167 = 0, $27169 = 0, $2717 = 0, $27173 = 0, $27178 = 0, $2718 = 0, $27180 = 0, $27185 = 0, $2719 = 0, $27190 = 0, $27195 = 0, $27199 = 0, $272 = 0, $2720 = 0, $2721 = 0, $2722 = 0, $27221 = 0, $27223 = 0, $27227 = 0, $2723 = 0, $27232 = 0, $27234 = 0, $27239 = 0, $2724 = 0, $27244 = 0, $27249 = 0, $2725 = 0, $27253 = 0, $2726 = 0, $27267 = 0, $27269 = 0, $2727 = 0, $27273 = 0, $27278 = 0, $2728 = 0, $27280 = 0, $27285 = 0, $2729 = 0, $27290 = 0, $27295 = 0, $27299 = 0, $273 = 0, $2730 = 0, $27309 = 0, $2731 = 0, $27310 = 0, $27312 = 0, $27314 = 0, $27315 = 0, $27317 = 0, $27319 = 0, $2732 = 0, $27320 = 0, $27322 = 0, $27324 = 0, $27325 = 0, $27327 = 0, $27329 = 0, $2733 = 0, $27330 = 0, $27332 = 0, $27334 = 0, $27335 = 0, $27337 = 0, $27339 = 0, $2734 = 0, $27340 = 0, $27342 = 0, $27344 = 0, $27345 = 0, $27347 = 0, $27349 = 0, $2735 = 0, $27350 = 0, $27352 = 0, $27354 = 0, $27355 = 0, $27357 = 0, $27359 = 0, $2736 = 0, $27360 = 0, $27362 = 0, $27364 = 0, $27365 = 0, $27367 = 0, $27369 = 0, $2737 = 0, $27370 = 0, $27372 = 0, $27374 = 0, $27375 = 0, $27377 = 0, $27379 = 0, $2738 = 0, $27380 = 0, $27382 = 0, $27384 = 0, $27385 = 0, $27387 = 0, $27389 = 0, $2739 = 0, $27391 = 0, $27395 = 0, $274 = 0, $2740 = 0, $27400 = 0, $27402 = 0, $27407 = 0, $2741 = 0, $27412 = 0, $27417 = 0, $2742 = 0, $27421 = 0, $2743 = 0, $27435 = 0, $27437 = 0, $2744 = 0, $27441 = 0, $27446 = 0, $27448 = 0, $2745 = 0, $27453 = 0, $27458 = 0, $2746 = 0, $27463 = 0, $27467 = 0, $2747 = 0, $2748 = 0, $2749 = 0, $27490 = 0, $27492 = 0, $27496 = 0, $275 = 0, $2750 = 0, $27501 = 0, $27503 = 0, $27508 = 0, $2751 = 0, $27513 = 0, $27518 = 0, $2752 = 0, $27522 = 0, $2753 = 0, $2754 = 0, $27548 = 0, $2755 = 0, $27550 = 0, $27554 = 0, $27559 = 0, $2756 = 0, $27561 = 0, $27566 = 0, $2757 = 0, $27571 = 0, $27576 = 0, $2758 = 0, $27580 = 0, $2759 = 0, $276 = 0, $2760 = 0, $27606 = 0, $27608 = 0, $2761 = 0, $27612 = 0, $27617 = 0, $27619 = 0, $2762 = 0, $27624 = 0, $27629 = 0, $2763 = 0, $27634 = 0, $27638 = 0, $2764 = 0, $2765 = 0, $2766 = 0, $27664 = 0, $27666 = 0, $27668 = 0, $2767 = 0, $27672 = 0, $27676 = 0, $2768 = 0, $27680 = 0, $27684 = 0, $27688 = 0, $2769 = 0, $27692 = 0, $27696 = 0, $277 = 0, $2770 = 0, $27700 = 0, $27704 = 0, $27708 = 0, $2771 = 0, $27712 = 0, $27716 = 0, $2772 = 0, $27720 = 0, $27724 = 0, $27728 = 0, $2773 = 0, $27732 = 0, $27736 = 0, $2774 = 0, $27740 = 0, $27744 = 0, $27748 = 0, $2775 = 0, $27752 = 0, $27756 = 0, $2776 = 0, $27760 = 0, $27764 = 0, $27768 = 0, $2777 = 0, $27772 = 0, $27776 = 0, $2778 = 0, $27780 = 0, $27784 = 0, $27788 = 0, $2779 = 0, $27792 = 0, $27796 = 0, $278 = 0, $2780 = 0, $27800 = 0, $27804 = 0, $27808 = 0, $2781 = 0, $27812 = 0, $27816 = 0, $2782 = 0, $27820 = 0, $27824 = 0, $27828 = 0, $2783 = 0, $27832 = 0, $27836 = 0, $2784 = 0, $27840 = 0, $27844 = 0, $27848 = 0, $2785 = 0, $27852 = 0, $27856 = 0, $2786 = 0, $27860 = 0, $27864 = 0, $27868 = 0, $2787 = 0, $27872 = 0, $27876 = 0, $2788 = 0, $27880 = 0, $27884 = 0, $27888 = 0, $2789 = 0, $27892 = 0, $27896 = 0, $279 = 0, $2790 = 0, $27900 = 0, $27904 = 0, $27908 = 0, $2791 = 0, $27912 = 0, $27916 = 0, $2792 = 0, $27920 = 0, $27924 = 0, $27928 = 0, $2793 = 0, $27932 = 0, $27936 = 0, $2794 = 0, $27940 = 0, $27944 = 0, $27948 = 0, $2795 = 0, $27952 = 0, $27956 = 0, $2796 = 0, $27960 = 0, $27964 = 0, $27968 = 0, $2797 = 0, $27972 = 0, $27976 = 0, $2798 = 0, $27980 = 0, $27984 = 0, $27988 = 0, $2799 = 0, $27992 = 0, $27996 = 0, $28 = 0, $280 = 0, $2800 = 0, $28000 = 0, $28004 = 0, $28008 = 0, $2801 = 0, $28012 = 0, $28016 = 0, $2802 = 0, $28020 = 0, $28024 = 0, $28028 = 0, $2803 = 0, $28032 = 0, $28036 = 0, $2804 = 0, $28040 = 0, $28044 = 0, $28048 = 0, $2805 = 0, $28052 = 0, $28056 = 0, $2806 = 0, $28060 = 0, $28064 = 0, $28068 = 0, $2807 = 0, $28072 = 0, $28076 = 0, $2808 = 0, $28080 = 0, $28084 = 0, $28088 = 0, $2809 = 0, $28092 = 0, $28096 = 0, $281 = 0, $2810 = 0, $28100 = 0, $28104 = 0, $28108 = 0, $2811 = 0, $28112 = 0, $28116 = 0, $2812 = 0, $28120 = 0, $28124 = 0, $28128 = 0, $2813 = 0, $28132 = 0, $28136 = 0, $2814 = 0, $28140 = 0, $28144 = 0, $28148 = 0, $2815 = 0, $28152 = 0, $28156 = 0, $2816 = 0, $28160 = 0, $28164 = 0, $28168 = 0, $2817 = 0, $28172 = 0, $28176 = 0, $2818 = 0, $28180 = 0, $28184 = 0, $28188 = 0, $2819 = 0, $28192 = 0, $28196 = 0, $282 = 0, $2820 = 0, $28200 = 0, $28204 = 0, $28208 = 0, $2821 = 0, $28212 = 0, $28216 = 0, $2822 = 0, $28220 = 0, $28224 = 0, $28228 = 0, $2823 = 0, $28232 = 0, $28236 = 0, $2824 = 0, $28240 = 0, $28244 = 0, $28248 = 0, $2825 = 0, $28252 = 0, $28256 = 0, $2826 = 0, $28260 = 0, $28264 = 0, $28268 = 0, $2827 = 0, $28272 = 0, $28276 = 0, $2828 = 0, $28282 = 0, $28287 = 0, $28289 = 0, $2829 = 0, $28294 = 0, $28299 = 0, $283 = 0, $2830 = 0, $28304 = 0, $28308 = 0, $2831 = 0, $2832 = 0, $2833 = 0, $28331 = 0, $28333 = 0, $28337 = 0, $2834 = 0, $28342 = 0, $28344 = 0, $28349 = 0, $2835 = 0, $28354 = 0, $28359 = 0, $2836 = 0, $28363 = 0, $2837 = 0, $2838 = 0, $28389 = 0, $2839 = 0, $28391 = 0, $28395 = 0, $284 = 0, $2840 = 0, $28400 = 0, $28402 = 0, $28407 = 0, $2841 = 0, $28412 = 0, $28417 = 0, $2842 = 0, $28421 = 0, $2843 = 0, $28432 = 0, $28434 = 0, $28438 = 0, $2844 = 0, $28443 = 0, $28445 = 0, $2845 = 0, $28450 = 0, $28455 = 0, $2846 = 0, $28460 = 0, $28464 = 0, $2847 = 0, $2848 = 0, $2849 = 0, $28493 = 0, $28495 = 0, $28499 = 0, $285 = 0, $2850 = 0, $28504 = 0, $28506 = 0, $2851 = 0, $28511 = 0, $28516 = 0, $2852 = 0, $28521 = 0, $28525 = 0, $2853 = 0, $2854 = 0, $28542 = 0, $28544 = 0, $28548 = 0, $2855 = 0, $28553 = 0, $28555 = 0, $2856 = 0, $28560 = 0, $28565 = 0, $2857 = 0, $28570 = 0, $28574 = 0, $2858 = 0, $2859 = 0, $286 = 0, $2860 = 0, $2861 = 0, $28612 = 0, $28614 = 0, $28618 = 0, $2862 = 0, $28623 = 0, $28625 = 0, $2863 = 0, $28630 = 0, $28635 = 0, $2864 = 0, $28640 = 0, $28644 = 0, $2865 = 0, $2866 = 0, $28664 = 0, $28666 = 0, $2867 = 0, $28670 = 0, $28675 = 0, $28677 = 0, $2868 = 0, $28682 = 0, $28687 = 0, $2869 = 0, $28692 = 0, $28696 = 0, $287 = 0, $2870 = 0, $28707 = 0, $28709 = 0, $2871 = 0, $28713 = 0, $28718 = 0, $2872 = 0, $28720 = 0, $28725 = 0, $2873 = 0, $28730 = 0, $28735 = 0, $28739 = 0, $2874 = 0, $2875 = 0, $28758 = 0, $2876 = 0, $28760 = 0, $28764 = 0, $28769 = 0, $2877 = 0, $28771 = 0, $28776 = 0, $2878 = 0, $28781 = 0, $28786 = 0, $2879 = 0, $28790 = 0, $288 = 0, $2880 = 0, $28801 = 0, $28803 = 0, $28807 = 0, $2881 = 0, $28812 = 0, $28814 = 0, $28819 = 0, $2882 = 0, $28824 = 0, $28829 = 0, $2883 = 0, $28833 = 0, $2884 = 0, $2885 = 0, $28859 = 0, $2886 = 0, $28861 = 0, $28865 = 0, $2887 = 0, $28870 = 0, $28872 = 0, $28877 = 0, $2888 = 0, $28882 = 0, $28887 = 0, $2889 = 0, $28891 = 0, $289 = 0, $2890 = 0, $2891 = 0, $28914 = 0, $28916 = 0, $2892 = 0, $28920 = 0, $28925 = 0, $28927 = 0, $2893 = 0, $28932 = 0, $28937 = 0, $2894 = 0, $28942 = 0, $28946 = 0, $2895 = 0, $2896 = 0, $28960 = 0, $28962 = 0, $28966 = 0, $2897 = 0, $28971 = 0, $28973 = 0, $28978 = 0, $2898 = 0, $28983 = 0, $28988 = 0, $2899 = 0, $28992 = 0, $29 = 0, $290 = 0, $2900 = 0, $2901 = 0, $29018 = 0, $2902 = 0, $29020 = 0, $29024 = 0, $29029 = 0, $2903 = 0, $29031 = 0, $29036 = 0, $2904 = 0, $29041 = 0, $29046 = 0, $2905 = 0, $29050 = 0, $2906 = 0, $29060 = 0, $29061 = 0, $29063 = 0, $29065 = 0, $29066 = 0, $29068 = 0, $2907 = 0, $29070 = 0, $29071 = 0, $29073 = 0, $29075 = 0, $29076 = 0, $29078 = 0, $2908 = 0, $29080 = 0, $29081 = 0, $29083 = 0, $29085 = 0, $29086 = 0, $29088 = 0, $2909 = 0, $29090 = 0, $29091 = 0, $29093 = 0, $29095 = 0, $29096 = 0, $29098 = 0, $291 = 0, $2910 = 0, $29100 = 0, $29101 = 0, $29103 = 0, $29105 = 0, $29106 = 0, $29108 = 0, $2911 = 0, $29110 = 0, $29111 = 0, $29113 = 0, $29115 = 0, $29116 = 0, $29118 = 0, $2912 = 0, $29120 = 0, $29121 = 0, $29123 = 0, $29125 = 0, $29126 = 0, $29128 = 0, $2913 = 0, $29130 = 0, $29131 = 0, $29133 = 0, $29135 = 0, $29136 = 0, $29138 = 0, $2914 = 0, $29140 = 0, $29142 = 0, $29146 = 0, $2915 = 0, $29151 = 0, $29153 = 0, $29158 = 0, $2916 = 0, $29163 = 0, $29168 = 0, $2917 = 0, $29172 = 0, $2918 = 0, $29186 = 0, $29188 = 0, $2919 = 0, $29192 = 0, $29197 = 0, $29199 = 0, $292 = 0, $2920 = 0, $29204 = 0, $29209 = 0, $2921 = 0, $29214 = 0, $29218 = 0, $2922 = 0, $2923 = 0, $2924 = 0, $29249 = 0, $2925 = 0, $29251 = 0, $29255 = 0, $2926 = 0, $29260 = 0, $29262 = 0, $29267 = 0, $2927 = 0, $29272 = 0, $29277 = 0, $2928 = 0, $29281 = 0, $2929 = 0, $293 = 0, $2930 = 0, $2931 = 0, $29317 = 0, $29319 = 0, $2932 = 0, $29323 = 0, $29328 = 0, $2933 = 0, $29330 = 0, $29335 = 0, $2934 = 0, $29340 = 0, $29345 = 0, $29349 = 0, $2935 = 0, $2936 = 0, $29365 = 0, $29367 = 0, $2937 = 0, $29371 = 0, $29376 = 0, $29378 = 0, $2938 = 0, $29383 = 0, $29388 = 0, $2939 = 0, $29393 = 0, $29397 = 0, $294 = 0, $2940 = 0, $2941 = 0, $2942 = 0, $2943 = 0, $29433 = 0, $29435 = 0, $29439 = 0, $2944 = 0, $29444 = 0, $29446 = 0, $2945 = 0, $29451 = 0, $29456 = 0, $2946 = 0, $29461 = 0, $29465 = 0, $2947 = 0, $2948 = 0, $2949 = 0, $295 = 0, $2950 = 0, $29501 = 0, $29503 = 0, $29507 = 0, $2951 = 0, $29512 = 0, $29514 = 0, $29519 = 0, $2952 = 0, $29524 = 0, $29529 = 0, $2953 = 0, $29533 = 0, $2954 = 0, $2955 = 0, $2956 = 0, $2957 = 0, $2958 = 0, $2959 = 0, $29592 = 0, $29594 = 0, $29598 = 0, $296 = 0, $2960 = 0, $29603 = 0, $29605 = 0, $2961 = 0, $29610 = 0, $29615 = 0, $2962 = 0, $29620 = 0, $29624 = 0, $2963 = 0, $2964 = 0, $2965 = 0, $2966 = 0, $2967 = 0, $2968 = 0, $29683 = 0, $29685 = 0, $29689 = 0, $2969 = 0, $29694 = 0, $29696 = 0, $297 = 0, $2970 = 0, $29701 = 0, $29706 = 0, $2971 = 0, $29711 = 0, $29715 = 0, $2972 = 0, $29728 = 0, $2973 = 0, $29730 = 0, $29734 = 0, $29739 = 0, $2974 = 0, $29741 = 0, $29746 = 0, $2975 = 0, $29751 = 0, $29756 = 0, $2976 = 0, $29760 = 0, $2977 = 0, $29775 = 0, $29777 = 0, $2978 = 0, $29781 = 0, $29786 = 0, $29788 = 0, $2979 = 0, $29793 = 0, $29798 = 0, $298 = 0, $2980 = 0, $29803 = 0, $29807 = 0, $2981 = 0, $2982 = 0, $29822 = 0, $29824 = 0, $29828 = 0, $2983 = 0, $29833 = 0, $29835 = 0, $2984 = 0, $29840 = 0, $29845 = 0, $2985 = 0, $29850 = 0, $29854 = 0, $2986 = 0, $29867 = 0, $29869 = 0, $2987 = 0, $29873 = 0, $29878 = 0, $2988 = 0, $29880 = 0, $29885 = 0, $2989 = 0, $29890 = 0, $29895 = 0, $29899 = 0, $299 = 0, $2990 = 0, $2991 = 0, $2992 = 0, $2993 = 0, $2994 = 0, $2995 = 0, $2996 = 0, $2997 = 0, $29979 = 0, $2998 = 0, $29981 = 0, $29985 = 0, $2999 = 0, $29990 = 0, $29992 = 0, $29997 = 0, $3 = 0, $30 = 0, $300 = 0, $3000 = 0, $30002 = 0, $30007 = 0, $3001 = 0, $30011 = 0, $3002 = 0, $3003 = 0, $3004 = 0, $3005 = 0, $3006 = 0, $3007 = 0, $3008 = 0, $3009 = 0, $30091 = 0, $30093 = 0, $30097 = 0, $301 = 0, $3010 = 0, $30102 = 0, $30104 = 0, $30109 = 0, $3011 = 0, $30114 = 0, $30119 = 0, $3012 = 0, $30123 = 0, $3013 = 0, $3014 = 0, $3015 = 0, $3016 = 0, $3017 = 0, $3018 = 0, $3019 = 0, $302 = 0, $3020 = 0, $30203 = 0, $30205 = 0, $30209 = 0, $3021 = 0, $30214 = 0, $30216 = 0, $3022 = 0, $30221 = 0, $30226 = 0, $3023 = 0, $30231 = 0, $30235 = 0, $3024 = 0, $30247 = 0, $30249 = 0, $3025 = 0, $30253 = 0, $30258 = 0, $3026 = 0, $30260 = 0, $30265 = 0, $3027 = 0, $30270 = 0, $30275 = 0, $30279 = 0, $3028 = 0, $3029 = 0, $30294 = 0, $30296 = 0, $303 = 0, $3030 = 0, $30300 = 0, $30305 = 0, $30307 = 0, $3031 = 0, $30312 = 0, $30317 = 0, $3032 = 0, $30322 = 0, $30326 = 0, $3033 = 0, $3034 = 0, $30346 = 0, $30348 = 0, $3035 = 0, $30352 = 0, $30357 = 0, $30359 = 0, $3036 = 0, $30364 = 0, $30369 = 0, $3037 = 0, $30374 = 0, $30378 = 0, $3038 = 0, $3039 = 0, $304 = 0, $3040 = 0, $30404 = 0, $30406 = 0, $30408 = 0, $3041 = 0, $30412 = 0, $30416 = 0, $3042 = 0, $30420 = 0, $30424 = 0, $30428 = 0, $3043 = 0, $30432 = 0, $30436 = 0, $3044 = 0, $30440 = 0, $30444 = 0, $30448 = 0, $3045 = 0, $30452 = 0, $30456 = 0, $3046 = 0, $30460 = 0, $30464 = 0, $30468 = 0, $3047 = 0, $30472 = 0, $30476 = 0, $3048 = 0, $30480 = 0, $30484 = 0, $30488 = 0, $3049 = 0, $30492 = 0, $30496 = 0, $305 = 0, $3050 = 0, $30500 = 0, $30504 = 0, $30508 = 0, $3051 = 0, $30512 = 0, $30516 = 0, $3052 = 0, $30520 = 0, $30524 = 0, $30528 = 0, $3053 = 0, $30532 = 0, $30536 = 0, $3054 = 0, $30540 = 0, $30544 = 0, $30548 = 0, $3055 = 0, $30552 = 0, $30556 = 0, $3056 = 0, $30560 = 0, $30564 = 0, $30568 = 0, $3057 = 0, $30572 = 0, $30576 = 0, $3058 = 0, $30580 = 0, $30584 = 0, $30588 = 0, $3059 = 0, $30592 = 0, $30596 = 0, $306 = 0, $3060 = 0, $30600 = 0, $30604 = 0, $30608 = 0, $3061 = 0, $30612 = 0, $30616 = 0, $3062 = 0, $30620 = 0, $30624 = 0, $30628 = 0, $3063 = 0, $30632 = 0, $30636 = 0, $3064 = 0, $30640 = 0, $30644 = 0, $30648 = 0, $3065 = 0, $30652 = 0, $30656 = 0, $3066 = 0, $30660 = 0, $30664 = 0, $30668 = 0, $3067 = 0, $30672 = 0, $30676 = 0, $3068 = 0, $30680 = 0, $30684 = 0, $30688 = 0, $3069 = 0, $30692 = 0, $30696 = 0, $307 = 0, $3070 = 0, $30700 = 0, $30704 = 0, $30708 = 0, $3071 = 0, $30712 = 0, $30716 = 0, $3072 = 0, $30720 = 0, $30724 = 0, $30728 = 0, $3073 = 0, $30732 = 0, $30736 = 0, $3074 = 0, $30740 = 0, $30744 = 0, $30748 = 0, $3075 = 0, $30752 = 0, $30756 = 0, $3076 = 0, $30760 = 0, $30764 = 0, $30768 = 0, $3077 = 0, $30772 = 0, $30776 = 0, $3078 = 0, $30780 = 0, $30784 = 0, $30788 = 0, $3079 = 0, $30792 = 0, $30796 = 0, $308 = 0, $3080 = 0, $30800 = 0, $30804 = 0, $30808 = 0, $3081 = 0, $30812 = 0, $30816 = 0, $3082 = 0, $30820 = 0, $30824 = 0, $30828 = 0, $3083 = 0, $30832 = 0, $30836 = 0, $3084 = 0, $30840 = 0, $30844 = 0, $30848 = 0, $3085 = 0, $30852 = 0, $30856 = 0, $3086 = 0, $30860 = 0, $30864 = 0, $30868 = 0, $3087 = 0, $30872 = 0, $30876 = 0, $3088 = 0, $30880 = 0, $30884 = 0, $30888 = 0, $3089 = 0, $30892 = 0, $30896 = 0, $309 = 0, $3090 = 0, $30900 = 0, $30904 = 0, $30908 = 0, $3091 = 0, $30912 = 0, $30916 = 0, $3092 = 0, $30920 = 0, $30924 = 0, $30928 = 0, $3093 = 0, $30932 = 0, $30936 = 0, $3094 = 0, $30940 = 0, $30944 = 0, $30948 = 0, $3095 = 0, $30952 = 0, $30956 = 0, $3096 = 0, $30960 = 0, $30964 = 0, $30968 = 0, $3097 = 0, $30972 = 0, $30976 = 0, $3098 = 0, $30980 = 0, $30984 = 0, $30988 = 0, $3099 = 0, $30992 = 0, $30996 = 0, $31 = 0, $310 = 0, $3100 = 0, $31000 = 0, $31004 = 0, $31008 = 0, $3101 = 0, $31012 = 0, $31016 = 0, $3102 = 0, $31020 = 0, $31024 = 0, $31028 = 0, $3103 = 0, $31032 = 0, $31036 = 0, $3104 = 0, $31040 = 0, $31044 = 0, $31048 = 0, $3105 = 0, $31052 = 0, $31056 = 0, $3106 = 0, $31060 = 0, $31064 = 0, $31068 = 0, $3107 = 0, $31072 = 0, $31076 = 0, $3108 = 0, $31080 = 0, $31084 = 0, $31088 = 0, $3109 = 0, $31092 = 0, $31096 = 0, $311 = 0, $3110 = 0, $31100 = 0, $31104 = 0, $31108 = 0, $3111 = 0, $31112 = 0, $31116 = 0, $3112 = 0, $31120 = 0, $31124 = 0, $31128 = 0, $3113 = 0, $31132 = 0, $31136 = 0, $3114 = 0, $31140 = 0, $31144 = 0, $31148 = 0, $3115 = 0, $31152 = 0, $31156 = 0, $3116 = 0, $31160 = 0, $31164 = 0, $31168 = 0, $3117 = 0, $31172 = 0, $31176 = 0, $3118 = 0, $31180 = 0, $31184 = 0, $31188 = 0, $3119 = 0, $31192 = 0, $31196 = 0, $312 = 0, $3120 = 0, $31200 = 0, $31204 = 0, $31208 = 0, $3121 = 0, $31212 = 0, $31216 = 0, $3122 = 0, $31220 = 0, $31224 = 0, $31228 = 0, $3123 = 0, $31232 = 0, $31236 = 0, $3124 = 0, $31240 = 0, $31244 = 0, $31248 = 0, $3125 = 0, $31252 = 0, $31256 = 0, $3126 = 0, $31260 = 0, $31264 = 0, $31268 = 0, $3127 = 0, $31272 = 0, $31276 = 0, $3128 = 0, $31280 = 0, $31284 = 0, $31288 = 0, $3129 = 0, $31292 = 0, $31296 = 0, $313 = 0, $3130 = 0, $31300 = 0, $31304 = 0, $31308 = 0, $3131 = 0, $31312 = 0, $31316 = 0, $3132 = 0, $31320 = 0, $31324 = 0, $31328 = 0, $3133 = 0, $31332 = 0, $31336 = 0, $3134 = 0, $31340 = 0, $31344 = 0, $31348 = 0, $3135 = 0, $31352 = 0, $31356 = 0, $3136 = 0, $31360 = 0, $31364 = 0, $31368 = 0, $3137 = 0, $31372 = 0, $31376 = 0, $3138 = 0, $31380 = 0, $31384 = 0, $31388 = 0, $3139 = 0, $31392 = 0, $31396 = 0, $314 = 0, $3140 = 0, $31400 = 0, $31404 = 0, $31408 = 0, $3141 = 0, $31412 = 0, $31416 = 0, $3142 = 0, $31420 = 0, $31424 = 0, $31428 = 0, $3143 = 0, $31432 = 0, $31436 = 0, $3144 = 0, $31440 = 0, $31444 = 0, $31448 = 0, $3145 = 0, $31452 = 0, $31456 = 0, $3146 = 0, $31460 = 0, $31464 = 0, $31468 = 0, $3147 = 0, $31472 = 0, $31476 = 0, $3148 = 0, $31480 = 0, $31484 = 0, $31488 = 0, $3149 = 0, $31492 = 0, $31496 = 0, $315 = 0, $3150 = 0, $31500 = 0, $31504 = 0, $31508 = 0, $3151 = 0, $31512 = 0, $31516 = 0, $3152 = 0, $31520 = 0, $31524 = 0, $31528 = 0, $3153 = 0, $31532 = 0, $31536 = 0, $3154 = 0, $31540 = 0, $31544 = 0, $31548 = 0, $3155 = 0, $31552 = 0, $31556 = 0, $3156 = 0, $31560 = 0, $31564 = 0, $31568 = 0, $31572 = 0, $31576 = 0, $31580 = 0, $31584 = 0, $31588 = 0, $31592 = 0, $31596 = 0, $316 = 0, $31600 = 0, $31604 = 0, $31608 = 0, $31612 = 0, $31616 = 0, $31620 = 0, $31624 = 0, $31628 = 0, $31632 = 0, $31636 = 0, $31640 = 0, $31644 = 0, $31648 = 0, $31652 = 0, $31656 = 0, $31660 = 0, $31664 = 0, $31668 = 0, $31672 = 0, $31676 = 0, $31680 = 0, $31684 = 0, $31688 = 0, $31692 = 0, $31696 = 0, $317 = 0, $31700 = 0, $31704 = 0, $31708 = 0, $31712 = 0, $31716 = 0, $3172 = 0, $31720 = 0, $31724 = 0, $31728 = 0, $31732 = 0, $31736 = 0, $31740 = 0, $31744 = 0, $31748 = 0, $31752 = 0, $31756 = 0, $31760 = 0, $31764 = 0, $31768 = 0, $31772 = 0, $31776 = 0, $31780 = 0, $31784 = 0, $31788 = 0, $31792 = 0, $31796 = 0, $318 = 0, $31800 = 0, $31804 = 0, $31808 = 0, $3181 = 0, $31812 = 0, $31816 = 0, $31820 = 0, $31824 = 0, $31828 = 0, $31832 = 0, $31836 = 0, $31840 = 0, $31844 = 0, $31848 = 0, $31852 = 0, $31856 = 0, $31860 = 0, $31864 = 0, $31868 = 0, $31872 = 0, $31876 = 0, $3188 = 0, $31880 = 0, $31884 = 0, $31888 = 0, $3189 = 0, $31892 = 0, $31896 = 0, $319 = 0, $31900 = 0, $31904 = 0, $31908 = 0, $31912 = 0, $31916 = 0, $31920 = 0, $31924 = 0, $31928 = 0, $31932 = 0, $31936 = 0, $31940 = 0, $31944 = 0, $31948 = 0, $3195 = 0, $31952 = 0, $31956 = 0, $31960 = 0, $31964 = 0, $31968 = 0, $31972 = 0, $31976 = 0, $31980 = 0, $31984 = 0, $31988 = 0, $31992 = 0, $31996 = 0, $32 = 0, $320 = 0, $3200 = 0, $32000 = 0, $32004 = 0, $32008 = 0, $3201 = 0, $32012 = 0, $32016 = 0, $32020 = 0, $32024 = 0, $32028 = 0, $32032 = 0, $32036 = 0, $32040 = 0, $32044 = 0, $32048 = 0, $32052 = 0, $32056 = 0, $3206 = 0, $32060 = 0, $32064 = 0, $32068 = 0, $3207 = 0, $32072 = 0, $32076 = 0, $32080 = 0, $32084 = 0, $32088 = 0, $3209 = 0, $32092 = 0, $32096 = 0, $321 = 0, $32100 = 0, $32104 = 0, $32108 = 0, $32112 = 0, $32116 = 0, $32120 = 0, $32124 = 0, $32128 = 0, $32132 = 0, $32136 = 0, $32140 = 0, $32144 = 0, $32150 = 0, $32155 = 0, $32157 = 0, $32162 = 0, $32167 = 0, $32172 = 0, $32176 = 0, $32199 = 0, $322 = 0, $32201 = 0, $32205 = 0, $32210 = 0, $32212 = 0, $32217 = 0, $32222 = 0, $32227 = 0, $3223 = 0, $32231 = 0, $32242 = 0, $32244 = 0, $32248 = 0, $32253 = 0, $32255 = 0, $32260 = 0, $32265 = 0, $32270 = 0, $32274 = 0, $323 = 0, $32300 = 0, $32302 = 0, $32306 = 0, $32311 = 0, $32313 = 0, $32318 = 0, $32323 = 0, $32328 = 0, $32332 = 0, $32345 = 0, $32347 = 0, $32351 = 0, $32356 = 0, $32358 = 0, $32363 = 0, $32368 = 0, $32373 = 0, $32377 = 0, $32390 = 0, $32392 = 0, $32396 = 0, $324 = 0, $32401 = 0, $32403 = 0, $32408 = 0, $32413 = 0, $32418 = 0, $32422 = 0, $32435 = 0, $32437 = 0, $32441 = 0, $32446 = 0, $32448 = 0, $32453 = 0, $32458 = 0, $32463 = 0, $32467 = 0, $32480 = 0, $32482 = 0, $32486 = 0, $32491 = 0, $32493 = 0, $32498 = 0, $325 = 0, $32503 = 0, $32508 = 0, $32512 = 0, $32524 = 0, $32526 = 0, $32530 = 0, $32535 = 0, $32537 = 0, $32542 = 0, $32547 = 0, $32552 = 0, $32556 = 0, $32567 = 0, $32569 = 0, $32573 = 0, $32578 = 0, $32580 = 0, $32585 = 0, $32590 = 0, $32595 = 0, $32599 = 0, $326 = 0, $32613 = 0, $32615 = 0, $32619 = 0, $32624 = 0, $32626 = 0, $32631 = 0, $32636 = 0, $32641 = 0, $32645 = 0, $32657 = 0, $32659 = 0, $32663 = 0, $32668 = 0, $32670 = 0, $32675 = 0, $32680 = 0, $32685 = 0, $32689 = 0, $327 = 0, $32702 = 0, $32704 = 0, $32708 = 0, $32713 = 0, $32715 = 0, $32720 = 0, $32725 = 0, $32730 = 0, $32734 = 0, $32749 = 0, $32751 = 0, $32755 = 0, $32760 = 0, $32762 = 0, $32767 = 0, $32772 = 0, $32777 = 0, $32781 = 0, $328 = 0, $32817 = 0, $32819 = 0, $32823 = 0, $32828 = 0, $32830 = 0, $32835 = 0, $32840 = 0, $32845 = 0, $32849 = 0, $32896 = 0, $32898 = 0, $329 = 0, $32902 = 0, $32907 = 0, $32909 = 0, $32914 = 0, $32919 = 0, $32924 = 0, $32928 = 0, $32955 = 0, $32957 = 0, $32961 = 0, $32966 = 0, $32968 = 0, $32973 = 0, $32978 = 0, $32983 = 0, $32987 = 0, $33 = 0, $330 = 0, $33001 = 0, $33003 = 0, $33007 = 0, $33012 = 0, $33014 = 0, $33019 = 0, $33024 = 0, $33029 = 0, $33033 = 0, $33056 = 0, $33058 = 0, $33062 = 0, $33067 = 0, $33069 = 0, $33074 = 0, $33079 = 0, $33084 = 0, $33088 = 0, $331 = 0, $33101 = 0, $33103 = 0, $33107 = 0, $33112 = 0, $33114 = 0, $33119 = 0, $33124 = 0, $33129 = 0, $33133 = 0, $33144 = 0, $33146 = 0, $33150 = 0, $33155 = 0, $33157 = 0, $33162 = 0, $33167 = 0, $33172 = 0, $33176 = 0, $33186 = 0, $33187 = 0, $33188 = 0, $33190 = 0, $33191 = 0, $33192 = 0, $33193 = 0, $33195 = 0, $332 = 0, $33201 = 0, $33203 = 0, $33207 = 0, $33212 = 0, $33214 = 0, $33219 = 0, $33224 = 0, $33229 = 0, $33233 = 0, $33243 = 0, $33244 = 0, $33245 = 0, $33247 = 0, $33248 = 0, $33249 = 0, $3325 = 0, $33250 = 0, $33252 = 0, $33258 = 0, $33260 = 0, $33264 = 0, $33269 = 0, $3327 = 0, $33271 = 0, $33276 = 0, $3328 = 0, $33281 = 0, $33286 = 0, $3329 = 0, $33290 = 0, $333 = 0, $3330 = 0, $3331 = 0, $3332 = 0, $33320 = 0, $33322 = 0, $33326 = 0, $3333 = 0, $33331 = 0, $33333 = 0, $33338 = 0, $3334 = 0, $33343 = 0, $33348 = 0, $3335 = 0, $33352 = 0, $3336 = 0, $3337 = 0, $3338 = 0, $3339 = 0, $33391 = 0, $33393 = 0, $33397 = 0, $334 = 0, $3340 = 0, $33402 = 0, $33404 = 0, $33409 = 0, $3341 = 0, $33414 = 0, $33419 = 0, $3342 = 0, $33423 = 0, $3343 = 0, $3344 = 0, $3345 = 0, $3346 = 0, $33462 = 0, $33464 = 0, $33468 = 0, $3347 = 0, $33473 = 0, $33475 = 0, $3348 = 0, $33480 = 0, $33485 = 0, $3349 = 0, $33490 = 0, $33494 = 0, $335 = 0, $3350 = 0, $3351 = 0, $3352 = 0, $3353 = 0, $33533 = 0, $33535 = 0, $33539 = 0, $3354 = 0, $33544 = 0, $33546 = 0, $3355 = 0, $33551 = 0, $33556 = 0, $3356 = 0, $33561 = 0, $33565 = 0, $3357 = 0, $3358 = 0, $3359 = 0, $336 = 0, $3360 = 0, $33604 = 0, $33606 = 0, $3361 = 0, $33610 = 0, $33615 = 0, $33617 = 0, $3362 = 0, $33622 = 0, $33627 = 0, $3363 = 0, $33632 = 0, $33636 = 0, $3364 = 0, $3365 = 0, $3366 = 0, $3367 = 0, $33675 = 0, $33677 = 0, $3368 = 0, $33681 = 0, $33686 = 0, $33688 = 0, $3369 = 0, $33693 = 0, $33698 = 0, $337 = 0, $3370 = 0, $33703 = 0, $33707 = 0, $3371 = 0, $3372 = 0, $3373 = 0, $3374 = 0, $33740 = 0, $33742 = 0, $33746 = 0, $3375 = 0, $33751 = 0, $33753 = 0, $33758 = 0, $3376 = 0, $33763 = 0, $33768 = 0, $3377 = 0, $33772 = 0, $3378 = 0, $3379 = 0, $338 = 0, $3380 = 0, $3381 = 0, $33813 = 0, $33815 = 0, $33819 = 0, $3382 = 0, $33824 = 0, $33826 = 0, $3383 = 0, $33831 = 0, $33836 = 0, $3384 = 0, $33841 = 0, $33845 = 0, $3385 = 0, $3386 = 0, $3387 = 0, $3388 = 0, $3389 = 0, $33890 = 0, $33892 = 0, $33896 = 0, $339 = 0, $3390 = 0, $33901 = 0, $33903 = 0, $33908 = 0, $3391 = 0, $33913 = 0, $33918 = 0, $3392 = 0, $33922 = 0, $3393 = 0, $3394 = 0, $3395 = 0, $3396 = 0, $33967 = 0, $33969 = 0, $3397 = 0, $33973 = 0, $33978 = 0, $3398 = 0, $33980 = 0, $33985 = 0, $3399 = 0, $33990 = 0, $33995 = 0, $33999 = 0, $34 = 0, $340 = 0, $3400 = 0, $3401 = 0, $3402 = 0, $3403 = 0, $34038 = 0, $3404 = 0, $34040 = 0, $34044 = 0, $34049 = 0, $3405 = 0, $34051 = 0, $34056 = 0, $3406 = 0, $34061 = 0, $34066 = 0, $3407 = 0, $34070 = 0, $3408 = 0, $3409 = 0, $341 = 0, $3410 = 0, $34109 = 0, $3411 = 0, $34111 = 0, $34115 = 0, $3412 = 0, $34120 = 0, $34122 = 0, $34127 = 0, $3413 = 0, $34132 = 0, $34137 = 0, $3414 = 0, $34141 = 0, $3415 = 0, $3416 = 0, $3417 = 0, $34176 = 0, $34178 = 0, $3418 = 0, $34182 = 0, $34187 = 0, $34189 = 0, $3419 = 0, $34194 = 0, $34199 = 0, $342 = 0, $3420 = 0, $34204 = 0, $34208 = 0, $3421 = 0, $3422 = 0, $3423 = 0, $3424 = 0, $34247 = 0, $34249 = 0, $3425 = 0, $34253 = 0, $34258 = 0, $3426 = 0, $34260 = 0, $34265 = 0, $3427 = 0, $34270 = 0, $34275 = 0, $34279 = 0, $3428 = 0, $3429 = 0, $343 = 0, $3430 = 0, $3431 = 0, $34318 = 0, $3432 = 0, $34320 = 0, $34324 = 0, $34329 = 0, $3433 = 0, $34331 = 0, $34336 = 0, $3434 = 0, $34341 = 0, $34346 = 0, $3435 = 0, $34350 = 0, $3436 = 0, $3437 = 0, $3438 = 0, $34387 = 0, $34389 = 0, $3439 = 0, $34393 = 0, $34398 = 0, $344 = 0, $3440 = 0, $34400 = 0, $34405 = 0, $3441 = 0, $34410 = 0, $34415 = 0, $34419 = 0, $3442 = 0, $3443 = 0, $3444 = 0, $3445 = 0, $3446 = 0, $3447 = 0, $34470 = 0, $34472 = 0, $34476 = 0, $3448 = 0, $34481 = 0, $34483 = 0, $34488 = 0, $3449 = 0, $34493 = 0, $34498 = 0, $345 = 0, $3450 = 0, $34502 = 0, $3451 = 0, $3452 = 0, $3453 = 0, $3454 = 0, $3455 = 0, $34553 = 0, $34555 = 0, $34559 = 0, $3456 = 0, $34564 = 0, $34566 = 0, $3457 = 0, $34571 = 0, $34576 = 0, $3458 = 0, $34581 = 0, $34585 = 0, $3459 = 0, $346 = 0, $3460 = 0, $34600 = 0, $34602 = 0, $34606 = 0, $3461 = 0, $34611 = 0, $34613 = 0, $34618 = 0, $3462 = 0, $34623 = 0, $34628 = 0, $3463 = 0, $34632 = 0, $3464 = 0, $3465 = 0, $34658 = 0, $3466 = 0, $34660 = 0, $34662 = 0, $34666 = 0, $3467 = 0, $34670 = 0, $34674 = 0, $34678 = 0, $3468 = 0, $34682 = 0, $34686 = 0, $3469 = 0, $34690 = 0, $34694 = 0, $34698 = 0, $347 = 0, $3470 = 0, $34702 = 0, $34706 = 0, $3471 = 0, $34710 = 0, $34714 = 0, $34718 = 0, $3472 = 0, $34722 = 0, $34726 = 0, $3473 = 0, $34730 = 0, $34734 = 0, $34738 = 0, $3474 = 0, $34742 = 0, $34746 = 0, $3475 = 0, $34750 = 0, $34754 = 0, $34758 = 0, $3476 = 0, $34762 = 0, $34766 = 0, $3477 = 0, $34770 = 0, $34774 = 0, $34778 = 0, $3478 = 0, $34782 = 0, $34786 = 0, $3479 = 0, $34790 = 0, $34794 = 0, $34798 = 0, $348 = 0, $3480 = 0, $34804 = 0, $34809 = 0, $3481 = 0, $34811 = 0, $34816 = 0, $3482 = 0, $34821 = 0, $34826 = 0, $3483 = 0, $34830 = 0, $3484 = 0, $3485 = 0, $3486 = 0, $3487 = 0, $34878 = 0, $3488 = 0, $34880 = 0, $34884 = 0, $34889 = 0, $3489 = 0, $34891 = 0, $34896 = 0, $349 = 0, $3490 = 0, $34901 = 0, $34906 = 0, $3491 = 0, $34910 = 0, $3492 = 0, $3493 = 0, $3494 = 0, $34941 = 0, $34943 = 0, $34947 = 0, $3495 = 0, $34952 = 0, $34954 = 0, $34959 = 0, $3496 = 0, $34964 = 0, $34969 = 0, $3497 = 0, $34973 = 0, $3498 = 0, $3499 = 0, $34996 = 0, $34998 = 0, $35 = 0, $350 = 0, $3500 = 0, $35002 = 0, $35007 = 0, $35009 = 0, $3501 = 0, $35014 = 0, $35019 = 0, $3502 = 0, $35024 = 0, $35028 = 0, $3503 = 0, $3504 = 0, $35042 = 0, $35044 = 0, $35048 = 0, $3505 = 0, $35053 = 0, $35055 = 0, $3506 = 0, $35060 = 0, $35065 = 0, $3507 = 0, $35070 = 0, $35074 = 0, $3508 = 0, $3509 = 0, $351 = 0, $3510 = 0, $3511 = 0, $3512 = 0, $35122 = 0, $35124 = 0, $35128 = 0, $3513 = 0, $35133 = 0, $35135 = 0, $3514 = 0, $35140 = 0, $35145 = 0, $3515 = 0, $35150 = 0, $35154 = 0, $3516 = 0, $3517 = 0, $3518 = 0, $3519 = 0, $352 = 0, $3520 = 0, $35200 = 0, $35202 = 0, $35206 = 0, $3521 = 0, $35211 = 0, $35213 = 0, $35218 = 0, $3522 = 0, $35223 = 0, $35228 = 0, $3523 = 0, $35232 = 0, $3524 = 0, $3525 = 0, $3526 = 0, $3527 = 0, $35278 = 0, $3528 = 0, $35280 = 0, $35284 = 0, $35289 = 0, $3529 = 0, $35291 = 0, $35296 = 0, $353 = 0, $3530 = 0, $35301 = 0, $35306 = 0, $3531 = 0, $35310 = 0, $3532 = 0, $3533 = 0, $3534 = 0, $3535 = 0, $35358 = 0, $3536 = 0, $35360 = 0, $35364 = 0, $35369 = 0, $3537 = 0, $35371 = 0, $35376 = 0, $3538 = 0, $35381 = 0, $35386 = 0, $3539 = 0, $35390 = 0, $354 = 0, $3540 = 0, $3541 = 0, $3542 = 0, $3543 = 0, $35436 = 0, $35438 = 0, $3544 = 0, $3545 = 0, $3546 = 0, $3547 = 0, $3548 = 0, $3549 = 0, $355 = 0, $3550 = 0, $3551 = 0, $3552 = 0, $3553 = 0, $3554 = 0, $3555 = 0, $3556 = 0, $3557 = 0, $3558 = 0, $3559 = 0, $356 = 0, $3560 = 0, $3561 = 0, $3562 = 0, $3563 = 0, $3564 = 0, $3565 = 0, $3566 = 0, $3567 = 0, $3568 = 0, $3569 = 0, $357 = 0, $3570 = 0, $3571 = 0, $3572 = 0, $3573 = 0, $3574 = 0, $3575 = 0, $3576 = 0, $3577 = 0, $3578 = 0, $3579 = 0, $358 = 0, $3580 = 0, $3581 = 0, $3582 = 0, $3583 = 0, $3584 = 0, $3585 = 0, $3586 = 0, $3587 = 0, $3588 = 0, $3589 = 0, $359 = 0, $3590 = 0, $3591 = 0, $3592 = 0, $3593 = 0, $3594 = 0, $3595 = 0, $3596 = 0, $3597 = 0, $3598 = 0, $3599 = 0, $36 = 0, $360 = 0, $3600 = 0, $3601 = 0, $3602 = 0, $3603 = 0, $3604 = 0, $3605 = 0, $3606 = 0, $3607 = 0, $3608 = 0, $3609 = 0, $361 = 0, $3610 = 0, $3611 = 0, $3612 = 0, $3613 = 0, $3614 = 0, $3615 = 0, $3616 = 0, $3617 = 0, $3618 = 0, $3619 = 0, $362 = 0, $3620 = 0, $3621 = 0, $3622 = 0, $3623 = 0, $3624 = 0, $3625 = 0, $3626 = 0, $3627 = 0, $3628 = 0, $3629 = 0, $363 = 0, $3630 = 0, $3631 = 0, $3632 = 0, $3633 = 0, $3634 = 0, $3635 = 0, $3636 = 0, $3637 = 0, $3638 = 0, $3639 = 0, $364 = 0, $3640 = 0, $3641 = 0, $3642 = 0, $3643 = 0, $3644 = 0, $3645 = 0, $3646 = 0, $3647 = 0, $3648 = 0, $3649 = 0, $365 = 0, $3650 = 0, $3651 = 0, $3652 = 0, $3653 = 0, $3654 = 0, $3655 = 0, $3656 = 0, $3657 = 0, $3658 = 0, $3659 = 0, $366 = 0, $3660 = 0, $3661 = 0, $3662 = 0, $3663 = 0, $3664 = 0, $3665 = 0, $3666 = 0, $3667 = 0, $3668 = 0, $3669 = 0, $367 = 0, $3670 = 0, $3671 = 0, $3672 = 0, $3673 = 0, $3674 = 0, $3675 = 0, $3676 = 0, $3677 = 0, $3678 = 0, $3679 = 0, $368 = 0, $3680 = 0, $3681 = 0, $3682 = 0, $3683 = 0, $3684 = 0, $3685 = 0, $3686 = 0, $3687 = 0, $3688 = 0, $3689 = 0, $369 = 0, $3690 = 0, $3691 = 0, $3692 = 0, $3693 = 0, $3694 = 0, $3695 = 0, $3696 = 0, $3697 = 0, $3698 = 0, $3699 = 0, $37 = 0, $370 = 0, $3700 = 0, $3701 = 0, $3702 = 0, $3703 = 0, $3704 = 0, $3705 = 0, $3706 = 0, $3707 = 0, $3708 = 0, $3709 = 0, $371 = 0, $3710 = 0, $3711 = 0, $3712 = 0, $3713 = 0, $3714 = 0, $3715 = 0, $3716 = 0, $3717 = 0, $3718 = 0, $3719 = 0, $372 = 0, $3720 = 0, $3721 = 0, $3722 = 0, $3723 = 0, $3724 = 0, $3725 = 0, $3726 = 0, $3727 = 0, $3728 = 0, $3729 = 0, $373 = 0, $3730 = 0, $3731 = 0, $3732 = 0, $3733 = 0, $3734 = 0, $3735 = 0, $3736 = 0, $3737 = 0, $3738 = 0, $3739 = 0, $374 = 0, $3740 = 0, $3741 = 0, $3742 = 0, $3743 = 0, $3744 = 0, $3745 = 0, $3746 = 0, $3747 = 0, $3748 = 0, $3749 = 0, $375 = 0, $3750 = 0, $3751 = 0, $3752 = 0, $3753 = 0, $3754 = 0, $3755 = 0, $3756 = 0, $3757 = 0, $3758 = 0, $3759 = 0, $376 = 0, $3760 = 0, $3761 = 0, $3762 = 0, $3763 = 0, $3764 = 0, $3765 = 0, $3766 = 0, $3767 = 0, $3768 = 0, $3769 = 0, $377 = 0, $3770 = 0, $3771 = 0, $3772 = 0, $3773 = 0, $3774 = 0, $3775 = 0, $3776 = 0, $3777 = 0, $3778 = 0, $3779 = 0, $378 = 0, $3780 = 0, $3781 = 0, $3782 = 0, $3783 = 0, $3784 = 0, $3785 = 0, $3786 = 0, $3787 = 0, $3788 = 0, $3789 = 0, $379 = 0, $3790 = 0, $3791 = 0, $3792 = 0, $3793 = 0, $3794 = 0, $3795 = 0, $3796 = 0, $3797 = 0, $3798 = 0, $3799 = 0, $38 = 0, $380 = 0, $3800 = 0, $3801 = 0, $3802 = 0, $3803 = 0, $3804 = 0, $3805 = 0, $3806 = 0, $3807 = 0, $3808 = 0, $3809 = 0, $381 = 0, $3810 = 0, $3811 = 0, $3812 = 0, $3813 = 0, $3814 = 0, $3815 = 0, $3816 = 0, $3817 = 0, $3818 = 0, $3819 = 0, $382 = 0, $3820 = 0, $3821 = 0, $3822 = 0, $3823 = 0, $3824 = 0, $3825 = 0, $3826 = 0, $3827 = 0, $3828 = 0, $3829 = 0, $383 = 0, $3830 = 0, $3831 = 0, $3832 = 0, $3833 = 0, $3834 = 0, $3835 = 0, $3836 = 0, $3837 = 0, $3838 = 0, $3839 = 0, $384 = 0, $3840 = 0, $3841 = 0, $3842 = 0, $3843 = 0, $3844 = 0, $3845 = 0, $3846 = 0, $3847 = 0, $3848 = 0, $3849 = 0, $385 = 0, $3850 = 0, $3851 = 0, $3852 = 0, $3853 = 0, $3854 = 0, $3855 = 0, $3856 = 0, $3857 = 0, $3858 = 0, $3859 = 0, $386 = 0, $3860 = 0, $3861 = 0, $3862 = 0, $3863 = 0, $3864 = 0, $3865 = 0, $3866 = 0, $3867 = 0, $3868 = 0, $3869 = 0, $387 = 0, $3870 = 0, $3871 = 0, $3872 = 0, $3873 = 0, $3874 = 0, $3875 = 0, $3876 = 0, $3877 = 0, $3878 = 0, $3879 = 0, $388 = 0, $3880 = 0, $3881 = 0, $3882 = 0, $3883 = 0, $3884 = 0, $3885 = 0, $3886 = 0, $3887 = 0, $3888 = 0, $3889 = 0, $389 = 0, $3890 = 0, $3891 = 0, $3892 = 0, $3893 = 0, $3894 = 0, $3895 = 0, $3896 = 0, $3897 = 0, $3898 = 0, $3899 = 0, $39 = 0, $390 = 0, $3900 = 0, $3901 = 0, $3902 = 0, $3903 = 0, $3904 = 0, $3905 = 0, $3906 = 0, $3907 = 0, $3908 = 0, $3909 = 0, $391 = 0, $3910 = 0, $3911 = 0, $3912 = 0, $3913 = 0, $3914 = 0, $3915 = 0, $3916 = 0, $3917 = 0, $3918 = 0, $3919 = 0, $392 = 0, $3920 = 0, $3921 = 0, $3922 = 0, $3923 = 0, $3924 = 0, $3925 = 0, $3926 = 0, $3927 = 0, $3928 = 0, $3929 = 0, $393 = 0, $3930 = 0, $3931 = 0, $3932 = 0, $3933 = 0, $3934 = 0, $3935 = 0, $3936 = 0, $3937 = 0, $3938 = 0, $3939 = 0, $394 = 0, $3940 = 0, $3941 = 0, $3942 = 0, $3943 = 0, $3944 = 0, $3945 = 0, $3946 = 0, $3947 = 0, $3948 = 0, $3949 = 0, $395 = 0, $3950 = 0, $3951 = 0, $3952 = 0, $3953 = 0, $3954 = 0, $3955 = 0, $3956 = 0, $3957 = 0, $3958 = 0, $3959 = 0, $396 = 0, $3960 = 0, $3961 = 0, $3962 = 0, $3963 = 0, $3964 = 0, $3965 = 0, $3966 = 0, $3967 = 0, $3968 = 0, $3969 = 0, $397 = 0, $3970 = 0, $3971 = 0, $3972 = 0, $3973 = 0, $3974 = 0, $3975 = 0, $3976 = 0, $3977 = 0, $3978 = 0, $3979 = 0, $398 = 0, $3980 = 0, $3981 = 0, $3982 = 0, $3983 = 0, $3984 = 0, $3985 = 0, $3986 = 0, $3987 = 0, $3988 = 0, $3989 = 0, $399 = 0, $3990 = 0, $3991 = 0, $3992 = 0, $3993 = 0, $3994 = 0, $3995 = 0, $3996 = 0, $3997 = 0, $3998 = 0, $3999 = 0, $4 = 0, $40 = 0, $400 = 0, $4000 = 0, $4001 = 0, $4002 = 0, $4003 = 0, $4004 = 0, $4005 = 0, $4006 = 0, $4007 = 0, $4008 = 0, $4009 = 0, $401 = 0, $4010 = 0, $4011 = 0, $4012 = 0, $4013 = 0, $4014 = 0, $4015 = 0, $4016 = 0, $4017 = 0, $4018 = 0, $4019 = 0, $402 = 0, $4020 = 0, $4021 = 0, $4022 = 0, $4023 = 0, $4024 = 0, $4025 = 0, $4026 = 0, $4027 = 0, $4028 = 0, $4029 = 0, $403 = 0, $4030 = 0, $4031 = 0, $4032 = 0, $4033 = 0, $4034 = 0, $4035 = 0, $4036 = 0, $4037 = 0, $4038 = 0, $4039 = 0, $404 = 0, $4040 = 0, $4041 = 0, $4042 = 0, $4043 = 0, $4044 = 0, $4045 = 0, $4046 = 0, $4047 = 0, $4048 = 0, $4049 = 0, $405 = 0, $4050 = 0, $4051 = 0, $4052 = 0, $4053 = 0, $4054 = 0, $4055 = 0, $4056 = 0, $4057 = 0, $4058 = 0, $4059 = 0, $406 = 0, $4060 = 0, $4061 = 0, $4062 = 0, $4063 = 0, $4064 = 0, $4065 = 0, $4066 = 0, $4067 = 0, $4068 = 0, $4069 = 0, $407 = 0, $4070 = 0, $4071 = 0, $4072 = 0, $4073 = 0, $4074 = 0, $4075 = 0, $4076 = 0, $4077 = 0, $4078 = 0, $4079 = 0, $408 = 0, $4080 = 0, $4081 = 0, $4082 = 0, $4083 = 0, $4084 = 0, $4085 = 0, $4086 = 0, $4087 = 0, $4088 = 0, $4089 = 0, $409 = 0, $4090 = 0, $4091 = 0, $4092 = 0, $4093 = 0, $4094 = 0, $4095 = 0, $4096 = 0, $4097 = 0, $4098 = 0, $4099 = 0, $41 = 0, $410 = 0, $4100 = 0, $4101 = 0, $4102 = 0, $4103 = 0, $4104 = 0, $4105 = 0, $4106 = 0, $4107 = 0, $4108 = 0, $4109 = 0, $411 = 0, $4110 = 0, $4111 = 0, $4112 = 0, $4113 = 0, $4114 = 0, $4115 = 0, $4116 = 0, $4117 = 0, $4118 = 0, $4119 = 0, $412 = 0, $4120 = 0, $4121 = 0, $4122 = 0, $4123 = 0, $4124 = 0, $4125 = 0, $4126 = 0, $4127 = 0, $4128 = 0, $4129 = 0, $413 = 0, $4130 = 0, $4131 = 0, $4132 = 0, $4133 = 0, $4134 = 0, $4135 = 0, $4136 = 0, $4137 = 0, $4138 = 0, $4139 = 0, $414 = 0, $4140 = 0, $4141 = 0, $4142 = 0, $4143 = 0, $4144 = 0, $4145 = 0, $4146 = 0, $4147 = 0, $4148 = 0, $4149 = 0, $415 = 0, $4150 = 0, $4151 = 0, $4152 = 0, $4153 = 0, $4154 = 0, $4155 = 0, $4156 = 0, $4157 = 0, $4158 = 0, $4159 = 0, $416 = 0, $4160 = 0, $4161 = 0, $4162 = 0, $4163 = 0, $4164 = 0, $4165 = 0, $4166 = 0, $4167 = 0, $4168 = 0, $4169 = 0, $417 = 0, $4170 = 0, $4171 = 0, $4172 = 0, $4173 = 0, $4174 = 0, $4175 = 0, $4176 = 0, $4177 = 0, $4178 = 0, $4179 = 0, $418 = 0, $4180 = 0, $4181 = 0, $4182 = 0, $4183 = 0, $4184 = 0, $4185 = 0, $4186 = 0, $4187 = 0, $4188 = 0, $4189 = 0, $419 = 0, $4190 = 0, $4191 = 0, $4192 = 0, $4193 = 0, $4194 = 0, $4195 = 0, $4196 = 0, $4197 = 0, $4198 = 0, $4199 = 0, $42 = 0, $420 = 0, $4200 = 0, $4201 = 0, $4202 = 0, $4203 = 0, $4204 = 0, $4205 = 0, $4206 = 0, $4207 = 0, $4208 = 0, $4209 = 0, $421 = 0, $4210 = 0, $4211 = 0, $4212 = 0, $4213 = 0, $4214 = 0, $4215 = 0, $4216 = 0, $4217 = 0, $4218 = 0, $4219 = 0, $422 = 0, $4220 = 0, $4221 = 0, $4222 = 0, $4223 = 0, $4224 = 0, $4225 = 0, $4226 = 0, $4227 = 0, $4228 = 0, $4229 = 0, $423 = 0, $4230 = 0, $4231 = 0, $4232 = 0, $4233 = 0, $4234 = 0, $4235 = 0, $4236 = 0, $4237 = 0, $4238 = 0, $4239 = 0, $424 = 0, $4240 = 0, $4241 = 0, $4242 = 0, $4243 = 0, $4244 = 0, $4245 = 0, $4246 = 0, $4247 = 0, $4248 = 0, $4249 = 0, $425 = 0, $4250 = 0, $4251 = 0, $4252 = 0, $4253 = 0, $4254 = 0, $4255 = 0, $4256 = 0, $4257 = 0, $4258 = 0, $4259 = 0, $426 = 0, $4260 = 0, $4261 = 0, $4262 = 0, $4263 = 0, $4264 = 0, $4265 = 0, $4266 = 0, $4267 = 0, $4268 = 0, $4269 = 0, $427 = 0, $4270 = 0, $4271 = 0, $4272 = 0, $4273 = 0, $4274 = 0, $4275 = 0, $4276 = 0, $4277 = 0, $4278 = 0, $4279 = 0, $428 = 0, $4280 = 0, $4281 = 0, $4282 = 0, $4283 = 0, $4284 = 0, $4285 = 0, $4286 = 0, $4287 = 0, $4288 = 0, $4289 = 0, $429 = 0, $4290 = 0, $4291 = 0, $4292 = 0, $4293 = 0, $4294 = 0, $4295 = 0, $4296 = 0, $4297 = 0, $4298 = 0, $4299 = 0, $43 = 0, $430 = 0, $4300 = 0, $4301 = 0, $4302 = 0, $4303 = 0, $4304 = 0, $4305 = 0, $4306 = 0, $4307 = 0, $4308 = 0, $4309 = 0, $431 = 0, $4310 = 0, $4311 = 0, $4312 = 0, $4313 = 0, $4314 = 0, $4315 = 0, $4316 = 0, $4317 = 0, $4318 = 0, $4319 = 0, $432 = 0, $4320 = 0, $4321 = 0, $4322 = 0, $4323 = 0, $4324 = 0, $4325 = 0, $4326 = 0, $4327 = 0, $4328 = 0, $4329 = 0, $433 = 0, $4330 = 0, $4331 = 0, $4332 = 0, $4333 = 0, $4334 = 0, $4335 = 0, $4336 = 0, $4337 = 0, $4338 = 0, $4339 = 0, $434 = 0, $4340 = 0, $4341 = 0, $4342 = 0, $4343 = 0, $4344 = 0, $4345 = 0, $4346 = 0, $4347 = 0, $4348 = 0, $4349 = 0, $435 = 0, $4350 = 0, $4351 = 0, $4352 = 0, $4353 = 0, $4354 = 0, $4355 = 0, $4356 = 0, $4357 = 0, $4358 = 0, $4359 = 0, $436 = 0, $4360 = 0, $4361 = 0, $4362 = 0, $4363 = 0, $4364 = 0, $4365 = 0, $4366 = 0, $4367 = 0, $4368 = 0, $4369 = 0, $437 = 0, $4370 = 0, $4371 = 0, $4372 = 0, $4373 = 0, $4374 = 0, $4375 = 0, $4376 = 0, $4377 = 0, $4378 = 0, $4379 = 0, $438 = 0, $4380 = 0, $4381 = 0, $4382 = 0, $4383 = 0, $4384 = 0, $4385 = 0, $4386 = 0, $4387 = 0, $4388 = 0, $4389 = 0, $439 = 0, $4390 = 0, $4391 = 0, $4392 = 0, $4393 = 0, $4394 = 0, $4395 = 0, $4396 = 0, $4397 = 0, $4398 = 0, $4399 = 0, $44 = 0, $440 = 0, $4400 = 0, $4401 = 0, $4402 = 0, $4403 = 0, $4404 = 0, $4405 = 0, $4406 = 0, $4407 = 0, $4408 = 0, $4409 = 0, $441 = 0, $4410 = 0, $4411 = 0, $4412 = 0, $4413 = 0, $4414 = 0, $4415 = 0, $4416 = 0, $4417 = 0, $4418 = 0, $4419 = 0, $442 = 0, $4420 = 0, $4421 = 0, $4422 = 0, $4423 = 0, $4424 = 0, $4425 = 0, $4426 = 0, $4427 = 0, $4428 = 0, $4429 = 0, $443 = 0, $4430 = 0, $4431 = 0, $4432 = 0, $4433 = 0, $4434 = 0, $4435 = 0, $4436 = 0, $4437 = 0, $4438 = 0, $4439 = 0, $444 = 0, $4440 = 0, $4441 = 0, $4442 = 0, $4443 = 0, $4444 = 0, $4445 = 0, $4446 = 0, $4447 = 0, $4448 = 0, $4449 = 0, $445 = 0, $4450 = 0, $4451 = 0, $4452 = 0, $4453 = 0, $4454 = 0, $4455 = 0, $4456 = 0, $4457 = 0, $4458 = 0, $4459 = 0, $446 = 0, $4460 = 0, $4461 = 0, $4462 = 0, $4463 = 0, $4464 = 0, $4465 = 0, $4466 = 0, $4467 = 0, $4468 = 0, $4469 = 0, $447 = 0, $4470 = 0, $4471 = 0, $4472 = 0, $4473 = 0, $4474 = 0, $4475 = 0, $4476 = 0, $4477 = 0, $4478 = 0, $4479 = 0, $448 = 0, $4480 = 0, $4481 = 0, $4482 = 0, $4483 = 0, $4484 = 0, $4485 = 0, $4486 = 0, $4487 = 0, $4488 = 0, $4489 = 0, $449 = 0, $4490 = 0, $4491 = 0, $4492 = 0, $4493 = 0, $4494 = 0, $4495 = 0, $4496 = 0, $4497 = 0, $4498 = 0, $4499 = 0, $45 = 0, $450 = 0, $4500 = 0, $4501 = 0, $4502 = 0, $4503 = 0, $4504 = 0, $4505 = 0, $4506 = 0, $4507 = 0, $4508 = 0, $4509 = 0, $451 = 0, $4510 = 0, $4511 = 0, $4512 = 0, $4513 = 0, $4514 = 0, $4515 = 0, $4516 = 0, $4517 = 0, $4518 = 0, $4519 = 0, $452 = 0, $4520 = 0, $4521 = 0, $4522 = 0, $4523 = 0, $4524 = 0, $4525 = 0, $4526 = 0, $4527 = 0, $4528 = 0, $4529 = 0, $453 = 0, $4530 = 0, $4531 = 0, $4532 = 0, $4533 = 0, $4534 = 0, $4535 = 0, $4536 = 0, $4537 = 0, $4538 = 0, $4539 = 0, $454 = 0, $4540 = 0, $4541 = 0, $4542 = 0, $4543 = 0, $4544 = 0, $4545 = 0, $4546 = 0, $4547 = 0, $4548 = 0, $4549 = 0, $455 = 0, $4550 = 0, $4551 = 0, $4552 = 0, $4553 = 0, $4554 = 0, $4555 = 0, $4556 = 0, $4557 = 0, $4558 = 0, $4559 = 0, $456 = 0, $4560 = 0, $4561 = 0, $4562 = 0, $4563 = 0, $4564 = 0, $4565 = 0, $4566 = 0, $4567 = 0, $4568 = 0, $4569 = 0, $457 = 0, $4570 = 0, $4571 = 0, $4572 = 0, $4573 = 0, $4574 = 0, $4575 = 0, $4576 = 0, $4577 = 0, $4578 = 0, $4579 = 0, $458 = 0, $4580 = 0, $4581 = 0, $4582 = 0, $4583 = 0, $4584 = 0, $4585 = 0, $4586 = 0, $4587 = 0, $4588 = 0, $4589 = 0, $459 = 0, $4590 = 0, $4591 = 0, $4592 = 0, $4593 = 0, $4594 = 0, $4595 = 0, $4596 = 0, $4597 = 0, $4598 = 0, $4599 = 0, $46 = 0, $460 = 0, $4600 = 0, $4601 = 0, $4602 = 0, $4603 = 0, $4604 = 0, $4605 = 0, $4606 = 0, $4607 = 0, $4608 = 0, $4609 = 0, $461 = 0, $4610 = 0, $4611 = 0, $4612 = 0, $4613 = 0, $4614 = 0, $4615 = 0, $4616 = 0, $4617 = 0, $4618 = 0, $4619 = 0, $462 = 0, $4620 = 0, $4621 = 0, $4622 = 0, $4623 = 0, $4624 = 0, $4625 = 0, $4626 = 0, $4627 = 0, $4628 = 0, $4629 = 0, $463 = 0, $4630 = 0, $4631 = 0, $4632 = 0, $4633 = 0, $4634 = 0, $4635 = 0, $4636 = 0, $4637 = 0, $4638 = 0, $4639 = 0, $464 = 0, $4640 = 0, $4641 = 0, $4642 = 0, $4643 = 0, $4644 = 0, $4645 = 0, $4646 = 0, $4647 = 0, $4648 = 0, $4649 = 0, $465 = 0, $4650 = 0, $4651 = 0, $4652 = 0, $4653 = 0, $4654 = 0, $4655 = 0, $4656 = 0, $4657 = 0, $4658 = 0, $4659 = 0, $466 = 0, $4660 = 0, $4661 = 0, $4662 = 0, $4663 = 0, $4664 = 0, $4665 = 0, $4666 = 0, $4667 = 0, $4668 = 0, $4669 = 0, $467 = 0, $4670 = 0, $4671 = 0, $4672 = 0, $4673 = 0, $4674 = 0, $4675 = 0, $4676 = 0, $4677 = 0, $4678 = 0, $4679 = 0, $468 = 0, $4680 = 0, $4681 = 0, $4682 = 0, $4683 = 0, $4684 = 0, $4685 = 0, $4686 = 0, $4687 = 0, $4688 = 0, $4689 = 0, $469 = 0, $4690 = 0, $4691 = 0, $4692 = 0, $4693 = 0, $4694 = 0, $4695 = 0, $4696 = 0, $4697 = 0, $4698 = 0, $4699 = 0, $47 = 0, $470 = 0, $4700 = 0, $4701 = 0, $4702 = 0, $4703 = 0, $4704 = 0, $4705 = 0, $4706 = 0, $4707 = 0, $4708 = 0, $4709 = 0, $471 = 0, $4710 = 0, $4711 = 0, $4712 = 0, $4713 = 0, $4714 = 0, $4715 = 0, $4716 = 0, $4717 = 0, $4718 = 0, $4719 = 0, $472 = 0, $4720 = 0, $4721 = 0, $4722 = 0, $4723 = 0, $4724 = 0, $4725 = 0, $4726 = 0, $4727 = 0, $4728 = 0, $4729 = 0, $473 = 0, $4730 = 0, $4731 = 0, $4732 = 0, $4733 = 0, $4734 = 0, $4735 = 0, $4736 = 0, $4737 = 0, $4738 = 0, $4739 = 0, $474 = 0, $4740 = 0, $4741 = 0, $4742 = 0, $4743 = 0, $4744 = 0, $4745 = 0, $4746 = 0, $4747 = 0, $4748 = 0, $4749 = 0, $475 = 0, $4750 = 0, $4751 = 0, $4752 = 0, $4753 = 0, $4754 = 0, $4755 = 0, $4756 = 0, $4757 = 0, $4758 = 0, $4759 = 0, $476 = 0, $4760 = 0, $4761 = 0, $4762 = 0, $4763 = 0, $4764 = 0, $4765 = 0, $4766 = 0, $4767 = 0, $4768 = 0, $4769 = 0, $477 = 0, $4770 = 0, $4771 = 0, $4772 = 0, $4773 = 0, $4774 = 0, $4775 = 0, $4776 = 0, $4777 = 0, $4778 = 0, $4779 = 0, $478 = 0, $4780 = 0, $4781 = 0, $4782 = 0, $4783 = 0, $4784 = 0, $4785 = 0, $4786 = 0, $4787 = 0, $4788 = 0, $4789 = 0, $479 = 0, $4790 = 0, $4791 = 0, $4792 = 0, $4793 = 0, $4794 = 0, $4795 = 0, $4796 = 0, $4797 = 0, $4798 = 0, $4799 = 0, $48 = 0, $480 = 0, $4800 = 0, $4801 = 0, $4802 = 0, $4803 = 0, $4804 = 0, $4805 = 0, $4806 = 0, $4807 = 0, $4808 = 0, $4809 = 0, $481 = 0, $4810 = 0, $4811 = 0, $4812 = 0, $4813 = 0, $4814 = 0, $4815 = 0, $4816 = 0, $4817 = 0, $4818 = 0, $4819 = 0, $482 = 0, $4820 = 0, $4821 = 0, $4822 = 0, $4823 = 0, $4824 = 0, $4825 = 0, $4826 = 0, $4827 = 0, $4828 = 0, $4829 = 0, $483 = 0, $4830 = 0, $4831 = 0, $4832 = 0, $4833 = 0, $4834 = 0, $4835 = 0, $4836 = 0, $4837 = 0, $4838 = 0, $4839 = 0, $484 = 0, $4840 = 0, $4841 = 0, $4842 = 0, $4843 = 0, $4844 = 0, $4845 = 0, $4846 = 0, $4847 = 0, $4848 = 0, $4849 = 0, $485 = 0, $4850 = 0, $4851 = 0, $4852 = 0, $4853 = 0, $4854 = 0, $4855 = 0, $4856 = 0, $4857 = 0, $4858 = 0, $4859 = 0, $486 = 0, $4860 = 0, $4861 = 0, $4862 = 0, $4863 = 0, $4864 = 0, $4865 = 0, $4866 = 0, $4867 = 0, $4868 = 0, $4869 = 0, $487 = 0, $4870 = 0, $4871 = 0, $4872 = 0, $4873 = 0, $4874 = 0, $4875 = 0, $4876 = 0, $4877 = 0, $4878 = 0, $4879 = 0, $488 = 0, $4880 = 0, $4881 = 0, $4882 = 0, $4883 = 0, $4884 = 0, $4885 = 0, $4886 = 0, $4887 = 0, $4888 = 0, $4889 = 0, $489 = 0, $4890 = 0, $4891 = 0, $4892 = 0, $4893 = 0, $4894 = 0, $4895 = 0, $4896 = 0, $4897 = 0, $4898 = 0, $4899 = 0, $49 = 0, $490 = 0, $4900 = 0, $4901 = 0, $4902 = 0, $4903 = 0, $4904 = 0, $4905 = 0, $4906 = 0, $4907 = 0, $4908 = 0, $4909 = 0, $491 = 0, $4910 = 0, $4911 = 0, $4912 = 0, $4913 = 0, $4914 = 0, $4915 = 0, $4916 = 0, $4917 = 0, $4918 = 0, $4919 = 0, $492 = 0, $4920 = 0, $4921 = 0, $4922 = 0, $4923 = 0, $4924 = 0, $4925 = 0, $4926 = 0, $4927 = 0, $4928 = 0, $4929 = 0, $493 = 0, $4930 = 0, $4931 = 0, $4932 = 0, $4933 = 0, $4934 = 0, $4935 = 0, $4936 = 0, $4937 = 0, $4938 = 0, $4939 = 0, $494 = 0, $4940 = 0, $4941 = 0, $4942 = 0, $4943 = 0, $4944 = 0, $4945 = 0, $4946 = 0, $4947 = 0, $4948 = 0, $4949 = 0, $495 = 0, $4950 = 0, $4951 = 0, $4952 = 0, $4953 = 0, $4954 = 0, $4955 = 0, $4956 = 0, $4957 = 0, $4958 = 0, $4959 = 0, $496 = 0, $4960 = 0, $4961 = 0, $4962 = 0, $4963 = 0, $4964 = 0, $4965 = 0, $4966 = 0, $4967 = 0, $4968 = 0, $4969 = 0, $497 = 0, $4970 = 0, $4971 = 0, $4972 = 0, $4973 = 0, $4974 = 0, $4975 = 0, $4976 = 0, $4977 = 0, $4978 = 0, $4979 = 0, $498 = 0, $4980 = 0, $4981 = 0, $4982 = 0, $4983 = 0, $4984 = 0, $4985 = 0, $4986 = 0, $4987 = 0, $4988 = 0, $4989 = 0, $499 = 0, $4990 = 0, $4991 = 0, $4992 = 0, $4993 = 0, $4994 = 0, $4995 = 0, $4996 = 0, $4997 = 0, $4998 = 0, $4999 = 0, $5 = 0, $50 = 0, $500 = 0, $5000 = 0, $5001 = 0, $5002 = 0, $5003 = 0, $5004 = 0, $5005 = 0, $5006 = 0, $5007 = 0, $5008 = 0, $5009 = 0, $501 = 0, $5010 = 0, $5011 = 0, $5012 = 0, $5013 = 0, $5014 = 0, $5015 = 0, $5016 = 0, $5017 = 0, $5018 = 0, $5019 = 0, $502 = 0, $5020 = 0, $5021 = 0, $5022 = 0, $5023 = 0, $5024 = 0, $5025 = 0, $5026 = 0, $5027 = 0, $5028 = 0, $5029 = 0, $503 = 0, $5030 = 0, $5031 = 0, $5032 = 0, $5033 = 0, $5034 = 0, $5035 = 0, $5036 = 0, $5037 = 0, $5038 = 0, $5039 = 0, $504 = 0, $5040 = 0, $5041 = 0, $5042 = 0, $5043 = 0, $5044 = 0, $5045 = 0, $5046 = 0, $5047 = 0, $5048 = 0, $5049 = 0, $505 = 0, $5050 = 0, $5051 = 0, $5052 = 0, $5053 = 0, $5054 = 0, $5055 = 0, $5056 = 0, $5057 = 0, $5058 = 0, $5059 = 0, $506 = 0, $5060 = 0, $5061 = 0, $5062 = 0, $5063 = 0, $5064 = 0, $5065 = 0, $5066 = 0, $5067 = 0, $5068 = 0, $5069 = 0, $507 = 0, $5070 = 0, $5071 = 0, $5072 = 0, $5073 = 0, $5074 = 0, $5075 = 0, $5076 = 0, $5077 = 0, $5078 = 0, $5079 = 0, $508 = 0, $5080 = 0, $5081 = 0, $5082 = 0, $5083 = 0, $5084 = 0, $5085 = 0, $5086 = 0, $5087 = 0, $5088 = 0, $5089 = 0, $509 = 0, $5090 = 0, $5091 = 0, $5092 = 0, $5093 = 0, $5094 = 0, $5095 = 0, $5096 = 0, $5097 = 0, $5098 = 0, $5099 = 0, $51 = 0, $510 = 0, $5100 = 0, $5101 = 0, $5102 = 0, $5103 = 0, $5104 = 0, $5105 = 0, $5106 = 0, $5107 = 0, $5108 = 0, $5109 = 0, $511 = 0, $5110 = 0, $5111 = 0, $5112 = 0, $5113 = 0, $5114 = 0, $5115 = 0, $5116 = 0, $5117 = 0, $5118 = 0, $5119 = 0, $512 = 0, $5120 = 0, $5121 = 0, $5122 = 0, $5123 = 0, $5124 = 0, $5125 = 0, $5126 = 0, $5127 = 0, $5128 = 0, $5129 = 0, $513 = 0, $5130 = 0, $5131 = 0, $5132 = 0, $5133 = 0, $5134 = 0, $5135 = 0, $5136 = 0, $5137 = 0, $5138 = 0, $5139 = 0, $514 = 0, $5140 = 0, $5141 = 0, $5142 = 0, $5143 = 0, $5144 = 0, $5145 = 0, $5146 = 0, $5147 = 0, $5148 = 0, $5149 = 0, $515 = 0, $5150 = 0, $5151 = 0, $5152 = 0, $5153 = 0, $5154 = 0, $5155 = 0, $5156 = 0, $5157 = 0, $5158 = 0, $5159 = 0, $516 = 0, $5160 = 0, $5161 = 0, $5162 = 0, $5163 = 0, $5164 = 0, $5165 = 0, $5166 = 0, $5167 = 0, $5168 = 0, $5169 = 0, $517 = 0, $5170 = 0, $5171 = 0, $5172 = 0, $5173 = 0, $5174 = 0, $5175 = 0, $5176 = 0, $5177 = 0, $5178 = 0, $5179 = 0, $518 = 0, $5180 = 0, $5181 = 0, $5182 = 0, $5183 = 0, $5184 = 0, $5185 = 0, $5186 = 0, $5187 = 0, $5188 = 0, $5189 = 0, $519 = 0, $5190 = 0, $5191 = 0, $5192 = 0, $5193 = 0, $5194 = 0, $5195 = 0, $5196 = 0, $5197 = 0, $5198 = 0, $5199 = 0, $52 = 0, $520 = 0, $5200 = 0, $5201 = 0, $5202 = 0, $5203 = 0, $5204 = 0, $5205 = 0, $5206 = 0, $5207 = 0, $5208 = 0, $5209 = 0, $521 = 0, $5210 = 0, $5211 = 0, $5212 = 0, $5213 = 0, $5214 = 0, $5215 = 0, $5216 = 0, $5217 = 0, $5218 = 0, $5219 = 0, $522 = 0, $5220 = 0, $5221 = 0, $5222 = 0, $5223 = 0, $5224 = 0, $5225 = 0, $5226 = 0, $5227 = 0, $5228 = 0, $5229 = 0, $523 = 0, $5230 = 0, $5231 = 0, $5232 = 0, $5233 = 0, $5234 = 0, $5235 = 0, $5236 = 0, $5237 = 0, $5238 = 0, $5239 = 0, $524 = 0, $5240 = 0, $5241 = 0, $5242 = 0, $5243 = 0, $5244 = 0, $5245 = 0, $5246 = 0, $5247 = 0, $5248 = 0, $5249 = 0, $525 = 0, $5250 = 0, $5251 = 0, $5252 = 0, $5253 = 0, $5254 = 0, $5255 = 0, $5256 = 0, $5257 = 0, $5258 = 0, $5259 = 0, $526 = 0, $5260 = 0, $5261 = 0, $5262 = 0, $5263 = 0, $5264 = 0, $5265 = 0, $5266 = 0, $5267 = 0, $5268 = 0, $5269 = 0, $527 = 0, $5270 = 0, $5271 = 0, $5272 = 0, $5273 = 0, $5274 = 0, $5275 = 0, $5276 = 0, $5277 = 0, $5278 = 0, $5279 = 0, $528 = 0, $5280 = 0, $5281 = 0, $5282 = 0, $5283 = 0, $5284 = 0, $5285 = 0, $5286 = 0, $5287 = 0, $5288 = 0, $5289 = 0, $529 = 0, $5290 = 0, $5291 = 0, $5292 = 0, $5293 = 0, $5294 = 0, $5295 = 0, $5296 = 0, $5297 = 0, $5298 = 0, $5299 = 0, $53 = 0, $530 = 0, $5300 = 0, $5301 = 0, $5302 = 0, $5303 = 0, $5304 = 0, $5305 = 0, $5306 = 0, $5307 = 0, $5308 = 0, $5309 = 0, $531 = 0, $5310 = 0, $5311 = 0, $5312 = 0, $5313 = 0, $5314 = 0, $5315 = 0, $5316 = 0, $5317 = 0, $5318 = 0, $5319 = 0, $532 = 0, $5320 = 0, $5321 = 0, $5322 = 0, $5323 = 0, $5324 = 0, $5325 = 0, $5326 = 0, $5327 = 0, $5328 = 0, $5329 = 0, $533 = 0, $5330 = 0, $5331 = 0, $5332 = 0, $5333 = 0, $5334 = 0, $5335 = 0, $5336 = 0, $5337 = 0, $5338 = 0, $5339 = 0, $534 = 0, $5340 = 0, $5341 = 0, $5342 = 0, $5343 = 0, $5344 = 0, $5345 = 0, $5346 = 0, $5347 = 0, $5348 = 0, $5349 = 0, $535 = 0, $5350 = 0, $5351 = 0, $5352 = 0, $5353 = 0, $5354 = 0, $5355 = 0, $5356 = 0, $5357 = 0, $5358 = 0, $5359 = 0, $536 = 0, $5360 = 0, $5361 = 0, $5362 = 0, $5363 = 0, $5364 = 0, $5365 = 0, $5366 = 0, $5367 = 0, $5368 = 0, $5369 = 0, $537 = 0, $5370 = 0, $5371 = 0, $5372 = 0, $5373 = 0, $5374 = 0, $5375 = 0, $5376 = 0, $5377 = 0, $5378 = 0, $5379 = 0, $538 = 0, $5380 = 0, $5381 = 0, $5382 = 0, $5383 = 0, $5384 = 0, $5385 = 0, $5386 = 0, $5387 = 0, $5388 = 0, $5389 = 0, $539 = 0, $5390 = 0, $5391 = 0, $5392 = 0, $5393 = 0, $5394 = 0, $5395 = 0, $5396 = 0, $5397 = 0, $5398 = 0, $5399 = 0, $54 = 0, $540 = 0, $5400 = 0, $5401 = 0, $5402 = 0, $5403 = 0, $5404 = 0, $5405 = 0, $5406 = 0, $5407 = 0, $5408 = 0, $5409 = 0, $541 = 0, $5410 = 0, $5411 = 0, $5412 = 0, $5413 = 0, $5414 = 0, $5415 = 0, $5416 = 0, $5417 = 0, $5418 = 0, $5419 = 0, $542 = 0, $5420 = 0, $5421 = 0, $5422 = 0, $5423 = 0, $5424 = 0, $5425 = 0, $5426 = 0, $5427 = 0, $5428 = 0, $5429 = 0, $543 = 0, $5430 = 0, $5431 = 0, $5432 = 0, $5433 = 0, $5434 = 0, $5435 = 0, $5436 = 0, $5437 = 0, $5438 = 0, $5439 = 0, $544 = 0, $5440 = 0, $5441 = 0, $5442 = 0, $5443 = 0, $5444 = 0, $5445 = 0, $5446 = 0, $5447 = 0, $5448 = 0, $5449 = 0, $545 = 0, $5450 = 0, $5451 = 0, $5452 = 0, $5453 = 0, $5454 = 0, $5455 = 0, $5456 = 0, $5457 = 0, $5458 = 0, $5459 = 0, $546 = 0, $5460 = 0, $5461 = 0, $5462 = 0, $5463 = 0, $5464 = 0, $5465 = 0, $5466 = 0, $5467 = 0, $5468 = 0, $5469 = 0, $547 = 0, $5470 = 0, $5471 = 0, $5472 = 0, $5473 = 0, $5474 = 0, $5475 = 0, $5476 = 0, $5477 = 0, $5478 = 0, $5479 = 0, $548 = 0, $5480 = 0, $5481 = 0, $5482 = 0, $5483 = 0, $5484 = 0, $5485 = 0, $5486 = 0, $5487 = 0, $5488 = 0, $5489 = 0, $549 = 0, $5490 = 0, $5491 = 0, $5492 = 0, $5493 = 0, $5494 = 0, $5495 = 0, $5496 = 0, $5497 = 0, $5498 = 0, $5499 = 0, $55 = 0, $550 = 0, $5500 = 0, $5501 = 0, $5502 = 0, $5503 = 0, $5504 = 0, $5505 = 0, $5506 = 0, $5507 = 0, $5508 = 0, $5509 = 0, $551 = 0, $5510 = 0, $5511 = 0, $5512 = 0, $5513 = 0, $5514 = 0, $5515 = 0, $5516 = 0, $5517 = 0, $5518 = 0, $5519 = 0, $552 = 0, $5520 = 0, $5521 = 0, $5522 = 0, $5523 = 0, $5524 = 0, $5525 = 0, $5526 = 0, $5527 = 0, $5528 = 0, $5529 = 0, $553 = 0, $5530 = 0, $5531 = 0, $5532 = 0, $5533 = 0, $5534 = 0, $5535 = 0, $5536 = 0, $5537 = 0, $5538 = 0, $5539 = 0, $554 = 0, $5540 = 0, $5541 = 0, $5542 = 0, $5543 = 0, $5544 = 0, $5545 = 0, $5546 = 0, $5547 = 0, $5548 = 0, $5549 = 0, $555 = 0, $5550 = 0, $5551 = 0, $5552 = 0, $5553 = 0, $5554 = 0, $5555 = 0, $5556 = 0, $5557 = 0, $5558 = 0, $5559 = 0, $556 = 0, $5560 = 0, $5561 = 0, $5562 = 0, $5563 = 0, $5564 = 0, $5565 = 0, $5566 = 0, $5567 = 0, $5568 = 0, $5569 = 0, $557 = 0, $5570 = 0, $5571 = 0, $5572 = 0, $5573 = 0, $5574 = 0, $5575 = 0, $5576 = 0, $5577 = 0, $5578 = 0, $5579 = 0, $558 = 0, $5580 = 0, $5581 = 0, $5582 = 0, $5583 = 0, $5584 = 0, $5585 = 0, $5586 = 0, $5587 = 0, $5588 = 0, $5589 = 0, $559 = 0, $5590 = 0, $5591 = 0, $5592 = 0, $5593 = 0, $5594 = 0, $5595 = 0, $5596 = 0, $5597 = 0, $5598 = 0, $5599 = 0, $56 = 0, $560 = 0, $5600 = 0, $5601 = 0, $5602 = 0, $5603 = 0, $5604 = 0, $5605 = 0, $5606 = 0, $5607 = 0, $5608 = 0, $5609 = 0, $561 = 0, $5610 = 0, $5611 = 0, $5612 = 0, $5613 = 0, $5614 = 0, $5615 = 0, $5616 = 0, $5617 = 0, $5618 = 0, $5619 = 0, $562 = 0, $5620 = 0, $5621 = 0, $5622 = 0, $5623 = 0, $5624 = 0, $5625 = 0, $5626 = 0, $5627 = 0, $5628 = 0, $5629 = 0, $563 = 0, $5630 = 0, $5631 = 0, $5632 = 0, $5633 = 0, $5634 = 0, $5635 = 0, $5636 = 0, $5637 = 0, $5638 = 0, $5639 = 0, $564 = 0, $5640 = 0, $5641 = 0, $5642 = 0, $5643 = 0, $5644 = 0, $5645 = 0, $5646 = 0, $5647 = 0, $5648 = 0, $5649 = 0, $565 = 0, $5650 = 0, $5651 = 0, $5652 = 0, $5653 = 0, $5654 = 0, $5655 = 0, $5656 = 0, $5657 = 0, $5658 = 0, $5659 = 0, $566 = 0, $5660 = 0, $5661 = 0, $5662 = 0, $5663 = 0, $5664 = 0, $5665 = 0, $5666 = 0, $5667 = 0, $5668 = 0, $5669 = 0, $567 = 0, $5670 = 0, $5671 = 0, $5672 = 0, $5673 = 0, $5674 = 0, $5675 = 0, $5676 = 0, $5677 = 0, $5678 = 0, $5679 = 0, $568 = 0, $5680 = 0, $5681 = 0, $5682 = 0, $5683 = 0, $5684 = 0, $5685 = 0, $5686 = 0, $5687 = 0, $5688 = 0, $5689 = 0, $569 = 0, $5690 = 0, $5691 = 0, $5692 = 0, $5693 = 0, $5694 = 0, $5695 = 0, $5696 = 0, $5697 = 0, $5698 = 0, $5699 = 0, $57 = 0, $570 = 0, $5700 = 0, $5701 = 0, $5702 = 0, $5703 = 0, $5704 = 0, $5705 = 0, $5706 = 0, $5707 = 0, $5708 = 0, $5709 = 0, $571 = 0, $5710 = 0, $5711 = 0, $5712 = 0, $5713 = 0, $5714 = 0, $5715 = 0, $5716 = 0, $5717 = 0, $5718 = 0, $5719 = 0, $572 = 0, $5720 = 0, $5721 = 0, $5722 = 0, $5723 = 0, $5724 = 0, $5725 = 0, $5726 = 0, $5727 = 0, $5728 = 0, $5729 = 0, $573 = 0, $5730 = 0, $5731 = 0, $5732 = 0, $5733 = 0, $5734 = 0, $5735 = 0, $5736 = 0, $5737 = 0, $5738 = 0, $5739 = 0, $574 = 0, $5740 = 0, $5741 = 0, $5742 = 0, $5743 = 0, $5744 = 0, $5745 = 0, $5746 = 0, $5747 = 0, $5748 = 0, $5749 = 0, $575 = 0, $5750 = 0, $5751 = 0, $5752 = 0, $5753 = 0, $5754 = 0, $5755 = 0, $5756 = 0, $5757 = 0, $5758 = 0, $5759 = 0, $576 = 0, $5760 = 0, $5761 = 0, $5762 = 0, $5763 = 0, $5764 = 0, $5765 = 0, $5766 = 0, $5767 = 0, $5768 = 0, $5769 = 0, $577 = 0, $5770 = 0, $5771 = 0, $5772 = 0, $5773 = 0, $5774 = 0, $5775 = 0, $5776 = 0, $5777 = 0, $5778 = 0, $5779 = 0, $578 = 0, $5780 = 0, $5781 = 0, $5782 = 0, $5783 = 0, $5784 = 0, $5785 = 0, $5786 = 0, $5787 = 0, $5788 = 0, $5789 = 0, $579 = 0, $5790 = 0, $5791 = 0, $5792 = 0, $5793 = 0, $5794 = 0, $5795 = 0, $5796 = 0, $5797 = 0, $5798 = 0, $5799 = 0, $58 = 0, $580 = 0, $5800 = 0, $5801 = 0, $5802 = 0, $5803 = 0, $5804 = 0, $5805 = 0, $5806 = 0, $5807 = 0, $5808 = 0, $5809 = 0, $581 = 0, $5810 = 0, $5811 = 0, $5812 = 0, $5813 = 0, $5814 = 0, $5815 = 0, $5816 = 0, $5817 = 0, $5818 = 0, $5819 = 0, $582 = 0, $5820 = 0, $5821 = 0, $5822 = 0, $5823 = 0, $5824 = 0, $5825 = 0, $5826 = 0, $5827 = 0, $5828 = 0, $5829 = 0, $583 = 0, $5830 = 0, $5831 = 0, $5832 = 0, $5833 = 0, $5834 = 0, $5835 = 0, $5836 = 0, $5837 = 0, $5838 = 0, $5839 = 0, $584 = 0, $5840 = 0, $5841 = 0, $5842 = 0, $5843 = 0, $5844 = 0, $5845 = 0, $5846 = 0, $5847 = 0, $5848 = 0, $5849 = 0, $585 = 0, $5850 = 0, $5851 = 0, $5852 = 0, $5853 = 0, $5854 = 0, $5855 = 0, $5856 = 0, $5857 = 0, $5858 = 0, $5859 = 0, $586 = 0, $5860 = 0, $5861 = 0, $5862 = 0, $5863 = 0, $5864 = 0, $5865 = 0, $5866 = 0, $5867 = 0, $5868 = 0, $5869 = 0, $587 = 0, $5870 = 0, $5871 = 0, $5872 = 0, $5873 = 0, $5874 = 0, $5875 = 0, $5876 = 0, $5877 = 0, $5878 = 0, $5879 = 0, $588 = 0, $5880 = 0, $5881 = 0, $5882 = 0, $5883 = 0, $5884 = 0, $5885 = 0, $5886 = 0, $5887 = 0, $5888 = 0, $5889 = 0, $589 = 0, $5890 = 0, $5891 = 0, $5892 = 0, $5893 = 0, $5894 = 0, $5895 = 0, $5896 = 0, $5897 = 0, $5898 = 0, $5899 = 0, $59 = 0, $590 = 0, $5900 = 0, $5901 = 0, $5902 = 0, $5903 = 0, $5904 = 0, $5905 = 0, $5906 = 0, $5907 = 0, $5908 = 0, $5909 = 0, $591 = 0, $5910 = 0, $5911 = 0, $5912 = 0, $5913 = 0, $5914 = 0, $5915 = 0, $5916 = 0, $5917 = 0, $5918 = 0, $5919 = 0, $592 = 0, $5920 = 0, $5921 = 0, $5922 = 0, $5923 = 0, $5924 = 0, $5925 = 0, $5926 = 0, $5927 = 0, $5928 = 0, $5929 = 0, $593 = 0, $5930 = 0, $5931 = 0, $5932 = 0, $5933 = 0, $5934 = 0, $5935 = 0, $5936 = 0, $5937 = 0, $5938 = 0, $5939 = 0, $594 = 0, $5940 = 0, $5941 = 0, $5942 = 0, $5943 = 0, $5944 = 0, $5945 = 0, $5946 = 0, $5947 = 0, $5948 = 0, $5949 = 0, $595 = 0, $5950 = 0, $5951 = 0, $5952 = 0, $5953 = 0, $5954 = 0, $5955 = 0, $5956 = 0, $5957 = 0, $5958 = 0, $5959 = 0, $596 = 0, $5960 = 0, $5961 = 0, $5962 = 0, $5963 = 0, $5964 = 0, $5965 = 0, $5966 = 0, $5967 = 0, $5968 = 0, $5969 = 0, $597 = 0, $5970 = 0, $5971 = 0, $5972 = 0, $5973 = 0, $5974 = 0, $5975 = 0, $5976 = 0, $5977 = 0, $5978 = 0, $5979 = 0, $598 = 0, $5980 = 0, $5981 = 0, $5982 = 0, $5983 = 0, $5984 = 0, $5985 = 0, $5986 = 0, $5987 = 0, $5988 = 0, $5989 = 0, $599 = 0, $5990 = 0, $5991 = 0, $5992 = 0, $5993 = 0, $5994 = 0, $5995 = 0, $5996 = 0, $5997 = 0, $5998 = 0, $5999 = 0, $6 = 0, $60 = 0, $600 = 0, $6000 = 0, $6001 = 0, $6002 = 0, $6003 = 0, $6004 = 0, $6005 = 0, $6006 = 0, $6007 = 0, $6008 = 0, $6009 = 0, $601 = 0, $6010 = 0, $6011 = 0, $6012 = 0, $6013 = 0, $6014 = 0, $6015 = 0, $6016 = 0, $6017 = 0, $6018 = 0, $6019 = 0, $602 = 0, $6020 = 0, $6021 = 0, $6022 = 0, $6023 = 0, $6024 = 0, $6025 = 0, $6026 = 0, $6027 = 0, $6028 = 0, $6029 = 0, $603 = 0, $6030 = 0, $6031 = 0, $6032 = 0, $6033 = 0, $6034 = 0, $6035 = 0, $6036 = 0, $6037 = 0, $6038 = 0, $6039 = 0, $604 = 0, $6040 = 0, $6041 = 0, $6042 = 0, $6043 = 0, $6044 = 0, $6045 = 0, $6046 = 0, $6047 = 0, $6048 = 0, $6049 = 0, $605 = 0, $6050 = 0, $6051 = 0, $6052 = 0, $6053 = 0, $6054 = 0, $6055 = 0, $6056 = 0, $6057 = 0, $6058 = 0, $6059 = 0, $606 = 0, $6060 = 0, $6061 = 0, $6062 = 0, $6063 = 0, $6064 = 0, $6065 = 0, $6066 = 0, $6067 = 0, $6068 = 0, $6069 = 0, $607 = 0, $6070 = 0, $6071 = 0, $6072 = 0, $6073 = 0, $6074 = 0, $6075 = 0, $6076 = 0, $6077 = 0, $6078 = 0, $6079 = 0, $608 = 0, $6080 = 0, $6081 = 0, $6082 = 0, $6083 = 0, $6084 = 0, $6085 = 0, $6086 = 0, $6087 = 0, $6088 = 0, $6089 = 0, $609 = 0, $6090 = 0, $6091 = 0, $6092 = 0, $6093 = 0, $6094 = 0, $6095 = 0, $6096 = 0, $6097 = 0, $6098 = 0, $6099 = 0, $61 = 0, $610 = 0, $6100 = 0, $6101 = 0, $6102 = 0, $6103 = 0, $6104 = 0, $6105 = 0, $6106 = 0, $6107 = 0, $6108 = 0, $6109 = 0, $611 = 0, $6110 = 0, $6111 = 0, $6112 = 0, $6113 = 0, $6114 = 0, $6115 = 0, $6116 = 0, $6117 = 0, $6118 = 0, $6119 = 0, $612 = 0, $6120 = 0, $6121 = 0, $6122 = 0, $6123 = 0, $6124 = 0, $6125 = 0, $6126 = 0, $6127 = 0, $6128 = 0, $6129 = 0, $613 = 0, $6130 = 0, $6131 = 0, $6132 = 0, $6133 = 0, $6134 = 0, $6135 = 0, $6136 = 0, $6137 = 0, $6138 = 0, $6139 = 0, $614 = 0, $6140 = 0, $6141 = 0, $6142 = 0, $6143 = 0, $6144 = 0, $6145 = 0, $6146 = 0, $6147 = 0, $6148 = 0, $6149 = 0, $615 = 0, $6150 = 0, $6151 = 0, $6152 = 0, $6153 = 0, $6154 = 0, $6155 = 0, $6156 = 0, $6157 = 0, $6158 = 0, $6159 = 0, $616 = 0, $6160 = 0, $6161 = 0, $6162 = 0, $6163 = 0, $6164 = 0, $6165 = 0, $6166 = 0, $6167 = 0, $6168 = 0, $6169 = 0, $617 = 0, $6170 = 0, $6171 = 0, $6172 = 0, $6173 = 0, $6174 = 0, $6175 = 0, $6176 = 0, $6177 = 0, $6178 = 0, $6179 = 0, $618 = 0, $6180 = 0, $6181 = 0, $6182 = 0, $6183 = 0, $6184 = 0, $6185 = 0, $6186 = 0, $6187 = 0, $6188 = 0, $6189 = 0, $619 = 0, $6190 = 0, $6191 = 0, $6192 = 0, $6193 = 0, $6194 = 0, $6195 = 0, $6196 = 0, $6197 = 0, $6198 = 0, $6199 = 0, $62 = 0, $620 = 0, $6200 = 0, $6201 = 0, $6202 = 0, $6203 = 0, $6204 = 0, $6205 = 0, $6206 = 0, $6207 = 0, $6208 = 0, $6209 = 0, $621 = 0, $6210 = 0, $6211 = 0, $6212 = 0, $6213 = 0, $6214 = 0, $6215 = 0, $6216 = 0, $6217 = 0, $6218 = 0, $6219 = 0, $622 = 0, $6220 = 0, $6221 = 0, $6222 = 0, $6223 = 0, $6224 = 0, $6225 = 0, $6226 = 0, $6227 = 0, $6228 = 0, $6229 = 0, $623 = 0, $6230 = 0, $6231 = 0, $6232 = 0, $6233 = 0, $6234 = 0, $6235 = 0, $6236 = 0, $6237 = 0, $6238 = 0, $6239 = 0, $624 = 0, $6240 = 0, $6241 = 0, $6242 = 0, $6243 = 0, $6244 = 0, $6245 = 0, $6246 = 0, $6247 = 0, $6248 = 0, $6249 = 0, $625 = 0, $6250 = 0, $6251 = 0, $6252 = 0, $6253 = 0, $6254 = 0, $6255 = 0, $6256 = 0, $6257 = 0, $6258 = 0, $6259 = 0, $626 = 0, $6260 = 0, $6261 = 0, $6262 = 0, $6263 = 0, $6264 = 0, $6265 = 0, $6266 = 0, $6267 = 0, $6268 = 0, $6269 = 0, $627 = 0, $6270 = 0, $6271 = 0, $6272 = 0, $6273 = 0, $6274 = 0, $6275 = 0, $6276 = 0, $6277 = 0, $6278 = 0, $6279 = 0, $628 = 0, $6280 = 0, $6281 = 0, $6282 = 0, $6283 = 0, $6284 = 0, $6285 = 0, $6286 = 0, $6287 = 0, $6288 = 0, $6289 = 0, $629 = 0, $6290 = 0, $6291 = 0, $6292 = 0, $6293 = 0, $6294 = 0, $6295 = 0, $6296 = 0, $6297 = 0, $6298 = 0, $6299 = 0, $63 = 0, $630 = 0, $6300 = 0, $6301 = 0, $6302 = 0, $6303 = 0, $6304 = 0, $6305 = 0, $6306 = 0, $6307 = 0, $6308 = 0, $6309 = 0, $631 = 0, $6310 = 0, $6311 = 0, $6312 = 0, $6313 = 0, $6314 = 0, $6315 = 0, $6316 = 0, $6317 = 0, $6318 = 0, $6319 = 0, $632 = 0, $6320 = 0, $6321 = 0, $6322 = 0, $6323 = 0, $6324 = 0, $6325 = 0, $6326 = 0, $6327 = 0, $6328 = 0, $6329 = 0, $633 = 0, $6330 = 0, $6331 = 0, $6332 = 0, $6333 = 0, $6334 = 0, $6335 = 0, $6336 = 0, $6337 = 0, $6338 = 0, $6339 = 0, $634 = 0, $6340 = 0, $6341 = 0, $6342 = 0, $6343 = 0, $6344 = 0, $6345 = 0, $6346 = 0, $6347 = 0, $6348 = 0, $6349 = 0, $635 = 0, $6350 = 0, $6351 = 0, $6352 = 0, $6353 = 0, $6354 = 0, $6355 = 0, $6356 = 0, $6357 = 0, $6358 = 0, $6359 = 0, $636 = 0, $6360 = 0, $6361 = 0, $6362 = 0, $6363 = 0, $6364 = 0, $6365 = 0, $6366 = 0, $6367 = 0, $6368 = 0, $6369 = 0, $637 = 0, $6370 = 0, $6371 = 0, $6372 = 0, $6373 = 0, $6374 = 0, $6375 = 0, $6376 = 0, $6377 = 0, $6378 = 0, $6379 = 0, $638 = 0, $6380 = 0, $6381 = 0, $6382 = 0, $6383 = 0, $6384 = 0, $6385 = 0, $6386 = 0, $6387 = 0, $6388 = 0, $6389 = 0, $639 = 0, $6390 = 0, $6391 = 0, $6392 = 0, $6393 = 0, $6394 = 0, $6395 = 0, $6396 = 0, $6397 = 0, $6398 = 0, $6399 = 0, $64 = 0, $640 = 0, $6400 = 0, $6401 = 0, $6402 = 0, $6403 = 0, $6404 = 0, $6405 = 0, $6406 = 0, $6407 = 0, $6408 = 0, $6409 = 0, $641 = 0, $6410 = 0, $6411 = 0, $6412 = 0, $6413 = 0, $6414 = 0, $6415 = 0, $6416 = 0, $6417 = 0, $6418 = 0, $6419 = 0, $642 = 0, $6420 = 0, $6421 = 0, $6422 = 0, $6423 = 0, $6424 = 0, $6425 = 0, $6426 = 0, $6427 = 0, $6428 = 0, $6429 = 0, $643 = 0, $6430 = 0, $6431 = 0, $6432 = 0, $6433 = 0, $6434 = 0, $6435 = 0, $6436 = 0, $6437 = 0, $6438 = 0, $6439 = 0, $644 = 0, $6440 = 0, $6441 = 0, $6442 = 0, $6443 = 0, $6444 = 0, $6445 = 0, $6446 = 0, $6447 = 0, $6448 = 0, $6449 = 0, $645 = 0, $6450 = 0, $6451 = 0, $6452 = 0, $6453 = 0, $6454 = 0, $6455 = 0, $6456 = 0, $6457 = 0, $6458 = 0, $6459 = 0, $646 = 0, $6460 = 0, $6461 = 0, $6462 = 0, $6463 = 0, $6464 = 0, $6465 = 0, $6466 = 0, $6467 = 0, $6468 = 0, $6469 = 0, $647 = 0, $6470 = 0, $6471 = 0, $6472 = 0, $6473 = 0, $6474 = 0, $6475 = 0, $6476 = 0, $6477 = 0, $6478 = 0, $6479 = 0, $648 = 0, $6480 = 0, $6481 = 0, $6482 = 0, $6483 = 0, $6484 = 0, $6485 = 0, $6486 = 0, $6487 = 0, $6488 = 0, $6489 = 0, $649 = 0, $6490 = 0, $6491 = 0, $6492 = 0, $6493 = 0, $6494 = 0, $6495 = 0, $6496 = 0, $6497 = 0, $6498 = 0, $6499 = 0, $65 = 0, $650 = 0, $6500 = 0, $6501 = 0, $6502 = 0, $6503 = 0, $6504 = 0, $6505 = 0, $6506 = 0, $6507 = 0, $6508 = 0, $6509 = 0, $651 = 0, $6510 = 0, $6511 = 0, $6512 = 0, $6513 = 0, $6514 = 0, $6515 = 0, $6516 = 0, $6517 = 0, $6518 = 0, $6519 = 0, $652 = 0, $6520 = 0, $6521 = 0, $6522 = 0, $6523 = 0, $6524 = 0, $6525 = 0, $6526 = 0, $6527 = 0, $6528 = 0, $6529 = 0, $653 = 0, $6530 = 0, $6531 = 0, $6532 = 0, $6533 = 0, $6534 = 0, $6535 = 0, $6536 = 0, $6537 = 0, $6538 = 0, $6539 = 0, $654 = 0, $6540 = 0, $6541 = 0, $6542 = 0, $6543 = 0, $6544 = 0, $6545 = 0, $6546 = 0, $6547 = 0, $6548 = 0, $6549 = 0, $655 = 0, $6550 = 0, $6551 = 0, $6552 = 0, $6553 = 0, $6554 = 0, $6555 = 0, $6556 = 0, $6557 = 0, $6558 = 0, $6559 = 0, $656 = 0, $6560 = 0, $6561 = 0, $6562 = 0, $6563 = 0, $6564 = 0, $6565 = 0, $6566 = 0, $6567 = 0, $6568 = 0, $6569 = 0, $657 = 0, $6570 = 0, $6571 = 0, $6572 = 0, $6573 = 0, $6574 = 0, $6575 = 0, $6576 = 0, $6577 = 0, $6578 = 0, $6579 = 0, $658 = 0, $6580 = 0, $6581 = 0, $6582 = 0, $6583 = 0, $6584 = 0, $6585 = 0, $6586 = 0, $6587 = 0, $6588 = 0, $6589 = 0, $659 = 0, $6590 = 0, $6591 = 0, $6592 = 0, $6593 = 0, $6594 = 0, $6595 = 0, $6596 = 0, $6597 = 0, $6598 = 0, $6599 = 0, $66 = 0, $660 = 0, $6600 = 0, $6601 = 0, $6602 = 0, $6603 = 0, $6604 = 0, $6605 = 0, $6606 = 0, $6607 = 0, $6608 = 0, $6609 = 0, $661 = 0, $6610 = 0, $6611 = 0, $6612 = 0, $6613 = 0, $6614 = 0, $6615 = 0, $6616 = 0, $6617 = 0, $6618 = 0, $6619 = 0, $662 = 0, $6620 = 0, $6621 = 0, $6622 = 0, $6623 = 0, $6624 = 0, $6625 = 0, $6626 = 0, $6627 = 0, $6628 = 0, $6629 = 0, $663 = 0, $6630 = 0, $6631 = 0, $6632 = 0, $6633 = 0, $6634 = 0, $6635 = 0, $6636 = 0, $6637 = 0, $6638 = 0, $6639 = 0, $664 = 0, $6640 = 0, $6641 = 0, $6642 = 0, $6643 = 0, $6644 = 0, $6645 = 0, $6646 = 0, $6647 = 0, $6648 = 0, $6649 = 0, $665 = 0, $6650 = 0, $6651 = 0, $6652 = 0, $6653 = 0, $6654 = 0, $6655 = 0, $6656 = 0, $6657 = 0, $6658 = 0, $6659 = 0, $666 = 0, $6660 = 0, $6661 = 0, $6662 = 0, $6663 = 0, $6664 = 0, $6665 = 0, $6666 = 0, $6667 = 0, $6668 = 0, $6669 = 0, $667 = 0, $6670 = 0, $6671 = 0, $6672 = 0, $6673 = 0, $6674 = 0, $6675 = 0, $6676 = 0, $6677 = 0, $6678 = 0, $6679 = 0, $668 = 0, $6680 = 0, $6681 = 0, $6682 = 0, $6683 = 0, $6684 = 0, $6685 = 0, $6686 = 0, $6687 = 0, $6688 = 0, $6689 = 0, $669 = 0, $6690 = 0, $6691 = 0, $6692 = 0, $6693 = 0, $6694 = 0, $6695 = 0, $6696 = 0, $6697 = 0, $6698 = 0, $6699 = 0, $67 = 0, $670 = 0, $6700 = 0, $6701 = 0, $6702 = 0, $6703 = 0, $6704 = 0, $6705 = 0, $6706 = 0, $6707 = 0, $6708 = 0, $6709 = 0, $671 = 0, $6710 = 0, $6711 = 0, $6712 = 0, $6713 = 0, $6714 = 0, $6715 = 0, $6716 = 0, $6717 = 0, $6718 = 0, $6719 = 0, $672 = 0, $6720 = 0, $6721 = 0, $6722 = 0, $6723 = 0, $6724 = 0, $6725 = 0, $6726 = 0, $6727 = 0, $6728 = 0, $6729 = 0, $673 = 0, $6730 = 0, $6731 = 0, $6732 = 0, $6733 = 0, $6734 = 0, $6735 = 0, $6736 = 0, $6737 = 0, $6738 = 0, $6739 = 0, $674 = 0, $6740 = 0, $6741 = 0, $6742 = 0, $6743 = 0, $6744 = 0, $6745 = 0, $6746 = 0, $6747 = 0, $6748 = 0, $6749 = 0, $675 = 0, $6750 = 0, $6751 = 0, $6752 = 0, $6753 = 0, $6754 = 0, $6755 = 0, $6756 = 0, $6757 = 0, $6758 = 0, $6759 = 0, $676 = 0, $6760 = 0, $6761 = 0, $6762 = 0, $6763 = 0, $6764 = 0, $6765 = 0, $6766 = 0, $6767 = 0, $6768 = 0, $6769 = 0, $677 = 0, $6770 = 0, $6771 = 0, $6772 = 0, $6773 = 0, $6774 = 0, $6775 = 0, $6776 = 0, $6777 = 0, $6778 = 0, $6779 = 0, $678 = 0, $6780 = 0, $6781 = 0, $6782 = 0, $6783 = 0, $6784 = 0, $6785 = 0, $6786 = 0, $6787 = 0, $6788 = 0, $6789 = 0, $679 = 0, $6790 = 0, $6791 = 0, $6792 = 0, $6793 = 0, $6794 = 0, $6795 = 0, $6796 = 0, $6797 = 0, $6798 = 0, $6799 = 0, $68 = 0, $680 = 0, $6800 = 0, $6801 = 0, $6802 = 0, $6803 = 0, $6804 = 0, $6805 = 0, $6806 = 0, $6807 = 0, $6808 = 0, $6809 = 0, $681 = 0, $6810 = 0, $6811 = 0, $6812 = 0, $6813 = 0, $6814 = 0, $6815 = 0, $6816 = 0, $6817 = 0, $6818 = 0, $6819 = 0, $682 = 0, $6820 = 0, $6821 = 0, $6822 = 0, $6823 = 0, $6824 = 0, $6825 = 0, $6826 = 0, $6827 = 0, $6828 = 0, $6829 = 0, $683 = 0, $6830 = 0, $6831 = 0, $6832 = 0, $6833 = 0, $6834 = 0, $6835 = 0, $6836 = 0, $6837 = 0, $6838 = 0, $6839 = 0, $684 = 0, $6840 = 0, $6841 = 0, $6842 = 0, $6843 = 0, $6844 = 0, $6845 = 0, $6846 = 0, $6847 = 0, $6848 = 0, $6849 = 0, $685 = 0, $6850 = 0, $6851 = 0, $6852 = 0, $6853 = 0, $6854 = 0, $6855 = 0, $6856 = 0, $6857 = 0, $6858 = 0, $6859 = 0, $686 = 0, $6860 = 0, $6861 = 0, $6862 = 0, $6863 = 0, $6864 = 0, $6865 = 0, $6866 = 0, $6867 = 0, $6868 = 0, $6869 = 0, $687 = 0, $6870 = 0, $6871 = 0, $6872 = 0, $6873 = 0, $6874 = 0, $6875 = 0, $6876 = 0, $6877 = 0, $6878 = 0, $6879 = 0, $688 = 0, $6880 = 0, $6881 = 0, $6882 = 0, $6883 = 0, $6884 = 0, $6885 = 0, $6886 = 0, $6887 = 0, $6888 = 0, $6889 = 0, $689 = 0, $6890 = 0, $6891 = 0, $6892 = 0, $6893 = 0, $6894 = 0, $6895 = 0, $6896 = 0, $6897 = 0, $6898 = 0, $6899 = 0, $69 = 0, $690 = 0, $6900 = 0, $6901 = 0, $6902 = 0, $6903 = 0, $6904 = 0, $6905 = 0, $6906 = 0, $6907 = 0, $6908 = 0, $6909 = 0, $691 = 0, $6910 = 0, $6911 = 0, $6912 = 0, $6913 = 0, $6914 = 0, $6915 = 0, $6916 = 0, $6917 = 0, $6918 = 0, $6919 = 0, $692 = 0, $6920 = 0, $6921 = 0, $6922 = 0, $6923 = 0, $6924 = 0, $6925 = 0, $6926 = 0, $6927 = 0, $6928 = 0, $6929 = 0, $693 = 0, $6930 = 0, $6931 = 0, $6932 = 0, $6933 = 0, $6934 = 0, $6935 = 0, $6936 = 0, $6937 = 0, $6938 = 0, $6939 = 0, $694 = 0, $6940 = 0, $6941 = 0, $6942 = 0, $6943 = 0, $6944 = 0, $6945 = 0, $6946 = 0, $6947 = 0, $6948 = 0, $6949 = 0, $695 = 0, $6950 = 0, $6951 = 0, $6952 = 0, $6953 = 0, $6954 = 0, $6955 = 0, $6956 = 0, $6957 = 0, $6958 = 0, $6959 = 0, $696 = 0, $6960 = 0, $6961 = 0, $6962 = 0, $6963 = 0, $6964 = 0, $6965 = 0, $6966 = 0, $6967 = 0, $6968 = 0, $6969 = 0, $697 = 0, $6970 = 0, $6971 = 0, $6972 = 0, $6973 = 0, $6974 = 0, $6975 = 0, $6976 = 0, $6977 = 0, $6978 = 0, $6979 = 0, $698 = 0, $6980 = 0, $6981 = 0, $6982 = 0, $6983 = 0, $6984 = 0, $6985 = 0, $6986 = 0, $6987 = 0, $6988 = 0, $6989 = 0, $699 = 0, $6990 = 0, $6991 = 0, $6992 = 0, $6993 = 0, $6994 = 0, $6995 = 0, $6996 = 0, $6997 = 0, $6998 = 0, $6999 = 0, $7 = 0, $70 = 0, $700 = 0, $7000 = 0, $7001 = 0, $7002 = 0, $7003 = 0, $7004 = 0, $7005 = 0, $7006 = 0, $7007 = 0, $7008 = 0, $7009 = 0, $701 = 0, $7010 = 0, $7011 = 0, $7012 = 0, $7013 = 0, $7014 = 0, $7015 = 0, $7016 = 0, $7017 = 0, $7018 = 0, $7019 = 0, $702 = 0, $7020 = 0, $7021 = 0, $7022 = 0, $7023 = 0, $7024 = 0, $7025 = 0, $7026 = 0, $7027 = 0, $7028 = 0, $7029 = 0, $703 = 0, $7030 = 0, $7031 = 0, $7032 = 0, $7033 = 0, $7034 = 0, $7035 = 0, $7036 = 0, $7037 = 0, $7038 = 0, $7039 = 0, $704 = 0, $7040 = 0, $7041 = 0, $7042 = 0, $7043 = 0, $7044 = 0, $7045 = 0, $7046 = 0, $7047 = 0, $7048 = 0, $7049 = 0, $705 = 0, $7050 = 0, $7051 = 0, $7052 = 0, $7053 = 0, $7054 = 0, $7055 = 0, $7056 = 0, $7057 = 0, $7058 = 0, $7059 = 0, $706 = 0, $7060 = 0, $7061 = 0, $7062 = 0, $7063 = 0, $7064 = 0, $7065 = 0, $7066 = 0, $7067 = 0, $7068 = 0, $7069 = 0, $707 = 0, $7070 = 0, $7071 = 0, $7072 = 0, $7073 = 0, $7074 = 0, $7075 = 0, $7076 = 0, $7077 = 0, $7078 = 0, $7079 = 0, $708 = 0, $7080 = 0, $7081 = 0, $7082 = 0, $7083 = 0, $7084 = 0, $7085 = 0, $7086 = 0, $7087 = 0, $7088 = 0, $7089 = 0, $709 = 0, $7090 = 0, $7091 = 0, $7092 = 0, $7093 = 0, $7094 = 0, $7095 = 0, $7096 = 0, $7097 = 0, $7098 = 0, $7099 = 0, $71 = 0, $710 = 0, $7100 = 0, $7101 = 0, $7102 = 0, $7103 = 0, $7104 = 0, $7105 = 0, $7106 = 0, $7107 = 0, $7108 = 0, $7109 = 0, $711 = 0, $7110 = 0, $7111 = 0, $7112 = 0, $7113 = 0, $7114 = 0, $7115 = 0, $7116 = 0, $7117 = 0, $7118 = 0, $7119 = 0, $712 = 0, $7120 = 0, $7121 = 0, $7122 = 0, $7123 = 0, $7124 = 0, $7125 = 0, $7126 = 0, $7127 = 0, $7128 = 0, $7129 = 0, $713 = 0, $7130 = 0, $7131 = 0, $7132 = 0, $7133 = 0, $7134 = 0, $7135 = 0, $7136 = 0, $7137 = 0, $7138 = 0, $7139 = 0, $714 = 0, $7140 = 0, $7141 = 0, $7142 = 0, $7143 = 0, $7144 = 0, $7145 = 0, $7146 = 0, $7147 = 0, $7148 = 0, $7149 = 0, $715 = 0, $7150 = 0, $7151 = 0, $7152 = 0, $7153 = 0, $7154 = 0, $7155 = 0, $7156 = 0, $7157 = 0, $7158 = 0, $7159 = 0, $716 = 0, $7160 = 0, $7161 = 0, $7162 = 0, $7163 = 0, $7164 = 0, $7165 = 0, $7166 = 0, $7167 = 0, $7168 = 0, $7169 = 0, $717 = 0, $7170 = 0, $7171 = 0, $7172 = 0, $7173 = 0, $7174 = 0, $7175 = 0, $7176 = 0, $7177 = 0, $7178 = 0, $7179 = 0, $718 = 0, $7180 = 0, $7181 = 0, $7182 = 0, $7183 = 0, $7184 = 0, $7185 = 0, $7186 = 0, $7187 = 0, $7188 = 0, $7189 = 0, $719 = 0, $7190 = 0, $7191 = 0, $7192 = 0, $7193 = 0, $7194 = 0, $7195 = 0, $7196 = 0, $7197 = 0, $7198 = 0, $7199 = 0, $72 = 0, $720 = 0, $7200 = 0, $7201 = 0, $7202 = 0, $7203 = 0, $7204 = 0, $7205 = 0, $7206 = 0, $7207 = 0, $7208 = 0, $7209 = 0, $721 = 0, $7210 = 0, $7211 = 0, $7212 = 0, $7213 = 0, $7214 = 0, $7215 = 0, $7216 = 0, $7217 = 0, $7218 = 0, $7219 = 0, $722 = 0, $7220 = 0, $7221 = 0, $7222 = 0, $7223 = 0, $7224 = 0, $7225 = 0, $7226 = 0, $7227 = 0, $7228 = 0, $7229 = 0, $723 = 0, $7230 = 0, $7231 = 0, $7232 = 0, $7233 = 0, $7234 = 0, $7235 = 0, $7236 = 0, $7237 = 0, $7238 = 0, $7239 = 0, $724 = 0, $7240 = 0, $7241 = 0, $7242 = 0, $7243 = 0, $7244 = 0, $7245 = 0, $7246 = 0, $7247 = 0, $7248 = 0, $7249 = 0, $725 = 0, $7250 = 0, $7251 = 0, $7252 = 0, $7253 = 0, $7254 = 0, $7255 = 0, $7256 = 0, $7257 = 0, $7258 = 0, $7259 = 0, $726 = 0, $7260 = 0, $7261 = 0, $7262 = 0, $7263 = 0, $7264 = 0, $7265 = 0, $7266 = 0, $7267 = 0, $7268 = 0, $7269 = 0, $727 = 0, $7270 = 0, $7271 = 0, $7272 = 0, $7273 = 0, $7274 = 0, $7275 = 0, $7276 = 0, $7277 = 0, $7278 = 0, $7279 = 0, $728 = 0, $7280 = 0, $7281 = 0, $7282 = 0, $7283 = 0, $7284 = 0, $7285 = 0, $7286 = 0, $7287 = 0, $7288 = 0, $7289 = 0, $729 = 0, $7290 = 0, $7291 = 0, $7292 = 0, $7293 = 0, $7294 = 0, $7295 = 0, $7296 = 0, $7297 = 0, $7298 = 0, $7299 = 0, $73 = 0, $730 = 0, $7300 = 0, $7301 = 0, $7302 = 0, $7303 = 0, $7304 = 0, $7305 = 0, $7306 = 0, $7307 = 0, $7308 = 0, $7309 = 0, $731 = 0, $7310 = 0, $7311 = 0, $7312 = 0, $7313 = 0, $7314 = 0, $7315 = 0, $7316 = 0, $7317 = 0, $7318 = 0, $7319 = 0, $732 = 0, $7320 = 0, $7321 = 0, $7322 = 0, $7323 = 0, $7324 = 0, $7325 = 0, $7326 = 0, $7327 = 0, $7328 = 0, $7329 = 0, $733 = 0, $7330 = 0, $7331 = 0, $7332 = 0, $7333 = 0, $7334 = 0, $7335 = 0, $7336 = 0, $7337 = 0, $7338 = 0, $7339 = 0, $734 = 0, $7340 = 0, $7341 = 0, $7342 = 0, $7343 = 0, $7344 = 0, $7345 = 0, $7346 = 0, $7347 = 0, $7348 = 0, $7349 = 0, $735 = 0, $7350 = 0, $7351 = 0, $7352 = 0, $7353 = 0, $7354 = 0, $7355 = 0, $7356 = 0, $7357 = 0, $7358 = 0, $7359 = 0, $736 = 0, $7360 = 0, $7361 = 0, $7362 = 0, $7363 = 0, $7364 = 0, $7365 = 0, $7366 = 0, $7367 = 0, $7368 = 0, $7369 = 0, $737 = 0, $7370 = 0, $7371 = 0, $7372 = 0, $7373 = 0, $7374 = 0, $7375 = 0, $7376 = 0, $7377 = 0, $7378 = 0, $7379 = 0, $738 = 0, $7380 = 0, $7381 = 0, $7382 = 0, $7383 = 0, $7384 = 0, $7385 = 0, $7386 = 0, $7387 = 0, $7388 = 0, $7389 = 0, $739 = 0, $7390 = 0, $7391 = 0, $7392 = 0, $7393 = 0, $7394 = 0, $7395 = 0, $7396 = 0, $7397 = 0, $7398 = 0, $7399 = 0, $74 = 0, $740 = 0, $7400 = 0, $7401 = 0, $7402 = 0, $7403 = 0, $7404 = 0, $7405 = 0, $7406 = 0, $7407 = 0, $7408 = 0, $7409 = 0, $741 = 0, $7410 = 0, $7411 = 0, $7412 = 0, $7413 = 0, $7414 = 0, $7415 = 0, $7416 = 0, $7417 = 0, $7418 = 0, $7419 = 0, $742 = 0, $7420 = 0, $7421 = 0, $7422 = 0, $7423 = 0, $7424 = 0, $7425 = 0, $7426 = 0, $7427 = 0, $7428 = 0, $7429 = 0, $743 = 0, $7430 = 0, $7431 = 0, $7432 = 0, $7433 = 0, $7434 = 0, $7435 = 0, $7436 = 0, $7437 = 0, $7438 = 0, $7439 = 0, $744 = 0, $7440 = 0, $7441 = 0, $7442 = 0, $7443 = 0, $7444 = 0, $7445 = 0, $7446 = 0, $7447 = 0, $7448 = 0, $7449 = 0, $745 = 0, $7450 = 0, $7451 = 0, $7452 = 0, $7453 = 0, $7454 = 0, $7455 = 0, $7456 = 0, $7457 = 0, $7458 = 0, $7459 = 0, $746 = 0, $7460 = 0, $7461 = 0, $7462 = 0, $7463 = 0, $7464 = 0, $7465 = 0, $7466 = 0, $7467 = 0, $7468 = 0, $7469 = 0, $747 = 0, $7470 = 0, $7471 = 0, $7472 = 0, $7473 = 0, $7474 = 0, $7475 = 0, $7476 = 0, $7477 = 0, $7478 = 0, $7479 = 0, $748 = 0, $7480 = 0, $7481 = 0, $7482 = 0, $7483 = 0, $7484 = 0, $7485 = 0, $7486 = 0, $7487 = 0, $7488 = 0, $7489 = 0, $749 = 0, $7490 = 0, $7491 = 0, $7492 = 0, $7493 = 0, $7494 = 0, $7495 = 0, $7496 = 0, $7497 = 0, $7498 = 0, $7499 = 0, $75 = 0, $750 = 0, $7500 = 0, $7501 = 0, $7502 = 0, $7503 = 0, $7504 = 0, $7505 = 0, $7506 = 0, $7507 = 0, $7508 = 0, $7509 = 0, $751 = 0, $7510 = 0, $7511 = 0, $7512 = 0, $7513 = 0, $7514 = 0, $7515 = 0, $7516 = 0, $7517 = 0, $7518 = 0, $7519 = 0, $752 = 0, $7520 = 0, $7521 = 0, $7522 = 0, $7523 = 0, $7524 = 0, $7525 = 0, $7526 = 0, $7527 = 0, $7528 = 0, $7529 = 0, $753 = 0, $7530 = 0, $7531 = 0, $7532 = 0, $7533 = 0, $7534 = 0, $7535 = 0, $7536 = 0, $7537 = 0, $7538 = 0, $7539 = 0, $754 = 0, $7540 = 0, $7541 = 0, $7542 = 0, $7543 = 0, $7544 = 0, $7545 = 0, $7546 = 0, $7547 = 0, $7548 = 0, $7549 = 0, $755 = 0, $7550 = 0, $7551 = 0, $7552 = 0, $7553 = 0, $7554 = 0, $7555 = 0, $7556 = 0, $7557 = 0, $7558 = 0, $7559 = 0, $756 = 0, $7560 = 0, $7561 = 0, $7562 = 0, $7563 = 0, $7564 = 0, $7565 = 0, $7566 = 0, $7567 = 0, $7568 = 0, $7569 = 0, $757 = 0, $7570 = 0, $7571 = 0, $7572 = 0, $7573 = 0, $7574 = 0, $7575 = 0, $7576 = 0, $7577 = 0, $7578 = 0, $7579 = 0, $758 = 0, $7580 = 0, $7581 = 0, $7582 = 0, $7583 = 0, $7584 = 0, $7585 = 0, $7586 = 0, $7587 = 0, $7588 = 0, $7589 = 0, $759 = 0, $7590 = 0, $7591 = 0, $7592 = 0, $7593 = 0, $7594 = 0, $7595 = 0, $7596 = 0, $7597 = 0, $7598 = 0, $7599 = 0, $76 = 0, $760 = 0, $7600 = 0, $7601 = 0, $7602 = 0, $7603 = 0, $7604 = 0, $7605 = 0, $7606 = 0, $7607 = 0, $7608 = 0, $7609 = 0, $761 = 0, $7610 = 0, $7611 = 0, $7612 = 0, $7613 = 0, $7614 = 0, $7615 = 0, $7616 = 0, $7617 = 0, $7618 = 0, $7619 = 0, $762 = 0, $7620 = 0, $7621 = 0, $7622 = 0, $7623 = 0, $7624 = 0, $7625 = 0, $7626 = 0, $7627 = 0, $7628 = 0, $7629 = 0, $763 = 0, $7630 = 0, $7631 = 0, $7632 = 0, $7633 = 0, $7634 = 0, $7635 = 0, $7636 = 0, $7637 = 0, $7638 = 0, $7639 = 0, $764 = 0, $7640 = 0, $7641 = 0, $7642 = 0, $7643 = 0, $7644 = 0, $7645 = 0, $7646 = 0, $7647 = 0, $7648 = 0, $7649 = 0, $765 = 0, $7650 = 0, $7651 = 0, $7652 = 0, $7653 = 0, $7654 = 0, $7655 = 0, $7656 = 0, $7657 = 0, $7658 = 0, $7659 = 0, $766 = 0, $7660 = 0, $7661 = 0, $7662 = 0, $7663 = 0, $7664 = 0, $7665 = 0, $7666 = 0, $7667 = 0, $7668 = 0, $7669 = 0, $767 = 0, $7670 = 0, $7671 = 0, $7672 = 0, $7673 = 0, $7674 = 0, $7675 = 0, $7676 = 0, $7677 = 0, $7678 = 0, $7679 = 0, $768 = 0, $7680 = 0, $7681 = 0, $7682 = 0, $7683 = 0, $7684 = 0, $7685 = 0, $7686 = 0, $7687 = 0, $7688 = 0, $7689 = 0, $769 = 0, $7690 = 0, $7691 = 0, $7692 = 0, $7693 = 0, $7694 = 0, $7695 = 0, $7696 = 0, $7697 = 0, $7698 = 0, $7699 = 0, $77 = 0, $770 = 0, $7700 = 0, $7701 = 0, $7702 = 0, $7703 = 0, $7704 = 0, $7705 = 0, $7706 = 0, $7707 = 0, $7708 = 0, $7709 = 0, $771 = 0, $7710 = 0, $7711 = 0, $7712 = 0, $7713 = 0, $7714 = 0, $7715 = 0, $7716 = 0, $7717 = 0, $7718 = 0, $7719 = 0, $772 = 0, $7720 = 0, $7721 = 0, $7722 = 0, $7723 = 0, $7724 = 0, $7725 = 0, $7726 = 0, $7727 = 0, $7728 = 0, $7729 = 0, $773 = 0, $7730 = 0, $7731 = 0, $7732 = 0, $7733 = 0, $7734 = 0, $7735 = 0, $7736 = 0, $7737 = 0, $7738 = 0, $7739 = 0, $774 = 0, $7740 = 0, $7741 = 0, $7742 = 0, $7743 = 0, $7744 = 0, $7745 = 0, $7746 = 0, $7747 = 0, $7748 = 0, $7749 = 0, $775 = 0, $7750 = 0, $7751 = 0, $7752 = 0, $7753 = 0, $7754 = 0, $7755 = 0, $7756 = 0, $7757 = 0, $7758 = 0, $7759 = 0, $776 = 0, $7760 = 0, $7761 = 0, $7762 = 0, $7763 = 0, $7764 = 0, $7765 = 0, $7766 = 0, $7767 = 0, $7768 = 0, $7769 = 0, $777 = 0, $7770 = 0, $7771 = 0, $7772 = 0, $7773 = 0, $7774 = 0, $7775 = 0, $7776 = 0, $7777 = 0, $7778 = 0, $7779 = 0, $778 = 0, $7780 = 0, $7781 = 0, $7782 = 0, $7783 = 0, $7784 = 0, $7785 = 0, $7786 = 0, $7787 = 0, $7788 = 0, $7789 = 0, $779 = 0, $7790 = 0, $7791 = 0, $7792 = 0, $7793 = 0, $7794 = 0, $7795 = 0, $7796 = 0, $7797 = 0, $7798 = 0, $7799 = 0, $78 = 0, $780 = 0, $7800 = 0, $7801 = 0, $7802 = 0, $7803 = 0, $7804 = 0, $7805 = 0, $7806 = 0, $7807 = 0, $7808 = 0, $7809 = 0, $781 = 0, $7810 = 0, $7811 = 0, $7812 = 0, $7813 = 0, $7814 = 0, $7815 = 0, $7816 = 0, $7817 = 0, $7818 = 0, $7819 = 0, $782 = 0, $7820 = 0, $7821 = 0, $7822 = 0, $7823 = 0, $7824 = 0, $7825 = 0, $7826 = 0, $7827 = 0, $7828 = 0, $7829 = 0, $783 = 0, $7830 = 0, $7831 = 0, $7832 = 0, $7833 = 0, $7834 = 0, $7835 = 0, $7836 = 0, $7837 = 0, $7838 = 0, $7839 = 0, $784 = 0, $7840 = 0, $7841 = 0, $7842 = 0, $7843 = 0, $7844 = 0, $7845 = 0, $7846 = 0, $7847 = 0, $7848 = 0, $7849 = 0, $785 = 0, $7850 = 0, $7851 = 0, $7852 = 0, $7853 = 0, $7854 = 0, $7855 = 0, $7856 = 0, $7857 = 0, $7858 = 0, $7859 = 0, $786 = 0, $7860 = 0, $7861 = 0, $7862 = 0, $7863 = 0, $7864 = 0, $7865 = 0, $7866 = 0, $7867 = 0, $7868 = 0, $7869 = 0, $787 = 0, $7870 = 0, $7871 = 0, $7872 = 0, $7873 = 0, $7874 = 0, $7875 = 0, $7876 = 0, $7877 = 0, $7878 = 0, $7879 = 0, $788 = 0, $7880 = 0, $7881 = 0, $7882 = 0, $7883 = 0, $7884 = 0, $7885 = 0, $7886 = 0, $7887 = 0, $7888 = 0, $7889 = 0, $789 = 0, $7890 = 0, $7891 = 0, $7892 = 0, $7893 = 0, $7894 = 0, $7895 = 0, $7896 = 0, $7897 = 0, $7898 = 0, $7899 = 0, $79 = 0, $790 = 0, $7900 = 0, $7901 = 0, $7902 = 0, $7903 = 0, $7904 = 0, $7905 = 0, $7906 = 0, $7907 = 0, $7908 = 0, $7909 = 0, $791 = 0, $7910 = 0, $7911 = 0, $7912 = 0, $7913 = 0, $7914 = 0, $7915 = 0, $7916 = 0, $7917 = 0, $7918 = 0, $7919 = 0, $792 = 0, $7920 = 0, $7921 = 0, $7922 = 0, $7923 = 0, $7924 = 0, $7925 = 0, $7926 = 0, $7927 = 0, $7928 = 0, $7929 = 0, $793 = 0, $7930 = 0, $7931 = 0, $7932 = 0, $7933 = 0, $7934 = 0, $7935 = 0, $7936 = 0, $7937 = 0, $7938 = 0, $7939 = 0, $794 = 0, $7940 = 0, $7941 = 0, $7942 = 0, $7943 = 0, $7944 = 0, $7945 = 0, $7946 = 0, $7947 = 0, $7948 = 0, $7949 = 0, $795 = 0, $7950 = 0, $7951 = 0, $7952 = 0, $7953 = 0, $7954 = 0, $7955 = 0, $7956 = 0, $7957 = 0, $7958 = 0, $7959 = 0, $796 = 0, $7960 = 0, $7961 = 0, $7962 = 0, $7963 = 0, $7964 = 0, $7965 = 0, $7966 = 0, $7967 = 0, $7968 = 0, $7969 = 0, $797 = 0, $7970 = 0, $7971 = 0, $7972 = 0, $7973 = 0, $7974 = 0, $7975 = 0, $7976 = 0, $7977 = 0, $7978 = 0, $7979 = 0, $798 = 0, $7980 = 0, $7981 = 0, $7982 = 0, $7983 = 0, $7984 = 0, $7985 = 0, $7986 = 0, $7987 = 0, $7988 = 0, $7989 = 0, $799 = 0, $7990 = 0, $7991 = 0, $7992 = 0, $7993 = 0, $7994 = 0, $7995 = 0, $7996 = 0, $7997 = 0, $7998 = 0, $7999 = 0, $8 = 0, $80 = 0, $800 = 0, $8000 = 0, $8001 = 0, $8002 = 0, $8003 = 0, $8004 = 0, $8005 = 0, $8006 = 0, $8007 = 0, $8008 = 0, $8009 = 0, $801 = 0, $8010 = 0, $8011 = 0, $8012 = 0, $8013 = 0, $8014 = 0, $8015 = 0, $8016 = 0, $8017 = 0, $8018 = 0, $8019 = 0, $802 = 0, $8020 = 0, $8021 = 0, $8022 = 0, $8023 = 0, $8024 = 0, $8025 = 0, $8026 = 0, $8027 = 0, $8028 = 0, $8029 = 0, $803 = 0, $8030 = 0, $8031 = 0, $8032 = 0, $8033 = 0, $8034 = 0, $8035 = 0, $8036 = 0, $8037 = 0, $8038 = 0, $8039 = 0, $804 = 0, $8040 = 0, $8041 = 0, $8042 = 0, $8043 = 0, $8044 = 0, $8045 = 0, $8046 = 0, $8047 = 0, $8048 = 0, $8049 = 0, $805 = 0, $8050 = 0, $8051 = 0, $8052 = 0, $8053 = 0, $8054 = 0, $8055 = 0, $8056 = 0, $8057 = 0, $8058 = 0, $8059 = 0, $806 = 0, $8060 = 0, $8061 = 0, $8062 = 0, $8063 = 0, $8064 = 0, $8065 = 0, $8066 = 0, $8067 = 0, $8068 = 0, $8069 = 0, $807 = 0, $8070 = 0, $8071 = 0, $8072 = 0, $8073 = 0, $8074 = 0, $8075 = 0, $8076 = 0, $8077 = 0, $8078 = 0, $8079 = 0, $808 = 0, $8080 = 0, $8081 = 0, $8082 = 0, $8083 = 0, $8084 = 0, $8085 = 0, $8086 = 0, $8087 = 0, $8088 = 0, $8089 = 0, $809 = 0, $8090 = 0, $8091 = 0, $8092 = 0, $8093 = 0, $8094 = 0, $8095 = 0, $8096 = 0, $8097 = 0, $8098 = 0, $8099 = 0, $81 = 0, $810 = 0, $8100 = 0, $8101 = 0, $8102 = 0, $8103 = 0, $8104 = 0, $8105 = 0, $8106 = 0, $8107 = 0, $8108 = 0, $8109 = 0, $811 = 0, $8110 = 0, $8111 = 0, $8112 = 0, $8113 = 0, $8114 = 0, $8115 = 0, $8116 = 0, $8117 = 0, $8118 = 0, $8119 = 0, $812 = 0, $8120 = 0, $8121 = 0, $8122 = 0, $8123 = 0, $8124 = 0, $8125 = 0, $8126 = 0, $8127 = 0, $8128 = 0, $8129 = 0, $813 = 0, $8130 = 0, $8131 = 0, $8132 = 0, $8133 = 0, $8134 = 0, $8135 = 0, $8136 = 0, $8137 = 0, $8138 = 0, $8139 = 0, $814 = 0, $8140 = 0, $8141 = 0, $8142 = 0, $8143 = 0, $8144 = 0, $8145 = 0, $8146 = 0, $8147 = 0, $8148 = 0, $8149 = 0, $815 = 0, $8150 = 0, $8151 = 0, $8152 = 0, $8153 = 0, $8154 = 0, $8155 = 0, $8156 = 0, $8157 = 0, $8158 = 0, $8159 = 0, $816 = 0, $8160 = 0, $8161 = 0, $8162 = 0, $8163 = 0, $8164 = 0, $8165 = 0, $8166 = 0, $8167 = 0, $8168 = 0, $8169 = 0, $817 = 0, $8170 = 0, $8171 = 0, $8172 = 0, $8173 = 0, $8174 = 0, $8175 = 0, $8176 = 0, $8177 = 0, $8178 = 0, $8179 = 0, $818 = 0, $8180 = 0, $8181 = 0, $8182 = 0, $8183 = 0, $8184 = 0, $8185 = 0, $8186 = 0, $8187 = 0, $8188 = 0, $8189 = 0, $819 = 0, $8190 = 0, $8191 = 0, $8192 = 0, $8193 = 0, $8194 = 0, $8195 = 0, $8196 = 0, $8197 = 0, $8198 = 0, $8199 = 0, $82 = 0, $820 = 0, $8200 = 0, $8201 = 0, $8202 = 0, $8203 = 0, $8204 = 0, $8205 = 0, $8206 = 0, $8207 = 0, $8208 = 0, $8209 = 0, $821 = 0, $8210 = 0, $8211 = 0, $8212 = 0, $8213 = 0, $8214 = 0, $8215 = 0, $8216 = 0, $8217 = 0, $8218 = 0, $8219 = 0, $822 = 0, $8220 = 0, $8221 = 0, $8222 = 0, $8223 = 0, $8224 = 0, $8225 = 0, $8226 = 0, $8227 = 0, $8228 = 0, $8229 = 0, $823 = 0, $8230 = 0, $8231 = 0, $8232 = 0, $8233 = 0, $8234 = 0, $8235 = 0, $8236 = 0, $8237 = 0, $8238 = 0, $8239 = 0, $824 = 0, $8240 = 0, $8241 = 0, $8242 = 0, $8243 = 0, $8244 = 0, $8245 = 0, $8246 = 0, $8247 = 0, $8248 = 0, $8249 = 0, $825 = 0, $8250 = 0, $8251 = 0, $8252 = 0, $8253 = 0, $8254 = 0, $8255 = 0, $8256 = 0, $8257 = 0, $8258 = 0, $8259 = 0, $826 = 0, $8260 = 0, $8261 = 0, $8262 = 0, $8263 = 0, $8264 = 0, $8265 = 0, $8266 = 0, $8267 = 0, $8268 = 0, $8269 = 0, $827 = 0, $8270 = 0, $8271 = 0, $8272 = 0, $8273 = 0, $8274 = 0, $8275 = 0, $8276 = 0, $8277 = 0, $8278 = 0, $8279 = 0, $828 = 0, $8280 = 0, $8281 = 0, $8282 = 0, $8283 = 0, $8284 = 0, $8285 = 0, $8286 = 0, $8287 = 0, $8288 = 0, $8289 = 0, $829 = 0, $8290 = 0, $8291 = 0, $8292 = 0, $8293 = 0, $8294 = 0, $8295 = 0, $8296 = 0, $8297 = 0, $8298 = 0, $8299 = 0, $83 = 0, $830 = 0, $8300 = 0, $8301 = 0, $8302 = 0, $8303 = 0, $8304 = 0, $8305 = 0, $8306 = 0, $8307 = 0, $8308 = 0, $8309 = 0, $831 = 0, $8310 = 0, $8311 = 0, $8312 = 0, $8313 = 0, $8314 = 0, $8315 = 0, $8316 = 0, $8317 = 0, $8318 = 0, $8319 = 0, $832 = 0, $8320 = 0, $8321 = 0, $8322 = 0, $8323 = 0, $8324 = 0, $8325 = 0, $8326 = 0, $8327 = 0, $8328 = 0, $8329 = 0, $833 = 0, $8330 = 0, $8331 = 0, $8332 = 0, $8333 = 0, $8334 = 0, $8335 = 0, $8336 = 0, $8337 = 0, $8338 = 0, $8339 = 0, $834 = 0, $8340 = 0, $8341 = 0, $8342 = 0, $8343 = 0, $8344 = 0, $8345 = 0, $8346 = 0, $8347 = 0, $8348 = 0, $8349 = 0, $835 = 0, $8350 = 0, $8351 = 0, $8352 = 0, $8353 = 0, $8354 = 0, $8355 = 0, $8356 = 0, $8357 = 0, $8358 = 0, $8359 = 0, $836 = 0, $8360 = 0, $8361 = 0, $8362 = 0, $8363 = 0, $8364 = 0, $8365 = 0, $8366 = 0, $8367 = 0, $8368 = 0, $8369 = 0, $837 = 0, $8370 = 0, $8371 = 0, $8372 = 0, $8373 = 0, $8374 = 0, $8375 = 0, $8376 = 0, $8377 = 0, $8378 = 0, $8379 = 0, $838 = 0, $8380 = 0, $8381 = 0, $8382 = 0, $8383 = 0, $8384 = 0, $8385 = 0, $8386 = 0, $8387 = 0, $8388 = 0, $8389 = 0, $839 = 0, $8390 = 0, $8391 = 0, $8392 = 0, $8393 = 0, $8394 = 0, $8395 = 0, $8396 = 0, $8397 = 0, $8398 = 0, $8399 = 0, $84 = 0, $840 = 0, $8400 = 0, $8401 = 0, $8402 = 0, $8403 = 0, $8404 = 0, $8405 = 0, $8406 = 0, $8407 = 0, $8408 = 0, $8409 = 0, $841 = 0, $8410 = 0, $8411 = 0, $8412 = 0, $8413 = 0, $8414 = 0, $8415 = 0, $8416 = 0, $8417 = 0, $8418 = 0, $8419 = 0, $842 = 0, $8420 = 0, $8421 = 0, $8422 = 0, $8423 = 0, $8424 = 0, $8425 = 0, $8426 = 0, $8427 = 0, $8428 = 0, $8429 = 0, $843 = 0, $8430 = 0, $8431 = 0, $8432 = 0, $8433 = 0, $8434 = 0, $8435 = 0, $8436 = 0, $8437 = 0, $8438 = 0, $8439 = 0, $844 = 0, $8440 = 0, $8441 = 0, $8442 = 0, $8443 = 0, $8444 = 0, $8445 = 0, $8446 = 0, $8447 = 0, $8448 = 0, $8449 = 0, $845 = 0, $8450 = 0, $8451 = 0, $8452 = 0, $8453 = 0, $8454 = 0, $8455 = 0, $8456 = 0, $8457 = 0, $8458 = 0, $8459 = 0, $846 = 0, $8460 = 0, $8461 = 0, $8462 = 0, $8463 = 0, $8464 = 0, $8465 = 0, $8466 = 0, $8467 = 0, $8468 = 0, $8469 = 0, $847 = 0, $8470 = 0, $8471 = 0, $8472 = 0, $8473 = 0, $8474 = 0, $8475 = 0, $8476 = 0, $8477 = 0, $8478 = 0, $8479 = 0, $848 = 0, $8480 = 0, $8481 = 0, $8482 = 0, $8483 = 0, $8484 = 0, $8485 = 0, $8486 = 0, $8487 = 0, $8488 = 0, $8489 = 0, $849 = 0, $8490 = 0, $8491 = 0, $8492 = 0, $8493 = 0, $8494 = 0, $8495 = 0, $8496 = 0, $8497 = 0, $8498 = 0, $8499 = 0, $85 = 0, $850 = 0, $8500 = 0, $8501 = 0, $8502 = 0, $8503 = 0, $8504 = 0, $8505 = 0, $8506 = 0, $8507 = 0, $8508 = 0, $8509 = 0, $851 = 0, $8510 = 0, $8511 = 0, $8512 = 0, $8513 = 0, $8514 = 0, $8515 = 0, $8516 = 0, $8517 = 0, $8518 = 0, $8519 = 0, $852 = 0, $8520 = 0, $8521 = 0, $8522 = 0, $8523 = 0, $8524 = 0, $8525 = 0, $8526 = 0, $8527 = 0, $8528 = 0, $8529 = 0, $853 = 0, $8530 = 0, $8531 = 0, $8532 = 0, $8533 = 0, $8534 = 0, $8535 = 0, $8536 = 0, $8537 = 0, $8538 = 0, $8539 = 0, $854 = 0, $8540 = 0, $8541 = 0, $8542 = 0, $8543 = 0, $8544 = 0, $8545 = 0, $8546 = 0, $8547 = 0, $8548 = 0, $8549 = 0, $855 = 0, $8550 = 0, $8551 = 0, $8552 = 0, $8553 = 0, $8554 = 0, $8555 = 0, $8556 = 0, $8557 = 0, $8558 = 0, $8559 = 0, $856 = 0, $8560 = 0, $8561 = 0, $8562 = 0, $8563 = 0, $8564 = 0, $8565 = 0, $8566 = 0, $8567 = 0, $8568 = 0, $8569 = 0, $857 = 0, $8570 = 0, $8571 = 0, $8572 = 0, $8573 = 0, $8574 = 0, $8575 = 0, $8576 = 0, $8577 = 0, $8578 = 0, $8579 = 0, $858 = 0, $8580 = 0, $8581 = 0, $8582 = 0, $8583 = 0, $8584 = 0, $8585 = 0, $8586 = 0, $8587 = 0, $8588 = 0, $8589 = 0, $859 = 0, $8590 = 0, $8591 = 0, $8592 = 0, $8593 = 0, $8594 = 0, $8595 = 0, $8596 = 0, $8597 = 0, $8598 = 0, $8599 = 0, $86 = 0, $860 = 0, $8600 = 0, $8601 = 0, $8602 = 0, $8603 = 0, $8604 = 0, $8605 = 0, $8606 = 0, $8607 = 0, $8608 = 0, $8609 = 0, $861 = 0, $8610 = 0, $8611 = 0, $8612 = 0, $8613 = 0, $8614 = 0, $8615 = 0, $8616 = 0, $8617 = 0, $8618 = 0, $8619 = 0, $862 = 0, $8620 = 0, $8621 = 0, $8622 = 0, $8623 = 0, $8624 = 0, $8625 = 0, $8626 = 0, $8627 = 0, $8628 = 0, $8629 = 0, $863 = 0, $8630 = 0, $8631 = 0, $8632 = 0, $8633 = 0, $8634 = 0, $8635 = 0, $8636 = 0, $8637 = 0, $8638 = 0, $8639 = 0, $864 = 0, $8640 = 0, $8641 = 0, $8642 = 0, $8643 = 0, $8644 = 0, $8645 = 0, $8646 = 0, $8647 = 0, $8648 = 0, $8649 = 0, $865 = 0, $8650 = 0, $8651 = 0, $8652 = 0, $8653 = 0, $8654 = 0, $8655 = 0, $8656 = 0, $8657 = 0, $8658 = 0, $8659 = 0, $866 = 0, $8660 = 0, $8661 = 0, $8662 = 0, $8663 = 0, $8664 = 0, $8665 = 0, $8666 = 0, $8667 = 0, $8668 = 0, $8669 = 0, $867 = 0, $8670 = 0, $8671 = 0, $8672 = 0, $8673 = 0, $8674 = 0, $8675 = 0, $8676 = 0, $8677 = 0, $8678 = 0, $8679 = 0, $868 = 0, $8680 = 0, $8681 = 0, $8682 = 0, $8683 = 0, $8684 = 0, $8685 = 0, $8686 = 0, $8687 = 0, $8688 = 0, $8689 = 0, $869 = 0, $8690 = 0, $8691 = 0, $8692 = 0, $8693 = 0, $8694 = 0, $8695 = 0, $8696 = 0, $8697 = 0, $8698 = 0, $8699 = 0, $87 = 0, $870 = 0, $8700 = 0, $8701 = 0, $8702 = 0, $8703 = 0, $8704 = 0, $8705 = 0, $8706 = 0, $8707 = 0, $8708 = 0, $8709 = 0, $871 = 0, $8710 = 0, $8711 = 0, $8712 = 0, $8713 = 0, $8714 = 0, $8715 = 0, $8716 = 0, $8717 = 0, $8718 = 0, $8719 = 0, $872 = 0, $8720 = 0, $8721 = 0, $8722 = 0, $8723 = 0, $8724 = 0, $8725 = 0, $8726 = 0, $8727 = 0, $8728 = 0, $8729 = 0, $873 = 0, $8730 = 0, $8731 = 0, $8732 = 0, $8733 = 0, $8734 = 0, $8735 = 0, $8736 = 0, $8737 = 0, $8738 = 0, $8739 = 0, $874 = 0, $8740 = 0, $8741 = 0, $8742 = 0, $8743 = 0, $8744 = 0, $8745 = 0, $8746 = 0, $8747 = 0, $8748 = 0, $8749 = 0, $875 = 0, $8750 = 0, $8751 = 0, $8752 = 0, $8753 = 0, $8754 = 0, $8755 = 0, $8756 = 0, $8757 = 0, $8758 = 0, $8759 = 0, $876 = 0, $8760 = 0, $8761 = 0, $8762 = 0, $8763 = 0, $8764 = 0, $8765 = 0, $8766 = 0, $8767 = 0, $8768 = 0, $8769 = 0, $877 = 0, $8770 = 0, $8771 = 0, $8772 = 0, $8773 = 0, $8774 = 0, $8775 = 0, $8776 = 0, $8777 = 0, $8778 = 0, $8779 = 0, $878 = 0, $8780 = 0, $8781 = 0, $8782 = 0, $8783 = 0, $8784 = 0, $8785 = 0, $8786 = 0, $8787 = 0, $8788 = 0, $8789 = 0, $879 = 0, $8790 = 0, $8791 = 0, $8792 = 0, $8793 = 0, $8794 = 0, $8795 = 0, $8796 = 0, $8797 = 0, $8798 = 0, $8799 = 0, $88 = 0, $880 = 0, $8800 = 0, $8801 = 0, $8802 = 0, $8803 = 0, $8804 = 0, $8805 = 0, $8806 = 0, $8807 = 0, $8808 = 0, $8809 = 0, $881 = 0, $8810 = 0, $8811 = 0, $8812 = 0, $8813 = 0, $8814 = 0, $8815 = 0, $8816 = 0, $8817 = 0, $8818 = 0, $8819 = 0, $882 = 0, $8820 = 0, $8821 = 0, $8822 = 0, $8823 = 0, $8824 = 0, $8825 = 0, $8826 = 0, $8827 = 0, $8828 = 0, $8829 = 0, $883 = 0, $8830 = 0, $8831 = 0, $8832 = 0, $8833 = 0, $8834 = 0, $8835 = 0, $8836 = 0, $8837 = 0, $8838 = 0, $8839 = 0, $884 = 0, $8840 = 0, $8841 = 0, $8842 = 0, $8843 = 0, $8844 = 0, $8845 = 0, $8846 = 0, $8847 = 0, $8848 = 0, $8849 = 0, $885 = 0, $8850 = 0, $8851 = 0, $8852 = 0, $8853 = 0, $8854 = 0, $8855 = 0, $8856 = 0, $8857 = 0, $8858 = 0, $8859 = 0, $886 = 0, $8860 = 0, $8861 = 0, $8862 = 0, $8863 = 0, $8864 = 0, $8865 = 0, $8866 = 0, $8867 = 0, $8868 = 0, $8869 = 0, $887 = 0, $8870 = 0, $8871 = 0, $8872 = 0, $8873 = 0, $8874 = 0, $8875 = 0, $8876 = 0, $8877 = 0, $8878 = 0, $8879 = 0, $888 = 0, $8880 = 0, $8881 = 0, $8882 = 0, $8883 = 0, $8884 = 0, $8885 = 0, $8886 = 0, $8887 = 0, $8888 = 0, $8889 = 0, $889 = 0, $8890 = 0, $8891 = 0, $8892 = 0, $8893 = 0, $8894 = 0, $8895 = 0, $8896 = 0, $8897 = 0, $8898 = 0, $8899 = 0, $89 = 0, $890 = 0, $8900 = 0, $8901 = 0, $8902 = 0, $8903 = 0, $8904 = 0, $8905 = 0, $8906 = 0, $8907 = 0, $8908 = 0, $8909 = 0, $891 = 0, $8910 = 0, $8911 = 0, $8912 = 0, $8913 = 0, $8914 = 0, $8915 = 0, $8916 = 0, $8917 = 0, $8918 = 0, $8919 = 0, $892 = 0, $8920 = 0, $8921 = 0, $8922 = 0, $8923 = 0, $8924 = 0, $8925 = 0, $8926 = 0, $8927 = 0, $8928 = 0, $8929 = 0, $893 = 0, $8930 = 0, $8931 = 0, $8932 = 0, $8933 = 0, $8934 = 0, $8935 = 0, $8936 = 0, $8937 = 0, $8938 = 0, $8939 = 0, $894 = 0, $8940 = 0, $8941 = 0, $8942 = 0, $8943 = 0, $8944 = 0, $8945 = 0, $8946 = 0, $8947 = 0, $8948 = 0, $8949 = 0, $895 = 0, $8950 = 0, $8951 = 0, $8952 = 0, $8953 = 0, $8954 = 0, $8955 = 0, $8956 = 0, $8957 = 0, $8958 = 0, $8959 = 0, $896 = 0, $8960 = 0, $8961 = 0, $8962 = 0, $8963 = 0, $8964 = 0, $8965 = 0, $8966 = 0, $8967 = 0, $8968 = 0, $8969 = 0, $897 = 0, $8970 = 0, $8971 = 0, $8972 = 0, $8973 = 0, $8974 = 0, $8975 = 0, $8976 = 0, $8977 = 0, $8978 = 0, $8979 = 0, $898 = 0, $8980 = 0, $8981 = 0, $8982 = 0, $8983 = 0, $8984 = 0, $8985 = 0, $8986 = 0, $8987 = 0, $8988 = 0, $8989 = 0, $899 = 0, $8990 = 0, $8991 = 0, $8992 = 0, $8993 = 0, $8994 = 0, $8995 = 0, $8996 = 0, $8997 = 0, $8998 = 0, $8999 = 0, $9 = 0, $90 = 0, $900 = 0, $9000 = 0, $9001 = 0, $9002 = 0, $9003 = 0, $9004 = 0, $9005 = 0, $9006 = 0, $9007 = 0, $9008 = 0, $9009 = 0, $901 = 0, $9010 = 0, $9011 = 0, $9012 = 0, $9013 = 0, $9014 = 0, $9015 = 0, $9016 = 0, $9017 = 0, $9018 = 0, $9019 = 0, $902 = 0, $9020 = 0, $9021 = 0, $9022 = 0, $9023 = 0, $9024 = 0, $9025 = 0, $9026 = 0, $9027 = 0, $9028 = 0, $9029 = 0, $903 = 0, $9030 = 0, $9031 = 0, $9032 = 0, $9033 = 0, $9034 = 0, $9035 = 0, $9036 = 0, $9037 = 0, $9038 = 0, $9039 = 0, $904 = 0, $9040 = 0, $9041 = 0, $9042 = 0, $9043 = 0, $9044 = 0, $9045 = 0, $9046 = 0, $9047 = 0, $9048 = 0, $9049 = 0, $905 = 0, $9050 = 0, $9051 = 0, $9052 = 0, $9053 = 0, $9054 = 0, $9055 = 0, $9056 = 0, $9057 = 0, $9058 = 0, $9059 = 0, $906 = 0, $9060 = 0, $9061 = 0, $9062 = 0, $9063 = 0, $9064 = 0, $9065 = 0, $9066 = 0, $9067 = 0, $9068 = 0, $9069 = 0, $907 = 0, $9070 = 0, $9071 = 0, $9072 = 0, $9073 = 0, $9074 = 0, $9075 = 0, $9076 = 0, $9077 = 0, $9078 = 0, $9079 = 0, $908 = 0, $9080 = 0, $9081 = 0, $9082 = 0, $9083 = 0, $9084 = 0, $9085 = 0, $9086 = 0, $9087 = 0, $9088 = 0, $9089 = 0, $909 = 0, $9090 = 0, $9091 = 0, $9092 = 0, $9093 = 0, $9094 = 0, $9095 = 0, $9096 = 0, $9097 = 0, $9098 = 0, $9099 = 0, $91 = 0, $910 = 0, $9100 = 0, $9101 = 0, $9102 = 0, $9103 = 0, $9104 = 0, $9105 = 0, $9106 = 0, $9107 = 0, $9108 = 0, $9109 = 0, $911 = 0, $9110 = 0, $9111 = 0, $9112 = 0, $9113 = 0, $9114 = 0, $9115 = 0, $9116 = 0, $9117 = 0, $9118 = 0, $9119 = 0, $912 = 0, $9120 = 0, $9121 = 0, $9122 = 0, $9123 = 0, $9124 = 0, $9125 = 0, $9126 = 0, $9127 = 0, $9128 = 0, $9129 = 0, $913 = 0, $9130 = 0, $9131 = 0, $9132 = 0, $9133 = 0, $9134 = 0, $9135 = 0, $9136 = 0, $9137 = 0, $9138 = 0, $9139 = 0, $914 = 0, $9140 = 0, $9141 = 0, $9142 = 0, $9143 = 0, $9144 = 0, $9145 = 0, $9146 = 0, $9147 = 0, $9148 = 0, $9149 = 0, $915 = 0, $9150 = 0, $9151 = 0, $9152 = 0, $9153 = 0, $9154 = 0, $9155 = 0, $9156 = 0, $9157 = 0, $9158 = 0, $9159 = 0, $916 = 0, $9160 = 0, $9161 = 0, $9162 = 0, $9163 = 0, $9164 = 0, $9165 = 0, $9166 = 0, $9167 = 0, $9168 = 0, $9169 = 0, $917 = 0, $9170 = 0, $9171 = 0, $9172 = 0, $9173 = 0, $9174 = 0, $9175 = 0, $9176 = 0, $9177 = 0, $9178 = 0, $9179 = 0, $918 = 0, $9180 = 0, $9181 = 0, $9182 = 0, $9183 = 0, $9184 = 0, $9185 = 0, $9186 = 0, $9187 = 0, $9188 = 0, $9189 = 0, $919 = 0, $9190 = 0, $9191 = 0, $9192 = 0, $9193 = 0, $9194 = 0, $9195 = 0, $9196 = 0, $9197 = 0, $9198 = 0, $9199 = 0, $92 = 0, $920 = 0, $9200 = 0, $9201 = 0, $9202 = 0, $9203 = 0, $9204 = 0, $9205 = 0, $9206 = 0, $9207 = 0, $9208 = 0, $9209 = 0, $921 = 0, $9210 = 0, $9211 = 0, $9212 = 0, $9213 = 0, $9214 = 0, $9215 = 0, $9216 = 0, $9217 = 0, $9218 = 0, $9219 = 0, $922 = 0, $9220 = 0, $9221 = 0, $9222 = 0, $9223 = 0, $9224 = 0, $9225 = 0, $9226 = 0, $9227 = 0, $9228 = 0, $9229 = 0, $923 = 0, $9230 = 0, $9231 = 0, $9232 = 0, $9233 = 0, $9234 = 0, $9235 = 0, $9236 = 0, $9237 = 0, $9238 = 0, $9239 = 0, $924 = 0, $9240 = 0, $9241 = 0, $9242 = 0, $9243 = 0, $9244 = 0, $9245 = 0, $9246 = 0, $9247 = 0, $9248 = 0, $9249 = 0, $925 = 0, $9250 = 0, $9251 = 0, $9252 = 0, $9253 = 0, $9254 = 0, $9255 = 0, $9256 = 0, $9257 = 0, $9258 = 0, $9259 = 0, $926 = 0, $9260 = 0, $9261 = 0, $9262 = 0, $9263 = 0, $9264 = 0, $9265 = 0, $9266 = 0, $9267 = 0, $9268 = 0, $9269 = 0, $927 = 0, $9270 = 0, $9271 = 0, $9272 = 0, $9273 = 0, $9274 = 0, $9275 = 0, $9276 = 0, $9277 = 0, $9278 = 0, $9279 = 0, $928 = 0, $9280 = 0, $9281 = 0, $9282 = 0, $9283 = 0, $9284 = 0, $9285 = 0, $9286 = 0, $9287 = 0, $9288 = 0, $9289 = 0, $929 = 0, $9290 = 0, $9291 = 0, $9292 = 0, $9293 = 0, $9294 = 0, $9295 = 0, $9296 = 0, $9297 = 0, $9298 = 0, $9299 = 0, $93 = 0, $930 = 0, $9300 = 0, $9301 = 0, $9302 = 0, $9303 = 0, $9304 = 0, $9305 = 0, $9306 = 0, $9307 = 0, $9308 = 0, $9309 = 0, $931 = 0, $9310 = 0, $9311 = 0, $9312 = 0, $9313 = 0, $9314 = 0, $9315 = 0, $9316 = 0, $9317 = 0, $9318 = 0, $9319 = 0, $932 = 0, $9320 = 0, $9321 = 0, $9322 = 0, $9323 = 0, $9324 = 0, $9325 = 0, $9326 = 0, $9327 = 0, $9328 = 0, $9329 = 0, $933 = 0, $9330 = 0, $9331 = 0, $9332 = 0, $9333 = 0, $9334 = 0, $9335 = 0, $9336 = 0, $9337 = 0, $9338 = 0, $9339 = 0, $934 = 0, $9340 = 0, $9341 = 0, $9342 = 0, $9343 = 0, $9344 = 0, $9345 = 0, $9346 = 0, $9347 = 0, $9348 = 0, $9349 = 0, $935 = 0, $9350 = 0, $9351 = 0, $9352 = 0, $9353 = 0, $9354 = 0, $9355 = 0, $9356 = 0, $9357 = 0, $9358 = 0, $9359 = 0, $936 = 0, $9360 = 0, $9361 = 0, $9362 = 0, $9363 = 0, $9364 = 0, $9365 = 0, $9366 = 0, $9367 = 0, $9368 = 0, $9369 = 0, $937 = 0, $9370 = 0, $9371 = 0, $9372 = 0, $9373 = 0, $9374 = 0, $9375 = 0, $9376 = 0, $9377 = 0, $9378 = 0, $9379 = 0, $938 = 0, $9380 = 0, $9381 = 0, $9382 = 0, $9383 = 0, $9384 = 0, $9385 = 0, $9386 = 0, $9387 = 0, $9388 = 0, $9389 = 0, $939 = 0, $9390 = 0, $9391 = 0, $9392 = 0, $9393 = 0, $9394 = 0, $9395 = 0, $9396 = 0, $9397 = 0, $9398 = 0, $9399 = 0, $94 = 0, $940 = 0, $9400 = 0, $9401 = 0, $9402 = 0, $9403 = 0, $9404 = 0, $9405 = 0, $9406 = 0, $9407 = 0, $9408 = 0, $9409 = 0, $941 = 0, $9410 = 0, $9411 = 0, $9412 = 0, $9413 = 0, $9414 = 0, $9415 = 0, $9416 = 0, $9417 = 0, $9418 = 0, $9419 = 0, $942 = 0, $9420 = 0, $9421 = 0, $9422 = 0, $9423 = 0, $9424 = 0, $9425 = 0, $9426 = 0, $9427 = 0, $9428 = 0, $9429 = 0, $943 = 0, $9430 = 0, $9431 = 0, $9432 = 0, $9433 = 0, $9434 = 0, $9435 = 0, $9436 = 0, $9437 = 0, $9438 = 0, $9439 = 0, $944 = 0, $9440 = 0, $9441 = 0, $9442 = 0, $9443 = 0, $9444 = 0, $9445 = 0, $9446 = 0, $9447 = 0, $9448 = 0, $9449 = 0, $945 = 0, $9450 = 0, $9451 = 0, $9452 = 0, $9453 = 0, $9454 = 0, $9455 = 0, $9456 = 0, $9457 = 0, $9458 = 0, $9459 = 0, $946 = 0, $9460 = 0, $9461 = 0, $9462 = 0, $9463 = 0, $9464 = 0, $9465 = 0, $9466 = 0, $9467 = 0, $9468 = 0, $9469 = 0, $947 = 0, $9470 = 0, $9471 = 0, $9472 = 0, $9473 = 0, $9474 = 0, $9475 = 0, $9476 = 0, $9477 = 0, $9478 = 0, $9479 = 0, $948 = 0, $9480 = 0, $9481 = 0, $9482 = 0, $9483 = 0, $9484 = 0, $9485 = 0, $9486 = 0, $9487 = 0, $9488 = 0, $9489 = 0, $949 = 0, $9490 = 0, $9491 = 0, $9492 = 0, $9493 = 0, $9494 = 0, $9495 = 0, $9496 = 0, $9497 = 0, $9498 = 0, $9499 = 0, $95 = 0, $950 = 0, $9500 = 0, $9501 = 0, $9502 = 0, $9503 = 0, $9504 = 0, $9505 = 0, $9506 = 0, $9507 = 0, $9508 = 0, $9509 = 0, $951 = 0, $9510 = 0, $9511 = 0, $9512 = 0, $9513 = 0, $9514 = 0, $9515 = 0, $9516 = 0, $9517 = 0, $9518 = 0, $9519 = 0, $952 = 0, $9520 = 0, $9521 = 0, $9522 = 0, $9523 = 0, $9524 = 0, $9525 = 0, $9526 = 0, $9527 = 0, $9528 = 0, $9529 = 0, $953 = 0, $9530 = 0, $9531 = 0, $9532 = 0, $9533 = 0, $9534 = 0, $9535 = 0, $9536 = 0, $9537 = 0, $9538 = 0, $9539 = 0, $954 = 0, $9540 = 0, $9541 = 0, $9542 = 0, $9543 = 0, $9544 = 0, $9545 = 0, $9546 = 0, $9547 = 0, $9548 = 0, $9549 = 0, $955 = 0, $9550 = 0, $9551 = 0, $9552 = 0, $9553 = 0, $9554 = 0, $9555 = 0, $9556 = 0, $9557 = 0, $9558 = 0, $9559 = 0, $956 = 0, $9560 = 0, $9561 = 0, $9562 = 0, $9563 = 0, $9564 = 0, $9565 = 0, $9566 = 0, $9567 = 0, $9568 = 0, $9569 = 0, $957 = 0, $9570 = 0, $9571 = 0, $9572 = 0, $9573 = 0, $9574 = 0, $9575 = 0, $9576 = 0, $9577 = 0, $9578 = 0, $9579 = 0, $958 = 0, $9580 = 0, $9581 = 0, $9582 = 0, $9583 = 0, $9584 = 0, $9585 = 0, $9586 = 0, $9587 = 0, $9588 = 0, $9589 = 0, $959 = 0, $9590 = 0, $9591 = 0, $9592 = 0, $9593 = 0, $9594 = 0, $9595 = 0, $9596 = 0, $9597 = 0, $9598 = 0, $9599 = 0, $96 = 0, $960 = 0, $9600 = 0, $9601 = 0, $9602 = 0, $9603 = 0, $9604 = 0, $9605 = 0, $9606 = 0, $9607 = 0, $9608 = 0, $9609 = 0, $961 = 0, $9610 = 0, $9611 = 0, $9612 = 0, $9613 = 0, $9614 = 0, $9615 = 0, $9616 = 0, $9617 = 0, $9618 = 0, $9619 = 0, $962 = 0, $9620 = 0, $9621 = 0, $9622 = 0, $9623 = 0, $9624 = 0, $9625 = 0, $9626 = 0, $9627 = 0, $9628 = 0, $9629 = 0, $963 = 0, $9630 = 0, $9631 = 0, $9632 = 0, $9633 = 0, $9634 = 0, $9635 = 0, $9636 = 0, $9637 = 0, $9638 = 0, $9639 = 0, $964 = 0, $9640 = 0, $9641 = 0, $9642 = 0, $9643 = 0, $9644 = 0, $9645 = 0, $9646 = 0, $9647 = 0, $9648 = 0, $9649 = 0, $965 = 0, $9650 = 0, $9651 = 0, $9652 = 0, $9653 = 0, $9654 = 0, $9655 = 0, $9656 = 0, $9657 = 0, $9658 = 0, $9659 = 0, $966 = 0, $9660 = 0, $9661 = 0, $9662 = 0, $9663 = 0, $9664 = 0, $9665 = 0, $9666 = 0, $9667 = 0, $9668 = 0, $9669 = 0, $967 = 0, $9670 = 0, $9671 = 0, $9672 = 0, $9673 = 0, $9674 = 0, $9675 = 0, $9676 = 0, $9677 = 0, $9678 = 0, $9679 = 0, $968 = 0, $9680 = 0, $9681 = 0, $9682 = 0, $9683 = 0, $9684 = 0, $9685 = 0, $9686 = 0, $9687 = 0, $9688 = 0, $9689 = 0, $969 = 0, $9690 = 0, $9691 = 0, $9692 = 0, $9693 = 0, $9694 = 0, $9695 = 0, $9696 = 0, $9697 = 0, $9698 = 0, $9699 = 0, $97 = 0, $970 = 0, $9700 = 0, $9701 = 0, $9702 = 0, $9703 = 0, $9704 = 0, $9705 = 0, $9706 = 0, $9707 = 0, $9708 = 0, $9709 = 0, $971 = 0, $9710 = 0, $9711 = 0, $9712 = 0, $9713 = 0, $9714 = 0, $9715 = 0, $9716 = 0, $9717 = 0, $9718 = 0, $9719 = 0, $972 = 0, $9720 = 0, $9721 = 0, $9722 = 0, $9723 = 0, $9724 = 0, $9725 = 0, $9726 = 0, $9727 = 0, $9728 = 0, $9729 = 0, $973 = 0, $9730 = 0, $9731 = 0, $9732 = 0, $9733 = 0, $9734 = 0, $9735 = 0, $9736 = 0, $9737 = 0, $9738 = 0, $9739 = 0, $974 = 0, $9740 = 0, $9741 = 0, $9742 = 0, $9743 = 0, $9744 = 0, $9745 = 0, $9746 = 0, $9747 = 0, $9748 = 0, $9749 = 0, $975 = 0, $9750 = 0, $9751 = 0, $9752 = 0, $9753 = 0, $9754 = 0, $9755 = 0, $9756 = 0, $9757 = 0, $9758 = 0, $9759 = 0, $976 = 0, $9760 = 0, $9761 = 0, $9762 = 0, $9763 = 0, $9764 = 0, $9765 = 0, $9766 = 0, $9767 = 0, $9768 = 0, $9769 = 0, $977 = 0, $9770 = 0, $9771 = 0, $9772 = 0, $9773 = 0, $9774 = 0, $9775 = 0, $9776 = 0, $9777 = 0, $9778 = 0, $9779 = 0, $978 = 0, $9780 = 0, $9781 = 0, $9782 = 0, $9783 = 0, $9784 = 0, $9785 = 0, $9786 = 0, $9787 = 0, $9788 = 0, $9789 = 0, $979 = 0, $9790 = 0, $9791 = 0, $9792 = 0, $9793 = 0, $9794 = 0, $9795 = 0, $9796 = 0, $9797 = 0, $9798 = 0, $9799 = 0, $98 = 0, $980 = 0, $9800 = 0, $9801 = 0, $9802 = 0, $9803 = 0, $9804 = 0, $9805 = 0, $9806 = 0, $9807 = 0, $9808 = 0, $9809 = 0, $981 = 0, $9810 = 0, $9811 = 0, $9812 = 0, $9813 = 0, $9814 = 0, $9815 = 0, $9816 = 0, $9817 = 0, $9818 = 0, $9819 = 0, $982 = 0, $9820 = 0, $9821 = 0, $9822 = 0, $9823 = 0, $9824 = 0, $9825 = 0, $9826 = 0, $9827 = 0, $9828 = 0, $9829 = 0, $983 = 0, $9830 = 0, $9831 = 0, $9832 = 0, $9833 = 0, $9834 = 0, $9835 = 0, $9836 = 0, $9837 = 0, $9838 = 0, $9839 = 0, $984 = 0, $9840 = 0, $9841 = 0, $9842 = 0, $9843 = 0, $9844 = 0, $9845 = 0, $9846 = 0, $9847 = 0, $9848 = 0, $9849 = 0, $985 = 0, $9850 = 0, $9851 = 0, $9852 = 0, $9853 = 0, $9854 = 0, $9855 = 0, $9856 = 0, $9857 = 0, $9858 = 0, $9859 = 0, $986 = 0, $9860 = 0, $9861 = 0, $9862 = 0, $9863 = 0, $9864 = 0, $9865 = 0, $9866 = 0, $9867 = 0, $9868 = 0, $9869 = 0, $987 = 0, $9870 = 0, $9871 = 0, $9872 = 0, $9873 = 0, $9874 = 0, $9875 = 0, $9876 = 0, $9877 = 0, $9878 = 0, $9879 = 0, $988 = 0, $9880 = 0, $9881 = 0, $9882 = 0, $9883 = 0, $9884 = 0, $9885 = 0, $9886 = 0, $9887 = 0, $9888 = 0, $9889 = 0, $989 = 0, $9890 = 0, $9891 = 0, $9892 = 0, $9893 = 0, $9894 = 0, $9895 = 0, $9896 = 0, $9897 = 0, $9898 = 0, $9899 = 0, $99 = 0, $990 = 0, $9900 = 0, $9901 = 0, $9902 = 0, $9903 = 0, $9904 = 0, $9905 = 0, $9906 = 0, $9907 = 0, $9908 = 0, $9909 = 0, $991 = 0, $9910 = 0, $9911 = 0, $9912 = 0, $9913 = 0, $9914 = 0, $9915 = 0, $9916 = 0, $9917 = 0, $9918 = 0, $9919 = 0, $992 = 0, $9920 = 0, $9921 = 0, $9922 = 0, $9923 = 0, $9924 = 0, $9925 = 0, $9926 = 0, $9927 = 0, $9928 = 0, $9929 = 0, $993 = 0, $9930 = 0, $9931 = 0, $9932 = 0, $9933 = 0, $9934 = 0, $9935 = 0, $9936 = 0, $9937 = 0, $9938 = 0, $9939 = 0, $994 = 0, $9940 = 0, $9941 = 0, $9942 = 0, $9943 = 0, $9944 = 0, $9945 = 0, $9946 = 0, $9947 = 0, $9948 = 0, $9949 = 0, $995 = 0, $9950 = 0, $9951 = 0, $9952 = 0, $9953 = 0, $9954 = 0, $9955 = 0, $9956 = 0, $9957 = 0, $9958 = 0, $9959 = 0, $996 = 0, $9960 = 0, $9961 = 0, $9962 = 0, $9963 = 0, $9964 = 0, $9965 = 0, $9966 = 0, $9967 = 0, $9968 = 0, $9969 = 0, $997 = 0, $9970 = 0, $9971 = 0, $9972 = 0, $9973 = 0, $9974 = 0, $9975 = 0, $9976 = 0, $9977 = 0, $9978 = 0, $9979 = 0, $998 = 0, $9980 = 0, $9981 = 0, $9982 = 0, $9983 = 0, $9984 = 0, $9985 = 0, $9986 = 0, $9987 = 0, $9988 = 0, $9989 = 0, $999 = 0, $9990 = 0, $9991 = 0, $9992 = 0, $9993 = 0, $9994 = 0, $9995 = 0, $9996 = 0, $9997 = 0, $9998 = 0, $9999 = 0, $dest$02$i2154 = 0, $dest$02$i2754 = 0, $dest$02$i2766 = 0, $dest$02$i2898 = 0, $dest$02$i3198 = 0, $dest$02$i3270 = 0, $dest$02$i3282 = 0, $dest$02$i4110 = 0, $dest$02$i4134 = 0, $dest$02$i4146 = 0, $dest$02$i4242 = 0, $front = 0, $i$03$i2153 = 0, $i$03$i2753 = 0, $i$03$i2765 = 0, $i$03$i2897 = 0, $i$03$i3197 = 0, $i$03$i3269 = 0, $i$03$i3281 = 0, $i$03$i4109 = 0, $i$03$i4133 = 0, $i$03$i4145 = 0, $i$03$i4241 = 0, $info = 0, $src$01$i2155 = 0, $src$01$i2755 = 0, $src$01$i2767 = 0, $src$01$i2899 = 0, $src$01$i3199 = 0, $src$01$i3271 = 0, $src$01$i3283 = 0, $src$01$i4111 = 0, $src$01$i4135 = 0, $src$01$i4147 = 0, $src$01$i4243 = 0, dest = 0, label = 0, sp = 0, src = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 43744 | 0;
 $0 = sp + 22752 | 0;
 $info = sp + 29992 | 0;
 $front = sp + 24176 | 0;
 $1 = sp + 24172 | 0;
 $2 = sp + 22736 | 0;
 $3 = sp + 43728 | 0;
 $4 = sp + 22720 | 0;
 $5 = sp + 43720 | 0;
 $6 = sp + 24168 | 0;
 $7 = sp + 24164 | 0;
 $8 = sp + 24160 | 0;
 $9 = sp + 24156 | 0;
 $10 = sp + 24152 | 0;
 $11 = sp + 24148 | 0;
 $12 = sp + 24144 | 0;
 $13 = sp + 24140 | 0;
 $14 = sp + 24136 | 0;
 $15 = sp + 24132 | 0;
 $16 = sp + 24128 | 0;
 $17 = sp + 24124 | 0;
 $18 = sp + 24120 | 0;
 $19 = sp + 24116 | 0;
 $20 = sp + 24112 | 0;
 $21 = sp + 24108 | 0;
 $22 = sp + 24104 | 0;
 $23 = sp + 24100 | 0;
 $24 = sp + 24096 | 0;
 $25 = sp + 24092 | 0;
 $26 = sp + 24088 | 0;
 $27 = sp + 24084 | 0;
 $28 = sp + 24080 | 0;
 $29 = sp + 24076 | 0;
 $30 = sp + 24072 | 0;
 $31 = sp + 24068 | 0;
 $32 = sp + 24064 | 0;
 $33 = sp + 24060 | 0;
 $34 = sp + 24056 | 0;
 $35 = sp + 24052 | 0;
 $36 = sp + 24048 | 0;
 $37 = sp + 24044 | 0;
 $38 = sp + 24040 | 0;
 $39 = sp + 24036 | 0;
 $40 = sp + 24032 | 0;
 $41 = sp + 24028 | 0;
 $42 = sp + 24024 | 0;
 $43 = sp + 24020 | 0;
 $44 = sp + 24016 | 0;
 $45 = sp + 24012 | 0;
 $46 = sp + 24008 | 0;
 $47 = sp + 24004 | 0;
 $48 = sp + 24e3 | 0;
 $49 = sp + 23996 | 0;
 $50 = sp + 23992 | 0;
 $51 = sp + 23988 | 0;
 $52 = sp + 23984 | 0;
 $53 = sp + 23980 | 0;
 $54 = sp + 23976 | 0;
 $55 = sp + 23972 | 0;
 $56 = sp + 23968 | 0;
 $57 = sp + 23964 | 0;
 $58 = sp + 23960 | 0;
 $59 = sp + 22704 | 0;
 $60 = sp + 43712 | 0;
 $61 = sp + 22688 | 0;
 $62 = sp + 43704 | 0;
 $63 = sp + 23956 | 0;
 $64 = sp + 23952 | 0;
 $65 = sp + 23948 | 0;
 $66 = sp + 23944 | 0;
 $67 = sp + 23940 | 0;
 $68 = sp + 23936 | 0;
 $69 = sp + 23932 | 0;
 $70 = sp + 23928 | 0;
 $71 = sp + 23924 | 0;
 $72 = sp + 23920 | 0;
 $73 = sp + 23916 | 0;
 $74 = sp + 23912 | 0;
 $75 = sp + 23908 | 0;
 $76 = sp + 23904 | 0;
 $77 = sp + 23900 | 0;
 $78 = sp + 23896 | 0;
 $79 = sp + 23892 | 0;
 $80 = sp + 23888 | 0;
 $81 = sp + 23884 | 0;
 $82 = sp + 23880 | 0;
 $83 = sp + 23876 | 0;
 $84 = sp + 23872 | 0;
 $85 = sp + 23868 | 0;
 $86 = sp + 23864 | 0;
 $87 = sp + 23860 | 0;
 $88 = sp + 23856 | 0;
 $89 = sp + 23852 | 0;
 $90 = sp + 23848 | 0;
 $91 = sp + 23844 | 0;
 $92 = sp + 23840 | 0;
 $93 = sp + 23836 | 0;
 $94 = sp + 23832 | 0;
 $95 = sp + 23828 | 0;
 $96 = sp + 23824 | 0;
 $97 = sp + 23820 | 0;
 $98 = sp + 23816 | 0;
 $99 = sp + 23812 | 0;
 $100 = sp + 23808 | 0;
 $101 = sp + 23804 | 0;
 $102 = sp + 23800 | 0;
 $103 = sp + 23796 | 0;
 $104 = sp + 23792 | 0;
 $105 = sp + 23788 | 0;
 $106 = sp + 23784 | 0;
 $107 = sp + 23780 | 0;
 $108 = sp + 23776 | 0;
 $109 = sp + 23772 | 0;
 $110 = sp + 23768 | 0;
 $111 = sp + 23764 | 0;
 $112 = sp + 23760 | 0;
 $113 = sp + 23756 | 0;
 $114 = sp + 23752 | 0;
 $115 = sp + 23748 | 0;
 $116 = sp + 23744 | 0;
 $117 = sp + 23740 | 0;
 $118 = sp + 23736 | 0;
 $119 = sp + 23732 | 0;
 $120 = sp + 23728 | 0;
 $121 = sp + 23724 | 0;
 $122 = sp + 23720 | 0;
 $123 = sp + 23716 | 0;
 $124 = sp + 23712 | 0;
 $125 = sp + 23708 | 0;
 $126 = sp + 23704 | 0;
 $127 = sp + 23700 | 0;
 $128 = sp + 23696 | 0;
 $129 = sp + 23692 | 0;
 $130 = sp + 23688 | 0;
 $131 = sp + 23684 | 0;
 $132 = sp + 23680 | 0;
 $133 = sp + 23676 | 0;
 $134 = sp + 23672 | 0;
 $135 = sp + 22672 | 0;
 $136 = sp + 43696 | 0;
 $137 = sp + 23668 | 0;
 $138 = sp + 23664 | 0;
 $139 = sp + 22656 | 0;
 $140 = sp + 43688 | 0;
 $141 = sp + 23660 | 0;
 $142 = sp + 22640 | 0;
 $143 = sp + 43680 | 0;
 $144 = sp + 22624 | 0;
 $145 = sp + 43672 | 0;
 $146 = sp + 22608 | 0;
 $147 = sp + 43664 | 0;
 $148 = sp + 22592 | 0;
 $149 = sp + 43656 | 0;
 $150 = sp + 22576 | 0;
 $151 = sp + 43648 | 0;
 $152 = sp + 22560 | 0;
 $153 = sp + 43640 | 0;
 $154 = sp + 22544 | 0;
 $155 = sp + 43632 | 0;
 $156 = sp + 22528 | 0;
 $157 = sp + 43624 | 0;
 $158 = sp + 22512 | 0;
 $159 = sp + 43616 | 0;
 $160 = sp + 22496 | 0;
 $161 = sp + 43608 | 0;
 $162 = sp + 22480 | 0;
 $163 = sp + 43600 | 0;
 $164 = sp + 22464 | 0;
 $165 = sp + 43592 | 0;
 $166 = sp + 22448 | 0;
 $167 = sp + 43584 | 0;
 $168 = sp + 22432 | 0;
 $169 = sp + 43576 | 0;
 $170 = sp + 22416 | 0;
 $171 = sp + 43568 | 0;
 $172 = sp + 22400 | 0;
 $173 = sp + 43560 | 0;
 $174 = sp + 22384 | 0;
 $175 = sp + 43552 | 0;
 $176 = sp + 22368 | 0;
 $177 = sp + 43544 | 0;
 $178 = sp + 22352 | 0;
 $179 = sp + 43536 | 0;
 $180 = sp + 22336 | 0;
 $181 = sp + 43528 | 0;
 $182 = sp + 22320 | 0;
 $183 = sp + 43520 | 0;
 $184 = sp + 22304 | 0;
 $185 = sp + 43512 | 0;
 $186 = sp + 22288 | 0;
 $187 = sp + 43504 | 0;
 $188 = sp + 22272 | 0;
 $189 = sp + 43496 | 0;
 $190 = sp + 22256 | 0;
 $191 = sp + 43488 | 0;
 $192 = sp + 22240 | 0;
 $193 = sp + 43480 | 0;
 $194 = sp + 22224 | 0;
 $195 = sp + 43472 | 0;
 $196 = sp + 23656 | 0;
 $197 = sp + 23652 | 0;
 $198 = sp + 23648 | 0;
 $199 = sp + 23644 | 0;
 $200 = sp + 23640 | 0;
 $201 = sp + 23636 | 0;
 $202 = sp + 22208 | 0;
 $203 = sp + 43464 | 0;
 $204 = sp + 23632 | 0;
 $205 = sp + 22192 | 0;
 $206 = sp + 43456 | 0;
 $207 = sp + 22176 | 0;
 $208 = sp + 43448 | 0;
 $209 = sp + 22160 | 0;
 $210 = sp + 43440 | 0;
 $211 = sp + 22144 | 0;
 $212 = sp + 43432 | 0;
 $213 = sp + 22128 | 0;
 $214 = sp + 43424 | 0;
 $215 = sp + 22112 | 0;
 $216 = sp + 43416 | 0;
 $217 = sp + 22096 | 0;
 $218 = sp + 43408 | 0;
 $219 = sp + 22080 | 0;
 $220 = sp + 43400 | 0;
 $221 = sp + 22064 | 0;
 $222 = sp + 43392 | 0;
 $223 = sp + 22048 | 0;
 $224 = sp + 43384 | 0;
 $225 = sp + 22032 | 0;
 $226 = sp + 43376 | 0;
 $227 = sp + 22016 | 0;
 $228 = sp + 43368 | 0;
 $229 = sp + 22e3 | 0;
 $230 = sp + 43360 | 0;
 $231 = sp + 21984 | 0;
 $232 = sp + 43352 | 0;
 $233 = sp + 21968 | 0;
 $234 = sp + 43344 | 0;
 $235 = sp + 21952 | 0;
 $236 = sp + 43336 | 0;
 $237 = sp + 21936 | 0;
 $238 = sp + 43328 | 0;
 $239 = sp + 21920 | 0;
 $240 = sp + 43320 | 0;
 $241 = sp + 21904 | 0;
 $242 = sp + 43312 | 0;
 $243 = sp + 21888 | 0;
 $244 = sp + 43304 | 0;
 $245 = sp + 23628 | 0;
 $246 = sp + 23624 | 0;
 $247 = sp + 23620 | 0;
 $248 = sp + 23616 | 0;
 $249 = sp + 23612 | 0;
 $250 = sp + 23608 | 0;
 $251 = sp + 21872 | 0;
 $252 = sp + 43296 | 0;
 $253 = sp + 21856 | 0;
 $254 = sp + 43288 | 0;
 $255 = sp + 21840 | 0;
 $256 = sp + 43280 | 0;
 $257 = sp + 21824 | 0;
 $258 = sp + 43272 | 0;
 $259 = sp + 21808 | 0;
 $260 = sp + 43264 | 0;
 $261 = sp + 21792 | 0;
 $262 = sp + 43256 | 0;
 $263 = sp + 21776 | 0;
 $264 = sp + 43248 | 0;
 $265 = sp + 21760 | 0;
 $266 = sp + 43240 | 0;
 $267 = sp + 21744 | 0;
 $268 = sp + 43232 | 0;
 $269 = sp + 21728 | 0;
 $270 = sp + 43224 | 0;
 $271 = sp + 21712 | 0;
 $272 = sp + 43216 | 0;
 $273 = sp + 21696 | 0;
 $274 = sp + 43208 | 0;
 $275 = sp + 21680 | 0;
 $276 = sp + 43200 | 0;
 $277 = sp + 21664 | 0;
 $278 = sp + 43192 | 0;
 $279 = sp + 21648 | 0;
 $280 = sp + 43184 | 0;
 $281 = sp + 21632 | 0;
 $282 = sp + 43176 | 0;
 $283 = sp + 21616 | 0;
 $284 = sp + 43168 | 0;
 $285 = sp + 21600 | 0;
 $286 = sp + 43160 | 0;
 $287 = sp + 21584 | 0;
 $288 = sp + 43152 | 0;
 $289 = sp + 21568 | 0;
 $290 = sp + 43144 | 0;
 $291 = sp + 21552 | 0;
 $292 = sp + 43136 | 0;
 $293 = sp + 21536 | 0;
 $294 = sp + 43128 | 0;
 $295 = sp + 21520 | 0;
 $296 = sp + 43120 | 0;
 $297 = sp + 21504 | 0;
 $298 = sp + 43112 | 0;
 $299 = sp + 21488 | 0;
 $300 = sp + 43104 | 0;
 $301 = sp + 21472 | 0;
 $302 = sp + 43096 | 0;
 $303 = sp + 21456 | 0;
 $304 = sp + 43088 | 0;
 $305 = sp + 21440 | 0;
 $306 = sp + 43080 | 0;
 $307 = sp + 21424 | 0;
 $308 = sp + 43072 | 0;
 $309 = sp + 21408 | 0;
 $310 = sp + 43064 | 0;
 $311 = sp + 21392 | 0;
 $312 = sp + 43056 | 0;
 $313 = sp + 21376 | 0;
 $314 = sp + 43048 | 0;
 $315 = sp + 21360 | 0;
 $316 = sp + 43040 | 0;
 $317 = sp + 21344 | 0;
 $318 = sp + 43032 | 0;
 $319 = sp + 21328 | 0;
 $320 = sp + 43024 | 0;
 $321 = sp + 21312 | 0;
 $322 = sp + 43016 | 0;
 $323 = sp + 21296 | 0;
 $324 = sp + 43008 | 0;
 $325 = sp + 21280 | 0;
 $326 = sp + 43e3 | 0;
 $327 = sp + 21264 | 0;
 $328 = sp + 42992 | 0;
 $329 = sp + 21248 | 0;
 $330 = sp + 42984 | 0;
 $331 = sp + 21232 | 0;
 $332 = sp + 42976 | 0;
 $333 = sp + 21216 | 0;
 $334 = sp + 42968 | 0;
 $335 = sp + 21200 | 0;
 $336 = sp + 42960 | 0;
 $337 = sp + 21184 | 0;
 $338 = sp + 42952 | 0;
 $339 = sp + 21168 | 0;
 $340 = sp + 42944 | 0;
 $341 = sp + 21152 | 0;
 $342 = sp + 42936 | 0;
 $343 = sp + 21136 | 0;
 $344 = sp + 42928 | 0;
 $345 = sp + 21120 | 0;
 $346 = sp + 42920 | 0;
 $347 = sp + 21104 | 0;
 $348 = sp + 42912 | 0;
 $349 = sp + 23604 | 0;
 $350 = sp + 23600 | 0;
 $351 = sp + 23596 | 0;
 $352 = sp + 23592 | 0;
 $353 = sp + 23588 | 0;
 $354 = sp + 23584 | 0;
 $355 = sp + 23580 | 0;
 $356 = sp + 23576 | 0;
 $357 = sp + 23572 | 0;
 $358 = sp + 23568 | 0;
 $359 = sp + 23564 | 0;
 $360 = sp + 23560 | 0;
 $361 = sp + 23556 | 0;
 $362 = sp + 23552 | 0;
 $363 = sp + 23548 | 0;
 $364 = sp + 23544 | 0;
 $365 = sp + 23540 | 0;
 $366 = sp + 23536 | 0;
 $367 = sp + 23532 | 0;
 $368 = sp + 23528 | 0;
 $369 = sp + 23524 | 0;
 $370 = sp + 23520 | 0;
 $371 = sp + 23516 | 0;
 $372 = sp + 23512 | 0;
 $373 = sp + 23508 | 0;
 $374 = sp + 23504 | 0;
 $375 = sp + 23500 | 0;
 $376 = sp + 23496 | 0;
 $377 = sp + 23492 | 0;
 $378 = sp + 23488 | 0;
 $379 = sp + 23484 | 0;
 $380 = sp + 21088 | 0;
 $381 = sp + 42904 | 0;
 $382 = sp + 21072 | 0;
 $383 = sp + 42896 | 0;
 $384 = sp + 21056 | 0;
 $385 = sp + 42888 | 0;
 $386 = sp + 21040 | 0;
 $387 = sp + 42880 | 0;
 $388 = sp + 21024 | 0;
 $389 = sp + 42872 | 0;
 $390 = sp + 21008 | 0;
 $391 = sp + 42864 | 0;
 $392 = sp + 20992 | 0;
 $393 = sp + 42856 | 0;
 $394 = sp + 20976 | 0;
 $395 = sp + 42848 | 0;
 $396 = sp + 20960 | 0;
 $397 = sp + 42840 | 0;
 $398 = sp + 20944 | 0;
 $399 = sp + 42832 | 0;
 $400 = sp + 20928 | 0;
 $401 = sp + 42824 | 0;
 $402 = sp + 20912 | 0;
 $403 = sp + 42816 | 0;
 $404 = sp + 20896 | 0;
 $405 = sp + 42808 | 0;
 $406 = sp + 20880 | 0;
 $407 = sp + 42800 | 0;
 $408 = sp + 20864 | 0;
 $409 = sp + 42792 | 0;
 $410 = sp + 20848 | 0;
 $411 = sp + 42784 | 0;
 $412 = sp + 20832 | 0;
 $413 = sp + 42776 | 0;
 $414 = sp + 23480 | 0;
 $415 = sp + 23476 | 0;
 $416 = sp + 23472 | 0;
 $417 = sp + 23468 | 0;
 $418 = sp + 23464 | 0;
 $419 = sp + 23460 | 0;
 $420 = sp + 20816 | 0;
 $421 = sp + 42768 | 0;
 $422 = sp + 20800 | 0;
 $423 = sp + 42760 | 0;
 $424 = sp + 23456 | 0;
 $425 = sp + 20784 | 0;
 $426 = sp + 42752 | 0;
 $427 = sp + 20768 | 0;
 $428 = sp + 42744 | 0;
 $429 = sp + 20752 | 0;
 $430 = sp + 42736 | 0;
 $431 = sp + 20736 | 0;
 $432 = sp + 42728 | 0;
 $433 = sp + 20720 | 0;
 $434 = sp + 42720 | 0;
 $435 = sp + 20704 | 0;
 $436 = sp + 42712 | 0;
 $437 = sp + 20688 | 0;
 $438 = sp + 42704 | 0;
 $439 = sp + 20672 | 0;
 $440 = sp + 42696 | 0;
 $441 = sp + 20656 | 0;
 $442 = sp + 42688 | 0;
 $443 = sp + 20640 | 0;
 $444 = sp + 42680 | 0;
 $445 = sp + 20624 | 0;
 $446 = sp + 42672 | 0;
 $447 = sp + 20608 | 0;
 $448 = sp + 42664 | 0;
 $449 = sp + 20592 | 0;
 $450 = sp + 42656 | 0;
 $451 = sp + 20576 | 0;
 $452 = sp + 42648 | 0;
 $453 = sp + 20560 | 0;
 $454 = sp + 42640 | 0;
 $455 = sp + 20544 | 0;
 $456 = sp + 42632 | 0;
 $457 = sp + 20528 | 0;
 $458 = sp + 42624 | 0;
 $459 = sp + 20512 | 0;
 $460 = sp + 42616 | 0;
 $461 = sp + 20496 | 0;
 $462 = sp + 42608 | 0;
 $463 = sp + 20480 | 0;
 $464 = sp + 42600 | 0;
 $465 = sp + 20464 | 0;
 $466 = sp + 42592 | 0;
 $467 = sp + 20448 | 0;
 $468 = sp + 42584 | 0;
 $469 = sp + 20432 | 0;
 $470 = sp + 42576 | 0;
 $471 = sp + 20416 | 0;
 $472 = sp + 42568 | 0;
 $473 = sp + 20400 | 0;
 $474 = sp + 42560 | 0;
 $475 = sp + 20384 | 0;
 $476 = sp + 42552 | 0;
 $477 = sp + 20368 | 0;
 $478 = sp + 42544 | 0;
 $479 = sp + 20352 | 0;
 $480 = sp + 42536 | 0;
 $481 = sp + 20336 | 0;
 $482 = sp + 42528 | 0;
 $483 = sp + 20320 | 0;
 $484 = sp + 42520 | 0;
 $485 = sp + 20304 | 0;
 $486 = sp + 42512 | 0;
 $487 = sp + 20288 | 0;
 $488 = sp + 42504 | 0;
 $489 = sp + 20272 | 0;
 $490 = sp + 42496 | 0;
 $491 = sp + 20256 | 0;
 $492 = sp + 42488 | 0;
 $493 = sp + 20240 | 0;
 $494 = sp + 42480 | 0;
 $495 = sp + 23452 | 0;
 $496 = sp + 23448 | 0;
 $497 = sp + 23444 | 0;
 $498 = sp + 23440 | 0;
 $499 = sp + 23436 | 0;
 $500 = sp + 23432 | 0;
 $501 = sp + 20224 | 0;
 $502 = sp + 42472 | 0;
 $503 = sp + 20208 | 0;
 $504 = sp + 42464 | 0;
 $505 = sp + 20192 | 0;
 $506 = sp + 42456 | 0;
 $507 = sp + 20176 | 0;
 $508 = sp + 42448 | 0;
 $509 = sp + 20160 | 0;
 $510 = sp + 42440 | 0;
 $511 = sp + 20144 | 0;
 $512 = sp + 42432 | 0;
 $513 = sp + 20128 | 0;
 $514 = sp + 42424 | 0;
 $515 = sp + 20112 | 0;
 $516 = sp + 42416 | 0;
 $517 = sp + 20096 | 0;
 $518 = sp + 42408 | 0;
 $519 = sp + 20080 | 0;
 $520 = sp + 42400 | 0;
 $521 = sp + 20064 | 0;
 $522 = sp + 42392 | 0;
 $523 = sp + 20048 | 0;
 $524 = sp + 42384 | 0;
 $525 = sp + 20032 | 0;
 $526 = sp + 42376 | 0;
 $527 = sp + 20016 | 0;
 $528 = sp + 42368 | 0;
 $529 = sp + 2e4 | 0;
 $530 = sp + 42360 | 0;
 $531 = sp + 19984 | 0;
 $532 = sp + 42352 | 0;
 $533 = sp + 19968 | 0;
 $534 = sp + 42344 | 0;
 $535 = sp + 19952 | 0;
 $536 = sp + 42336 | 0;
 $537 = sp + 19936 | 0;
 $538 = sp + 42328 | 0;
 $539 = sp + 19920 | 0;
 $540 = sp + 42320 | 0;
 $541 = sp + 19904 | 0;
 $542 = sp + 42312 | 0;
 $543 = sp + 19888 | 0;
 $544 = sp + 42304 | 0;
 $545 = sp + 19872 | 0;
 $546 = sp + 42296 | 0;
 $547 = sp + 19856 | 0;
 $548 = sp + 42288 | 0;
 $549 = sp + 19840 | 0;
 $550 = sp + 42280 | 0;
 $551 = sp + 19824 | 0;
 $552 = sp + 42272 | 0;
 $553 = sp + 19808 | 0;
 $554 = sp + 42264 | 0;
 $555 = sp + 19792 | 0;
 $556 = sp + 42256 | 0;
 $557 = sp + 19760 | 0;
 $558 = sp + 42248 | 0;
 $559 = sp + 19744 | 0;
 $560 = sp + 42240 | 0;
 $561 = sp + 19728 | 0;
 $562 = sp + 42232 | 0;
 $563 = sp + 19712 | 0;
 $564 = sp + 42224 | 0;
 $565 = sp + 19696 | 0;
 $566 = sp + 42216 | 0;
 $567 = sp + 19680 | 0;
 $568 = sp + 42208 | 0;
 $569 = sp + 19664 | 0;
 $570 = sp + 42200 | 0;
 $571 = sp + 19648 | 0;
 $572 = sp + 42192 | 0;
 $573 = sp + 19632 | 0;
 $574 = sp + 42184 | 0;
 $575 = sp + 19616 | 0;
 $576 = sp + 42176 | 0;
 $577 = sp + 19600 | 0;
 $578 = sp + 42168 | 0;
 $579 = sp + 19584 | 0;
 $580 = sp + 42160 | 0;
 $581 = sp + 19568 | 0;
 $582 = sp + 42152 | 0;
 $583 = sp + 19552 | 0;
 $584 = sp + 42144 | 0;
 $585 = sp + 19536 | 0;
 $586 = sp + 42136 | 0;
 $587 = sp + 19520 | 0;
 $588 = sp + 42128 | 0;
 $589 = sp + 19504 | 0;
 $590 = sp + 42120 | 0;
 $591 = sp + 19488 | 0;
 $592 = sp + 42112 | 0;
 $593 = sp + 19472 | 0;
 $594 = sp + 42104 | 0;
 $595 = sp + 19456 | 0;
 $596 = sp + 42096 | 0;
 $597 = sp + 19440 | 0;
 $598 = sp + 42088 | 0;
 $599 = sp + 19424 | 0;
 $600 = sp + 42080 | 0;
 $601 = sp + 19408 | 0;
 $602 = sp + 42072 | 0;
 $603 = sp + 19392 | 0;
 $604 = sp + 42064 | 0;
 $605 = sp + 19376 | 0;
 $606 = sp + 42056 | 0;
 $607 = sp + 19360 | 0;
 $608 = sp + 42048 | 0;
 $609 = sp + 19344 | 0;
 $610 = sp + 42040 | 0;
 $611 = sp + 19328 | 0;
 $612 = sp + 42032 | 0;
 $613 = sp + 19312 | 0;
 $614 = sp + 42024 | 0;
 $615 = sp + 19296 | 0;
 $616 = sp + 42016 | 0;
 $617 = sp + 19280 | 0;
 $618 = sp + 42008 | 0;
 $619 = sp + 19264 | 0;
 $620 = sp + 42e3 | 0;
 $621 = sp + 19248 | 0;
 $622 = sp + 41992 | 0;
 $623 = sp + 19232 | 0;
 $624 = sp + 41984 | 0;
 $625 = sp + 19216 | 0;
 $626 = sp + 41976 | 0;
 $627 = sp + 19200 | 0;
 $628 = sp + 41968 | 0;
 $629 = sp + 19184 | 0;
 $630 = sp + 41960 | 0;
 $631 = sp + 19152 | 0;
 $632 = sp + 41952 | 0;
 $633 = sp + 19136 | 0;
 $634 = sp + 41944 | 0;
 $635 = sp + 19120 | 0;
 $636 = sp + 41936 | 0;
 $637 = sp + 19104 | 0;
 $638 = sp + 41928 | 0;
 $639 = sp + 19088 | 0;
 $640 = sp + 41920 | 0;
 $641 = sp + 19072 | 0;
 $642 = sp + 41912 | 0;
 $643 = sp + 19056 | 0;
 $644 = sp + 41904 | 0;
 $645 = sp + 19040 | 0;
 $646 = sp + 41896 | 0;
 $647 = sp + 19024 | 0;
 $648 = sp + 41888 | 0;
 $649 = sp + 19008 | 0;
 $650 = sp + 41880 | 0;
 $651 = sp + 18992 | 0;
 $652 = sp + 41872 | 0;
 $653 = sp + 18976 | 0;
 $654 = sp + 41864 | 0;
 $655 = sp + 18960 | 0;
 $656 = sp + 41856 | 0;
 $657 = sp + 18944 | 0;
 $658 = sp + 41848 | 0;
 $659 = sp + 18928 | 0;
 $660 = sp + 41840 | 0;
 $661 = sp + 18896 | 0;
 $662 = sp + 41832 | 0;
 $663 = sp + 18880 | 0;
 $664 = sp + 41824 | 0;
 $665 = sp + 18864 | 0;
 $666 = sp + 41816 | 0;
 $667 = sp + 18848 | 0;
 $668 = sp + 41808 | 0;
 $669 = sp + 18832 | 0;
 $670 = sp + 41800 | 0;
 $671 = sp + 18816 | 0;
 $672 = sp + 41792 | 0;
 $673 = sp + 18800 | 0;
 $674 = sp + 41784 | 0;
 $675 = sp + 18784 | 0;
 $676 = sp + 41776 | 0;
 $677 = sp + 18768 | 0;
 $678 = sp + 41768 | 0;
 $679 = sp + 18752 | 0;
 $680 = sp + 41760 | 0;
 $681 = sp + 18736 | 0;
 $682 = sp + 41752 | 0;
 $683 = sp + 18720 | 0;
 $684 = sp + 41744 | 0;
 $685 = sp + 18704 | 0;
 $686 = sp + 41736 | 0;
 $687 = sp + 18688 | 0;
 $688 = sp + 41728 | 0;
 $689 = sp + 18672 | 0;
 $690 = sp + 41720 | 0;
 $691 = sp + 18656 | 0;
 $692 = sp + 41712 | 0;
 $693 = sp + 18640 | 0;
 $694 = sp + 41704 | 0;
 $695 = sp + 18624 | 0;
 $696 = sp + 41696 | 0;
 $697 = sp + 18608 | 0;
 $698 = sp + 41688 | 0;
 $699 = sp + 18592 | 0;
 $700 = sp + 41680 | 0;
 $701 = sp + 18576 | 0;
 $702 = sp + 41672 | 0;
 $703 = sp + 18560 | 0;
 $704 = sp + 41664 | 0;
 $705 = sp + 18544 | 0;
 $706 = sp + 41656 | 0;
 $707 = sp + 18528 | 0;
 $708 = sp + 41648 | 0;
 $709 = sp + 18512 | 0;
 $710 = sp + 41640 | 0;
 $711 = sp + 18496 | 0;
 $712 = sp + 41632 | 0;
 $713 = sp + 18480 | 0;
 $714 = sp + 41624 | 0;
 $715 = sp + 18464 | 0;
 $716 = sp + 41616 | 0;
 $717 = sp + 18448 | 0;
 $718 = sp + 41608 | 0;
 $719 = sp + 18432 | 0;
 $720 = sp + 41600 | 0;
 $721 = sp + 18416 | 0;
 $722 = sp + 41592 | 0;
 $723 = sp + 18400 | 0;
 $724 = sp + 41584 | 0;
 $725 = sp + 18384 | 0;
 $726 = sp + 41576 | 0;
 $727 = sp + 18368 | 0;
 $728 = sp + 41568 | 0;
 $729 = sp + 18352 | 0;
 $730 = sp + 41560 | 0;
 $731 = sp + 18336 | 0;
 $732 = sp + 41552 | 0;
 $733 = sp + 18320 | 0;
 $734 = sp + 41544 | 0;
 $735 = sp + 18304 | 0;
 $736 = sp + 41536 | 0;
 $737 = sp + 18288 | 0;
 $738 = sp + 41528 | 0;
 $739 = sp + 18272 | 0;
 $740 = sp + 41520 | 0;
 $741 = sp + 18256 | 0;
 $742 = sp + 41512 | 0;
 $743 = sp + 18240 | 0;
 $744 = sp + 41504 | 0;
 $745 = sp + 18224 | 0;
 $746 = sp + 41496 | 0;
 $747 = sp + 18208 | 0;
 $748 = sp + 41488 | 0;
 $749 = sp + 18192 | 0;
 $750 = sp + 41480 | 0;
 $751 = sp + 18176 | 0;
 $752 = sp + 41472 | 0;
 $753 = sp + 18160 | 0;
 $754 = sp + 41464 | 0;
 $755 = sp + 18144 | 0;
 $756 = sp + 41456 | 0;
 $757 = sp + 18128 | 0;
 $758 = sp + 41448 | 0;
 $759 = sp + 18112 | 0;
 $760 = sp + 41440 | 0;
 $761 = sp + 18096 | 0;
 $762 = sp + 41432 | 0;
 $763 = sp + 18080 | 0;
 $764 = sp + 41424 | 0;
 $765 = sp + 18064 | 0;
 $766 = sp + 41416 | 0;
 $767 = sp + 18048 | 0;
 $768 = sp + 41408 | 0;
 $769 = sp + 18032 | 0;
 $770 = sp + 41400 | 0;
 $771 = sp + 18016 | 0;
 $772 = sp + 41392 | 0;
 $773 = sp + 18e3 | 0;
 $774 = sp + 41384 | 0;
 $775 = sp + 17984 | 0;
 $776 = sp + 41376 | 0;
 $777 = sp + 17968 | 0;
 $778 = sp + 41368 | 0;
 $779 = sp + 17952 | 0;
 $780 = sp + 41360 | 0;
 $781 = sp + 17936 | 0;
 $782 = sp + 41352 | 0;
 $783 = sp + 17920 | 0;
 $784 = sp + 41344 | 0;
 $785 = sp + 17904 | 0;
 $786 = sp + 41336 | 0;
 $787 = sp + 17888 | 0;
 $788 = sp + 41328 | 0;
 $789 = sp + 17872 | 0;
 $790 = sp + 41320 | 0;
 $791 = sp + 17856 | 0;
 $792 = sp + 41312 | 0;
 $793 = sp + 17840 | 0;
 $794 = sp + 41304 | 0;
 $795 = sp + 17824 | 0;
 $796 = sp + 41296 | 0;
 $797 = sp + 17808 | 0;
 $798 = sp + 41288 | 0;
 $799 = sp + 17792 | 0;
 $800 = sp + 41280 | 0;
 $801 = sp + 17776 | 0;
 $802 = sp + 41272 | 0;
 $803 = sp + 17760 | 0;
 $804 = sp + 41264 | 0;
 $805 = sp + 17744 | 0;
 $806 = sp + 41256 | 0;
 $807 = sp + 17728 | 0;
 $808 = sp + 41248 | 0;
 $809 = sp + 17712 | 0;
 $810 = sp + 41240 | 0;
 $811 = sp + 17696 | 0;
 $812 = sp + 41232 | 0;
 $813 = sp + 17680 | 0;
 $814 = sp + 41224 | 0;
 $815 = sp + 17664 | 0;
 $816 = sp + 41216 | 0;
 $817 = sp + 17648 | 0;
 $818 = sp + 41208 | 0;
 $819 = sp + 17632 | 0;
 $820 = sp + 41200 | 0;
 $821 = sp + 17616 | 0;
 $822 = sp + 41192 | 0;
 $823 = sp + 17600 | 0;
 $824 = sp + 41184 | 0;
 $825 = sp + 17584 | 0;
 $826 = sp + 41176 | 0;
 $827 = sp + 23428 | 0;
 $828 = sp + 23424 | 0;
 $829 = sp + 23420 | 0;
 $830 = sp + 23416 | 0;
 $831 = sp + 23412 | 0;
 $832 = sp + 23408 | 0;
 $833 = sp + 23404 | 0;
 $834 = sp + 23400 | 0;
 $835 = sp + 23396 | 0;
 $836 = sp + 23392 | 0;
 $837 = sp + 23388 | 0;
 $838 = sp + 23384 | 0;
 $839 = sp + 23380 | 0;
 $840 = sp + 23376 | 0;
 $841 = sp + 23372 | 0;
 $842 = sp + 23368 | 0;
 $843 = sp + 23364 | 0;
 $844 = sp + 23360 | 0;
 $845 = sp + 23356 | 0;
 $846 = sp + 23352 | 0;
 $847 = sp + 23348 | 0;
 $848 = sp + 23344 | 0;
 $849 = sp + 23340 | 0;
 $850 = sp + 17568 | 0;
 $851 = sp + 41168 | 0;
 $852 = sp + 17552 | 0;
 $853 = sp + 41160 | 0;
 $854 = sp + 17536 | 0;
 $855 = sp + 41152 | 0;
 $856 = sp + 23336 | 0;
 $857 = sp + 23332 | 0;
 $858 = sp + 17520 | 0;
 $859 = sp + 41144 | 0;
 $860 = sp + 17488 | 0;
 $861 = sp + 41136 | 0;
 $862 = sp + 17472 | 0;
 $863 = sp + 41128 | 0;
 $864 = sp + 17456 | 0;
 $865 = sp + 41120 | 0;
 $866 = sp + 17440 | 0;
 $867 = sp + 41112 | 0;
 $868 = sp + 17424 | 0;
 $869 = sp + 41104 | 0;
 $870 = sp + 17408 | 0;
 $871 = sp + 41096 | 0;
 $872 = sp + 17392 | 0;
 $873 = sp + 41088 | 0;
 $874 = sp + 17376 | 0;
 $875 = sp + 41080 | 0;
 $876 = sp + 17360 | 0;
 $877 = sp + 41072 | 0;
 $878 = sp + 17344 | 0;
 $879 = sp + 41064 | 0;
 $880 = sp + 17328 | 0;
 $881 = sp + 41056 | 0;
 $882 = sp + 17312 | 0;
 $883 = sp + 41048 | 0;
 $884 = sp + 17296 | 0;
 $885 = sp + 41040 | 0;
 $886 = sp + 17280 | 0;
 $887 = sp + 41032 | 0;
 $888 = sp + 17264 | 0;
 $889 = sp + 41024 | 0;
 $890 = sp + 17248 | 0;
 $891 = sp + 41016 | 0;
 $892 = sp + 17232 | 0;
 $893 = sp + 41008 | 0;
 $894 = sp + 17216 | 0;
 $895 = sp + 41e3 | 0;
 $896 = sp + 17200 | 0;
 $897 = sp + 40992 | 0;
 $898 = sp + 17184 | 0;
 $899 = sp + 40984 | 0;
 $900 = sp + 17168 | 0;
 $901 = sp + 40976 | 0;
 $902 = sp + 17152 | 0;
 $903 = sp + 40968 | 0;
 $904 = sp + 17136 | 0;
 $905 = sp + 40960 | 0;
 $906 = sp + 17104 | 0;
 $907 = sp + 40952 | 0;
 $908 = sp + 17088 | 0;
 $909 = sp + 40944 | 0;
 $910 = sp + 17072 | 0;
 $911 = sp + 40936 | 0;
 $912 = sp + 17056 | 0;
 $913 = sp + 40928 | 0;
 $914 = sp + 17040 | 0;
 $915 = sp + 40920 | 0;
 $916 = sp + 17024 | 0;
 $917 = sp + 40912 | 0;
 $918 = sp + 17008 | 0;
 $919 = sp + 40904 | 0;
 $920 = sp + 16992 | 0;
 $921 = sp + 40896 | 0;
 $922 = sp + 16976 | 0;
 $923 = sp + 40888 | 0;
 $924 = sp + 16960 | 0;
 $925 = sp + 40880 | 0;
 $926 = sp + 16944 | 0;
 $927 = sp + 40872 | 0;
 $928 = sp + 16928 | 0;
 $929 = sp + 40864 | 0;
 $930 = sp + 16912 | 0;
 $931 = sp + 40856 | 0;
 $932 = sp + 16896 | 0;
 $933 = sp + 40848 | 0;
 $934 = sp + 16880 | 0;
 $935 = sp + 40840 | 0;
 $936 = sp + 16864 | 0;
 $937 = sp + 40832 | 0;
 $938 = sp + 16848 | 0;
 $939 = sp + 40824 | 0;
 $940 = sp + 16832 | 0;
 $941 = sp + 40816 | 0;
 $942 = sp + 16816 | 0;
 $943 = sp + 40808 | 0;
 $944 = sp + 16800 | 0;
 $945 = sp + 40800 | 0;
 $946 = sp + 16784 | 0;
 $947 = sp + 40792 | 0;
 $948 = sp + 16768 | 0;
 $949 = sp + 40784 | 0;
 $950 = sp + 16752 | 0;
 $951 = sp + 40776 | 0;
 $952 = sp + 16736 | 0;
 $953 = sp + 40768 | 0;
 $954 = sp + 16720 | 0;
 $955 = sp + 40760 | 0;
 $956 = sp + 16704 | 0;
 $957 = sp + 40752 | 0;
 $958 = sp + 16688 | 0;
 $959 = sp + 40744 | 0;
 $960 = sp + 16672 | 0;
 $961 = sp + 40736 | 0;
 $962 = sp + 16656 | 0;
 $963 = sp + 40728 | 0;
 $964 = sp + 16640 | 0;
 $965 = sp + 40720 | 0;
 $966 = sp + 16624 | 0;
 $967 = sp + 40712 | 0;
 $968 = sp + 16608 | 0;
 $969 = sp + 40704 | 0;
 $970 = sp + 16592 | 0;
 $971 = sp + 40696 | 0;
 $972 = sp + 16576 | 0;
 $973 = sp + 40688 | 0;
 $974 = sp + 16560 | 0;
 $975 = sp + 40680 | 0;
 $976 = sp + 16544 | 0;
 $977 = sp + 40672 | 0;
 $978 = sp + 16528 | 0;
 $979 = sp + 40664 | 0;
 $980 = sp + 16512 | 0;
 $981 = sp + 40656 | 0;
 $982 = sp + 16496 | 0;
 $983 = sp + 40648 | 0;
 $984 = sp + 16480 | 0;
 $985 = sp + 40640 | 0;
 $986 = sp + 16464 | 0;
 $987 = sp + 40632 | 0;
 $988 = sp + 16448 | 0;
 $989 = sp + 40624 | 0;
 $990 = sp + 16432 | 0;
 $991 = sp + 40616 | 0;
 $992 = sp + 16416 | 0;
 $993 = sp + 40608 | 0;
 $994 = sp + 16400 | 0;
 $995 = sp + 40600 | 0;
 $996 = sp + 16384 | 0;
 $997 = sp + 40592 | 0;
 $998 = sp + 16368 | 0;
 $999 = sp + 40584 | 0;
 $1000 = sp + 16352 | 0;
 $1001 = sp + 40576 | 0;
 $1002 = sp + 16336 | 0;
 $1003 = sp + 40568 | 0;
 $1004 = sp + 16320 | 0;
 $1005 = sp + 40560 | 0;
 $1006 = sp + 16304 | 0;
 $1007 = sp + 40552 | 0;
 $1008 = sp + 16288 | 0;
 $1009 = sp + 40544 | 0;
 $1010 = sp + 16272 | 0;
 $1011 = sp + 40536 | 0;
 $1012 = sp + 16256 | 0;
 $1013 = sp + 40528 | 0;
 $1014 = sp + 16240 | 0;
 $1015 = sp + 40520 | 0;
 $1016 = sp + 16224 | 0;
 $1017 = sp + 40512 | 0;
 $1018 = sp + 16208 | 0;
 $1019 = sp + 40504 | 0;
 $1020 = sp + 16192 | 0;
 $1021 = sp + 40496 | 0;
 $1022 = sp + 16176 | 0;
 $1023 = sp + 40488 | 0;
 $1024 = sp + 16160 | 0;
 $1025 = sp + 40480 | 0;
 $1026 = sp + 16144 | 0;
 $1027 = sp + 40472 | 0;
 $1028 = sp + 16128 | 0;
 $1029 = sp + 40464 | 0;
 $1030 = sp + 16112 | 0;
 $1031 = sp + 40456 | 0;
 $1032 = sp + 16096 | 0;
 $1033 = sp + 40448 | 0;
 $1034 = sp + 16080 | 0;
 $1035 = sp + 40440 | 0;
 $1036 = sp + 16064 | 0;
 $1037 = sp + 40432 | 0;
 $1038 = sp + 16048 | 0;
 $1039 = sp + 40424 | 0;
 $1040 = sp + 16032 | 0;
 $1041 = sp + 40416 | 0;
 $1042 = sp + 16016 | 0;
 $1043 = sp + 40408 | 0;
 $1044 = sp + 16e3 | 0;
 $1045 = sp + 40400 | 0;
 $1046 = sp + 15984 | 0;
 $1047 = sp + 40392 | 0;
 $1048 = sp + 15968 | 0;
 $1049 = sp + 40384 | 0;
 $1050 = sp + 15952 | 0;
 $1051 = sp + 40376 | 0;
 $1052 = sp + 15936 | 0;
 $1053 = sp + 40368 | 0;
 $1054 = sp + 15920 | 0;
 $1055 = sp + 40360 | 0;
 $1056 = sp + 15904 | 0;
 $1057 = sp + 40352 | 0;
 $1058 = sp + 15888 | 0;
 $1059 = sp + 40344 | 0;
 $1060 = sp + 15872 | 0;
 $1061 = sp + 40336 | 0;
 $1062 = sp + 15856 | 0;
 $1063 = sp + 40328 | 0;
 $1064 = sp + 15840 | 0;
 $1065 = sp + 40320 | 0;
 $1066 = sp + 15824 | 0;
 $1067 = sp + 40312 | 0;
 $1068 = sp + 15808 | 0;
 $1069 = sp + 40304 | 0;
 $1070 = sp + 15792 | 0;
 $1071 = sp + 40296 | 0;
 $1072 = sp + 15776 | 0;
 $1073 = sp + 40288 | 0;
 $1074 = sp + 15760 | 0;
 $1075 = sp + 40280 | 0;
 $1076 = sp + 15744 | 0;
 $1077 = sp + 40272 | 0;
 $1078 = sp + 15728 | 0;
 $1079 = sp + 40264 | 0;
 $1080 = sp + 15712 | 0;
 $1081 = sp + 40256 | 0;
 $1082 = sp + 15696 | 0;
 $1083 = sp + 40248 | 0;
 $1084 = sp + 15680 | 0;
 $1085 = sp + 40240 | 0;
 $1086 = sp + 15664 | 0;
 $1087 = sp + 40232 | 0;
 $1088 = sp + 15648 | 0;
 $1089 = sp + 40224 | 0;
 $1090 = sp + 15632 | 0;
 $1091 = sp + 40216 | 0;
 $1092 = sp + 15616 | 0;
 $1093 = sp + 40208 | 0;
 $1094 = sp + 15600 | 0;
 $1095 = sp + 40200 | 0;
 $1096 = sp + 15584 | 0;
 $1097 = sp + 40192 | 0;
 $1098 = sp + 15568 | 0;
 $1099 = sp + 40184 | 0;
 $1100 = sp + 15552 | 0;
 $1101 = sp + 40176 | 0;
 $1102 = sp + 15536 | 0;
 $1103 = sp + 40168 | 0;
 $1104 = sp + 15520 | 0;
 $1105 = sp + 40160 | 0;
 $1106 = sp + 15504 | 0;
 $1107 = sp + 40152 | 0;
 $1108 = sp + 15488 | 0;
 $1109 = sp + 40144 | 0;
 $1110 = sp + 15472 | 0;
 $1111 = sp + 40136 | 0;
 $1112 = sp + 15456 | 0;
 $1113 = sp + 40128 | 0;
 $1114 = sp + 15440 | 0;
 $1115 = sp + 40120 | 0;
 $1116 = sp + 15424 | 0;
 $1117 = sp + 40112 | 0;
 $1118 = sp + 15408 | 0;
 $1119 = sp + 40104 | 0;
 $1120 = sp + 15392 | 0;
 $1121 = sp + 40096 | 0;
 $1122 = sp + 15376 | 0;
 $1123 = sp + 40088 | 0;
 $1124 = sp + 15360 | 0;
 $1125 = sp + 40080 | 0;
 $1126 = sp + 15344 | 0;
 $1127 = sp + 40072 | 0;
 $1128 = sp + 15328 | 0;
 $1129 = sp + 40064 | 0;
 $1130 = sp + 15312 | 0;
 $1131 = sp + 40056 | 0;
 $1132 = sp + 15296 | 0;
 $1133 = sp + 40048 | 0;
 $1134 = sp + 15280 | 0;
 $1135 = sp + 40040 | 0;
 $1136 = sp + 15264 | 0;
 $1137 = sp + 40032 | 0;
 $1138 = sp + 15248 | 0;
 $1139 = sp + 40024 | 0;
 $1140 = sp + 15232 | 0;
 $1141 = sp + 40016 | 0;
 $1142 = sp + 15216 | 0;
 $1143 = sp + 40008 | 0;
 $1144 = sp + 15200 | 0;
 $1145 = sp + 4e4 | 0;
 $1146 = sp + 15184 | 0;
 $1147 = sp + 39992 | 0;
 $1148 = sp + 15168 | 0;
 $1149 = sp + 39984 | 0;
 $1150 = sp + 15152 | 0;
 $1151 = sp + 39976 | 0;
 $1152 = sp + 15136 | 0;
 $1153 = sp + 39968 | 0;
 $1154 = sp + 15120 | 0;
 $1155 = sp + 39960 | 0;
 $1156 = sp + 15104 | 0;
 $1157 = sp + 39952 | 0;
 $1158 = sp + 15088 | 0;
 $1159 = sp + 39944 | 0;
 $1160 = sp + 15072 | 0;
 $1161 = sp + 39936 | 0;
 $1162 = sp + 15056 | 0;
 $1163 = sp + 39928 | 0;
 $1164 = sp + 15040 | 0;
 $1165 = sp + 39920 | 0;
 $1166 = sp + 15024 | 0;
 $1167 = sp + 39912 | 0;
 $1168 = sp + 15008 | 0;
 $1169 = sp + 39904 | 0;
 $1170 = sp + 14992 | 0;
 $1171 = sp + 39896 | 0;
 $1172 = sp + 14976 | 0;
 $1173 = sp + 39888 | 0;
 $1174 = sp + 14960 | 0;
 $1175 = sp + 39880 | 0;
 $1176 = sp + 14944 | 0;
 $1177 = sp + 39872 | 0;
 $1178 = sp + 14928 | 0;
 $1179 = sp + 39864 | 0;
 $1180 = sp + 14912 | 0;
 $1181 = sp + 39856 | 0;
 $1182 = sp + 14896 | 0;
 $1183 = sp + 39848 | 0;
 $1184 = sp + 14880 | 0;
 $1185 = sp + 39840 | 0;
 $1186 = sp + 14864 | 0;
 $1187 = sp + 39832 | 0;
 $1188 = sp + 14848 | 0;
 $1189 = sp + 39824 | 0;
 $1190 = sp + 14832 | 0;
 $1191 = sp + 39816 | 0;
 $1192 = sp + 14816 | 0;
 $1193 = sp + 39808 | 0;
 $1194 = sp + 14800 | 0;
 $1195 = sp + 39800 | 0;
 $1196 = sp + 14784 | 0;
 $1197 = sp + 39792 | 0;
 $1198 = sp + 14768 | 0;
 $1199 = sp + 39784 | 0;
 $1200 = sp + 14752 | 0;
 $1201 = sp + 39776 | 0;
 $1202 = sp + 14736 | 0;
 $1203 = sp + 39768 | 0;
 $1204 = sp + 14720 | 0;
 $1205 = sp + 39760 | 0;
 $1206 = sp + 14704 | 0;
 $1207 = sp + 39752 | 0;
 $1208 = sp + 14688 | 0;
 $1209 = sp + 39744 | 0;
 $1210 = sp + 14672 | 0;
 $1211 = sp + 39736 | 0;
 $1212 = sp + 14656 | 0;
 $1213 = sp + 39728 | 0;
 $1214 = sp + 14640 | 0;
 $1215 = sp + 39720 | 0;
 $1216 = sp + 14624 | 0;
 $1217 = sp + 39712 | 0;
 $1218 = sp + 14608 | 0;
 $1219 = sp + 39704 | 0;
 $1220 = sp + 14592 | 0;
 $1221 = sp + 39696 | 0;
 $1222 = sp + 14576 | 0;
 $1223 = sp + 39688 | 0;
 $1224 = sp + 14560 | 0;
 $1225 = sp + 39680 | 0;
 $1226 = sp + 14544 | 0;
 $1227 = sp + 39672 | 0;
 $1228 = sp + 14528 | 0;
 $1229 = sp + 39664 | 0;
 $1230 = sp + 14512 | 0;
 $1231 = sp + 39656 | 0;
 $1232 = sp + 14496 | 0;
 $1233 = sp + 39648 | 0;
 $1234 = sp + 14480 | 0;
 $1235 = sp + 39640 | 0;
 $1236 = sp + 14464 | 0;
 $1237 = sp + 39632 | 0;
 $1238 = sp + 14448 | 0;
 $1239 = sp + 39624 | 0;
 $1240 = sp + 14432 | 0;
 $1241 = sp + 39616 | 0;
 $1242 = sp + 14416 | 0;
 $1243 = sp + 39608 | 0;
 $1244 = sp + 14400 | 0;
 $1245 = sp + 39600 | 0;
 $1246 = sp + 14384 | 0;
 $1247 = sp + 39592 | 0;
 $1248 = sp + 14368 | 0;
 $1249 = sp + 39584 | 0;
 $1250 = sp + 14352 | 0;
 $1251 = sp + 39576 | 0;
 $1252 = sp + 14336 | 0;
 $1253 = sp + 39568 | 0;
 $1254 = sp + 14320 | 0;
 $1255 = sp + 39560 | 0;
 $1256 = sp + 14304 | 0;
 $1257 = sp + 39552 | 0;
 $1258 = sp + 14288 | 0;
 $1259 = sp + 39544 | 0;
 $1260 = sp + 14272 | 0;
 $1261 = sp + 39536 | 0;
 $1262 = sp + 14256 | 0;
 $1263 = sp + 39528 | 0;
 $1264 = sp + 14240 | 0;
 $1265 = sp + 39520 | 0;
 $1266 = sp + 14224 | 0;
 $1267 = sp + 39512 | 0;
 $1268 = sp + 14208 | 0;
 $1269 = sp + 39504 | 0;
 $1270 = sp + 14192 | 0;
 $1271 = sp + 39496 | 0;
 $1272 = sp + 14176 | 0;
 $1273 = sp + 39488 | 0;
 $1274 = sp + 14160 | 0;
 $1275 = sp + 39480 | 0;
 $1276 = sp + 14144 | 0;
 $1277 = sp + 39472 | 0;
 $1278 = sp + 14128 | 0;
 $1279 = sp + 39464 | 0;
 $1280 = sp + 14112 | 0;
 $1281 = sp + 39456 | 0;
 $1282 = sp + 14096 | 0;
 $1283 = sp + 39448 | 0;
 $1284 = sp + 14080 | 0;
 $1285 = sp + 39440 | 0;
 $1286 = sp + 14064 | 0;
 $1287 = sp + 39432 | 0;
 $1288 = sp + 14048 | 0;
 $1289 = sp + 39424 | 0;
 $1290 = sp + 14032 | 0;
 $1291 = sp + 39416 | 0;
 $1292 = sp + 14016 | 0;
 $1293 = sp + 39408 | 0;
 $1294 = sp + 14e3 | 0;
 $1295 = sp + 39400 | 0;
 $1296 = sp + 13984 | 0;
 $1297 = sp + 39392 | 0;
 $1298 = sp + 13968 | 0;
 $1299 = sp + 39384 | 0;
 $1300 = sp + 13952 | 0;
 $1301 = sp + 39376 | 0;
 $1302 = sp + 13936 | 0;
 $1303 = sp + 39368 | 0;
 $1304 = sp + 13920 | 0;
 $1305 = sp + 39360 | 0;
 $1306 = sp + 13904 | 0;
 $1307 = sp + 39352 | 0;
 $1308 = sp + 13888 | 0;
 $1309 = sp + 39344 | 0;
 $1310 = sp + 13872 | 0;
 $1311 = sp + 39336 | 0;
 $1312 = sp + 13856 | 0;
 $1313 = sp + 39328 | 0;
 $1314 = sp + 13840 | 0;
 $1315 = sp + 39320 | 0;
 $1316 = sp + 13824 | 0;
 $1317 = sp + 39312 | 0;
 $1318 = sp + 13808 | 0;
 $1319 = sp + 39304 | 0;
 $1320 = sp + 13792 | 0;
 $1321 = sp + 39296 | 0;
 $1322 = sp + 13776 | 0;
 $1323 = sp + 39288 | 0;
 $1324 = sp + 13760 | 0;
 $1325 = sp + 39280 | 0;
 $1326 = sp + 13744 | 0;
 $1327 = sp + 39272 | 0;
 $1328 = sp + 13728 | 0;
 $1329 = sp + 39264 | 0;
 $1330 = sp + 13712 | 0;
 $1331 = sp + 39256 | 0;
 $1332 = sp + 13696 | 0;
 $1333 = sp + 39248 | 0;
 $1334 = sp + 13680 | 0;
 $1335 = sp + 39240 | 0;
 $1336 = sp + 13664 | 0;
 $1337 = sp + 39232 | 0;
 $1338 = sp + 13648 | 0;
 $1339 = sp + 39224 | 0;
 $1340 = sp + 13632 | 0;
 $1341 = sp + 39216 | 0;
 $1342 = sp + 13616 | 0;
 $1343 = sp + 39208 | 0;
 $1344 = sp + 13600 | 0;
 $1345 = sp + 39200 | 0;
 $1346 = sp + 13584 | 0;
 $1347 = sp + 39192 | 0;
 $1348 = sp + 13568 | 0;
 $1349 = sp + 39184 | 0;
 $1350 = sp + 13552 | 0;
 $1351 = sp + 39176 | 0;
 $1352 = sp + 13536 | 0;
 $1353 = sp + 39168 | 0;
 $1354 = sp + 13520 | 0;
 $1355 = sp + 39160 | 0;
 $1356 = sp + 13504 | 0;
 $1357 = sp + 39152 | 0;
 $1358 = sp + 13488 | 0;
 $1359 = sp + 39144 | 0;
 $1360 = sp + 13472 | 0;
 $1361 = sp + 39136 | 0;
 $1362 = sp + 13456 | 0;
 $1363 = sp + 39128 | 0;
 $1364 = sp + 13440 | 0;
 $1365 = sp + 39120 | 0;
 $1366 = sp + 13424 | 0;
 $1367 = sp + 39112 | 0;
 $1368 = sp + 13408 | 0;
 $1369 = sp + 39104 | 0;
 $1370 = sp + 13392 | 0;
 $1371 = sp + 39096 | 0;
 $1372 = sp + 13376 | 0;
 $1373 = sp + 39088 | 0;
 $1374 = sp + 13360 | 0;
 $1375 = sp + 39080 | 0;
 $1376 = sp + 13344 | 0;
 $1377 = sp + 39072 | 0;
 $1378 = sp + 13328 | 0;
 $1379 = sp + 39064 | 0;
 $1380 = sp + 13312 | 0;
 $1381 = sp + 39056 | 0;
 $1382 = sp + 13296 | 0;
 $1383 = sp + 39048 | 0;
 $1384 = sp + 13280 | 0;
 $1385 = sp + 39040 | 0;
 $1386 = sp + 13264 | 0;
 $1387 = sp + 39032 | 0;
 $1388 = sp + 13248 | 0;
 $1389 = sp + 39024 | 0;
 $1390 = sp + 13232 | 0;
 $1391 = sp + 39016 | 0;
 $1392 = sp + 13216 | 0;
 $1393 = sp + 39008 | 0;
 $1394 = sp + 13200 | 0;
 $1395 = sp + 39e3 | 0;
 $1396 = sp + 13184 | 0;
 $1397 = sp + 38992 | 0;
 $1398 = sp + 13168 | 0;
 $1399 = sp + 38984 | 0;
 $1400 = sp + 13152 | 0;
 $1401 = sp + 38976 | 0;
 $1402 = sp + 13136 | 0;
 $1403 = sp + 38968 | 0;
 $1404 = sp + 13120 | 0;
 $1405 = sp + 38960 | 0;
 $1406 = sp + 13104 | 0;
 $1407 = sp + 38952 | 0;
 $1408 = sp + 13088 | 0;
 $1409 = sp + 38944 | 0;
 $1410 = sp + 13072 | 0;
 $1411 = sp + 38936 | 0;
 $1412 = sp + 13056 | 0;
 $1413 = sp + 38928 | 0;
 $1414 = sp + 13040 | 0;
 $1415 = sp + 38920 | 0;
 $1416 = sp + 13024 | 0;
 $1417 = sp + 38912 | 0;
 $1418 = sp + 13008 | 0;
 $1419 = sp + 38904 | 0;
 $1420 = sp + 12992 | 0;
 $1421 = sp + 38896 | 0;
 $1422 = sp + 12976 | 0;
 $1423 = sp + 38888 | 0;
 $1424 = sp + 12960 | 0;
 $1425 = sp + 38880 | 0;
 $1426 = sp + 12944 | 0;
 $1427 = sp + 38872 | 0;
 $1428 = sp + 12928 | 0;
 $1429 = sp + 38864 | 0;
 $1430 = sp + 12912 | 0;
 $1431 = sp + 38856 | 0;
 $1432 = sp + 12896 | 0;
 $1433 = sp + 38848 | 0;
 $1434 = sp + 12880 | 0;
 $1435 = sp + 38840 | 0;
 $1436 = sp + 12864 | 0;
 $1437 = sp + 38832 | 0;
 $1438 = sp + 12848 | 0;
 $1439 = sp + 38824 | 0;
 $1440 = sp + 12832 | 0;
 $1441 = sp + 38816 | 0;
 $1442 = sp + 12816 | 0;
 $1443 = sp + 38808 | 0;
 $1444 = sp + 12800 | 0;
 $1445 = sp + 38800 | 0;
 $1446 = sp + 12784 | 0;
 $1447 = sp + 38792 | 0;
 $1448 = sp + 12768 | 0;
 $1449 = sp + 38784 | 0;
 $1450 = sp + 12752 | 0;
 $1451 = sp + 38776 | 0;
 $1452 = sp + 12736 | 0;
 $1453 = sp + 38768 | 0;
 $1454 = sp + 12720 | 0;
 $1455 = sp + 38760 | 0;
 $1456 = sp + 12704 | 0;
 $1457 = sp + 38752 | 0;
 $1458 = sp + 12688 | 0;
 $1459 = sp + 38744 | 0;
 $1460 = sp + 12672 | 0;
 $1461 = sp + 38736 | 0;
 $1462 = sp + 12656 | 0;
 $1463 = sp + 38728 | 0;
 $1464 = sp + 12640 | 0;
 $1465 = sp + 38720 | 0;
 $1466 = sp + 12624 | 0;
 $1467 = sp + 38712 | 0;
 $1468 = sp + 12608 | 0;
 $1469 = sp + 38704 | 0;
 $1470 = sp + 12592 | 0;
 $1471 = sp + 38696 | 0;
 $1472 = sp + 12576 | 0;
 $1473 = sp + 38688 | 0;
 $1474 = sp + 12560 | 0;
 $1475 = sp + 38680 | 0;
 $1476 = sp + 12544 | 0;
 $1477 = sp + 38672 | 0;
 $1478 = sp + 12528 | 0;
 $1479 = sp + 38664 | 0;
 $1480 = sp + 12512 | 0;
 $1481 = sp + 38656 | 0;
 $1482 = sp + 12496 | 0;
 $1483 = sp + 38648 | 0;
 $1484 = sp + 12480 | 0;
 $1485 = sp + 38640 | 0;
 $1486 = sp + 12464 | 0;
 $1487 = sp + 38632 | 0;
 $1488 = sp + 12448 | 0;
 $1489 = sp + 38624 | 0;
 $1490 = sp + 12432 | 0;
 $1491 = sp + 38616 | 0;
 $1492 = sp + 12416 | 0;
 $1493 = sp + 38608 | 0;
 $1494 = sp + 12400 | 0;
 $1495 = sp + 38600 | 0;
 $1496 = sp + 12384 | 0;
 $1497 = sp + 38592 | 0;
 $1498 = sp + 12368 | 0;
 $1499 = sp + 38584 | 0;
 $1500 = sp + 12352 | 0;
 $1501 = sp + 38576 | 0;
 $1502 = sp + 12336 | 0;
 $1503 = sp + 38568 | 0;
 $1504 = sp + 12320 | 0;
 $1505 = sp + 38560 | 0;
 $1506 = sp + 12304 | 0;
 $1507 = sp + 38552 | 0;
 $1508 = sp + 12288 | 0;
 $1509 = sp + 38544 | 0;
 $1510 = sp + 12272 | 0;
 $1511 = sp + 38536 | 0;
 $1512 = sp + 12256 | 0;
 $1513 = sp + 38528 | 0;
 $1514 = sp + 12240 | 0;
 $1515 = sp + 38520 | 0;
 $1516 = sp + 12224 | 0;
 $1517 = sp + 38512 | 0;
 $1518 = sp + 12208 | 0;
 $1519 = sp + 38504 | 0;
 $1520 = sp + 12192 | 0;
 $1521 = sp + 38496 | 0;
 $1522 = sp + 12176 | 0;
 $1523 = sp + 38488 | 0;
 $1524 = sp + 12160 | 0;
 $1525 = sp + 38480 | 0;
 $1526 = sp + 12144 | 0;
 $1527 = sp + 38472 | 0;
 $1528 = sp + 12128 | 0;
 $1529 = sp + 38464 | 0;
 $1530 = sp + 12112 | 0;
 $1531 = sp + 38456 | 0;
 $1532 = sp + 12096 | 0;
 $1533 = sp + 38448 | 0;
 $1534 = sp + 12080 | 0;
 $1535 = sp + 38440 | 0;
 $1536 = sp + 12064 | 0;
 $1537 = sp + 38432 | 0;
 $1538 = sp + 12048 | 0;
 $1539 = sp + 38424 | 0;
 $1540 = sp + 12032 | 0;
 $1541 = sp + 38416 | 0;
 $1542 = sp + 12016 | 0;
 $1543 = sp + 38408 | 0;
 $1544 = sp + 12e3 | 0;
 $1545 = sp + 38400 | 0;
 $1546 = sp + 11984 | 0;
 $1547 = sp + 38392 | 0;
 $1548 = sp + 11968 | 0;
 $1549 = sp + 38384 | 0;
 $1550 = sp + 11952 | 0;
 $1551 = sp + 38376 | 0;
 $1552 = sp + 11936 | 0;
 $1553 = sp + 38368 | 0;
 $1554 = sp + 11920 | 0;
 $1555 = sp + 38360 | 0;
 $1556 = sp + 11904 | 0;
 $1557 = sp + 38352 | 0;
 $1558 = sp + 11888 | 0;
 $1559 = sp + 38344 | 0;
 $1560 = sp + 11872 | 0;
 $1561 = sp + 38336 | 0;
 $1562 = sp + 11856 | 0;
 $1563 = sp + 38328 | 0;
 $1564 = sp + 11840 | 0;
 $1565 = sp + 38320 | 0;
 $1566 = sp + 11824 | 0;
 $1567 = sp + 38312 | 0;
 $1568 = sp + 11808 | 0;
 $1569 = sp + 38304 | 0;
 $1570 = sp + 11792 | 0;
 $1571 = sp + 38296 | 0;
 $1572 = sp + 11776 | 0;
 $1573 = sp + 38288 | 0;
 $1574 = sp + 11760 | 0;
 $1575 = sp + 38280 | 0;
 $1576 = sp + 11744 | 0;
 $1577 = sp + 38272 | 0;
 $1578 = sp + 11728 | 0;
 $1579 = sp + 38264 | 0;
 $1580 = sp + 11712 | 0;
 $1581 = sp + 38256 | 0;
 $1582 = sp + 11696 | 0;
 $1583 = sp + 38248 | 0;
 $1584 = sp + 11680 | 0;
 $1585 = sp + 38240 | 0;
 $1586 = sp + 11664 | 0;
 $1587 = sp + 38232 | 0;
 $1588 = sp + 11648 | 0;
 $1589 = sp + 38224 | 0;
 $1590 = sp + 11616 | 0;
 $1591 = sp + 38216 | 0;
 $1592 = sp + 11600 | 0;
 $1593 = sp + 38208 | 0;
 $1594 = sp + 11584 | 0;
 $1595 = sp + 38200 | 0;
 $1596 = sp + 11568 | 0;
 $1597 = sp + 38192 | 0;
 $1598 = sp + 11552 | 0;
 $1599 = sp + 38184 | 0;
 $1600 = sp + 11536 | 0;
 $1601 = sp + 38176 | 0;
 $1602 = sp + 11520 | 0;
 $1603 = sp + 38168 | 0;
 $1604 = sp + 11504 | 0;
 $1605 = sp + 38160 | 0;
 $1606 = sp + 11488 | 0;
 $1607 = sp + 38152 | 0;
 $1608 = sp + 11472 | 0;
 $1609 = sp + 38144 | 0;
 $1610 = sp + 11456 | 0;
 $1611 = sp + 38136 | 0;
 $1612 = sp + 11440 | 0;
 $1613 = sp + 38128 | 0;
 $1614 = sp + 11424 | 0;
 $1615 = sp + 38120 | 0;
 $1616 = sp + 11408 | 0;
 $1617 = sp + 38112 | 0;
 $1618 = sp + 11392 | 0;
 $1619 = sp + 38104 | 0;
 $1620 = sp + 11376 | 0;
 $1621 = sp + 38096 | 0;
 $1622 = sp + 11360 | 0;
 $1623 = sp + 38088 | 0;
 $1624 = sp + 11344 | 0;
 $1625 = sp + 38080 | 0;
 $1626 = sp + 11328 | 0;
 $1627 = sp + 38072 | 0;
 $1628 = sp + 11312 | 0;
 $1629 = sp + 38064 | 0;
 $1630 = sp + 11296 | 0;
 $1631 = sp + 38056 | 0;
 $1632 = sp + 11280 | 0;
 $1633 = sp + 38048 | 0;
 $1634 = sp + 11264 | 0;
 $1635 = sp + 38040 | 0;
 $1636 = sp + 11248 | 0;
 $1637 = sp + 38032 | 0;
 $1638 = sp + 11232 | 0;
 $1639 = sp + 38024 | 0;
 $1640 = sp + 11216 | 0;
 $1641 = sp + 38016 | 0;
 $1642 = sp + 11200 | 0;
 $1643 = sp + 38008 | 0;
 $1644 = sp + 11184 | 0;
 $1645 = sp + 38e3 | 0;
 $1646 = sp + 11168 | 0;
 $1647 = sp + 37992 | 0;
 $1648 = sp + 11152 | 0;
 $1649 = sp + 37984 | 0;
 $1650 = sp + 11136 | 0;
 $1651 = sp + 37976 | 0;
 $1652 = sp + 11120 | 0;
 $1653 = sp + 37968 | 0;
 $1654 = sp + 11104 | 0;
 $1655 = sp + 37960 | 0;
 $1656 = sp + 11088 | 0;
 $1657 = sp + 37952 | 0;
 $1658 = sp + 11072 | 0;
 $1659 = sp + 37944 | 0;
 $1660 = sp + 11056 | 0;
 $1661 = sp + 37936 | 0;
 $1662 = sp + 11040 | 0;
 $1663 = sp + 37928 | 0;
 $1664 = sp + 11024 | 0;
 $1665 = sp + 37920 | 0;
 $1666 = sp + 11008 | 0;
 $1667 = sp + 37912 | 0;
 $1668 = sp + 10992 | 0;
 $1669 = sp + 37904 | 0;
 $1670 = sp + 10976 | 0;
 $1671 = sp + 37896 | 0;
 $1672 = sp + 10960 | 0;
 $1673 = sp + 37888 | 0;
 $1674 = sp + 10944 | 0;
 $1675 = sp + 37880 | 0;
 $1676 = sp + 10928 | 0;
 $1677 = sp + 37872 | 0;
 $1678 = sp + 10912 | 0;
 $1679 = sp + 37864 | 0;
 $1680 = sp + 10896 | 0;
 $1681 = sp + 37856 | 0;
 $1682 = sp + 10880 | 0;
 $1683 = sp + 37848 | 0;
 $1684 = sp + 10864 | 0;
 $1685 = sp + 37840 | 0;
 $1686 = sp + 10848 | 0;
 $1687 = sp + 37832 | 0;
 $1688 = sp + 10832 | 0;
 $1689 = sp + 37824 | 0;
 $1690 = sp + 10816 | 0;
 $1691 = sp + 37816 | 0;
 $1692 = sp + 10800 | 0;
 $1693 = sp + 37808 | 0;
 $1694 = sp + 10784 | 0;
 $1695 = sp + 37800 | 0;
 $1696 = sp + 10768 | 0;
 $1697 = sp + 37792 | 0;
 $1698 = sp + 10752 | 0;
 $1699 = sp + 37784 | 0;
 $1700 = sp + 10736 | 0;
 $1701 = sp + 37776 | 0;
 $1702 = sp + 10720 | 0;
 $1703 = sp + 37768 | 0;
 $1704 = sp + 10704 | 0;
 $1705 = sp + 37760 | 0;
 $1706 = sp + 10688 | 0;
 $1707 = sp + 37752 | 0;
 $1708 = sp + 10672 | 0;
 $1709 = sp + 37744 | 0;
 $1710 = sp + 10656 | 0;
 $1711 = sp + 37736 | 0;
 $1712 = sp + 10640 | 0;
 $1713 = sp + 37728 | 0;
 $1714 = sp + 10624 | 0;
 $1715 = sp + 37720 | 0;
 $1716 = sp + 10608 | 0;
 $1717 = sp + 37712 | 0;
 $1718 = sp + 10592 | 0;
 $1719 = sp + 37704 | 0;
 $1720 = sp + 10576 | 0;
 $1721 = sp + 37696 | 0;
 $1722 = sp + 10560 | 0;
 $1723 = sp + 37688 | 0;
 $1724 = sp + 10544 | 0;
 $1725 = sp + 37680 | 0;
 $1726 = sp + 10528 | 0;
 $1727 = sp + 37672 | 0;
 $1728 = sp + 10512 | 0;
 $1729 = sp + 37664 | 0;
 $1730 = sp + 10496 | 0;
 $1731 = sp + 37656 | 0;
 $1732 = sp + 10480 | 0;
 $1733 = sp + 37648 | 0;
 $1734 = sp + 10464 | 0;
 $1735 = sp + 37640 | 0;
 $1736 = sp + 10448 | 0;
 $1737 = sp + 37632 | 0;
 $1738 = sp + 10432 | 0;
 $1739 = sp + 37624 | 0;
 $1740 = sp + 10416 | 0;
 $1741 = sp + 37616 | 0;
 $1742 = sp + 10400 | 0;
 $1743 = sp + 37608 | 0;
 $1744 = sp + 10384 | 0;
 $1745 = sp + 37600 | 0;
 $1746 = sp + 10368 | 0;
 $1747 = sp + 37592 | 0;
 $1748 = sp + 10352 | 0;
 $1749 = sp + 37584 | 0;
 $1750 = sp + 10336 | 0;
 $1751 = sp + 37576 | 0;
 $1752 = sp + 10320 | 0;
 $1753 = sp + 37568 | 0;
 $1754 = sp + 10304 | 0;
 $1755 = sp + 37560 | 0;
 $1756 = sp + 10288 | 0;
 $1757 = sp + 37552 | 0;
 $1758 = sp + 10272 | 0;
 $1759 = sp + 37544 | 0;
 $1760 = sp + 10256 | 0;
 $1761 = sp + 37536 | 0;
 $1762 = sp + 10240 | 0;
 $1763 = sp + 37528 | 0;
 $1764 = sp + 10224 | 0;
 $1765 = sp + 37520 | 0;
 $1766 = sp + 10208 | 0;
 $1767 = sp + 37512 | 0;
 $1768 = sp + 10192 | 0;
 $1769 = sp + 37504 | 0;
 $1770 = sp + 10176 | 0;
 $1771 = sp + 37496 | 0;
 $1772 = sp + 10160 | 0;
 $1773 = sp + 37488 | 0;
 $1774 = sp + 10144 | 0;
 $1775 = sp + 37480 | 0;
 $1776 = sp + 10128 | 0;
 $1777 = sp + 37472 | 0;
 $1778 = sp + 10112 | 0;
 $1779 = sp + 37464 | 0;
 $1780 = sp + 10096 | 0;
 $1781 = sp + 37456 | 0;
 $1782 = sp + 10080 | 0;
 $1783 = sp + 37448 | 0;
 $1784 = sp + 10064 | 0;
 $1785 = sp + 37440 | 0;
 $1786 = sp + 23328 | 0;
 $1787 = sp + 23324 | 0;
 $1788 = sp + 23320 | 0;
 $1789 = sp + 23316 | 0;
 $1790 = sp + 23312 | 0;
 $1791 = sp + 23308 | 0;
 $1792 = sp + 23304 | 0;
 $1793 = sp + 23300 | 0;
 $1794 = sp + 23296 | 0;
 $1795 = sp + 23292 | 0;
 $1796 = sp + 23288 | 0;
 $1797 = sp + 23284 | 0;
 $1798 = sp + 23280 | 0;
 $1799 = sp + 23276 | 0;
 $1800 = sp + 23272 | 0;
 $1801 = sp + 23268 | 0;
 $1802 = sp + 23264 | 0;
 $1803 = sp + 23260 | 0;
 $1804 = sp + 23256 | 0;
 $1805 = sp + 23252 | 0;
 $1806 = sp + 23248 | 0;
 $1807 = sp + 23244 | 0;
 $1808 = sp + 23240 | 0;
 $1809 = sp + 23236 | 0;
 $1810 = sp + 23232 | 0;
 $1811 = sp + 23228 | 0;
 $1812 = sp + 23224 | 0;
 $1813 = sp + 23220 | 0;
 $1814 = sp + 23216 | 0;
 $1815 = sp + 23212 | 0;
 $1816 = sp + 23208 | 0;
 $1817 = sp + 23204 | 0;
 $1818 = sp + 23200 | 0;
 $1819 = sp + 23196 | 0;
 $1820 = sp + 23192 | 0;
 $1821 = sp + 23188 | 0;
 $1822 = sp + 23184 | 0;
 $1823 = sp + 23180 | 0;
 $1824 = sp + 23176 | 0;
 $1825 = sp + 23172 | 0;
 $1826 = sp + 10048 | 0;
 $1827 = sp + 37432 | 0;
 $1828 = sp + 10032 | 0;
 $1829 = sp + 37424 | 0;
 $1830 = sp + 10016 | 0;
 $1831 = sp + 37416 | 0;
 $1832 = sp + 1e4 | 0;
 $1833 = sp + 37408 | 0;
 $1834 = sp + 9984 | 0;
 $1835 = sp + 37400 | 0;
 $1836 = sp + 9968 | 0;
 $1837 = sp + 37392 | 0;
 $1838 = sp + 9952 | 0;
 $1839 = sp + 37384 | 0;
 $1840 = sp + 9936 | 0;
 $1841 = sp + 37376 | 0;
 $1842 = sp + 9920 | 0;
 $1843 = sp + 37368 | 0;
 $1844 = sp + 9904 | 0;
 $1845 = sp + 37360 | 0;
 $1846 = sp + 9888 | 0;
 $1847 = sp + 37352 | 0;
 $1848 = sp + 9872 | 0;
 $1849 = sp + 37344 | 0;
 $1850 = sp + 9856 | 0;
 $1851 = sp + 37336 | 0;
 $1852 = sp + 9840 | 0;
 $1853 = sp + 37328 | 0;
 $1854 = sp + 9824 | 0;
 $1855 = sp + 37320 | 0;
 $1856 = sp + 9808 | 0;
 $1857 = sp + 37312 | 0;
 $1858 = sp + 9792 | 0;
 $1859 = sp + 37304 | 0;
 $1860 = sp + 9776 | 0;
 $1861 = sp + 37296 | 0;
 $1862 = sp + 9760 | 0;
 $1863 = sp + 37288 | 0;
 $1864 = sp + 9744 | 0;
 $1865 = sp + 37280 | 0;
 $1866 = sp + 9728 | 0;
 $1867 = sp + 37272 | 0;
 $1868 = sp + 9712 | 0;
 $1869 = sp + 37264 | 0;
 $1870 = sp + 9696 | 0;
 $1871 = sp + 37256 | 0;
 $1872 = sp + 9680 | 0;
 $1873 = sp + 37248 | 0;
 $1874 = sp + 9664 | 0;
 $1875 = sp + 37240 | 0;
 $1876 = sp + 9648 | 0;
 $1877 = sp + 37232 | 0;
 $1878 = sp + 9632 | 0;
 $1879 = sp + 37224 | 0;
 $1880 = sp + 9616 | 0;
 $1881 = sp + 37216 | 0;
 $1882 = sp + 9600 | 0;
 $1883 = sp + 37208 | 0;
 $1884 = sp + 9584 | 0;
 $1885 = sp + 37200 | 0;
 $1886 = sp + 9568 | 0;
 $1887 = sp + 37192 | 0;
 $1888 = sp + 9552 | 0;
 $1889 = sp + 37184 | 0;
 $1890 = sp + 9536 | 0;
 $1891 = sp + 37176 | 0;
 $1892 = sp + 9520 | 0;
 $1893 = sp + 37168 | 0;
 $1894 = sp + 9504 | 0;
 $1895 = sp + 37160 | 0;
 $1896 = sp + 9488 | 0;
 $1897 = sp + 37152 | 0;
 $1898 = sp + 9472 | 0;
 $1899 = sp + 37144 | 0;
 $1900 = sp + 9456 | 0;
 $1901 = sp + 37136 | 0;
 $1902 = sp + 9440 | 0;
 $1903 = sp + 37128 | 0;
 $1904 = sp + 9424 | 0;
 $1905 = sp + 37120 | 0;
 $1906 = sp + 9408 | 0;
 $1907 = sp + 37112 | 0;
 $1908 = sp + 9392 | 0;
 $1909 = sp + 37104 | 0;
 $1910 = sp + 9376 | 0;
 $1911 = sp + 37096 | 0;
 $1912 = sp + 9360 | 0;
 $1913 = sp + 37088 | 0;
 $1914 = sp + 9344 | 0;
 $1915 = sp + 37080 | 0;
 $1916 = sp + 9328 | 0;
 $1917 = sp + 37072 | 0;
 $1918 = sp + 9312 | 0;
 $1919 = sp + 37064 | 0;
 $1920 = sp + 9296 | 0;
 $1921 = sp + 37056 | 0;
 $1922 = sp + 9280 | 0;
 $1923 = sp + 37048 | 0;
 $1924 = sp + 9264 | 0;
 $1925 = sp + 37040 | 0;
 $1926 = sp + 9248 | 0;
 $1927 = sp + 37032 | 0;
 $1928 = sp + 9232 | 0;
 $1929 = sp + 37024 | 0;
 $1930 = sp + 9216 | 0;
 $1931 = sp + 37016 | 0;
 $1932 = sp + 9200 | 0;
 $1933 = sp + 37008 | 0;
 $1934 = sp + 9184 | 0;
 $1935 = sp + 37e3 | 0;
 $1936 = sp + 9168 | 0;
 $1937 = sp + 36992 | 0;
 $1938 = sp + 9152 | 0;
 $1939 = sp + 36984 | 0;
 $1940 = sp + 9136 | 0;
 $1941 = sp + 36976 | 0;
 $1942 = sp + 9120 | 0;
 $1943 = sp + 36968 | 0;
 $1944 = sp + 9104 | 0;
 $1945 = sp + 36960 | 0;
 $1946 = sp + 9088 | 0;
 $1947 = sp + 36952 | 0;
 $1948 = sp + 23144 | 0;
 $1949 = sp + 36944 | 0;
 $1950 = sp + 9072 | 0;
 $1951 = sp + 36936 | 0;
 $1952 = sp + 9056 | 0;
 $1953 = sp + 36928 | 0;
 $1954 = sp + 9040 | 0;
 $1955 = sp + 36920 | 0;
 $1956 = sp + 9024 | 0;
 $1957 = sp + 36912 | 0;
 $1958 = sp + 9008 | 0;
 $1959 = sp + 36904 | 0;
 $1960 = sp + 8992 | 0;
 $1961 = sp + 36896 | 0;
 $1962 = sp + 8976 | 0;
 $1963 = sp + 36888 | 0;
 $1964 = sp + 8960 | 0;
 $1965 = sp + 36880 | 0;
 $1966 = sp + 8944 | 0;
 $1967 = sp + 36872 | 0;
 $1968 = sp + 23116 | 0;
 $1969 = sp + 36864 | 0;
 $1970 = sp + 8928 | 0;
 $1971 = sp + 36856 | 0;
 $1972 = sp + 8912 | 0;
 $1973 = sp + 36848 | 0;
 $1974 = sp + 8896 | 0;
 $1975 = sp + 36840 | 0;
 $1976 = sp + 8880 | 0;
 $1977 = sp + 36832 | 0;
 $1978 = sp + 8864 | 0;
 $1979 = sp + 36824 | 0;
 $1980 = sp + 8848 | 0;
 $1981 = sp + 36816 | 0;
 $1982 = sp + 8832 | 0;
 $1983 = sp + 36808 | 0;
 $1984 = sp + 8816 | 0;
 $1985 = sp + 36800 | 0;
 $1986 = sp + 8800 | 0;
 $1987 = sp + 36792 | 0;
 $1988 = sp + 8784 | 0;
 $1989 = sp + 36784 | 0;
 $1990 = sp + 8768 | 0;
 $1991 = sp + 36776 | 0;
 $1992 = sp + 8752 | 0;
 $1993 = sp + 36768 | 0;
 $1994 = sp + 8736 | 0;
 $1995 = sp + 36760 | 0;
 $1996 = sp + 8720 | 0;
 $1997 = sp + 36752 | 0;
 $1998 = sp + 8704 | 0;
 $1999 = sp + 36744 | 0;
 $2000 = sp + 8688 | 0;
 $2001 = sp + 36736 | 0;
 $2002 = sp + 8672 | 0;
 $2003 = sp + 36728 | 0;
 $2004 = sp + 8656 | 0;
 $2005 = sp + 36720 | 0;
 $2006 = sp + 8640 | 0;
 $2007 = sp + 36712 | 0;
 $2008 = sp + 8624 | 0;
 $2009 = sp + 36704 | 0;
 $2010 = sp + 8608 | 0;
 $2011 = sp + 36696 | 0;
 $2012 = sp + 8592 | 0;
 $2013 = sp + 36688 | 0;
 $2014 = sp + 8576 | 0;
 $2015 = sp + 36680 | 0;
 $2016 = sp + 8560 | 0;
 $2017 = sp + 36672 | 0;
 $2018 = sp + 8544 | 0;
 $2019 = sp + 36664 | 0;
 $2020 = sp + 8528 | 0;
 $2021 = sp + 36656 | 0;
 $2022 = sp + 8512 | 0;
 $2023 = sp + 36648 | 0;
 $2024 = sp + 8496 | 0;
 $2025 = sp + 36640 | 0;
 $2026 = sp + 8480 | 0;
 $2027 = sp + 36632 | 0;
 $2028 = sp + 8464 | 0;
 $2029 = sp + 36624 | 0;
 $2030 = sp + 8448 | 0;
 $2031 = sp + 36616 | 0;
 $2032 = sp + 8432 | 0;
 $2033 = sp + 36608 | 0;
 $2034 = sp + 8416 | 0;
 $2035 = sp + 36600 | 0;
 $2036 = sp + 8400 | 0;
 $2037 = sp + 36592 | 0;
 $2038 = sp + 8384 | 0;
 $2039 = sp + 36584 | 0;
 $2040 = sp + 8368 | 0;
 $2041 = sp + 36576 | 0;
 $2042 = sp + 8352 | 0;
 $2043 = sp + 36568 | 0;
 $2044 = sp + 8336 | 0;
 $2045 = sp + 36560 | 0;
 $2046 = sp + 8320 | 0;
 $2047 = sp + 36552 | 0;
 $2048 = sp + 8304 | 0;
 $2049 = sp + 36544 | 0;
 $2050 = sp + 8288 | 0;
 $2051 = sp + 36536 | 0;
 $2052 = sp + 8272 | 0;
 $2053 = sp + 36528 | 0;
 $2054 = sp + 8256 | 0;
 $2055 = sp + 36520 | 0;
 $2056 = sp + 8240 | 0;
 $2057 = sp + 36512 | 0;
 $2058 = sp + 8224 | 0;
 $2059 = sp + 36504 | 0;
 $2060 = sp + 8208 | 0;
 $2061 = sp + 36496 | 0;
 $2062 = sp + 8192 | 0;
 $2063 = sp + 36488 | 0;
 $2064 = sp + 8176 | 0;
 $2065 = sp + 36480 | 0;
 $2066 = sp + 8160 | 0;
 $2067 = sp + 36472 | 0;
 $2068 = sp + 8144 | 0;
 $2069 = sp + 36464 | 0;
 $2070 = sp + 8128 | 0;
 $2071 = sp + 36456 | 0;
 $2072 = sp + 8112 | 0;
 $2073 = sp + 36448 | 0;
 $2074 = sp + 8096 | 0;
 $2075 = sp + 36440 | 0;
 $2076 = sp + 8080 | 0;
 $2077 = sp + 36432 | 0;
 $2078 = sp + 8064 | 0;
 $2079 = sp + 36424 | 0;
 $2080 = sp + 8048 | 0;
 $2081 = sp + 36416 | 0;
 $2082 = sp + 8032 | 0;
 $2083 = sp + 36408 | 0;
 $2084 = sp + 8016 | 0;
 $2085 = sp + 36400 | 0;
 $2086 = sp + 8e3 | 0;
 $2087 = sp + 36392 | 0;
 $2088 = sp + 7984 | 0;
 $2089 = sp + 36384 | 0;
 $2090 = sp + 7968 | 0;
 $2091 = sp + 36376 | 0;
 $2092 = sp + 7952 | 0;
 $2093 = sp + 36368 | 0;
 $2094 = sp + 7936 | 0;
 $2095 = sp + 36360 | 0;
 $2096 = sp + 7920 | 0;
 $2097 = sp + 36352 | 0;
 $2098 = sp + 7904 | 0;
 $2099 = sp + 36344 | 0;
 $2100 = sp + 7888 | 0;
 $2101 = sp + 36336 | 0;
 $2102 = sp + 7872 | 0;
 $2103 = sp + 36328 | 0;
 $2104 = sp + 7856 | 0;
 $2105 = sp + 36320 | 0;
 $2106 = sp + 7840 | 0;
 $2107 = sp + 36312 | 0;
 $2108 = sp + 7824 | 0;
 $2109 = sp + 36304 | 0;
 $2110 = sp + 7808 | 0;
 $2111 = sp + 36296 | 0;
 $2112 = sp + 7792 | 0;
 $2113 = sp + 36288 | 0;
 $2114 = sp + 7776 | 0;
 $2115 = sp + 36280 | 0;
 $2116 = sp + 7760 | 0;
 $2117 = sp + 36272 | 0;
 $2118 = sp + 7744 | 0;
 $2119 = sp + 36264 | 0;
 $2120 = sp + 7728 | 0;
 $2121 = sp + 36256 | 0;
 $2122 = sp + 7712 | 0;
 $2123 = sp + 36248 | 0;
 $2124 = sp + 7696 | 0;
 $2125 = sp + 36240 | 0;
 $2126 = sp + 7680 | 0;
 $2127 = sp + 36232 | 0;
 $2128 = sp + 7664 | 0;
 $2129 = sp + 36224 | 0;
 $2130 = sp + 7648 | 0;
 $2131 = sp + 36216 | 0;
 $2132 = sp + 23112 | 0;
 $2133 = sp + 23108 | 0;
 $2134 = sp + 23104 | 0;
 $2135 = sp + 23100 | 0;
 $2136 = sp + 23096 | 0;
 $2137 = sp + 23092 | 0;
 $2138 = sp + 23088 | 0;
 $2139 = sp + 23084 | 0;
 $2140 = sp + 23080 | 0;
 $2141 = sp + 23076 | 0;
 $2142 = sp + 23072 | 0;
 $2143 = sp + 23068 | 0;
 $2144 = sp + 23064 | 0;
 $2145 = sp + 23060 | 0;
 $2146 = sp + 23056 | 0;
 $2147 = sp + 23052 | 0;
 $2148 = sp + 23048 | 0;
 $2149 = sp + 23044 | 0;
 $2150 = sp + 23040 | 0;
 $2151 = sp + 23036 | 0;
 $2152 = sp + 23032 | 0;
 $2153 = sp + 23028 | 0;
 $2154 = sp + 23024 | 0;
 $2155 = sp + 23020 | 0;
 $2156 = sp + 23016 | 0;
 $2157 = sp + 23012 | 0;
 $2158 = sp + 23008 | 0;
 $2159 = sp + 23004 | 0;
 $2160 = sp + 23e3 | 0;
 $2161 = sp + 22996 | 0;
 $2162 = sp + 22992 | 0;
 $2163 = sp + 22988 | 0;
 $2164 = sp + 22984 | 0;
 $2165 = sp + 22980 | 0;
 $2166 = sp + 7632 | 0;
 $2167 = sp + 36208 | 0;
 $2168 = sp + 7616 | 0;
 $2169 = sp + 36200 | 0;
 $2170 = sp + 7600 | 0;
 $2171 = sp + 36192 | 0;
 $2172 = sp + 7584 | 0;
 $2173 = sp + 36184 | 0;
 $2174 = sp + 7568 | 0;
 $2175 = sp + 36176 | 0;
 $2176 = sp + 7552 | 0;
 $2177 = sp + 36168 | 0;
 $2178 = sp + 7536 | 0;
 $2179 = sp + 36160 | 0;
 $2180 = sp + 7520 | 0;
 $2181 = sp + 36152 | 0;
 $2182 = sp + 7504 | 0;
 $2183 = sp + 36144 | 0;
 $2184 = sp + 7488 | 0;
 $2185 = sp + 36136 | 0;
 $2186 = sp + 7472 | 0;
 $2187 = sp + 36128 | 0;
 $2188 = sp + 7456 | 0;
 $2189 = sp + 36120 | 0;
 $2190 = sp + 7440 | 0;
 $2191 = sp + 36112 | 0;
 $2192 = sp + 7424 | 0;
 $2193 = sp + 36104 | 0;
 $2194 = sp + 7408 | 0;
 $2195 = sp + 36096 | 0;
 $2196 = sp + 7392 | 0;
 $2197 = sp + 36088 | 0;
 $2198 = sp + 7376 | 0;
 $2199 = sp + 36080 | 0;
 $2200 = sp + 7360 | 0;
 $2201 = sp + 36072 | 0;
 $2202 = sp + 7344 | 0;
 $2203 = sp + 36064 | 0;
 $2204 = sp + 7328 | 0;
 $2205 = sp + 36056 | 0;
 $2206 = sp + 7312 | 0;
 $2207 = sp + 36048 | 0;
 $2208 = sp + 7296 | 0;
 $2209 = sp + 36040 | 0;
 $2210 = sp + 7280 | 0;
 $2211 = sp + 36032 | 0;
 $2212 = sp + 7264 | 0;
 $2213 = sp + 36024 | 0;
 $2214 = sp + 7248 | 0;
 $2215 = sp + 36016 | 0;
 $2216 = sp + 7232 | 0;
 $2217 = sp + 36008 | 0;
 $2218 = sp + 7216 | 0;
 $2219 = sp + 36e3 | 0;
 $2220 = sp + 7200 | 0;
 $2221 = sp + 35992 | 0;
 $2222 = sp + 7184 | 0;
 $2223 = sp + 35984 | 0;
 $2224 = sp + 7168 | 0;
 $2225 = sp + 35976 | 0;
 $2226 = sp + 7152 | 0;
 $2227 = sp + 35968 | 0;
 $2228 = sp + 7136 | 0;
 $2229 = sp + 35960 | 0;
 $2230 = sp + 7120 | 0;
 $2231 = sp + 35952 | 0;
 $2232 = sp + 7104 | 0;
 $2233 = sp + 35944 | 0;
 $2234 = sp + 7088 | 0;
 $2235 = sp + 35936 | 0;
 $2236 = sp + 7072 | 0;
 $2237 = sp + 35928 | 0;
 $2238 = sp + 7056 | 0;
 $2239 = sp + 35920 | 0;
 $2240 = sp + 7040 | 0;
 $2241 = sp + 35912 | 0;
 $2242 = sp + 7024 | 0;
 $2243 = sp + 35904 | 0;
 $2244 = sp + 7008 | 0;
 $2245 = sp + 35896 | 0;
 $2246 = sp + 6992 | 0;
 $2247 = sp + 35888 | 0;
 $2248 = sp + 6976 | 0;
 $2249 = sp + 35880 | 0;
 $2250 = sp + 6960 | 0;
 $2251 = sp + 35872 | 0;
 $2252 = sp + 6944 | 0;
 $2253 = sp + 35864 | 0;
 $2254 = sp + 6928 | 0;
 $2255 = sp + 35856 | 0;
 $2256 = sp + 6912 | 0;
 $2257 = sp + 35848 | 0;
 $2258 = sp + 6896 | 0;
 $2259 = sp + 35840 | 0;
 $2260 = sp + 6880 | 0;
 $2261 = sp + 35832 | 0;
 $2262 = sp + 6864 | 0;
 $2263 = sp + 35824 | 0;
 $2264 = sp + 6848 | 0;
 $2265 = sp + 35816 | 0;
 $2266 = sp + 6832 | 0;
 $2267 = sp + 35808 | 0;
 $2268 = sp + 6816 | 0;
 $2269 = sp + 35800 | 0;
 $2270 = sp + 6800 | 0;
 $2271 = sp + 35792 | 0;
 $2272 = sp + 6784 | 0;
 $2273 = sp + 35784 | 0;
 $2274 = sp + 6768 | 0;
 $2275 = sp + 35776 | 0;
 $2276 = sp + 6752 | 0;
 $2277 = sp + 35768 | 0;
 $2278 = sp + 6736 | 0;
 $2279 = sp + 35760 | 0;
 $2280 = sp + 6720 | 0;
 $2281 = sp + 35752 | 0;
 $2282 = sp + 6704 | 0;
 $2283 = sp + 35744 | 0;
 $2284 = sp + 6688 | 0;
 $2285 = sp + 35736 | 0;
 $2286 = sp + 6672 | 0;
 $2287 = sp + 35728 | 0;
 $2288 = sp + 6656 | 0;
 $2289 = sp + 35720 | 0;
 $2290 = sp + 6640 | 0;
 $2291 = sp + 35712 | 0;
 $2292 = sp + 6624 | 0;
 $2293 = sp + 35704 | 0;
 $2294 = sp + 6608 | 0;
 $2295 = sp + 35696 | 0;
 $2296 = sp + 6592 | 0;
 $2297 = sp + 35688 | 0;
 $2298 = sp + 6576 | 0;
 $2299 = sp + 35680 | 0;
 $2300 = sp + 6560 | 0;
 $2301 = sp + 35672 | 0;
 $2302 = sp + 6544 | 0;
 $2303 = sp + 35664 | 0;
 $2304 = sp + 6528 | 0;
 $2305 = sp + 35656 | 0;
 $2306 = sp + 6512 | 0;
 $2307 = sp + 35648 | 0;
 $2308 = sp + 6496 | 0;
 $2309 = sp + 35640 | 0;
 $2310 = sp + 6480 | 0;
 $2311 = sp + 35632 | 0;
 $2312 = sp + 6464 | 0;
 $2313 = sp + 35624 | 0;
 $2314 = sp + 6448 | 0;
 $2315 = sp + 35616 | 0;
 $2316 = sp + 6432 | 0;
 $2317 = sp + 35608 | 0;
 $2318 = sp + 6416 | 0;
 $2319 = sp + 35600 | 0;
 $2320 = sp + 6400 | 0;
 $2321 = sp + 35592 | 0;
 $2322 = sp + 6384 | 0;
 $2323 = sp + 35584 | 0;
 $2324 = sp + 6368 | 0;
 $2325 = sp + 35576 | 0;
 $2326 = sp + 6352 | 0;
 $2327 = sp + 35568 | 0;
 $2328 = sp + 6336 | 0;
 $2329 = sp + 35560 | 0;
 $2330 = sp + 6320 | 0;
 $2331 = sp + 35552 | 0;
 $2332 = sp + 6304 | 0;
 $2333 = sp + 35544 | 0;
 $2334 = sp + 6288 | 0;
 $2335 = sp + 35536 | 0;
 $2336 = sp + 6272 | 0;
 $2337 = sp + 35528 | 0;
 $2338 = sp + 6256 | 0;
 $2339 = sp + 35520 | 0;
 $2340 = sp + 6240 | 0;
 $2341 = sp + 35512 | 0;
 $2342 = sp + 6224 | 0;
 $2343 = sp + 35504 | 0;
 $2344 = sp + 6208 | 0;
 $2345 = sp + 35496 | 0;
 $2346 = sp + 6192 | 0;
 $2347 = sp + 35488 | 0;
 $2348 = sp + 6176 | 0;
 $2349 = sp + 35480 | 0;
 $2350 = sp + 6160 | 0;
 $2351 = sp + 35472 | 0;
 $2352 = sp + 6144 | 0;
 $2353 = sp + 35464 | 0;
 $2354 = sp + 6128 | 0;
 $2355 = sp + 35456 | 0;
 $2356 = sp + 6112 | 0;
 $2357 = sp + 35448 | 0;
 $2358 = sp + 6096 | 0;
 $2359 = sp + 35440 | 0;
 $2360 = sp + 6080 | 0;
 $2361 = sp + 35432 | 0;
 $2362 = sp + 6064 | 0;
 $2363 = sp + 35424 | 0;
 $2364 = sp + 6048 | 0;
 $2365 = sp + 35416 | 0;
 $2366 = sp + 6032 | 0;
 $2367 = sp + 35408 | 0;
 $2368 = sp + 6016 | 0;
 $2369 = sp + 35400 | 0;
 $2370 = sp + 6e3 | 0;
 $2371 = sp + 35392 | 0;
 $2372 = sp + 5984 | 0;
 $2373 = sp + 35384 | 0;
 $2374 = sp + 5968 | 0;
 $2375 = sp + 35376 | 0;
 $2376 = sp + 5952 | 0;
 $2377 = sp + 35368 | 0;
 $2378 = sp + 5936 | 0;
 $2379 = sp + 35360 | 0;
 $2380 = sp + 5920 | 0;
 $2381 = sp + 35352 | 0;
 $2382 = sp + 5904 | 0;
 $2383 = sp + 35344 | 0;
 $2384 = sp + 5888 | 0;
 $2385 = sp + 35336 | 0;
 $2386 = sp + 5872 | 0;
 $2387 = sp + 35328 | 0;
 $2388 = sp + 5856 | 0;
 $2389 = sp + 35320 | 0;
 $2390 = sp + 5840 | 0;
 $2391 = sp + 35312 | 0;
 $2392 = sp + 5824 | 0;
 $2393 = sp + 35304 | 0;
 $2394 = sp + 5808 | 0;
 $2395 = sp + 35296 | 0;
 $2396 = sp + 5792 | 0;
 $2397 = sp + 35288 | 0;
 $2398 = sp + 5776 | 0;
 $2399 = sp + 35280 | 0;
 $2400 = sp + 5760 | 0;
 $2401 = sp + 35272 | 0;
 $2402 = sp + 5744 | 0;
 $2403 = sp + 35264 | 0;
 $2404 = sp + 5728 | 0;
 $2405 = sp + 35256 | 0;
 $2406 = sp + 5712 | 0;
 $2407 = sp + 35248 | 0;
 $2408 = sp + 5696 | 0;
 $2409 = sp + 35240 | 0;
 $2410 = sp + 5680 | 0;
 $2411 = sp + 35232 | 0;
 $2412 = sp + 5664 | 0;
 $2413 = sp + 35224 | 0;
 $2414 = sp + 5648 | 0;
 $2415 = sp + 35216 | 0;
 $2416 = sp + 5632 | 0;
 $2417 = sp + 35208 | 0;
 $2418 = sp + 5616 | 0;
 $2419 = sp + 35200 | 0;
 $2420 = sp + 5600 | 0;
 $2421 = sp + 35192 | 0;
 $2422 = sp + 5584 | 0;
 $2423 = sp + 35184 | 0;
 $2424 = sp + 5568 | 0;
 $2425 = sp + 35176 | 0;
 $2426 = sp + 5552 | 0;
 $2427 = sp + 35168 | 0;
 $2428 = sp + 5536 | 0;
 $2429 = sp + 35160 | 0;
 $2430 = sp + 5520 | 0;
 $2431 = sp + 35152 | 0;
 $2432 = sp + 5504 | 0;
 $2433 = sp + 35144 | 0;
 $2434 = sp + 5488 | 0;
 $2435 = sp + 35136 | 0;
 $2436 = sp + 5472 | 0;
 $2437 = sp + 35128 | 0;
 $2438 = sp + 5456 | 0;
 $2439 = sp + 35120 | 0;
 $2440 = sp + 5440 | 0;
 $2441 = sp + 35112 | 0;
 $2442 = sp + 5408 | 0;
 $2443 = sp + 35104 | 0;
 $2444 = sp + 5392 | 0;
 $2445 = sp + 35096 | 0;
 $2446 = sp + 5376 | 0;
 $2447 = sp + 35088 | 0;
 $2448 = sp + 5360 | 0;
 $2449 = sp + 35080 | 0;
 $2450 = sp + 5344 | 0;
 $2451 = sp + 35072 | 0;
 $2452 = sp + 5328 | 0;
 $2453 = sp + 35064 | 0;
 $2454 = sp + 5312 | 0;
 $2455 = sp + 35056 | 0;
 $2456 = sp + 5296 | 0;
 $2457 = sp + 35048 | 0;
 $2458 = sp + 5280 | 0;
 $2459 = sp + 35040 | 0;
 $2460 = sp + 5264 | 0;
 $2461 = sp + 35032 | 0;
 $2462 = sp + 5232 | 0;
 $2463 = sp + 35024 | 0;
 $2464 = sp + 5216 | 0;
 $2465 = sp + 35016 | 0;
 $2466 = sp + 5200 | 0;
 $2467 = sp + 35008 | 0;
 $2468 = sp + 5184 | 0;
 $2469 = sp + 35e3 | 0;
 $2470 = sp + 5168 | 0;
 $2471 = sp + 34992 | 0;
 $2472 = sp + 5152 | 0;
 $2473 = sp + 34984 | 0;
 $2474 = sp + 5136 | 0;
 $2475 = sp + 34976 | 0;
 $2476 = sp + 5120 | 0;
 $2477 = sp + 34968 | 0;
 $2478 = sp + 5104 | 0;
 $2479 = sp + 34960 | 0;
 $2480 = sp + 5088 | 0;
 $2481 = sp + 34952 | 0;
 $2482 = sp + 5072 | 0;
 $2483 = sp + 34944 | 0;
 $2484 = sp + 5056 | 0;
 $2485 = sp + 34936 | 0;
 $2486 = sp + 5040 | 0;
 $2487 = sp + 34928 | 0;
 $2488 = sp + 5024 | 0;
 $2489 = sp + 34920 | 0;
 $2490 = sp + 5008 | 0;
 $2491 = sp + 34912 | 0;
 $2492 = sp + 4976 | 0;
 $2493 = sp + 34904 | 0;
 $2494 = sp + 4960 | 0;
 $2495 = sp + 34896 | 0;
 $2496 = sp + 4944 | 0;
 $2497 = sp + 34888 | 0;
 $2498 = sp + 4928 | 0;
 $2499 = sp + 34880 | 0;
 $2500 = sp + 4912 | 0;
 $2501 = sp + 34872 | 0;
 $2502 = sp + 4896 | 0;
 $2503 = sp + 34864 | 0;
 $2504 = sp + 4880 | 0;
 $2505 = sp + 34856 | 0;
 $2506 = sp + 4864 | 0;
 $2507 = sp + 34848 | 0;
 $2508 = sp + 4848 | 0;
 $2509 = sp + 34840 | 0;
 $2510 = sp + 4832 | 0;
 $2511 = sp + 34832 | 0;
 $2512 = sp + 4800 | 0;
 $2513 = sp + 34824 | 0;
 $2514 = sp + 4784 | 0;
 $2515 = sp + 34816 | 0;
 $2516 = sp + 4768 | 0;
 $2517 = sp + 34808 | 0;
 $2518 = sp + 4752 | 0;
 $2519 = sp + 34800 | 0;
 $2520 = sp + 4736 | 0;
 $2521 = sp + 34792 | 0;
 $2522 = sp + 4720 | 0;
 $2523 = sp + 34784 | 0;
 $2524 = sp + 4704 | 0;
 $2525 = sp + 34776 | 0;
 $2526 = sp + 4688 | 0;
 $2527 = sp + 34768 | 0;
 $2528 = sp + 4672 | 0;
 $2529 = sp + 34760 | 0;
 $2530 = sp + 4656 | 0;
 $2531 = sp + 34752 | 0;
 $2532 = sp + 4640 | 0;
 $2533 = sp + 34744 | 0;
 $2534 = sp + 4624 | 0;
 $2535 = sp + 34736 | 0;
 $2536 = sp + 4608 | 0;
 $2537 = sp + 34728 | 0;
 $2538 = sp + 4592 | 0;
 $2539 = sp + 34720 | 0;
 $2540 = sp + 4576 | 0;
 $2541 = sp + 34712 | 0;
 $2542 = sp + 4560 | 0;
 $2543 = sp + 34704 | 0;
 $2544 = sp + 4544 | 0;
 $2545 = sp + 34696 | 0;
 $2546 = sp + 4528 | 0;
 $2547 = sp + 34688 | 0;
 $2548 = sp + 4512 | 0;
 $2549 = sp + 34680 | 0;
 $2550 = sp + 4496 | 0;
 $2551 = sp + 34672 | 0;
 $2552 = sp + 4480 | 0;
 $2553 = sp + 34664 | 0;
 $2554 = sp + 4464 | 0;
 $2555 = sp + 34656 | 0;
 $2556 = sp + 4448 | 0;
 $2557 = sp + 34648 | 0;
 $2558 = sp + 4432 | 0;
 $2559 = sp + 34640 | 0;
 $2560 = sp + 4416 | 0;
 $2561 = sp + 34632 | 0;
 $2562 = sp + 4400 | 0;
 $2563 = sp + 34624 | 0;
 $2564 = sp + 4384 | 0;
 $2565 = sp + 34616 | 0;
 $2566 = sp + 4368 | 0;
 $2567 = sp + 34608 | 0;
 $2568 = sp + 4352 | 0;
 $2569 = sp + 34600 | 0;
 $2570 = sp + 4336 | 0;
 $2571 = sp + 34592 | 0;
 $2572 = sp + 4320 | 0;
 $2573 = sp + 34584 | 0;
 $2574 = sp + 4304 | 0;
 $2575 = sp + 34576 | 0;
 $2576 = sp + 4288 | 0;
 $2577 = sp + 34568 | 0;
 $2578 = sp + 4272 | 0;
 $2579 = sp + 34560 | 0;
 $2580 = sp + 4256 | 0;
 $2581 = sp + 34552 | 0;
 $2582 = sp + 4240 | 0;
 $2583 = sp + 34544 | 0;
 $2584 = sp + 4224 | 0;
 $2585 = sp + 34536 | 0;
 $2586 = sp + 4208 | 0;
 $2587 = sp + 34528 | 0;
 $2588 = sp + 4192 | 0;
 $2589 = sp + 34520 | 0;
 $2590 = sp + 4176 | 0;
 $2591 = sp + 34512 | 0;
 $2592 = sp + 4160 | 0;
 $2593 = sp + 34504 | 0;
 $2594 = sp + 4144 | 0;
 $2595 = sp + 34496 | 0;
 $2596 = sp + 4128 | 0;
 $2597 = sp + 34488 | 0;
 $2598 = sp + 4112 | 0;
 $2599 = sp + 34480 | 0;
 $2600 = sp + 4096 | 0;
 $2601 = sp + 34472 | 0;
 $2602 = sp + 4080 | 0;
 $2603 = sp + 34464 | 0;
 $2604 = sp + 4064 | 0;
 $2605 = sp + 34456 | 0;
 $2606 = sp + 4048 | 0;
 $2607 = sp + 34448 | 0;
 $2608 = sp + 4032 | 0;
 $2609 = sp + 34440 | 0;
 $2610 = sp + 4016 | 0;
 $2611 = sp + 34432 | 0;
 $2612 = sp + 4e3 | 0;
 $2613 = sp + 34424 | 0;
 $2614 = sp + 3984 | 0;
 $2615 = sp + 34416 | 0;
 $2616 = sp + 3952 | 0;
 $2617 = sp + 34408 | 0;
 $2618 = sp + 3936 | 0;
 $2619 = sp + 34400 | 0;
 $2620 = sp + 3920 | 0;
 $2621 = sp + 34392 | 0;
 $2622 = sp + 3904 | 0;
 $2623 = sp + 34384 | 0;
 $2624 = sp + 3888 | 0;
 $2625 = sp + 34376 | 0;
 $2626 = sp + 3872 | 0;
 $2627 = sp + 34368 | 0;
 $2628 = sp + 3856 | 0;
 $2629 = sp + 34360 | 0;
 $2630 = sp + 3840 | 0;
 $2631 = sp + 34352 | 0;
 $2632 = sp + 3824 | 0;
 $2633 = sp + 34344 | 0;
 $2634 = sp + 3808 | 0;
 $2635 = sp + 34336 | 0;
 $2636 = sp + 3792 | 0;
 $2637 = sp + 34328 | 0;
 $2638 = sp + 3776 | 0;
 $2639 = sp + 34320 | 0;
 $2640 = sp + 3760 | 0;
 $2641 = sp + 34312 | 0;
 $2642 = sp + 3744 | 0;
 $2643 = sp + 34304 | 0;
 $2644 = sp + 3728 | 0;
 $2645 = sp + 34296 | 0;
 $2646 = sp + 3712 | 0;
 $2647 = sp + 34288 | 0;
 $2648 = sp + 3696 | 0;
 $2649 = sp + 34280 | 0;
 $2650 = sp + 3680 | 0;
 $2651 = sp + 34272 | 0;
 $2652 = sp + 3664 | 0;
 $2653 = sp + 34264 | 0;
 $2654 = sp + 3648 | 0;
 $2655 = sp + 34256 | 0;
 $2656 = sp + 3632 | 0;
 $2657 = sp + 34248 | 0;
 $2658 = sp + 3616 | 0;
 $2659 = sp + 34240 | 0;
 $2660 = sp + 3600 | 0;
 $2661 = sp + 34232 | 0;
 $2662 = sp + 3584 | 0;
 $2663 = sp + 34224 | 0;
 $2664 = sp + 3568 | 0;
 $2665 = sp + 34216 | 0;
 $2666 = sp + 3552 | 0;
 $2667 = sp + 34208 | 0;
 $2668 = sp + 3536 | 0;
 $2669 = sp + 34200 | 0;
 $2670 = sp + 3520 | 0;
 $2671 = sp + 34192 | 0;
 $2672 = sp + 3504 | 0;
 $2673 = sp + 34184 | 0;
 $2674 = sp + 3488 | 0;
 $2675 = sp + 34176 | 0;
 $2676 = sp + 3472 | 0;
 $2677 = sp + 34168 | 0;
 $2678 = sp + 3456 | 0;
 $2679 = sp + 34160 | 0;
 $2680 = sp + 3440 | 0;
 $2681 = sp + 34152 | 0;
 $2682 = sp + 3424 | 0;
 $2683 = sp + 34144 | 0;
 $2684 = sp + 3408 | 0;
 $2685 = sp + 34136 | 0;
 $2686 = sp + 3392 | 0;
 $2687 = sp + 34128 | 0;
 $2688 = sp + 3376 | 0;
 $2689 = sp + 34120 | 0;
 $2690 = sp + 3360 | 0;
 $2691 = sp + 34112 | 0;
 $2692 = sp + 3344 | 0;
 $2693 = sp + 34104 | 0;
 $2694 = sp + 3328 | 0;
 $2695 = sp + 34096 | 0;
 $2696 = sp + 3312 | 0;
 $2697 = sp + 34088 | 0;
 $2698 = sp + 3296 | 0;
 $2699 = sp + 34080 | 0;
 $2700 = sp + 3280 | 0;
 $2701 = sp + 34072 | 0;
 $2702 = sp + 3264 | 0;
 $2703 = sp + 34064 | 0;
 $2704 = sp + 3232 | 0;
 $2705 = sp + 34056 | 0;
 $2706 = sp + 3216 | 0;
 $2707 = sp + 34048 | 0;
 $2708 = sp + 3200 | 0;
 $2709 = sp + 34040 | 0;
 $2710 = sp + 3184 | 0;
 $2711 = sp + 34032 | 0;
 $2712 = sp + 3168 | 0;
 $2713 = sp + 34024 | 0;
 $2714 = sp + 3152 | 0;
 $2715 = sp + 34016 | 0;
 $2716 = sp + 3136 | 0;
 $2717 = sp + 34008 | 0;
 $2718 = sp + 3120 | 0;
 $2719 = sp + 34e3 | 0;
 $2720 = sp + 3104 | 0;
 $2721 = sp + 33992 | 0;
 $2722 = sp + 3088 | 0;
 $2723 = sp + 33984 | 0;
 $2724 = sp + 3072 | 0;
 $2725 = sp + 33976 | 0;
 $2726 = sp + 3056 | 0;
 $2727 = sp + 33968 | 0;
 $2728 = sp + 3040 | 0;
 $2729 = sp + 33960 | 0;
 $2730 = sp + 3024 | 0;
 $2731 = sp + 33952 | 0;
 $2732 = sp + 3008 | 0;
 $2733 = sp + 33944 | 0;
 $2734 = sp + 2992 | 0;
 $2735 = sp + 33936 | 0;
 $2736 = sp + 2976 | 0;
 $2737 = sp + 33928 | 0;
 $2738 = sp + 2960 | 0;
 $2739 = sp + 33920 | 0;
 $2740 = sp + 2944 | 0;
 $2741 = sp + 33912 | 0;
 $2742 = sp + 2928 | 0;
 $2743 = sp + 33904 | 0;
 $2744 = sp + 2912 | 0;
 $2745 = sp + 33896 | 0;
 $2746 = sp + 2896 | 0;
 $2747 = sp + 33888 | 0;
 $2748 = sp + 2880 | 0;
 $2749 = sp + 33880 | 0;
 $2750 = sp + 2864 | 0;
 $2751 = sp + 33872 | 0;
 $2752 = sp + 2848 | 0;
 $2753 = sp + 33864 | 0;
 $2754 = sp + 2832 | 0;
 $2755 = sp + 33856 | 0;
 $2756 = sp + 2816 | 0;
 $2757 = sp + 33848 | 0;
 $2758 = sp + 2800 | 0;
 $2759 = sp + 33840 | 0;
 $2760 = sp + 2784 | 0;
 $2761 = sp + 33832 | 0;
 $2762 = sp + 2768 | 0;
 $2763 = sp + 33824 | 0;
 $2764 = sp + 2752 | 0;
 $2765 = sp + 33816 | 0;
 $2766 = sp + 2736 | 0;
 $2767 = sp + 33808 | 0;
 $2768 = sp + 2720 | 0;
 $2769 = sp + 33800 | 0;
 $2770 = sp + 2704 | 0;
 $2771 = sp + 33792 | 0;
 $2772 = sp + 2688 | 0;
 $2773 = sp + 33784 | 0;
 $2774 = sp + 2672 | 0;
 $2775 = sp + 33776 | 0;
 $2776 = sp + 2656 | 0;
 $2777 = sp + 33768 | 0;
 $2778 = sp + 2640 | 0;
 $2779 = sp + 33760 | 0;
 $2780 = sp + 2624 | 0;
 $2781 = sp + 33752 | 0;
 $2782 = sp + 2608 | 0;
 $2783 = sp + 33744 | 0;
 $2784 = sp + 2592 | 0;
 $2785 = sp + 33736 | 0;
 $2786 = sp + 2576 | 0;
 $2787 = sp + 33728 | 0;
 $2788 = sp + 2560 | 0;
 $2789 = sp + 33720 | 0;
 $2790 = sp + 2544 | 0;
 $2791 = sp + 33712 | 0;
 $2792 = sp + 2528 | 0;
 $2793 = sp + 33704 | 0;
 $2794 = sp + 2512 | 0;
 $2795 = sp + 33696 | 0;
 $2796 = sp + 2496 | 0;
 $2797 = sp + 33688 | 0;
 $2798 = sp + 2480 | 0;
 $2799 = sp + 33680 | 0;
 $2800 = sp + 2464 | 0;
 $2801 = sp + 33672 | 0;
 $2802 = sp + 2448 | 0;
 $2803 = sp + 33664 | 0;
 $2804 = sp + 2432 | 0;
 $2805 = sp + 33656 | 0;
 $2806 = sp + 2416 | 0;
 $2807 = sp + 33648 | 0;
 $2808 = sp + 2400 | 0;
 $2809 = sp + 33640 | 0;
 $2810 = sp + 2384 | 0;
 $2811 = sp + 33632 | 0;
 $2812 = sp + 2368 | 0;
 $2813 = sp + 33624 | 0;
 $2814 = sp + 2352 | 0;
 $2815 = sp + 33616 | 0;
 $2816 = sp + 2336 | 0;
 $2817 = sp + 33608 | 0;
 $2818 = sp + 2320 | 0;
 $2819 = sp + 33600 | 0;
 $2820 = sp + 2304 | 0;
 $2821 = sp + 33592 | 0;
 $2822 = sp + 2288 | 0;
 $2823 = sp + 33584 | 0;
 $2824 = sp + 2272 | 0;
 $2825 = sp + 33576 | 0;
 $2826 = sp + 2256 | 0;
 $2827 = sp + 33568 | 0;
 $2828 = sp + 2240 | 0;
 $2829 = sp + 33560 | 0;
 $2830 = sp + 2224 | 0;
 $2831 = sp + 33552 | 0;
 $2832 = sp + 2208 | 0;
 $2833 = sp + 33544 | 0;
 $2834 = sp + 2192 | 0;
 $2835 = sp + 33536 | 0;
 $2836 = sp + 2176 | 0;
 $2837 = sp + 33528 | 0;
 $2838 = sp + 2160 | 0;
 $2839 = sp + 33520 | 0;
 $2840 = sp + 2144 | 0;
 $2841 = sp + 33512 | 0;
 $2842 = sp + 2128 | 0;
 $2843 = sp + 33504 | 0;
 $2844 = sp + 2112 | 0;
 $2845 = sp + 33496 | 0;
 $2846 = sp + 2096 | 0;
 $2847 = sp + 33488 | 0;
 $2848 = sp + 2080 | 0;
 $2849 = sp + 33480 | 0;
 $2850 = sp + 2064 | 0;
 $2851 = sp + 33472 | 0;
 $2852 = sp + 2048 | 0;
 $2853 = sp + 33464 | 0;
 $2854 = sp + 2032 | 0;
 $2855 = sp + 33456 | 0;
 $2856 = sp + 2016 | 0;
 $2857 = sp + 33448 | 0;
 $2858 = sp + 2e3 | 0;
 $2859 = sp + 33440 | 0;
 $2860 = sp + 1984 | 0;
 $2861 = sp + 33432 | 0;
 $2862 = sp + 1968 | 0;
 $2863 = sp + 33424 | 0;
 $2864 = sp + 1952 | 0;
 $2865 = sp + 33416 | 0;
 $2866 = sp + 1936 | 0;
 $2867 = sp + 33408 | 0;
 $2868 = sp + 1920 | 0;
 $2869 = sp + 33400 | 0;
 $2870 = sp + 1904 | 0;
 $2871 = sp + 33392 | 0;
 $2872 = sp + 1888 | 0;
 $2873 = sp + 33384 | 0;
 $2874 = sp + 1872 | 0;
 $2875 = sp + 33376 | 0;
 $2876 = sp + 1856 | 0;
 $2877 = sp + 33368 | 0;
 $2878 = sp + 1840 | 0;
 $2879 = sp + 33360 | 0;
 $2880 = sp + 1824 | 0;
 $2881 = sp + 33352 | 0;
 $2882 = sp + 1808 | 0;
 $2883 = sp + 33344 | 0;
 $2884 = sp + 1792 | 0;
 $2885 = sp + 33336 | 0;
 $2886 = sp + 1776 | 0;
 $2887 = sp + 33328 | 0;
 $2888 = sp + 1760 | 0;
 $2889 = sp + 33320 | 0;
 $2890 = sp + 1744 | 0;
 $2891 = sp + 33312 | 0;
 $2892 = sp + 1728 | 0;
 $2893 = sp + 33304 | 0;
 $2894 = sp + 1712 | 0;
 $2895 = sp + 33296 | 0;
 $2896 = sp + 1696 | 0;
 $2897 = sp + 33288 | 0;
 $2898 = sp + 1680 | 0;
 $2899 = sp + 33280 | 0;
 $2900 = sp + 1664 | 0;
 $2901 = sp + 33272 | 0;
 $2902 = sp + 1648 | 0;
 $2903 = sp + 33264 | 0;
 $2904 = sp + 1632 | 0;
 $2905 = sp + 33256 | 0;
 $2906 = sp + 1616 | 0;
 $2907 = sp + 33248 | 0;
 $2908 = sp + 1600 | 0;
 $2909 = sp + 33240 | 0;
 $2910 = sp + 1584 | 0;
 $2911 = sp + 33232 | 0;
 $2912 = sp + 1568 | 0;
 $2913 = sp + 33224 | 0;
 $2914 = sp + 1552 | 0;
 $2915 = sp + 33216 | 0;
 $2916 = sp + 1536 | 0;
 $2917 = sp + 33208 | 0;
 $2918 = sp + 1520 | 0;
 $2919 = sp + 33200 | 0;
 $2920 = sp + 1504 | 0;
 $2921 = sp + 33192 | 0;
 $2922 = sp + 1488 | 0;
 $2923 = sp + 33184 | 0;
 $2924 = sp + 1472 | 0;
 $2925 = sp + 33176 | 0;
 $2926 = sp + 1456 | 0;
 $2927 = sp + 33168 | 0;
 $2928 = sp + 1440 | 0;
 $2929 = sp + 33160 | 0;
 $2930 = sp + 1424 | 0;
 $2931 = sp + 33152 | 0;
 $2932 = sp + 1408 | 0;
 $2933 = sp + 33144 | 0;
 $2934 = sp + 1392 | 0;
 $2935 = sp + 33136 | 0;
 $2936 = sp + 1376 | 0;
 $2937 = sp + 33128 | 0;
 $2938 = sp + 1360 | 0;
 $2939 = sp + 33120 | 0;
 $2940 = sp + 1344 | 0;
 $2941 = sp + 33112 | 0;
 $2942 = sp + 1328 | 0;
 $2943 = sp + 33104 | 0;
 $2944 = sp + 1312 | 0;
 $2945 = sp + 33096 | 0;
 $2946 = sp + 1296 | 0;
 $2947 = sp + 33088 | 0;
 $2948 = sp + 1280 | 0;
 $2949 = sp + 33080 | 0;
 $2950 = sp + 1264 | 0;
 $2951 = sp + 33072 | 0;
 $2952 = sp + 1248 | 0;
 $2953 = sp + 33064 | 0;
 $2954 = sp + 1232 | 0;
 $2955 = sp + 33056 | 0;
 $2956 = sp + 1216 | 0;
 $2957 = sp + 33048 | 0;
 $2958 = sp + 1200 | 0;
 $2959 = sp + 33040 | 0;
 $2960 = sp + 1184 | 0;
 $2961 = sp + 33032 | 0;
 $2962 = sp + 1168 | 0;
 $2963 = sp + 33024 | 0;
 $2964 = sp + 1152 | 0;
 $2965 = sp + 33016 | 0;
 $2966 = sp + 1136 | 0;
 $2967 = sp + 33008 | 0;
 $2968 = sp + 1120 | 0;
 $2969 = sp + 33e3 | 0;
 $2970 = sp + 1104 | 0;
 $2971 = sp + 32992 | 0;
 $2972 = sp + 1088 | 0;
 $2973 = sp + 32984 | 0;
 $2974 = sp + 1072 | 0;
 $2975 = sp + 32976 | 0;
 $2976 = sp + 1056 | 0;
 $2977 = sp + 32968 | 0;
 $2978 = sp + 1040 | 0;
 $2979 = sp + 32960 | 0;
 $2980 = sp + 1008 | 0;
 $2981 = sp + 32952 | 0;
 $2982 = sp + 992 | 0;
 $2983 = sp + 32944 | 0;
 $2984 = sp + 976 | 0;
 $2985 = sp + 32936 | 0;
 $2986 = sp + 960 | 0;
 $2987 = sp + 32928 | 0;
 $2988 = sp + 944 | 0;
 $2989 = sp + 32920 | 0;
 $2990 = sp + 928 | 0;
 $2991 = sp + 32912 | 0;
 $2992 = sp + 912 | 0;
 $2993 = sp + 32904 | 0;
 $2994 = sp + 896 | 0;
 $2995 = sp + 32896 | 0;
 $2996 = sp + 880 | 0;
 $2997 = sp + 32888 | 0;
 $2998 = sp + 864 | 0;
 $2999 = sp + 32880 | 0;
 $3000 = sp + 832 | 0;
 $3001 = sp + 32872 | 0;
 $3002 = sp + 816 | 0;
 $3003 = sp + 32864 | 0;
 $3004 = sp + 800 | 0;
 $3005 = sp + 32856 | 0;
 $3006 = sp + 784 | 0;
 $3007 = sp + 32848 | 0;
 $3008 = sp + 768 | 0;
 $3009 = sp + 32840 | 0;
 $3010 = sp + 752 | 0;
 $3011 = sp + 32832 | 0;
 $3012 = sp + 736 | 0;
 $3013 = sp + 32824 | 0;
 $3014 = sp + 720 | 0;
 $3015 = sp + 32816 | 0;
 $3016 = sp + 704 | 0;
 $3017 = sp + 32808 | 0;
 $3018 = sp + 688 | 0;
 $3019 = sp + 32800 | 0;
 $3020 = sp + 672 | 0;
 $3021 = sp + 32792 | 0;
 $3022 = sp + 656 | 0;
 $3023 = sp + 32784 | 0;
 $3024 = sp + 640 | 0;
 $3025 = sp + 32776 | 0;
 $3026 = sp + 624 | 0;
 $3027 = sp + 32768 | 0;
 $3028 = sp + 608 | 0;
 $3029 = sp + 32760 | 0;
 $3030 = sp + 592 | 0;
 $3031 = sp + 32752 | 0;
 $3032 = sp + 576 | 0;
 $3033 = sp + 32744 | 0;
 $3034 = sp + 560 | 0;
 $3035 = sp + 32736 | 0;
 $3036 = sp + 22976 | 0;
 $3037 = sp + 22972 | 0;
 $3038 = sp + 22968 | 0;
 $3039 = sp + 22964 | 0;
 $3040 = sp + 22960 | 0;
 $3041 = sp + 22956 | 0;
 $3042 = sp + 22952 | 0;
 $3043 = sp + 22948 | 0;
 $3044 = sp + 22944 | 0;
 $3045 = sp + 22940 | 0;
 $3046 = sp + 22936 | 0;
 $3047 = sp + 22932 | 0;
 $3048 = sp + 22928 | 0;
 $3049 = sp + 22924 | 0;
 $3050 = sp + 22920 | 0;
 $3051 = sp + 22916 | 0;
 $3052 = sp + 22912 | 0;
 $3053 = sp + 22908 | 0;
 $3054 = sp + 22904 | 0;
 $3055 = sp + 22900 | 0;
 $3056 = sp + 22896 | 0;
 $3057 = sp + 22892 | 0;
 $3058 = sp + 22888 | 0;
 $3059 = sp + 22884 | 0;
 $3060 = sp + 22880 | 0;
 $3061 = sp + 22876 | 0;
 $3062 = sp + 22872 | 0;
 $3063 = sp + 22868 | 0;
 $3064 = sp + 22864 | 0;
 $3065 = sp + 22860 | 0;
 $3066 = sp + 22856 | 0;
 $3067 = sp + 22852 | 0;
 $3068 = sp + 22848 | 0;
 $3069 = sp + 22844 | 0;
 $3070 = sp + 22840 | 0;
 $3071 = sp + 22836 | 0;
 $3072 = sp + 22832 | 0;
 $3073 = sp + 22828 | 0;
 $3074 = sp + 22824 | 0;
 $3075 = sp + 22820 | 0;
 $3076 = sp + 22816 | 0;
 $3077 = sp + 22812 | 0;
 $3078 = sp + 544 | 0;
 $3079 = sp + 32728 | 0;
 $3080 = sp + 528 | 0;
 $3081 = sp + 32720 | 0;
 $3082 = sp + 512 | 0;
 $3083 = sp + 32712 | 0;
 $3084 = sp + 496 | 0;
 $3085 = sp + 32704 | 0;
 $3086 = sp + 480 | 0;
 $3087 = sp + 32696 | 0;
 $3088 = sp + 464 | 0;
 $3089 = sp + 32688 | 0;
 $3090 = sp + 448 | 0;
 $3091 = sp + 32680 | 0;
 $3092 = sp + 432 | 0;
 $3093 = sp + 32672 | 0;
 $3094 = sp + 416 | 0;
 $3095 = sp + 32664 | 0;
 $3096 = sp + 400 | 0;
 $3097 = sp + 32656 | 0;
 $3098 = sp + 384 | 0;
 $3099 = sp + 32648 | 0;
 $3100 = sp + 368 | 0;
 $3101 = sp + 32640 | 0;
 $3102 = sp + 352 | 0;
 $3103 = sp + 32632 | 0;
 $3104 = sp + 336 | 0;
 $3105 = sp + 32624 | 0;
 $3106 = sp + 320 | 0;
 $3107 = sp + 32616 | 0;
 $3108 = sp + 304 | 0;
 $3109 = sp + 32608 | 0;
 $3110 = sp + 288 | 0;
 $3111 = sp + 32600 | 0;
 $3112 = sp + 272 | 0;
 $3113 = sp + 32592 | 0;
 $3114 = sp + 256 | 0;
 $3115 = sp + 32584 | 0;
 $3116 = sp + 240 | 0;
 $3117 = sp + 32576 | 0;
 $3118 = sp + 224 | 0;
 $3119 = sp + 32568 | 0;
 $3120 = sp + 208 | 0;
 $3121 = sp + 32560 | 0;
 $3122 = sp + 192 | 0;
 $3123 = sp + 32552 | 0;
 $3124 = sp + 176 | 0;
 $3125 = sp + 32544 | 0;
 $3126 = sp + 160 | 0;
 $3127 = sp + 32536 | 0;
 $3128 = sp + 144 | 0;
 $3129 = sp + 32528 | 0;
 $3130 = sp + 128 | 0;
 $3131 = sp + 32520 | 0;
 $3132 = sp + 112 | 0;
 $3133 = sp + 32512 | 0;
 $3134 = sp + 96 | 0;
 $3135 = sp + 32504 | 0;
 $3136 = sp + 80 | 0;
 $3137 = sp + 32496 | 0;
 $3138 = sp + 64 | 0;
 $3139 = sp + 32488 | 0;
 $3140 = sp + 48 | 0;
 $3141 = sp + 32480 | 0;
 $3142 = sp + 32 | 0;
 $3143 = sp + 32472 | 0;
 $3144 = sp + 16 | 0;
 $3145 = sp + 32464 | 0;
 $3146 = sp;
 $3147 = sp + 32456 | 0;
 $3148 = sp + 22808 | 0;
 $3149 = sp + 22804 | 0;
 $3150 = sp + 22800 | 0;
 $3151 = sp + 22796 | 0;
 $3152 = sp + 22792 | 0;
 $3153 = sp + 22788 | 0;
 $3154 = sp + 22784 | 0;
 $3155 = sp + 22780 | 0;
 $3156 = sp + 22776 | 0;
 HEAP32[$info >> 2] = 0;
 HEAP32[$info + 4 >> 2] = 0;
 HEAP8[$info + 8 >> 0] = 0;
 HEAP32[$info + 12 >> 2] = 600;
 HEAP8[$info + 16 >> 0] = 0;
 HEAP32[$info + 20 >> 2] = 256;
 HEAP32[$info + 24 >> 2] = 300;
 HEAP8[$info + 28 >> 0] = 0;
 HEAP32[$info + 32 >> 2] = 1024;
 HEAP32[$info + 36 >> 2] = 262;
 HEAP8[$info + 40 >> 0] = 0;
 HEAP32[$info + 44 >> 2] = 4096;
 HEAP32[$info + 48 >> 2] = 262;
 HEAP8[$info + 52 >> 0] = 0;
 HEAP32[$info + 56 >> 2] = 4096;
 HEAP32[$info + 60 >> 2] = 262;
 HEAP8[$info + 64 >> 0] = 0;
 HEAP32[$info + 68 >> 2] = 4096;
 $3172 = $info + 72 | 0;
 HEAP32[$info + 884 >> 2] = 0;
 HEAP32[$info + 888 >> 2] = 0;
 HEAP32[$info + 892 >> 2] = 0;
 HEAP32[$3172 >> 2] = 0;
 HEAP32[$3172 + 4 >> 2] = 0;
 HEAP32[$3172 + 8 >> 2] = 0;
 HEAP32[$3172 + 12 >> 2] = 0;
 HEAP32[$3172 + 16 >> 2] = 0;
 HEAP32[$3172 + 20 >> 2] = 0;
 HEAP32[$3172 + 24 >> 2] = 0;
 HEAP8[$3172 + 28 >> 0] = 0;
 _memset($info + 104 | 0, 0, 779) | 0;
 _memset($info + 900 | 0, 0, 1042) | 0;
 HEAP16[$info + 1944 >> 1] = -16379;
 _memset($info + 1946 | 0, 0, 331) | 0;
 __ZN14ClientTimeZoneC2Ev($info + 2280 | 0);
 $3181 = $info + 2452 | 0;
 HEAP32[$3181 >> 2] = -16843010;
 HEAP32[$3181 + 4 >> 2] = -16843010;
 HEAP16[$3181 + 8 >> 1] = 65278;
 HEAP32[$info + 108 >> 2] = 1036;
 HEAP8[$info + 916 >> 0] = 0;
 HEAP32[$info + 912 >> 2] = 0;
 HEAP32[$info >> 2] = 16;
 HEAP16[$info + 4 >> 1] = 1024;
 HEAP16[$info + 6 >> 1] = 768;
 HEAP8[$front + 4 >> 0] = 0;
 $3188 = $front + 8 | 0;
 HEAP32[$front >> 2] = 9724;
 HEAP32[$3188 >> 2] = 9932;
 $3189 = $front + 12 | 0;
 HEAP32[$3189 >> 2] = 0;
 HEAP32[$3189 + 4 >> 2] = 0;
 HEAP16[$3189 + 8 >> 1] = 0;
 HEAP8[$front + 24 >> 0] = 0;
 HEAP32[$front + 28 >> 2] = 0;
 HEAP8[$front + 40 >> 0] = 0;
 HEAP8[$front + 41 >> 0] = 0;
 _gettimeofday($0 | 0, 0) | 0;
 $3195 = $0;
 $3200 = HEAP32[$3195 + 4 >> 2] | 0;
 $3201 = $front + 32 | 0;
 HEAP32[$3201 >> 2] = HEAP32[$3195 >> 2];
 HEAP32[$3201 + 4 >> 2] = $3200;
 HEAP32[$front >> 2] = 9488;
 HEAP32[$3188 >> 2] = 9704;
 HEAP32[$front + 44 >> 2] = 0;
 $3206 = $front + 48 | 0;
 _memcpy($3206 | 0, $info | 0, 2464) | 0;
 $3207 = $front + 2512 | 0;
 HEAP32[$front + 2572 >> 2] = 0;
 $3209 = $front + 2576 | 0;
 dest = $3207;
 stop = dest + 52 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP32[$3209 >> 2] = 30;
 HEAP8[$front + 2580 >> 0] = HEAP32[$3206 >> 2];
 __ZN10BGRPalette11classic_332Ev() | 0;
 _memcpy($front + 2584 | 0, 3659320, 1024) | 0;
 HEAP32[$front + 4644 >> 2] = 0;
 HEAP32[$front + 4648 >> 2] = 0;
 HEAP32[$front + 4732 >> 2] = 0;
 HEAP32[$front + 4736 >> 2] = 0;
 HEAP8[$front + 4820 >> 0] = 0;
 HEAP32[$front + 4824 >> 2] = 208;
 HEAP32[$front + 4976 >> 2] = 0;
 HEAP8[$front + 4980 >> 0] = 0;
 _memset($front + 3616 | 0, 0, 1028) | 0;
 $3223 = $front + 5e3 | 0;
 HEAP32[$front + 4988 >> 2] = $3223;
 HEAP32[$front + 4992 >> 2] = $front + 5256;
 HEAP32[$front + 4996 >> 2] = $3223;
 HEAP32[$front + 5260 >> 2] = 0;
 HEAP32[$front + 5272 >> 2] = 0;
 HEAP32[$front + 5276 >> 2] = 0;
 HEAP8[$front + 5264 >> 0] = 0;
 HEAP32[$front + 5288 >> 2] = 0;
 HEAP32[$front + 5292 >> 2] = 0;
 HEAP8[$front + 5280 >> 0] = 0;
 HEAP32[$front + 5304 >> 2] = 0;
 HEAP32[$front + 5308 >> 2] = 0;
 HEAP8[$front + 5296 >> 0] = 0;
 HEAP32[$front + 5320 >> 2] = 0;
 HEAP32[$front + 5324 >> 2] = 0;
 HEAP8[$front + 5312 >> 0] = 0;
 HEAP32[$front + 5336 >> 2] = 0;
 HEAP32[$front + 5340 >> 2] = 0;
 HEAP8[$front + 5328 >> 0] = 0;
 HEAP32[$front + 5352 >> 2] = 0;
 HEAP32[$front + 5356 >> 2] = 0;
 HEAP8[$front + 5344 >> 0] = 0;
 HEAP32[$front + 5368 >> 2] = 0;
 HEAP32[$front + 5372 >> 2] = 0;
 HEAP8[$front + 5360 >> 0] = 0;
 HEAP32[$front + 5384 >> 2] = 0;
 HEAP32[$front + 5388 >> 2] = 0;
 HEAP8[$front + 5376 >> 0] = 0;
 HEAP32[$front + 5400 >> 2] = 0;
 HEAP32[$front + 5404 >> 2] = 0;
 HEAP8[$front + 5392 >> 0] = 0;
 HEAP32[$front + 5416 >> 2] = 0;
 HEAP32[$front + 5420 >> 2] = 0;
 HEAP8[$front + 5408 >> 0] = 0;
 HEAP32[$front + 5432 >> 2] = 0;
 HEAP32[$front + 5436 >> 2] = 0;
 HEAP8[$front + 5424 >> 0] = 0;
 HEAP32[$front + 5448 >> 2] = 0;
 HEAP32[$front + 5452 >> 2] = 0;
 HEAP8[$front + 5440 >> 0] = 0;
 HEAP32[$front + 5464 >> 2] = 0;
 HEAP32[$front + 5468 >> 2] = 0;
 HEAP8[$front + 5456 >> 0] = 0;
 HEAP32[$front + 5480 >> 2] = 0;
 HEAP32[$front + 5484 >> 2] = 0;
 HEAP8[$front + 5472 >> 0] = 0;
 HEAP32[$front + 5496 >> 2] = 0;
 HEAP32[$front + 5500 >> 2] = 0;
 HEAP8[$front + 5488 >> 0] = 0;
 HEAP32[$front + 5512 >> 2] = 0;
 HEAP32[$front + 5516 >> 2] = 0;
 HEAP8[$front + 5504 >> 0] = 0;
 HEAP32[$front + 5528 >> 2] = 0;
 HEAP32[$front + 5532 >> 2] = 0;
 HEAP8[$front + 5520 >> 0] = 0;
 HEAP32[$front + 5544 >> 2] = 0;
 HEAP32[$front + 5548 >> 2] = 0;
 HEAP8[$front + 5536 >> 0] = 0;
 HEAP32[$front + 5560 >> 2] = 0;
 HEAP32[$front + 5564 >> 2] = 0;
 HEAP8[$front + 5552 >> 0] = 0;
 HEAP32[$front + 5576 >> 2] = 0;
 HEAP32[$front + 5580 >> 2] = 0;
 HEAP8[$front + 5568 >> 0] = 0;
 HEAP32[$front + 5592 >> 2] = 0;
 HEAP32[$front + 5596 >> 2] = 0;
 HEAP8[$front + 5584 >> 0] = 0;
 HEAP32[$front + 5608 >> 2] = 0;
 HEAP32[$front + 5612 >> 2] = 0;
 HEAP8[$front + 5600 >> 0] = 0;
 HEAP32[$front + 5624 >> 2] = 0;
 HEAP32[$front + 5628 >> 2] = 0;
 HEAP8[$front + 5616 >> 0] = 0;
 HEAP32[$front + 5640 >> 2] = 0;
 HEAP32[$front + 5644 >> 2] = 0;
 HEAP8[$front + 5632 >> 0] = 0;
 HEAP32[$front + 5656 >> 2] = 0;
 HEAP32[$front + 5660 >> 2] = 0;
 HEAP8[$front + 5648 >> 0] = 0;
 HEAP32[$front + 5672 >> 2] = 0;
 HEAP32[$front + 5676 >> 2] = 0;
 HEAP8[$front + 5664 >> 0] = 0;
 HEAP32[$front + 5688 >> 2] = 0;
 HEAP32[$front + 5692 >> 2] = 0;
 HEAP8[$front + 5680 >> 0] = 0;
 HEAP32[$front + 5704 >> 2] = 0;
 HEAP32[$front + 5708 >> 2] = 0;
 HEAP8[$front + 5696 >> 0] = 0;
 HEAP32[$front + 5720 >> 2] = 0;
 HEAP32[$front + 5724 >> 2] = 0;
 HEAP8[$front + 5712 >> 0] = 0;
 HEAP32[$front + 5736 >> 2] = 0;
 HEAP32[$front + 5740 >> 2] = 0;
 HEAP8[$front + 5728 >> 0] = 0;
 HEAP32[$front + 5752 >> 2] = 0;
 HEAP32[$front + 5756 >> 2] = 0;
 HEAP8[$front + 5744 >> 0] = 0;
 HEAP32[$front + 5768 >> 2] = 0;
 HEAP32[$front + 5772 >> 2] = 0;
 HEAP8[$front + 5760 >> 0] = 0;
 $3325 = $front + 5780 | 0;
 HEAP32[$3325 >> 2] = 0;
 HEAP32[$3325 + 4 >> 2] = 0;
 HEAP32[$3325 + 8 >> 2] = 0;
 _emscripten_asm_const_ii(0, 2) | 0;
 $3327 = $0 + 4 | 0;
 $3328 = $0 + 6 | 0;
 $3329 = $2 + 8 | 0;
 $3330 = $3 + 2 | 0;
 $3331 = $3 + 4 | 0;
 $3332 = $3 + 6 | 0;
 $3333 = $4 + 8 | 0;
 $3334 = $5 + 2 | 0;
 $3335 = $5 + 4 | 0;
 $3336 = $5 + 6 | 0;
 $3337 = $0 + 4 | 0;
 $3338 = $0 + 6 | 0;
 $3339 = $0 + 4 | 0;
 $3340 = $0 + 6 | 0;
 $3341 = $0 + 2 | 0;
 $3342 = $0 + 4 | 0;
 $3343 = $0 + 6 | 0;
 $3344 = $0 + 2 | 0;
 $3345 = $0 + 4 | 0;
 $3346 = $0 + 6 | 0;
 $3347 = $0 + 2 | 0;
 $3348 = $0 + 4 | 0;
 $3349 = $0 + 6 | 0;
 $3350 = $0 + 2 | 0;
 $3351 = $0 + 4 | 0;
 $3352 = $0 + 6 | 0;
 $3353 = $0 + 2 | 0;
 $3354 = $0 + 4 | 0;
 $3355 = $0 + 6 | 0;
 $3356 = $0 + 2 | 0;
 $3357 = $0 + 4 | 0;
 $3358 = $0 + 6 | 0;
 $3359 = $0 + 2 | 0;
 $3360 = $0 + 4 | 0;
 $3361 = $0 + 6 | 0;
 $3362 = $0 + 2 | 0;
 $3363 = $0 + 4 | 0;
 $3364 = $0 + 6 | 0;
 $3365 = $0 + 2 | 0;
 $3366 = $0 + 4 | 0;
 $3367 = $0 + 6 | 0;
 $3368 = $0 + 2 | 0;
 $3369 = $0 + 4 | 0;
 $3370 = $0 + 6 | 0;
 $3371 = $0 + 2 | 0;
 $3372 = $0 + 4 | 0;
 $3373 = $0 + 6 | 0;
 $3374 = $0 + 2 | 0;
 $3375 = $0 + 4 | 0;
 $3376 = $0 + 6 | 0;
 $3377 = $0 + 2 | 0;
 $3378 = $0 + 4 | 0;
 $3379 = $0 + 6 | 0;
 $3380 = $0 + 2 | 0;
 $3381 = $0 + 4 | 0;
 $3382 = $0 + 6 | 0;
 $3383 = $0 + 2 | 0;
 $3384 = $0 + 4 | 0;
 $3385 = $0 + 6 | 0;
 $3386 = $0 + 2 | 0;
 $3387 = $0 + 4 | 0;
 $3388 = $0 + 6 | 0;
 $3389 = $0 + 2 | 0;
 $3390 = $0 + 4 | 0;
 $3391 = $0 + 6 | 0;
 $3392 = $0 + 2 | 0;
 $3393 = $0 + 4 | 0;
 $3394 = $0 + 6 | 0;
 $3395 = $0 + 2 | 0;
 $3396 = $0 + 4 | 0;
 $3397 = $0 + 6 | 0;
 $3398 = $0 + 2 | 0;
 $3399 = $0 + 4 | 0;
 $3400 = $0 + 6 | 0;
 $3401 = $0 + 2 | 0;
 $3402 = $0 + 4 | 0;
 $3403 = $0 + 6 | 0;
 $3404 = $0 + 2 | 0;
 $3405 = $0 + 4 | 0;
 $3406 = $0 + 6 | 0;
 $3407 = $0 + 2 | 0;
 $3408 = $0 + 4 | 0;
 $3409 = $0 + 6 | 0;
 $3410 = $0 + 2 | 0;
 $3411 = $0 + 4 | 0;
 $3412 = $0 + 6 | 0;
 $3413 = $0 + 2 | 0;
 $3414 = $0 + 4 | 0;
 $3415 = $0 + 6 | 0;
 $3416 = $0 + 2 | 0;
 $3417 = $0 + 4 | 0;
 $3418 = $0 + 6 | 0;
 $3419 = $0 + 2 | 0;
 $3420 = $0 + 4 | 0;
 $3421 = $0 + 6 | 0;
 $3422 = $0 + 2 | 0;
 $3423 = $0 + 4 | 0;
 $3424 = $0 + 6 | 0;
 $3425 = $0 + 2 | 0;
 $3426 = $0 + 4 | 0;
 $3427 = $0 + 6 | 0;
 $3428 = $0 + 2 | 0;
 $3429 = $0 + 4 | 0;
 $3430 = $0 + 6 | 0;
 $3431 = $0 + 2 | 0;
 $3432 = $0 + 4 | 0;
 $3433 = $0 + 6 | 0;
 $3434 = $0 + 2 | 0;
 $3435 = $0 + 4 | 0;
 $3436 = $0 + 6 | 0;
 $3437 = $0 + 2 | 0;
 $3438 = $0 + 4 | 0;
 $3439 = $0 + 6 | 0;
 $3440 = $0 + 2 | 0;
 $3441 = $0 + 4 | 0;
 $3442 = $0 + 6 | 0;
 $3443 = $0 + 2 | 0;
 $3444 = $0 + 4 | 0;
 $3445 = $0 + 6 | 0;
 $3446 = $0 + 2 | 0;
 $3447 = $0 + 4 | 0;
 $3448 = $0 + 6 | 0;
 $3449 = $0 + 2 | 0;
 $3450 = $0 + 4 | 0;
 $3451 = $0 + 6 | 0;
 $3452 = $0 + 2 | 0;
 $3453 = $0 + 4 | 0;
 $3454 = $0 + 6 | 0;
 $3455 = $0 + 2 | 0;
 $3456 = $0 + 4 | 0;
 $3457 = $0 + 6 | 0;
 $3458 = $0 + 2 | 0;
 $3459 = $0 + 4 | 0;
 $3460 = $0 + 6 | 0;
 $3461 = $0 + 2 | 0;
 $3462 = $0 + 4 | 0;
 $3463 = $0 + 6 | 0;
 $3464 = $0 + 2 | 0;
 $3465 = $0 + 4 | 0;
 $3466 = $0 + 6 | 0;
 $3467 = $0 + 2 | 0;
 $3468 = $0 + 4 | 0;
 $3469 = $0 + 6 | 0;
 $3470 = $0 + 2 | 0;
 $3471 = $0 + 4 | 0;
 $3472 = $0 + 6 | 0;
 $3473 = $0 + 2 | 0;
 $3474 = $0 + 4 | 0;
 $3475 = $0 + 6 | 0;
 $3476 = $0 + 2 | 0;
 $3477 = $0 + 4 | 0;
 $3478 = $0 + 6 | 0;
 $3479 = $0 + 2 | 0;
 $3480 = $0 + 4 | 0;
 $3481 = $0 + 6 | 0;
 $3482 = $0 + 2 | 0;
 $3483 = $0 + 4 | 0;
 $3484 = $0 + 6 | 0;
 $3485 = $0 + 2 | 0;
 $3486 = $0 + 4 | 0;
 $3487 = $0 + 6 | 0;
 $3488 = $0 + 2 | 0;
 $3489 = $0 + 4 | 0;
 $3490 = $0 + 6 | 0;
 $3491 = $0 + 2 | 0;
 $3492 = $0 + 4 | 0;
 $3493 = $0 + 6 | 0;
 $3494 = $59 + 8 | 0;
 $3495 = $60 + 2 | 0;
 $3496 = $60 + 4 | 0;
 $3497 = $60 + 6 | 0;
 $3498 = $61 + 8 | 0;
 $3499 = $62 + 2 | 0;
 $3500 = $62 + 4 | 0;
 $3501 = $62 + 6 | 0;
 $3502 = $0 + 2 | 0;
 $3503 = $0 + 4 | 0;
 $3504 = $0 + 6 | 0;
 $3505 = $0 + 2 | 0;
 $3506 = $0 + 4 | 0;
 $3507 = $0 + 6 | 0;
 $3508 = $0 + 2 | 0;
 $3509 = $0 + 4 | 0;
 $3510 = $0 + 6 | 0;
 $3511 = $0 + 2 | 0;
 $3512 = $0 + 4 | 0;
 $3513 = $0 + 6 | 0;
 $3514 = $0 + 2 | 0;
 $3515 = $0 + 4 | 0;
 $3516 = $0 + 6 | 0;
 $3517 = $0 + 2 | 0;
 $3518 = $0 + 4 | 0;
 $3519 = $0 + 6 | 0;
 $3520 = $0 + 2 | 0;
 $3521 = $0 + 4 | 0;
 $3522 = $0 + 6 | 0;
 $3523 = $0 + 2 | 0;
 $3524 = $0 + 4 | 0;
 $3525 = $0 + 6 | 0;
 $3526 = $0 + 2 | 0;
 $3527 = $0 + 4 | 0;
 $3528 = $0 + 6 | 0;
 $3529 = $0 + 2 | 0;
 $3530 = $0 + 4 | 0;
 $3531 = $0 + 6 | 0;
 $3532 = $0 + 2 | 0;
 $3533 = $0 + 4 | 0;
 $3534 = $0 + 6 | 0;
 $3535 = $0 + 2 | 0;
 $3536 = $0 + 4 | 0;
 $3537 = $0 + 6 | 0;
 $3538 = $0 + 2 | 0;
 $3539 = $0 + 4 | 0;
 $3540 = $0 + 6 | 0;
 $3541 = $0 + 2 | 0;
 $3542 = $0 + 4 | 0;
 $3543 = $0 + 6 | 0;
 $3544 = $0 + 2 | 0;
 $3545 = $0 + 4 | 0;
 $3546 = $0 + 6 | 0;
 $3547 = $0 + 2 | 0;
 $3548 = $0 + 4 | 0;
 $3549 = $0 + 6 | 0;
 $3550 = $0 + 2 | 0;
 $3551 = $0 + 4 | 0;
 $3552 = $0 + 6 | 0;
 $3553 = $0 + 2 | 0;
 $3554 = $0 + 4 | 0;
 $3555 = $0 + 6 | 0;
 $3556 = $0 + 2 | 0;
 $3557 = $0 + 4 | 0;
 $3558 = $0 + 6 | 0;
 $3559 = $0 + 2 | 0;
 $3560 = $0 + 4 | 0;
 $3561 = $0 + 6 | 0;
 $3562 = $0 + 2 | 0;
 $3563 = $0 + 4 | 0;
 $3564 = $0 + 6 | 0;
 $3565 = $0 + 2 | 0;
 $3566 = $0 + 4 | 0;
 $3567 = $0 + 6 | 0;
 $3568 = $0 + 2 | 0;
 $3569 = $0 + 4 | 0;
 $3570 = $0 + 6 | 0;
 $3571 = $0 + 2 | 0;
 $3572 = $0 + 4 | 0;
 $3573 = $0 + 6 | 0;
 $3574 = $0 + 2 | 0;
 $3575 = $0 + 4 | 0;
 $3576 = $0 + 6 | 0;
 $3577 = $0 + 2 | 0;
 $3578 = $0 + 4 | 0;
 $3579 = $0 + 6 | 0;
 $3580 = $0 + 2 | 0;
 $3581 = $0 + 4 | 0;
 $3582 = $0 + 6 | 0;
 $3583 = $0 + 2 | 0;
 $3584 = $0 + 4 | 0;
 $3585 = $0 + 6 | 0;
 $3586 = $0 + 2 | 0;
 $3587 = $0 + 4 | 0;
 $3588 = $0 + 6 | 0;
 $3589 = $0 + 2 | 0;
 $3590 = $0 + 4 | 0;
 $3591 = $0 + 6 | 0;
 $3592 = $0 + 2 | 0;
 $3593 = $0 + 4 | 0;
 $3594 = $0 + 6 | 0;
 $3595 = $0 + 2 | 0;
 $3596 = $0 + 4 | 0;
 $3597 = $0 + 6 | 0;
 $3598 = $0 + 2 | 0;
 $3599 = $0 + 4 | 0;
 $3600 = $0 + 6 | 0;
 $3601 = $0 + 2 | 0;
 $3602 = $0 + 4 | 0;
 $3603 = $0 + 6 | 0;
 $3604 = $0 + 2 | 0;
 $3605 = $0 + 4 | 0;
 $3606 = $0 + 6 | 0;
 $3607 = $0 + 2 | 0;
 $3608 = $0 + 4 | 0;
 $3609 = $0 + 6 | 0;
 $3610 = $0 + 2 | 0;
 $3611 = $0 + 4 | 0;
 $3612 = $0 + 6 | 0;
 $3613 = $0 + 2 | 0;
 $3614 = $0 + 4 | 0;
 $3615 = $0 + 6 | 0;
 $3616 = $0 + 2 | 0;
 $3617 = $0 + 4 | 0;
 $3618 = $0 + 6 | 0;
 $3619 = $0 + 2 | 0;
 $3620 = $0 + 4 | 0;
 $3621 = $0 + 6 | 0;
 $3622 = $0 + 2 | 0;
 $3623 = $0 + 4 | 0;
 $3624 = $0 + 6 | 0;
 $3625 = $0 + 2 | 0;
 $3626 = $0 + 4 | 0;
 $3627 = $0 + 6 | 0;
 $3628 = $0 + 2 | 0;
 $3629 = $0 + 4 | 0;
 $3630 = $0 + 6 | 0;
 $3631 = $0 + 2 | 0;
 $3632 = $0 + 4 | 0;
 $3633 = $0 + 6 | 0;
 $3634 = $0 + 2 | 0;
 $3635 = $0 + 4 | 0;
 $3636 = $0 + 6 | 0;
 $3637 = $0 + 2 | 0;
 $3638 = $0 + 4 | 0;
 $3639 = $0 + 6 | 0;
 $3640 = $0 + 2 | 0;
 $3641 = $0 + 4 | 0;
 $3642 = $0 + 6 | 0;
 $3643 = $0 + 2 | 0;
 $3644 = $0 + 4 | 0;
 $3645 = $0 + 6 | 0;
 $3646 = $0 + 2 | 0;
 $3647 = $0 + 4 | 0;
 $3648 = $0 + 6 | 0;
 $3649 = $0 + 2 | 0;
 $3650 = $0 + 4 | 0;
 $3651 = $0 + 6 | 0;
 $3652 = $0 + 2 | 0;
 $3653 = $0 + 4 | 0;
 $3654 = $0 + 6 | 0;
 $3655 = $0 + 2 | 0;
 $3656 = $0 + 4 | 0;
 $3657 = $0 + 6 | 0;
 $3658 = $0 + 2 | 0;
 $3659 = $0 + 4 | 0;
 $3660 = $0 + 6 | 0;
 $3661 = $0 + 2 | 0;
 $3662 = $0 + 4 | 0;
 $3663 = $0 + 6 | 0;
 $3664 = $0 + 2 | 0;
 $3665 = $0 + 4 | 0;
 $3666 = $0 + 6 | 0;
 $3667 = $0 + 2 | 0;
 $3668 = $0 + 4 | 0;
 $3669 = $0 + 6 | 0;
 $3670 = $0 + 2 | 0;
 $3671 = $0 + 4 | 0;
 $3672 = $0 + 6 | 0;
 $3673 = $0 + 2 | 0;
 $3674 = $0 + 4 | 0;
 $3675 = $0 + 6 | 0;
 $3676 = $0 + 2 | 0;
 $3677 = $0 + 4 | 0;
 $3678 = $0 + 6 | 0;
 $3679 = $0 + 2 | 0;
 $3680 = $0 + 4 | 0;
 $3681 = $0 + 6 | 0;
 $3682 = $0 + 4 | 0;
 $3683 = $0 + 6 | 0;
 $3684 = $0 + 2 | 0;
 $3685 = $0 + 4 | 0;
 $3686 = $0 + 6 | 0;
 $3687 = $0 + 2 | 0;
 $3688 = $0 + 4 | 0;
 $3689 = $0 + 6 | 0;
 $3690 = $0 + 2 | 0;
 $3691 = $0 + 4 | 0;
 $3692 = $0 + 6 | 0;
 $3693 = $0 + 2 | 0;
 $3694 = $0 + 4 | 0;
 $3695 = $0 + 6 | 0;
 $3696 = $0 + 2 | 0;
 $3697 = $0 + 4 | 0;
 $3698 = $0 + 6 | 0;
 $3699 = $0 + 2 | 0;
 $3700 = $0 + 4 | 0;
 $3701 = $0 + 6 | 0;
 $3702 = $0 + 2 | 0;
 $3703 = $0 + 4 | 0;
 $3704 = $0 + 6 | 0;
 $3705 = $0 + 2 | 0;
 $3706 = $0 + 4 | 0;
 $3707 = $0 + 6 | 0;
 $3708 = $0 + 2 | 0;
 $3709 = $0 + 4 | 0;
 $3710 = $0 + 6 | 0;
 $3711 = $0 + 2 | 0;
 $3712 = $0 + 4 | 0;
 $3713 = $0 + 6 | 0;
 $3714 = $0 + 2 | 0;
 $3715 = $0 + 4 | 0;
 $3716 = $0 + 6 | 0;
 $3717 = $135 + 8 | 0;
 $3718 = $136 + 2 | 0;
 $3719 = $136 + 4 | 0;
 $3720 = $136 + 6 | 0;
 $3721 = $0 + 2 | 0;
 $3722 = $0 + 4 | 0;
 $3723 = $0 + 6 | 0;
 $3724 = $0 + 2 | 0;
 $3725 = $0 + 4 | 0;
 $3726 = $0 + 6 | 0;
 $3727 = $139 + 8 | 0;
 $3728 = $140 + 2 | 0;
 $3729 = $140 + 4 | 0;
 $3730 = $140 + 6 | 0;
 $3731 = $0 + 2 | 0;
 $3732 = $0 + 4 | 0;
 $3733 = $0 + 6 | 0;
 $3734 = $142 + 8 | 0;
 $3735 = $143 + 2 | 0;
 $3736 = $143 + 4 | 0;
 $3737 = $143 + 6 | 0;
 $3738 = $144 + 8 | 0;
 $3739 = $145 + 2 | 0;
 $3740 = $145 + 4 | 0;
 $3741 = $145 + 6 | 0;
 $3742 = $146 + 8 | 0;
 $3743 = $147 + 2 | 0;
 $3744 = $147 + 4 | 0;
 $3745 = $147 + 6 | 0;
 $3746 = $148 + 8 | 0;
 $3747 = $149 + 2 | 0;
 $3748 = $149 + 4 | 0;
 $3749 = $149 + 6 | 0;
 $3750 = $150 + 8 | 0;
 $3751 = $151 + 2 | 0;
 $3752 = $151 + 4 | 0;
 $3753 = $151 + 6 | 0;
 $3754 = $152 + 8 | 0;
 $3755 = $153 + 2 | 0;
 $3756 = $153 + 4 | 0;
 $3757 = $153 + 6 | 0;
 $3758 = $154 + 8 | 0;
 $3759 = $155 + 2 | 0;
 $3760 = $155 + 4 | 0;
 $3761 = $155 + 6 | 0;
 $3762 = $156 + 8 | 0;
 $3763 = $157 + 2 | 0;
 $3764 = $157 + 4 | 0;
 $3765 = $157 + 6 | 0;
 $3766 = $158 + 8 | 0;
 $3767 = $159 + 2 | 0;
 $3768 = $159 + 4 | 0;
 $3769 = $159 + 6 | 0;
 $3770 = $160 + 8 | 0;
 $3771 = $161 + 2 | 0;
 $3772 = $161 + 4 | 0;
 $3773 = $161 + 6 | 0;
 $3774 = $162 + 8 | 0;
 $3775 = $163 + 2 | 0;
 $3776 = $163 + 4 | 0;
 $3777 = $163 + 6 | 0;
 $3778 = $164 + 8 | 0;
 $3779 = $165 + 2 | 0;
 $3780 = $165 + 4 | 0;
 $3781 = $165 + 6 | 0;
 $3782 = $166 + 8 | 0;
 $3783 = $167 + 2 | 0;
 $3784 = $167 + 4 | 0;
 $3785 = $167 + 6 | 0;
 $3786 = $168 + 8 | 0;
 $3787 = $169 + 2 | 0;
 $3788 = $169 + 4 | 0;
 $3789 = $169 + 6 | 0;
 $3790 = $170 + 8 | 0;
 $3791 = $171 + 2 | 0;
 $3792 = $171 + 4 | 0;
 $3793 = $171 + 6 | 0;
 $3794 = $172 + 8 | 0;
 $3795 = $173 + 2 | 0;
 $3796 = $173 + 4 | 0;
 $3797 = $173 + 6 | 0;
 $3798 = $174 + 8 | 0;
 $3799 = $175 + 2 | 0;
 $3800 = $175 + 4 | 0;
 $3801 = $175 + 6 | 0;
 $3802 = $176 + 8 | 0;
 $3803 = $177 + 2 | 0;
 $3804 = $177 + 4 | 0;
 $3805 = $177 + 6 | 0;
 $3806 = $178 + 8 | 0;
 $3807 = $179 + 2 | 0;
 $3808 = $179 + 4 | 0;
 $3809 = $179 + 6 | 0;
 $3810 = $180 + 8 | 0;
 $3811 = $181 + 2 | 0;
 $3812 = $181 + 4 | 0;
 $3813 = $181 + 6 | 0;
 $3814 = $182 + 8 | 0;
 $3815 = $183 + 2 | 0;
 $3816 = $183 + 4 | 0;
 $3817 = $183 + 6 | 0;
 $3818 = $184 + 8 | 0;
 $3819 = $185 + 2 | 0;
 $3820 = $185 + 4 | 0;
 $3821 = $185 + 6 | 0;
 $3822 = $186 + 8 | 0;
 $3823 = $187 + 2 | 0;
 $3824 = $187 + 4 | 0;
 $3825 = $187 + 6 | 0;
 $3826 = $188 + 8 | 0;
 $3827 = $189 + 2 | 0;
 $3828 = $189 + 4 | 0;
 $3829 = $189 + 6 | 0;
 $3830 = $190 + 8 | 0;
 $3831 = $191 + 2 | 0;
 $3832 = $191 + 4 | 0;
 $3833 = $191 + 6 | 0;
 $3834 = $192 + 8 | 0;
 $3835 = $193 + 2 | 0;
 $3836 = $193 + 4 | 0;
 $3837 = $193 + 6 | 0;
 $3838 = $194 + 8 | 0;
 $3839 = $195 + 2 | 0;
 $3840 = $195 + 4 | 0;
 $3841 = $195 + 6 | 0;
 $3842 = $0 + 2 | 0;
 $3843 = $0 + 4 | 0;
 $3844 = $0 + 6 | 0;
 $3845 = $0 + 2 | 0;
 $3846 = $0 + 4 | 0;
 $3847 = $0 + 6 | 0;
 $3848 = $0 + 2 | 0;
 $3849 = $0 + 4 | 0;
 $3850 = $0 + 6 | 0;
 $3851 = $0 + 2 | 0;
 $3852 = $0 + 4 | 0;
 $3853 = $0 + 6 | 0;
 $3854 = $0 + 2 | 0;
 $3855 = $0 + 4 | 0;
 $3856 = $0 + 6 | 0;
 $3857 = $0 + 2 | 0;
 $3858 = $0 + 4 | 0;
 $3859 = $0 + 6 | 0;
 $3860 = $202 + 8 | 0;
 $3861 = $203 + 2 | 0;
 $3862 = $203 + 4 | 0;
 $3863 = $203 + 6 | 0;
 $3864 = $0 + 2 | 0;
 $3865 = $0 + 4 | 0;
 $3866 = $0 + 6 | 0;
 $3867 = $205 + 8 | 0;
 $3868 = $206 + 2 | 0;
 $3869 = $206 + 4 | 0;
 $3870 = $206 + 6 | 0;
 $3871 = $207 + 8 | 0;
 $3872 = $208 + 2 | 0;
 $3873 = $208 + 4 | 0;
 $3874 = $208 + 6 | 0;
 $3875 = $209 + 8 | 0;
 $3876 = $210 + 2 | 0;
 $3877 = $210 + 4 | 0;
 $3878 = $210 + 6 | 0;
 $3879 = $211 + 8 | 0;
 $3880 = $212 + 2 | 0;
 $3881 = $212 + 4 | 0;
 $3882 = $212 + 6 | 0;
 $3883 = $213 + 8 | 0;
 $3884 = $214 + 2 | 0;
 $3885 = $214 + 4 | 0;
 $3886 = $214 + 6 | 0;
 $3887 = $215 + 8 | 0;
 $3888 = $216 + 2 | 0;
 $3889 = $216 + 4 | 0;
 $3890 = $216 + 6 | 0;
 $3891 = $217 + 8 | 0;
 $3892 = $218 + 2 | 0;
 $3893 = $218 + 4 | 0;
 $3894 = $218 + 6 | 0;
 $3895 = $219 + 8 | 0;
 $3896 = $220 + 2 | 0;
 $3897 = $220 + 4 | 0;
 $3898 = $220 + 6 | 0;
 $3899 = $221 + 8 | 0;
 $3900 = $222 + 2 | 0;
 $3901 = $222 + 4 | 0;
 $3902 = $222 + 6 | 0;
 $3903 = $223 + 8 | 0;
 $3904 = $224 + 2 | 0;
 $3905 = $224 + 4 | 0;
 $3906 = $224 + 6 | 0;
 $3907 = $225 + 8 | 0;
 $3908 = $226 + 2 | 0;
 $3909 = $226 + 4 | 0;
 $3910 = $226 + 6 | 0;
 $3911 = $227 + 8 | 0;
 $3912 = $228 + 2 | 0;
 $3913 = $228 + 4 | 0;
 $3914 = $228 + 6 | 0;
 $3915 = $229 + 8 | 0;
 $3916 = $230 + 2 | 0;
 $3917 = $230 + 4 | 0;
 $3918 = $230 + 6 | 0;
 $3919 = $231 + 8 | 0;
 $3920 = $232 + 2 | 0;
 $3921 = $232 + 4 | 0;
 $3922 = $232 + 6 | 0;
 $3923 = $233 + 8 | 0;
 $3924 = $234 + 2 | 0;
 $3925 = $234 + 4 | 0;
 $3926 = $234 + 6 | 0;
 $3927 = $235 + 8 | 0;
 $3928 = $236 + 2 | 0;
 $3929 = $236 + 4 | 0;
 $3930 = $236 + 6 | 0;
 $3931 = $237 + 8 | 0;
 $3932 = $238 + 2 | 0;
 $3933 = $238 + 4 | 0;
 $3934 = $238 + 6 | 0;
 $3935 = $239 + 8 | 0;
 $3936 = $240 + 2 | 0;
 $3937 = $240 + 4 | 0;
 $3938 = $240 + 6 | 0;
 $3939 = $241 + 8 | 0;
 $3940 = $242 + 2 | 0;
 $3941 = $242 + 4 | 0;
 $3942 = $242 + 6 | 0;
 $3943 = $243 + 8 | 0;
 $3944 = $244 + 2 | 0;
 $3945 = $244 + 4 | 0;
 $3946 = $244 + 6 | 0;
 $3947 = $0 + 2 | 0;
 $3948 = $0 + 4 | 0;
 $3949 = $0 + 6 | 0;
 $3950 = $0 + 2 | 0;
 $3951 = $0 + 4 | 0;
 $3952 = $0 + 6 | 0;
 $3953 = $0 + 2 | 0;
 $3954 = $0 + 4 | 0;
 $3955 = $0 + 6 | 0;
 $3956 = $0 + 2 | 0;
 $3957 = $0 + 4 | 0;
 $3958 = $0 + 6 | 0;
 $3959 = $0 + 2 | 0;
 $3960 = $0 + 4 | 0;
 $3961 = $0 + 6 | 0;
 $3962 = $0 + 2 | 0;
 $3963 = $0 + 4 | 0;
 $3964 = $0 + 6 | 0;
 $3965 = $251 + 8 | 0;
 $3966 = $252 + 2 | 0;
 $3967 = $252 + 4 | 0;
 $3968 = $252 + 6 | 0;
 $3969 = $253 + 8 | 0;
 $3970 = $254 + 2 | 0;
 $3971 = $254 + 4 | 0;
 $3972 = $254 + 6 | 0;
 $3973 = $255 + 8 | 0;
 $3974 = $256 + 2 | 0;
 $3975 = $256 + 4 | 0;
 $3976 = $256 + 6 | 0;
 $3977 = $257 + 8 | 0;
 $3978 = $258 + 2 | 0;
 $3979 = $258 + 4 | 0;
 $3980 = $258 + 6 | 0;
 $3981 = $259 + 8 | 0;
 $3982 = $260 + 2 | 0;
 $3983 = $260 + 4 | 0;
 $3984 = $260 + 6 | 0;
 $3985 = $261 + 8 | 0;
 $3986 = $262 + 2 | 0;
 $3987 = $262 + 4 | 0;
 $3988 = $262 + 6 | 0;
 $3989 = $263 + 8 | 0;
 $3990 = $264 + 2 | 0;
 $3991 = $264 + 4 | 0;
 $3992 = $264 + 6 | 0;
 $3993 = $265 + 8 | 0;
 $3994 = $266 + 2 | 0;
 $3995 = $266 + 4 | 0;
 $3996 = $266 + 6 | 0;
 $3997 = $267 + 8 | 0;
 $3998 = $268 + 2 | 0;
 $3999 = $268 + 4 | 0;
 $4000 = $268 + 6 | 0;
 $4001 = $269 + 8 | 0;
 $4002 = $270 + 2 | 0;
 $4003 = $270 + 4 | 0;
 $4004 = $270 + 6 | 0;
 $4005 = $271 + 8 | 0;
 $4006 = $272 + 2 | 0;
 $4007 = $272 + 4 | 0;
 $4008 = $272 + 6 | 0;
 $4009 = $273 + 8 | 0;
 $4010 = $274 + 2 | 0;
 $4011 = $274 + 4 | 0;
 $4012 = $274 + 6 | 0;
 $4013 = $275 + 8 | 0;
 $4014 = $276 + 2 | 0;
 $4015 = $276 + 4 | 0;
 $4016 = $276 + 6 | 0;
 $4017 = $277 + 8 | 0;
 $4018 = $278 + 2 | 0;
 $4019 = $278 + 4 | 0;
 $4020 = $278 + 6 | 0;
 $4021 = $279 + 8 | 0;
 $4022 = $280 + 2 | 0;
 $4023 = $280 + 4 | 0;
 $4024 = $280 + 6 | 0;
 $4025 = $281 + 8 | 0;
 $4026 = $282 + 2 | 0;
 $4027 = $282 + 4 | 0;
 $4028 = $282 + 6 | 0;
 $4029 = $283 + 8 | 0;
 $4030 = $284 + 2 | 0;
 $4031 = $284 + 4 | 0;
 $4032 = $284 + 6 | 0;
 $4033 = $285 + 8 | 0;
 $4034 = $286 + 2 | 0;
 $4035 = $286 + 4 | 0;
 $4036 = $286 + 6 | 0;
 $4037 = $287 + 8 | 0;
 $4038 = $288 + 2 | 0;
 $4039 = $288 + 4 | 0;
 $4040 = $288 + 6 | 0;
 $4041 = $289 + 8 | 0;
 $4042 = $290 + 2 | 0;
 $4043 = $290 + 4 | 0;
 $4044 = $290 + 6 | 0;
 $4045 = $291 + 8 | 0;
 $4046 = $292 + 2 | 0;
 $4047 = $292 + 4 | 0;
 $4048 = $292 + 6 | 0;
 $4049 = $293 + 8 | 0;
 $4050 = $294 + 2 | 0;
 $4051 = $294 + 4 | 0;
 $4052 = $294 + 6 | 0;
 $4053 = $295 + 8 | 0;
 $4054 = $296 + 2 | 0;
 $4055 = $296 + 4 | 0;
 $4056 = $296 + 6 | 0;
 $4057 = $297 + 8 | 0;
 $4058 = $298 + 2 | 0;
 $4059 = $298 + 4 | 0;
 $4060 = $298 + 6 | 0;
 $4061 = $299 + 8 | 0;
 $4062 = $300 + 2 | 0;
 $4063 = $300 + 4 | 0;
 $4064 = $300 + 6 | 0;
 $4065 = $301 + 8 | 0;
 $4066 = $302 + 2 | 0;
 $4067 = $302 + 4 | 0;
 $4068 = $302 + 6 | 0;
 $4069 = $303 + 8 | 0;
 $4070 = $304 + 2 | 0;
 $4071 = $304 + 4 | 0;
 $4072 = $304 + 6 | 0;
 $4073 = $305 + 8 | 0;
 $4074 = $306 + 2 | 0;
 $4075 = $306 + 4 | 0;
 $4076 = $306 + 6 | 0;
 $4077 = $307 + 8 | 0;
 $4078 = $308 + 2 | 0;
 $4079 = $308 + 4 | 0;
 $4080 = $308 + 6 | 0;
 $4081 = $309 + 8 | 0;
 $4082 = $310 + 2 | 0;
 $4083 = $310 + 4 | 0;
 $4084 = $310 + 6 | 0;
 $4085 = $311 + 8 | 0;
 $4086 = $312 + 2 | 0;
 $4087 = $312 + 4 | 0;
 $4088 = $312 + 6 | 0;
 $4089 = $313 + 8 | 0;
 $4090 = $314 + 2 | 0;
 $4091 = $314 + 4 | 0;
 $4092 = $314 + 6 | 0;
 $4093 = $315 + 8 | 0;
 $4094 = $316 + 2 | 0;
 $4095 = $316 + 4 | 0;
 $4096 = $316 + 6 | 0;
 $4097 = $317 + 8 | 0;
 $4098 = $318 + 2 | 0;
 $4099 = $318 + 4 | 0;
 $4100 = $318 + 6 | 0;
 $4101 = $319 + 8 | 0;
 $4102 = $320 + 2 | 0;
 $4103 = $320 + 4 | 0;
 $4104 = $320 + 6 | 0;
 $4105 = $321 + 8 | 0;
 $4106 = $322 + 2 | 0;
 $4107 = $322 + 4 | 0;
 $4108 = $322 + 6 | 0;
 $4109 = $323 + 8 | 0;
 $4110 = $324 + 2 | 0;
 $4111 = $324 + 4 | 0;
 $4112 = $324 + 6 | 0;
 $4113 = $325 + 8 | 0;
 $4114 = $326 + 2 | 0;
 $4115 = $326 + 4 | 0;
 $4116 = $326 + 6 | 0;
 $4117 = $327 + 8 | 0;
 $4118 = $328 + 2 | 0;
 $4119 = $328 + 4 | 0;
 $4120 = $328 + 6 | 0;
 $4121 = $329 + 8 | 0;
 $4122 = $330 + 2 | 0;
 $4123 = $330 + 4 | 0;
 $4124 = $330 + 6 | 0;
 $4125 = $331 + 8 | 0;
 $4126 = $332 + 2 | 0;
 $4127 = $332 + 4 | 0;
 $4128 = $332 + 6 | 0;
 $4129 = $333 + 8 | 0;
 $4130 = $334 + 2 | 0;
 $4131 = $334 + 4 | 0;
 $4132 = $334 + 6 | 0;
 $4133 = $335 + 8 | 0;
 $4134 = $336 + 2 | 0;
 $4135 = $336 + 4 | 0;
 $4136 = $336 + 6 | 0;
 $4137 = $337 + 8 | 0;
 $4138 = $338 + 2 | 0;
 $4139 = $338 + 4 | 0;
 $4140 = $338 + 6 | 0;
 $4141 = $339 + 8 | 0;
 $4142 = $340 + 2 | 0;
 $4143 = $340 + 4 | 0;
 $4144 = $340 + 6 | 0;
 $4145 = $341 + 8 | 0;
 $4146 = $342 + 2 | 0;
 $4147 = $342 + 4 | 0;
 $4148 = $342 + 6 | 0;
 $4149 = $343 + 8 | 0;
 $4150 = $344 + 2 | 0;
 $4151 = $344 + 4 | 0;
 $4152 = $344 + 6 | 0;
 $4153 = $345 + 8 | 0;
 $4154 = $346 + 2 | 0;
 $4155 = $346 + 4 | 0;
 $4156 = $346 + 6 | 0;
 $4157 = $347 + 8 | 0;
 $4158 = $348 + 2 | 0;
 $4159 = $348 + 4 | 0;
 $4160 = $348 + 6 | 0;
 $4161 = $0 + 2 | 0;
 $4162 = $0 + 4 | 0;
 $4163 = $0 + 6 | 0;
 $4164 = $0 + 2 | 0;
 $4165 = $0 + 4 | 0;
 $4166 = $0 + 6 | 0;
 $4167 = $0 + 2 | 0;
 $4168 = $0 + 4 | 0;
 $4169 = $0 + 6 | 0;
 $4170 = $0 + 2 | 0;
 $4171 = $0 + 4 | 0;
 $4172 = $0 + 6 | 0;
 $4173 = $0 + 2 | 0;
 $4174 = $0 + 4 | 0;
 $4175 = $0 + 6 | 0;
 $4176 = $0 + 2 | 0;
 $4177 = $0 + 4 | 0;
 $4178 = $0 + 6 | 0;
 $4179 = $0 + 2 | 0;
 $4180 = $0 + 4 | 0;
 $4181 = $0 + 6 | 0;
 $4182 = $0 + 2 | 0;
 $4183 = $0 + 4 | 0;
 $4184 = $0 + 6 | 0;
 $4185 = $0 + 2 | 0;
 $4186 = $0 + 4 | 0;
 $4187 = $0 + 6 | 0;
 $4188 = $0 + 2 | 0;
 $4189 = $0 + 4 | 0;
 $4190 = $0 + 6 | 0;
 $4191 = $0 + 2 | 0;
 $4192 = $0 + 4 | 0;
 $4193 = $0 + 6 | 0;
 $4194 = $0 + 2 | 0;
 $4195 = $0 + 4 | 0;
 $4196 = $0 + 6 | 0;
 $4197 = $0 + 2 | 0;
 $4198 = $0 + 4 | 0;
 $4199 = $0 + 6 | 0;
 $4200 = $0 + 2 | 0;
 $4201 = $0 + 4 | 0;
 $4202 = $0 + 6 | 0;
 $4203 = $0 + 2 | 0;
 $4204 = $0 + 4 | 0;
 $4205 = $0 + 6 | 0;
 $4206 = $0 + 2 | 0;
 $4207 = $0 + 4 | 0;
 $4208 = $0 + 6 | 0;
 $4209 = $0 + 2 | 0;
 $4210 = $0 + 4 | 0;
 $4211 = $0 + 6 | 0;
 $4212 = $0 + 2 | 0;
 $4213 = $0 + 4 | 0;
 $4214 = $0 + 6 | 0;
 $4215 = $0 + 2 | 0;
 $4216 = $0 + 4 | 0;
 $4217 = $0 + 6 | 0;
 $4218 = $0 + 2 | 0;
 $4219 = $0 + 4 | 0;
 $4220 = $0 + 6 | 0;
 $4221 = $0 + 2 | 0;
 $4222 = $0 + 4 | 0;
 $4223 = $0 + 6 | 0;
 $4224 = $0 + 2 | 0;
 $4225 = $0 + 4 | 0;
 $4226 = $0 + 6 | 0;
 $4227 = $0 + 2 | 0;
 $4228 = $0 + 4 | 0;
 $4229 = $0 + 6 | 0;
 $4230 = $0 + 2 | 0;
 $4231 = $0 + 4 | 0;
 $4232 = $0 + 6 | 0;
 $4233 = $0 + 2 | 0;
 $4234 = $0 + 4 | 0;
 $4235 = $0 + 6 | 0;
 $4236 = $0 + 2 | 0;
 $4237 = $0 + 4 | 0;
 $4238 = $0 + 6 | 0;
 $4239 = $0 + 2 | 0;
 $4240 = $0 + 4 | 0;
 $4241 = $0 + 6 | 0;
 $4242 = $0 + 2 | 0;
 $4243 = $0 + 4 | 0;
 $4244 = $0 + 6 | 0;
 $4245 = $0 + 2 | 0;
 $4246 = $0 + 4 | 0;
 $4247 = $0 + 6 | 0;
 $4248 = $0 + 2 | 0;
 $4249 = $0 + 4 | 0;
 $4250 = $0 + 6 | 0;
 $4251 = $0 + 2 | 0;
 $4252 = $0 + 4 | 0;
 $4253 = $0 + 6 | 0;
 $4254 = $380 + 8 | 0;
 $4255 = $381 + 2 | 0;
 $4256 = $381 + 4 | 0;
 $4257 = $381 + 6 | 0;
 $4258 = $382 + 8 | 0;
 $4259 = $383 + 2 | 0;
 $4260 = $383 + 4 | 0;
 $4261 = $383 + 6 | 0;
 $4262 = $384 + 8 | 0;
 $4263 = $385 + 2 | 0;
 $4264 = $385 + 4 | 0;
 $4265 = $385 + 6 | 0;
 $4266 = $386 + 8 | 0;
 $4267 = $387 + 2 | 0;
 $4268 = $387 + 4 | 0;
 $4269 = $387 + 6 | 0;
 $4270 = $388 + 8 | 0;
 $4271 = $389 + 2 | 0;
 $4272 = $389 + 4 | 0;
 $4273 = $389 + 6 | 0;
 $4274 = $390 + 8 | 0;
 $4275 = $391 + 2 | 0;
 $4276 = $391 + 4 | 0;
 $4277 = $391 + 6 | 0;
 $4278 = $392 + 8 | 0;
 $4279 = $393 + 2 | 0;
 $4280 = $393 + 4 | 0;
 $4281 = $393 + 6 | 0;
 $4282 = $394 + 8 | 0;
 $4283 = $395 + 2 | 0;
 $4284 = $395 + 4 | 0;
 $4285 = $395 + 6 | 0;
 $4286 = $396 + 8 | 0;
 $4287 = $397 + 2 | 0;
 $4288 = $397 + 4 | 0;
 $4289 = $397 + 6 | 0;
 $4290 = $398 + 8 | 0;
 $4291 = $399 + 2 | 0;
 $4292 = $399 + 4 | 0;
 $4293 = $399 + 6 | 0;
 $4294 = $400 + 8 | 0;
 $4295 = $401 + 2 | 0;
 $4296 = $401 + 4 | 0;
 $4297 = $401 + 6 | 0;
 $4298 = $402 + 8 | 0;
 $4299 = $403 + 2 | 0;
 $4300 = $403 + 4 | 0;
 $4301 = $403 + 6 | 0;
 $4302 = $404 + 8 | 0;
 $4303 = $405 + 2 | 0;
 $4304 = $405 + 4 | 0;
 $4305 = $405 + 6 | 0;
 $4306 = $406 + 8 | 0;
 $4307 = $407 + 2 | 0;
 $4308 = $407 + 4 | 0;
 $4309 = $407 + 6 | 0;
 $4310 = $408 + 8 | 0;
 $4311 = $409 + 2 | 0;
 $4312 = $409 + 4 | 0;
 $4313 = $409 + 6 | 0;
 $4314 = $410 + 8 | 0;
 $4315 = $411 + 2 | 0;
 $4316 = $411 + 4 | 0;
 $4317 = $411 + 6 | 0;
 $4318 = $412 + 8 | 0;
 $4319 = $413 + 2 | 0;
 $4320 = $413 + 4 | 0;
 $4321 = $413 + 6 | 0;
 $4322 = $0 + 2 | 0;
 $4323 = $0 + 4 | 0;
 $4324 = $0 + 6 | 0;
 $4325 = $0 + 2 | 0;
 $4326 = $0 + 4 | 0;
 $4327 = $0 + 6 | 0;
 $4328 = $0 + 2 | 0;
 $4329 = $0 + 4 | 0;
 $4330 = $0 + 6 | 0;
 $4331 = $0 + 2 | 0;
 $4332 = $0 + 4 | 0;
 $4333 = $0 + 6 | 0;
 $4334 = $0 + 2 | 0;
 $4335 = $0 + 4 | 0;
 $4336 = $0 + 6 | 0;
 $4337 = $0 + 2 | 0;
 $4338 = $0 + 4 | 0;
 $4339 = $0 + 6 | 0;
 $4340 = $420 + 8 | 0;
 $4341 = $421 + 2 | 0;
 $4342 = $421 + 4 | 0;
 $4343 = $421 + 6 | 0;
 $4344 = $422 + 8 | 0;
 $4345 = $423 + 2 | 0;
 $4346 = $423 + 4 | 0;
 $4347 = $423 + 6 | 0;
 $4348 = $0 + 2 | 0;
 $4349 = $0 + 4 | 0;
 $4350 = $0 + 6 | 0;
 $4351 = $425 + 8 | 0;
 $4352 = $426 + 2 | 0;
 $4353 = $426 + 4 | 0;
 $4354 = $426 + 6 | 0;
 $4355 = $427 + 8 | 0;
 $4356 = $428 + 2 | 0;
 $4357 = $428 + 4 | 0;
 $4358 = $428 + 6 | 0;
 $4359 = $429 + 8 | 0;
 $4360 = $430 + 2 | 0;
 $4361 = $430 + 4 | 0;
 $4362 = $430 + 6 | 0;
 $4363 = $431 + 8 | 0;
 $4364 = $432 + 2 | 0;
 $4365 = $432 + 4 | 0;
 $4366 = $432 + 6 | 0;
 $4367 = $433 + 8 | 0;
 $4368 = $434 + 2 | 0;
 $4369 = $434 + 4 | 0;
 $4370 = $434 + 6 | 0;
 $4371 = $435 + 8 | 0;
 $4372 = $436 + 2 | 0;
 $4373 = $436 + 4 | 0;
 $4374 = $436 + 6 | 0;
 $4375 = $437 + 8 | 0;
 $4376 = $438 + 2 | 0;
 $4377 = $438 + 4 | 0;
 $4378 = $438 + 6 | 0;
 $4379 = $439 + 8 | 0;
 $4380 = $440 + 2 | 0;
 $4381 = $440 + 4 | 0;
 $4382 = $440 + 6 | 0;
 $4383 = $441 + 8 | 0;
 $4384 = $442 + 2 | 0;
 $4385 = $442 + 4 | 0;
 $4386 = $442 + 6 | 0;
 $4387 = $443 + 8 | 0;
 $4388 = $444 + 2 | 0;
 $4389 = $444 + 4 | 0;
 $4390 = $444 + 6 | 0;
 $4391 = $445 + 8 | 0;
 $4392 = $446 + 2 | 0;
 $4393 = $446 + 4 | 0;
 $4394 = $446 + 6 | 0;
 $4395 = $447 + 8 | 0;
 $4396 = $448 + 2 | 0;
 $4397 = $448 + 4 | 0;
 $4398 = $448 + 6 | 0;
 $4399 = $449 + 8 | 0;
 $4400 = $450 + 2 | 0;
 $4401 = $450 + 4 | 0;
 $4402 = $450 + 6 | 0;
 $4403 = $451 + 8 | 0;
 $4404 = $452 + 2 | 0;
 $4405 = $452 + 4 | 0;
 $4406 = $452 + 6 | 0;
 $4407 = $453 + 8 | 0;
 $4408 = $454 + 2 | 0;
 $4409 = $454 + 4 | 0;
 $4410 = $454 + 6 | 0;
 $4411 = $455 + 8 | 0;
 $4412 = $456 + 2 | 0;
 $4413 = $456 + 4 | 0;
 $4414 = $456 + 6 | 0;
 $4415 = $457 + 8 | 0;
 $4416 = $458 + 2 | 0;
 $4417 = $458 + 4 | 0;
 $4418 = $458 + 6 | 0;
 $4419 = $459 + 8 | 0;
 $4420 = $460 + 2 | 0;
 $4421 = $460 + 4 | 0;
 $4422 = $460 + 6 | 0;
 $4423 = $461 + 8 | 0;
 $4424 = $462 + 2 | 0;
 $4425 = $462 + 4 | 0;
 $4426 = $462 + 6 | 0;
 $4427 = $463 + 8 | 0;
 $4428 = $464 + 2 | 0;
 $4429 = $464 + 4 | 0;
 $4430 = $464 + 6 | 0;
 $4431 = $465 + 8 | 0;
 $4432 = $466 + 2 | 0;
 $4433 = $466 + 4 | 0;
 $4434 = $466 + 6 | 0;
 $4435 = $467 + 8 | 0;
 $4436 = $468 + 2 | 0;
 $4437 = $468 + 4 | 0;
 $4438 = $468 + 6 | 0;
 $4439 = $469 + 8 | 0;
 $4440 = $470 + 2 | 0;
 $4441 = $470 + 4 | 0;
 $4442 = $470 + 6 | 0;
 $4443 = $471 + 8 | 0;
 $4444 = $472 + 2 | 0;
 $4445 = $472 + 4 | 0;
 $4446 = $472 + 6 | 0;
 $4447 = $473 + 8 | 0;
 $4448 = $474 + 2 | 0;
 $4449 = $474 + 4 | 0;
 $4450 = $474 + 6 | 0;
 $4451 = $475 + 8 | 0;
 $4452 = $476 + 2 | 0;
 $4453 = $476 + 4 | 0;
 $4454 = $476 + 6 | 0;
 $4455 = $477 + 8 | 0;
 $4456 = $478 + 2 | 0;
 $4457 = $478 + 4 | 0;
 $4458 = $478 + 6 | 0;
 $4459 = $479 + 8 | 0;
 $4460 = $480 + 2 | 0;
 $4461 = $480 + 4 | 0;
 $4462 = $480 + 6 | 0;
 $4463 = $481 + 8 | 0;
 $4464 = $482 + 2 | 0;
 $4465 = $482 + 4 | 0;
 $4466 = $482 + 6 | 0;
 $4467 = $483 + 8 | 0;
 $4468 = $484 + 2 | 0;
 $4469 = $484 + 4 | 0;
 $4470 = $484 + 6 | 0;
 $4471 = $485 + 8 | 0;
 $4472 = $486 + 2 | 0;
 $4473 = $486 + 4 | 0;
 $4474 = $486 + 6 | 0;
 $4475 = $487 + 8 | 0;
 $4476 = $488 + 2 | 0;
 $4477 = $488 + 4 | 0;
 $4478 = $488 + 6 | 0;
 $4479 = $489 + 8 | 0;
 $4480 = $490 + 2 | 0;
 $4481 = $490 + 4 | 0;
 $4482 = $490 + 6 | 0;
 $4483 = $491 + 8 | 0;
 $4484 = $492 + 2 | 0;
 $4485 = $492 + 4 | 0;
 $4486 = $492 + 6 | 0;
 $4487 = $493 + 8 | 0;
 $4488 = $494 + 2 | 0;
 $4489 = $494 + 4 | 0;
 $4490 = $494 + 6 | 0;
 $4491 = $0 + 2 | 0;
 $4492 = $0 + 4 | 0;
 $4493 = $0 + 6 | 0;
 $4494 = $0 + 2 | 0;
 $4495 = $0 + 4 | 0;
 $4496 = $0 + 6 | 0;
 $4497 = $0 + 2 | 0;
 $4498 = $0 + 4 | 0;
 $4499 = $0 + 6 | 0;
 $4500 = $0 + 2 | 0;
 $4501 = $0 + 4 | 0;
 $4502 = $0 + 6 | 0;
 $4503 = $0 + 2 | 0;
 $4504 = $0 + 4 | 0;
 $4505 = $0 + 6 | 0;
 $4506 = $0 + 2 | 0;
 $4507 = $0 + 4 | 0;
 $4508 = $0 + 6 | 0;
 $4509 = $501 + 8 | 0;
 $4510 = $502 + 2 | 0;
 $4511 = $502 + 4 | 0;
 $4512 = $502 + 6 | 0;
 $4513 = $503 + 8 | 0;
 $4514 = $504 + 2 | 0;
 $4515 = $504 + 4 | 0;
 $4516 = $504 + 6 | 0;
 $4517 = $505 + 8 | 0;
 $4518 = $506 + 2 | 0;
 $4519 = $506 + 4 | 0;
 $4520 = $506 + 6 | 0;
 $4521 = $507 + 8 | 0;
 $4522 = $508 + 2 | 0;
 $4523 = $508 + 4 | 0;
 $4524 = $508 + 6 | 0;
 $4525 = $509 + 8 | 0;
 $4526 = $510 + 2 | 0;
 $4527 = $510 + 4 | 0;
 $4528 = $510 + 6 | 0;
 $4529 = $511 + 8 | 0;
 $4530 = $512 + 2 | 0;
 $4531 = $512 + 4 | 0;
 $4532 = $512 + 6 | 0;
 $4533 = $513 + 8 | 0;
 $4534 = $514 + 2 | 0;
 $4535 = $514 + 4 | 0;
 $4536 = $514 + 6 | 0;
 $4537 = $515 + 8 | 0;
 $4538 = $516 + 2 | 0;
 $4539 = $516 + 4 | 0;
 $4540 = $516 + 6 | 0;
 $4541 = $517 + 8 | 0;
 $4542 = $518 + 2 | 0;
 $4543 = $518 + 4 | 0;
 $4544 = $518 + 6 | 0;
 $4545 = $519 + 8 | 0;
 $4546 = $520 + 2 | 0;
 $4547 = $520 + 4 | 0;
 $4548 = $520 + 6 | 0;
 $4549 = $521 + 8 | 0;
 $4550 = $522 + 2 | 0;
 $4551 = $522 + 4 | 0;
 $4552 = $522 + 6 | 0;
 $4553 = $523 + 8 | 0;
 $4554 = $524 + 2 | 0;
 $4555 = $524 + 4 | 0;
 $4556 = $524 + 6 | 0;
 $4557 = $525 + 8 | 0;
 $4558 = $526 + 2 | 0;
 $4559 = $526 + 4 | 0;
 $4560 = $526 + 6 | 0;
 $4561 = $527 + 8 | 0;
 $4562 = $528 + 2 | 0;
 $4563 = $528 + 4 | 0;
 $4564 = $528 + 6 | 0;
 $4565 = $529 + 8 | 0;
 $4566 = $530 + 2 | 0;
 $4567 = $530 + 4 | 0;
 $4568 = $530 + 6 | 0;
 $4569 = $531 + 8 | 0;
 $4570 = $532 + 2 | 0;
 $4571 = $532 + 4 | 0;
 $4572 = $532 + 6 | 0;
 $4573 = $533 + 8 | 0;
 $4574 = $534 + 2 | 0;
 $4575 = $534 + 4 | 0;
 $4576 = $534 + 6 | 0;
 $4577 = $535 + 8 | 0;
 $4578 = $536 + 2 | 0;
 $4579 = $536 + 4 | 0;
 $4580 = $536 + 6 | 0;
 $4581 = $537 + 8 | 0;
 $4582 = $538 + 2 | 0;
 $4583 = $538 + 4 | 0;
 $4584 = $538 + 6 | 0;
 $4585 = $539 + 8 | 0;
 $4586 = $540 + 2 | 0;
 $4587 = $540 + 4 | 0;
 $4588 = $540 + 6 | 0;
 $4589 = $541 + 8 | 0;
 $4590 = $542 + 2 | 0;
 $4591 = $542 + 4 | 0;
 $4592 = $542 + 6 | 0;
 $4593 = $543 + 8 | 0;
 $4594 = $544 + 2 | 0;
 $4595 = $544 + 4 | 0;
 $4596 = $544 + 6 | 0;
 $4597 = $545 + 8 | 0;
 $4598 = $546 + 2 | 0;
 $4599 = $546 + 4 | 0;
 $4600 = $546 + 6 | 0;
 $4601 = $547 + 8 | 0;
 $4602 = $548 + 2 | 0;
 $4603 = $548 + 4 | 0;
 $4604 = $548 + 6 | 0;
 $4605 = $549 + 8 | 0;
 $4606 = $550 + 2 | 0;
 $4607 = $550 + 4 | 0;
 $4608 = $550 + 6 | 0;
 $4609 = $551 + 8 | 0;
 $4610 = $552 + 2 | 0;
 $4611 = $552 + 4 | 0;
 $4612 = $552 + 6 | 0;
 $4613 = $553 + 8 | 0;
 $4614 = $554 + 2 | 0;
 $4615 = $554 + 4 | 0;
 $4616 = $554 + 6 | 0;
 $4617 = $555 + 8 | 0;
 $4618 = $556 + 2 | 0;
 $4619 = $556 + 4 | 0;
 $4620 = $556 + 6 | 0;
 $4621 = $557 + 8 | 0;
 $4622 = $557 + 12 | 0;
 $4623 = $557 + 16 | 0;
 $4624 = $557 + 20 | 0;
 $4625 = $557 + 21 | 0;
 $4626 = $557 + 22 | 0;
 $4627 = $557 + 23 | 0;
 $4628 = $557 + 24 | 0;
 $4629 = $558 + 2 | 0;
 $4630 = $558 + 4 | 0;
 $4631 = $558 + 6 | 0;
 $4632 = $559 + 8 | 0;
 $4633 = $560 + 2 | 0;
 $4634 = $560 + 4 | 0;
 $4635 = $560 + 6 | 0;
 $4636 = $561 + 8 | 0;
 $4637 = $562 + 2 | 0;
 $4638 = $562 + 4 | 0;
 $4639 = $562 + 6 | 0;
 $4640 = $563 + 8 | 0;
 $4641 = $564 + 2 | 0;
 $4642 = $564 + 4 | 0;
 $4643 = $564 + 6 | 0;
 $4644 = $565 + 8 | 0;
 $4645 = $566 + 2 | 0;
 $4646 = $566 + 4 | 0;
 $4647 = $566 + 6 | 0;
 $4648 = $567 + 8 | 0;
 $4649 = $568 + 2 | 0;
 $4650 = $568 + 4 | 0;
 $4651 = $568 + 6 | 0;
 $4652 = $569 + 8 | 0;
 $4653 = $570 + 2 | 0;
 $4654 = $570 + 4 | 0;
 $4655 = $570 + 6 | 0;
 $4656 = $571 + 8 | 0;
 $4657 = $572 + 2 | 0;
 $4658 = $572 + 4 | 0;
 $4659 = $572 + 6 | 0;
 $4660 = $573 + 8 | 0;
 $4661 = $574 + 2 | 0;
 $4662 = $574 + 4 | 0;
 $4663 = $574 + 6 | 0;
 $4664 = $575 + 8 | 0;
 $4665 = $576 + 2 | 0;
 $4666 = $576 + 4 | 0;
 $4667 = $576 + 6 | 0;
 $4668 = $577 + 8 | 0;
 $4669 = $578 + 2 | 0;
 $4670 = $578 + 4 | 0;
 $4671 = $578 + 6 | 0;
 $4672 = $579 + 8 | 0;
 $4673 = $580 + 2 | 0;
 $4674 = $580 + 4 | 0;
 $4675 = $580 + 6 | 0;
 $4676 = $581 + 8 | 0;
 $4677 = $582 + 2 | 0;
 $4678 = $582 + 4 | 0;
 $4679 = $582 + 6 | 0;
 $4680 = $583 + 8 | 0;
 $4681 = $584 + 2 | 0;
 $4682 = $584 + 4 | 0;
 $4683 = $584 + 6 | 0;
 $4684 = $585 + 8 | 0;
 $4685 = $586 + 2 | 0;
 $4686 = $586 + 4 | 0;
 $4687 = $586 + 6 | 0;
 $4688 = $587 + 8 | 0;
 $4689 = $588 + 2 | 0;
 $4690 = $588 + 4 | 0;
 $4691 = $588 + 6 | 0;
 $4692 = $589 + 8 | 0;
 $4693 = $590 + 2 | 0;
 $4694 = $590 + 4 | 0;
 $4695 = $590 + 6 | 0;
 $4696 = $591 + 8 | 0;
 $4697 = $592 + 2 | 0;
 $4698 = $592 + 4 | 0;
 $4699 = $592 + 6 | 0;
 $4700 = $593 + 8 | 0;
 $4701 = $594 + 2 | 0;
 $4702 = $594 + 4 | 0;
 $4703 = $594 + 6 | 0;
 $4704 = $595 + 8 | 0;
 $4705 = $596 + 2 | 0;
 $4706 = $596 + 4 | 0;
 $4707 = $596 + 6 | 0;
 $4708 = $597 + 8 | 0;
 $4709 = $598 + 2 | 0;
 $4710 = $598 + 4 | 0;
 $4711 = $598 + 6 | 0;
 $4712 = $599 + 8 | 0;
 $4713 = $600 + 2 | 0;
 $4714 = $600 + 4 | 0;
 $4715 = $600 + 6 | 0;
 $4716 = $601 + 8 | 0;
 $4717 = $602 + 2 | 0;
 $4718 = $602 + 4 | 0;
 $4719 = $602 + 6 | 0;
 $4720 = $603 + 8 | 0;
 $4721 = $604 + 2 | 0;
 $4722 = $604 + 4 | 0;
 $4723 = $604 + 6 | 0;
 $4724 = $605 + 8 | 0;
 $4725 = $606 + 2 | 0;
 $4726 = $606 + 4 | 0;
 $4727 = $606 + 6 | 0;
 $4728 = $607 + 8 | 0;
 $4729 = $608 + 2 | 0;
 $4730 = $608 + 4 | 0;
 $4731 = $608 + 6 | 0;
 $4732 = $609 + 8 | 0;
 $4733 = $610 + 2 | 0;
 $4734 = $610 + 4 | 0;
 $4735 = $610 + 6 | 0;
 $4736 = $611 + 8 | 0;
 $4737 = $612 + 2 | 0;
 $4738 = $612 + 4 | 0;
 $4739 = $612 + 6 | 0;
 $4740 = $613 + 8 | 0;
 $4741 = $614 + 2 | 0;
 $4742 = $614 + 4 | 0;
 $4743 = $614 + 6 | 0;
 $4744 = $615 + 8 | 0;
 $4745 = $616 + 2 | 0;
 $4746 = $616 + 4 | 0;
 $4747 = $616 + 6 | 0;
 $4748 = $617 + 8 | 0;
 $4749 = $618 + 2 | 0;
 $4750 = $618 + 4 | 0;
 $4751 = $618 + 6 | 0;
 $4752 = $619 + 8 | 0;
 $4753 = $620 + 2 | 0;
 $4754 = $620 + 4 | 0;
 $4755 = $620 + 6 | 0;
 $4756 = $621 + 8 | 0;
 $4757 = $622 + 2 | 0;
 $4758 = $622 + 4 | 0;
 $4759 = $622 + 6 | 0;
 $4760 = $623 + 8 | 0;
 $4761 = $624 + 2 | 0;
 $4762 = $624 + 4 | 0;
 $4763 = $624 + 6 | 0;
 $4764 = $625 + 8 | 0;
 $4765 = $626 + 2 | 0;
 $4766 = $626 + 4 | 0;
 $4767 = $626 + 6 | 0;
 $4768 = $627 + 8 | 0;
 $4769 = $628 + 2 | 0;
 $4770 = $628 + 4 | 0;
 $4771 = $628 + 6 | 0;
 $4772 = $629 + 8 | 0;
 $4773 = $630 + 2 | 0;
 $4774 = $630 + 4 | 0;
 $4775 = $630 + 6 | 0;
 $4776 = $631 + 8 | 0;
 $4777 = $631 + 12 | 0;
 $4778 = $631 + 16 | 0;
 $4779 = $631 + 20 | 0;
 $4780 = $631 + 21 | 0;
 $4781 = $631 + 22 | 0;
 $4782 = $631 + 23 | 0;
 $4783 = $631 + 24 | 0;
 $4784 = $632 + 2 | 0;
 $4785 = $632 + 4 | 0;
 $4786 = $632 + 6 | 0;
 $4787 = $633 + 8 | 0;
 $4788 = $634 + 2 | 0;
 $4789 = $634 + 4 | 0;
 $4790 = $634 + 6 | 0;
 $4791 = $635 + 8 | 0;
 $4792 = $636 + 2 | 0;
 $4793 = $636 + 4 | 0;
 $4794 = $636 + 6 | 0;
 $4795 = $637 + 8 | 0;
 $4796 = $638 + 2 | 0;
 $4797 = $638 + 4 | 0;
 $4798 = $638 + 6 | 0;
 $4799 = $639 + 8 | 0;
 $4800 = $640 + 2 | 0;
 $4801 = $640 + 4 | 0;
 $4802 = $640 + 6 | 0;
 $4803 = $641 + 8 | 0;
 $4804 = $642 + 2 | 0;
 $4805 = $642 + 4 | 0;
 $4806 = $642 + 6 | 0;
 $4807 = $643 + 8 | 0;
 $4808 = $644 + 2 | 0;
 $4809 = $644 + 4 | 0;
 $4810 = $644 + 6 | 0;
 $4811 = $645 + 8 | 0;
 $4812 = $646 + 2 | 0;
 $4813 = $646 + 4 | 0;
 $4814 = $646 + 6 | 0;
 $4815 = $647 + 8 | 0;
 $4816 = $648 + 2 | 0;
 $4817 = $648 + 4 | 0;
 $4818 = $648 + 6 | 0;
 $4819 = $649 + 8 | 0;
 $4820 = $650 + 2 | 0;
 $4821 = $650 + 4 | 0;
 $4822 = $650 + 6 | 0;
 $4823 = $651 + 8 | 0;
 $4824 = $652 + 2 | 0;
 $4825 = $652 + 4 | 0;
 $4826 = $652 + 6 | 0;
 $4827 = $653 + 8 | 0;
 $4828 = $654 + 2 | 0;
 $4829 = $654 + 4 | 0;
 $4830 = $654 + 6 | 0;
 $4831 = $655 + 8 | 0;
 $4832 = $656 + 2 | 0;
 $4833 = $656 + 4 | 0;
 $4834 = $656 + 6 | 0;
 $4835 = $657 + 8 | 0;
 $4836 = $658 + 2 | 0;
 $4837 = $658 + 4 | 0;
 $4838 = $658 + 6 | 0;
 $4839 = $659 + 8 | 0;
 $4840 = $660 + 2 | 0;
 $4841 = $660 + 4 | 0;
 $4842 = $660 + 6 | 0;
 $4843 = $661 + 8 | 0;
 $4844 = $661 + 12 | 0;
 $4845 = $661 + 16 | 0;
 $4846 = $661 + 20 | 0;
 $4847 = $661 + 21 | 0;
 $4848 = $661 + 22 | 0;
 $4849 = $661 + 23 | 0;
 $4850 = $661 + 24 | 0;
 $4851 = $662 + 2 | 0;
 $4852 = $662 + 4 | 0;
 $4853 = $662 + 6 | 0;
 $4854 = $663 + 8 | 0;
 $4855 = $664 + 2 | 0;
 $4856 = $664 + 4 | 0;
 $4857 = $664 + 6 | 0;
 $4858 = $665 + 8 | 0;
 $4859 = $666 + 2 | 0;
 $4860 = $666 + 4 | 0;
 $4861 = $666 + 6 | 0;
 $4862 = $667 + 8 | 0;
 $4863 = $668 + 2 | 0;
 $4864 = $668 + 4 | 0;
 $4865 = $668 + 6 | 0;
 $4866 = $669 + 8 | 0;
 $4867 = $670 + 2 | 0;
 $4868 = $670 + 4 | 0;
 $4869 = $670 + 6 | 0;
 $4870 = $671 + 8 | 0;
 $4871 = $672 + 2 | 0;
 $4872 = $672 + 4 | 0;
 $4873 = $672 + 6 | 0;
 $4874 = $673 + 8 | 0;
 $4875 = $674 + 2 | 0;
 $4876 = $674 + 4 | 0;
 $4877 = $674 + 6 | 0;
 $4878 = $675 + 8 | 0;
 $4879 = $676 + 2 | 0;
 $4880 = $676 + 4 | 0;
 $4881 = $676 + 6 | 0;
 $4882 = $677 + 8 | 0;
 $4883 = $678 + 2 | 0;
 $4884 = $678 + 4 | 0;
 $4885 = $678 + 6 | 0;
 $4886 = $679 + 8 | 0;
 $4887 = $680 + 2 | 0;
 $4888 = $680 + 4 | 0;
 $4889 = $680 + 6 | 0;
 $4890 = $681 + 8 | 0;
 $4891 = $682 + 2 | 0;
 $4892 = $682 + 4 | 0;
 $4893 = $682 + 6 | 0;
 $4894 = $683 + 8 | 0;
 $4895 = $684 + 2 | 0;
 $4896 = $684 + 4 | 0;
 $4897 = $684 + 6 | 0;
 $4898 = $685 + 8 | 0;
 $4899 = $686 + 2 | 0;
 $4900 = $686 + 4 | 0;
 $4901 = $686 + 6 | 0;
 $4902 = $687 + 8 | 0;
 $4903 = $688 + 2 | 0;
 $4904 = $688 + 4 | 0;
 $4905 = $688 + 6 | 0;
 $4906 = $689 + 8 | 0;
 $4907 = $690 + 2 | 0;
 $4908 = $690 + 4 | 0;
 $4909 = $690 + 6 | 0;
 $4910 = $691 + 8 | 0;
 $4911 = $692 + 2 | 0;
 $4912 = $692 + 4 | 0;
 $4913 = $692 + 6 | 0;
 $4914 = $693 + 8 | 0;
 $4915 = $694 + 2 | 0;
 $4916 = $694 + 4 | 0;
 $4917 = $694 + 6 | 0;
 $4918 = $695 + 8 | 0;
 $4919 = $696 + 2 | 0;
 $4920 = $696 + 4 | 0;
 $4921 = $696 + 6 | 0;
 $4922 = $697 + 8 | 0;
 $4923 = $698 + 2 | 0;
 $4924 = $698 + 4 | 0;
 $4925 = $698 + 6 | 0;
 $4926 = $699 + 8 | 0;
 $4927 = $700 + 2 | 0;
 $4928 = $700 + 4 | 0;
 $4929 = $700 + 6 | 0;
 $4930 = $701 + 8 | 0;
 $4931 = $702 + 2 | 0;
 $4932 = $702 + 4 | 0;
 $4933 = $702 + 6 | 0;
 $4934 = $703 + 8 | 0;
 $4935 = $704 + 2 | 0;
 $4936 = $704 + 4 | 0;
 $4937 = $704 + 6 | 0;
 $4938 = $705 + 8 | 0;
 $4939 = $706 + 2 | 0;
 $4940 = $706 + 4 | 0;
 $4941 = $706 + 6 | 0;
 $4942 = $707 + 8 | 0;
 $4943 = $708 + 2 | 0;
 $4944 = $708 + 4 | 0;
 $4945 = $708 + 6 | 0;
 $4946 = $709 + 8 | 0;
 $4947 = $710 + 2 | 0;
 $4948 = $710 + 4 | 0;
 $4949 = $710 + 6 | 0;
 $4950 = $711 + 8 | 0;
 $4951 = $712 + 2 | 0;
 $4952 = $712 + 4 | 0;
 $4953 = $712 + 6 | 0;
 $4954 = $713 + 8 | 0;
 $4955 = $714 + 2 | 0;
 $4956 = $714 + 4 | 0;
 $4957 = $714 + 6 | 0;
 $4958 = $715 + 8 | 0;
 $4959 = $716 + 2 | 0;
 $4960 = $716 + 4 | 0;
 $4961 = $716 + 6 | 0;
 $4962 = $717 + 8 | 0;
 $4963 = $718 + 2 | 0;
 $4964 = $718 + 4 | 0;
 $4965 = $718 + 6 | 0;
 $4966 = $719 + 8 | 0;
 $4967 = $720 + 2 | 0;
 $4968 = $720 + 4 | 0;
 $4969 = $720 + 6 | 0;
 $4970 = $721 + 8 | 0;
 $4971 = $722 + 2 | 0;
 $4972 = $722 + 4 | 0;
 $4973 = $722 + 6 | 0;
 $4974 = $723 + 8 | 0;
 $4975 = $724 + 2 | 0;
 $4976 = $724 + 4 | 0;
 $4977 = $724 + 6 | 0;
 $4978 = $725 + 8 | 0;
 $4979 = $726 + 2 | 0;
 $4980 = $726 + 4 | 0;
 $4981 = $726 + 6 | 0;
 $4982 = $727 + 8 | 0;
 $4983 = $728 + 2 | 0;
 $4984 = $728 + 4 | 0;
 $4985 = $728 + 6 | 0;
 $4986 = $729 + 8 | 0;
 $4987 = $730 + 2 | 0;
 $4988 = $730 + 4 | 0;
 $4989 = $730 + 6 | 0;
 $4990 = $731 + 8 | 0;
 $4991 = $732 + 2 | 0;
 $4992 = $732 + 4 | 0;
 $4993 = $732 + 6 | 0;
 $4994 = $733 + 8 | 0;
 $4995 = $734 + 2 | 0;
 $4996 = $734 + 4 | 0;
 $4997 = $734 + 6 | 0;
 $4998 = $735 + 8 | 0;
 $4999 = $736 + 2 | 0;
 $5000 = $736 + 4 | 0;
 $5001 = $736 + 6 | 0;
 $5002 = $737 + 8 | 0;
 $5003 = $738 + 2 | 0;
 $5004 = $738 + 4 | 0;
 $5005 = $738 + 6 | 0;
 $5006 = $739 + 8 | 0;
 $5007 = $740 + 2 | 0;
 $5008 = $740 + 4 | 0;
 $5009 = $740 + 6 | 0;
 $5010 = $741 + 8 | 0;
 $5011 = $742 + 2 | 0;
 $5012 = $742 + 4 | 0;
 $5013 = $742 + 6 | 0;
 $5014 = $743 + 8 | 0;
 $5015 = $744 + 2 | 0;
 $5016 = $744 + 4 | 0;
 $5017 = $744 + 6 | 0;
 $5018 = $745 + 8 | 0;
 $5019 = $746 + 2 | 0;
 $5020 = $746 + 4 | 0;
 $5021 = $746 + 6 | 0;
 $5022 = $747 + 8 | 0;
 $5023 = $748 + 2 | 0;
 $5024 = $748 + 4 | 0;
 $5025 = $748 + 6 | 0;
 $5026 = $749 + 8 | 0;
 $5027 = $750 + 2 | 0;
 $5028 = $750 + 4 | 0;
 $5029 = $750 + 6 | 0;
 $5030 = $751 + 8 | 0;
 $5031 = $752 + 2 | 0;
 $5032 = $752 + 4 | 0;
 $5033 = $752 + 6 | 0;
 $5034 = $753 + 8 | 0;
 $5035 = $754 + 2 | 0;
 $5036 = $754 + 4 | 0;
 $5037 = $754 + 6 | 0;
 $5038 = $755 + 8 | 0;
 $5039 = $756 + 2 | 0;
 $5040 = $756 + 4 | 0;
 $5041 = $756 + 6 | 0;
 $5042 = $757 + 8 | 0;
 $5043 = $758 + 2 | 0;
 $5044 = $758 + 4 | 0;
 $5045 = $758 + 6 | 0;
 $5046 = $759 + 8 | 0;
 $5047 = $760 + 2 | 0;
 $5048 = $760 + 4 | 0;
 $5049 = $760 + 6 | 0;
 $5050 = $761 + 8 | 0;
 $5051 = $762 + 2 | 0;
 $5052 = $762 + 4 | 0;
 $5053 = $762 + 6 | 0;
 $5054 = $763 + 8 | 0;
 $5055 = $764 + 2 | 0;
 $5056 = $764 + 4 | 0;
 $5057 = $764 + 6 | 0;
 $5058 = $765 + 8 | 0;
 $5059 = $766 + 2 | 0;
 $5060 = $766 + 4 | 0;
 $5061 = $766 + 6 | 0;
 $5062 = $767 + 8 | 0;
 $5063 = $768 + 2 | 0;
 $5064 = $768 + 4 | 0;
 $5065 = $768 + 6 | 0;
 $5066 = $769 + 8 | 0;
 $5067 = $770 + 2 | 0;
 $5068 = $770 + 4 | 0;
 $5069 = $770 + 6 | 0;
 $5070 = $771 + 8 | 0;
 $5071 = $772 + 2 | 0;
 $5072 = $772 + 4 | 0;
 $5073 = $772 + 6 | 0;
 $5074 = $773 + 8 | 0;
 $5075 = $774 + 2 | 0;
 $5076 = $774 + 4 | 0;
 $5077 = $774 + 6 | 0;
 $5078 = $775 + 8 | 0;
 $5079 = $776 + 2 | 0;
 $5080 = $776 + 4 | 0;
 $5081 = $776 + 6 | 0;
 $5082 = $777 + 8 | 0;
 $5083 = $778 + 2 | 0;
 $5084 = $778 + 4 | 0;
 $5085 = $778 + 6 | 0;
 $5086 = $779 + 8 | 0;
 $5087 = $780 + 2 | 0;
 $5088 = $780 + 4 | 0;
 $5089 = $780 + 6 | 0;
 $5090 = $781 + 8 | 0;
 $5091 = $782 + 2 | 0;
 $5092 = $782 + 4 | 0;
 $5093 = $782 + 6 | 0;
 $5094 = $783 + 8 | 0;
 $5095 = $784 + 2 | 0;
 $5096 = $784 + 4 | 0;
 $5097 = $784 + 6 | 0;
 $5098 = $785 + 8 | 0;
 $5099 = $786 + 2 | 0;
 $5100 = $786 + 4 | 0;
 $5101 = $786 + 6 | 0;
 $5102 = $787 + 8 | 0;
 $5103 = $788 + 2 | 0;
 $5104 = $788 + 4 | 0;
 $5105 = $788 + 6 | 0;
 $5106 = $789 + 8 | 0;
 $5107 = $790 + 2 | 0;
 $5108 = $790 + 4 | 0;
 $5109 = $790 + 6 | 0;
 $5110 = $791 + 8 | 0;
 $5111 = $792 + 2 | 0;
 $5112 = $792 + 4 | 0;
 $5113 = $792 + 6 | 0;
 $5114 = $793 + 8 | 0;
 $5115 = $794 + 2 | 0;
 $5116 = $794 + 4 | 0;
 $5117 = $794 + 6 | 0;
 $5118 = $795 + 8 | 0;
 $5119 = $796 + 2 | 0;
 $5120 = $796 + 4 | 0;
 $5121 = $796 + 6 | 0;
 $5122 = $797 + 8 | 0;
 $5123 = $798 + 2 | 0;
 $5124 = $798 + 4 | 0;
 $5125 = $798 + 6 | 0;
 $5126 = $799 + 8 | 0;
 $5127 = $800 + 2 | 0;
 $5128 = $800 + 4 | 0;
 $5129 = $800 + 6 | 0;
 $5130 = $801 + 8 | 0;
 $5131 = $802 + 2 | 0;
 $5132 = $802 + 4 | 0;
 $5133 = $802 + 6 | 0;
 $5134 = $803 + 8 | 0;
 $5135 = $804 + 2 | 0;
 $5136 = $804 + 4 | 0;
 $5137 = $804 + 6 | 0;
 $5138 = $805 + 8 | 0;
 $5139 = $806 + 2 | 0;
 $5140 = $806 + 4 | 0;
 $5141 = $806 + 6 | 0;
 $5142 = $807 + 8 | 0;
 $5143 = $808 + 2 | 0;
 $5144 = $808 + 4 | 0;
 $5145 = $808 + 6 | 0;
 $5146 = $809 + 8 | 0;
 $5147 = $810 + 2 | 0;
 $5148 = $810 + 4 | 0;
 $5149 = $810 + 6 | 0;
 $5150 = $811 + 8 | 0;
 $5151 = $812 + 2 | 0;
 $5152 = $812 + 4 | 0;
 $5153 = $812 + 6 | 0;
 $5154 = $813 + 8 | 0;
 $5155 = $814 + 2 | 0;
 $5156 = $814 + 4 | 0;
 $5157 = $814 + 6 | 0;
 $5158 = $815 + 8 | 0;
 $5159 = $816 + 2 | 0;
 $5160 = $816 + 4 | 0;
 $5161 = $816 + 6 | 0;
 $5162 = $817 + 8 | 0;
 $5163 = $818 + 2 | 0;
 $5164 = $818 + 4 | 0;
 $5165 = $818 + 6 | 0;
 $5166 = $819 + 8 | 0;
 $5167 = $820 + 2 | 0;
 $5168 = $820 + 4 | 0;
 $5169 = $820 + 6 | 0;
 $5170 = $821 + 8 | 0;
 $5171 = $822 + 2 | 0;
 $5172 = $822 + 4 | 0;
 $5173 = $822 + 6 | 0;
 $5174 = $823 + 8 | 0;
 $5175 = $824 + 2 | 0;
 $5176 = $824 + 4 | 0;
 $5177 = $824 + 6 | 0;
 $5178 = $825 + 8 | 0;
 $5179 = $826 + 2 | 0;
 $5180 = $826 + 4 | 0;
 $5181 = $826 + 6 | 0;
 $5182 = $0 + 2 | 0;
 $5183 = $0 + 4 | 0;
 $5184 = $0 + 6 | 0;
 $5185 = $0 + 2 | 0;
 $5186 = $0 + 4 | 0;
 $5187 = $0 + 6 | 0;
 $5188 = $0 + 2 | 0;
 $5189 = $0 + 4 | 0;
 $5190 = $0 + 6 | 0;
 $5191 = $0 + 2 | 0;
 $5192 = $0 + 4 | 0;
 $5193 = $0 + 6 | 0;
 $5194 = $0 + 2 | 0;
 $5195 = $0 + 4 | 0;
 $5196 = $0 + 6 | 0;
 $5197 = $0 + 2 | 0;
 $5198 = $0 + 4 | 0;
 $5199 = $0 + 6 | 0;
 $5200 = $0 + 2 | 0;
 $5201 = $0 + 4 | 0;
 $5202 = $0 + 6 | 0;
 $5203 = $0 + 2 | 0;
 $5204 = $0 + 4 | 0;
 $5205 = $0 + 6 | 0;
 $5206 = $0 + 2 | 0;
 $5207 = $0 + 4 | 0;
 $5208 = $0 + 6 | 0;
 $5209 = $0 + 2 | 0;
 $5210 = $0 + 4 | 0;
 $5211 = $0 + 6 | 0;
 $5212 = $0 + 2 | 0;
 $5213 = $0 + 4 | 0;
 $5214 = $0 + 6 | 0;
 $5215 = $0 + 2 | 0;
 $5216 = $0 + 4 | 0;
 $5217 = $0 + 6 | 0;
 $5218 = $0 + 2 | 0;
 $5219 = $0 + 4 | 0;
 $5220 = $0 + 6 | 0;
 $5221 = $0 + 2 | 0;
 $5222 = $0 + 4 | 0;
 $5223 = $0 + 6 | 0;
 $5224 = $0 + 2 | 0;
 $5225 = $0 + 4 | 0;
 $5226 = $0 + 6 | 0;
 $5227 = $0 + 2 | 0;
 $5228 = $0 + 4 | 0;
 $5229 = $0 + 6 | 0;
 $5230 = $0 + 2 | 0;
 $5231 = $0 + 4 | 0;
 $5232 = $0 + 6 | 0;
 $5233 = $0 + 2 | 0;
 $5234 = $0 + 4 | 0;
 $5235 = $0 + 6 | 0;
 $5236 = $0 + 2 | 0;
 $5237 = $0 + 4 | 0;
 $5238 = $0 + 6 | 0;
 $5239 = $0 + 2 | 0;
 $5240 = $0 + 4 | 0;
 $5241 = $0 + 6 | 0;
 $5242 = $0 + 2 | 0;
 $5243 = $0 + 4 | 0;
 $5244 = $0 + 6 | 0;
 $5245 = $0 + 2 | 0;
 $5246 = $0 + 4 | 0;
 $5247 = $0 + 6 | 0;
 $5248 = $0 + 2 | 0;
 $5249 = $0 + 4 | 0;
 $5250 = $0 + 6 | 0;
 $5251 = $850 + 8 | 0;
 $5252 = $851 + 2 | 0;
 $5253 = $851 + 4 | 0;
 $5254 = $851 + 6 | 0;
 $5255 = $852 + 8 | 0;
 $5256 = $853 + 2 | 0;
 $5257 = $853 + 4 | 0;
 $5258 = $853 + 6 | 0;
 $5259 = $854 + 8 | 0;
 $5260 = $855 + 2 | 0;
 $5261 = $855 + 4 | 0;
 $5262 = $855 + 6 | 0;
 $5263 = $0 + 2 | 0;
 $5264 = $0 + 4 | 0;
 $5265 = $0 + 6 | 0;
 $5266 = $0 + 2 | 0;
 $5267 = $0 + 4 | 0;
 $5268 = $0 + 6 | 0;
 $5269 = $858 + 8 | 0;
 $5270 = $859 + 2 | 0;
 $5271 = $859 + 4 | 0;
 $5272 = $859 + 6 | 0;
 $5273 = $860 + 8 | 0;
 $5274 = $860 + 12 | 0;
 $5275 = $860 + 16 | 0;
 $5276 = $860 + 20 | 0;
 $5277 = $860 + 21 | 0;
 $5278 = $860 + 22 | 0;
 $5279 = $860 + 23 | 0;
 $5280 = $860 + 24 | 0;
 $5281 = $861 + 2 | 0;
 $5282 = $861 + 4 | 0;
 $5283 = $861 + 6 | 0;
 $5284 = $862 + 8 | 0;
 $5285 = $863 + 2 | 0;
 $5286 = $863 + 4 | 0;
 $5287 = $863 + 6 | 0;
 $5288 = $864 + 8 | 0;
 $5289 = $865 + 2 | 0;
 $5290 = $865 + 4 | 0;
 $5291 = $865 + 6 | 0;
 $5292 = $866 + 8 | 0;
 $5293 = $867 + 2 | 0;
 $5294 = $867 + 4 | 0;
 $5295 = $867 + 6 | 0;
 $5296 = $868 + 8 | 0;
 $5297 = $869 + 2 | 0;
 $5298 = $869 + 4 | 0;
 $5299 = $869 + 6 | 0;
 $5300 = $870 + 8 | 0;
 $5301 = $871 + 2 | 0;
 $5302 = $871 + 4 | 0;
 $5303 = $871 + 6 | 0;
 $5304 = $872 + 8 | 0;
 $5305 = $873 + 2 | 0;
 $5306 = $873 + 4 | 0;
 $5307 = $873 + 6 | 0;
 $5308 = $874 + 8 | 0;
 $5309 = $875 + 2 | 0;
 $5310 = $875 + 4 | 0;
 $5311 = $875 + 6 | 0;
 $5312 = $876 + 8 | 0;
 $5313 = $877 + 2 | 0;
 $5314 = $877 + 4 | 0;
 $5315 = $877 + 6 | 0;
 $5316 = $878 + 8 | 0;
 $5317 = $879 + 2 | 0;
 $5318 = $879 + 4 | 0;
 $5319 = $879 + 6 | 0;
 $5320 = $880 + 8 | 0;
 $5321 = $881 + 2 | 0;
 $5322 = $881 + 4 | 0;
 $5323 = $881 + 6 | 0;
 $5324 = $882 + 8 | 0;
 $5325 = $883 + 2 | 0;
 $5326 = $883 + 4 | 0;
 $5327 = $883 + 6 | 0;
 $5328 = $884 + 8 | 0;
 $5329 = $885 + 2 | 0;
 $5330 = $885 + 4 | 0;
 $5331 = $885 + 6 | 0;
 $5332 = $886 + 8 | 0;
 $5333 = $887 + 2 | 0;
 $5334 = $887 + 4 | 0;
 $5335 = $887 + 6 | 0;
 $5336 = $888 + 8 | 0;
 $5337 = $889 + 2 | 0;
 $5338 = $889 + 4 | 0;
 $5339 = $889 + 6 | 0;
 $5340 = $890 + 8 | 0;
 $5341 = $891 + 2 | 0;
 $5342 = $891 + 4 | 0;
 $5343 = $891 + 6 | 0;
 $5344 = $892 + 8 | 0;
 $5345 = $893 + 2 | 0;
 $5346 = $893 + 4 | 0;
 $5347 = $893 + 6 | 0;
 $5348 = $894 + 8 | 0;
 $5349 = $895 + 2 | 0;
 $5350 = $895 + 4 | 0;
 $5351 = $895 + 6 | 0;
 $5352 = $896 + 8 | 0;
 $5353 = $897 + 2 | 0;
 $5354 = $897 + 4 | 0;
 $5355 = $897 + 6 | 0;
 $5356 = $898 + 8 | 0;
 $5357 = $899 + 2 | 0;
 $5358 = $899 + 4 | 0;
 $5359 = $899 + 6 | 0;
 $5360 = $900 + 8 | 0;
 $5361 = $901 + 2 | 0;
 $5362 = $901 + 4 | 0;
 $5363 = $901 + 6 | 0;
 $5364 = $902 + 8 | 0;
 $5365 = $903 + 2 | 0;
 $5366 = $903 + 4 | 0;
 $5367 = $903 + 6 | 0;
 $5368 = $904 + 8 | 0;
 $5369 = $905 + 2 | 0;
 $5370 = $905 + 4 | 0;
 $5371 = $905 + 6 | 0;
 $5372 = $906 + 8 | 0;
 $5373 = $906 + 12 | 0;
 $5374 = $906 + 16 | 0;
 $5375 = $906 + 20 | 0;
 $5376 = $906 + 21 | 0;
 $5377 = $906 + 22 | 0;
 $5378 = $906 + 23 | 0;
 $5379 = $906 + 24 | 0;
 $5380 = $907 + 2 | 0;
 $5381 = $907 + 4 | 0;
 $5382 = $907 + 6 | 0;
 $5383 = $908 + 8 | 0;
 $5384 = $909 + 2 | 0;
 $5385 = $909 + 4 | 0;
 $5386 = $909 + 6 | 0;
 $5387 = $910 + 8 | 0;
 $5388 = $911 + 2 | 0;
 $5389 = $911 + 4 | 0;
 $5390 = $911 + 6 | 0;
 $5391 = $912 + 8 | 0;
 $5392 = $913 + 2 | 0;
 $5393 = $913 + 4 | 0;
 $5394 = $913 + 6 | 0;
 $5395 = $914 + 8 | 0;
 $5396 = $915 + 2 | 0;
 $5397 = $915 + 4 | 0;
 $5398 = $915 + 6 | 0;
 $5399 = $916 + 8 | 0;
 $5400 = $917 + 2 | 0;
 $5401 = $917 + 4 | 0;
 $5402 = $917 + 6 | 0;
 $5403 = $918 + 8 | 0;
 $5404 = $919 + 2 | 0;
 $5405 = $919 + 4 | 0;
 $5406 = $919 + 6 | 0;
 $5407 = $920 + 8 | 0;
 $5408 = $921 + 2 | 0;
 $5409 = $921 + 4 | 0;
 $5410 = $921 + 6 | 0;
 $5411 = $922 + 8 | 0;
 $5412 = $923 + 2 | 0;
 $5413 = $923 + 4 | 0;
 $5414 = $923 + 6 | 0;
 $5415 = $924 + 8 | 0;
 $5416 = $925 + 2 | 0;
 $5417 = $925 + 4 | 0;
 $5418 = $925 + 6 | 0;
 $5419 = $926 + 8 | 0;
 $5420 = $927 + 2 | 0;
 $5421 = $927 + 4 | 0;
 $5422 = $927 + 6 | 0;
 $5423 = $928 + 8 | 0;
 $5424 = $929 + 2 | 0;
 $5425 = $929 + 4 | 0;
 $5426 = $929 + 6 | 0;
 $5427 = $930 + 8 | 0;
 $5428 = $931 + 2 | 0;
 $5429 = $931 + 4 | 0;
 $5430 = $931 + 6 | 0;
 $5431 = $932 + 8 | 0;
 $5432 = $933 + 2 | 0;
 $5433 = $933 + 4 | 0;
 $5434 = $933 + 6 | 0;
 $5435 = $934 + 8 | 0;
 $5436 = $935 + 2 | 0;
 $5437 = $935 + 4 | 0;
 $5438 = $935 + 6 | 0;
 $5439 = $936 + 8 | 0;
 $5440 = $937 + 2 | 0;
 $5441 = $937 + 4 | 0;
 $5442 = $937 + 6 | 0;
 $5443 = $938 + 8 | 0;
 $5444 = $939 + 2 | 0;
 $5445 = $939 + 4 | 0;
 $5446 = $939 + 6 | 0;
 $5447 = $940 + 8 | 0;
 $5448 = $941 + 2 | 0;
 $5449 = $941 + 4 | 0;
 $5450 = $941 + 6 | 0;
 $5451 = $942 + 8 | 0;
 $5452 = $943 + 2 | 0;
 $5453 = $943 + 4 | 0;
 $5454 = $943 + 6 | 0;
 $5455 = $944 + 8 | 0;
 $5456 = $945 + 2 | 0;
 $5457 = $945 + 4 | 0;
 $5458 = $945 + 6 | 0;
 $5459 = $946 + 8 | 0;
 $5460 = $947 + 2 | 0;
 $5461 = $947 + 4 | 0;
 $5462 = $947 + 6 | 0;
 $5463 = $948 + 8 | 0;
 $5464 = $949 + 2 | 0;
 $5465 = $949 + 4 | 0;
 $5466 = $949 + 6 | 0;
 $5467 = $950 + 8 | 0;
 $5468 = $951 + 2 | 0;
 $5469 = $951 + 4 | 0;
 $5470 = $951 + 6 | 0;
 $5471 = $952 + 8 | 0;
 $5472 = $953 + 2 | 0;
 $5473 = $953 + 4 | 0;
 $5474 = $953 + 6 | 0;
 $5475 = $954 + 8 | 0;
 $5476 = $955 + 2 | 0;
 $5477 = $955 + 4 | 0;
 $5478 = $955 + 6 | 0;
 $5479 = $956 + 8 | 0;
 $5480 = $957 + 2 | 0;
 $5481 = $957 + 4 | 0;
 $5482 = $957 + 6 | 0;
 $5483 = $958 + 8 | 0;
 $5484 = $959 + 2 | 0;
 $5485 = $959 + 4 | 0;
 $5486 = $959 + 6 | 0;
 $5487 = $960 + 8 | 0;
 $5488 = $961 + 2 | 0;
 $5489 = $961 + 4 | 0;
 $5490 = $961 + 6 | 0;
 $5491 = $962 + 8 | 0;
 $5492 = $963 + 2 | 0;
 $5493 = $963 + 4 | 0;
 $5494 = $963 + 6 | 0;
 $5495 = $964 + 8 | 0;
 $5496 = $965 + 2 | 0;
 $5497 = $965 + 4 | 0;
 $5498 = $965 + 6 | 0;
 $5499 = $966 + 8 | 0;
 $5500 = $967 + 2 | 0;
 $5501 = $967 + 4 | 0;
 $5502 = $967 + 6 | 0;
 $5503 = $968 + 8 | 0;
 $5504 = $969 + 2 | 0;
 $5505 = $969 + 4 | 0;
 $5506 = $969 + 6 | 0;
 $5507 = $970 + 8 | 0;
 $5508 = $971 + 2 | 0;
 $5509 = $971 + 4 | 0;
 $5510 = $971 + 6 | 0;
 $5511 = $972 + 8 | 0;
 $5512 = $973 + 2 | 0;
 $5513 = $973 + 4 | 0;
 $5514 = $973 + 6 | 0;
 $5515 = $974 + 8 | 0;
 $5516 = $975 + 2 | 0;
 $5517 = $975 + 4 | 0;
 $5518 = $975 + 6 | 0;
 $5519 = $976 + 8 | 0;
 $5520 = $977 + 2 | 0;
 $5521 = $977 + 4 | 0;
 $5522 = $977 + 6 | 0;
 $5523 = $978 + 8 | 0;
 $5524 = $979 + 2 | 0;
 $5525 = $979 + 4 | 0;
 $5526 = $979 + 6 | 0;
 $5527 = $980 + 8 | 0;
 $5528 = $981 + 2 | 0;
 $5529 = $981 + 4 | 0;
 $5530 = $981 + 6 | 0;
 $5531 = $982 + 8 | 0;
 $5532 = $983 + 2 | 0;
 $5533 = $983 + 4 | 0;
 $5534 = $983 + 6 | 0;
 $5535 = $984 + 8 | 0;
 $5536 = $985 + 2 | 0;
 $5537 = $985 + 4 | 0;
 $5538 = $985 + 6 | 0;
 $5539 = $986 + 8 | 0;
 $5540 = $987 + 2 | 0;
 $5541 = $987 + 4 | 0;
 $5542 = $987 + 6 | 0;
 $5543 = $988 + 8 | 0;
 $5544 = $989 + 2 | 0;
 $5545 = $989 + 4 | 0;
 $5546 = $989 + 6 | 0;
 $5547 = $990 + 8 | 0;
 $5548 = $991 + 2 | 0;
 $5549 = $991 + 4 | 0;
 $5550 = $991 + 6 | 0;
 $5551 = $992 + 8 | 0;
 $5552 = $993 + 2 | 0;
 $5553 = $993 + 4 | 0;
 $5554 = $993 + 6 | 0;
 $5555 = $994 + 8 | 0;
 $5556 = $995 + 2 | 0;
 $5557 = $995 + 4 | 0;
 $5558 = $995 + 6 | 0;
 $5559 = $996 + 8 | 0;
 $5560 = $997 + 2 | 0;
 $5561 = $997 + 4 | 0;
 $5562 = $997 + 6 | 0;
 $5563 = $998 + 8 | 0;
 $5564 = $999 + 2 | 0;
 $5565 = $999 + 4 | 0;
 $5566 = $999 + 6 | 0;
 $5567 = $1000 + 8 | 0;
 $5568 = $1001 + 2 | 0;
 $5569 = $1001 + 4 | 0;
 $5570 = $1001 + 6 | 0;
 $5571 = $1002 + 8 | 0;
 $5572 = $1003 + 2 | 0;
 $5573 = $1003 + 4 | 0;
 $5574 = $1003 + 6 | 0;
 $5575 = $1004 + 8 | 0;
 $5576 = $1005 + 2 | 0;
 $5577 = $1005 + 4 | 0;
 $5578 = $1005 + 6 | 0;
 $5579 = $1006 + 8 | 0;
 $5580 = $1007 + 2 | 0;
 $5581 = $1007 + 4 | 0;
 $5582 = $1007 + 6 | 0;
 $5583 = $1008 + 8 | 0;
 $5584 = $1009 + 2 | 0;
 $5585 = $1009 + 4 | 0;
 $5586 = $1009 + 6 | 0;
 $5587 = $1010 + 8 | 0;
 $5588 = $1011 + 2 | 0;
 $5589 = $1011 + 4 | 0;
 $5590 = $1011 + 6 | 0;
 $5591 = $1012 + 8 | 0;
 $5592 = $1013 + 2 | 0;
 $5593 = $1013 + 4 | 0;
 $5594 = $1013 + 6 | 0;
 $5595 = $1014 + 8 | 0;
 $5596 = $1015 + 2 | 0;
 $5597 = $1015 + 4 | 0;
 $5598 = $1015 + 6 | 0;
 $5599 = $1016 + 8 | 0;
 $5600 = $1017 + 2 | 0;
 $5601 = $1017 + 4 | 0;
 $5602 = $1017 + 6 | 0;
 $5603 = $1018 + 8 | 0;
 $5604 = $1019 + 2 | 0;
 $5605 = $1019 + 4 | 0;
 $5606 = $1019 + 6 | 0;
 $5607 = $1020 + 8 | 0;
 $5608 = $1021 + 2 | 0;
 $5609 = $1021 + 4 | 0;
 $5610 = $1021 + 6 | 0;
 $5611 = $1022 + 8 | 0;
 $5612 = $1023 + 2 | 0;
 $5613 = $1023 + 4 | 0;
 $5614 = $1023 + 6 | 0;
 $5615 = $1024 + 8 | 0;
 $5616 = $1025 + 2 | 0;
 $5617 = $1025 + 4 | 0;
 $5618 = $1025 + 6 | 0;
 $5619 = $1026 + 8 | 0;
 $5620 = $1027 + 2 | 0;
 $5621 = $1027 + 4 | 0;
 $5622 = $1027 + 6 | 0;
 $5623 = $1028 + 8 | 0;
 $5624 = $1029 + 2 | 0;
 $5625 = $1029 + 4 | 0;
 $5626 = $1029 + 6 | 0;
 $5627 = $1030 + 8 | 0;
 $5628 = $1031 + 2 | 0;
 $5629 = $1031 + 4 | 0;
 $5630 = $1031 + 6 | 0;
 $5631 = $1032 + 8 | 0;
 $5632 = $1033 + 2 | 0;
 $5633 = $1033 + 4 | 0;
 $5634 = $1033 + 6 | 0;
 $5635 = $1034 + 8 | 0;
 $5636 = $1035 + 2 | 0;
 $5637 = $1035 + 4 | 0;
 $5638 = $1035 + 6 | 0;
 $5639 = $1036 + 8 | 0;
 $5640 = $1037 + 2 | 0;
 $5641 = $1037 + 4 | 0;
 $5642 = $1037 + 6 | 0;
 $5643 = $1038 + 8 | 0;
 $5644 = $1039 + 2 | 0;
 $5645 = $1039 + 4 | 0;
 $5646 = $1039 + 6 | 0;
 $5647 = $1040 + 8 | 0;
 $5648 = $1041 + 2 | 0;
 $5649 = $1041 + 4 | 0;
 $5650 = $1041 + 6 | 0;
 $5651 = $1042 + 8 | 0;
 $5652 = $1043 + 2 | 0;
 $5653 = $1043 + 4 | 0;
 $5654 = $1043 + 6 | 0;
 $5655 = $1044 + 8 | 0;
 $5656 = $1045 + 2 | 0;
 $5657 = $1045 + 4 | 0;
 $5658 = $1045 + 6 | 0;
 $5659 = $1046 + 8 | 0;
 $5660 = $1047 + 2 | 0;
 $5661 = $1047 + 4 | 0;
 $5662 = $1047 + 6 | 0;
 $5663 = $1048 + 8 | 0;
 $5664 = $1049 + 2 | 0;
 $5665 = $1049 + 4 | 0;
 $5666 = $1049 + 6 | 0;
 $5667 = $1050 + 8 | 0;
 $5668 = $1051 + 2 | 0;
 $5669 = $1051 + 4 | 0;
 $5670 = $1051 + 6 | 0;
 $5671 = $1052 + 8 | 0;
 $5672 = $1053 + 2 | 0;
 $5673 = $1053 + 4 | 0;
 $5674 = $1053 + 6 | 0;
 $5675 = $1054 + 8 | 0;
 $5676 = $1055 + 2 | 0;
 $5677 = $1055 + 4 | 0;
 $5678 = $1055 + 6 | 0;
 $5679 = $1056 + 8 | 0;
 $5680 = $1057 + 2 | 0;
 $5681 = $1057 + 4 | 0;
 $5682 = $1057 + 6 | 0;
 $5683 = $1058 + 8 | 0;
 $5684 = $1059 + 2 | 0;
 $5685 = $1059 + 4 | 0;
 $5686 = $1059 + 6 | 0;
 $5687 = $1060 + 8 | 0;
 $5688 = $1061 + 2 | 0;
 $5689 = $1061 + 4 | 0;
 $5690 = $1061 + 6 | 0;
 $5691 = $1062 + 8 | 0;
 $5692 = $1063 + 2 | 0;
 $5693 = $1063 + 4 | 0;
 $5694 = $1063 + 6 | 0;
 $5695 = $1064 + 8 | 0;
 $5696 = $1065 + 2 | 0;
 $5697 = $1065 + 4 | 0;
 $5698 = $1065 + 6 | 0;
 $5699 = $1066 + 8 | 0;
 $5700 = $1067 + 2 | 0;
 $5701 = $1067 + 4 | 0;
 $5702 = $1067 + 6 | 0;
 $5703 = $1068 + 8 | 0;
 $5704 = $1069 + 2 | 0;
 $5705 = $1069 + 4 | 0;
 $5706 = $1069 + 6 | 0;
 $5707 = $1070 + 8 | 0;
 $5708 = $1071 + 2 | 0;
 $5709 = $1071 + 4 | 0;
 $5710 = $1071 + 6 | 0;
 $5711 = $1072 + 8 | 0;
 $5712 = $1073 + 2 | 0;
 $5713 = $1073 + 4 | 0;
 $5714 = $1073 + 6 | 0;
 $5715 = $1074 + 8 | 0;
 $5716 = $1075 + 2 | 0;
 $5717 = $1075 + 4 | 0;
 $5718 = $1075 + 6 | 0;
 $5719 = $1076 + 8 | 0;
 $5720 = $1077 + 2 | 0;
 $5721 = $1077 + 4 | 0;
 $5722 = $1077 + 6 | 0;
 $5723 = $1078 + 8 | 0;
 $5724 = $1079 + 2 | 0;
 $5725 = $1079 + 4 | 0;
 $5726 = $1079 + 6 | 0;
 $5727 = $1080 + 8 | 0;
 $5728 = $1081 + 2 | 0;
 $5729 = $1081 + 4 | 0;
 $5730 = $1081 + 6 | 0;
 $5731 = $1082 + 8 | 0;
 $5732 = $1083 + 2 | 0;
 $5733 = $1083 + 4 | 0;
 $5734 = $1083 + 6 | 0;
 $5735 = $1084 + 8 | 0;
 $5736 = $1085 + 2 | 0;
 $5737 = $1085 + 4 | 0;
 $5738 = $1085 + 6 | 0;
 $5739 = $1086 + 8 | 0;
 $5740 = $1087 + 2 | 0;
 $5741 = $1087 + 4 | 0;
 $5742 = $1087 + 6 | 0;
 $5743 = $1088 + 8 | 0;
 $5744 = $1089 + 2 | 0;
 $5745 = $1089 + 4 | 0;
 $5746 = $1089 + 6 | 0;
 $5747 = $1090 + 8 | 0;
 $5748 = $1091 + 2 | 0;
 $5749 = $1091 + 4 | 0;
 $5750 = $1091 + 6 | 0;
 $5751 = $1092 + 8 | 0;
 $5752 = $1093 + 2 | 0;
 $5753 = $1093 + 4 | 0;
 $5754 = $1093 + 6 | 0;
 $5755 = $1094 + 8 | 0;
 $5756 = $1095 + 2 | 0;
 $5757 = $1095 + 4 | 0;
 $5758 = $1095 + 6 | 0;
 $5759 = $1096 + 8 | 0;
 $5760 = $1097 + 2 | 0;
 $5761 = $1097 + 4 | 0;
 $5762 = $1097 + 6 | 0;
 $5763 = $1098 + 8 | 0;
 $5764 = $1099 + 2 | 0;
 $5765 = $1099 + 4 | 0;
 $5766 = $1099 + 6 | 0;
 $5767 = $1100 + 8 | 0;
 $5768 = $1101 + 2 | 0;
 $5769 = $1101 + 4 | 0;
 $5770 = $1101 + 6 | 0;
 $5771 = $1102 + 8 | 0;
 $5772 = $1103 + 2 | 0;
 $5773 = $1103 + 4 | 0;
 $5774 = $1103 + 6 | 0;
 $5775 = $1104 + 8 | 0;
 $5776 = $1105 + 2 | 0;
 $5777 = $1105 + 4 | 0;
 $5778 = $1105 + 6 | 0;
 $5779 = $1106 + 8 | 0;
 $5780 = $1107 + 2 | 0;
 $5781 = $1107 + 4 | 0;
 $5782 = $1107 + 6 | 0;
 $5783 = $1108 + 8 | 0;
 $5784 = $1109 + 2 | 0;
 $5785 = $1109 + 4 | 0;
 $5786 = $1109 + 6 | 0;
 $5787 = $1110 + 8 | 0;
 $5788 = $1111 + 2 | 0;
 $5789 = $1111 + 4 | 0;
 $5790 = $1111 + 6 | 0;
 $5791 = $1112 + 8 | 0;
 $5792 = $1113 + 2 | 0;
 $5793 = $1113 + 4 | 0;
 $5794 = $1113 + 6 | 0;
 $5795 = $1114 + 8 | 0;
 $5796 = $1115 + 2 | 0;
 $5797 = $1115 + 4 | 0;
 $5798 = $1115 + 6 | 0;
 $5799 = $1116 + 8 | 0;
 $5800 = $1117 + 2 | 0;
 $5801 = $1117 + 4 | 0;
 $5802 = $1117 + 6 | 0;
 $5803 = $1118 + 8 | 0;
 $5804 = $1119 + 2 | 0;
 $5805 = $1119 + 4 | 0;
 $5806 = $1119 + 6 | 0;
 $5807 = $1120 + 8 | 0;
 $5808 = $1121 + 2 | 0;
 $5809 = $1121 + 4 | 0;
 $5810 = $1121 + 6 | 0;
 $5811 = $1122 + 8 | 0;
 $5812 = $1123 + 2 | 0;
 $5813 = $1123 + 4 | 0;
 $5814 = $1123 + 6 | 0;
 $5815 = $1124 + 8 | 0;
 $5816 = $1125 + 2 | 0;
 $5817 = $1125 + 4 | 0;
 $5818 = $1125 + 6 | 0;
 $5819 = $1126 + 8 | 0;
 $5820 = $1127 + 2 | 0;
 $5821 = $1127 + 4 | 0;
 $5822 = $1127 + 6 | 0;
 $5823 = $1128 + 8 | 0;
 $5824 = $1129 + 2 | 0;
 $5825 = $1129 + 4 | 0;
 $5826 = $1129 + 6 | 0;
 $5827 = $1130 + 8 | 0;
 $5828 = $1131 + 2 | 0;
 $5829 = $1131 + 4 | 0;
 $5830 = $1131 + 6 | 0;
 $5831 = $1132 + 8 | 0;
 $5832 = $1133 + 2 | 0;
 $5833 = $1133 + 4 | 0;
 $5834 = $1133 + 6 | 0;
 $5835 = $1134 + 8 | 0;
 $5836 = $1135 + 2 | 0;
 $5837 = $1135 + 4 | 0;
 $5838 = $1135 + 6 | 0;
 $5839 = $1136 + 8 | 0;
 $5840 = $1137 + 2 | 0;
 $5841 = $1137 + 4 | 0;
 $5842 = $1137 + 6 | 0;
 $5843 = $1138 + 8 | 0;
 $5844 = $1139 + 2 | 0;
 $5845 = $1139 + 4 | 0;
 $5846 = $1139 + 6 | 0;
 $5847 = $1140 + 8 | 0;
 $5848 = $1141 + 2 | 0;
 $5849 = $1141 + 4 | 0;
 $5850 = $1141 + 6 | 0;
 $5851 = $1142 + 8 | 0;
 $5852 = $1143 + 2 | 0;
 $5853 = $1143 + 4 | 0;
 $5854 = $1143 + 6 | 0;
 $5855 = $1144 + 8 | 0;
 $5856 = $1145 + 2 | 0;
 $5857 = $1145 + 4 | 0;
 $5858 = $1145 + 6 | 0;
 $5859 = $1146 + 8 | 0;
 $5860 = $1147 + 2 | 0;
 $5861 = $1147 + 4 | 0;
 $5862 = $1147 + 6 | 0;
 $5863 = $1148 + 8 | 0;
 $5864 = $1149 + 2 | 0;
 $5865 = $1149 + 4 | 0;
 $5866 = $1149 + 6 | 0;
 $5867 = $1150 + 8 | 0;
 $5868 = $1151 + 2 | 0;
 $5869 = $1151 + 4 | 0;
 $5870 = $1151 + 6 | 0;
 $5871 = $1152 + 8 | 0;
 $5872 = $1153 + 2 | 0;
 $5873 = $1153 + 4 | 0;
 $5874 = $1153 + 6 | 0;
 $5875 = $1154 + 8 | 0;
 $5876 = $1155 + 2 | 0;
 $5877 = $1155 + 4 | 0;
 $5878 = $1155 + 6 | 0;
 $5879 = $1156 + 8 | 0;
 $5880 = $1157 + 2 | 0;
 $5881 = $1157 + 4 | 0;
 $5882 = $1157 + 6 | 0;
 $5883 = $1158 + 8 | 0;
 $5884 = $1159 + 2 | 0;
 $5885 = $1159 + 4 | 0;
 $5886 = $1159 + 6 | 0;
 $5887 = $1160 + 8 | 0;
 $5888 = $1161 + 2 | 0;
 $5889 = $1161 + 4 | 0;
 $5890 = $1161 + 6 | 0;
 $5891 = $1162 + 8 | 0;
 $5892 = $1163 + 2 | 0;
 $5893 = $1163 + 4 | 0;
 $5894 = $1163 + 6 | 0;
 $5895 = $1164 + 8 | 0;
 $5896 = $1165 + 2 | 0;
 $5897 = $1165 + 4 | 0;
 $5898 = $1165 + 6 | 0;
 $5899 = $1166 + 8 | 0;
 $5900 = $1167 + 2 | 0;
 $5901 = $1167 + 4 | 0;
 $5902 = $1167 + 6 | 0;
 $5903 = $1168 + 8 | 0;
 $5904 = $1169 + 2 | 0;
 $5905 = $1169 + 4 | 0;
 $5906 = $1169 + 6 | 0;
 $5907 = $1170 + 8 | 0;
 $5908 = $1171 + 2 | 0;
 $5909 = $1171 + 4 | 0;
 $5910 = $1171 + 6 | 0;
 $5911 = $1172 + 8 | 0;
 $5912 = $1173 + 2 | 0;
 $5913 = $1173 + 4 | 0;
 $5914 = $1173 + 6 | 0;
 $5915 = $1174 + 8 | 0;
 $5916 = $1175 + 2 | 0;
 $5917 = $1175 + 4 | 0;
 $5918 = $1175 + 6 | 0;
 $5919 = $1176 + 8 | 0;
 $5920 = $1177 + 2 | 0;
 $5921 = $1177 + 4 | 0;
 $5922 = $1177 + 6 | 0;
 $5923 = $1178 + 8 | 0;
 $5924 = $1179 + 2 | 0;
 $5925 = $1179 + 4 | 0;
 $5926 = $1179 + 6 | 0;
 $5927 = $1180 + 8 | 0;
 $5928 = $1181 + 2 | 0;
 $5929 = $1181 + 4 | 0;
 $5930 = $1181 + 6 | 0;
 $5931 = $1182 + 8 | 0;
 $5932 = $1183 + 2 | 0;
 $5933 = $1183 + 4 | 0;
 $5934 = $1183 + 6 | 0;
 $5935 = $1184 + 8 | 0;
 $5936 = $1185 + 2 | 0;
 $5937 = $1185 + 4 | 0;
 $5938 = $1185 + 6 | 0;
 $5939 = $1186 + 8 | 0;
 $5940 = $1187 + 2 | 0;
 $5941 = $1187 + 4 | 0;
 $5942 = $1187 + 6 | 0;
 $5943 = $1188 + 8 | 0;
 $5944 = $1189 + 2 | 0;
 $5945 = $1189 + 4 | 0;
 $5946 = $1189 + 6 | 0;
 $5947 = $1190 + 8 | 0;
 $5948 = $1191 + 2 | 0;
 $5949 = $1191 + 4 | 0;
 $5950 = $1191 + 6 | 0;
 $5951 = $1192 + 8 | 0;
 $5952 = $1193 + 2 | 0;
 $5953 = $1193 + 4 | 0;
 $5954 = $1193 + 6 | 0;
 $5955 = $1194 + 8 | 0;
 $5956 = $1195 + 2 | 0;
 $5957 = $1195 + 4 | 0;
 $5958 = $1195 + 6 | 0;
 $5959 = $1196 + 8 | 0;
 $5960 = $1197 + 2 | 0;
 $5961 = $1197 + 4 | 0;
 $5962 = $1197 + 6 | 0;
 $5963 = $1198 + 8 | 0;
 $5964 = $1199 + 2 | 0;
 $5965 = $1199 + 4 | 0;
 $5966 = $1199 + 6 | 0;
 $5967 = $1200 + 8 | 0;
 $5968 = $1201 + 2 | 0;
 $5969 = $1201 + 4 | 0;
 $5970 = $1201 + 6 | 0;
 $5971 = $1202 + 8 | 0;
 $5972 = $1203 + 2 | 0;
 $5973 = $1203 + 4 | 0;
 $5974 = $1203 + 6 | 0;
 $5975 = $1204 + 8 | 0;
 $5976 = $1205 + 2 | 0;
 $5977 = $1205 + 4 | 0;
 $5978 = $1205 + 6 | 0;
 $5979 = $1206 + 8 | 0;
 $5980 = $1207 + 2 | 0;
 $5981 = $1207 + 4 | 0;
 $5982 = $1207 + 6 | 0;
 $5983 = $1208 + 8 | 0;
 $5984 = $1209 + 2 | 0;
 $5985 = $1209 + 4 | 0;
 $5986 = $1209 + 6 | 0;
 $5987 = $1210 + 8 | 0;
 $5988 = $1211 + 2 | 0;
 $5989 = $1211 + 4 | 0;
 $5990 = $1211 + 6 | 0;
 $5991 = $1212 + 8 | 0;
 $5992 = $1213 + 2 | 0;
 $5993 = $1213 + 4 | 0;
 $5994 = $1213 + 6 | 0;
 $5995 = $1214 + 8 | 0;
 $5996 = $1215 + 2 | 0;
 $5997 = $1215 + 4 | 0;
 $5998 = $1215 + 6 | 0;
 $5999 = $1216 + 8 | 0;
 $6000 = $1217 + 2 | 0;
 $6001 = $1217 + 4 | 0;
 $6002 = $1217 + 6 | 0;
 $6003 = $1218 + 8 | 0;
 $6004 = $1219 + 2 | 0;
 $6005 = $1219 + 4 | 0;
 $6006 = $1219 + 6 | 0;
 $6007 = $1220 + 8 | 0;
 $6008 = $1221 + 2 | 0;
 $6009 = $1221 + 4 | 0;
 $6010 = $1221 + 6 | 0;
 $6011 = $1222 + 8 | 0;
 $6012 = $1223 + 2 | 0;
 $6013 = $1223 + 4 | 0;
 $6014 = $1223 + 6 | 0;
 $6015 = $1224 + 8 | 0;
 $6016 = $1225 + 2 | 0;
 $6017 = $1225 + 4 | 0;
 $6018 = $1225 + 6 | 0;
 $6019 = $1226 + 8 | 0;
 $6020 = $1227 + 2 | 0;
 $6021 = $1227 + 4 | 0;
 $6022 = $1227 + 6 | 0;
 $6023 = $1228 + 8 | 0;
 $6024 = $1229 + 2 | 0;
 $6025 = $1229 + 4 | 0;
 $6026 = $1229 + 6 | 0;
 $6027 = $1230 + 8 | 0;
 $6028 = $1231 + 2 | 0;
 $6029 = $1231 + 4 | 0;
 $6030 = $1231 + 6 | 0;
 $6031 = $1232 + 8 | 0;
 $6032 = $1233 + 2 | 0;
 $6033 = $1233 + 4 | 0;
 $6034 = $1233 + 6 | 0;
 $6035 = $1234 + 8 | 0;
 $6036 = $1235 + 2 | 0;
 $6037 = $1235 + 4 | 0;
 $6038 = $1235 + 6 | 0;
 $6039 = $1236 + 8 | 0;
 $6040 = $1237 + 2 | 0;
 $6041 = $1237 + 4 | 0;
 $6042 = $1237 + 6 | 0;
 $6043 = $1238 + 8 | 0;
 $6044 = $1239 + 2 | 0;
 $6045 = $1239 + 4 | 0;
 $6046 = $1239 + 6 | 0;
 $6047 = $1240 + 8 | 0;
 $6048 = $1241 + 2 | 0;
 $6049 = $1241 + 4 | 0;
 $6050 = $1241 + 6 | 0;
 $6051 = $1242 + 8 | 0;
 $6052 = $1243 + 2 | 0;
 $6053 = $1243 + 4 | 0;
 $6054 = $1243 + 6 | 0;
 $6055 = $1244 + 8 | 0;
 $6056 = $1245 + 2 | 0;
 $6057 = $1245 + 4 | 0;
 $6058 = $1245 + 6 | 0;
 $6059 = $1246 + 8 | 0;
 $6060 = $1247 + 2 | 0;
 $6061 = $1247 + 4 | 0;
 $6062 = $1247 + 6 | 0;
 $6063 = $1248 + 8 | 0;
 $6064 = $1249 + 2 | 0;
 $6065 = $1249 + 4 | 0;
 $6066 = $1249 + 6 | 0;
 $6067 = $1250 + 8 | 0;
 $6068 = $1251 + 2 | 0;
 $6069 = $1251 + 4 | 0;
 $6070 = $1251 + 6 | 0;
 $6071 = $1252 + 8 | 0;
 $6072 = $1253 + 2 | 0;
 $6073 = $1253 + 4 | 0;
 $6074 = $1253 + 6 | 0;
 $6075 = $1254 + 8 | 0;
 $6076 = $1255 + 2 | 0;
 $6077 = $1255 + 4 | 0;
 $6078 = $1255 + 6 | 0;
 $6079 = $1256 + 8 | 0;
 $6080 = $1257 + 2 | 0;
 $6081 = $1257 + 4 | 0;
 $6082 = $1257 + 6 | 0;
 $6083 = $1258 + 8 | 0;
 $6084 = $1259 + 2 | 0;
 $6085 = $1259 + 4 | 0;
 $6086 = $1259 + 6 | 0;
 $6087 = $1260 + 8 | 0;
 $6088 = $1261 + 2 | 0;
 $6089 = $1261 + 4 | 0;
 $6090 = $1261 + 6 | 0;
 $6091 = $1262 + 8 | 0;
 $6092 = $1263 + 2 | 0;
 $6093 = $1263 + 4 | 0;
 $6094 = $1263 + 6 | 0;
 $6095 = $1264 + 8 | 0;
 $6096 = $1265 + 2 | 0;
 $6097 = $1265 + 4 | 0;
 $6098 = $1265 + 6 | 0;
 $6099 = $1266 + 8 | 0;
 $6100 = $1267 + 2 | 0;
 $6101 = $1267 + 4 | 0;
 $6102 = $1267 + 6 | 0;
 $6103 = $1268 + 8 | 0;
 $6104 = $1269 + 2 | 0;
 $6105 = $1269 + 4 | 0;
 $6106 = $1269 + 6 | 0;
 $6107 = $1270 + 8 | 0;
 $6108 = $1271 + 2 | 0;
 $6109 = $1271 + 4 | 0;
 $6110 = $1271 + 6 | 0;
 $6111 = $1272 + 8 | 0;
 $6112 = $1273 + 2 | 0;
 $6113 = $1273 + 4 | 0;
 $6114 = $1273 + 6 | 0;
 $6115 = $1274 + 8 | 0;
 $6116 = $1275 + 2 | 0;
 $6117 = $1275 + 4 | 0;
 $6118 = $1275 + 6 | 0;
 $6119 = $1276 + 8 | 0;
 $6120 = $1277 + 2 | 0;
 $6121 = $1277 + 4 | 0;
 $6122 = $1277 + 6 | 0;
 $6123 = $1278 + 8 | 0;
 $6124 = $1279 + 2 | 0;
 $6125 = $1279 + 4 | 0;
 $6126 = $1279 + 6 | 0;
 $6127 = $1280 + 8 | 0;
 $6128 = $1281 + 2 | 0;
 $6129 = $1281 + 4 | 0;
 $6130 = $1281 + 6 | 0;
 $6131 = $1282 + 8 | 0;
 $6132 = $1283 + 2 | 0;
 $6133 = $1283 + 4 | 0;
 $6134 = $1283 + 6 | 0;
 $6135 = $1284 + 8 | 0;
 $6136 = $1285 + 2 | 0;
 $6137 = $1285 + 4 | 0;
 $6138 = $1285 + 6 | 0;
 $6139 = $1286 + 8 | 0;
 $6140 = $1287 + 2 | 0;
 $6141 = $1287 + 4 | 0;
 $6142 = $1287 + 6 | 0;
 $6143 = $1288 + 8 | 0;
 $6144 = $1289 + 2 | 0;
 $6145 = $1289 + 4 | 0;
 $6146 = $1289 + 6 | 0;
 $6147 = $1290 + 8 | 0;
 $6148 = $1291 + 2 | 0;
 $6149 = $1291 + 4 | 0;
 $6150 = $1291 + 6 | 0;
 $6151 = $1292 + 8 | 0;
 $6152 = $1293 + 2 | 0;
 $6153 = $1293 + 4 | 0;
 $6154 = $1293 + 6 | 0;
 $6155 = $1294 + 8 | 0;
 $6156 = $1295 + 2 | 0;
 $6157 = $1295 + 4 | 0;
 $6158 = $1295 + 6 | 0;
 $6159 = $1296 + 8 | 0;
 $6160 = $1297 + 2 | 0;
 $6161 = $1297 + 4 | 0;
 $6162 = $1297 + 6 | 0;
 $6163 = $1298 + 8 | 0;
 $6164 = $1299 + 2 | 0;
 $6165 = $1299 + 4 | 0;
 $6166 = $1299 + 6 | 0;
 $6167 = $1300 + 8 | 0;
 $6168 = $1301 + 2 | 0;
 $6169 = $1301 + 4 | 0;
 $6170 = $1301 + 6 | 0;
 $6171 = $1302 + 8 | 0;
 $6172 = $1303 + 2 | 0;
 $6173 = $1303 + 4 | 0;
 $6174 = $1303 + 6 | 0;
 $6175 = $1304 + 8 | 0;
 $6176 = $1305 + 2 | 0;
 $6177 = $1305 + 4 | 0;
 $6178 = $1305 + 6 | 0;
 $6179 = $1306 + 8 | 0;
 $6180 = $1307 + 2 | 0;
 $6181 = $1307 + 4 | 0;
 $6182 = $1307 + 6 | 0;
 $6183 = $1308 + 8 | 0;
 $6184 = $1309 + 2 | 0;
 $6185 = $1309 + 4 | 0;
 $6186 = $1309 + 6 | 0;
 $6187 = $1310 + 8 | 0;
 $6188 = $1311 + 2 | 0;
 $6189 = $1311 + 4 | 0;
 $6190 = $1311 + 6 | 0;
 $6191 = $1312 + 8 | 0;
 $6192 = $1313 + 2 | 0;
 $6193 = $1313 + 4 | 0;
 $6194 = $1313 + 6 | 0;
 $6195 = $1314 + 8 | 0;
 $6196 = $1315 + 2 | 0;
 $6197 = $1315 + 4 | 0;
 $6198 = $1315 + 6 | 0;
 $6199 = $1316 + 8 | 0;
 $6200 = $1317 + 2 | 0;
 $6201 = $1317 + 4 | 0;
 $6202 = $1317 + 6 | 0;
 $6203 = $1318 + 8 | 0;
 $6204 = $1319 + 2 | 0;
 $6205 = $1319 + 4 | 0;
 $6206 = $1319 + 6 | 0;
 $6207 = $1320 + 8 | 0;
 $6208 = $1321 + 2 | 0;
 $6209 = $1321 + 4 | 0;
 $6210 = $1321 + 6 | 0;
 $6211 = $1322 + 8 | 0;
 $6212 = $1323 + 2 | 0;
 $6213 = $1323 + 4 | 0;
 $6214 = $1323 + 6 | 0;
 $6215 = $1324 + 8 | 0;
 $6216 = $1325 + 2 | 0;
 $6217 = $1325 + 4 | 0;
 $6218 = $1325 + 6 | 0;
 $6219 = $1326 + 8 | 0;
 $6220 = $1327 + 2 | 0;
 $6221 = $1327 + 4 | 0;
 $6222 = $1327 + 6 | 0;
 $6223 = $1328 + 8 | 0;
 $6224 = $1329 + 2 | 0;
 $6225 = $1329 + 4 | 0;
 $6226 = $1329 + 6 | 0;
 $6227 = $1330 + 8 | 0;
 $6228 = $1331 + 2 | 0;
 $6229 = $1331 + 4 | 0;
 $6230 = $1331 + 6 | 0;
 $6231 = $1332 + 8 | 0;
 $6232 = $1333 + 2 | 0;
 $6233 = $1333 + 4 | 0;
 $6234 = $1333 + 6 | 0;
 $6235 = $1334 + 8 | 0;
 $6236 = $1335 + 2 | 0;
 $6237 = $1335 + 4 | 0;
 $6238 = $1335 + 6 | 0;
 $6239 = $1336 + 8 | 0;
 $6240 = $1337 + 2 | 0;
 $6241 = $1337 + 4 | 0;
 $6242 = $1337 + 6 | 0;
 $6243 = $1338 + 8 | 0;
 $6244 = $1339 + 2 | 0;
 $6245 = $1339 + 4 | 0;
 $6246 = $1339 + 6 | 0;
 $6247 = $1340 + 8 | 0;
 $6248 = $1341 + 2 | 0;
 $6249 = $1341 + 4 | 0;
 $6250 = $1341 + 6 | 0;
 $6251 = $1342 + 8 | 0;
 $6252 = $1343 + 2 | 0;
 $6253 = $1343 + 4 | 0;
 $6254 = $1343 + 6 | 0;
 $6255 = $1344 + 8 | 0;
 $6256 = $1345 + 2 | 0;
 $6257 = $1345 + 4 | 0;
 $6258 = $1345 + 6 | 0;
 $6259 = $1346 + 8 | 0;
 $6260 = $1347 + 2 | 0;
 $6261 = $1347 + 4 | 0;
 $6262 = $1347 + 6 | 0;
 $6263 = $1348 + 8 | 0;
 $6264 = $1349 + 2 | 0;
 $6265 = $1349 + 4 | 0;
 $6266 = $1349 + 6 | 0;
 $6267 = $1350 + 8 | 0;
 $6268 = $1351 + 2 | 0;
 $6269 = $1351 + 4 | 0;
 $6270 = $1351 + 6 | 0;
 $6271 = $1352 + 8 | 0;
 $6272 = $1353 + 2 | 0;
 $6273 = $1353 + 4 | 0;
 $6274 = $1353 + 6 | 0;
 $6275 = $1354 + 8 | 0;
 $6276 = $1355 + 2 | 0;
 $6277 = $1355 + 4 | 0;
 $6278 = $1355 + 6 | 0;
 $6279 = $1356 + 8 | 0;
 $6280 = $1357 + 2 | 0;
 $6281 = $1357 + 4 | 0;
 $6282 = $1357 + 6 | 0;
 $6283 = $1358 + 8 | 0;
 $6284 = $1359 + 2 | 0;
 $6285 = $1359 + 4 | 0;
 $6286 = $1359 + 6 | 0;
 $6287 = $1360 + 8 | 0;
 $6288 = $1361 + 2 | 0;
 $6289 = $1361 + 4 | 0;
 $6290 = $1361 + 6 | 0;
 $6291 = $1362 + 8 | 0;
 $6292 = $1363 + 2 | 0;
 $6293 = $1363 + 4 | 0;
 $6294 = $1363 + 6 | 0;
 $6295 = $1364 + 8 | 0;
 $6296 = $1365 + 2 | 0;
 $6297 = $1365 + 4 | 0;
 $6298 = $1365 + 6 | 0;
 $6299 = $1366 + 8 | 0;
 $6300 = $1367 + 2 | 0;
 $6301 = $1367 + 4 | 0;
 $6302 = $1367 + 6 | 0;
 $6303 = $1368 + 8 | 0;
 $6304 = $1369 + 2 | 0;
 $6305 = $1369 + 4 | 0;
 $6306 = $1369 + 6 | 0;
 $6307 = $1370 + 8 | 0;
 $6308 = $1371 + 2 | 0;
 $6309 = $1371 + 4 | 0;
 $6310 = $1371 + 6 | 0;
 $6311 = $1372 + 8 | 0;
 $6312 = $1373 + 2 | 0;
 $6313 = $1373 + 4 | 0;
 $6314 = $1373 + 6 | 0;
 $6315 = $1374 + 8 | 0;
 $6316 = $1375 + 2 | 0;
 $6317 = $1375 + 4 | 0;
 $6318 = $1375 + 6 | 0;
 $6319 = $1376 + 8 | 0;
 $6320 = $1377 + 2 | 0;
 $6321 = $1377 + 4 | 0;
 $6322 = $1377 + 6 | 0;
 $6323 = $1378 + 8 | 0;
 $6324 = $1379 + 2 | 0;
 $6325 = $1379 + 4 | 0;
 $6326 = $1379 + 6 | 0;
 $6327 = $1380 + 8 | 0;
 $6328 = $1381 + 2 | 0;
 $6329 = $1381 + 4 | 0;
 $6330 = $1381 + 6 | 0;
 $6331 = $1382 + 8 | 0;
 $6332 = $1383 + 2 | 0;
 $6333 = $1383 + 4 | 0;
 $6334 = $1383 + 6 | 0;
 $6335 = $1384 + 8 | 0;
 $6336 = $1385 + 2 | 0;
 $6337 = $1385 + 4 | 0;
 $6338 = $1385 + 6 | 0;
 $6339 = $1386 + 8 | 0;
 $6340 = $1387 + 2 | 0;
 $6341 = $1387 + 4 | 0;
 $6342 = $1387 + 6 | 0;
 $6343 = $1388 + 8 | 0;
 $6344 = $1389 + 2 | 0;
 $6345 = $1389 + 4 | 0;
 $6346 = $1389 + 6 | 0;
 $6347 = $1390 + 8 | 0;
 $6348 = $1391 + 2 | 0;
 $6349 = $1391 + 4 | 0;
 $6350 = $1391 + 6 | 0;
 $6351 = $1392 + 8 | 0;
 $6352 = $1393 + 2 | 0;
 $6353 = $1393 + 4 | 0;
 $6354 = $1393 + 6 | 0;
 $6355 = $1394 + 8 | 0;
 $6356 = $1395 + 2 | 0;
 $6357 = $1395 + 4 | 0;
 $6358 = $1395 + 6 | 0;
 $6359 = $1396 + 8 | 0;
 $6360 = $1397 + 2 | 0;
 $6361 = $1397 + 4 | 0;
 $6362 = $1397 + 6 | 0;
 $6363 = $1398 + 8 | 0;
 $6364 = $1399 + 2 | 0;
 $6365 = $1399 + 4 | 0;
 $6366 = $1399 + 6 | 0;
 $6367 = $1400 + 8 | 0;
 $6368 = $1401 + 2 | 0;
 $6369 = $1401 + 4 | 0;
 $6370 = $1401 + 6 | 0;
 $6371 = $1402 + 8 | 0;
 $6372 = $1403 + 2 | 0;
 $6373 = $1403 + 4 | 0;
 $6374 = $1403 + 6 | 0;
 $6375 = $1404 + 8 | 0;
 $6376 = $1405 + 2 | 0;
 $6377 = $1405 + 4 | 0;
 $6378 = $1405 + 6 | 0;
 $6379 = $1406 + 8 | 0;
 $6380 = $1407 + 2 | 0;
 $6381 = $1407 + 4 | 0;
 $6382 = $1407 + 6 | 0;
 $6383 = $1408 + 8 | 0;
 $6384 = $1409 + 2 | 0;
 $6385 = $1409 + 4 | 0;
 $6386 = $1409 + 6 | 0;
 $6387 = $1410 + 8 | 0;
 $6388 = $1411 + 2 | 0;
 $6389 = $1411 + 4 | 0;
 $6390 = $1411 + 6 | 0;
 $6391 = $1412 + 8 | 0;
 $6392 = $1413 + 2 | 0;
 $6393 = $1413 + 4 | 0;
 $6394 = $1413 + 6 | 0;
 $6395 = $1414 + 8 | 0;
 $6396 = $1415 + 2 | 0;
 $6397 = $1415 + 4 | 0;
 $6398 = $1415 + 6 | 0;
 $6399 = $1416 + 8 | 0;
 $6400 = $1417 + 2 | 0;
 $6401 = $1417 + 4 | 0;
 $6402 = $1417 + 6 | 0;
 $6403 = $1418 + 8 | 0;
 $6404 = $1419 + 2 | 0;
 $6405 = $1419 + 4 | 0;
 $6406 = $1419 + 6 | 0;
 $6407 = $1420 + 8 | 0;
 $6408 = $1421 + 2 | 0;
 $6409 = $1421 + 4 | 0;
 $6410 = $1421 + 6 | 0;
 $6411 = $1422 + 8 | 0;
 $6412 = $1423 + 2 | 0;
 $6413 = $1423 + 4 | 0;
 $6414 = $1423 + 6 | 0;
 $6415 = $1424 + 8 | 0;
 $6416 = $1425 + 2 | 0;
 $6417 = $1425 + 4 | 0;
 $6418 = $1425 + 6 | 0;
 $6419 = $1426 + 8 | 0;
 $6420 = $1427 + 2 | 0;
 $6421 = $1427 + 4 | 0;
 $6422 = $1427 + 6 | 0;
 $6423 = $1428 + 8 | 0;
 $6424 = $1429 + 2 | 0;
 $6425 = $1429 + 4 | 0;
 $6426 = $1429 + 6 | 0;
 $6427 = $1430 + 8 | 0;
 $6428 = $1431 + 2 | 0;
 $6429 = $1431 + 4 | 0;
 $6430 = $1431 + 6 | 0;
 $6431 = $1432 + 8 | 0;
 $6432 = $1433 + 2 | 0;
 $6433 = $1433 + 4 | 0;
 $6434 = $1433 + 6 | 0;
 $6435 = $1434 + 8 | 0;
 $6436 = $1435 + 2 | 0;
 $6437 = $1435 + 4 | 0;
 $6438 = $1435 + 6 | 0;
 $6439 = $1436 + 8 | 0;
 $6440 = $1437 + 2 | 0;
 $6441 = $1437 + 4 | 0;
 $6442 = $1437 + 6 | 0;
 $6443 = $1438 + 8 | 0;
 $6444 = $1439 + 2 | 0;
 $6445 = $1439 + 4 | 0;
 $6446 = $1439 + 6 | 0;
 $6447 = $1440 + 8 | 0;
 $6448 = $1441 + 2 | 0;
 $6449 = $1441 + 4 | 0;
 $6450 = $1441 + 6 | 0;
 $6451 = $1442 + 8 | 0;
 $6452 = $1443 + 2 | 0;
 $6453 = $1443 + 4 | 0;
 $6454 = $1443 + 6 | 0;
 $6455 = $1444 + 8 | 0;
 $6456 = $1445 + 2 | 0;
 $6457 = $1445 + 4 | 0;
 $6458 = $1445 + 6 | 0;
 $6459 = $1446 + 8 | 0;
 $6460 = $1447 + 2 | 0;
 $6461 = $1447 + 4 | 0;
 $6462 = $1447 + 6 | 0;
 $6463 = $1448 + 8 | 0;
 $6464 = $1449 + 2 | 0;
 $6465 = $1449 + 4 | 0;
 $6466 = $1449 + 6 | 0;
 $6467 = $1450 + 8 | 0;
 $6468 = $1451 + 2 | 0;
 $6469 = $1451 + 4 | 0;
 $6470 = $1451 + 6 | 0;
 $6471 = $1452 + 8 | 0;
 $6472 = $1453 + 2 | 0;
 $6473 = $1453 + 4 | 0;
 $6474 = $1453 + 6 | 0;
 $6475 = $1454 + 8 | 0;
 $6476 = $1455 + 2 | 0;
 $6477 = $1455 + 4 | 0;
 $6478 = $1455 + 6 | 0;
 $6479 = $1456 + 8 | 0;
 $6480 = $1457 + 2 | 0;
 $6481 = $1457 + 4 | 0;
 $6482 = $1457 + 6 | 0;
 $6483 = $1458 + 8 | 0;
 $6484 = $1459 + 2 | 0;
 $6485 = $1459 + 4 | 0;
 $6486 = $1459 + 6 | 0;
 $6487 = $1460 + 8 | 0;
 $6488 = $1461 + 2 | 0;
 $6489 = $1461 + 4 | 0;
 $6490 = $1461 + 6 | 0;
 $6491 = $1462 + 8 | 0;
 $6492 = $1463 + 2 | 0;
 $6493 = $1463 + 4 | 0;
 $6494 = $1463 + 6 | 0;
 $6495 = $1464 + 8 | 0;
 $6496 = $1465 + 2 | 0;
 $6497 = $1465 + 4 | 0;
 $6498 = $1465 + 6 | 0;
 $6499 = $1466 + 8 | 0;
 $6500 = $1467 + 2 | 0;
 $6501 = $1467 + 4 | 0;
 $6502 = $1467 + 6 | 0;
 $6503 = $1468 + 8 | 0;
 $6504 = $1469 + 2 | 0;
 $6505 = $1469 + 4 | 0;
 $6506 = $1469 + 6 | 0;
 $6507 = $1470 + 8 | 0;
 $6508 = $1471 + 2 | 0;
 $6509 = $1471 + 4 | 0;
 $6510 = $1471 + 6 | 0;
 $6511 = $1472 + 8 | 0;
 $6512 = $1473 + 2 | 0;
 $6513 = $1473 + 4 | 0;
 $6514 = $1473 + 6 | 0;
 $6515 = $1474 + 8 | 0;
 $6516 = $1475 + 2 | 0;
 $6517 = $1475 + 4 | 0;
 $6518 = $1475 + 6 | 0;
 $6519 = $1476 + 8 | 0;
 $6520 = $1477 + 2 | 0;
 $6521 = $1477 + 4 | 0;
 $6522 = $1477 + 6 | 0;
 $6523 = $1478 + 8 | 0;
 $6524 = $1479 + 2 | 0;
 $6525 = $1479 + 4 | 0;
 $6526 = $1479 + 6 | 0;
 $6527 = $1480 + 8 | 0;
 $6528 = $1481 + 2 | 0;
 $6529 = $1481 + 4 | 0;
 $6530 = $1481 + 6 | 0;
 $6531 = $1482 + 8 | 0;
 $6532 = $1483 + 2 | 0;
 $6533 = $1483 + 4 | 0;
 $6534 = $1483 + 6 | 0;
 $6535 = $1484 + 8 | 0;
 $6536 = $1485 + 2 | 0;
 $6537 = $1485 + 4 | 0;
 $6538 = $1485 + 6 | 0;
 $6539 = $1486 + 8 | 0;
 $6540 = $1487 + 2 | 0;
 $6541 = $1487 + 4 | 0;
 $6542 = $1487 + 6 | 0;
 $6543 = $1488 + 8 | 0;
 $6544 = $1489 + 2 | 0;
 $6545 = $1489 + 4 | 0;
 $6546 = $1489 + 6 | 0;
 $6547 = $1490 + 8 | 0;
 $6548 = $1491 + 2 | 0;
 $6549 = $1491 + 4 | 0;
 $6550 = $1491 + 6 | 0;
 $6551 = $1492 + 8 | 0;
 $6552 = $1493 + 2 | 0;
 $6553 = $1493 + 4 | 0;
 $6554 = $1493 + 6 | 0;
 $6555 = $1494 + 8 | 0;
 $6556 = $1495 + 2 | 0;
 $6557 = $1495 + 4 | 0;
 $6558 = $1495 + 6 | 0;
 $6559 = $1496 + 8 | 0;
 $6560 = $1497 + 2 | 0;
 $6561 = $1497 + 4 | 0;
 $6562 = $1497 + 6 | 0;
 $6563 = $1498 + 8 | 0;
 $6564 = $1499 + 2 | 0;
 $6565 = $1499 + 4 | 0;
 $6566 = $1499 + 6 | 0;
 $6567 = $1500 + 8 | 0;
 $6568 = $1501 + 2 | 0;
 $6569 = $1501 + 4 | 0;
 $6570 = $1501 + 6 | 0;
 $6571 = $1502 + 8 | 0;
 $6572 = $1503 + 2 | 0;
 $6573 = $1503 + 4 | 0;
 $6574 = $1503 + 6 | 0;
 $6575 = $1504 + 8 | 0;
 $6576 = $1505 + 2 | 0;
 $6577 = $1505 + 4 | 0;
 $6578 = $1505 + 6 | 0;
 $6579 = $1506 + 8 | 0;
 $6580 = $1507 + 2 | 0;
 $6581 = $1507 + 4 | 0;
 $6582 = $1507 + 6 | 0;
 $6583 = $1508 + 8 | 0;
 $6584 = $1509 + 2 | 0;
 $6585 = $1509 + 4 | 0;
 $6586 = $1509 + 6 | 0;
 $6587 = $1510 + 8 | 0;
 $6588 = $1511 + 2 | 0;
 $6589 = $1511 + 4 | 0;
 $6590 = $1511 + 6 | 0;
 $6591 = $1512 + 8 | 0;
 $6592 = $1513 + 2 | 0;
 $6593 = $1513 + 4 | 0;
 $6594 = $1513 + 6 | 0;
 $6595 = $1514 + 8 | 0;
 $6596 = $1515 + 2 | 0;
 $6597 = $1515 + 4 | 0;
 $6598 = $1515 + 6 | 0;
 $6599 = $1516 + 8 | 0;
 $6600 = $1517 + 2 | 0;
 $6601 = $1517 + 4 | 0;
 $6602 = $1517 + 6 | 0;
 $6603 = $1518 + 8 | 0;
 $6604 = $1519 + 2 | 0;
 $6605 = $1519 + 4 | 0;
 $6606 = $1519 + 6 | 0;
 $6607 = $1520 + 8 | 0;
 $6608 = $1521 + 2 | 0;
 $6609 = $1521 + 4 | 0;
 $6610 = $1521 + 6 | 0;
 $6611 = $1522 + 8 | 0;
 $6612 = $1523 + 2 | 0;
 $6613 = $1523 + 4 | 0;
 $6614 = $1523 + 6 | 0;
 $6615 = $1524 + 8 | 0;
 $6616 = $1525 + 2 | 0;
 $6617 = $1525 + 4 | 0;
 $6618 = $1525 + 6 | 0;
 $6619 = $1526 + 8 | 0;
 $6620 = $1527 + 2 | 0;
 $6621 = $1527 + 4 | 0;
 $6622 = $1527 + 6 | 0;
 $6623 = $1528 + 8 | 0;
 $6624 = $1529 + 2 | 0;
 $6625 = $1529 + 4 | 0;
 $6626 = $1529 + 6 | 0;
 $6627 = $1530 + 8 | 0;
 $6628 = $1531 + 2 | 0;
 $6629 = $1531 + 4 | 0;
 $6630 = $1531 + 6 | 0;
 $6631 = $1532 + 8 | 0;
 $6632 = $1533 + 2 | 0;
 $6633 = $1533 + 4 | 0;
 $6634 = $1533 + 6 | 0;
 $6635 = $1534 + 8 | 0;
 $6636 = $1535 + 2 | 0;
 $6637 = $1535 + 4 | 0;
 $6638 = $1535 + 6 | 0;
 $6639 = $1536 + 8 | 0;
 $6640 = $1537 + 2 | 0;
 $6641 = $1537 + 4 | 0;
 $6642 = $1537 + 6 | 0;
 $6643 = $1538 + 8 | 0;
 $6644 = $1539 + 2 | 0;
 $6645 = $1539 + 4 | 0;
 $6646 = $1539 + 6 | 0;
 $6647 = $1540 + 8 | 0;
 $6648 = $1541 + 2 | 0;
 $6649 = $1541 + 4 | 0;
 $6650 = $1541 + 6 | 0;
 $6651 = $1542 + 8 | 0;
 $6652 = $1543 + 2 | 0;
 $6653 = $1543 + 4 | 0;
 $6654 = $1543 + 6 | 0;
 $6655 = $1544 + 8 | 0;
 $6656 = $1545 + 2 | 0;
 $6657 = $1545 + 4 | 0;
 $6658 = $1545 + 6 | 0;
 $6659 = $1546 + 8 | 0;
 $6660 = $1547 + 2 | 0;
 $6661 = $1547 + 4 | 0;
 $6662 = $1547 + 6 | 0;
 $6663 = $1548 + 8 | 0;
 $6664 = $1549 + 2 | 0;
 $6665 = $1549 + 4 | 0;
 $6666 = $1549 + 6 | 0;
 $6667 = $1550 + 8 | 0;
 $6668 = $1551 + 2 | 0;
 $6669 = $1551 + 4 | 0;
 $6670 = $1551 + 6 | 0;
 $6671 = $1552 + 8 | 0;
 $6672 = $1553 + 2 | 0;
 $6673 = $1553 + 4 | 0;
 $6674 = $1553 + 6 | 0;
 $6675 = $1554 + 8 | 0;
 $6676 = $1555 + 2 | 0;
 $6677 = $1555 + 4 | 0;
 $6678 = $1555 + 6 | 0;
 $6679 = $1556 + 8 | 0;
 $6680 = $1557 + 2 | 0;
 $6681 = $1557 + 4 | 0;
 $6682 = $1557 + 6 | 0;
 $6683 = $1558 + 8 | 0;
 $6684 = $1559 + 2 | 0;
 $6685 = $1559 + 4 | 0;
 $6686 = $1559 + 6 | 0;
 $6687 = $1560 + 8 | 0;
 $6688 = $1561 + 2 | 0;
 $6689 = $1561 + 4 | 0;
 $6690 = $1561 + 6 | 0;
 $6691 = $1562 + 8 | 0;
 $6692 = $1563 + 2 | 0;
 $6693 = $1563 + 4 | 0;
 $6694 = $1563 + 6 | 0;
 $6695 = $1564 + 8 | 0;
 $6696 = $1565 + 2 | 0;
 $6697 = $1565 + 4 | 0;
 $6698 = $1565 + 6 | 0;
 $6699 = $1566 + 8 | 0;
 $6700 = $1567 + 2 | 0;
 $6701 = $1567 + 4 | 0;
 $6702 = $1567 + 6 | 0;
 $6703 = $1568 + 8 | 0;
 $6704 = $1569 + 2 | 0;
 $6705 = $1569 + 4 | 0;
 $6706 = $1569 + 6 | 0;
 $6707 = $1570 + 8 | 0;
 $6708 = $1571 + 2 | 0;
 $6709 = $1571 + 4 | 0;
 $6710 = $1571 + 6 | 0;
 $6711 = $1572 + 8 | 0;
 $6712 = $1573 + 2 | 0;
 $6713 = $1573 + 4 | 0;
 $6714 = $1573 + 6 | 0;
 $6715 = $1574 + 8 | 0;
 $6716 = $1575 + 2 | 0;
 $6717 = $1575 + 4 | 0;
 $6718 = $1575 + 6 | 0;
 $6719 = $1576 + 8 | 0;
 $6720 = $1577 + 2 | 0;
 $6721 = $1577 + 4 | 0;
 $6722 = $1577 + 6 | 0;
 $6723 = $1578 + 8 | 0;
 $6724 = $1579 + 2 | 0;
 $6725 = $1579 + 4 | 0;
 $6726 = $1579 + 6 | 0;
 $6727 = $1580 + 8 | 0;
 $6728 = $1581 + 2 | 0;
 $6729 = $1581 + 4 | 0;
 $6730 = $1581 + 6 | 0;
 $6731 = $1582 + 8 | 0;
 $6732 = $1583 + 2 | 0;
 $6733 = $1583 + 4 | 0;
 $6734 = $1583 + 6 | 0;
 $6735 = $1584 + 8 | 0;
 $6736 = $1585 + 2 | 0;
 $6737 = $1585 + 4 | 0;
 $6738 = $1585 + 6 | 0;
 $6739 = $1586 + 8 | 0;
 $6740 = $1587 + 2 | 0;
 $6741 = $1587 + 4 | 0;
 $6742 = $1587 + 6 | 0;
 $6743 = $1588 + 8 | 0;
 $6744 = $1589 + 2 | 0;
 $6745 = $1589 + 4 | 0;
 $6746 = $1589 + 6 | 0;
 $6747 = $1590 + 8 | 0;
 $6748 = $1590 + 12 | 0;
 $6749 = $1590 + 16 | 0;
 $6750 = $1590 + 20 | 0;
 $6751 = $1590 + 21 | 0;
 $6752 = $1590 + 22 | 0;
 $6753 = $1590 + 23 | 0;
 $6754 = $1590 + 24 | 0;
 $6755 = $1591 + 2 | 0;
 $6756 = $1591 + 4 | 0;
 $6757 = $1591 + 6 | 0;
 $6758 = $1592 + 8 | 0;
 $6759 = $1593 + 2 | 0;
 $6760 = $1593 + 4 | 0;
 $6761 = $1593 + 6 | 0;
 $6762 = $1594 + 8 | 0;
 $6763 = $1595 + 2 | 0;
 $6764 = $1595 + 4 | 0;
 $6765 = $1595 + 6 | 0;
 $6766 = $1596 + 8 | 0;
 $6767 = $1597 + 2 | 0;
 $6768 = $1597 + 4 | 0;
 $6769 = $1597 + 6 | 0;
 $6770 = $1598 + 8 | 0;
 $6771 = $1599 + 2 | 0;
 $6772 = $1599 + 4 | 0;
 $6773 = $1599 + 6 | 0;
 $6774 = $1600 + 8 | 0;
 $6775 = $1601 + 2 | 0;
 $6776 = $1601 + 4 | 0;
 $6777 = $1601 + 6 | 0;
 $6778 = $1602 + 8 | 0;
 $6779 = $1603 + 2 | 0;
 $6780 = $1603 + 4 | 0;
 $6781 = $1603 + 6 | 0;
 $6782 = $1604 + 8 | 0;
 $6783 = $1605 + 2 | 0;
 $6784 = $1605 + 4 | 0;
 $6785 = $1605 + 6 | 0;
 $6786 = $1606 + 8 | 0;
 $6787 = $1607 + 2 | 0;
 $6788 = $1607 + 4 | 0;
 $6789 = $1607 + 6 | 0;
 $6790 = $1608 + 8 | 0;
 $6791 = $1609 + 2 | 0;
 $6792 = $1609 + 4 | 0;
 $6793 = $1609 + 6 | 0;
 $6794 = $1610 + 8 | 0;
 $6795 = $1611 + 2 | 0;
 $6796 = $1611 + 4 | 0;
 $6797 = $1611 + 6 | 0;
 $6798 = $1612 + 8 | 0;
 $6799 = $1613 + 2 | 0;
 $6800 = $1613 + 4 | 0;
 $6801 = $1613 + 6 | 0;
 $6802 = $1614 + 8 | 0;
 $6803 = $1615 + 2 | 0;
 $6804 = $1615 + 4 | 0;
 $6805 = $1615 + 6 | 0;
 $6806 = $1616 + 8 | 0;
 $6807 = $1617 + 2 | 0;
 $6808 = $1617 + 4 | 0;
 $6809 = $1617 + 6 | 0;
 $6810 = $1618 + 8 | 0;
 $6811 = $1619 + 2 | 0;
 $6812 = $1619 + 4 | 0;
 $6813 = $1619 + 6 | 0;
 $6814 = $1620 + 8 | 0;
 $6815 = $1621 + 2 | 0;
 $6816 = $1621 + 4 | 0;
 $6817 = $1621 + 6 | 0;
 $6818 = $1622 + 8 | 0;
 $6819 = $1623 + 2 | 0;
 $6820 = $1623 + 4 | 0;
 $6821 = $1623 + 6 | 0;
 $6822 = $1624 + 8 | 0;
 $6823 = $1625 + 2 | 0;
 $6824 = $1625 + 4 | 0;
 $6825 = $1625 + 6 | 0;
 $6826 = $1626 + 8 | 0;
 $6827 = $1627 + 2 | 0;
 $6828 = $1627 + 4 | 0;
 $6829 = $1627 + 6 | 0;
 $6830 = $1628 + 8 | 0;
 $6831 = $1629 + 2 | 0;
 $6832 = $1629 + 4 | 0;
 $6833 = $1629 + 6 | 0;
 $6834 = $1630 + 8 | 0;
 $6835 = $1631 + 2 | 0;
 $6836 = $1631 + 4 | 0;
 $6837 = $1631 + 6 | 0;
 $6838 = $1632 + 8 | 0;
 $6839 = $1633 + 2 | 0;
 $6840 = $1633 + 4 | 0;
 $6841 = $1633 + 6 | 0;
 $6842 = $1634 + 8 | 0;
 $6843 = $1635 + 2 | 0;
 $6844 = $1635 + 4 | 0;
 $6845 = $1635 + 6 | 0;
 $6846 = $1636 + 8 | 0;
 $6847 = $1637 + 2 | 0;
 $6848 = $1637 + 4 | 0;
 $6849 = $1637 + 6 | 0;
 $6850 = $1638 + 8 | 0;
 $6851 = $1639 + 2 | 0;
 $6852 = $1639 + 4 | 0;
 $6853 = $1639 + 6 | 0;
 $6854 = $1640 + 8 | 0;
 $6855 = $1641 + 2 | 0;
 $6856 = $1641 + 4 | 0;
 $6857 = $1641 + 6 | 0;
 $6858 = $1642 + 8 | 0;
 $6859 = $1643 + 2 | 0;
 $6860 = $1643 + 4 | 0;
 $6861 = $1643 + 6 | 0;
 $6862 = $1644 + 8 | 0;
 $6863 = $1645 + 2 | 0;
 $6864 = $1645 + 4 | 0;
 $6865 = $1645 + 6 | 0;
 $6866 = $1646 + 8 | 0;
 $6867 = $1647 + 2 | 0;
 $6868 = $1647 + 4 | 0;
 $6869 = $1647 + 6 | 0;
 $6870 = $1648 + 8 | 0;
 $6871 = $1649 + 2 | 0;
 $6872 = $1649 + 4 | 0;
 $6873 = $1649 + 6 | 0;
 $6874 = $1650 + 8 | 0;
 $6875 = $1651 + 2 | 0;
 $6876 = $1651 + 4 | 0;
 $6877 = $1651 + 6 | 0;
 $6878 = $1652 + 8 | 0;
 $6879 = $1653 + 2 | 0;
 $6880 = $1653 + 4 | 0;
 $6881 = $1653 + 6 | 0;
 $6882 = $1654 + 8 | 0;
 $6883 = $1655 + 2 | 0;
 $6884 = $1655 + 4 | 0;
 $6885 = $1655 + 6 | 0;
 $6886 = $1656 + 8 | 0;
 $6887 = $1657 + 2 | 0;
 $6888 = $1657 + 4 | 0;
 $6889 = $1657 + 6 | 0;
 $6890 = $1658 + 8 | 0;
 $6891 = $1659 + 2 | 0;
 $6892 = $1659 + 4 | 0;
 $6893 = $1659 + 6 | 0;
 $6894 = $1660 + 8 | 0;
 $6895 = $1661 + 2 | 0;
 $6896 = $1661 + 4 | 0;
 $6897 = $1661 + 6 | 0;
 $6898 = $1662 + 8 | 0;
 $6899 = $1663 + 2 | 0;
 $6900 = $1663 + 4 | 0;
 $6901 = $1663 + 6 | 0;
 $6902 = $1664 + 8 | 0;
 $6903 = $1665 + 2 | 0;
 $6904 = $1665 + 4 | 0;
 $6905 = $1665 + 6 | 0;
 $6906 = $1666 + 8 | 0;
 $6907 = $1667 + 2 | 0;
 $6908 = $1667 + 4 | 0;
 $6909 = $1667 + 6 | 0;
 $6910 = $1668 + 8 | 0;
 $6911 = $1669 + 2 | 0;
 $6912 = $1669 + 4 | 0;
 $6913 = $1669 + 6 | 0;
 $6914 = $1670 + 8 | 0;
 $6915 = $1671 + 2 | 0;
 $6916 = $1671 + 4 | 0;
 $6917 = $1671 + 6 | 0;
 $6918 = $1672 + 8 | 0;
 $6919 = $1673 + 2 | 0;
 $6920 = $1673 + 4 | 0;
 $6921 = $1673 + 6 | 0;
 $6922 = $1674 + 8 | 0;
 $6923 = $1675 + 2 | 0;
 $6924 = $1675 + 4 | 0;
 $6925 = $1675 + 6 | 0;
 $6926 = $1676 + 8 | 0;
 $6927 = $1677 + 2 | 0;
 $6928 = $1677 + 4 | 0;
 $6929 = $1677 + 6 | 0;
 $6930 = $1678 + 8 | 0;
 $6931 = $1679 + 2 | 0;
 $6932 = $1679 + 4 | 0;
 $6933 = $1679 + 6 | 0;
 $6934 = $1680 + 8 | 0;
 $6935 = $1681 + 2 | 0;
 $6936 = $1681 + 4 | 0;
 $6937 = $1681 + 6 | 0;
 $6938 = $1682 + 8 | 0;
 $6939 = $1683 + 2 | 0;
 $6940 = $1683 + 4 | 0;
 $6941 = $1683 + 6 | 0;
 $6942 = $1684 + 8 | 0;
 $6943 = $1685 + 2 | 0;
 $6944 = $1685 + 4 | 0;
 $6945 = $1685 + 6 | 0;
 $6946 = $1686 + 8 | 0;
 $6947 = $1687 + 2 | 0;
 $6948 = $1687 + 4 | 0;
 $6949 = $1687 + 6 | 0;
 $6950 = $1688 + 8 | 0;
 $6951 = $1689 + 2 | 0;
 $6952 = $1689 + 4 | 0;
 $6953 = $1689 + 6 | 0;
 $6954 = $1690 + 8 | 0;
 $6955 = $1691 + 2 | 0;
 $6956 = $1691 + 4 | 0;
 $6957 = $1691 + 6 | 0;
 $6958 = $1692 + 8 | 0;
 $6959 = $1693 + 2 | 0;
 $6960 = $1693 + 4 | 0;
 $6961 = $1693 + 6 | 0;
 $6962 = $1694 + 8 | 0;
 $6963 = $1695 + 2 | 0;
 $6964 = $1695 + 4 | 0;
 $6965 = $1695 + 6 | 0;
 $6966 = $1696 + 8 | 0;
 $6967 = $1697 + 2 | 0;
 $6968 = $1697 + 4 | 0;
 $6969 = $1697 + 6 | 0;
 $6970 = $1698 + 8 | 0;
 $6971 = $1699 + 2 | 0;
 $6972 = $1699 + 4 | 0;
 $6973 = $1699 + 6 | 0;
 $6974 = $1700 + 8 | 0;
 $6975 = $1701 + 2 | 0;
 $6976 = $1701 + 4 | 0;
 $6977 = $1701 + 6 | 0;
 $6978 = $1702 + 8 | 0;
 $6979 = $1703 + 2 | 0;
 $6980 = $1703 + 4 | 0;
 $6981 = $1703 + 6 | 0;
 $6982 = $1704 + 8 | 0;
 $6983 = $1705 + 2 | 0;
 $6984 = $1705 + 4 | 0;
 $6985 = $1705 + 6 | 0;
 $6986 = $1706 + 8 | 0;
 $6987 = $1707 + 2 | 0;
 $6988 = $1707 + 4 | 0;
 $6989 = $1707 + 6 | 0;
 $6990 = $1708 + 8 | 0;
 $6991 = $1709 + 2 | 0;
 $6992 = $1709 + 4 | 0;
 $6993 = $1709 + 6 | 0;
 $6994 = $1710 + 8 | 0;
 $6995 = $1711 + 2 | 0;
 $6996 = $1711 + 4 | 0;
 $6997 = $1711 + 6 | 0;
 $6998 = $1712 + 8 | 0;
 $6999 = $1713 + 2 | 0;
 $7000 = $1713 + 4 | 0;
 $7001 = $1713 + 6 | 0;
 $7002 = $1714 + 8 | 0;
 $7003 = $1715 + 2 | 0;
 $7004 = $1715 + 4 | 0;
 $7005 = $1715 + 6 | 0;
 $7006 = $1716 + 8 | 0;
 $7007 = $1717 + 2 | 0;
 $7008 = $1717 + 4 | 0;
 $7009 = $1717 + 6 | 0;
 $7010 = $1718 + 8 | 0;
 $7011 = $1719 + 2 | 0;
 $7012 = $1719 + 4 | 0;
 $7013 = $1719 + 6 | 0;
 $7014 = $1720 + 8 | 0;
 $7015 = $1721 + 2 | 0;
 $7016 = $1721 + 4 | 0;
 $7017 = $1721 + 6 | 0;
 $7018 = $1722 + 8 | 0;
 $7019 = $1723 + 2 | 0;
 $7020 = $1723 + 4 | 0;
 $7021 = $1723 + 6 | 0;
 $7022 = $1724 + 8 | 0;
 $7023 = $1725 + 2 | 0;
 $7024 = $1725 + 4 | 0;
 $7025 = $1725 + 6 | 0;
 $7026 = $1726 + 8 | 0;
 $7027 = $1727 + 2 | 0;
 $7028 = $1727 + 4 | 0;
 $7029 = $1727 + 6 | 0;
 $7030 = $1728 + 8 | 0;
 $7031 = $1729 + 2 | 0;
 $7032 = $1729 + 4 | 0;
 $7033 = $1729 + 6 | 0;
 $7034 = $1730 + 8 | 0;
 $7035 = $1731 + 2 | 0;
 $7036 = $1731 + 4 | 0;
 $7037 = $1731 + 6 | 0;
 $7038 = $1732 + 8 | 0;
 $7039 = $1733 + 2 | 0;
 $7040 = $1733 + 4 | 0;
 $7041 = $1733 + 6 | 0;
 $7042 = $1734 + 8 | 0;
 $7043 = $1735 + 2 | 0;
 $7044 = $1735 + 4 | 0;
 $7045 = $1735 + 6 | 0;
 $7046 = $1736 + 8 | 0;
 $7047 = $1737 + 2 | 0;
 $7048 = $1737 + 4 | 0;
 $7049 = $1737 + 6 | 0;
 $7050 = $1738 + 8 | 0;
 $7051 = $1739 + 2 | 0;
 $7052 = $1739 + 4 | 0;
 $7053 = $1739 + 6 | 0;
 $7054 = $1740 + 8 | 0;
 $7055 = $1741 + 2 | 0;
 $7056 = $1741 + 4 | 0;
 $7057 = $1741 + 6 | 0;
 $7058 = $1742 + 8 | 0;
 $7059 = $1743 + 2 | 0;
 $7060 = $1743 + 4 | 0;
 $7061 = $1743 + 6 | 0;
 $7062 = $1744 + 8 | 0;
 $7063 = $1745 + 2 | 0;
 $7064 = $1745 + 4 | 0;
 $7065 = $1745 + 6 | 0;
 $7066 = $1746 + 8 | 0;
 $7067 = $1747 + 2 | 0;
 $7068 = $1747 + 4 | 0;
 $7069 = $1747 + 6 | 0;
 $7070 = $1748 + 8 | 0;
 $7071 = $1749 + 2 | 0;
 $7072 = $1749 + 4 | 0;
 $7073 = $1749 + 6 | 0;
 $7074 = $1750 + 8 | 0;
 $7075 = $1751 + 2 | 0;
 $7076 = $1751 + 4 | 0;
 $7077 = $1751 + 6 | 0;
 $7078 = $1752 + 8 | 0;
 $7079 = $1753 + 2 | 0;
 $7080 = $1753 + 4 | 0;
 $7081 = $1753 + 6 | 0;
 $7082 = $1754 + 8 | 0;
 $7083 = $1755 + 2 | 0;
 $7084 = $1755 + 4 | 0;
 $7085 = $1755 + 6 | 0;
 $7086 = $1756 + 8 | 0;
 $7087 = $1757 + 2 | 0;
 $7088 = $1757 + 4 | 0;
 $7089 = $1757 + 6 | 0;
 $7090 = $1758 + 8 | 0;
 $7091 = $1759 + 2 | 0;
 $7092 = $1759 + 4 | 0;
 $7093 = $1759 + 6 | 0;
 $7094 = $1760 + 8 | 0;
 $7095 = $1761 + 2 | 0;
 $7096 = $1761 + 4 | 0;
 $7097 = $1761 + 6 | 0;
 $7098 = $1762 + 8 | 0;
 $7099 = $1763 + 2 | 0;
 $7100 = $1763 + 4 | 0;
 $7101 = $1763 + 6 | 0;
 $7102 = $1764 + 8 | 0;
 $7103 = $1765 + 2 | 0;
 $7104 = $1765 + 4 | 0;
 $7105 = $1765 + 6 | 0;
 $7106 = $1766 + 8 | 0;
 $7107 = $1767 + 2 | 0;
 $7108 = $1767 + 4 | 0;
 $7109 = $1767 + 6 | 0;
 $7110 = $1768 + 8 | 0;
 $7111 = $1769 + 2 | 0;
 $7112 = $1769 + 4 | 0;
 $7113 = $1769 + 6 | 0;
 $7114 = $1770 + 8 | 0;
 $7115 = $1771 + 2 | 0;
 $7116 = $1771 + 4 | 0;
 $7117 = $1771 + 6 | 0;
 $7118 = $1772 + 8 | 0;
 $7119 = $1773 + 2 | 0;
 $7120 = $1773 + 4 | 0;
 $7121 = $1773 + 6 | 0;
 $7122 = $1774 + 8 | 0;
 $7123 = $1775 + 2 | 0;
 $7124 = $1775 + 4 | 0;
 $7125 = $1775 + 6 | 0;
 $7126 = $1776 + 8 | 0;
 $7127 = $1777 + 2 | 0;
 $7128 = $1777 + 4 | 0;
 $7129 = $1777 + 6 | 0;
 $7130 = $1778 + 8 | 0;
 $7131 = $1779 + 2 | 0;
 $7132 = $1779 + 4 | 0;
 $7133 = $1779 + 6 | 0;
 $7134 = $1780 + 8 | 0;
 $7135 = $1781 + 2 | 0;
 $7136 = $1781 + 4 | 0;
 $7137 = $1781 + 6 | 0;
 $7138 = $1782 + 8 | 0;
 $7139 = $1783 + 2 | 0;
 $7140 = $1783 + 4 | 0;
 $7141 = $1783 + 6 | 0;
 $7142 = $1784 + 8 | 0;
 $7143 = $1785 + 2 | 0;
 $7144 = $1785 + 4 | 0;
 $7145 = $1785 + 6 | 0;
 $7146 = $0 + 2 | 0;
 $7147 = $0 + 4 | 0;
 $7148 = $0 + 6 | 0;
 $7149 = $0 + 2 | 0;
 $7150 = $0 + 4 | 0;
 $7151 = $0 + 6 | 0;
 $7152 = $0 + 2 | 0;
 $7153 = $0 + 4 | 0;
 $7154 = $0 + 6 | 0;
 $7155 = $0 + 2 | 0;
 $7156 = $0 + 4 | 0;
 $7157 = $0 + 6 | 0;
 $7158 = $0 + 2 | 0;
 $7159 = $0 + 4 | 0;
 $7160 = $0 + 6 | 0;
 $7161 = $0 + 2 | 0;
 $7162 = $0 + 4 | 0;
 $7163 = $0 + 6 | 0;
 $7164 = $0 + 2 | 0;
 $7165 = $0 + 4 | 0;
 $7166 = $0 + 6 | 0;
 $7167 = $0 + 2 | 0;
 $7168 = $0 + 4 | 0;
 $7169 = $0 + 6 | 0;
 $7170 = $0 + 2 | 0;
 $7171 = $0 + 4 | 0;
 $7172 = $0 + 6 | 0;
 $7173 = $0 + 2 | 0;
 $7174 = $0 + 4 | 0;
 $7175 = $0 + 6 | 0;
 $7176 = $0 + 2 | 0;
 $7177 = $0 + 4 | 0;
 $7178 = $0 + 6 | 0;
 $7179 = $0 + 2 | 0;
 $7180 = $0 + 4 | 0;
 $7181 = $0 + 6 | 0;
 $7182 = $0 + 2 | 0;
 $7183 = $0 + 4 | 0;
 $7184 = $0 + 6 | 0;
 $7185 = $0 + 2 | 0;
 $7186 = $0 + 4 | 0;
 $7187 = $0 + 6 | 0;
 $7188 = $0 + 2 | 0;
 $7189 = $0 + 4 | 0;
 $7190 = $0 + 6 | 0;
 $7191 = $0 + 2 | 0;
 $7192 = $0 + 4 | 0;
 $7193 = $0 + 6 | 0;
 $7194 = $0 + 2 | 0;
 $7195 = $0 + 4 | 0;
 $7196 = $0 + 6 | 0;
 $7197 = $0 + 2 | 0;
 $7198 = $0 + 4 | 0;
 $7199 = $0 + 6 | 0;
 $7200 = $0 + 2 | 0;
 $7201 = $0 + 4 | 0;
 $7202 = $0 + 6 | 0;
 $7203 = $0 + 2 | 0;
 $7204 = $0 + 4 | 0;
 $7205 = $0 + 6 | 0;
 $7206 = $0 + 2 | 0;
 $7207 = $0 + 4 | 0;
 $7208 = $0 + 6 | 0;
 $7209 = $0 + 2 | 0;
 $7210 = $0 + 4 | 0;
 $7211 = $0 + 6 | 0;
 $7212 = $0 + 2 | 0;
 $7213 = $0 + 4 | 0;
 $7214 = $0 + 6 | 0;
 $7215 = $0 + 2 | 0;
 $7216 = $0 + 4 | 0;
 $7217 = $0 + 6 | 0;
 $7218 = $0 + 2 | 0;
 $7219 = $0 + 4 | 0;
 $7220 = $0 + 6 | 0;
 $7221 = $0 + 2 | 0;
 $7222 = $0 + 4 | 0;
 $7223 = $0 + 6 | 0;
 $7224 = $0 + 2 | 0;
 $7225 = $0 + 4 | 0;
 $7226 = $0 + 6 | 0;
 $7227 = $0 + 2 | 0;
 $7228 = $0 + 4 | 0;
 $7229 = $0 + 6 | 0;
 $7230 = $0 + 2 | 0;
 $7231 = $0 + 4 | 0;
 $7232 = $0 + 6 | 0;
 $7233 = $0 + 2 | 0;
 $7234 = $0 + 4 | 0;
 $7235 = $0 + 6 | 0;
 $7236 = $0 + 2 | 0;
 $7237 = $0 + 4 | 0;
 $7238 = $0 + 6 | 0;
 $7239 = $0 + 2 | 0;
 $7240 = $0 + 4 | 0;
 $7241 = $0 + 6 | 0;
 $7242 = $0 + 2 | 0;
 $7243 = $0 + 4 | 0;
 $7244 = $0 + 6 | 0;
 $7245 = $0 + 2 | 0;
 $7246 = $0 + 4 | 0;
 $7247 = $0 + 6 | 0;
 $7248 = $0 + 2 | 0;
 $7249 = $0 + 4 | 0;
 $7250 = $0 + 6 | 0;
 $7251 = $0 + 2 | 0;
 $7252 = $0 + 4 | 0;
 $7253 = $0 + 6 | 0;
 $7254 = $0 + 2 | 0;
 $7255 = $0 + 4 | 0;
 $7256 = $0 + 6 | 0;
 $7257 = $0 + 2 | 0;
 $7258 = $0 + 4 | 0;
 $7259 = $0 + 6 | 0;
 $7260 = $0 + 2 | 0;
 $7261 = $0 + 4 | 0;
 $7262 = $0 + 6 | 0;
 $7263 = $0 + 2 | 0;
 $7264 = $0 + 4 | 0;
 $7265 = $0 + 6 | 0;
 $7266 = $1826 + 8 | 0;
 $7267 = $1827 + 2 | 0;
 $7268 = $1827 + 4 | 0;
 $7269 = $1827 + 6 | 0;
 $7270 = $1828 + 8 | 0;
 $7271 = $1829 + 2 | 0;
 $7272 = $1829 + 4 | 0;
 $7273 = $1829 + 6 | 0;
 $7274 = $1830 + 8 | 0;
 $7275 = $1831 + 2 | 0;
 $7276 = $1831 + 4 | 0;
 $7277 = $1831 + 6 | 0;
 $7278 = $1832 + 8 | 0;
 $7279 = $1833 + 2 | 0;
 $7280 = $1833 + 4 | 0;
 $7281 = $1833 + 6 | 0;
 $7282 = $1834 + 8 | 0;
 $7283 = $1835 + 2 | 0;
 $7284 = $1835 + 4 | 0;
 $7285 = $1835 + 6 | 0;
 $7286 = $1836 + 8 | 0;
 $7287 = $1837 + 2 | 0;
 $7288 = $1837 + 4 | 0;
 $7289 = $1837 + 6 | 0;
 $7290 = $1838 + 8 | 0;
 $7291 = $1839 + 2 | 0;
 $7292 = $1839 + 4 | 0;
 $7293 = $1839 + 6 | 0;
 $7294 = $1840 + 8 | 0;
 $7295 = $1841 + 2 | 0;
 $7296 = $1841 + 4 | 0;
 $7297 = $1841 + 6 | 0;
 $7298 = $1842 + 8 | 0;
 $7299 = $1843 + 2 | 0;
 $7300 = $1843 + 4 | 0;
 $7301 = $1843 + 6 | 0;
 $7302 = $1844 + 8 | 0;
 $7303 = $1845 + 2 | 0;
 $7304 = $1845 + 4 | 0;
 $7305 = $1845 + 6 | 0;
 $7306 = $1846 + 8 | 0;
 $7307 = $1847 + 2 | 0;
 $7308 = $1847 + 4 | 0;
 $7309 = $1847 + 6 | 0;
 $7310 = $1848 + 8 | 0;
 $7311 = $1849 + 2 | 0;
 $7312 = $1849 + 4 | 0;
 $7313 = $1849 + 6 | 0;
 $7314 = $1850 + 8 | 0;
 $7315 = $1851 + 2 | 0;
 $7316 = $1851 + 4 | 0;
 $7317 = $1851 + 6 | 0;
 $7318 = $1852 + 8 | 0;
 $7319 = $1853 + 2 | 0;
 $7320 = $1853 + 4 | 0;
 $7321 = $1853 + 6 | 0;
 $7322 = $1854 + 8 | 0;
 $7323 = $1855 + 2 | 0;
 $7324 = $1855 + 4 | 0;
 $7325 = $1855 + 6 | 0;
 $7326 = $1856 + 8 | 0;
 $7327 = $1857 + 2 | 0;
 $7328 = $1857 + 4 | 0;
 $7329 = $1857 + 6 | 0;
 $7330 = $1858 + 8 | 0;
 $7331 = $1859 + 2 | 0;
 $7332 = $1859 + 4 | 0;
 $7333 = $1859 + 6 | 0;
 $7334 = $1860 + 8 | 0;
 $7335 = $1861 + 2 | 0;
 $7336 = $1861 + 4 | 0;
 $7337 = $1861 + 6 | 0;
 $7338 = $1862 + 8 | 0;
 $7339 = $1863 + 2 | 0;
 $7340 = $1863 + 4 | 0;
 $7341 = $1863 + 6 | 0;
 $7342 = $1864 + 8 | 0;
 $7343 = $1865 + 2 | 0;
 $7344 = $1865 + 4 | 0;
 $7345 = $1865 + 6 | 0;
 $7346 = $1866 + 8 | 0;
 $7347 = $1867 + 2 | 0;
 $7348 = $1867 + 4 | 0;
 $7349 = $1867 + 6 | 0;
 $7350 = $1868 + 8 | 0;
 $7351 = $1869 + 2 | 0;
 $7352 = $1869 + 4 | 0;
 $7353 = $1869 + 6 | 0;
 $7354 = $1870 + 8 | 0;
 $7355 = $1871 + 2 | 0;
 $7356 = $1871 + 4 | 0;
 $7357 = $1871 + 6 | 0;
 $7358 = $1872 + 8 | 0;
 $7359 = $1873 + 2 | 0;
 $7360 = $1873 + 4 | 0;
 $7361 = $1873 + 6 | 0;
 $7362 = $1874 + 8 | 0;
 $7363 = $1875 + 2 | 0;
 $7364 = $1875 + 4 | 0;
 $7365 = $1875 + 6 | 0;
 $7366 = $1876 + 8 | 0;
 $7367 = $1877 + 2 | 0;
 $7368 = $1877 + 4 | 0;
 $7369 = $1877 + 6 | 0;
 $7370 = $1878 + 8 | 0;
 $7371 = $1879 + 2 | 0;
 $7372 = $1879 + 4 | 0;
 $7373 = $1879 + 6 | 0;
 $7374 = $1880 + 8 | 0;
 $7375 = $1881 + 2 | 0;
 $7376 = $1881 + 4 | 0;
 $7377 = $1881 + 6 | 0;
 $7378 = $1882 + 8 | 0;
 $7379 = $1883 + 2 | 0;
 $7380 = $1883 + 4 | 0;
 $7381 = $1883 + 6 | 0;
 $7382 = $1884 + 8 | 0;
 $7383 = $1885 + 2 | 0;
 $7384 = $1885 + 4 | 0;
 $7385 = $1885 + 6 | 0;
 $7386 = $1886 + 8 | 0;
 $7387 = $1887 + 2 | 0;
 $7388 = $1887 + 4 | 0;
 $7389 = $1887 + 6 | 0;
 $7390 = $1888 + 8 | 0;
 $7391 = $1889 + 2 | 0;
 $7392 = $1889 + 4 | 0;
 $7393 = $1889 + 6 | 0;
 $7394 = $1890 + 8 | 0;
 $7395 = $1891 + 2 | 0;
 $7396 = $1891 + 4 | 0;
 $7397 = $1891 + 6 | 0;
 $7398 = $1892 + 8 | 0;
 $7399 = $1893 + 2 | 0;
 $7400 = $1893 + 4 | 0;
 $7401 = $1893 + 6 | 0;
 $7402 = $1894 + 8 | 0;
 $7403 = $1895 + 2 | 0;
 $7404 = $1895 + 4 | 0;
 $7405 = $1895 + 6 | 0;
 $7406 = $1896 + 8 | 0;
 $7407 = $1897 + 2 | 0;
 $7408 = $1897 + 4 | 0;
 $7409 = $1897 + 6 | 0;
 $7410 = $1898 + 8 | 0;
 $7411 = $1899 + 2 | 0;
 $7412 = $1899 + 4 | 0;
 $7413 = $1899 + 6 | 0;
 $7414 = $1900 + 8 | 0;
 $7415 = $1901 + 2 | 0;
 $7416 = $1901 + 4 | 0;
 $7417 = $1901 + 6 | 0;
 $7418 = $1902 + 8 | 0;
 $7419 = $1903 + 2 | 0;
 $7420 = $1903 + 4 | 0;
 $7421 = $1903 + 6 | 0;
 $7422 = $1904 + 8 | 0;
 $7423 = $1905 + 2 | 0;
 $7424 = $1905 + 4 | 0;
 $7425 = $1905 + 6 | 0;
 $7426 = $1906 + 8 | 0;
 $7427 = $1907 + 2 | 0;
 $7428 = $1907 + 4 | 0;
 $7429 = $1907 + 6 | 0;
 $7430 = $1908 + 8 | 0;
 $7431 = $1909 + 2 | 0;
 $7432 = $1909 + 4 | 0;
 $7433 = $1909 + 6 | 0;
 $7434 = $1910 + 8 | 0;
 $7435 = $1911 + 2 | 0;
 $7436 = $1911 + 4 | 0;
 $7437 = $1911 + 6 | 0;
 $7438 = $1912 + 8 | 0;
 $7439 = $1913 + 2 | 0;
 $7440 = $1913 + 4 | 0;
 $7441 = $1913 + 6 | 0;
 $7442 = $1914 + 8 | 0;
 $7443 = $1915 + 2 | 0;
 $7444 = $1915 + 4 | 0;
 $7445 = $1915 + 6 | 0;
 $7446 = $1916 + 8 | 0;
 $7447 = $1917 + 2 | 0;
 $7448 = $1917 + 4 | 0;
 $7449 = $1917 + 6 | 0;
 $7450 = $1918 + 8 | 0;
 $7451 = $1919 + 2 | 0;
 $7452 = $1919 + 4 | 0;
 $7453 = $1919 + 6 | 0;
 $7454 = $1920 + 8 | 0;
 $7455 = $1921 + 2 | 0;
 $7456 = $1921 + 4 | 0;
 $7457 = $1921 + 6 | 0;
 $7458 = $1922 + 8 | 0;
 $7459 = $1923 + 2 | 0;
 $7460 = $1923 + 4 | 0;
 $7461 = $1923 + 6 | 0;
 $7462 = $1924 + 8 | 0;
 $7463 = $1925 + 2 | 0;
 $7464 = $1925 + 4 | 0;
 $7465 = $1925 + 6 | 0;
 $7466 = $1926 + 8 | 0;
 $7467 = $1927 + 2 | 0;
 $7468 = $1927 + 4 | 0;
 $7469 = $1927 + 6 | 0;
 $7470 = $1928 + 8 | 0;
 $7471 = $1929 + 2 | 0;
 $7472 = $1929 + 4 | 0;
 $7473 = $1929 + 6 | 0;
 $7474 = $1930 + 8 | 0;
 $7475 = $1931 + 2 | 0;
 $7476 = $1931 + 4 | 0;
 $7477 = $1931 + 6 | 0;
 $7478 = $1932 + 8 | 0;
 $7479 = $1933 + 2 | 0;
 $7480 = $1933 + 4 | 0;
 $7481 = $1933 + 6 | 0;
 $7482 = $1934 + 8 | 0;
 $7483 = $1935 + 2 | 0;
 $7484 = $1935 + 4 | 0;
 $7485 = $1935 + 6 | 0;
 $7486 = $1936 + 8 | 0;
 $7487 = $1937 + 2 | 0;
 $7488 = $1937 + 4 | 0;
 $7489 = $1937 + 6 | 0;
 $7490 = $1938 + 8 | 0;
 $7491 = $1939 + 2 | 0;
 $7492 = $1939 + 4 | 0;
 $7493 = $1939 + 6 | 0;
 $7494 = $1940 + 8 | 0;
 $7495 = $1941 + 2 | 0;
 $7496 = $1941 + 4 | 0;
 $7497 = $1941 + 6 | 0;
 $7498 = $1942 + 8 | 0;
 $7499 = $1943 + 2 | 0;
 $7500 = $1943 + 4 | 0;
 $7501 = $1943 + 6 | 0;
 $7502 = $1944 + 8 | 0;
 $7503 = $1945 + 2 | 0;
 $7504 = $1945 + 4 | 0;
 $7505 = $1945 + 6 | 0;
 $7506 = $1946 + 8 | 0;
 $7507 = $1947 + 2 | 0;
 $7508 = $1947 + 4 | 0;
 $7509 = $1947 + 6 | 0;
 $7510 = $1948 + 2 | 0;
 $7511 = $1948 + 4 | 0;
 $7512 = $1948 + 6 | 0;
 $7513 = $1948 + 8 | 0;
 $7514 = $1948 + 12 | 0;
 $7515 = $1948 + 16 | 0;
 $7516 = $1948 + 20 | 0;
 $7517 = $1949 + 2 | 0;
 $7518 = $1949 + 4 | 0;
 $7519 = $1949 + 6 | 0;
 $7520 = $1950 + 8 | 0;
 $7521 = $1951 + 2 | 0;
 $7522 = $1951 + 4 | 0;
 $7523 = $1951 + 6 | 0;
 $7524 = $1952 + 8 | 0;
 $7525 = $1953 + 2 | 0;
 $7526 = $1953 + 4 | 0;
 $7527 = $1953 + 6 | 0;
 $7528 = $1954 + 8 | 0;
 $7529 = $1955 + 2 | 0;
 $7530 = $1955 + 4 | 0;
 $7531 = $1955 + 6 | 0;
 $7532 = $1956 + 8 | 0;
 $7533 = $1957 + 2 | 0;
 $7534 = $1957 + 4 | 0;
 $7535 = $1957 + 6 | 0;
 $7536 = $1958 + 8 | 0;
 $7537 = $1959 + 2 | 0;
 $7538 = $1959 + 4 | 0;
 $7539 = $1959 + 6 | 0;
 $7540 = $1960 + 8 | 0;
 $7541 = $1961 + 2 | 0;
 $7542 = $1961 + 4 | 0;
 $7543 = $1961 + 6 | 0;
 $7544 = $1962 + 8 | 0;
 $7545 = $1963 + 2 | 0;
 $7546 = $1963 + 4 | 0;
 $7547 = $1963 + 6 | 0;
 $7548 = $1964 + 8 | 0;
 $7549 = $1965 + 2 | 0;
 $7550 = $1965 + 4 | 0;
 $7551 = $1965 + 6 | 0;
 $7552 = $1966 + 8 | 0;
 $7553 = $1967 + 2 | 0;
 $7554 = $1967 + 4 | 0;
 $7555 = $1967 + 6 | 0;
 $7556 = $1968 + 2 | 0;
 $7557 = $1968 + 4 | 0;
 $7558 = $1968 + 6 | 0;
 $7559 = $1968 + 8 | 0;
 $7560 = $1968 + 12 | 0;
 $7561 = $1968 + 16 | 0;
 $7562 = $1968 + 20 | 0;
 $7563 = $1969 + 2 | 0;
 $7564 = $1969 + 4 | 0;
 $7565 = $1969 + 6 | 0;
 $7566 = $1970 + 8 | 0;
 $7567 = $1971 + 2 | 0;
 $7568 = $1971 + 4 | 0;
 $7569 = $1971 + 6 | 0;
 $7570 = $1972 + 8 | 0;
 $7571 = $1973 + 2 | 0;
 $7572 = $1973 + 4 | 0;
 $7573 = $1973 + 6 | 0;
 $7574 = $1974 + 8 | 0;
 $7575 = $1975 + 2 | 0;
 $7576 = $1975 + 4 | 0;
 $7577 = $1975 + 6 | 0;
 $7578 = $1976 + 8 | 0;
 $7579 = $1977 + 2 | 0;
 $7580 = $1977 + 4 | 0;
 $7581 = $1977 + 6 | 0;
 $7582 = $1978 + 8 | 0;
 $7583 = $1979 + 2 | 0;
 $7584 = $1979 + 4 | 0;
 $7585 = $1979 + 6 | 0;
 $7586 = $1980 + 8 | 0;
 $7587 = $1980 + 10 | 0;
 $7588 = $1980 + 12 | 0;
 $7589 = $1981 + 2 | 0;
 $7590 = $1981 + 4 | 0;
 $7591 = $1981 + 6 | 0;
 $7592 = $1982 + 8 | 0;
 $7593 = $1982 + 10 | 0;
 $7594 = $1982 + 12 | 0;
 $7595 = $1983 + 2 | 0;
 $7596 = $1983 + 4 | 0;
 $7597 = $1983 + 6 | 0;
 $7598 = $1984 + 8 | 0;
 $7599 = $1984 + 10 | 0;
 $7600 = $1984 + 12 | 0;
 $7601 = $1985 + 2 | 0;
 $7602 = $1985 + 4 | 0;
 $7603 = $1985 + 6 | 0;
 $7604 = $1986 + 8 | 0;
 $7605 = $1986 + 10 | 0;
 $7606 = $1986 + 12 | 0;
 $7607 = $1987 + 2 | 0;
 $7608 = $1987 + 4 | 0;
 $7609 = $1987 + 6 | 0;
 $7610 = $1988 + 8 | 0;
 $7611 = $1988 + 10 | 0;
 $7612 = $1988 + 12 | 0;
 $7613 = $1989 + 2 | 0;
 $7614 = $1989 + 4 | 0;
 $7615 = $1989 + 6 | 0;
 $7616 = $1990 + 8 | 0;
 $7617 = $1990 + 10 | 0;
 $7618 = $1990 + 12 | 0;
 $7619 = $1991 + 2 | 0;
 $7620 = $1991 + 4 | 0;
 $7621 = $1991 + 6 | 0;
 $7622 = $1992 + 8 | 0;
 $7623 = $1993 + 2 | 0;
 $7624 = $1993 + 4 | 0;
 $7625 = $1993 + 6 | 0;
 $7626 = $1994 + 8 | 0;
 $7627 = $1995 + 2 | 0;
 $7628 = $1995 + 4 | 0;
 $7629 = $1995 + 6 | 0;
 $7630 = $1996 + 8 | 0;
 $7631 = $1997 + 2 | 0;
 $7632 = $1997 + 4 | 0;
 $7633 = $1997 + 6 | 0;
 $7634 = $1998 + 8 | 0;
 $7635 = $1999 + 2 | 0;
 $7636 = $1999 + 4 | 0;
 $7637 = $1999 + 6 | 0;
 $7638 = $2000 + 8 | 0;
 $7639 = $2001 + 2 | 0;
 $7640 = $2001 + 4 | 0;
 $7641 = $2001 + 6 | 0;
 $7642 = $2002 + 8 | 0;
 $7643 = $2003 + 2 | 0;
 $7644 = $2003 + 4 | 0;
 $7645 = $2003 + 6 | 0;
 $7646 = $2004 + 8 | 0;
 $7647 = $2005 + 2 | 0;
 $7648 = $2005 + 4 | 0;
 $7649 = $2005 + 6 | 0;
 $7650 = $2006 + 8 | 0;
 $7651 = $2007 + 2 | 0;
 $7652 = $2007 + 4 | 0;
 $7653 = $2007 + 6 | 0;
 $7654 = $2008 + 8 | 0;
 $7655 = $2009 + 2 | 0;
 $7656 = $2009 + 4 | 0;
 $7657 = $2009 + 6 | 0;
 $7658 = $2010 + 8 | 0;
 $7659 = $2011 + 2 | 0;
 $7660 = $2011 + 4 | 0;
 $7661 = $2011 + 6 | 0;
 $7662 = $2012 + 8 | 0;
 $7663 = $2013 + 2 | 0;
 $7664 = $2013 + 4 | 0;
 $7665 = $2013 + 6 | 0;
 $7666 = $2014 + 8 | 0;
 $7667 = $2015 + 2 | 0;
 $7668 = $2015 + 4 | 0;
 $7669 = $2015 + 6 | 0;
 $7670 = $2016 + 8 | 0;
 $7671 = $2017 + 2 | 0;
 $7672 = $2017 + 4 | 0;
 $7673 = $2017 + 6 | 0;
 $7674 = $2018 + 8 | 0;
 $7675 = $2019 + 2 | 0;
 $7676 = $2019 + 4 | 0;
 $7677 = $2019 + 6 | 0;
 $7678 = $2020 + 8 | 0;
 $7679 = $2021 + 2 | 0;
 $7680 = $2021 + 4 | 0;
 $7681 = $2021 + 6 | 0;
 $7682 = $2022 + 8 | 0;
 $7683 = $2023 + 2 | 0;
 $7684 = $2023 + 4 | 0;
 $7685 = $2023 + 6 | 0;
 $7686 = $2024 + 8 | 0;
 $7687 = $2025 + 2 | 0;
 $7688 = $2025 + 4 | 0;
 $7689 = $2025 + 6 | 0;
 $7690 = $2026 + 8 | 0;
 $7691 = $2027 + 2 | 0;
 $7692 = $2027 + 4 | 0;
 $7693 = $2027 + 6 | 0;
 $7694 = $2028 + 8 | 0;
 $7695 = $2029 + 2 | 0;
 $7696 = $2029 + 4 | 0;
 $7697 = $2029 + 6 | 0;
 $7698 = $2030 + 8 | 0;
 $7699 = $2031 + 2 | 0;
 $7700 = $2031 + 4 | 0;
 $7701 = $2031 + 6 | 0;
 $7702 = $2032 + 8 | 0;
 $7703 = $2033 + 2 | 0;
 $7704 = $2033 + 4 | 0;
 $7705 = $2033 + 6 | 0;
 $7706 = $2034 + 8 | 0;
 $7707 = $2035 + 2 | 0;
 $7708 = $2035 + 4 | 0;
 $7709 = $2035 + 6 | 0;
 $7710 = $2036 + 8 | 0;
 $7711 = $2037 + 2 | 0;
 $7712 = $2037 + 4 | 0;
 $7713 = $2037 + 6 | 0;
 $7714 = $2038 + 8 | 0;
 $7715 = $2039 + 2 | 0;
 $7716 = $2039 + 4 | 0;
 $7717 = $2039 + 6 | 0;
 $7718 = $2040 + 8 | 0;
 $7719 = $2041 + 2 | 0;
 $7720 = $2041 + 4 | 0;
 $7721 = $2041 + 6 | 0;
 $7722 = $2042 + 8 | 0;
 $7723 = $2043 + 2 | 0;
 $7724 = $2043 + 4 | 0;
 $7725 = $2043 + 6 | 0;
 $7726 = $2044 + 8 | 0;
 $7727 = $2045 + 2 | 0;
 $7728 = $2045 + 4 | 0;
 $7729 = $2045 + 6 | 0;
 $7730 = $2046 + 8 | 0;
 $7731 = $2047 + 2 | 0;
 $7732 = $2047 + 4 | 0;
 $7733 = $2047 + 6 | 0;
 $7734 = $2048 + 8 | 0;
 $7735 = $2049 + 2 | 0;
 $7736 = $2049 + 4 | 0;
 $7737 = $2049 + 6 | 0;
 $7738 = $2050 + 8 | 0;
 $7739 = $2051 + 2 | 0;
 $7740 = $2051 + 4 | 0;
 $7741 = $2051 + 6 | 0;
 $7742 = $2052 + 8 | 0;
 $7743 = $2053 + 2 | 0;
 $7744 = $2053 + 4 | 0;
 $7745 = $2053 + 6 | 0;
 $7746 = $2054 + 8 | 0;
 $7747 = $2055 + 2 | 0;
 $7748 = $2055 + 4 | 0;
 $7749 = $2055 + 6 | 0;
 $7750 = $2056 + 8 | 0;
 $7751 = $2057 + 2 | 0;
 $7752 = $2057 + 4 | 0;
 $7753 = $2057 + 6 | 0;
 $7754 = $2058 + 8 | 0;
 $7755 = $2059 + 2 | 0;
 $7756 = $2059 + 4 | 0;
 $7757 = $2059 + 6 | 0;
 $7758 = $2060 + 8 | 0;
 $7759 = $2061 + 2 | 0;
 $7760 = $2061 + 4 | 0;
 $7761 = $2061 + 6 | 0;
 $7762 = $2062 + 8 | 0;
 $7763 = $2063 + 2 | 0;
 $7764 = $2063 + 4 | 0;
 $7765 = $2063 + 6 | 0;
 $7766 = $2064 + 8 | 0;
 $7767 = $2065 + 2 | 0;
 $7768 = $2065 + 4 | 0;
 $7769 = $2065 + 6 | 0;
 $7770 = $2066 + 8 | 0;
 $7771 = $2067 + 2 | 0;
 $7772 = $2067 + 4 | 0;
 $7773 = $2067 + 6 | 0;
 $7774 = $2068 + 8 | 0;
 $7775 = $2069 + 2 | 0;
 $7776 = $2069 + 4 | 0;
 $7777 = $2069 + 6 | 0;
 $7778 = $2070 + 8 | 0;
 $7779 = $2071 + 2 | 0;
 $7780 = $2071 + 4 | 0;
 $7781 = $2071 + 6 | 0;
 $7782 = $2072 + 8 | 0;
 $7783 = $2073 + 2 | 0;
 $7784 = $2073 + 4 | 0;
 $7785 = $2073 + 6 | 0;
 $7786 = $2074 + 8 | 0;
 $7787 = $2075 + 2 | 0;
 $7788 = $2075 + 4 | 0;
 $7789 = $2075 + 6 | 0;
 $7790 = $2076 + 8 | 0;
 $7791 = $2077 + 2 | 0;
 $7792 = $2077 + 4 | 0;
 $7793 = $2077 + 6 | 0;
 $7794 = $2078 + 8 | 0;
 $7795 = $2079 + 2 | 0;
 $7796 = $2079 + 4 | 0;
 $7797 = $2079 + 6 | 0;
 $7798 = $2080 + 8 | 0;
 $7799 = $2081 + 2 | 0;
 $7800 = $2081 + 4 | 0;
 $7801 = $2081 + 6 | 0;
 $7802 = $2082 + 8 | 0;
 $7803 = $2083 + 2 | 0;
 $7804 = $2083 + 4 | 0;
 $7805 = $2083 + 6 | 0;
 $7806 = $2084 + 8 | 0;
 $7807 = $2085 + 2 | 0;
 $7808 = $2085 + 4 | 0;
 $7809 = $2085 + 6 | 0;
 $7810 = $2086 + 8 | 0;
 $7811 = $2087 + 2 | 0;
 $7812 = $2087 + 4 | 0;
 $7813 = $2087 + 6 | 0;
 $7814 = $2088 + 8 | 0;
 $7815 = $2089 + 2 | 0;
 $7816 = $2089 + 4 | 0;
 $7817 = $2089 + 6 | 0;
 $7818 = $2090 + 8 | 0;
 $7819 = $2091 + 2 | 0;
 $7820 = $2091 + 4 | 0;
 $7821 = $2091 + 6 | 0;
 $7822 = $2092 + 8 | 0;
 $7823 = $2093 + 2 | 0;
 $7824 = $2093 + 4 | 0;
 $7825 = $2093 + 6 | 0;
 $7826 = $2094 + 8 | 0;
 $7827 = $2095 + 2 | 0;
 $7828 = $2095 + 4 | 0;
 $7829 = $2095 + 6 | 0;
 $7830 = $2096 + 8 | 0;
 $7831 = $2097 + 2 | 0;
 $7832 = $2097 + 4 | 0;
 $7833 = $2097 + 6 | 0;
 $7834 = $2098 + 8 | 0;
 $7835 = $2099 + 2 | 0;
 $7836 = $2099 + 4 | 0;
 $7837 = $2099 + 6 | 0;
 $7838 = $2100 + 8 | 0;
 $7839 = $2101 + 2 | 0;
 $7840 = $2101 + 4 | 0;
 $7841 = $2101 + 6 | 0;
 $7842 = $2102 + 8 | 0;
 $7843 = $2103 + 2 | 0;
 $7844 = $2103 + 4 | 0;
 $7845 = $2103 + 6 | 0;
 $7846 = $2104 + 8 | 0;
 $7847 = $2105 + 2 | 0;
 $7848 = $2105 + 4 | 0;
 $7849 = $2105 + 6 | 0;
 $7850 = $2106 + 8 | 0;
 $7851 = $2107 + 2 | 0;
 $7852 = $2107 + 4 | 0;
 $7853 = $2107 + 6 | 0;
 $7854 = $2108 + 8 | 0;
 $7855 = $2109 + 2 | 0;
 $7856 = $2109 + 4 | 0;
 $7857 = $2109 + 6 | 0;
 $7858 = $2110 + 8 | 0;
 $7859 = $2111 + 2 | 0;
 $7860 = $2111 + 4 | 0;
 $7861 = $2111 + 6 | 0;
 $7862 = $2112 + 8 | 0;
 $7863 = $2113 + 2 | 0;
 $7864 = $2113 + 4 | 0;
 $7865 = $2113 + 6 | 0;
 $7866 = $2114 + 8 | 0;
 $7867 = $2115 + 2 | 0;
 $7868 = $2115 + 4 | 0;
 $7869 = $2115 + 6 | 0;
 $7870 = $2116 + 8 | 0;
 $7871 = $2117 + 2 | 0;
 $7872 = $2117 + 4 | 0;
 $7873 = $2117 + 6 | 0;
 $7874 = $2118 + 8 | 0;
 $7875 = $2119 + 2 | 0;
 $7876 = $2119 + 4 | 0;
 $7877 = $2119 + 6 | 0;
 $7878 = $2120 + 8 | 0;
 $7879 = $2121 + 2 | 0;
 $7880 = $2121 + 4 | 0;
 $7881 = $2121 + 6 | 0;
 $7882 = $2122 + 8 | 0;
 $7883 = $2123 + 2 | 0;
 $7884 = $2123 + 4 | 0;
 $7885 = $2123 + 6 | 0;
 $7886 = $2124 + 8 | 0;
 $7887 = $2125 + 2 | 0;
 $7888 = $2125 + 4 | 0;
 $7889 = $2125 + 6 | 0;
 $7890 = $2126 + 8 | 0;
 $7891 = $2127 + 2 | 0;
 $7892 = $2127 + 4 | 0;
 $7893 = $2127 + 6 | 0;
 $7894 = $2128 + 8 | 0;
 $7895 = $2129 + 2 | 0;
 $7896 = $2129 + 4 | 0;
 $7897 = $2129 + 6 | 0;
 $7898 = $2130 + 8 | 0;
 $7899 = $2131 + 2 | 0;
 $7900 = $2131 + 4 | 0;
 $7901 = $2131 + 6 | 0;
 $7902 = $0 + 2 | 0;
 $7903 = $0 + 4 | 0;
 $7904 = $0 + 6 | 0;
 $7905 = $0 + 2 | 0;
 $7906 = $0 + 4 | 0;
 $7907 = $0 + 6 | 0;
 $7908 = $0 + 2 | 0;
 $7909 = $0 + 4 | 0;
 $7910 = $0 + 6 | 0;
 $7911 = $0 + 2 | 0;
 $7912 = $0 + 4 | 0;
 $7913 = $0 + 6 | 0;
 $7914 = $0 + 2 | 0;
 $7915 = $0 + 4 | 0;
 $7916 = $0 + 6 | 0;
 $7917 = $0 + 2 | 0;
 $7918 = $0 + 4 | 0;
 $7919 = $0 + 6 | 0;
 $7920 = $0 + 2 | 0;
 $7921 = $0 + 4 | 0;
 $7922 = $0 + 6 | 0;
 $7923 = $0 + 2 | 0;
 $7924 = $0 + 4 | 0;
 $7925 = $0 + 6 | 0;
 $7926 = $0 + 2 | 0;
 $7927 = $0 + 4 | 0;
 $7928 = $0 + 6 | 0;
 $7929 = $0 + 2 | 0;
 $7930 = $0 + 4 | 0;
 $7931 = $0 + 6 | 0;
 $7932 = $0 + 2 | 0;
 $7933 = $0 + 4 | 0;
 $7934 = $0 + 6 | 0;
 $7935 = $0 + 2 | 0;
 $7936 = $0 + 4 | 0;
 $7937 = $0 + 6 | 0;
 $7938 = $0 + 2 | 0;
 $7939 = $0 + 4 | 0;
 $7940 = $0 + 6 | 0;
 $7941 = $0 + 2 | 0;
 $7942 = $0 + 4 | 0;
 $7943 = $0 + 6 | 0;
 $7944 = $0 + 2 | 0;
 $7945 = $0 + 4 | 0;
 $7946 = $0 + 6 | 0;
 $7947 = $0 + 2 | 0;
 $7948 = $0 + 4 | 0;
 $7949 = $0 + 6 | 0;
 $7950 = $0 + 2 | 0;
 $7951 = $0 + 4 | 0;
 $7952 = $0 + 6 | 0;
 $7953 = $0 + 2 | 0;
 $7954 = $0 + 4 | 0;
 $7955 = $0 + 6 | 0;
 $7956 = $0 + 2 | 0;
 $7957 = $0 + 4 | 0;
 $7958 = $0 + 6 | 0;
 $7959 = $0 + 2 | 0;
 $7960 = $0 + 4 | 0;
 $7961 = $0 + 6 | 0;
 $7962 = $0 + 2 | 0;
 $7963 = $0 + 4 | 0;
 $7964 = $0 + 6 | 0;
 $7965 = $0 + 2 | 0;
 $7966 = $0 + 4 | 0;
 $7967 = $0 + 6 | 0;
 $7968 = $0 + 2 | 0;
 $7969 = $0 + 4 | 0;
 $7970 = $0 + 6 | 0;
 $7971 = $0 + 2 | 0;
 $7972 = $0 + 4 | 0;
 $7973 = $0 + 6 | 0;
 $7974 = $0 + 2 | 0;
 $7975 = $0 + 4 | 0;
 $7976 = $0 + 6 | 0;
 $7977 = $0 + 2 | 0;
 $7978 = $0 + 4 | 0;
 $7979 = $0 + 6 | 0;
 $7980 = $0 + 2 | 0;
 $7981 = $0 + 4 | 0;
 $7982 = $0 + 6 | 0;
 $7983 = $0 + 2 | 0;
 $7984 = $0 + 4 | 0;
 $7985 = $0 + 6 | 0;
 $7986 = $0 + 2 | 0;
 $7987 = $0 + 4 | 0;
 $7988 = $0 + 6 | 0;
 $7989 = $0 + 2 | 0;
 $7990 = $0 + 4 | 0;
 $7991 = $0 + 6 | 0;
 $7992 = $0 + 2 | 0;
 $7993 = $0 + 4 | 0;
 $7994 = $0 + 6 | 0;
 $7995 = $0 + 2 | 0;
 $7996 = $0 + 4 | 0;
 $7997 = $0 + 6 | 0;
 $7998 = $0 + 2 | 0;
 $7999 = $0 + 4 | 0;
 $8000 = $0 + 6 | 0;
 $8001 = $0 + 2 | 0;
 $8002 = $0 + 4 | 0;
 $8003 = $0 + 6 | 0;
 $8004 = $2166 + 8 | 0;
 $8005 = $2167 + 2 | 0;
 $8006 = $2167 + 4 | 0;
 $8007 = $2167 + 6 | 0;
 $8008 = $2168 + 8 | 0;
 $8009 = $2169 + 2 | 0;
 $8010 = $2169 + 4 | 0;
 $8011 = $2169 + 6 | 0;
 $8012 = $2170 + 8 | 0;
 $8013 = $2171 + 2 | 0;
 $8014 = $2171 + 4 | 0;
 $8015 = $2171 + 6 | 0;
 $8016 = $2172 + 8 | 0;
 $8017 = $2173 + 2 | 0;
 $8018 = $2173 + 4 | 0;
 $8019 = $2173 + 6 | 0;
 $8020 = $2174 + 8 | 0;
 $8021 = $2175 + 2 | 0;
 $8022 = $2175 + 4 | 0;
 $8023 = $2175 + 6 | 0;
 $8024 = $2176 + 8 | 0;
 $8025 = $2177 + 2 | 0;
 $8026 = $2177 + 4 | 0;
 $8027 = $2177 + 6 | 0;
 $8028 = $2178 + 8 | 0;
 $8029 = $2179 + 2 | 0;
 $8030 = $2179 + 4 | 0;
 $8031 = $2179 + 6 | 0;
 $8032 = $2180 + 8 | 0;
 $8033 = $2181 + 2 | 0;
 $8034 = $2181 + 4 | 0;
 $8035 = $2181 + 6 | 0;
 $8036 = $2182 + 8 | 0;
 $8037 = $2183 + 2 | 0;
 $8038 = $2183 + 4 | 0;
 $8039 = $2183 + 6 | 0;
 $8040 = $2184 + 8 | 0;
 $8041 = $2185 + 2 | 0;
 $8042 = $2185 + 4 | 0;
 $8043 = $2185 + 6 | 0;
 $8044 = $2186 + 8 | 0;
 $8045 = $2186 + 10 | 0;
 $8046 = $2186 + 12 | 0;
 $8047 = $2187 + 2 | 0;
 $8048 = $2187 + 4 | 0;
 $8049 = $2187 + 6 | 0;
 $8050 = $2188 + 8 | 0;
 $8051 = $2189 + 2 | 0;
 $8052 = $2189 + 4 | 0;
 $8053 = $2189 + 6 | 0;
 $8054 = $2190 + 8 | 0;
 $8055 = $2191 + 2 | 0;
 $8056 = $2191 + 4 | 0;
 $8057 = $2191 + 6 | 0;
 $8058 = $2192 + 8 | 0;
 $8059 = $2193 + 2 | 0;
 $8060 = $2193 + 4 | 0;
 $8061 = $2193 + 6 | 0;
 $8062 = $2194 + 8 | 0;
 $8063 = $2195 + 2 | 0;
 $8064 = $2195 + 4 | 0;
 $8065 = $2195 + 6 | 0;
 $8066 = $2196 + 8 | 0;
 $8067 = $2197 + 2 | 0;
 $8068 = $2197 + 4 | 0;
 $8069 = $2197 + 6 | 0;
 $8070 = $2198 + 8 | 0;
 $8071 = $2199 + 2 | 0;
 $8072 = $2199 + 4 | 0;
 $8073 = $2199 + 6 | 0;
 $8074 = $2200 + 8 | 0;
 $8075 = $2201 + 2 | 0;
 $8076 = $2201 + 4 | 0;
 $8077 = $2201 + 6 | 0;
 $8078 = $2202 + 8 | 0;
 $8079 = $2203 + 2 | 0;
 $8080 = $2203 + 4 | 0;
 $8081 = $2203 + 6 | 0;
 $8082 = $2204 + 8 | 0;
 $8083 = $2205 + 2 | 0;
 $8084 = $2205 + 4 | 0;
 $8085 = $2205 + 6 | 0;
 $8086 = $2206 + 8 | 0;
 $8087 = $2207 + 2 | 0;
 $8088 = $2207 + 4 | 0;
 $8089 = $2207 + 6 | 0;
 $8090 = $2208 + 8 | 0;
 $8091 = $2209 + 2 | 0;
 $8092 = $2209 + 4 | 0;
 $8093 = $2209 + 6 | 0;
 $8094 = $2210 + 8 | 0;
 $8095 = $2211 + 2 | 0;
 $8096 = $2211 + 4 | 0;
 $8097 = $2211 + 6 | 0;
 $8098 = $2212 + 8 | 0;
 $8099 = $2213 + 2 | 0;
 $8100 = $2213 + 4 | 0;
 $8101 = $2213 + 6 | 0;
 $8102 = $2214 + 8 | 0;
 $8103 = $2215 + 2 | 0;
 $8104 = $2215 + 4 | 0;
 $8105 = $2215 + 6 | 0;
 $8106 = $2216 + 8 | 0;
 $8107 = $2217 + 2 | 0;
 $8108 = $2217 + 4 | 0;
 $8109 = $2217 + 6 | 0;
 $8110 = $2218 + 8 | 0;
 $8111 = $2219 + 2 | 0;
 $8112 = $2219 + 4 | 0;
 $8113 = $2219 + 6 | 0;
 $8114 = $2220 + 8 | 0;
 $8115 = $2221 + 2 | 0;
 $8116 = $2221 + 4 | 0;
 $8117 = $2221 + 6 | 0;
 $8118 = $2222 + 8 | 0;
 $8119 = $2223 + 2 | 0;
 $8120 = $2223 + 4 | 0;
 $8121 = $2223 + 6 | 0;
 $8122 = $2224 + 8 | 0;
 $8123 = $2225 + 2 | 0;
 $8124 = $2225 + 4 | 0;
 $8125 = $2225 + 6 | 0;
 $8126 = $2226 + 8 | 0;
 $8127 = $2227 + 2 | 0;
 $8128 = $2227 + 4 | 0;
 $8129 = $2227 + 6 | 0;
 $8130 = $2228 + 8 | 0;
 $8131 = $2229 + 2 | 0;
 $8132 = $2229 + 4 | 0;
 $8133 = $2229 + 6 | 0;
 $8134 = $2230 + 8 | 0;
 $8135 = $2231 + 2 | 0;
 $8136 = $2231 + 4 | 0;
 $8137 = $2231 + 6 | 0;
 $8138 = $2232 + 8 | 0;
 $8139 = $2233 + 2 | 0;
 $8140 = $2233 + 4 | 0;
 $8141 = $2233 + 6 | 0;
 $8142 = $2234 + 8 | 0;
 $8143 = $2235 + 2 | 0;
 $8144 = $2235 + 4 | 0;
 $8145 = $2235 + 6 | 0;
 $8146 = $2236 + 8 | 0;
 $8147 = $2237 + 2 | 0;
 $8148 = $2237 + 4 | 0;
 $8149 = $2237 + 6 | 0;
 $8150 = $2238 + 8 | 0;
 $8151 = $2239 + 2 | 0;
 $8152 = $2239 + 4 | 0;
 $8153 = $2239 + 6 | 0;
 $8154 = $2240 + 8 | 0;
 $8155 = $2241 + 2 | 0;
 $8156 = $2241 + 4 | 0;
 $8157 = $2241 + 6 | 0;
 $8158 = $2242 + 8 | 0;
 $8159 = $2243 + 2 | 0;
 $8160 = $2243 + 4 | 0;
 $8161 = $2243 + 6 | 0;
 $8162 = $2244 + 8 | 0;
 $8163 = $2245 + 2 | 0;
 $8164 = $2245 + 4 | 0;
 $8165 = $2245 + 6 | 0;
 $8166 = $2246 + 8 | 0;
 $8167 = $2247 + 2 | 0;
 $8168 = $2247 + 4 | 0;
 $8169 = $2247 + 6 | 0;
 $8170 = $2248 + 8 | 0;
 $8171 = $2249 + 2 | 0;
 $8172 = $2249 + 4 | 0;
 $8173 = $2249 + 6 | 0;
 $8174 = $2250 + 8 | 0;
 $8175 = $2251 + 2 | 0;
 $8176 = $2251 + 4 | 0;
 $8177 = $2251 + 6 | 0;
 $8178 = $2252 + 8 | 0;
 $8179 = $2253 + 2 | 0;
 $8180 = $2253 + 4 | 0;
 $8181 = $2253 + 6 | 0;
 $8182 = $2254 + 8 | 0;
 $8183 = $2255 + 2 | 0;
 $8184 = $2255 + 4 | 0;
 $8185 = $2255 + 6 | 0;
 $8186 = $2256 + 8 | 0;
 $8187 = $2257 + 2 | 0;
 $8188 = $2257 + 4 | 0;
 $8189 = $2257 + 6 | 0;
 $8190 = $2258 + 8 | 0;
 $8191 = $2259 + 2 | 0;
 $8192 = $2259 + 4 | 0;
 $8193 = $2259 + 6 | 0;
 $8194 = $2260 + 8 | 0;
 $8195 = $2261 + 2 | 0;
 $8196 = $2261 + 4 | 0;
 $8197 = $2261 + 6 | 0;
 $8198 = $2262 + 8 | 0;
 $8199 = $2263 + 2 | 0;
 $8200 = $2263 + 4 | 0;
 $8201 = $2263 + 6 | 0;
 $8202 = $2264 + 8 | 0;
 $8203 = $2265 + 2 | 0;
 $8204 = $2265 + 4 | 0;
 $8205 = $2265 + 6 | 0;
 $8206 = $2266 + 8 | 0;
 $8207 = $2267 + 2 | 0;
 $8208 = $2267 + 4 | 0;
 $8209 = $2267 + 6 | 0;
 $8210 = $2268 + 8 | 0;
 $8211 = $2269 + 2 | 0;
 $8212 = $2269 + 4 | 0;
 $8213 = $2269 + 6 | 0;
 $8214 = $2270 + 8 | 0;
 $8215 = $2271 + 2 | 0;
 $8216 = $2271 + 4 | 0;
 $8217 = $2271 + 6 | 0;
 $8218 = $2272 + 8 | 0;
 $8219 = $2273 + 2 | 0;
 $8220 = $2273 + 4 | 0;
 $8221 = $2273 + 6 | 0;
 $8222 = $2274 + 8 | 0;
 $8223 = $2275 + 2 | 0;
 $8224 = $2275 + 4 | 0;
 $8225 = $2275 + 6 | 0;
 $8226 = $2276 + 8 | 0;
 $8227 = $2277 + 2 | 0;
 $8228 = $2277 + 4 | 0;
 $8229 = $2277 + 6 | 0;
 $8230 = $2278 + 8 | 0;
 $8231 = $2279 + 2 | 0;
 $8232 = $2279 + 4 | 0;
 $8233 = $2279 + 6 | 0;
 $8234 = $2280 + 8 | 0;
 $8235 = $2281 + 2 | 0;
 $8236 = $2281 + 4 | 0;
 $8237 = $2281 + 6 | 0;
 $8238 = $2282 + 8 | 0;
 $8239 = $2283 + 2 | 0;
 $8240 = $2283 + 4 | 0;
 $8241 = $2283 + 6 | 0;
 $8242 = $2284 + 8 | 0;
 $8243 = $2285 + 2 | 0;
 $8244 = $2285 + 4 | 0;
 $8245 = $2285 + 6 | 0;
 $8246 = $2286 + 8 | 0;
 $8247 = $2287 + 2 | 0;
 $8248 = $2287 + 4 | 0;
 $8249 = $2287 + 6 | 0;
 $8250 = $2288 + 8 | 0;
 $8251 = $2289 + 2 | 0;
 $8252 = $2289 + 4 | 0;
 $8253 = $2289 + 6 | 0;
 $8254 = $2290 + 8 | 0;
 $8255 = $2291 + 2 | 0;
 $8256 = $2291 + 4 | 0;
 $8257 = $2291 + 6 | 0;
 $8258 = $2292 + 8 | 0;
 $8259 = $2293 + 2 | 0;
 $8260 = $2293 + 4 | 0;
 $8261 = $2293 + 6 | 0;
 $8262 = $2294 + 8 | 0;
 $8263 = $2295 + 2 | 0;
 $8264 = $2295 + 4 | 0;
 $8265 = $2295 + 6 | 0;
 $8266 = $2296 + 8 | 0;
 $8267 = $2297 + 2 | 0;
 $8268 = $2297 + 4 | 0;
 $8269 = $2297 + 6 | 0;
 $8270 = $2298 + 8 | 0;
 $8271 = $2299 + 2 | 0;
 $8272 = $2299 + 4 | 0;
 $8273 = $2299 + 6 | 0;
 $8274 = $2300 + 8 | 0;
 $8275 = $2301 + 2 | 0;
 $8276 = $2301 + 4 | 0;
 $8277 = $2301 + 6 | 0;
 $8278 = $2302 + 8 | 0;
 $8279 = $2303 + 2 | 0;
 $8280 = $2303 + 4 | 0;
 $8281 = $2303 + 6 | 0;
 $8282 = $2304 + 8 | 0;
 $8283 = $2305 + 2 | 0;
 $8284 = $2305 + 4 | 0;
 $8285 = $2305 + 6 | 0;
 $8286 = $2306 + 8 | 0;
 $8287 = $2307 + 2 | 0;
 $8288 = $2307 + 4 | 0;
 $8289 = $2307 + 6 | 0;
 $8290 = $2308 + 8 | 0;
 $8291 = $2309 + 2 | 0;
 $8292 = $2309 + 4 | 0;
 $8293 = $2309 + 6 | 0;
 $8294 = $2310 + 8 | 0;
 $8295 = $2311 + 2 | 0;
 $8296 = $2311 + 4 | 0;
 $8297 = $2311 + 6 | 0;
 $8298 = $2312 + 8 | 0;
 $8299 = $2313 + 2 | 0;
 $8300 = $2313 + 4 | 0;
 $8301 = $2313 + 6 | 0;
 $8302 = $2314 + 8 | 0;
 $8303 = $2315 + 2 | 0;
 $8304 = $2315 + 4 | 0;
 $8305 = $2315 + 6 | 0;
 $8306 = $2316 + 8 | 0;
 $8307 = $2317 + 2 | 0;
 $8308 = $2317 + 4 | 0;
 $8309 = $2317 + 6 | 0;
 $8310 = $2318 + 8 | 0;
 $8311 = $2319 + 2 | 0;
 $8312 = $2319 + 4 | 0;
 $8313 = $2319 + 6 | 0;
 $8314 = $2320 + 8 | 0;
 $8315 = $2321 + 2 | 0;
 $8316 = $2321 + 4 | 0;
 $8317 = $2321 + 6 | 0;
 $8318 = $2322 + 8 | 0;
 $8319 = $2323 + 2 | 0;
 $8320 = $2323 + 4 | 0;
 $8321 = $2323 + 6 | 0;
 $8322 = $2324 + 8 | 0;
 $8323 = $2325 + 2 | 0;
 $8324 = $2325 + 4 | 0;
 $8325 = $2325 + 6 | 0;
 $8326 = $2326 + 8 | 0;
 $8327 = $2327 + 2 | 0;
 $8328 = $2327 + 4 | 0;
 $8329 = $2327 + 6 | 0;
 $8330 = $2328 + 8 | 0;
 $8331 = $2329 + 2 | 0;
 $8332 = $2329 + 4 | 0;
 $8333 = $2329 + 6 | 0;
 $8334 = $2330 + 8 | 0;
 $8335 = $2331 + 2 | 0;
 $8336 = $2331 + 4 | 0;
 $8337 = $2331 + 6 | 0;
 $8338 = $2332 + 8 | 0;
 $8339 = $2333 + 2 | 0;
 $8340 = $2333 + 4 | 0;
 $8341 = $2333 + 6 | 0;
 $8342 = $2334 + 8 | 0;
 $8343 = $2335 + 2 | 0;
 $8344 = $2335 + 4 | 0;
 $8345 = $2335 + 6 | 0;
 $8346 = $2336 + 8 | 0;
 $8347 = $2337 + 2 | 0;
 $8348 = $2337 + 4 | 0;
 $8349 = $2337 + 6 | 0;
 $8350 = $2338 + 8 | 0;
 $8351 = $2339 + 2 | 0;
 $8352 = $2339 + 4 | 0;
 $8353 = $2339 + 6 | 0;
 $8354 = $2340 + 8 | 0;
 $8355 = $2341 + 2 | 0;
 $8356 = $2341 + 4 | 0;
 $8357 = $2341 + 6 | 0;
 $8358 = $2342 + 8 | 0;
 $8359 = $2343 + 2 | 0;
 $8360 = $2343 + 4 | 0;
 $8361 = $2343 + 6 | 0;
 $8362 = $2344 + 8 | 0;
 $8363 = $2345 + 2 | 0;
 $8364 = $2345 + 4 | 0;
 $8365 = $2345 + 6 | 0;
 $8366 = $2346 + 8 | 0;
 $8367 = $2347 + 2 | 0;
 $8368 = $2347 + 4 | 0;
 $8369 = $2347 + 6 | 0;
 $8370 = $2348 + 8 | 0;
 $8371 = $2349 + 2 | 0;
 $8372 = $2349 + 4 | 0;
 $8373 = $2349 + 6 | 0;
 $8374 = $2350 + 8 | 0;
 $8375 = $2351 + 2 | 0;
 $8376 = $2351 + 4 | 0;
 $8377 = $2351 + 6 | 0;
 $8378 = $2352 + 8 | 0;
 $8379 = $2353 + 2 | 0;
 $8380 = $2353 + 4 | 0;
 $8381 = $2353 + 6 | 0;
 $8382 = $2354 + 8 | 0;
 $8383 = $2355 + 2 | 0;
 $8384 = $2355 + 4 | 0;
 $8385 = $2355 + 6 | 0;
 $8386 = $2356 + 8 | 0;
 $8387 = $2357 + 2 | 0;
 $8388 = $2357 + 4 | 0;
 $8389 = $2357 + 6 | 0;
 $8390 = $2358 + 8 | 0;
 $8391 = $2359 + 2 | 0;
 $8392 = $2359 + 4 | 0;
 $8393 = $2359 + 6 | 0;
 $8394 = $2360 + 8 | 0;
 $8395 = $2361 + 2 | 0;
 $8396 = $2361 + 4 | 0;
 $8397 = $2361 + 6 | 0;
 $8398 = $2362 + 8 | 0;
 $8399 = $2363 + 2 | 0;
 $8400 = $2363 + 4 | 0;
 $8401 = $2363 + 6 | 0;
 $8402 = $2364 + 8 | 0;
 $8403 = $2365 + 2 | 0;
 $8404 = $2365 + 4 | 0;
 $8405 = $2365 + 6 | 0;
 $8406 = $2366 + 8 | 0;
 $8407 = $2367 + 2 | 0;
 $8408 = $2367 + 4 | 0;
 $8409 = $2367 + 6 | 0;
 $8410 = $2368 + 8 | 0;
 $8411 = $2369 + 2 | 0;
 $8412 = $2369 + 4 | 0;
 $8413 = $2369 + 6 | 0;
 $8414 = $2370 + 8 | 0;
 $8415 = $2371 + 2 | 0;
 $8416 = $2371 + 4 | 0;
 $8417 = $2371 + 6 | 0;
 $8418 = $2372 + 8 | 0;
 $8419 = $2373 + 2 | 0;
 $8420 = $2373 + 4 | 0;
 $8421 = $2373 + 6 | 0;
 $8422 = $2374 + 8 | 0;
 $8423 = $2375 + 2 | 0;
 $8424 = $2375 + 4 | 0;
 $8425 = $2375 + 6 | 0;
 $8426 = $2376 + 8 | 0;
 $8427 = $2377 + 2 | 0;
 $8428 = $2377 + 4 | 0;
 $8429 = $2377 + 6 | 0;
 $8430 = $2378 + 8 | 0;
 $8431 = $2379 + 2 | 0;
 $8432 = $2379 + 4 | 0;
 $8433 = $2379 + 6 | 0;
 $8434 = $2380 + 8 | 0;
 $8435 = $2381 + 2 | 0;
 $8436 = $2381 + 4 | 0;
 $8437 = $2381 + 6 | 0;
 $8438 = $2382 + 8 | 0;
 $8439 = $2383 + 2 | 0;
 $8440 = $2383 + 4 | 0;
 $8441 = $2383 + 6 | 0;
 $8442 = $2384 + 8 | 0;
 $8443 = $2385 + 2 | 0;
 $8444 = $2385 + 4 | 0;
 $8445 = $2385 + 6 | 0;
 $8446 = $2386 + 8 | 0;
 $8447 = $2387 + 2 | 0;
 $8448 = $2387 + 4 | 0;
 $8449 = $2387 + 6 | 0;
 $8450 = $2388 + 8 | 0;
 $8451 = $2389 + 2 | 0;
 $8452 = $2389 + 4 | 0;
 $8453 = $2389 + 6 | 0;
 $8454 = $2390 + 8 | 0;
 $8455 = $2391 + 2 | 0;
 $8456 = $2391 + 4 | 0;
 $8457 = $2391 + 6 | 0;
 $8458 = $2392 + 8 | 0;
 $8459 = $2393 + 2 | 0;
 $8460 = $2393 + 4 | 0;
 $8461 = $2393 + 6 | 0;
 $8462 = $2394 + 8 | 0;
 $8463 = $2395 + 2 | 0;
 $8464 = $2395 + 4 | 0;
 $8465 = $2395 + 6 | 0;
 $8466 = $2396 + 8 | 0;
 $8467 = $2397 + 2 | 0;
 $8468 = $2397 + 4 | 0;
 $8469 = $2397 + 6 | 0;
 $8470 = $2398 + 8 | 0;
 $8471 = $2399 + 2 | 0;
 $8472 = $2399 + 4 | 0;
 $8473 = $2399 + 6 | 0;
 $8474 = $2400 + 8 | 0;
 $8475 = $2401 + 2 | 0;
 $8476 = $2401 + 4 | 0;
 $8477 = $2401 + 6 | 0;
 $8478 = $2402 + 8 | 0;
 $8479 = $2403 + 2 | 0;
 $8480 = $2403 + 4 | 0;
 $8481 = $2403 + 6 | 0;
 $8482 = $2404 + 8 | 0;
 $8483 = $2405 + 2 | 0;
 $8484 = $2405 + 4 | 0;
 $8485 = $2405 + 6 | 0;
 $8486 = $2406 + 8 | 0;
 $8487 = $2407 + 2 | 0;
 $8488 = $2407 + 4 | 0;
 $8489 = $2407 + 6 | 0;
 $8490 = $2408 + 8 | 0;
 $8491 = $2409 + 2 | 0;
 $8492 = $2409 + 4 | 0;
 $8493 = $2409 + 6 | 0;
 $8494 = $2410 + 8 | 0;
 $8495 = $2411 + 2 | 0;
 $8496 = $2411 + 4 | 0;
 $8497 = $2411 + 6 | 0;
 $8498 = $2412 + 8 | 0;
 $8499 = $2413 + 2 | 0;
 $8500 = $2413 + 4 | 0;
 $8501 = $2413 + 6 | 0;
 $8502 = $2414 + 8 | 0;
 $8503 = $2415 + 2 | 0;
 $8504 = $2415 + 4 | 0;
 $8505 = $2415 + 6 | 0;
 $8506 = $2416 + 8 | 0;
 $8507 = $2417 + 2 | 0;
 $8508 = $2417 + 4 | 0;
 $8509 = $2417 + 6 | 0;
 $8510 = $2418 + 8 | 0;
 $8511 = $2419 + 2 | 0;
 $8512 = $2419 + 4 | 0;
 $8513 = $2419 + 6 | 0;
 $8514 = $2420 + 8 | 0;
 $8515 = $2421 + 2 | 0;
 $8516 = $2421 + 4 | 0;
 $8517 = $2421 + 6 | 0;
 $8518 = $2422 + 8 | 0;
 $8519 = $2423 + 2 | 0;
 $8520 = $2423 + 4 | 0;
 $8521 = $2423 + 6 | 0;
 $8522 = $2424 + 8 | 0;
 $8523 = $2424 + 10 | 0;
 $8524 = $2424 + 12 | 0;
 $8525 = $2425 + 2 | 0;
 $8526 = $2425 + 4 | 0;
 $8527 = $2425 + 6 | 0;
 $8528 = $2426 + 8 | 0;
 $8529 = $2427 + 2 | 0;
 $8530 = $2427 + 4 | 0;
 $8531 = $2427 + 6 | 0;
 $8532 = $2428 + 8 | 0;
 $8533 = $2429 + 2 | 0;
 $8534 = $2429 + 4 | 0;
 $8535 = $2429 + 6 | 0;
 $8536 = $2430 + 8 | 0;
 $8537 = $2431 + 2 | 0;
 $8538 = $2431 + 4 | 0;
 $8539 = $2431 + 6 | 0;
 $8540 = $2432 + 8 | 0;
 $8541 = $2433 + 2 | 0;
 $8542 = $2433 + 4 | 0;
 $8543 = $2433 + 6 | 0;
 $8544 = $2434 + 8 | 0;
 $8545 = $2435 + 2 | 0;
 $8546 = $2435 + 4 | 0;
 $8547 = $2435 + 6 | 0;
 $8548 = $2436 + 8 | 0;
 $8549 = $2437 + 2 | 0;
 $8550 = $2437 + 4 | 0;
 $8551 = $2437 + 6 | 0;
 $8552 = $2438 + 8 | 0;
 $8553 = $2439 + 2 | 0;
 $8554 = $2439 + 4 | 0;
 $8555 = $2439 + 6 | 0;
 $8556 = $2440 + 8 | 0;
 $8557 = $2441 + 2 | 0;
 $8558 = $2441 + 4 | 0;
 $8559 = $2441 + 6 | 0;
 $8560 = $2442 + 8 | 0;
 $8561 = $2442 + 12 | 0;
 $8562 = $2442 + 16 | 0;
 $8563 = $2442 + 20 | 0;
 $8564 = $2442 + 21 | 0;
 $8565 = $2442 + 22 | 0;
 $8566 = $2442 + 23 | 0;
 $8567 = $2442 + 24 | 0;
 $8568 = $2443 + 2 | 0;
 $8569 = $2443 + 4 | 0;
 $8570 = $2443 + 6 | 0;
 $8571 = $2444 + 8 | 0;
 $8572 = $2445 + 2 | 0;
 $8573 = $2445 + 4 | 0;
 $8574 = $2445 + 6 | 0;
 $8575 = $2446 + 8 | 0;
 $8576 = $2447 + 2 | 0;
 $8577 = $2447 + 4 | 0;
 $8578 = $2447 + 6 | 0;
 $8579 = $2448 + 8 | 0;
 $8580 = $2449 + 2 | 0;
 $8581 = $2449 + 4 | 0;
 $8582 = $2449 + 6 | 0;
 $8583 = $2450 + 8 | 0;
 $8584 = $2451 + 2 | 0;
 $8585 = $2451 + 4 | 0;
 $8586 = $2451 + 6 | 0;
 $8587 = $2452 + 8 | 0;
 $8588 = $2453 + 2 | 0;
 $8589 = $2453 + 4 | 0;
 $8590 = $2453 + 6 | 0;
 $8591 = $2454 + 8 | 0;
 $8592 = $2455 + 2 | 0;
 $8593 = $2455 + 4 | 0;
 $8594 = $2455 + 6 | 0;
 $8595 = $2456 + 8 | 0;
 $8596 = $2457 + 2 | 0;
 $8597 = $2457 + 4 | 0;
 $8598 = $2457 + 6 | 0;
 $8599 = $2458 + 8 | 0;
 $8600 = $2459 + 2 | 0;
 $8601 = $2459 + 4 | 0;
 $8602 = $2459 + 6 | 0;
 $8603 = $2460 + 8 | 0;
 $8604 = $2461 + 2 | 0;
 $8605 = $2461 + 4 | 0;
 $8606 = $2461 + 6 | 0;
 $8607 = $2462 + 8 | 0;
 $8608 = $2462 + 12 | 0;
 $8609 = $2462 + 16 | 0;
 $8610 = $2462 + 20 | 0;
 $8611 = $2462 + 21 | 0;
 $8612 = $2462 + 22 | 0;
 $8613 = $2462 + 23 | 0;
 $8614 = $2462 + 24 | 0;
 $8615 = $2463 + 2 | 0;
 $8616 = $2463 + 4 | 0;
 $8617 = $2463 + 6 | 0;
 $8618 = $2464 + 8 | 0;
 $8619 = $2465 + 2 | 0;
 $8620 = $2465 + 4 | 0;
 $8621 = $2465 + 6 | 0;
 $8622 = $2466 + 8 | 0;
 $8623 = $2467 + 2 | 0;
 $8624 = $2467 + 4 | 0;
 $8625 = $2467 + 6 | 0;
 $8626 = $2468 + 8 | 0;
 $8627 = $2469 + 2 | 0;
 $8628 = $2469 + 4 | 0;
 $8629 = $2469 + 6 | 0;
 $8630 = $2470 + 8 | 0;
 $8631 = $2471 + 2 | 0;
 $8632 = $2471 + 4 | 0;
 $8633 = $2471 + 6 | 0;
 $8634 = $2472 + 8 | 0;
 $8635 = $2473 + 2 | 0;
 $8636 = $2473 + 4 | 0;
 $8637 = $2473 + 6 | 0;
 $8638 = $2474 + 8 | 0;
 $8639 = $2475 + 2 | 0;
 $8640 = $2475 + 4 | 0;
 $8641 = $2475 + 6 | 0;
 $8642 = $2476 + 8 | 0;
 $8643 = $2477 + 2 | 0;
 $8644 = $2477 + 4 | 0;
 $8645 = $2477 + 6 | 0;
 $8646 = $2478 + 8 | 0;
 $8647 = $2479 + 2 | 0;
 $8648 = $2479 + 4 | 0;
 $8649 = $2479 + 6 | 0;
 $8650 = $2480 + 8 | 0;
 $8651 = $2481 + 2 | 0;
 $8652 = $2481 + 4 | 0;
 $8653 = $2481 + 6 | 0;
 $8654 = $2482 + 8 | 0;
 $8655 = $2483 + 2 | 0;
 $8656 = $2483 + 4 | 0;
 $8657 = $2483 + 6 | 0;
 $8658 = $2484 + 8 | 0;
 $8659 = $2485 + 2 | 0;
 $8660 = $2485 + 4 | 0;
 $8661 = $2485 + 6 | 0;
 $8662 = $2486 + 8 | 0;
 $8663 = $2487 + 2 | 0;
 $8664 = $2487 + 4 | 0;
 $8665 = $2487 + 6 | 0;
 $8666 = $2488 + 8 | 0;
 $8667 = $2489 + 2 | 0;
 $8668 = $2489 + 4 | 0;
 $8669 = $2489 + 6 | 0;
 $8670 = $2490 + 8 | 0;
 $8671 = $2491 + 2 | 0;
 $8672 = $2491 + 4 | 0;
 $8673 = $2491 + 6 | 0;
 $8674 = $2492 + 8 | 0;
 $8675 = $2492 + 12 | 0;
 $8676 = $2492 + 16 | 0;
 $8677 = $2492 + 20 | 0;
 $8678 = $2492 + 21 | 0;
 $8679 = $2492 + 22 | 0;
 $8680 = $2492 + 23 | 0;
 $8681 = $2492 + 24 | 0;
 $8682 = $2493 + 2 | 0;
 $8683 = $2493 + 4 | 0;
 $8684 = $2493 + 6 | 0;
 $8685 = $2494 + 8 | 0;
 $8686 = $2495 + 2 | 0;
 $8687 = $2495 + 4 | 0;
 $8688 = $2495 + 6 | 0;
 $8689 = $2496 + 8 | 0;
 $8690 = $2497 + 2 | 0;
 $8691 = $2497 + 4 | 0;
 $8692 = $2497 + 6 | 0;
 $8693 = $2498 + 8 | 0;
 $8694 = $2499 + 2 | 0;
 $8695 = $2499 + 4 | 0;
 $8696 = $2499 + 6 | 0;
 $8697 = $2500 + 8 | 0;
 $8698 = $2501 + 2 | 0;
 $8699 = $2501 + 4 | 0;
 $8700 = $2501 + 6 | 0;
 $8701 = $2502 + 8 | 0;
 $8702 = $2503 + 2 | 0;
 $8703 = $2503 + 4 | 0;
 $8704 = $2503 + 6 | 0;
 $8705 = $2504 + 8 | 0;
 $8706 = $2505 + 2 | 0;
 $8707 = $2505 + 4 | 0;
 $8708 = $2505 + 6 | 0;
 $8709 = $2506 + 8 | 0;
 $8710 = $2507 + 2 | 0;
 $8711 = $2507 + 4 | 0;
 $8712 = $2507 + 6 | 0;
 $8713 = $2508 + 8 | 0;
 $8714 = $2509 + 2 | 0;
 $8715 = $2509 + 4 | 0;
 $8716 = $2509 + 6 | 0;
 $8717 = $2510 + 8 | 0;
 $8718 = $2511 + 2 | 0;
 $8719 = $2511 + 4 | 0;
 $8720 = $2511 + 6 | 0;
 $8721 = $2512 + 8 | 0;
 $8722 = $2512 + 12 | 0;
 $8723 = $2512 + 16 | 0;
 $8724 = $2512 + 20 | 0;
 $8725 = $2512 + 21 | 0;
 $8726 = $2512 + 22 | 0;
 $8727 = $2512 + 23 | 0;
 $8728 = $2512 + 24 | 0;
 $8729 = $2513 + 2 | 0;
 $8730 = $2513 + 4 | 0;
 $8731 = $2513 + 6 | 0;
 $8732 = $2514 + 8 | 0;
 $8733 = $2515 + 2 | 0;
 $8734 = $2515 + 4 | 0;
 $8735 = $2515 + 6 | 0;
 $8736 = $2516 + 8 | 0;
 $8737 = $2517 + 2 | 0;
 $8738 = $2517 + 4 | 0;
 $8739 = $2517 + 6 | 0;
 $8740 = $2518 + 8 | 0;
 $8741 = $2519 + 2 | 0;
 $8742 = $2519 + 4 | 0;
 $8743 = $2519 + 6 | 0;
 $8744 = $2520 + 8 | 0;
 $8745 = $2521 + 2 | 0;
 $8746 = $2521 + 4 | 0;
 $8747 = $2521 + 6 | 0;
 $8748 = $2522 + 8 | 0;
 $8749 = $2523 + 2 | 0;
 $8750 = $2523 + 4 | 0;
 $8751 = $2523 + 6 | 0;
 $8752 = $2524 + 8 | 0;
 $8753 = $2525 + 2 | 0;
 $8754 = $2525 + 4 | 0;
 $8755 = $2525 + 6 | 0;
 $8756 = $2526 + 8 | 0;
 $8757 = $2527 + 2 | 0;
 $8758 = $2527 + 4 | 0;
 $8759 = $2527 + 6 | 0;
 $8760 = $2528 + 8 | 0;
 $8761 = $2529 + 2 | 0;
 $8762 = $2529 + 4 | 0;
 $8763 = $2529 + 6 | 0;
 $8764 = $2530 + 8 | 0;
 $8765 = $2531 + 2 | 0;
 $8766 = $2531 + 4 | 0;
 $8767 = $2531 + 6 | 0;
 $8768 = $2532 + 8 | 0;
 $8769 = $2533 + 2 | 0;
 $8770 = $2533 + 4 | 0;
 $8771 = $2533 + 6 | 0;
 $8772 = $2534 + 8 | 0;
 $8773 = $2535 + 2 | 0;
 $8774 = $2535 + 4 | 0;
 $8775 = $2535 + 6 | 0;
 $8776 = $2536 + 8 | 0;
 $8777 = $2537 + 2 | 0;
 $8778 = $2537 + 4 | 0;
 $8779 = $2537 + 6 | 0;
 $8780 = $2538 + 8 | 0;
 $8781 = $2539 + 2 | 0;
 $8782 = $2539 + 4 | 0;
 $8783 = $2539 + 6 | 0;
 $8784 = $2540 + 8 | 0;
 $8785 = $2541 + 2 | 0;
 $8786 = $2541 + 4 | 0;
 $8787 = $2541 + 6 | 0;
 $8788 = $2542 + 8 | 0;
 $8789 = $2543 + 2 | 0;
 $8790 = $2543 + 4 | 0;
 $8791 = $2543 + 6 | 0;
 $8792 = $2544 + 8 | 0;
 $8793 = $2545 + 2 | 0;
 $8794 = $2545 + 4 | 0;
 $8795 = $2545 + 6 | 0;
 $8796 = $2546 + 8 | 0;
 $8797 = $2547 + 2 | 0;
 $8798 = $2547 + 4 | 0;
 $8799 = $2547 + 6 | 0;
 $8800 = $2548 + 8 | 0;
 $8801 = $2549 + 2 | 0;
 $8802 = $2549 + 4 | 0;
 $8803 = $2549 + 6 | 0;
 $8804 = $2550 + 8 | 0;
 $8805 = $2551 + 2 | 0;
 $8806 = $2551 + 4 | 0;
 $8807 = $2551 + 6 | 0;
 $8808 = $2552 + 8 | 0;
 $8809 = $2553 + 2 | 0;
 $8810 = $2553 + 4 | 0;
 $8811 = $2553 + 6 | 0;
 $8812 = $2554 + 8 | 0;
 $8813 = $2555 + 2 | 0;
 $8814 = $2555 + 4 | 0;
 $8815 = $2555 + 6 | 0;
 $8816 = $2556 + 8 | 0;
 $8817 = $2557 + 2 | 0;
 $8818 = $2557 + 4 | 0;
 $8819 = $2557 + 6 | 0;
 $8820 = $2558 + 8 | 0;
 $8821 = $2559 + 2 | 0;
 $8822 = $2559 + 4 | 0;
 $8823 = $2559 + 6 | 0;
 $8824 = $2560 + 8 | 0;
 $8825 = $2561 + 2 | 0;
 $8826 = $2561 + 4 | 0;
 $8827 = $2561 + 6 | 0;
 $8828 = $2562 + 8 | 0;
 $8829 = $2563 + 2 | 0;
 $8830 = $2563 + 4 | 0;
 $8831 = $2563 + 6 | 0;
 $8832 = $2564 + 8 | 0;
 $8833 = $2565 + 2 | 0;
 $8834 = $2565 + 4 | 0;
 $8835 = $2565 + 6 | 0;
 $8836 = $2566 + 8 | 0;
 $8837 = $2567 + 2 | 0;
 $8838 = $2567 + 4 | 0;
 $8839 = $2567 + 6 | 0;
 $8840 = $2568 + 8 | 0;
 $8841 = $2569 + 2 | 0;
 $8842 = $2569 + 4 | 0;
 $8843 = $2569 + 6 | 0;
 $8844 = $2570 + 8 | 0;
 $8845 = $2571 + 2 | 0;
 $8846 = $2571 + 4 | 0;
 $8847 = $2571 + 6 | 0;
 $8848 = $2572 + 8 | 0;
 $8849 = $2573 + 2 | 0;
 $8850 = $2573 + 4 | 0;
 $8851 = $2573 + 6 | 0;
 $8852 = $2574 + 8 | 0;
 $8853 = $2575 + 2 | 0;
 $8854 = $2575 + 4 | 0;
 $8855 = $2575 + 6 | 0;
 $8856 = $2576 + 8 | 0;
 $8857 = $2577 + 2 | 0;
 $8858 = $2577 + 4 | 0;
 $8859 = $2577 + 6 | 0;
 $8860 = $2578 + 8 | 0;
 $8861 = $2579 + 2 | 0;
 $8862 = $2579 + 4 | 0;
 $8863 = $2579 + 6 | 0;
 $8864 = $2580 + 8 | 0;
 $8865 = $2581 + 2 | 0;
 $8866 = $2581 + 4 | 0;
 $8867 = $2581 + 6 | 0;
 $8868 = $2582 + 8 | 0;
 $8869 = $2583 + 2 | 0;
 $8870 = $2583 + 4 | 0;
 $8871 = $2583 + 6 | 0;
 $8872 = $2584 + 8 | 0;
 $8873 = $2585 + 2 | 0;
 $8874 = $2585 + 4 | 0;
 $8875 = $2585 + 6 | 0;
 $8876 = $2586 + 8 | 0;
 $8877 = $2587 + 2 | 0;
 $8878 = $2587 + 4 | 0;
 $8879 = $2587 + 6 | 0;
 $8880 = $2588 + 8 | 0;
 $8881 = $2589 + 2 | 0;
 $8882 = $2589 + 4 | 0;
 $8883 = $2589 + 6 | 0;
 $8884 = $2590 + 8 | 0;
 $8885 = $2591 + 2 | 0;
 $8886 = $2591 + 4 | 0;
 $8887 = $2591 + 6 | 0;
 $8888 = $2592 + 8 | 0;
 $8889 = $2593 + 2 | 0;
 $8890 = $2593 + 4 | 0;
 $8891 = $2593 + 6 | 0;
 $8892 = $2594 + 8 | 0;
 $8893 = $2595 + 2 | 0;
 $8894 = $2595 + 4 | 0;
 $8895 = $2595 + 6 | 0;
 $8896 = $2596 + 8 | 0;
 $8897 = $2597 + 2 | 0;
 $8898 = $2597 + 4 | 0;
 $8899 = $2597 + 6 | 0;
 $8900 = $2598 + 8 | 0;
 $8901 = $2599 + 2 | 0;
 $8902 = $2599 + 4 | 0;
 $8903 = $2599 + 6 | 0;
 $8904 = $2600 + 8 | 0;
 $8905 = $2601 + 2 | 0;
 $8906 = $2601 + 4 | 0;
 $8907 = $2601 + 6 | 0;
 $8908 = $2602 + 8 | 0;
 $8909 = $2603 + 2 | 0;
 $8910 = $2603 + 4 | 0;
 $8911 = $2603 + 6 | 0;
 $8912 = $2604 + 8 | 0;
 $8913 = $2605 + 2 | 0;
 $8914 = $2605 + 4 | 0;
 $8915 = $2605 + 6 | 0;
 $8916 = $2606 + 8 | 0;
 $8917 = $2607 + 2 | 0;
 $8918 = $2607 + 4 | 0;
 $8919 = $2607 + 6 | 0;
 $8920 = $2608 + 8 | 0;
 $8921 = $2609 + 2 | 0;
 $8922 = $2609 + 4 | 0;
 $8923 = $2609 + 6 | 0;
 $8924 = $2610 + 8 | 0;
 $8925 = $2611 + 2 | 0;
 $8926 = $2611 + 4 | 0;
 $8927 = $2611 + 6 | 0;
 $8928 = $2612 + 8 | 0;
 $8929 = $2613 + 2 | 0;
 $8930 = $2613 + 4 | 0;
 $8931 = $2613 + 6 | 0;
 $8932 = $2614 + 8 | 0;
 $8933 = $2615 + 2 | 0;
 $8934 = $2615 + 4 | 0;
 $8935 = $2615 + 6 | 0;
 $8936 = $2616 + 8 | 0;
 $8937 = $2616 + 12 | 0;
 $8938 = $2616 + 16 | 0;
 $8939 = $2616 + 20 | 0;
 $8940 = $2616 + 21 | 0;
 $8941 = $2616 + 22 | 0;
 $8942 = $2616 + 23 | 0;
 $8943 = $2616 + 24 | 0;
 $8944 = $2617 + 2 | 0;
 $8945 = $2617 + 4 | 0;
 $8946 = $2617 + 6 | 0;
 $8947 = $2618 + 8 | 0;
 $8948 = $2619 + 2 | 0;
 $8949 = $2619 + 4 | 0;
 $8950 = $2619 + 6 | 0;
 $8951 = $2620 + 8 | 0;
 $8952 = $2621 + 2 | 0;
 $8953 = $2621 + 4 | 0;
 $8954 = $2621 + 6 | 0;
 $8955 = $2622 + 8 | 0;
 $8956 = $2623 + 2 | 0;
 $8957 = $2623 + 4 | 0;
 $8958 = $2623 + 6 | 0;
 $8959 = $2624 + 8 | 0;
 $8960 = $2625 + 2 | 0;
 $8961 = $2625 + 4 | 0;
 $8962 = $2625 + 6 | 0;
 $8963 = $2626 + 8 | 0;
 $8964 = $2627 + 2 | 0;
 $8965 = $2627 + 4 | 0;
 $8966 = $2627 + 6 | 0;
 $8967 = $2628 + 8 | 0;
 $8968 = $2629 + 2 | 0;
 $8969 = $2629 + 4 | 0;
 $8970 = $2629 + 6 | 0;
 $8971 = $2630 + 8 | 0;
 $8972 = $2631 + 2 | 0;
 $8973 = $2631 + 4 | 0;
 $8974 = $2631 + 6 | 0;
 $8975 = $2632 + 8 | 0;
 $8976 = $2633 + 2 | 0;
 $8977 = $2633 + 4 | 0;
 $8978 = $2633 + 6 | 0;
 $8979 = $2634 + 8 | 0;
 $8980 = $2635 + 2 | 0;
 $8981 = $2635 + 4 | 0;
 $8982 = $2635 + 6 | 0;
 $8983 = $2636 + 8 | 0;
 $8984 = $2637 + 2 | 0;
 $8985 = $2637 + 4 | 0;
 $8986 = $2637 + 6 | 0;
 $8987 = $2638 + 8 | 0;
 $8988 = $2639 + 2 | 0;
 $8989 = $2639 + 4 | 0;
 $8990 = $2639 + 6 | 0;
 $8991 = $2640 + 8 | 0;
 $8992 = $2641 + 2 | 0;
 $8993 = $2641 + 4 | 0;
 $8994 = $2641 + 6 | 0;
 $8995 = $2642 + 8 | 0;
 $8996 = $2643 + 2 | 0;
 $8997 = $2643 + 4 | 0;
 $8998 = $2643 + 6 | 0;
 $8999 = $2644 + 8 | 0;
 $9000 = $2645 + 2 | 0;
 $9001 = $2645 + 4 | 0;
 $9002 = $2645 + 6 | 0;
 $9003 = $2646 + 8 | 0;
 $9004 = $2647 + 2 | 0;
 $9005 = $2647 + 4 | 0;
 $9006 = $2647 + 6 | 0;
 $9007 = $2648 + 8 | 0;
 $9008 = $2649 + 2 | 0;
 $9009 = $2649 + 4 | 0;
 $9010 = $2649 + 6 | 0;
 $9011 = $2650 + 8 | 0;
 $9012 = $2651 + 2 | 0;
 $9013 = $2651 + 4 | 0;
 $9014 = $2651 + 6 | 0;
 $9015 = $2652 + 8 | 0;
 $9016 = $2653 + 2 | 0;
 $9017 = $2653 + 4 | 0;
 $9018 = $2653 + 6 | 0;
 $9019 = $2654 + 8 | 0;
 $9020 = $2655 + 2 | 0;
 $9021 = $2655 + 4 | 0;
 $9022 = $2655 + 6 | 0;
 $9023 = $2656 + 8 | 0;
 $9024 = $2657 + 2 | 0;
 $9025 = $2657 + 4 | 0;
 $9026 = $2657 + 6 | 0;
 $9027 = $2658 + 8 | 0;
 $9028 = $2659 + 2 | 0;
 $9029 = $2659 + 4 | 0;
 $9030 = $2659 + 6 | 0;
 $9031 = $2660 + 8 | 0;
 $9032 = $2661 + 2 | 0;
 $9033 = $2661 + 4 | 0;
 $9034 = $2661 + 6 | 0;
 $9035 = $2662 + 8 | 0;
 $9036 = $2663 + 2 | 0;
 $9037 = $2663 + 4 | 0;
 $9038 = $2663 + 6 | 0;
 $9039 = $2664 + 8 | 0;
 $9040 = $2665 + 2 | 0;
 $9041 = $2665 + 4 | 0;
 $9042 = $2665 + 6 | 0;
 $9043 = $2666 + 8 | 0;
 $9044 = $2667 + 2 | 0;
 $9045 = $2667 + 4 | 0;
 $9046 = $2667 + 6 | 0;
 $9047 = $2668 + 8 | 0;
 $9048 = $2669 + 2 | 0;
 $9049 = $2669 + 4 | 0;
 $9050 = $2669 + 6 | 0;
 $9051 = $2670 + 8 | 0;
 $9052 = $2671 + 2 | 0;
 $9053 = $2671 + 4 | 0;
 $9054 = $2671 + 6 | 0;
 $9055 = $2672 + 8 | 0;
 $9056 = $2673 + 2 | 0;
 $9057 = $2673 + 4 | 0;
 $9058 = $2673 + 6 | 0;
 $9059 = $2674 + 8 | 0;
 $9060 = $2675 + 2 | 0;
 $9061 = $2675 + 4 | 0;
 $9062 = $2675 + 6 | 0;
 $9063 = $2676 + 8 | 0;
 $9064 = $2677 + 2 | 0;
 $9065 = $2677 + 4 | 0;
 $9066 = $2677 + 6 | 0;
 $9067 = $2678 + 8 | 0;
 $9068 = $2679 + 2 | 0;
 $9069 = $2679 + 4 | 0;
 $9070 = $2679 + 6 | 0;
 $9071 = $2680 + 8 | 0;
 $9072 = $2681 + 2 | 0;
 $9073 = $2681 + 4 | 0;
 $9074 = $2681 + 6 | 0;
 $9075 = $2682 + 8 | 0;
 $9076 = $2683 + 2 | 0;
 $9077 = $2683 + 4 | 0;
 $9078 = $2683 + 6 | 0;
 $9079 = $2684 + 8 | 0;
 $9080 = $2685 + 2 | 0;
 $9081 = $2685 + 4 | 0;
 $9082 = $2685 + 6 | 0;
 $9083 = $2686 + 8 | 0;
 $9084 = $2687 + 2 | 0;
 $9085 = $2687 + 4 | 0;
 $9086 = $2687 + 6 | 0;
 $9087 = $2688 + 8 | 0;
 $9088 = $2689 + 2 | 0;
 $9089 = $2689 + 4 | 0;
 $9090 = $2689 + 6 | 0;
 $9091 = $2690 + 8 | 0;
 $9092 = $2691 + 2 | 0;
 $9093 = $2691 + 4 | 0;
 $9094 = $2691 + 6 | 0;
 $9095 = $2692 + 8 | 0;
 $9096 = $2693 + 2 | 0;
 $9097 = $2693 + 4 | 0;
 $9098 = $2693 + 6 | 0;
 $9099 = $2694 + 8 | 0;
 $9100 = $2695 + 2 | 0;
 $9101 = $2695 + 4 | 0;
 $9102 = $2695 + 6 | 0;
 $9103 = $2696 + 8 | 0;
 $9104 = $2697 + 2 | 0;
 $9105 = $2697 + 4 | 0;
 $9106 = $2697 + 6 | 0;
 $9107 = $2698 + 8 | 0;
 $9108 = $2699 + 2 | 0;
 $9109 = $2699 + 4 | 0;
 $9110 = $2699 + 6 | 0;
 $9111 = $2700 + 8 | 0;
 $9112 = $2701 + 2 | 0;
 $9113 = $2701 + 4 | 0;
 $9114 = $2701 + 6 | 0;
 $9115 = $2702 + 8 | 0;
 $9116 = $2703 + 2 | 0;
 $9117 = $2703 + 4 | 0;
 $9118 = $2703 + 6 | 0;
 $9119 = $2704 + 8 | 0;
 $9120 = $2704 + 12 | 0;
 $9121 = $2704 + 16 | 0;
 $9122 = $2704 + 20 | 0;
 $9123 = $2704 + 21 | 0;
 $9124 = $2704 + 22 | 0;
 $9125 = $2704 + 23 | 0;
 $9126 = $2704 + 24 | 0;
 $9127 = $2705 + 2 | 0;
 $9128 = $2705 + 4 | 0;
 $9129 = $2705 + 6 | 0;
 $9130 = $2706 + 8 | 0;
 $9131 = $2707 + 2 | 0;
 $9132 = $2707 + 4 | 0;
 $9133 = $2707 + 6 | 0;
 $9134 = $2708 + 8 | 0;
 $9135 = $2709 + 2 | 0;
 $9136 = $2709 + 4 | 0;
 $9137 = $2709 + 6 | 0;
 $9138 = $2710 + 8 | 0;
 $9139 = $2711 + 2 | 0;
 $9140 = $2711 + 4 | 0;
 $9141 = $2711 + 6 | 0;
 $9142 = $2712 + 8 | 0;
 $9143 = $2713 + 2 | 0;
 $9144 = $2713 + 4 | 0;
 $9145 = $2713 + 6 | 0;
 $9146 = $2714 + 8 | 0;
 $9147 = $2715 + 2 | 0;
 $9148 = $2715 + 4 | 0;
 $9149 = $2715 + 6 | 0;
 $9150 = $2716 + 8 | 0;
 $9151 = $2717 + 2 | 0;
 $9152 = $2717 + 4 | 0;
 $9153 = $2717 + 6 | 0;
 $9154 = $2718 + 8 | 0;
 $9155 = $2719 + 2 | 0;
 $9156 = $2719 + 4 | 0;
 $9157 = $2719 + 6 | 0;
 $9158 = $2720 + 8 | 0;
 $9159 = $2721 + 2 | 0;
 $9160 = $2721 + 4 | 0;
 $9161 = $2721 + 6 | 0;
 $9162 = $2722 + 8 | 0;
 $9163 = $2723 + 2 | 0;
 $9164 = $2723 + 4 | 0;
 $9165 = $2723 + 6 | 0;
 $9166 = $2724 + 8 | 0;
 $9167 = $2724 + 10 | 0;
 $9168 = $2724 + 12 | 0;
 $9169 = $2725 + 2 | 0;
 $9170 = $2725 + 4 | 0;
 $9171 = $2725 + 6 | 0;
 $9172 = $2726 + 8 | 0;
 $9173 = $2727 + 2 | 0;
 $9174 = $2727 + 4 | 0;
 $9175 = $2727 + 6 | 0;
 $9176 = $2728 + 8 | 0;
 $9177 = $2729 + 2 | 0;
 $9178 = $2729 + 4 | 0;
 $9179 = $2729 + 6 | 0;
 $9180 = $2730 + 8 | 0;
 $9181 = $2731 + 2 | 0;
 $9182 = $2731 + 4 | 0;
 $9183 = $2731 + 6 | 0;
 $9184 = $2732 + 8 | 0;
 $9185 = $2733 + 2 | 0;
 $9186 = $2733 + 4 | 0;
 $9187 = $2733 + 6 | 0;
 $9188 = $2734 + 8 | 0;
 $9189 = $2735 + 2 | 0;
 $9190 = $2735 + 4 | 0;
 $9191 = $2735 + 6 | 0;
 $9192 = $2736 + 8 | 0;
 $9193 = $2737 + 2 | 0;
 $9194 = $2737 + 4 | 0;
 $9195 = $2737 + 6 | 0;
 $9196 = $2738 + 8 | 0;
 $9197 = $2739 + 2 | 0;
 $9198 = $2739 + 4 | 0;
 $9199 = $2739 + 6 | 0;
 $9200 = $2740 + 8 | 0;
 $9201 = $2741 + 2 | 0;
 $9202 = $2741 + 4 | 0;
 $9203 = $2741 + 6 | 0;
 $9204 = $2742 + 8 | 0;
 $9205 = $2743 + 2 | 0;
 $9206 = $2743 + 4 | 0;
 $9207 = $2743 + 6 | 0;
 $9208 = $2744 + 8 | 0;
 $9209 = $2745 + 2 | 0;
 $9210 = $2745 + 4 | 0;
 $9211 = $2745 + 6 | 0;
 $9212 = $2746 + 8 | 0;
 $9213 = $2747 + 2 | 0;
 $9214 = $2747 + 4 | 0;
 $9215 = $2747 + 6 | 0;
 $9216 = $2748 + 8 | 0;
 $9217 = $2749 + 2 | 0;
 $9218 = $2749 + 4 | 0;
 $9219 = $2749 + 6 | 0;
 $9220 = $2750 + 8 | 0;
 $9221 = $2751 + 2 | 0;
 $9222 = $2751 + 4 | 0;
 $9223 = $2751 + 6 | 0;
 $9224 = $2752 + 8 | 0;
 $9225 = $2753 + 2 | 0;
 $9226 = $2753 + 4 | 0;
 $9227 = $2753 + 6 | 0;
 $9228 = $2754 + 8 | 0;
 $9229 = $2755 + 2 | 0;
 $9230 = $2755 + 4 | 0;
 $9231 = $2755 + 6 | 0;
 $9232 = $2756 + 8 | 0;
 $9233 = $2757 + 2 | 0;
 $9234 = $2757 + 4 | 0;
 $9235 = $2757 + 6 | 0;
 $9236 = $2758 + 8 | 0;
 $9237 = $2759 + 2 | 0;
 $9238 = $2759 + 4 | 0;
 $9239 = $2759 + 6 | 0;
 $9240 = $2760 + 8 | 0;
 $9241 = $2761 + 2 | 0;
 $9242 = $2761 + 4 | 0;
 $9243 = $2761 + 6 | 0;
 $9244 = $2762 + 8 | 0;
 $9245 = $2763 + 2 | 0;
 $9246 = $2763 + 4 | 0;
 $9247 = $2763 + 6 | 0;
 $9248 = $2764 + 8 | 0;
 $9249 = $2765 + 2 | 0;
 $9250 = $2765 + 4 | 0;
 $9251 = $2765 + 6 | 0;
 $9252 = $2766 + 8 | 0;
 $9253 = $2767 + 2 | 0;
 $9254 = $2767 + 4 | 0;
 $9255 = $2767 + 6 | 0;
 $9256 = $2768 + 8 | 0;
 $9257 = $2769 + 2 | 0;
 $9258 = $2769 + 4 | 0;
 $9259 = $2769 + 6 | 0;
 $9260 = $2770 + 8 | 0;
 $9261 = $2771 + 2 | 0;
 $9262 = $2771 + 4 | 0;
 $9263 = $2771 + 6 | 0;
 $9264 = $2772 + 8 | 0;
 $9265 = $2773 + 2 | 0;
 $9266 = $2773 + 4 | 0;
 $9267 = $2773 + 6 | 0;
 $9268 = $2774 + 8 | 0;
 $9269 = $2775 + 2 | 0;
 $9270 = $2775 + 4 | 0;
 $9271 = $2775 + 6 | 0;
 $9272 = $2776 + 8 | 0;
 $9273 = $2777 + 2 | 0;
 $9274 = $2777 + 4 | 0;
 $9275 = $2777 + 6 | 0;
 $9276 = $2778 + 8 | 0;
 $9277 = $2779 + 2 | 0;
 $9278 = $2779 + 4 | 0;
 $9279 = $2779 + 6 | 0;
 $9280 = $2780 + 8 | 0;
 $9281 = $2781 + 2 | 0;
 $9282 = $2781 + 4 | 0;
 $9283 = $2781 + 6 | 0;
 $9284 = $2782 + 8 | 0;
 $9285 = $2783 + 2 | 0;
 $9286 = $2783 + 4 | 0;
 $9287 = $2783 + 6 | 0;
 $9288 = $2784 + 8 | 0;
 $9289 = $2785 + 2 | 0;
 $9290 = $2785 + 4 | 0;
 $9291 = $2785 + 6 | 0;
 $9292 = $2786 + 8 | 0;
 $9293 = $2787 + 2 | 0;
 $9294 = $2787 + 4 | 0;
 $9295 = $2787 + 6 | 0;
 $9296 = $2788 + 8 | 0;
 $9297 = $2789 + 2 | 0;
 $9298 = $2789 + 4 | 0;
 $9299 = $2789 + 6 | 0;
 $9300 = $2790 + 8 | 0;
 $9301 = $2791 + 2 | 0;
 $9302 = $2791 + 4 | 0;
 $9303 = $2791 + 6 | 0;
 $9304 = $2792 + 8 | 0;
 $9305 = $2793 + 2 | 0;
 $9306 = $2793 + 4 | 0;
 $9307 = $2793 + 6 | 0;
 $9308 = $2794 + 8 | 0;
 $9309 = $2795 + 2 | 0;
 $9310 = $2795 + 4 | 0;
 $9311 = $2795 + 6 | 0;
 $9312 = $2796 + 8 | 0;
 $9313 = $2797 + 2 | 0;
 $9314 = $2797 + 4 | 0;
 $9315 = $2797 + 6 | 0;
 $9316 = $2798 + 8 | 0;
 $9317 = $2799 + 2 | 0;
 $9318 = $2799 + 4 | 0;
 $9319 = $2799 + 6 | 0;
 $9320 = $2800 + 8 | 0;
 $9321 = $2801 + 2 | 0;
 $9322 = $2801 + 4 | 0;
 $9323 = $2801 + 6 | 0;
 $9324 = $2802 + 8 | 0;
 $9325 = $2803 + 2 | 0;
 $9326 = $2803 + 4 | 0;
 $9327 = $2803 + 6 | 0;
 $9328 = $2804 + 8 | 0;
 $9329 = $2805 + 2 | 0;
 $9330 = $2805 + 4 | 0;
 $9331 = $2805 + 6 | 0;
 $9332 = $2806 + 8 | 0;
 $9333 = $2807 + 2 | 0;
 $9334 = $2807 + 4 | 0;
 $9335 = $2807 + 6 | 0;
 $9336 = $2808 + 8 | 0;
 $9337 = $2809 + 2 | 0;
 $9338 = $2809 + 4 | 0;
 $9339 = $2809 + 6 | 0;
 $9340 = $2810 + 8 | 0;
 $9341 = $2811 + 2 | 0;
 $9342 = $2811 + 4 | 0;
 $9343 = $2811 + 6 | 0;
 $9344 = $2812 + 8 | 0;
 $9345 = $2813 + 2 | 0;
 $9346 = $2813 + 4 | 0;
 $9347 = $2813 + 6 | 0;
 $9348 = $2814 + 8 | 0;
 $9349 = $2815 + 2 | 0;
 $9350 = $2815 + 4 | 0;
 $9351 = $2815 + 6 | 0;
 $9352 = $2816 + 8 | 0;
 $9353 = $2817 + 2 | 0;
 $9354 = $2817 + 4 | 0;
 $9355 = $2817 + 6 | 0;
 $9356 = $2818 + 8 | 0;
 $9357 = $2819 + 2 | 0;
 $9358 = $2819 + 4 | 0;
 $9359 = $2819 + 6 | 0;
 $9360 = $2820 + 8 | 0;
 $9361 = $2821 + 2 | 0;
 $9362 = $2821 + 4 | 0;
 $9363 = $2821 + 6 | 0;
 $9364 = $2822 + 8 | 0;
 $9365 = $2823 + 2 | 0;
 $9366 = $2823 + 4 | 0;
 $9367 = $2823 + 6 | 0;
 $9368 = $2824 + 8 | 0;
 $9369 = $2825 + 2 | 0;
 $9370 = $2825 + 4 | 0;
 $9371 = $2825 + 6 | 0;
 $9372 = $2826 + 8 | 0;
 $9373 = $2827 + 2 | 0;
 $9374 = $2827 + 4 | 0;
 $9375 = $2827 + 6 | 0;
 $9376 = $2828 + 8 | 0;
 $9377 = $2829 + 2 | 0;
 $9378 = $2829 + 4 | 0;
 $9379 = $2829 + 6 | 0;
 $9380 = $2830 + 8 | 0;
 $9381 = $2831 + 2 | 0;
 $9382 = $2831 + 4 | 0;
 $9383 = $2831 + 6 | 0;
 $9384 = $2832 + 8 | 0;
 $9385 = $2833 + 2 | 0;
 $9386 = $2833 + 4 | 0;
 $9387 = $2833 + 6 | 0;
 $9388 = $2834 + 8 | 0;
 $9389 = $2835 + 2 | 0;
 $9390 = $2835 + 4 | 0;
 $9391 = $2835 + 6 | 0;
 $9392 = $2836 + 8 | 0;
 $9393 = $2837 + 2 | 0;
 $9394 = $2837 + 4 | 0;
 $9395 = $2837 + 6 | 0;
 $9396 = $2838 + 8 | 0;
 $9397 = $2839 + 2 | 0;
 $9398 = $2839 + 4 | 0;
 $9399 = $2839 + 6 | 0;
 $9400 = $2840 + 8 | 0;
 $9401 = $2841 + 2 | 0;
 $9402 = $2841 + 4 | 0;
 $9403 = $2841 + 6 | 0;
 $9404 = $2842 + 8 | 0;
 $9405 = $2843 + 2 | 0;
 $9406 = $2843 + 4 | 0;
 $9407 = $2843 + 6 | 0;
 $9408 = $2844 + 8 | 0;
 $9409 = $2845 + 2 | 0;
 $9410 = $2845 + 4 | 0;
 $9411 = $2845 + 6 | 0;
 $9412 = $2846 + 8 | 0;
 $9413 = $2847 + 2 | 0;
 $9414 = $2847 + 4 | 0;
 $9415 = $2847 + 6 | 0;
 $9416 = $2848 + 8 | 0;
 $9417 = $2849 + 2 | 0;
 $9418 = $2849 + 4 | 0;
 $9419 = $2849 + 6 | 0;
 $9420 = $2850 + 8 | 0;
 $9421 = $2851 + 2 | 0;
 $9422 = $2851 + 4 | 0;
 $9423 = $2851 + 6 | 0;
 $9424 = $2852 + 8 | 0;
 $9425 = $2853 + 2 | 0;
 $9426 = $2853 + 4 | 0;
 $9427 = $2853 + 6 | 0;
 $9428 = $2854 + 8 | 0;
 $9429 = $2855 + 2 | 0;
 $9430 = $2855 + 4 | 0;
 $9431 = $2855 + 6 | 0;
 $9432 = $2856 + 8 | 0;
 $9433 = $2857 + 2 | 0;
 $9434 = $2857 + 4 | 0;
 $9435 = $2857 + 6 | 0;
 $9436 = $2858 + 8 | 0;
 $9437 = $2859 + 2 | 0;
 $9438 = $2859 + 4 | 0;
 $9439 = $2859 + 6 | 0;
 $9440 = $2860 + 8 | 0;
 $9441 = $2861 + 2 | 0;
 $9442 = $2861 + 4 | 0;
 $9443 = $2861 + 6 | 0;
 $9444 = $2862 + 8 | 0;
 $9445 = $2863 + 2 | 0;
 $9446 = $2863 + 4 | 0;
 $9447 = $2863 + 6 | 0;
 $9448 = $2864 + 8 | 0;
 $9449 = $2865 + 2 | 0;
 $9450 = $2865 + 4 | 0;
 $9451 = $2865 + 6 | 0;
 $9452 = $2866 + 8 | 0;
 $9453 = $2867 + 2 | 0;
 $9454 = $2867 + 4 | 0;
 $9455 = $2867 + 6 | 0;
 $9456 = $2868 + 8 | 0;
 $9457 = $2869 + 2 | 0;
 $9458 = $2869 + 4 | 0;
 $9459 = $2869 + 6 | 0;
 $9460 = $2870 + 8 | 0;
 $9461 = $2871 + 2 | 0;
 $9462 = $2871 + 4 | 0;
 $9463 = $2871 + 6 | 0;
 $9464 = $2872 + 8 | 0;
 $9465 = $2873 + 2 | 0;
 $9466 = $2873 + 4 | 0;
 $9467 = $2873 + 6 | 0;
 $9468 = $2874 + 8 | 0;
 $9469 = $2875 + 2 | 0;
 $9470 = $2875 + 4 | 0;
 $9471 = $2875 + 6 | 0;
 $9472 = $2876 + 8 | 0;
 $9473 = $2877 + 2 | 0;
 $9474 = $2877 + 4 | 0;
 $9475 = $2877 + 6 | 0;
 $9476 = $2878 + 8 | 0;
 $9477 = $2879 + 2 | 0;
 $9478 = $2879 + 4 | 0;
 $9479 = $2879 + 6 | 0;
 $9480 = $2880 + 8 | 0;
 $9481 = $2881 + 2 | 0;
 $9482 = $2881 + 4 | 0;
 $9483 = $2881 + 6 | 0;
 $9484 = $2882 + 8 | 0;
 $9485 = $2883 + 2 | 0;
 $9486 = $2883 + 4 | 0;
 $9487 = $2883 + 6 | 0;
 $9488 = $2884 + 8 | 0;
 $9489 = $2885 + 2 | 0;
 $9490 = $2885 + 4 | 0;
 $9491 = $2885 + 6 | 0;
 $9492 = $2886 + 8 | 0;
 $9493 = $2887 + 2 | 0;
 $9494 = $2887 + 4 | 0;
 $9495 = $2887 + 6 | 0;
 $9496 = $2888 + 8 | 0;
 $9497 = $2889 + 2 | 0;
 $9498 = $2889 + 4 | 0;
 $9499 = $2889 + 6 | 0;
 $9500 = $2890 + 8 | 0;
 $9501 = $2891 + 2 | 0;
 $9502 = $2891 + 4 | 0;
 $9503 = $2891 + 6 | 0;
 $9504 = $2892 + 8 | 0;
 $9505 = $2893 + 2 | 0;
 $9506 = $2893 + 4 | 0;
 $9507 = $2893 + 6 | 0;
 $9508 = $2894 + 8 | 0;
 $9509 = $2895 + 2 | 0;
 $9510 = $2895 + 4 | 0;
 $9511 = $2895 + 6 | 0;
 $9512 = $2896 + 8 | 0;
 $9513 = $2897 + 2 | 0;
 $9514 = $2897 + 4 | 0;
 $9515 = $2897 + 6 | 0;
 $9516 = $2898 + 8 | 0;
 $9517 = $2899 + 2 | 0;
 $9518 = $2899 + 4 | 0;
 $9519 = $2899 + 6 | 0;
 $9520 = $2900 + 8 | 0;
 $9521 = $2901 + 2 | 0;
 $9522 = $2901 + 4 | 0;
 $9523 = $2901 + 6 | 0;
 $9524 = $2902 + 8 | 0;
 $9525 = $2903 + 2 | 0;
 $9526 = $2903 + 4 | 0;
 $9527 = $2903 + 6 | 0;
 $9528 = $2904 + 8 | 0;
 $9529 = $2905 + 2 | 0;
 $9530 = $2905 + 4 | 0;
 $9531 = $2905 + 6 | 0;
 $9532 = $2906 + 8 | 0;
 $9533 = $2907 + 2 | 0;
 $9534 = $2907 + 4 | 0;
 $9535 = $2907 + 6 | 0;
 $9536 = $2908 + 8 | 0;
 $9537 = $2909 + 2 | 0;
 $9538 = $2909 + 4 | 0;
 $9539 = $2909 + 6 | 0;
 $9540 = $2910 + 8 | 0;
 $9541 = $2911 + 2 | 0;
 $9542 = $2911 + 4 | 0;
 $9543 = $2911 + 6 | 0;
 $9544 = $2912 + 8 | 0;
 $9545 = $2913 + 2 | 0;
 $9546 = $2913 + 4 | 0;
 $9547 = $2913 + 6 | 0;
 $9548 = $2914 + 8 | 0;
 $9549 = $2915 + 2 | 0;
 $9550 = $2915 + 4 | 0;
 $9551 = $2915 + 6 | 0;
 $9552 = $2916 + 8 | 0;
 $9553 = $2917 + 2 | 0;
 $9554 = $2917 + 4 | 0;
 $9555 = $2917 + 6 | 0;
 $9556 = $2918 + 8 | 0;
 $9557 = $2919 + 2 | 0;
 $9558 = $2919 + 4 | 0;
 $9559 = $2919 + 6 | 0;
 $9560 = $2920 + 8 | 0;
 $9561 = $2921 + 2 | 0;
 $9562 = $2921 + 4 | 0;
 $9563 = $2921 + 6 | 0;
 $9564 = $2922 + 8 | 0;
 $9565 = $2923 + 2 | 0;
 $9566 = $2923 + 4 | 0;
 $9567 = $2923 + 6 | 0;
 $9568 = $2924 + 8 | 0;
 $9569 = $2925 + 2 | 0;
 $9570 = $2925 + 4 | 0;
 $9571 = $2925 + 6 | 0;
 $9572 = $2926 + 8 | 0;
 $9573 = $2927 + 2 | 0;
 $9574 = $2927 + 4 | 0;
 $9575 = $2927 + 6 | 0;
 $9576 = $2928 + 8 | 0;
 $9577 = $2929 + 2 | 0;
 $9578 = $2929 + 4 | 0;
 $9579 = $2929 + 6 | 0;
 $9580 = $2930 + 8 | 0;
 $9581 = $2931 + 2 | 0;
 $9582 = $2931 + 4 | 0;
 $9583 = $2931 + 6 | 0;
 $9584 = $2932 + 8 | 0;
 $9585 = $2933 + 2 | 0;
 $9586 = $2933 + 4 | 0;
 $9587 = $2933 + 6 | 0;
 $9588 = $2934 + 8 | 0;
 $9589 = $2935 + 2 | 0;
 $9590 = $2935 + 4 | 0;
 $9591 = $2935 + 6 | 0;
 $9592 = $2936 + 8 | 0;
 $9593 = $2937 + 2 | 0;
 $9594 = $2937 + 4 | 0;
 $9595 = $2937 + 6 | 0;
 $9596 = $2938 + 8 | 0;
 $9597 = $2939 + 2 | 0;
 $9598 = $2939 + 4 | 0;
 $9599 = $2939 + 6 | 0;
 $9600 = $2940 + 8 | 0;
 $9601 = $2941 + 2 | 0;
 $9602 = $2941 + 4 | 0;
 $9603 = $2941 + 6 | 0;
 $9604 = $2942 + 8 | 0;
 $9605 = $2943 + 2 | 0;
 $9606 = $2943 + 4 | 0;
 $9607 = $2943 + 6 | 0;
 $9608 = $2944 + 8 | 0;
 $9609 = $2945 + 2 | 0;
 $9610 = $2945 + 4 | 0;
 $9611 = $2945 + 6 | 0;
 $9612 = $2946 + 8 | 0;
 $9613 = $2947 + 2 | 0;
 $9614 = $2947 + 4 | 0;
 $9615 = $2947 + 6 | 0;
 $9616 = $2948 + 8 | 0;
 $9617 = $2949 + 2 | 0;
 $9618 = $2949 + 4 | 0;
 $9619 = $2949 + 6 | 0;
 $9620 = $2950 + 8 | 0;
 $9621 = $2951 + 2 | 0;
 $9622 = $2951 + 4 | 0;
 $9623 = $2951 + 6 | 0;
 $9624 = $2952 + 8 | 0;
 $9625 = $2953 + 2 | 0;
 $9626 = $2953 + 4 | 0;
 $9627 = $2953 + 6 | 0;
 $9628 = $2954 + 8 | 0;
 $9629 = $2955 + 2 | 0;
 $9630 = $2955 + 4 | 0;
 $9631 = $2955 + 6 | 0;
 $9632 = $2956 + 8 | 0;
 $9633 = $2957 + 2 | 0;
 $9634 = $2957 + 4 | 0;
 $9635 = $2957 + 6 | 0;
 $9636 = $2958 + 8 | 0;
 $9637 = $2959 + 2 | 0;
 $9638 = $2959 + 4 | 0;
 $9639 = $2959 + 6 | 0;
 $9640 = $2960 + 8 | 0;
 $9641 = $2961 + 2 | 0;
 $9642 = $2961 + 4 | 0;
 $9643 = $2961 + 6 | 0;
 $9644 = $2962 + 8 | 0;
 $9645 = $2963 + 2 | 0;
 $9646 = $2963 + 4 | 0;
 $9647 = $2963 + 6 | 0;
 $9648 = $2964 + 8 | 0;
 $9649 = $2965 + 2 | 0;
 $9650 = $2965 + 4 | 0;
 $9651 = $2965 + 6 | 0;
 $9652 = $2966 + 8 | 0;
 $9653 = $2967 + 2 | 0;
 $9654 = $2967 + 4 | 0;
 $9655 = $2967 + 6 | 0;
 $9656 = $2968 + 8 | 0;
 $9657 = $2969 + 2 | 0;
 $9658 = $2969 + 4 | 0;
 $9659 = $2969 + 6 | 0;
 $9660 = $2970 + 8 | 0;
 $9661 = $2971 + 2 | 0;
 $9662 = $2971 + 4 | 0;
 $9663 = $2971 + 6 | 0;
 $9664 = $2972 + 8 | 0;
 $9665 = $2973 + 2 | 0;
 $9666 = $2973 + 4 | 0;
 $9667 = $2973 + 6 | 0;
 $9668 = $2974 + 8 | 0;
 $9669 = $2975 + 2 | 0;
 $9670 = $2975 + 4 | 0;
 $9671 = $2975 + 6 | 0;
 $9672 = $2976 + 8 | 0;
 $9673 = $2977 + 2 | 0;
 $9674 = $2977 + 4 | 0;
 $9675 = $2977 + 6 | 0;
 $9676 = $2978 + 8 | 0;
 $9677 = $2979 + 2 | 0;
 $9678 = $2979 + 4 | 0;
 $9679 = $2979 + 6 | 0;
 $9680 = $2980 + 8 | 0;
 $9681 = $2980 + 12 | 0;
 $9682 = $2980 + 16 | 0;
 $9683 = $2980 + 20 | 0;
 $9684 = $2980 + 21 | 0;
 $9685 = $2980 + 22 | 0;
 $9686 = $2980 + 23 | 0;
 $9687 = $2980 + 24 | 0;
 $9688 = $2981 + 2 | 0;
 $9689 = $2981 + 4 | 0;
 $9690 = $2981 + 6 | 0;
 $9691 = $2982 + 8 | 0;
 $9692 = $2983 + 2 | 0;
 $9693 = $2983 + 4 | 0;
 $9694 = $2983 + 6 | 0;
 $9695 = $2984 + 8 | 0;
 $9696 = $2985 + 2 | 0;
 $9697 = $2985 + 4 | 0;
 $9698 = $2985 + 6 | 0;
 $9699 = $2986 + 8 | 0;
 $9700 = $2987 + 2 | 0;
 $9701 = $2987 + 4 | 0;
 $9702 = $2987 + 6 | 0;
 $9703 = $2988 + 8 | 0;
 $9704 = $2989 + 2 | 0;
 $9705 = $2989 + 4 | 0;
 $9706 = $2989 + 6 | 0;
 $9707 = $2990 + 8 | 0;
 $9708 = $2991 + 2 | 0;
 $9709 = $2991 + 4 | 0;
 $9710 = $2991 + 6 | 0;
 $9711 = $2992 + 8 | 0;
 $9712 = $2993 + 2 | 0;
 $9713 = $2993 + 4 | 0;
 $9714 = $2993 + 6 | 0;
 $9715 = $2994 + 8 | 0;
 $9716 = $2995 + 2 | 0;
 $9717 = $2995 + 4 | 0;
 $9718 = $2995 + 6 | 0;
 $9719 = $2996 + 8 | 0;
 $9720 = $2997 + 2 | 0;
 $9721 = $2997 + 4 | 0;
 $9722 = $2997 + 6 | 0;
 $9723 = $2998 + 8 | 0;
 $9724 = $2999 + 2 | 0;
 $9725 = $2999 + 4 | 0;
 $9726 = $2999 + 6 | 0;
 $9727 = $3000 + 8 | 0;
 $9728 = $3000 + 12 | 0;
 $9729 = $3000 + 16 | 0;
 $9730 = $3000 + 20 | 0;
 $9731 = $3000 + 21 | 0;
 $9732 = $3000 + 22 | 0;
 $9733 = $3000 + 23 | 0;
 $9734 = $3000 + 24 | 0;
 $9735 = $3001 + 2 | 0;
 $9736 = $3001 + 4 | 0;
 $9737 = $3001 + 6 | 0;
 $9738 = $3002 + 8 | 0;
 $9739 = $3003 + 2 | 0;
 $9740 = $3003 + 4 | 0;
 $9741 = $3003 + 6 | 0;
 $9742 = $3004 + 8 | 0;
 $9743 = $3005 + 2 | 0;
 $9744 = $3005 + 4 | 0;
 $9745 = $3005 + 6 | 0;
 $9746 = $3006 + 8 | 0;
 $9747 = $3007 + 2 | 0;
 $9748 = $3007 + 4 | 0;
 $9749 = $3007 + 6 | 0;
 $9750 = $3008 + 8 | 0;
 $9751 = $3009 + 2 | 0;
 $9752 = $3009 + 4 | 0;
 $9753 = $3009 + 6 | 0;
 $9754 = $3010 + 8 | 0;
 $9755 = $3011 + 2 | 0;
 $9756 = $3011 + 4 | 0;
 $9757 = $3011 + 6 | 0;
 $9758 = $3012 + 8 | 0;
 $9759 = $3013 + 2 | 0;
 $9760 = $3013 + 4 | 0;
 $9761 = $3013 + 6 | 0;
 $9762 = $3014 + 8 | 0;
 $9763 = $3015 + 2 | 0;
 $9764 = $3015 + 4 | 0;
 $9765 = $3015 + 6 | 0;
 $9766 = $3016 + 8 | 0;
 $9767 = $3017 + 2 | 0;
 $9768 = $3017 + 4 | 0;
 $9769 = $3017 + 6 | 0;
 $9770 = $3018 + 8 | 0;
 $9771 = $3019 + 2 | 0;
 $9772 = $3019 + 4 | 0;
 $9773 = $3019 + 6 | 0;
 $9774 = $3020 + 8 | 0;
 $9775 = $3021 + 2 | 0;
 $9776 = $3021 + 4 | 0;
 $9777 = $3021 + 6 | 0;
 $9778 = $3022 + 8 | 0;
 $9779 = $3023 + 2 | 0;
 $9780 = $3023 + 4 | 0;
 $9781 = $3023 + 6 | 0;
 $9782 = $3024 + 8 | 0;
 $9783 = $3025 + 2 | 0;
 $9784 = $3025 + 4 | 0;
 $9785 = $3025 + 6 | 0;
 $9786 = $3026 + 8 | 0;
 $9787 = $3027 + 2 | 0;
 $9788 = $3027 + 4 | 0;
 $9789 = $3027 + 6 | 0;
 $9790 = $3028 + 8 | 0;
 $9791 = $3029 + 2 | 0;
 $9792 = $3029 + 4 | 0;
 $9793 = $3029 + 6 | 0;
 $9794 = $3030 + 8 | 0;
 $9795 = $3031 + 2 | 0;
 $9796 = $3031 + 4 | 0;
 $9797 = $3031 + 6 | 0;
 $9798 = $3032 + 8 | 0;
 $9799 = $3033 + 2 | 0;
 $9800 = $3033 + 4 | 0;
 $9801 = $3033 + 6 | 0;
 $9802 = $3034 + 8 | 0;
 $9803 = $3035 + 2 | 0;
 $9804 = $3035 + 4 | 0;
 $9805 = $3035 + 6 | 0;
 $9806 = $0 + 2 | 0;
 $9807 = $0 + 4 | 0;
 $9808 = $0 + 6 | 0;
 $9809 = $0 + 2 | 0;
 $9810 = $0 + 4 | 0;
 $9811 = $0 + 6 | 0;
 $9812 = $0 + 2 | 0;
 $9813 = $0 + 4 | 0;
 $9814 = $0 + 6 | 0;
 $9815 = $0 + 2 | 0;
 $9816 = $0 + 4 | 0;
 $9817 = $0 + 6 | 0;
 $9818 = $0 + 2 | 0;
 $9819 = $0 + 4 | 0;
 $9820 = $0 + 6 | 0;
 $9821 = $0 + 2 | 0;
 $9822 = $0 + 4 | 0;
 $9823 = $0 + 6 | 0;
 $9824 = $0 + 2 | 0;
 $9825 = $0 + 4 | 0;
 $9826 = $0 + 6 | 0;
 $9827 = $0 + 2 | 0;
 $9828 = $0 + 4 | 0;
 $9829 = $0 + 6 | 0;
 $9830 = $0 + 2 | 0;
 $9831 = $0 + 4 | 0;
 $9832 = $0 + 6 | 0;
 $9833 = $0 + 2 | 0;
 $9834 = $0 + 4 | 0;
 $9835 = $0 + 6 | 0;
 $9836 = $0 + 2 | 0;
 $9837 = $0 + 4 | 0;
 $9838 = $0 + 6 | 0;
 $9839 = $0 + 2 | 0;
 $9840 = $0 + 4 | 0;
 $9841 = $0 + 6 | 0;
 $9842 = $0 + 2 | 0;
 $9843 = $0 + 4 | 0;
 $9844 = $0 + 6 | 0;
 $9845 = $0 + 2 | 0;
 $9846 = $0 + 4 | 0;
 $9847 = $0 + 6 | 0;
 $9848 = $0 + 2 | 0;
 $9849 = $0 + 4 | 0;
 $9850 = $0 + 6 | 0;
 $9851 = $0 + 2 | 0;
 $9852 = $0 + 4 | 0;
 $9853 = $0 + 6 | 0;
 $9854 = $0 + 2 | 0;
 $9855 = $0 + 4 | 0;
 $9856 = $0 + 6 | 0;
 $9857 = $0 + 2 | 0;
 $9858 = $0 + 4 | 0;
 $9859 = $0 + 6 | 0;
 $9860 = $0 + 2 | 0;
 $9861 = $0 + 4 | 0;
 $9862 = $0 + 6 | 0;
 $9863 = $0 + 2 | 0;
 $9864 = $0 + 4 | 0;
 $9865 = $0 + 6 | 0;
 $9866 = $0 + 2 | 0;
 $9867 = $0 + 4 | 0;
 $9868 = $0 + 6 | 0;
 $9869 = $0 + 2 | 0;
 $9870 = $0 + 4 | 0;
 $9871 = $0 + 6 | 0;
 $9872 = $0 + 2 | 0;
 $9873 = $0 + 4 | 0;
 $9874 = $0 + 6 | 0;
 $9875 = $0 + 2 | 0;
 $9876 = $0 + 4 | 0;
 $9877 = $0 + 6 | 0;
 $9878 = $0 + 2 | 0;
 $9879 = $0 + 4 | 0;
 $9880 = $0 + 6 | 0;
 $9881 = $0 + 2 | 0;
 $9882 = $0 + 4 | 0;
 $9883 = $0 + 6 | 0;
 $9884 = $0 + 2 | 0;
 $9885 = $0 + 4 | 0;
 $9886 = $0 + 6 | 0;
 $9887 = $0 + 2 | 0;
 $9888 = $0 + 4 | 0;
 $9889 = $0 + 6 | 0;
 $9890 = $0 + 2 | 0;
 $9891 = $0 + 4 | 0;
 $9892 = $0 + 6 | 0;
 $9893 = $0 + 2 | 0;
 $9894 = $0 + 4 | 0;
 $9895 = $0 + 6 | 0;
 $9896 = $0 + 2 | 0;
 $9897 = $0 + 4 | 0;
 $9898 = $0 + 6 | 0;
 $9899 = $0 + 2 | 0;
 $9900 = $0 + 4 | 0;
 $9901 = $0 + 6 | 0;
 $9902 = $0 + 2 | 0;
 $9903 = $0 + 4 | 0;
 $9904 = $0 + 6 | 0;
 $9905 = $0 + 2 | 0;
 $9906 = $0 + 4 | 0;
 $9907 = $0 + 6 | 0;
 $9908 = $0 + 2 | 0;
 $9909 = $0 + 4 | 0;
 $9910 = $0 + 6 | 0;
 $9911 = $0 + 2 | 0;
 $9912 = $0 + 4 | 0;
 $9913 = $0 + 6 | 0;
 $9914 = $0 + 2 | 0;
 $9915 = $0 + 4 | 0;
 $9916 = $0 + 6 | 0;
 $9917 = $0 + 2 | 0;
 $9918 = $0 + 4 | 0;
 $9919 = $0 + 6 | 0;
 $9920 = $0 + 2 | 0;
 $9921 = $0 + 4 | 0;
 $9922 = $0 + 6 | 0;
 $9923 = $0 + 2 | 0;
 $9924 = $0 + 4 | 0;
 $9925 = $0 + 6 | 0;
 $9926 = $0 + 2 | 0;
 $9927 = $0 + 4 | 0;
 $9928 = $0 + 6 | 0;
 $9929 = $0 + 2 | 0;
 $9930 = $0 + 4 | 0;
 $9931 = $0 + 6 | 0;
 $9932 = $3078 + 8 | 0;
 $9933 = $3079 + 2 | 0;
 $9934 = $3079 + 4 | 0;
 $9935 = $3079 + 6 | 0;
 $9936 = $3080 + 8 | 0;
 $9937 = $3081 + 2 | 0;
 $9938 = $3081 + 4 | 0;
 $9939 = $3081 + 6 | 0;
 $9940 = $3082 + 8 | 0;
 $9941 = $3083 + 2 | 0;
 $9942 = $3083 + 4 | 0;
 $9943 = $3083 + 6 | 0;
 $9944 = $3084 + 8 | 0;
 $9945 = $3085 + 2 | 0;
 $9946 = $3085 + 4 | 0;
 $9947 = $3085 + 6 | 0;
 $9948 = $3086 + 8 | 0;
 $9949 = $3087 + 2 | 0;
 $9950 = $3087 + 4 | 0;
 $9951 = $3087 + 6 | 0;
 $9952 = $3088 + 8 | 0;
 $9953 = $3089 + 2 | 0;
 $9954 = $3089 + 4 | 0;
 $9955 = $3089 + 6 | 0;
 $9956 = $3090 + 8 | 0;
 $9957 = $3091 + 2 | 0;
 $9958 = $3091 + 4 | 0;
 $9959 = $3091 + 6 | 0;
 $9960 = $3092 + 8 | 0;
 $9961 = $3093 + 2 | 0;
 $9962 = $3093 + 4 | 0;
 $9963 = $3093 + 6 | 0;
 $9964 = $3094 + 8 | 0;
 $9965 = $3095 + 2 | 0;
 $9966 = $3095 + 4 | 0;
 $9967 = $3095 + 6 | 0;
 $9968 = $3096 + 8 | 0;
 $9969 = $3097 + 2 | 0;
 $9970 = $3097 + 4 | 0;
 $9971 = $3097 + 6 | 0;
 $9972 = $3098 + 8 | 0;
 $9973 = $3099 + 2 | 0;
 $9974 = $3099 + 4 | 0;
 $9975 = $3099 + 6 | 0;
 $9976 = $3100 + 8 | 0;
 $9977 = $3101 + 2 | 0;
 $9978 = $3101 + 4 | 0;
 $9979 = $3101 + 6 | 0;
 $9980 = $3102 + 8 | 0;
 $9981 = $3103 + 2 | 0;
 $9982 = $3103 + 4 | 0;
 $9983 = $3103 + 6 | 0;
 $9984 = $3104 + 8 | 0;
 $9985 = $3105 + 2 | 0;
 $9986 = $3105 + 4 | 0;
 $9987 = $3105 + 6 | 0;
 $9988 = $3106 + 8 | 0;
 $9989 = $3107 + 2 | 0;
 $9990 = $3107 + 4 | 0;
 $9991 = $3107 + 6 | 0;
 $9992 = $3108 + 8 | 0;
 $9993 = $3109 + 2 | 0;
 $9994 = $3109 + 4 | 0;
 $9995 = $3109 + 6 | 0;
 $9996 = $3110 + 8 | 0;
 $9997 = $3111 + 2 | 0;
 $9998 = $3111 + 4 | 0;
 $9999 = $3111 + 6 | 0;
 $10000 = $3112 + 8 | 0;
 $10001 = $3113 + 2 | 0;
 $10002 = $3113 + 4 | 0;
 $10003 = $3113 + 6 | 0;
 $10004 = $3114 + 8 | 0;
 $10005 = $3115 + 2 | 0;
 $10006 = $3115 + 4 | 0;
 $10007 = $3115 + 6 | 0;
 $10008 = $3116 + 8 | 0;
 $10009 = $3117 + 2 | 0;
 $10010 = $3117 + 4 | 0;
 $10011 = $3117 + 6 | 0;
 $10012 = $3118 + 8 | 0;
 $10013 = $3119 + 2 | 0;
 $10014 = $3119 + 4 | 0;
 $10015 = $3119 + 6 | 0;
 $10016 = $3120 + 8 | 0;
 $10017 = $3121 + 2 | 0;
 $10018 = $3121 + 4 | 0;
 $10019 = $3121 + 6 | 0;
 $10020 = $3122 + 8 | 0;
 $10021 = $3123 + 2 | 0;
 $10022 = $3123 + 4 | 0;
 $10023 = $3123 + 6 | 0;
 $10024 = $3124 + 8 | 0;
 $10025 = $3125 + 2 | 0;
 $10026 = $3125 + 4 | 0;
 $10027 = $3125 + 6 | 0;
 $10028 = $3126 + 8 | 0;
 $10029 = $3127 + 2 | 0;
 $10030 = $3127 + 4 | 0;
 $10031 = $3127 + 6 | 0;
 $10032 = $3128 + 8 | 0;
 $10033 = $3129 + 2 | 0;
 $10034 = $3129 + 4 | 0;
 $10035 = $3129 + 6 | 0;
 $10036 = $3130 + 8 | 0;
 $10037 = $3131 + 2 | 0;
 $10038 = $3131 + 4 | 0;
 $10039 = $3131 + 6 | 0;
 $10040 = $3132 + 8 | 0;
 $10041 = $3133 + 2 | 0;
 $10042 = $3133 + 4 | 0;
 $10043 = $3133 + 6 | 0;
 $10044 = $3134 + 8 | 0;
 $10045 = $3135 + 2 | 0;
 $10046 = $3135 + 4 | 0;
 $10047 = $3135 + 6 | 0;
 $10048 = $3136 + 8 | 0;
 $10049 = $3137 + 2 | 0;
 $10050 = $3137 + 4 | 0;
 $10051 = $3137 + 6 | 0;
 $10052 = $3138 + 8 | 0;
 $10053 = $3139 + 2 | 0;
 $10054 = $3139 + 4 | 0;
 $10055 = $3139 + 6 | 0;
 $10056 = $3140 + 8 | 0;
 $10057 = $3141 + 2 | 0;
 $10058 = $3141 + 4 | 0;
 $10059 = $3141 + 6 | 0;
 $10060 = $3142 + 8 | 0;
 $10061 = $3143 + 2 | 0;
 $10062 = $3143 + 4 | 0;
 $10063 = $3143 + 6 | 0;
 $10064 = $3144 + 8 | 0;
 $10065 = $3145 + 2 | 0;
 $10066 = $3145 + 4 | 0;
 $10067 = $3145 + 6 | 0;
 $10068 = $3146 + 8 | 0;
 $10069 = $3147 + 2 | 0;
 $10070 = $3147 + 4 | 0;
 $10071 = $3147 + 6 | 0;
 $10072 = $0 + 2 | 0;
 $10073 = $0 + 4 | 0;
 $10074 = $0 + 6 | 0;
 $10075 = $0 + 2 | 0;
 $10076 = $0 + 4 | 0;
 $10077 = $0 + 6 | 0;
 $10078 = $0 + 2 | 0;
 $10079 = $0 + 4 | 0;
 $10080 = $0 + 6 | 0;
 $10081 = $0 + 2 | 0;
 $10082 = $0 + 4 | 0;
 $10083 = $0 + 6 | 0;
 $10084 = $0 + 2 | 0;
 $10085 = $0 + 4 | 0;
 $10086 = $0 + 6 | 0;
 $10087 = $0 + 2 | 0;
 $10088 = $0 + 4 | 0;
 $10089 = $0 + 6 | 0;
 $10090 = $0 + 2 | 0;
 $10091 = $0 + 4 | 0;
 $10092 = $0 + 6 | 0;
 $10093 = $0 + 2 | 0;
 $10094 = $0 + 4 | 0;
 $10095 = $0 + 6 | 0;
 $10096 = $0 + 2 | 0;
 $10097 = $0 + 4 | 0;
 $10098 = $0 + 6 | 0;
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3327 >> 1] = 15;
 HEAP16[$3328 >> 1] = 0;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 84) label = 4; else {
  $10105 = HEAP32[915090] | 0;
  if (($10105 | 0) == (HEAP32[915088] | 0)) label = 4; else {
   $$lcssa$i$i = 3660360;
   $$lcssa8$i$i = $10105;
   label = 5;
  }
 }
 do if ((label | 0) == 4) {
  if ((HEAP32[915097] | 0) >>> 0 >= 84) {
   $10112 = HEAP32[915096] | 0;
   if (($10112 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i = 3660384;
    $$lcssa8$i$i = $10112;
    label = 5;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 84) {
   $10117 = HEAP32[915102] | 0;
   if (($10117 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i = 3660408;
    $$lcssa8$i$i = $10117;
    label = 5;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 84) {
   $10122 = HEAP32[915108] | 0;
   if (($10122 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i = 3660432;
    $$lcssa8$i$i = $10122;
    label = 5;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 84) {
   $10127 = HEAP32[915114] | 0;
   if (($10127 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i = 3660456;
    $$lcssa8$i$i = $10127;
    label = 5;
    break;
   }
  }
  $$3$i$i = __Znwj(84) | 0;
 } while (0);
 if ((label | 0) == 5) {
  $10110 = $$lcssa8$i$i + -4 | 0;
  HEAP32[$$lcssa$i$i >> 2] = $10110;
  $$3$i$i = HEAP32[$10110 >> 2] | 0;
 }
 $10131 = $$3$i$i + 52 | 0;
 HEAP16[$$3$i$i >> 1] = 16;
 HEAP16[$$3$i$i + 2 >> 1] = 1;
 HEAP8[$$3$i$i + 4 >> 0] = 16;
 HEAP8[$$3$i$i + 5 >> 0] = 1;
 HEAP32[$$3$i$i + 8 >> 2] = 32;
 HEAP32[$$3$i$i + 12 >> 2] = 32;
 HEAP32[$$3$i$i + 16 >> 2] = $10131;
 HEAP32[$$3$i$i + 20 >> 2] = 0;
 HEAP32[$$3$i$i + 24 >> 2] = 0;
 HEAP8[$$3$i$i + 48 >> 0] = 0;
 HEAP32[$1 >> 2] = $$3$i$i;
 dest = $10131;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = 0;
  dest = dest + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1);
 if ($$3$i$i | 0) {
  $10142 = $$3$i$i + 5 | 0;
  $10144 = (HEAP8[$10142 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$10142 >> 0] = $10144;
  if (!($10144 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i);
  HEAP32[$1 >> 2] = 0;
 }
 $10146 = $2;
 HEAP32[$10146 >> 2] = 0;
 HEAP32[$10146 + 4 >> 2] = 50332672;
 HEAP32[$3329 >> 2] = 0;
 HEAP16[$3 >> 1] = 0;
 HEAP16[$3330 >> 1] = 0;
 HEAP16[$3331 >> 1] = 1024;
 HEAP16[$3332 >> 1] = 768;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2, $3);
 $10150 = $4;
 HEAP32[$10150 >> 2] = 0;
 HEAP32[$10150 + 4 >> 2] = 50332672;
 HEAP32[$3333 >> 2] = 0;
 HEAP16[$5 >> 1] = 0;
 HEAP16[$3334 >> 1] = 0;
 HEAP16[$3335 >> 1] = 1024;
 HEAP16[$3336 >> 1] = 768;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $4, $5);
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3337 >> 1] = 15;
 HEAP16[$3338 >> 1] = 0;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 84) label = 20; else {
  $10156 = HEAP32[915090] | 0;
  if (($10156 | 0) == (HEAP32[915088] | 0)) label = 20; else {
   $$lcssa$i$i10 = 3660360;
   $$lcssa8$i$i9 = $10156;
   label = 21;
  }
 }
 do if ((label | 0) == 20) {
  if ((HEAP32[915097] | 0) >>> 0 >= 84) {
   $10163 = HEAP32[915096] | 0;
   if (($10163 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i10 = 3660384;
    $$lcssa8$i$i9 = $10163;
    label = 21;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 84) {
   $10168 = HEAP32[915102] | 0;
   if (($10168 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i10 = 3660408;
    $$lcssa8$i$i9 = $10168;
    label = 21;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 84) {
   $10173 = HEAP32[915108] | 0;
   if (($10173 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i10 = 3660432;
    $$lcssa8$i$i9 = $10173;
    label = 21;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 84) {
   $10178 = HEAP32[915114] | 0;
   if (($10178 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i10 = 3660456;
    $$lcssa8$i$i9 = $10178;
    label = 21;
    break;
   }
  }
  $$3$i$i11 = __Znwj(84) | 0;
 } while (0);
 if ((label | 0) == 21) {
  $10161 = $$lcssa8$i$i9 + -4 | 0;
  HEAP32[$$lcssa$i$i10 >> 2] = $10161;
  $$3$i$i11 = HEAP32[$10161 >> 2] | 0;
 }
 $10182 = $$3$i$i11 + 52 | 0;
 HEAP16[$$3$i$i11 >> 1] = 16;
 HEAP16[$$3$i$i11 + 2 >> 1] = 1;
 HEAP8[$$3$i$i11 + 4 >> 0] = 16;
 HEAP8[$$3$i$i11 + 5 >> 0] = 1;
 HEAP32[$$3$i$i11 + 8 >> 2] = 32;
 HEAP32[$$3$i$i11 + 12 >> 2] = 32;
 HEAP32[$$3$i$i11 + 16 >> 2] = $10182;
 HEAP32[$$3$i$i11 + 20 >> 2] = 0;
 HEAP32[$$3$i$i11 + 24 >> 2] = 0;
 HEAP8[$$3$i$i11 + 48 >> 0] = 0;
 HEAP32[$6 >> 2] = $$3$i$i11;
 dest = $10182;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = 0;
  dest = dest + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $6);
 if ($$3$i$i11 | 0) {
  $10193 = $$3$i$i11 + 5 | 0;
  $10195 = (HEAP8[$10193 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$10193 >> 0] = $10195;
  if (!($10195 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i11);
  HEAP32[$6 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3339 >> 1] = 1023;
 HEAP16[$3340 >> 1] = 14;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 36; else {
  $10199 = HEAP32[915090] | 0;
  if (($10199 | 0) == (HEAP32[915088] | 0)) label = 36; else {
   $$lcssa$i$i22 = 3660360;
   $$lcssa8$i$i21 = $10199;
   label = 37;
  }
 }
 do if ((label | 0) == 36) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $10206 = HEAP32[915096] | 0;
   if (($10206 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i22 = 3660384;
    $$lcssa8$i$i21 = $10206;
    label = 37;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $10211 = HEAP32[915102] | 0;
   if (($10211 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i22 = 3660408;
    $$lcssa8$i$i21 = $10211;
    label = 37;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $10216 = HEAP32[915108] | 0;
   if (($10216 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i22 = 3660432;
    $$lcssa8$i$i21 = $10216;
    label = 37;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $10221 = HEAP32[915114] | 0;
   if (($10221 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i22 = 3660456;
    $$lcssa8$i$i21 = $10221;
    label = 37;
    break;
   }
  }
  $$3$i$i23 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 37) {
  $10204 = $$lcssa8$i$i21 + -4 | 0;
  HEAP32[$$lcssa$i$i22 >> 2] = $10204;
  $$3$i$i23 = HEAP32[$10204 >> 2] | 0;
 }
 $10225 = $$3$i$i23 + 52 | 0;
 HEAP16[$$3$i$i23 >> 1] = 1024;
 HEAP16[$$3$i$i23 + 2 >> 1] = 15;
 HEAP8[$$3$i$i23 + 4 >> 0] = 16;
 HEAP8[$$3$i$i23 + 5 >> 0] = 1;
 HEAP32[$$3$i$i23 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i23 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i23 + 16 >> 2] = $10225;
 HEAP32[$$3$i$i23 + 20 >> 2] = 0;
 HEAP32[$$3$i$i23 + 24 >> 2] = 0;
 HEAP8[$$3$i$i23 + 48 >> 0] = 0;
 HEAP32[$7 >> 2] = $$3$i$i23;
 _memcpy($10225 | 0, 3661016, 2048) | 0;
 _memcpy($$3$i$i23 + 2100 | 0, 3663064, 2048) | 0;
 _memcpy($$3$i$i23 + 4148 | 0, 3665112, 2048) | 0;
 _memcpy($$3$i$i23 + 6196 | 0, 3667160, 2048) | 0;
 _memcpy($$3$i$i23 + 8244 | 0, 3669208, 2048) | 0;
 _memcpy($$3$i$i23 + 10292 | 0, 3671256, 2048) | 0;
 _memcpy($$3$i$i23 + 12340 | 0, 3673304, 2048) | 0;
 _memcpy($$3$i$i23 + 14388 | 0, 3675352, 2048) | 0;
 _memcpy($$3$i$i23 + 16436 | 0, 3677400, 2048) | 0;
 _memcpy($$3$i$i23 + 18484 | 0, 3679448, 2048) | 0;
 _memcpy($$3$i$i23 + 20532 | 0, 3681496, 2048) | 0;
 _memcpy($$3$i$i23 + 22580 | 0, 3683544, 2048) | 0;
 _memcpy($$3$i$i23 + 24628 | 0, 3685592, 2048) | 0;
 _memcpy($$3$i$i23 + 26676 | 0, 3687640, 2048) | 0;
 _memcpy($$3$i$i23 + 28724 | 0, 3689688, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $7);
 if ($$3$i$i23 | 0) {
  $10250 = $$3$i$i23 + 5 | 0;
  $10252 = (HEAP8[$10250 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$10250 >> 0] = $10252;
  if (!($10252 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i23);
  HEAP32[$7 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3341 >> 1] = 15;
 HEAP16[$3342 >> 1] = 1023;
 HEAP16[$3343 >> 1] = 29;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 52; else {
  $10256 = HEAP32[915090] | 0;
  if (($10256 | 0) == (HEAP32[915088] | 0)) label = 52; else {
   $$lcssa$i$i34 = 3660360;
   $$lcssa8$i$i33 = $10256;
   label = 53;
  }
 }
 do if ((label | 0) == 52) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $10263 = HEAP32[915096] | 0;
   if (($10263 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i34 = 3660384;
    $$lcssa8$i$i33 = $10263;
    label = 53;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $10268 = HEAP32[915102] | 0;
   if (($10268 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i34 = 3660408;
    $$lcssa8$i$i33 = $10268;
    label = 53;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $10273 = HEAP32[915108] | 0;
   if (($10273 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i34 = 3660432;
    $$lcssa8$i$i33 = $10273;
    label = 53;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $10278 = HEAP32[915114] | 0;
   if (($10278 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i34 = 3660456;
    $$lcssa8$i$i33 = $10278;
    label = 53;
    break;
   }
  }
  $$3$i$i35 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 53) {
  $10261 = $$lcssa8$i$i33 + -4 | 0;
  HEAP32[$$lcssa$i$i34 >> 2] = $10261;
  $$3$i$i35 = HEAP32[$10261 >> 2] | 0;
 }
 $10282 = $$3$i$i35 + 52 | 0;
 HEAP16[$$3$i$i35 >> 1] = 1024;
 HEAP16[$$3$i$i35 + 2 >> 1] = 15;
 HEAP8[$$3$i$i35 + 4 >> 0] = 16;
 HEAP8[$$3$i$i35 + 5 >> 0] = 1;
 HEAP32[$$3$i$i35 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i35 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i35 + 16 >> 2] = $10282;
 HEAP32[$$3$i$i35 + 20 >> 2] = 0;
 HEAP32[$$3$i$i35 + 24 >> 2] = 0;
 HEAP8[$$3$i$i35 + 48 >> 0] = 0;
 HEAP32[$8 >> 2] = $$3$i$i35;
 _memcpy($10282 | 0, 3691736, 2048) | 0;
 _memcpy($$3$i$i35 + 2100 | 0, 3693784, 2048) | 0;
 _memcpy($$3$i$i35 + 4148 | 0, 3695832, 2048) | 0;
 _memcpy($$3$i$i35 + 6196 | 0, 3697880, 2048) | 0;
 _memcpy($$3$i$i35 + 8244 | 0, 3699928, 2048) | 0;
 _memcpy($$3$i$i35 + 10292 | 0, 3701976, 2048) | 0;
 _memcpy($$3$i$i35 + 12340 | 0, 3704024, 2048) | 0;
 _memcpy($$3$i$i35 + 14388 | 0, 3706072, 2048) | 0;
 _memcpy($$3$i$i35 + 16436 | 0, 3708120, 2048) | 0;
 _memcpy($$3$i$i35 + 18484 | 0, 3710168, 2048) | 0;
 _memcpy($$3$i$i35 + 20532 | 0, 3712216, 2048) | 0;
 _memcpy($$3$i$i35 + 22580 | 0, 3714264, 2048) | 0;
 _memcpy($$3$i$i35 + 24628 | 0, 3716312, 2048) | 0;
 _memcpy($$3$i$i35 + 26676 | 0, 3718360, 2048) | 0;
 _memcpy($$3$i$i35 + 28724 | 0, 3720408, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $8);
 if ($$3$i$i35 | 0) {
  $10307 = $$3$i$i35 + 5 | 0;
  $10309 = (HEAP8[$10307 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$10307 >> 0] = $10309;
  if (!($10309 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i35);
  HEAP32[$8 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3344 >> 1] = 30;
 HEAP16[$3345 >> 1] = 1023;
 HEAP16[$3346 >> 1] = 44;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 68; else {
  $10313 = HEAP32[915090] | 0;
  if (($10313 | 0) == (HEAP32[915088] | 0)) label = 68; else {
   $$lcssa$i$i46 = 3660360;
   $$lcssa8$i$i45 = $10313;
   label = 69;
  }
 }
 do if ((label | 0) == 68) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $10320 = HEAP32[915096] | 0;
   if (($10320 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i46 = 3660384;
    $$lcssa8$i$i45 = $10320;
    label = 69;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $10325 = HEAP32[915102] | 0;
   if (($10325 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i46 = 3660408;
    $$lcssa8$i$i45 = $10325;
    label = 69;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $10330 = HEAP32[915108] | 0;
   if (($10330 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i46 = 3660432;
    $$lcssa8$i$i45 = $10330;
    label = 69;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $10335 = HEAP32[915114] | 0;
   if (($10335 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i46 = 3660456;
    $$lcssa8$i$i45 = $10335;
    label = 69;
    break;
   }
  }
  $$3$i$i47 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 69) {
  $10318 = $$lcssa8$i$i45 + -4 | 0;
  HEAP32[$$lcssa$i$i46 >> 2] = $10318;
  $$3$i$i47 = HEAP32[$10318 >> 2] | 0;
 }
 $10339 = $$3$i$i47 + 52 | 0;
 HEAP16[$$3$i$i47 >> 1] = 1024;
 HEAP16[$$3$i$i47 + 2 >> 1] = 15;
 HEAP8[$$3$i$i47 + 4 >> 0] = 16;
 HEAP8[$$3$i$i47 + 5 >> 0] = 1;
 HEAP32[$$3$i$i47 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i47 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i47 + 16 >> 2] = $10339;
 HEAP32[$$3$i$i47 + 20 >> 2] = 0;
 HEAP32[$$3$i$i47 + 24 >> 2] = 0;
 HEAP8[$$3$i$i47 + 48 >> 0] = 0;
 HEAP32[$9 >> 2] = $$3$i$i47;
 _memcpy($10339 | 0, 3722456, 2048) | 0;
 _memcpy($$3$i$i47 + 2100 | 0, 3724504, 2048) | 0;
 _memcpy($$3$i$i47 + 4148 | 0, 3726552, 2048) | 0;
 _memcpy($$3$i$i47 + 6196 | 0, 3728600, 2048) | 0;
 _memcpy($$3$i$i47 + 8244 | 0, 3730648, 2048) | 0;
 _memcpy($$3$i$i47 + 10292 | 0, 3732696, 2048) | 0;
 _memcpy($$3$i$i47 + 12340 | 0, 3734744, 2048) | 0;
 _memcpy($$3$i$i47 + 14388 | 0, 3736792, 2048) | 0;
 _memcpy($$3$i$i47 + 16436 | 0, 3738840, 2048) | 0;
 _memcpy($$3$i$i47 + 18484 | 0, 3740888, 2048) | 0;
 _memcpy($$3$i$i47 + 20532 | 0, 3742936, 2048) | 0;
 _memcpy($$3$i$i47 + 22580 | 0, 3744984, 2048) | 0;
 _memcpy($$3$i$i47 + 24628 | 0, 3747032, 2048) | 0;
 _memcpy($$3$i$i47 + 26676 | 0, 3749080, 2048) | 0;
 _memcpy($$3$i$i47 + 28724 | 0, 3751128, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $9);
 if ($$3$i$i47 | 0) {
  $10364 = $$3$i$i47 + 5 | 0;
  $10366 = (HEAP8[$10364 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$10364 >> 0] = $10366;
  if (!($10366 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i47);
  HEAP32[$9 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3347 >> 1] = 45;
 HEAP16[$3348 >> 1] = 1023;
 HEAP16[$3349 >> 1] = 59;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 84; else {
  $10370 = HEAP32[915090] | 0;
  if (($10370 | 0) == (HEAP32[915088] | 0)) label = 84; else {
   $$lcssa$i$i59 = 3660360;
   $$lcssa8$i$i58 = $10370;
   label = 85;
  }
 }
 do if ((label | 0) == 84) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $10377 = HEAP32[915096] | 0;
   if (($10377 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i59 = 3660384;
    $$lcssa8$i$i58 = $10377;
    label = 85;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $10382 = HEAP32[915102] | 0;
   if (($10382 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i59 = 3660408;
    $$lcssa8$i$i58 = $10382;
    label = 85;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $10387 = HEAP32[915108] | 0;
   if (($10387 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i59 = 3660432;
    $$lcssa8$i$i58 = $10387;
    label = 85;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $10392 = HEAP32[915114] | 0;
   if (($10392 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i59 = 3660456;
    $$lcssa8$i$i58 = $10392;
    label = 85;
    break;
   }
  }
  $$3$i$i60 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 85) {
  $10375 = $$lcssa8$i$i58 + -4 | 0;
  HEAP32[$$lcssa$i$i59 >> 2] = $10375;
  $$3$i$i60 = HEAP32[$10375 >> 2] | 0;
 }
 $10396 = $$3$i$i60 + 52 | 0;
 HEAP16[$$3$i$i60 >> 1] = 1024;
 HEAP16[$$3$i$i60 + 2 >> 1] = 15;
 HEAP8[$$3$i$i60 + 4 >> 0] = 16;
 HEAP8[$$3$i$i60 + 5 >> 0] = 1;
 HEAP32[$$3$i$i60 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i60 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i60 + 16 >> 2] = $10396;
 HEAP32[$$3$i$i60 + 20 >> 2] = 0;
 HEAP32[$$3$i$i60 + 24 >> 2] = 0;
 HEAP8[$$3$i$i60 + 48 >> 0] = 0;
 HEAP32[$10 >> 2] = $$3$i$i60;
 _memcpy($10396 | 0, 3753176, 2048) | 0;
 _memcpy($$3$i$i60 + 2100 | 0, 3755224, 2048) | 0;
 _memcpy($$3$i$i60 + 4148 | 0, 3757272, 2048) | 0;
 _memcpy($$3$i$i60 + 6196 | 0, 3759320, 2048) | 0;
 _memcpy($$3$i$i60 + 8244 | 0, 3761368, 2048) | 0;
 _memcpy($$3$i$i60 + 10292 | 0, 3763416, 2048) | 0;
 _memcpy($$3$i$i60 + 12340 | 0, 3765464, 2048) | 0;
 _memcpy($$3$i$i60 + 14388 | 0, 3767512, 2048) | 0;
 _memcpy($$3$i$i60 + 16436 | 0, 3769560, 2048) | 0;
 _memcpy($$3$i$i60 + 18484 | 0, 3771608, 2048) | 0;
 _memcpy($$3$i$i60 + 20532 | 0, 3773656, 2048) | 0;
 _memcpy($$3$i$i60 + 22580 | 0, 3775704, 2048) | 0;
 _memcpy($$3$i$i60 + 24628 | 0, 3777752, 2048) | 0;
 _memcpy($$3$i$i60 + 26676 | 0, 3779800, 2048) | 0;
 _memcpy($$3$i$i60 + 28724 | 0, 3781848, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $10);
 if ($$3$i$i60 | 0) {
  $10421 = $$3$i$i60 + 5 | 0;
  $10423 = (HEAP8[$10421 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$10421 >> 0] = $10423;
  if (!($10423 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i60);
  HEAP32[$10 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3350 >> 1] = 60;
 HEAP16[$3351 >> 1] = 1023;
 HEAP16[$3352 >> 1] = 74;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 100; else {
  $10427 = HEAP32[915090] | 0;
  if (($10427 | 0) == (HEAP32[915088] | 0)) label = 100; else {
   $$lcssa$i$i72 = 3660360;
   $$lcssa8$i$i71 = $10427;
   label = 101;
  }
 }
 do if ((label | 0) == 100) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $10434 = HEAP32[915096] | 0;
   if (($10434 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i72 = 3660384;
    $$lcssa8$i$i71 = $10434;
    label = 101;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $10439 = HEAP32[915102] | 0;
   if (($10439 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i72 = 3660408;
    $$lcssa8$i$i71 = $10439;
    label = 101;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $10444 = HEAP32[915108] | 0;
   if (($10444 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i72 = 3660432;
    $$lcssa8$i$i71 = $10444;
    label = 101;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $10449 = HEAP32[915114] | 0;
   if (($10449 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i72 = 3660456;
    $$lcssa8$i$i71 = $10449;
    label = 101;
    break;
   }
  }
  $$3$i$i73 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 101) {
  $10432 = $$lcssa8$i$i71 + -4 | 0;
  HEAP32[$$lcssa$i$i72 >> 2] = $10432;
  $$3$i$i73 = HEAP32[$10432 >> 2] | 0;
 }
 $10453 = $$3$i$i73 + 52 | 0;
 HEAP16[$$3$i$i73 >> 1] = 1024;
 HEAP16[$$3$i$i73 + 2 >> 1] = 15;
 HEAP8[$$3$i$i73 + 4 >> 0] = 16;
 HEAP8[$$3$i$i73 + 5 >> 0] = 1;
 HEAP32[$$3$i$i73 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i73 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i73 + 16 >> 2] = $10453;
 HEAP32[$$3$i$i73 + 20 >> 2] = 0;
 HEAP32[$$3$i$i73 + 24 >> 2] = 0;
 HEAP8[$$3$i$i73 + 48 >> 0] = 0;
 HEAP32[$11 >> 2] = $$3$i$i73;
 _memcpy($10453 | 0, 3783896, 2048) | 0;
 _memcpy($$3$i$i73 + 2100 | 0, 3785944, 2048) | 0;
 _memcpy($$3$i$i73 + 4148 | 0, 3787992, 2048) | 0;
 _memcpy($$3$i$i73 + 6196 | 0, 3790040, 2048) | 0;
 _memcpy($$3$i$i73 + 8244 | 0, 3792088, 2048) | 0;
 _memcpy($$3$i$i73 + 10292 | 0, 3794136, 2048) | 0;
 _memcpy($$3$i$i73 + 12340 | 0, 3796184, 2048) | 0;
 _memcpy($$3$i$i73 + 14388 | 0, 3798232, 2048) | 0;
 _memcpy($$3$i$i73 + 16436 | 0, 3800280, 2048) | 0;
 _memcpy($$3$i$i73 + 18484 | 0, 3802328, 2048) | 0;
 _memcpy($$3$i$i73 + 20532 | 0, 3804376, 2048) | 0;
 _memcpy($$3$i$i73 + 22580 | 0, 3806424, 2048) | 0;
 _memcpy($$3$i$i73 + 24628 | 0, 3808472, 2048) | 0;
 _memcpy($$3$i$i73 + 26676 | 0, 3810520, 2048) | 0;
 _memcpy($$3$i$i73 + 28724 | 0, 3812568, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $11);
 if ($$3$i$i73 | 0) {
  $10478 = $$3$i$i73 + 5 | 0;
  $10480 = (HEAP8[$10478 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$10478 >> 0] = $10480;
  if (!($10480 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i73);
  HEAP32[$11 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3353 >> 1] = 75;
 HEAP16[$3354 >> 1] = 1023;
 HEAP16[$3355 >> 1] = 89;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 116; else {
  $10484 = HEAP32[915090] | 0;
  if (($10484 | 0) == (HEAP32[915088] | 0)) label = 116; else {
   $$lcssa$i$i85 = 3660360;
   $$lcssa8$i$i84 = $10484;
   label = 117;
  }
 }
 do if ((label | 0) == 116) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $10491 = HEAP32[915096] | 0;
   if (($10491 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i85 = 3660384;
    $$lcssa8$i$i84 = $10491;
    label = 117;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $10496 = HEAP32[915102] | 0;
   if (($10496 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i85 = 3660408;
    $$lcssa8$i$i84 = $10496;
    label = 117;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $10501 = HEAP32[915108] | 0;
   if (($10501 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i85 = 3660432;
    $$lcssa8$i$i84 = $10501;
    label = 117;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $10506 = HEAP32[915114] | 0;
   if (($10506 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i85 = 3660456;
    $$lcssa8$i$i84 = $10506;
    label = 117;
    break;
   }
  }
  $$3$i$i86 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 117) {
  $10489 = $$lcssa8$i$i84 + -4 | 0;
  HEAP32[$$lcssa$i$i85 >> 2] = $10489;
  $$3$i$i86 = HEAP32[$10489 >> 2] | 0;
 }
 $10510 = $$3$i$i86 + 52 | 0;
 HEAP16[$$3$i$i86 >> 1] = 1024;
 HEAP16[$$3$i$i86 + 2 >> 1] = 15;
 HEAP8[$$3$i$i86 + 4 >> 0] = 16;
 HEAP8[$$3$i$i86 + 5 >> 0] = 1;
 HEAP32[$$3$i$i86 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i86 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i86 + 16 >> 2] = $10510;
 HEAP32[$$3$i$i86 + 20 >> 2] = 0;
 HEAP32[$$3$i$i86 + 24 >> 2] = 0;
 HEAP8[$$3$i$i86 + 48 >> 0] = 0;
 HEAP32[$12 >> 2] = $$3$i$i86;
 _memcpy($10510 | 0, 3814616, 2048) | 0;
 _memcpy($$3$i$i86 + 2100 | 0, 3816664, 2048) | 0;
 _memcpy($$3$i$i86 + 4148 | 0, 3818712, 2048) | 0;
 _memcpy($$3$i$i86 + 6196 | 0, 3820760, 2048) | 0;
 _memcpy($$3$i$i86 + 8244 | 0, 3822808, 2048) | 0;
 _memcpy($$3$i$i86 + 10292 | 0, 3824856, 2048) | 0;
 _memcpy($$3$i$i86 + 12340 | 0, 3826904, 2048) | 0;
 _memcpy($$3$i$i86 + 14388 | 0, 3828952, 2048) | 0;
 _memcpy($$3$i$i86 + 16436 | 0, 3831e3, 2048) | 0;
 _memcpy($$3$i$i86 + 18484 | 0, 3833048, 2048) | 0;
 _memcpy($$3$i$i86 + 20532 | 0, 3835096, 2048) | 0;
 _memcpy($$3$i$i86 + 22580 | 0, 3837144, 2048) | 0;
 _memcpy($$3$i$i86 + 24628 | 0, 3839192, 2048) | 0;
 _memcpy($$3$i$i86 + 26676 | 0, 3841240, 2048) | 0;
 _memcpy($$3$i$i86 + 28724 | 0, 3843288, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $12);
 if ($$3$i$i86 | 0) {
  $10535 = $$3$i$i86 + 5 | 0;
  $10537 = (HEAP8[$10535 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$10535 >> 0] = $10537;
  if (!($10537 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i86);
  HEAP32[$12 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3356 >> 1] = 90;
 HEAP16[$3357 >> 1] = 1023;
 HEAP16[$3358 >> 1] = 104;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 132; else {
  $10541 = HEAP32[915090] | 0;
  if (($10541 | 0) == (HEAP32[915088] | 0)) label = 132; else {
   $$lcssa$i$i98 = 3660360;
   $$lcssa8$i$i97 = $10541;
   label = 133;
  }
 }
 do if ((label | 0) == 132) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $10548 = HEAP32[915096] | 0;
   if (($10548 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i98 = 3660384;
    $$lcssa8$i$i97 = $10548;
    label = 133;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $10553 = HEAP32[915102] | 0;
   if (($10553 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i98 = 3660408;
    $$lcssa8$i$i97 = $10553;
    label = 133;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $10558 = HEAP32[915108] | 0;
   if (($10558 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i98 = 3660432;
    $$lcssa8$i$i97 = $10558;
    label = 133;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $10563 = HEAP32[915114] | 0;
   if (($10563 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i98 = 3660456;
    $$lcssa8$i$i97 = $10563;
    label = 133;
    break;
   }
  }
  $$3$i$i99 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 133) {
  $10546 = $$lcssa8$i$i97 + -4 | 0;
  HEAP32[$$lcssa$i$i98 >> 2] = $10546;
  $$3$i$i99 = HEAP32[$10546 >> 2] | 0;
 }
 $10567 = $$3$i$i99 + 52 | 0;
 HEAP16[$$3$i$i99 >> 1] = 1024;
 HEAP16[$$3$i$i99 + 2 >> 1] = 15;
 HEAP8[$$3$i$i99 + 4 >> 0] = 16;
 HEAP8[$$3$i$i99 + 5 >> 0] = 1;
 HEAP32[$$3$i$i99 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i99 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i99 + 16 >> 2] = $10567;
 HEAP32[$$3$i$i99 + 20 >> 2] = 0;
 HEAP32[$$3$i$i99 + 24 >> 2] = 0;
 HEAP8[$$3$i$i99 + 48 >> 0] = 0;
 HEAP32[$13 >> 2] = $$3$i$i99;
 _memcpy($10567 | 0, 3845336, 2048) | 0;
 _memcpy($$3$i$i99 + 2100 | 0, 3847384, 2048) | 0;
 _memcpy($$3$i$i99 + 4148 | 0, 3849432, 2048) | 0;
 _memcpy($$3$i$i99 + 6196 | 0, 3851480, 2048) | 0;
 _memcpy($$3$i$i99 + 8244 | 0, 3853528, 2048) | 0;
 _memcpy($$3$i$i99 + 10292 | 0, 3855576, 2048) | 0;
 _memcpy($$3$i$i99 + 12340 | 0, 3857624, 2048) | 0;
 _memcpy($$3$i$i99 + 14388 | 0, 3859672, 2048) | 0;
 _memcpy($$3$i$i99 + 16436 | 0, 3861720, 2048) | 0;
 _memcpy($$3$i$i99 + 18484 | 0, 3863768, 2048) | 0;
 _memcpy($$3$i$i99 + 20532 | 0, 3865816, 2048) | 0;
 _memcpy($$3$i$i99 + 22580 | 0, 3867864, 2048) | 0;
 _memcpy($$3$i$i99 + 24628 | 0, 3869912, 2048) | 0;
 _memcpy($$3$i$i99 + 26676 | 0, 3871960, 2048) | 0;
 _memcpy($$3$i$i99 + 28724 | 0, 3874008, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $13);
 if ($$3$i$i99 | 0) {
  $10592 = $$3$i$i99 + 5 | 0;
  $10594 = (HEAP8[$10592 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$10592 >> 0] = $10594;
  if (!($10594 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i99);
  HEAP32[$13 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3359 >> 1] = 105;
 HEAP16[$3360 >> 1] = 1023;
 HEAP16[$3361 >> 1] = 119;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 148; else {
  $10598 = HEAP32[915090] | 0;
  if (($10598 | 0) == (HEAP32[915088] | 0)) label = 148; else {
   $$lcssa$i$i111 = 3660360;
   $$lcssa8$i$i110 = $10598;
   label = 149;
  }
 }
 do if ((label | 0) == 148) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $10605 = HEAP32[915096] | 0;
   if (($10605 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i111 = 3660384;
    $$lcssa8$i$i110 = $10605;
    label = 149;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $10610 = HEAP32[915102] | 0;
   if (($10610 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i111 = 3660408;
    $$lcssa8$i$i110 = $10610;
    label = 149;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $10615 = HEAP32[915108] | 0;
   if (($10615 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i111 = 3660432;
    $$lcssa8$i$i110 = $10615;
    label = 149;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $10620 = HEAP32[915114] | 0;
   if (($10620 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i111 = 3660456;
    $$lcssa8$i$i110 = $10620;
    label = 149;
    break;
   }
  }
  $$3$i$i112 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 149) {
  $10603 = $$lcssa8$i$i110 + -4 | 0;
  HEAP32[$$lcssa$i$i111 >> 2] = $10603;
  $$3$i$i112 = HEAP32[$10603 >> 2] | 0;
 }
 $10624 = $$3$i$i112 + 52 | 0;
 HEAP16[$$3$i$i112 >> 1] = 1024;
 HEAP16[$$3$i$i112 + 2 >> 1] = 15;
 HEAP8[$$3$i$i112 + 4 >> 0] = 16;
 HEAP8[$$3$i$i112 + 5 >> 0] = 1;
 HEAP32[$$3$i$i112 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i112 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i112 + 16 >> 2] = $10624;
 HEAP32[$$3$i$i112 + 20 >> 2] = 0;
 HEAP32[$$3$i$i112 + 24 >> 2] = 0;
 HEAP8[$$3$i$i112 + 48 >> 0] = 0;
 HEAP32[$14 >> 2] = $$3$i$i112;
 _memcpy($10624 | 0, 3876056, 2048) | 0;
 _memcpy($$3$i$i112 + 2100 | 0, 3878104, 2048) | 0;
 _memcpy($$3$i$i112 + 4148 | 0, 3880152, 2048) | 0;
 _memcpy($$3$i$i112 + 6196 | 0, 3882200, 2048) | 0;
 _memcpy($$3$i$i112 + 8244 | 0, 3884248, 2048) | 0;
 _memcpy($$3$i$i112 + 10292 | 0, 3886296, 2048) | 0;
 _memcpy($$3$i$i112 + 12340 | 0, 3888344, 2048) | 0;
 _memcpy($$3$i$i112 + 14388 | 0, 3890392, 2048) | 0;
 _memcpy($$3$i$i112 + 16436 | 0, 3892440, 2048) | 0;
 _memcpy($$3$i$i112 + 18484 | 0, 3894488, 2048) | 0;
 _memcpy($$3$i$i112 + 20532 | 0, 3896536, 2048) | 0;
 _memcpy($$3$i$i112 + 22580 | 0, 3898584, 2048) | 0;
 _memcpy($$3$i$i112 + 24628 | 0, 3900632, 2048) | 0;
 _memcpy($$3$i$i112 + 26676 | 0, 3902680, 2048) | 0;
 _memcpy($$3$i$i112 + 28724 | 0, 3904728, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $14);
 if ($$3$i$i112 | 0) {
  $10649 = $$3$i$i112 + 5 | 0;
  $10651 = (HEAP8[$10649 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$10649 >> 0] = $10651;
  if (!($10651 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i112);
  HEAP32[$14 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3362 >> 1] = 120;
 HEAP16[$3363 >> 1] = 1023;
 HEAP16[$3364 >> 1] = 134;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 164; else {
  $10655 = HEAP32[915090] | 0;
  if (($10655 | 0) == (HEAP32[915088] | 0)) label = 164; else {
   $$lcssa$i$i124 = 3660360;
   $$lcssa8$i$i123 = $10655;
   label = 165;
  }
 }
 do if ((label | 0) == 164) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $10662 = HEAP32[915096] | 0;
   if (($10662 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i124 = 3660384;
    $$lcssa8$i$i123 = $10662;
    label = 165;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $10667 = HEAP32[915102] | 0;
   if (($10667 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i124 = 3660408;
    $$lcssa8$i$i123 = $10667;
    label = 165;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $10672 = HEAP32[915108] | 0;
   if (($10672 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i124 = 3660432;
    $$lcssa8$i$i123 = $10672;
    label = 165;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $10677 = HEAP32[915114] | 0;
   if (($10677 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i124 = 3660456;
    $$lcssa8$i$i123 = $10677;
    label = 165;
    break;
   }
  }
  $$3$i$i125 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 165) {
  $10660 = $$lcssa8$i$i123 + -4 | 0;
  HEAP32[$$lcssa$i$i124 >> 2] = $10660;
  $$3$i$i125 = HEAP32[$10660 >> 2] | 0;
 }
 $10681 = $$3$i$i125 + 52 | 0;
 HEAP16[$$3$i$i125 >> 1] = 1024;
 HEAP16[$$3$i$i125 + 2 >> 1] = 15;
 HEAP8[$$3$i$i125 + 4 >> 0] = 16;
 HEAP8[$$3$i$i125 + 5 >> 0] = 1;
 HEAP32[$$3$i$i125 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i125 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i125 + 16 >> 2] = $10681;
 HEAP32[$$3$i$i125 + 20 >> 2] = 0;
 HEAP32[$$3$i$i125 + 24 >> 2] = 0;
 HEAP8[$$3$i$i125 + 48 >> 0] = 0;
 HEAP32[$15 >> 2] = $$3$i$i125;
 _memcpy($10681 | 0, 3906776, 2048) | 0;
 _memcpy($$3$i$i125 + 2100 | 0, 3908824, 2048) | 0;
 _memcpy($$3$i$i125 + 4148 | 0, 3910872, 2048) | 0;
 _memcpy($$3$i$i125 + 6196 | 0, 3912920, 2048) | 0;
 _memcpy($$3$i$i125 + 8244 | 0, 3914968, 2048) | 0;
 _memcpy($$3$i$i125 + 10292 | 0, 3917016, 2048) | 0;
 _memcpy($$3$i$i125 + 12340 | 0, 3919064, 2048) | 0;
 _memcpy($$3$i$i125 + 14388 | 0, 3921112, 2048) | 0;
 _memcpy($$3$i$i125 + 16436 | 0, 3923160, 2048) | 0;
 _memcpy($$3$i$i125 + 18484 | 0, 3925208, 2048) | 0;
 _memcpy($$3$i$i125 + 20532 | 0, 3927256, 2048) | 0;
 _memcpy($$3$i$i125 + 22580 | 0, 3929304, 2048) | 0;
 _memcpy($$3$i$i125 + 24628 | 0, 3931352, 2048) | 0;
 _memcpy($$3$i$i125 + 26676 | 0, 3933400, 2048) | 0;
 _memcpy($$3$i$i125 + 28724 | 0, 3935448, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $15);
 if ($$3$i$i125 | 0) {
  $10706 = $$3$i$i125 + 5 | 0;
  $10708 = (HEAP8[$10706 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$10706 >> 0] = $10708;
  if (!($10708 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i125);
  HEAP32[$15 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3365 >> 1] = 135;
 HEAP16[$3366 >> 1] = 1023;
 HEAP16[$3367 >> 1] = 149;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 180; else {
  $10712 = HEAP32[915090] | 0;
  if (($10712 | 0) == (HEAP32[915088] | 0)) label = 180; else {
   $$lcssa$i$i137 = 3660360;
   $$lcssa8$i$i136 = $10712;
   label = 181;
  }
 }
 do if ((label | 0) == 180) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $10719 = HEAP32[915096] | 0;
   if (($10719 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i137 = 3660384;
    $$lcssa8$i$i136 = $10719;
    label = 181;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $10724 = HEAP32[915102] | 0;
   if (($10724 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i137 = 3660408;
    $$lcssa8$i$i136 = $10724;
    label = 181;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $10729 = HEAP32[915108] | 0;
   if (($10729 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i137 = 3660432;
    $$lcssa8$i$i136 = $10729;
    label = 181;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $10734 = HEAP32[915114] | 0;
   if (($10734 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i137 = 3660456;
    $$lcssa8$i$i136 = $10734;
    label = 181;
    break;
   }
  }
  $$3$i$i138 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 181) {
  $10717 = $$lcssa8$i$i136 + -4 | 0;
  HEAP32[$$lcssa$i$i137 >> 2] = $10717;
  $$3$i$i138 = HEAP32[$10717 >> 2] | 0;
 }
 $10738 = $$3$i$i138 + 52 | 0;
 HEAP16[$$3$i$i138 >> 1] = 1024;
 HEAP16[$$3$i$i138 + 2 >> 1] = 15;
 HEAP8[$$3$i$i138 + 4 >> 0] = 16;
 HEAP8[$$3$i$i138 + 5 >> 0] = 1;
 HEAP32[$$3$i$i138 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i138 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i138 + 16 >> 2] = $10738;
 HEAP32[$$3$i$i138 + 20 >> 2] = 0;
 HEAP32[$$3$i$i138 + 24 >> 2] = 0;
 HEAP8[$$3$i$i138 + 48 >> 0] = 0;
 HEAP32[$16 >> 2] = $$3$i$i138;
 _memcpy($10738 | 0, 3937496, 2048) | 0;
 _memcpy($$3$i$i138 + 2100 | 0, 3939544, 2048) | 0;
 _memcpy($$3$i$i138 + 4148 | 0, 3941592, 2048) | 0;
 _memcpy($$3$i$i138 + 6196 | 0, 3943640, 2048) | 0;
 _memcpy($$3$i$i138 + 8244 | 0, 3945688, 2048) | 0;
 _memcpy($$3$i$i138 + 10292 | 0, 3947736, 2048) | 0;
 _memcpy($$3$i$i138 + 12340 | 0, 3949784, 2048) | 0;
 _memcpy($$3$i$i138 + 14388 | 0, 3951832, 2048) | 0;
 _memcpy($$3$i$i138 + 16436 | 0, 3953880, 2048) | 0;
 _memcpy($$3$i$i138 + 18484 | 0, 3955928, 2048) | 0;
 _memcpy($$3$i$i138 + 20532 | 0, 3957976, 2048) | 0;
 _memcpy($$3$i$i138 + 22580 | 0, 3960024, 2048) | 0;
 _memcpy($$3$i$i138 + 24628 | 0, 3962072, 2048) | 0;
 _memcpy($$3$i$i138 + 26676 | 0, 3964120, 2048) | 0;
 _memcpy($$3$i$i138 + 28724 | 0, 3966168, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $16);
 if ($$3$i$i138 | 0) {
  $10763 = $$3$i$i138 + 5 | 0;
  $10765 = (HEAP8[$10763 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$10763 >> 0] = $10765;
  if (!($10765 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i138);
  HEAP32[$16 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3368 >> 1] = 150;
 HEAP16[$3369 >> 1] = 1023;
 HEAP16[$3370 >> 1] = 164;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 196; else {
  $10769 = HEAP32[915090] | 0;
  if (($10769 | 0) == (HEAP32[915088] | 0)) label = 196; else {
   $$lcssa$i$i150 = 3660360;
   $$lcssa8$i$i149 = $10769;
   label = 197;
  }
 }
 do if ((label | 0) == 196) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $10776 = HEAP32[915096] | 0;
   if (($10776 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i150 = 3660384;
    $$lcssa8$i$i149 = $10776;
    label = 197;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $10781 = HEAP32[915102] | 0;
   if (($10781 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i150 = 3660408;
    $$lcssa8$i$i149 = $10781;
    label = 197;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $10786 = HEAP32[915108] | 0;
   if (($10786 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i150 = 3660432;
    $$lcssa8$i$i149 = $10786;
    label = 197;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $10791 = HEAP32[915114] | 0;
   if (($10791 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i150 = 3660456;
    $$lcssa8$i$i149 = $10791;
    label = 197;
    break;
   }
  }
  $$3$i$i151 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 197) {
  $10774 = $$lcssa8$i$i149 + -4 | 0;
  HEAP32[$$lcssa$i$i150 >> 2] = $10774;
  $$3$i$i151 = HEAP32[$10774 >> 2] | 0;
 }
 $10795 = $$3$i$i151 + 52 | 0;
 HEAP16[$$3$i$i151 >> 1] = 1024;
 HEAP16[$$3$i$i151 + 2 >> 1] = 15;
 HEAP8[$$3$i$i151 + 4 >> 0] = 16;
 HEAP8[$$3$i$i151 + 5 >> 0] = 1;
 HEAP32[$$3$i$i151 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i151 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i151 + 16 >> 2] = $10795;
 HEAP32[$$3$i$i151 + 20 >> 2] = 0;
 HEAP32[$$3$i$i151 + 24 >> 2] = 0;
 HEAP8[$$3$i$i151 + 48 >> 0] = 0;
 HEAP32[$17 >> 2] = $$3$i$i151;
 _memcpy($10795 | 0, 3968216, 2048) | 0;
 _memcpy($$3$i$i151 + 2100 | 0, 3970264, 2048) | 0;
 _memcpy($$3$i$i151 + 4148 | 0, 3972312, 2048) | 0;
 _memcpy($$3$i$i151 + 6196 | 0, 3974360, 2048) | 0;
 _memcpy($$3$i$i151 + 8244 | 0, 3976408, 2048) | 0;
 _memcpy($$3$i$i151 + 10292 | 0, 3978456, 2048) | 0;
 _memcpy($$3$i$i151 + 12340 | 0, 3980504, 2048) | 0;
 _memcpy($$3$i$i151 + 14388 | 0, 3982552, 2048) | 0;
 _memcpy($$3$i$i151 + 16436 | 0, 3984600, 2048) | 0;
 _memcpy($$3$i$i151 + 18484 | 0, 3986648, 2048) | 0;
 _memcpy($$3$i$i151 + 20532 | 0, 3988696, 2048) | 0;
 _memcpy($$3$i$i151 + 22580 | 0, 3990744, 2048) | 0;
 _memcpy($$3$i$i151 + 24628 | 0, 3992792, 2048) | 0;
 _memcpy($$3$i$i151 + 26676 | 0, 3994840, 2048) | 0;
 _memcpy($$3$i$i151 + 28724 | 0, 3996888, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $17);
 if ($$3$i$i151 | 0) {
  $10820 = $$3$i$i151 + 5 | 0;
  $10822 = (HEAP8[$10820 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$10820 >> 0] = $10822;
  if (!($10822 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i151);
  HEAP32[$17 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3371 >> 1] = 165;
 HEAP16[$3372 >> 1] = 1023;
 HEAP16[$3373 >> 1] = 179;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 212; else {
  $10826 = HEAP32[915090] | 0;
  if (($10826 | 0) == (HEAP32[915088] | 0)) label = 212; else {
   $$lcssa$i$i163 = 3660360;
   $$lcssa8$i$i162 = $10826;
   label = 213;
  }
 }
 do if ((label | 0) == 212) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $10833 = HEAP32[915096] | 0;
   if (($10833 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i163 = 3660384;
    $$lcssa8$i$i162 = $10833;
    label = 213;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $10838 = HEAP32[915102] | 0;
   if (($10838 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i163 = 3660408;
    $$lcssa8$i$i162 = $10838;
    label = 213;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $10843 = HEAP32[915108] | 0;
   if (($10843 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i163 = 3660432;
    $$lcssa8$i$i162 = $10843;
    label = 213;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $10848 = HEAP32[915114] | 0;
   if (($10848 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i163 = 3660456;
    $$lcssa8$i$i162 = $10848;
    label = 213;
    break;
   }
  }
  $$3$i$i164 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 213) {
  $10831 = $$lcssa8$i$i162 + -4 | 0;
  HEAP32[$$lcssa$i$i163 >> 2] = $10831;
  $$3$i$i164 = HEAP32[$10831 >> 2] | 0;
 }
 $10852 = $$3$i$i164 + 52 | 0;
 HEAP16[$$3$i$i164 >> 1] = 1024;
 HEAP16[$$3$i$i164 + 2 >> 1] = 15;
 HEAP8[$$3$i$i164 + 4 >> 0] = 16;
 HEAP8[$$3$i$i164 + 5 >> 0] = 1;
 HEAP32[$$3$i$i164 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i164 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i164 + 16 >> 2] = $10852;
 HEAP32[$$3$i$i164 + 20 >> 2] = 0;
 HEAP32[$$3$i$i164 + 24 >> 2] = 0;
 HEAP8[$$3$i$i164 + 48 >> 0] = 0;
 HEAP32[$18 >> 2] = $$3$i$i164;
 _memcpy($10852 | 0, 3998936, 2048) | 0;
 _memcpy($$3$i$i164 + 2100 | 0, 4000984, 2048) | 0;
 _memcpy($$3$i$i164 + 4148 | 0, 4003032, 2048) | 0;
 _memcpy($$3$i$i164 + 6196 | 0, 4005080, 2048) | 0;
 _memcpy($$3$i$i164 + 8244 | 0, 4007128, 2048) | 0;
 _memcpy($$3$i$i164 + 10292 | 0, 4009176, 2048) | 0;
 _memcpy($$3$i$i164 + 12340 | 0, 4011224, 2048) | 0;
 _memcpy($$3$i$i164 + 14388 | 0, 4013272, 2048) | 0;
 _memcpy($$3$i$i164 + 16436 | 0, 4015320, 2048) | 0;
 _memcpy($$3$i$i164 + 18484 | 0, 4017368, 2048) | 0;
 _memcpy($$3$i$i164 + 20532 | 0, 4019416, 2048) | 0;
 _memcpy($$3$i$i164 + 22580 | 0, 4021464, 2048) | 0;
 _memcpy($$3$i$i164 + 24628 | 0, 4023512, 2048) | 0;
 _memcpy($$3$i$i164 + 26676 | 0, 4025560, 2048) | 0;
 _memcpy($$3$i$i164 + 28724 | 0, 4027608, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $18);
 if ($$3$i$i164 | 0) {
  $10877 = $$3$i$i164 + 5 | 0;
  $10879 = (HEAP8[$10877 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$10877 >> 0] = $10879;
  if (!($10879 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i164);
  HEAP32[$18 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3374 >> 1] = 180;
 HEAP16[$3375 >> 1] = 1023;
 HEAP16[$3376 >> 1] = 194;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 228; else {
  $10883 = HEAP32[915090] | 0;
  if (($10883 | 0) == (HEAP32[915088] | 0)) label = 228; else {
   $$lcssa$i$i176 = 3660360;
   $$lcssa8$i$i175 = $10883;
   label = 229;
  }
 }
 do if ((label | 0) == 228) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $10890 = HEAP32[915096] | 0;
   if (($10890 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i176 = 3660384;
    $$lcssa8$i$i175 = $10890;
    label = 229;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $10895 = HEAP32[915102] | 0;
   if (($10895 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i176 = 3660408;
    $$lcssa8$i$i175 = $10895;
    label = 229;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $10900 = HEAP32[915108] | 0;
   if (($10900 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i176 = 3660432;
    $$lcssa8$i$i175 = $10900;
    label = 229;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $10905 = HEAP32[915114] | 0;
   if (($10905 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i176 = 3660456;
    $$lcssa8$i$i175 = $10905;
    label = 229;
    break;
   }
  }
  $$3$i$i177 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 229) {
  $10888 = $$lcssa8$i$i175 + -4 | 0;
  HEAP32[$$lcssa$i$i176 >> 2] = $10888;
  $$3$i$i177 = HEAP32[$10888 >> 2] | 0;
 }
 $10909 = $$3$i$i177 + 52 | 0;
 HEAP16[$$3$i$i177 >> 1] = 1024;
 HEAP16[$$3$i$i177 + 2 >> 1] = 15;
 HEAP8[$$3$i$i177 + 4 >> 0] = 16;
 HEAP8[$$3$i$i177 + 5 >> 0] = 1;
 HEAP32[$$3$i$i177 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i177 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i177 + 16 >> 2] = $10909;
 HEAP32[$$3$i$i177 + 20 >> 2] = 0;
 HEAP32[$$3$i$i177 + 24 >> 2] = 0;
 HEAP8[$$3$i$i177 + 48 >> 0] = 0;
 HEAP32[$19 >> 2] = $$3$i$i177;
 _memcpy($10909 | 0, 4029656, 2048) | 0;
 _memcpy($$3$i$i177 + 2100 | 0, 4031704, 2048) | 0;
 _memcpy($$3$i$i177 + 4148 | 0, 4033752, 2048) | 0;
 _memcpy($$3$i$i177 + 6196 | 0, 4035800, 2048) | 0;
 _memcpy($$3$i$i177 + 8244 | 0, 4037848, 2048) | 0;
 _memcpy($$3$i$i177 + 10292 | 0, 4039896, 2048) | 0;
 _memcpy($$3$i$i177 + 12340 | 0, 4041944, 2048) | 0;
 _memcpy($$3$i$i177 + 14388 | 0, 4043992, 2048) | 0;
 _memcpy($$3$i$i177 + 16436 | 0, 4046040, 2048) | 0;
 _memcpy($$3$i$i177 + 18484 | 0, 4048088, 2048) | 0;
 _memcpy($$3$i$i177 + 20532 | 0, 4050136, 2048) | 0;
 _memcpy($$3$i$i177 + 22580 | 0, 4052184, 2048) | 0;
 _memcpy($$3$i$i177 + 24628 | 0, 4054232, 2048) | 0;
 _memcpy($$3$i$i177 + 26676 | 0, 4056280, 2048) | 0;
 _memcpy($$3$i$i177 + 28724 | 0, 4058328, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $19);
 if ($$3$i$i177 | 0) {
  $10934 = $$3$i$i177 + 5 | 0;
  $10936 = (HEAP8[$10934 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$10934 >> 0] = $10936;
  if (!($10936 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i177);
  HEAP32[$19 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3377 >> 1] = 195;
 HEAP16[$3378 >> 1] = 1023;
 HEAP16[$3379 >> 1] = 209;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 244; else {
  $10940 = HEAP32[915090] | 0;
  if (($10940 | 0) == (HEAP32[915088] | 0)) label = 244; else {
   $$lcssa$i$i189 = 3660360;
   $$lcssa8$i$i188 = $10940;
   label = 245;
  }
 }
 do if ((label | 0) == 244) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $10947 = HEAP32[915096] | 0;
   if (($10947 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i189 = 3660384;
    $$lcssa8$i$i188 = $10947;
    label = 245;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $10952 = HEAP32[915102] | 0;
   if (($10952 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i189 = 3660408;
    $$lcssa8$i$i188 = $10952;
    label = 245;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $10957 = HEAP32[915108] | 0;
   if (($10957 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i189 = 3660432;
    $$lcssa8$i$i188 = $10957;
    label = 245;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $10962 = HEAP32[915114] | 0;
   if (($10962 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i189 = 3660456;
    $$lcssa8$i$i188 = $10962;
    label = 245;
    break;
   }
  }
  $$3$i$i190 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 245) {
  $10945 = $$lcssa8$i$i188 + -4 | 0;
  HEAP32[$$lcssa$i$i189 >> 2] = $10945;
  $$3$i$i190 = HEAP32[$10945 >> 2] | 0;
 }
 $10966 = $$3$i$i190 + 52 | 0;
 HEAP16[$$3$i$i190 >> 1] = 1024;
 HEAP16[$$3$i$i190 + 2 >> 1] = 15;
 HEAP8[$$3$i$i190 + 4 >> 0] = 16;
 HEAP8[$$3$i$i190 + 5 >> 0] = 1;
 HEAP32[$$3$i$i190 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i190 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i190 + 16 >> 2] = $10966;
 HEAP32[$$3$i$i190 + 20 >> 2] = 0;
 HEAP32[$$3$i$i190 + 24 >> 2] = 0;
 HEAP8[$$3$i$i190 + 48 >> 0] = 0;
 HEAP32[$20 >> 2] = $$3$i$i190;
 _memcpy($10966 | 0, 4060376, 2048) | 0;
 _memcpy($$3$i$i190 + 2100 | 0, 4062424, 2048) | 0;
 _memcpy($$3$i$i190 + 4148 | 0, 4064472, 2048) | 0;
 _memcpy($$3$i$i190 + 6196 | 0, 4066520, 2048) | 0;
 _memcpy($$3$i$i190 + 8244 | 0, 4068568, 2048) | 0;
 _memcpy($$3$i$i190 + 10292 | 0, 4070616, 2048) | 0;
 _memcpy($$3$i$i190 + 12340 | 0, 4072664, 2048) | 0;
 _memcpy($$3$i$i190 + 14388 | 0, 4074712, 2048) | 0;
 _memcpy($$3$i$i190 + 16436 | 0, 4076760, 2048) | 0;
 _memcpy($$3$i$i190 + 18484 | 0, 4078808, 2048) | 0;
 _memcpy($$3$i$i190 + 20532 | 0, 4080856, 2048) | 0;
 _memcpy($$3$i$i190 + 22580 | 0, 4082904, 2048) | 0;
 _memcpy($$3$i$i190 + 24628 | 0, 4084952, 2048) | 0;
 _memcpy($$3$i$i190 + 26676 | 0, 4087e3, 2048) | 0;
 _memcpy($$3$i$i190 + 28724 | 0, 4089048, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $20);
 if ($$3$i$i190 | 0) {
  $10991 = $$3$i$i190 + 5 | 0;
  $10993 = (HEAP8[$10991 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$10991 >> 0] = $10993;
  if (!($10993 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i190);
  HEAP32[$20 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3380 >> 1] = 210;
 HEAP16[$3381 >> 1] = 1023;
 HEAP16[$3382 >> 1] = 224;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 260; else {
  $10997 = HEAP32[915090] | 0;
  if (($10997 | 0) == (HEAP32[915088] | 0)) label = 260; else {
   $$lcssa$i$i202 = 3660360;
   $$lcssa8$i$i201 = $10997;
   label = 261;
  }
 }
 do if ((label | 0) == 260) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11004 = HEAP32[915096] | 0;
   if (($11004 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i202 = 3660384;
    $$lcssa8$i$i201 = $11004;
    label = 261;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11009 = HEAP32[915102] | 0;
   if (($11009 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i202 = 3660408;
    $$lcssa8$i$i201 = $11009;
    label = 261;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11014 = HEAP32[915108] | 0;
   if (($11014 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i202 = 3660432;
    $$lcssa8$i$i201 = $11014;
    label = 261;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11019 = HEAP32[915114] | 0;
   if (($11019 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i202 = 3660456;
    $$lcssa8$i$i201 = $11019;
    label = 261;
    break;
   }
  }
  $$3$i$i203 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 261) {
  $11002 = $$lcssa8$i$i201 + -4 | 0;
  HEAP32[$$lcssa$i$i202 >> 2] = $11002;
  $$3$i$i203 = HEAP32[$11002 >> 2] | 0;
 }
 $11023 = $$3$i$i203 + 52 | 0;
 HEAP16[$$3$i$i203 >> 1] = 1024;
 HEAP16[$$3$i$i203 + 2 >> 1] = 15;
 HEAP8[$$3$i$i203 + 4 >> 0] = 16;
 HEAP8[$$3$i$i203 + 5 >> 0] = 1;
 HEAP32[$$3$i$i203 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i203 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i203 + 16 >> 2] = $11023;
 HEAP32[$$3$i$i203 + 20 >> 2] = 0;
 HEAP32[$$3$i$i203 + 24 >> 2] = 0;
 HEAP8[$$3$i$i203 + 48 >> 0] = 0;
 HEAP32[$21 >> 2] = $$3$i$i203;
 _memcpy($11023 | 0, 4091096, 2048) | 0;
 _memcpy($$3$i$i203 + 2100 | 0, 4093144, 2048) | 0;
 _memcpy($$3$i$i203 + 4148 | 0, 4095192, 2048) | 0;
 _memcpy($$3$i$i203 + 6196 | 0, 4097240, 2048) | 0;
 _memcpy($$3$i$i203 + 8244 | 0, 4099288, 2048) | 0;
 _memcpy($$3$i$i203 + 10292 | 0, 4101336, 2048) | 0;
 _memcpy($$3$i$i203 + 12340 | 0, 4103384, 2048) | 0;
 _memcpy($$3$i$i203 + 14388 | 0, 4105432, 2048) | 0;
 _memcpy($$3$i$i203 + 16436 | 0, 4107480, 2048) | 0;
 _memcpy($$3$i$i203 + 18484 | 0, 4109528, 2048) | 0;
 _memcpy($$3$i$i203 + 20532 | 0, 4111576, 2048) | 0;
 _memcpy($$3$i$i203 + 22580 | 0, 4113624, 2048) | 0;
 _memcpy($$3$i$i203 + 24628 | 0, 4115672, 2048) | 0;
 _memcpy($$3$i$i203 + 26676 | 0, 4117720, 2048) | 0;
 _memcpy($$3$i$i203 + 28724 | 0, 4119768, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $21);
 if ($$3$i$i203 | 0) {
  $11048 = $$3$i$i203 + 5 | 0;
  $11050 = (HEAP8[$11048 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$11048 >> 0] = $11050;
  if (!($11050 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i203);
  HEAP32[$21 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3383 >> 1] = 225;
 HEAP16[$3384 >> 1] = 1023;
 HEAP16[$3385 >> 1] = 239;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 276; else {
  $11054 = HEAP32[915090] | 0;
  if (($11054 | 0) == (HEAP32[915088] | 0)) label = 276; else {
   $$lcssa$i$i215 = 3660360;
   $$lcssa8$i$i214 = $11054;
   label = 277;
  }
 }
 do if ((label | 0) == 276) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11061 = HEAP32[915096] | 0;
   if (($11061 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i215 = 3660384;
    $$lcssa8$i$i214 = $11061;
    label = 277;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11066 = HEAP32[915102] | 0;
   if (($11066 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i215 = 3660408;
    $$lcssa8$i$i214 = $11066;
    label = 277;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11071 = HEAP32[915108] | 0;
   if (($11071 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i215 = 3660432;
    $$lcssa8$i$i214 = $11071;
    label = 277;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11076 = HEAP32[915114] | 0;
   if (($11076 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i215 = 3660456;
    $$lcssa8$i$i214 = $11076;
    label = 277;
    break;
   }
  }
  $$3$i$i216 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 277) {
  $11059 = $$lcssa8$i$i214 + -4 | 0;
  HEAP32[$$lcssa$i$i215 >> 2] = $11059;
  $$3$i$i216 = HEAP32[$11059 >> 2] | 0;
 }
 $11080 = $$3$i$i216 + 52 | 0;
 HEAP16[$$3$i$i216 >> 1] = 1024;
 HEAP16[$$3$i$i216 + 2 >> 1] = 15;
 HEAP8[$$3$i$i216 + 4 >> 0] = 16;
 HEAP8[$$3$i$i216 + 5 >> 0] = 1;
 HEAP32[$$3$i$i216 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i216 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i216 + 16 >> 2] = $11080;
 HEAP32[$$3$i$i216 + 20 >> 2] = 0;
 HEAP32[$$3$i$i216 + 24 >> 2] = 0;
 HEAP8[$$3$i$i216 + 48 >> 0] = 0;
 HEAP32[$22 >> 2] = $$3$i$i216;
 _memcpy($11080 | 0, 4121816, 2048) | 0;
 _memcpy($$3$i$i216 + 2100 | 0, 4123864, 2048) | 0;
 _memcpy($$3$i$i216 + 4148 | 0, 4125912, 2048) | 0;
 _memcpy($$3$i$i216 + 6196 | 0, 4127960, 2048) | 0;
 _memcpy($$3$i$i216 + 8244 | 0, 4130008, 2048) | 0;
 _memcpy($$3$i$i216 + 10292 | 0, 4132056, 2048) | 0;
 _memcpy($$3$i$i216 + 12340 | 0, 4134104, 2048) | 0;
 _memcpy($$3$i$i216 + 14388 | 0, 4136152, 2048) | 0;
 _memcpy($$3$i$i216 + 16436 | 0, 4138200, 2048) | 0;
 _memcpy($$3$i$i216 + 18484 | 0, 4140248, 2048) | 0;
 _memcpy($$3$i$i216 + 20532 | 0, 4142296, 2048) | 0;
 _memcpy($$3$i$i216 + 22580 | 0, 4144344, 2048) | 0;
 _memcpy($$3$i$i216 + 24628 | 0, 4146392, 2048) | 0;
 _memcpy($$3$i$i216 + 26676 | 0, 4148440, 2048) | 0;
 _memcpy($$3$i$i216 + 28724 | 0, 4150488, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $22);
 if ($$3$i$i216 | 0) {
  $11105 = $$3$i$i216 + 5 | 0;
  $11107 = (HEAP8[$11105 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$11105 >> 0] = $11107;
  if (!($11107 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i216);
  HEAP32[$22 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3386 >> 1] = 240;
 HEAP16[$3387 >> 1] = 1023;
 HEAP16[$3388 >> 1] = 254;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 292; else {
  $11111 = HEAP32[915090] | 0;
  if (($11111 | 0) == (HEAP32[915088] | 0)) label = 292; else {
   $$lcssa$i$i228 = 3660360;
   $$lcssa8$i$i227 = $11111;
   label = 293;
  }
 }
 do if ((label | 0) == 292) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11118 = HEAP32[915096] | 0;
   if (($11118 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i228 = 3660384;
    $$lcssa8$i$i227 = $11118;
    label = 293;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11123 = HEAP32[915102] | 0;
   if (($11123 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i228 = 3660408;
    $$lcssa8$i$i227 = $11123;
    label = 293;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11128 = HEAP32[915108] | 0;
   if (($11128 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i228 = 3660432;
    $$lcssa8$i$i227 = $11128;
    label = 293;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11133 = HEAP32[915114] | 0;
   if (($11133 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i228 = 3660456;
    $$lcssa8$i$i227 = $11133;
    label = 293;
    break;
   }
  }
  $$3$i$i229 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 293) {
  $11116 = $$lcssa8$i$i227 + -4 | 0;
  HEAP32[$$lcssa$i$i228 >> 2] = $11116;
  $$3$i$i229 = HEAP32[$11116 >> 2] | 0;
 }
 $11137 = $$3$i$i229 + 52 | 0;
 HEAP16[$$3$i$i229 >> 1] = 1024;
 HEAP16[$$3$i$i229 + 2 >> 1] = 15;
 HEAP8[$$3$i$i229 + 4 >> 0] = 16;
 HEAP8[$$3$i$i229 + 5 >> 0] = 1;
 HEAP32[$$3$i$i229 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i229 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i229 + 16 >> 2] = $11137;
 HEAP32[$$3$i$i229 + 20 >> 2] = 0;
 HEAP32[$$3$i$i229 + 24 >> 2] = 0;
 HEAP8[$$3$i$i229 + 48 >> 0] = 0;
 HEAP32[$23 >> 2] = $$3$i$i229;
 _memcpy($11137 | 0, 4152536, 2048) | 0;
 _memcpy($$3$i$i229 + 2100 | 0, 4154584, 2048) | 0;
 _memcpy($$3$i$i229 + 4148 | 0, 4156632, 2048) | 0;
 _memcpy($$3$i$i229 + 6196 | 0, 4158680, 2048) | 0;
 _memcpy($$3$i$i229 + 8244 | 0, 4160728, 2048) | 0;
 _memcpy($$3$i$i229 + 10292 | 0, 4162776, 2048) | 0;
 _memcpy($$3$i$i229 + 12340 | 0, 4164824, 2048) | 0;
 _memcpy($$3$i$i229 + 14388 | 0, 4166872, 2048) | 0;
 _memcpy($$3$i$i229 + 16436 | 0, 4168920, 2048) | 0;
 _memcpy($$3$i$i229 + 18484 | 0, 4170968, 2048) | 0;
 _memcpy($$3$i$i229 + 20532 | 0, 4173016, 2048) | 0;
 _memcpy($$3$i$i229 + 22580 | 0, 4175064, 2048) | 0;
 _memcpy($$3$i$i229 + 24628 | 0, 4177112, 2048) | 0;
 _memcpy($$3$i$i229 + 26676 | 0, 4179160, 2048) | 0;
 _memcpy($$3$i$i229 + 28724 | 0, 4181208, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $23);
 if ($$3$i$i229 | 0) {
  $11162 = $$3$i$i229 + 5 | 0;
  $11164 = (HEAP8[$11162 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$11162 >> 0] = $11164;
  if (!($11164 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i229);
  HEAP32[$23 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3389 >> 1] = 255;
 HEAP16[$3390 >> 1] = 1023;
 HEAP16[$3391 >> 1] = 269;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 308; else {
  $11168 = HEAP32[915090] | 0;
  if (($11168 | 0) == (HEAP32[915088] | 0)) label = 308; else {
   $$lcssa$i$i241 = 3660360;
   $$lcssa8$i$i240 = $11168;
   label = 309;
  }
 }
 do if ((label | 0) == 308) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11175 = HEAP32[915096] | 0;
   if (($11175 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i241 = 3660384;
    $$lcssa8$i$i240 = $11175;
    label = 309;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11180 = HEAP32[915102] | 0;
   if (($11180 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i241 = 3660408;
    $$lcssa8$i$i240 = $11180;
    label = 309;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11185 = HEAP32[915108] | 0;
   if (($11185 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i241 = 3660432;
    $$lcssa8$i$i240 = $11185;
    label = 309;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11190 = HEAP32[915114] | 0;
   if (($11190 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i241 = 3660456;
    $$lcssa8$i$i240 = $11190;
    label = 309;
    break;
   }
  }
  $$3$i$i242 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 309) {
  $11173 = $$lcssa8$i$i240 + -4 | 0;
  HEAP32[$$lcssa$i$i241 >> 2] = $11173;
  $$3$i$i242 = HEAP32[$11173 >> 2] | 0;
 }
 $11194 = $$3$i$i242 + 52 | 0;
 HEAP16[$$3$i$i242 >> 1] = 1024;
 HEAP16[$$3$i$i242 + 2 >> 1] = 15;
 HEAP8[$$3$i$i242 + 4 >> 0] = 16;
 HEAP8[$$3$i$i242 + 5 >> 0] = 1;
 HEAP32[$$3$i$i242 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i242 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i242 + 16 >> 2] = $11194;
 HEAP32[$$3$i$i242 + 20 >> 2] = 0;
 HEAP32[$$3$i$i242 + 24 >> 2] = 0;
 HEAP8[$$3$i$i242 + 48 >> 0] = 0;
 HEAP32[$24 >> 2] = $$3$i$i242;
 _memcpy($11194 | 0, 4183256, 2048) | 0;
 _memcpy($$3$i$i242 + 2100 | 0, 4185304, 2048) | 0;
 _memcpy($$3$i$i242 + 4148 | 0, 4187352, 2048) | 0;
 _memcpy($$3$i$i242 + 6196 | 0, 4189400, 2048) | 0;
 _memcpy($$3$i$i242 + 8244 | 0, 4191448, 2048) | 0;
 _memcpy($$3$i$i242 + 10292 | 0, 4193496, 2048) | 0;
 _memcpy($$3$i$i242 + 12340 | 0, 4195544, 2048) | 0;
 _memcpy($$3$i$i242 + 14388 | 0, 4197592, 2048) | 0;
 _memcpy($$3$i$i242 + 16436 | 0, 4199640, 2048) | 0;
 _memcpy($$3$i$i242 + 18484 | 0, 4201688, 2048) | 0;
 _memcpy($$3$i$i242 + 20532 | 0, 4203736, 2048) | 0;
 _memcpy($$3$i$i242 + 22580 | 0, 4205784, 2048) | 0;
 _memcpy($$3$i$i242 + 24628 | 0, 4207832, 2048) | 0;
 _memcpy($$3$i$i242 + 26676 | 0, 4209880, 2048) | 0;
 _memcpy($$3$i$i242 + 28724 | 0, 4211928, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $24);
 if ($$3$i$i242 | 0) {
  $11219 = $$3$i$i242 + 5 | 0;
  $11221 = (HEAP8[$11219 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$11219 >> 0] = $11221;
  if (!($11221 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i242);
  HEAP32[$24 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3392 >> 1] = 270;
 HEAP16[$3393 >> 1] = 1023;
 HEAP16[$3394 >> 1] = 284;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 324; else {
  $11225 = HEAP32[915090] | 0;
  if (($11225 | 0) == (HEAP32[915088] | 0)) label = 324; else {
   $$lcssa$i$i254 = 3660360;
   $$lcssa8$i$i253 = $11225;
   label = 325;
  }
 }
 do if ((label | 0) == 324) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11232 = HEAP32[915096] | 0;
   if (($11232 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i254 = 3660384;
    $$lcssa8$i$i253 = $11232;
    label = 325;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11237 = HEAP32[915102] | 0;
   if (($11237 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i254 = 3660408;
    $$lcssa8$i$i253 = $11237;
    label = 325;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11242 = HEAP32[915108] | 0;
   if (($11242 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i254 = 3660432;
    $$lcssa8$i$i253 = $11242;
    label = 325;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11247 = HEAP32[915114] | 0;
   if (($11247 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i254 = 3660456;
    $$lcssa8$i$i253 = $11247;
    label = 325;
    break;
   }
  }
  $$3$i$i255 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 325) {
  $11230 = $$lcssa8$i$i253 + -4 | 0;
  HEAP32[$$lcssa$i$i254 >> 2] = $11230;
  $$3$i$i255 = HEAP32[$11230 >> 2] | 0;
 }
 $11251 = $$3$i$i255 + 52 | 0;
 HEAP16[$$3$i$i255 >> 1] = 1024;
 HEAP16[$$3$i$i255 + 2 >> 1] = 15;
 HEAP8[$$3$i$i255 + 4 >> 0] = 16;
 HEAP8[$$3$i$i255 + 5 >> 0] = 1;
 HEAP32[$$3$i$i255 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i255 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i255 + 16 >> 2] = $11251;
 HEAP32[$$3$i$i255 + 20 >> 2] = 0;
 HEAP32[$$3$i$i255 + 24 >> 2] = 0;
 HEAP8[$$3$i$i255 + 48 >> 0] = 0;
 HEAP32[$25 >> 2] = $$3$i$i255;
 _memcpy($11251 | 0, 4213976, 2048) | 0;
 _memcpy($$3$i$i255 + 2100 | 0, 4216024, 2048) | 0;
 _memcpy($$3$i$i255 + 4148 | 0, 4218072, 2048) | 0;
 _memcpy($$3$i$i255 + 6196 | 0, 4220120, 2048) | 0;
 _memcpy($$3$i$i255 + 8244 | 0, 4222168, 2048) | 0;
 _memcpy($$3$i$i255 + 10292 | 0, 4224216, 2048) | 0;
 _memcpy($$3$i$i255 + 12340 | 0, 4226264, 2048) | 0;
 _memcpy($$3$i$i255 + 14388 | 0, 4228312, 2048) | 0;
 _memcpy($$3$i$i255 + 16436 | 0, 4230360, 2048) | 0;
 _memcpy($$3$i$i255 + 18484 | 0, 4232408, 2048) | 0;
 _memcpy($$3$i$i255 + 20532 | 0, 4234456, 2048) | 0;
 _memcpy($$3$i$i255 + 22580 | 0, 4236504, 2048) | 0;
 _memcpy($$3$i$i255 + 24628 | 0, 4238552, 2048) | 0;
 _memcpy($$3$i$i255 + 26676 | 0, 4240600, 2048) | 0;
 _memcpy($$3$i$i255 + 28724 | 0, 4242648, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $25);
 if ($$3$i$i255 | 0) {
  $11276 = $$3$i$i255 + 5 | 0;
  $11278 = (HEAP8[$11276 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$11276 >> 0] = $11278;
  if (!($11278 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i255);
  HEAP32[$25 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3395 >> 1] = 285;
 HEAP16[$3396 >> 1] = 1023;
 HEAP16[$3397 >> 1] = 299;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 340; else {
  $11282 = HEAP32[915090] | 0;
  if (($11282 | 0) == (HEAP32[915088] | 0)) label = 340; else {
   $$lcssa$i$i267 = 3660360;
   $$lcssa8$i$i266 = $11282;
   label = 341;
  }
 }
 do if ((label | 0) == 340) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11289 = HEAP32[915096] | 0;
   if (($11289 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i267 = 3660384;
    $$lcssa8$i$i266 = $11289;
    label = 341;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11294 = HEAP32[915102] | 0;
   if (($11294 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i267 = 3660408;
    $$lcssa8$i$i266 = $11294;
    label = 341;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11299 = HEAP32[915108] | 0;
   if (($11299 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i267 = 3660432;
    $$lcssa8$i$i266 = $11299;
    label = 341;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11304 = HEAP32[915114] | 0;
   if (($11304 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i267 = 3660456;
    $$lcssa8$i$i266 = $11304;
    label = 341;
    break;
   }
  }
  $$3$i$i268 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 341) {
  $11287 = $$lcssa8$i$i266 + -4 | 0;
  HEAP32[$$lcssa$i$i267 >> 2] = $11287;
  $$3$i$i268 = HEAP32[$11287 >> 2] | 0;
 }
 $11308 = $$3$i$i268 + 52 | 0;
 HEAP16[$$3$i$i268 >> 1] = 1024;
 HEAP16[$$3$i$i268 + 2 >> 1] = 15;
 HEAP8[$$3$i$i268 + 4 >> 0] = 16;
 HEAP8[$$3$i$i268 + 5 >> 0] = 1;
 HEAP32[$$3$i$i268 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i268 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i268 + 16 >> 2] = $11308;
 HEAP32[$$3$i$i268 + 20 >> 2] = 0;
 HEAP32[$$3$i$i268 + 24 >> 2] = 0;
 HEAP8[$$3$i$i268 + 48 >> 0] = 0;
 HEAP32[$26 >> 2] = $$3$i$i268;
 _memcpy($11308 | 0, 4244696, 2048) | 0;
 _memcpy($$3$i$i268 + 2100 | 0, 4246744, 2048) | 0;
 _memcpy($$3$i$i268 + 4148 | 0, 4248792, 2048) | 0;
 _memcpy($$3$i$i268 + 6196 | 0, 4250840, 2048) | 0;
 _memcpy($$3$i$i268 + 8244 | 0, 4252888, 2048) | 0;
 _memcpy($$3$i$i268 + 10292 | 0, 4254936, 2048) | 0;
 _memcpy($$3$i$i268 + 12340 | 0, 4256984, 2048) | 0;
 _memcpy($$3$i$i268 + 14388 | 0, 4259032, 2048) | 0;
 _memcpy($$3$i$i268 + 16436 | 0, 4261080, 2048) | 0;
 _memcpy($$3$i$i268 + 18484 | 0, 4263128, 2048) | 0;
 _memcpy($$3$i$i268 + 20532 | 0, 4265176, 2048) | 0;
 _memcpy($$3$i$i268 + 22580 | 0, 4267224, 2048) | 0;
 _memcpy($$3$i$i268 + 24628 | 0, 4269272, 2048) | 0;
 _memcpy($$3$i$i268 + 26676 | 0, 4271320, 2048) | 0;
 _memcpy($$3$i$i268 + 28724 | 0, 4273368, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $26);
 if ($$3$i$i268 | 0) {
  $11333 = $$3$i$i268 + 5 | 0;
  $11335 = (HEAP8[$11333 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$11333 >> 0] = $11335;
  if (!($11335 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i268);
  HEAP32[$26 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3398 >> 1] = 300;
 HEAP16[$3399 >> 1] = 1023;
 HEAP16[$3400 >> 1] = 314;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 356; else {
  $11339 = HEAP32[915090] | 0;
  if (($11339 | 0) == (HEAP32[915088] | 0)) label = 356; else {
   $$lcssa$i$i280 = 3660360;
   $$lcssa8$i$i279 = $11339;
   label = 357;
  }
 }
 do if ((label | 0) == 356) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11346 = HEAP32[915096] | 0;
   if (($11346 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i280 = 3660384;
    $$lcssa8$i$i279 = $11346;
    label = 357;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11351 = HEAP32[915102] | 0;
   if (($11351 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i280 = 3660408;
    $$lcssa8$i$i279 = $11351;
    label = 357;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11356 = HEAP32[915108] | 0;
   if (($11356 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i280 = 3660432;
    $$lcssa8$i$i279 = $11356;
    label = 357;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11361 = HEAP32[915114] | 0;
   if (($11361 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i280 = 3660456;
    $$lcssa8$i$i279 = $11361;
    label = 357;
    break;
   }
  }
  $$3$i$i281 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 357) {
  $11344 = $$lcssa8$i$i279 + -4 | 0;
  HEAP32[$$lcssa$i$i280 >> 2] = $11344;
  $$3$i$i281 = HEAP32[$11344 >> 2] | 0;
 }
 $11365 = $$3$i$i281 + 52 | 0;
 HEAP16[$$3$i$i281 >> 1] = 1024;
 HEAP16[$$3$i$i281 + 2 >> 1] = 15;
 HEAP8[$$3$i$i281 + 4 >> 0] = 16;
 HEAP8[$$3$i$i281 + 5 >> 0] = 1;
 HEAP32[$$3$i$i281 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i281 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i281 + 16 >> 2] = $11365;
 HEAP32[$$3$i$i281 + 20 >> 2] = 0;
 HEAP32[$$3$i$i281 + 24 >> 2] = 0;
 HEAP8[$$3$i$i281 + 48 >> 0] = 0;
 HEAP32[$27 >> 2] = $$3$i$i281;
 _memcpy($11365 | 0, 4275416, 2048) | 0;
 _memcpy($$3$i$i281 + 2100 | 0, 4277464, 2048) | 0;
 _memcpy($$3$i$i281 + 4148 | 0, 4279512, 2048) | 0;
 _memcpy($$3$i$i281 + 6196 | 0, 4281560, 2048) | 0;
 _memcpy($$3$i$i281 + 8244 | 0, 4283608, 2048) | 0;
 _memcpy($$3$i$i281 + 10292 | 0, 4285656, 2048) | 0;
 _memcpy($$3$i$i281 + 12340 | 0, 4287704, 2048) | 0;
 _memcpy($$3$i$i281 + 14388 | 0, 4289752, 2048) | 0;
 _memcpy($$3$i$i281 + 16436 | 0, 4291800, 2048) | 0;
 _memcpy($$3$i$i281 + 18484 | 0, 4293848, 2048) | 0;
 _memcpy($$3$i$i281 + 20532 | 0, 4295896, 2048) | 0;
 _memcpy($$3$i$i281 + 22580 | 0, 4297944, 2048) | 0;
 _memcpy($$3$i$i281 + 24628 | 0, 4299992, 2048) | 0;
 _memcpy($$3$i$i281 + 26676 | 0, 4302040, 2048) | 0;
 _memcpy($$3$i$i281 + 28724 | 0, 4304088, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $27);
 if ($$3$i$i281 | 0) {
  $11390 = $$3$i$i281 + 5 | 0;
  $11392 = (HEAP8[$11390 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$11390 >> 0] = $11392;
  if (!($11392 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i281);
  HEAP32[$27 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3401 >> 1] = 315;
 HEAP16[$3402 >> 1] = 1023;
 HEAP16[$3403 >> 1] = 329;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 372; else {
  $11396 = HEAP32[915090] | 0;
  if (($11396 | 0) == (HEAP32[915088] | 0)) label = 372; else {
   $$lcssa$i$i293 = 3660360;
   $$lcssa8$i$i292 = $11396;
   label = 373;
  }
 }
 do if ((label | 0) == 372) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11403 = HEAP32[915096] | 0;
   if (($11403 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i293 = 3660384;
    $$lcssa8$i$i292 = $11403;
    label = 373;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11408 = HEAP32[915102] | 0;
   if (($11408 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i293 = 3660408;
    $$lcssa8$i$i292 = $11408;
    label = 373;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11413 = HEAP32[915108] | 0;
   if (($11413 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i293 = 3660432;
    $$lcssa8$i$i292 = $11413;
    label = 373;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11418 = HEAP32[915114] | 0;
   if (($11418 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i293 = 3660456;
    $$lcssa8$i$i292 = $11418;
    label = 373;
    break;
   }
  }
  $$3$i$i294 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 373) {
  $11401 = $$lcssa8$i$i292 + -4 | 0;
  HEAP32[$$lcssa$i$i293 >> 2] = $11401;
  $$3$i$i294 = HEAP32[$11401 >> 2] | 0;
 }
 $11422 = $$3$i$i294 + 52 | 0;
 HEAP16[$$3$i$i294 >> 1] = 1024;
 HEAP16[$$3$i$i294 + 2 >> 1] = 15;
 HEAP8[$$3$i$i294 + 4 >> 0] = 16;
 HEAP8[$$3$i$i294 + 5 >> 0] = 1;
 HEAP32[$$3$i$i294 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i294 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i294 + 16 >> 2] = $11422;
 HEAP32[$$3$i$i294 + 20 >> 2] = 0;
 HEAP32[$$3$i$i294 + 24 >> 2] = 0;
 HEAP8[$$3$i$i294 + 48 >> 0] = 0;
 HEAP32[$28 >> 2] = $$3$i$i294;
 _memcpy($11422 | 0, 4306136, 2048) | 0;
 _memcpy($$3$i$i294 + 2100 | 0, 4308184, 2048) | 0;
 _memcpy($$3$i$i294 + 4148 | 0, 4310232, 2048) | 0;
 _memcpy($$3$i$i294 + 6196 | 0, 4312280, 2048) | 0;
 _memcpy($$3$i$i294 + 8244 | 0, 4314328, 2048) | 0;
 _memcpy($$3$i$i294 + 10292 | 0, 4316376, 2048) | 0;
 _memcpy($$3$i$i294 + 12340 | 0, 4318424, 2048) | 0;
 _memcpy($$3$i$i294 + 14388 | 0, 4320472, 2048) | 0;
 _memcpy($$3$i$i294 + 16436 | 0, 4322520, 2048) | 0;
 _memcpy($$3$i$i294 + 18484 | 0, 4324568, 2048) | 0;
 _memcpy($$3$i$i294 + 20532 | 0, 4326616, 2048) | 0;
 _memcpy($$3$i$i294 + 22580 | 0, 4328664, 2048) | 0;
 _memcpy($$3$i$i294 + 24628 | 0, 4330712, 2048) | 0;
 _memcpy($$3$i$i294 + 26676 | 0, 4332760, 2048) | 0;
 _memcpy($$3$i$i294 + 28724 | 0, 4334808, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $28);
 if ($$3$i$i294 | 0) {
  $11447 = $$3$i$i294 + 5 | 0;
  $11449 = (HEAP8[$11447 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$11447 >> 0] = $11449;
  if (!($11449 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i294);
  HEAP32[$28 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3404 >> 1] = 330;
 HEAP16[$3405 >> 1] = 1023;
 HEAP16[$3406 >> 1] = 344;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 388; else {
  $11453 = HEAP32[915090] | 0;
  if (($11453 | 0) == (HEAP32[915088] | 0)) label = 388; else {
   $$lcssa$i$i306 = 3660360;
   $$lcssa8$i$i305 = $11453;
   label = 389;
  }
 }
 do if ((label | 0) == 388) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11460 = HEAP32[915096] | 0;
   if (($11460 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i306 = 3660384;
    $$lcssa8$i$i305 = $11460;
    label = 389;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11465 = HEAP32[915102] | 0;
   if (($11465 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i306 = 3660408;
    $$lcssa8$i$i305 = $11465;
    label = 389;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11470 = HEAP32[915108] | 0;
   if (($11470 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i306 = 3660432;
    $$lcssa8$i$i305 = $11470;
    label = 389;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11475 = HEAP32[915114] | 0;
   if (($11475 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i306 = 3660456;
    $$lcssa8$i$i305 = $11475;
    label = 389;
    break;
   }
  }
  $$3$i$i307 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 389) {
  $11458 = $$lcssa8$i$i305 + -4 | 0;
  HEAP32[$$lcssa$i$i306 >> 2] = $11458;
  $$3$i$i307 = HEAP32[$11458 >> 2] | 0;
 }
 $11479 = $$3$i$i307 + 52 | 0;
 HEAP16[$$3$i$i307 >> 1] = 1024;
 HEAP16[$$3$i$i307 + 2 >> 1] = 15;
 HEAP8[$$3$i$i307 + 4 >> 0] = 16;
 HEAP8[$$3$i$i307 + 5 >> 0] = 1;
 HEAP32[$$3$i$i307 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i307 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i307 + 16 >> 2] = $11479;
 HEAP32[$$3$i$i307 + 20 >> 2] = 0;
 HEAP32[$$3$i$i307 + 24 >> 2] = 0;
 HEAP8[$$3$i$i307 + 48 >> 0] = 0;
 HEAP32[$29 >> 2] = $$3$i$i307;
 _memcpy($11479 | 0, 4336856, 2048) | 0;
 _memcpy($$3$i$i307 + 2100 | 0, 4338904, 2048) | 0;
 _memcpy($$3$i$i307 + 4148 | 0, 4340952, 2048) | 0;
 _memcpy($$3$i$i307 + 6196 | 0, 4343e3, 2048) | 0;
 _memcpy($$3$i$i307 + 8244 | 0, 4345048, 2048) | 0;
 _memcpy($$3$i$i307 + 10292 | 0, 4347096, 2048) | 0;
 _memcpy($$3$i$i307 + 12340 | 0, 4349144, 2048) | 0;
 _memcpy($$3$i$i307 + 14388 | 0, 4351192, 2048) | 0;
 _memcpy($$3$i$i307 + 16436 | 0, 4353240, 2048) | 0;
 _memcpy($$3$i$i307 + 18484 | 0, 4355288, 2048) | 0;
 _memcpy($$3$i$i307 + 20532 | 0, 4357336, 2048) | 0;
 _memcpy($$3$i$i307 + 22580 | 0, 4359384, 2048) | 0;
 _memcpy($$3$i$i307 + 24628 | 0, 4361432, 2048) | 0;
 _memcpy($$3$i$i307 + 26676 | 0, 4363480, 2048) | 0;
 _memcpy($$3$i$i307 + 28724 | 0, 4365528, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $29);
 if ($$3$i$i307 | 0) {
  $11504 = $$3$i$i307 + 5 | 0;
  $11506 = (HEAP8[$11504 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$11504 >> 0] = $11506;
  if (!($11506 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i307);
  HEAP32[$29 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3407 >> 1] = 345;
 HEAP16[$3408 >> 1] = 1023;
 HEAP16[$3409 >> 1] = 359;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 404; else {
  $11510 = HEAP32[915090] | 0;
  if (($11510 | 0) == (HEAP32[915088] | 0)) label = 404; else {
   $$lcssa$i$i319 = 3660360;
   $$lcssa8$i$i318 = $11510;
   label = 405;
  }
 }
 do if ((label | 0) == 404) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11517 = HEAP32[915096] | 0;
   if (($11517 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i319 = 3660384;
    $$lcssa8$i$i318 = $11517;
    label = 405;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11522 = HEAP32[915102] | 0;
   if (($11522 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i319 = 3660408;
    $$lcssa8$i$i318 = $11522;
    label = 405;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11527 = HEAP32[915108] | 0;
   if (($11527 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i319 = 3660432;
    $$lcssa8$i$i318 = $11527;
    label = 405;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11532 = HEAP32[915114] | 0;
   if (($11532 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i319 = 3660456;
    $$lcssa8$i$i318 = $11532;
    label = 405;
    break;
   }
  }
  $$3$i$i320 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 405) {
  $11515 = $$lcssa8$i$i318 + -4 | 0;
  HEAP32[$$lcssa$i$i319 >> 2] = $11515;
  $$3$i$i320 = HEAP32[$11515 >> 2] | 0;
 }
 $11536 = $$3$i$i320 + 52 | 0;
 HEAP16[$$3$i$i320 >> 1] = 1024;
 HEAP16[$$3$i$i320 + 2 >> 1] = 15;
 HEAP8[$$3$i$i320 + 4 >> 0] = 16;
 HEAP8[$$3$i$i320 + 5 >> 0] = 1;
 HEAP32[$$3$i$i320 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i320 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i320 + 16 >> 2] = $11536;
 HEAP32[$$3$i$i320 + 20 >> 2] = 0;
 HEAP32[$$3$i$i320 + 24 >> 2] = 0;
 HEAP8[$$3$i$i320 + 48 >> 0] = 0;
 HEAP32[$30 >> 2] = $$3$i$i320;
 _memcpy($11536 | 0, 4367576, 2048) | 0;
 _memcpy($$3$i$i320 + 2100 | 0, 4369624, 2048) | 0;
 _memcpy($$3$i$i320 + 4148 | 0, 4371672, 2048) | 0;
 _memcpy($$3$i$i320 + 6196 | 0, 4373720, 2048) | 0;
 _memcpy($$3$i$i320 + 8244 | 0, 4375768, 2048) | 0;
 _memcpy($$3$i$i320 + 10292 | 0, 4377816, 2048) | 0;
 _memcpy($$3$i$i320 + 12340 | 0, 4379864, 2048) | 0;
 _memcpy($$3$i$i320 + 14388 | 0, 4381912, 2048) | 0;
 _memcpy($$3$i$i320 + 16436 | 0, 4383960, 2048) | 0;
 _memcpy($$3$i$i320 + 18484 | 0, 4386008, 2048) | 0;
 _memcpy($$3$i$i320 + 20532 | 0, 4388056, 2048) | 0;
 _memcpy($$3$i$i320 + 22580 | 0, 4390104, 2048) | 0;
 _memcpy($$3$i$i320 + 24628 | 0, 4392152, 2048) | 0;
 _memcpy($$3$i$i320 + 26676 | 0, 4394200, 2048) | 0;
 _memcpy($$3$i$i320 + 28724 | 0, 4396248, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $30);
 if ($$3$i$i320 | 0) {
  $11561 = $$3$i$i320 + 5 | 0;
  $11563 = (HEAP8[$11561 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$11561 >> 0] = $11563;
  if (!($11563 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i320);
  HEAP32[$30 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3410 >> 1] = 360;
 HEAP16[$3411 >> 1] = 1023;
 HEAP16[$3412 >> 1] = 374;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 420; else {
  $11567 = HEAP32[915090] | 0;
  if (($11567 | 0) == (HEAP32[915088] | 0)) label = 420; else {
   $$lcssa$i$i332 = 3660360;
   $$lcssa8$i$i331 = $11567;
   label = 421;
  }
 }
 do if ((label | 0) == 420) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11574 = HEAP32[915096] | 0;
   if (($11574 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i332 = 3660384;
    $$lcssa8$i$i331 = $11574;
    label = 421;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11579 = HEAP32[915102] | 0;
   if (($11579 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i332 = 3660408;
    $$lcssa8$i$i331 = $11579;
    label = 421;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11584 = HEAP32[915108] | 0;
   if (($11584 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i332 = 3660432;
    $$lcssa8$i$i331 = $11584;
    label = 421;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11589 = HEAP32[915114] | 0;
   if (($11589 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i332 = 3660456;
    $$lcssa8$i$i331 = $11589;
    label = 421;
    break;
   }
  }
  $$3$i$i333 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 421) {
  $11572 = $$lcssa8$i$i331 + -4 | 0;
  HEAP32[$$lcssa$i$i332 >> 2] = $11572;
  $$3$i$i333 = HEAP32[$11572 >> 2] | 0;
 }
 $11593 = $$3$i$i333 + 52 | 0;
 HEAP16[$$3$i$i333 >> 1] = 1024;
 HEAP16[$$3$i$i333 + 2 >> 1] = 15;
 HEAP8[$$3$i$i333 + 4 >> 0] = 16;
 HEAP8[$$3$i$i333 + 5 >> 0] = 1;
 HEAP32[$$3$i$i333 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i333 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i333 + 16 >> 2] = $11593;
 HEAP32[$$3$i$i333 + 20 >> 2] = 0;
 HEAP32[$$3$i$i333 + 24 >> 2] = 0;
 HEAP8[$$3$i$i333 + 48 >> 0] = 0;
 HEAP32[$31 >> 2] = $$3$i$i333;
 _memcpy($11593 | 0, 4398296, 2048) | 0;
 _memcpy($$3$i$i333 + 2100 | 0, 4400344, 2048) | 0;
 _memcpy($$3$i$i333 + 4148 | 0, 4402392, 2048) | 0;
 _memcpy($$3$i$i333 + 6196 | 0, 4404440, 2048) | 0;
 _memcpy($$3$i$i333 + 8244 | 0, 4406488, 2048) | 0;
 _memcpy($$3$i$i333 + 10292 | 0, 4408536, 2048) | 0;
 _memcpy($$3$i$i333 + 12340 | 0, 4410584, 2048) | 0;
 _memcpy($$3$i$i333 + 14388 | 0, 4412632, 2048) | 0;
 _memcpy($$3$i$i333 + 16436 | 0, 4414680, 2048) | 0;
 _memcpy($$3$i$i333 + 18484 | 0, 4416728, 2048) | 0;
 _memcpy($$3$i$i333 + 20532 | 0, 4418776, 2048) | 0;
 _memcpy($$3$i$i333 + 22580 | 0, 4420824, 2048) | 0;
 _memcpy($$3$i$i333 + 24628 | 0, 4422872, 2048) | 0;
 _memcpy($$3$i$i333 + 26676 | 0, 4424920, 2048) | 0;
 _memcpy($$3$i$i333 + 28724 | 0, 4426968, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $31);
 if ($$3$i$i333 | 0) {
  $11618 = $$3$i$i333 + 5 | 0;
  $11620 = (HEAP8[$11618 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$11618 >> 0] = $11620;
  if (!($11620 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i333);
  HEAP32[$31 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3413 >> 1] = 375;
 HEAP16[$3414 >> 1] = 1023;
 HEAP16[$3415 >> 1] = 389;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 436; else {
  $11624 = HEAP32[915090] | 0;
  if (($11624 | 0) == (HEAP32[915088] | 0)) label = 436; else {
   $$lcssa$i$i345 = 3660360;
   $$lcssa8$i$i344 = $11624;
   label = 437;
  }
 }
 do if ((label | 0) == 436) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11631 = HEAP32[915096] | 0;
   if (($11631 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i345 = 3660384;
    $$lcssa8$i$i344 = $11631;
    label = 437;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11636 = HEAP32[915102] | 0;
   if (($11636 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i345 = 3660408;
    $$lcssa8$i$i344 = $11636;
    label = 437;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11641 = HEAP32[915108] | 0;
   if (($11641 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i345 = 3660432;
    $$lcssa8$i$i344 = $11641;
    label = 437;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11646 = HEAP32[915114] | 0;
   if (($11646 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i345 = 3660456;
    $$lcssa8$i$i344 = $11646;
    label = 437;
    break;
   }
  }
  $$3$i$i346 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 437) {
  $11629 = $$lcssa8$i$i344 + -4 | 0;
  HEAP32[$$lcssa$i$i345 >> 2] = $11629;
  $$3$i$i346 = HEAP32[$11629 >> 2] | 0;
 }
 $11650 = $$3$i$i346 + 52 | 0;
 HEAP16[$$3$i$i346 >> 1] = 1024;
 HEAP16[$$3$i$i346 + 2 >> 1] = 15;
 HEAP8[$$3$i$i346 + 4 >> 0] = 16;
 HEAP8[$$3$i$i346 + 5 >> 0] = 1;
 HEAP32[$$3$i$i346 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i346 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i346 + 16 >> 2] = $11650;
 HEAP32[$$3$i$i346 + 20 >> 2] = 0;
 HEAP32[$$3$i$i346 + 24 >> 2] = 0;
 HEAP8[$$3$i$i346 + 48 >> 0] = 0;
 HEAP32[$32 >> 2] = $$3$i$i346;
 _memcpy($11650 | 0, 4429016, 2048) | 0;
 _memcpy($$3$i$i346 + 2100 | 0, 4431064, 2048) | 0;
 _memcpy($$3$i$i346 + 4148 | 0, 4433112, 2048) | 0;
 _memcpy($$3$i$i346 + 6196 | 0, 4435160, 2048) | 0;
 _memcpy($$3$i$i346 + 8244 | 0, 4437208, 2048) | 0;
 _memcpy($$3$i$i346 + 10292 | 0, 4439256, 2048) | 0;
 _memcpy($$3$i$i346 + 12340 | 0, 4441304, 2048) | 0;
 _memcpy($$3$i$i346 + 14388 | 0, 4443352, 2048) | 0;
 _memcpy($$3$i$i346 + 16436 | 0, 4445400, 2048) | 0;
 _memcpy($$3$i$i346 + 18484 | 0, 4447448, 2048) | 0;
 _memcpy($$3$i$i346 + 20532 | 0, 4449496, 2048) | 0;
 _memcpy($$3$i$i346 + 22580 | 0, 4451544, 2048) | 0;
 _memcpy($$3$i$i346 + 24628 | 0, 4453592, 2048) | 0;
 _memcpy($$3$i$i346 + 26676 | 0, 4455640, 2048) | 0;
 _memcpy($$3$i$i346 + 28724 | 0, 4457688, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $32);
 if ($$3$i$i346 | 0) {
  $11675 = $$3$i$i346 + 5 | 0;
  $11677 = (HEAP8[$11675 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$11675 >> 0] = $11677;
  if (!($11677 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i346);
  HEAP32[$32 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3416 >> 1] = 390;
 HEAP16[$3417 >> 1] = 1023;
 HEAP16[$3418 >> 1] = 404;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 452; else {
  $11681 = HEAP32[915090] | 0;
  if (($11681 | 0) == (HEAP32[915088] | 0)) label = 452; else {
   $$lcssa$i$i358 = 3660360;
   $$lcssa8$i$i357 = $11681;
   label = 453;
  }
 }
 do if ((label | 0) == 452) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11688 = HEAP32[915096] | 0;
   if (($11688 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i358 = 3660384;
    $$lcssa8$i$i357 = $11688;
    label = 453;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11693 = HEAP32[915102] | 0;
   if (($11693 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i358 = 3660408;
    $$lcssa8$i$i357 = $11693;
    label = 453;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11698 = HEAP32[915108] | 0;
   if (($11698 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i358 = 3660432;
    $$lcssa8$i$i357 = $11698;
    label = 453;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11703 = HEAP32[915114] | 0;
   if (($11703 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i358 = 3660456;
    $$lcssa8$i$i357 = $11703;
    label = 453;
    break;
   }
  }
  $$3$i$i359 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 453) {
  $11686 = $$lcssa8$i$i357 + -4 | 0;
  HEAP32[$$lcssa$i$i358 >> 2] = $11686;
  $$3$i$i359 = HEAP32[$11686 >> 2] | 0;
 }
 $11707 = $$3$i$i359 + 52 | 0;
 HEAP16[$$3$i$i359 >> 1] = 1024;
 HEAP16[$$3$i$i359 + 2 >> 1] = 15;
 HEAP8[$$3$i$i359 + 4 >> 0] = 16;
 HEAP8[$$3$i$i359 + 5 >> 0] = 1;
 HEAP32[$$3$i$i359 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i359 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i359 + 16 >> 2] = $11707;
 HEAP32[$$3$i$i359 + 20 >> 2] = 0;
 HEAP32[$$3$i$i359 + 24 >> 2] = 0;
 HEAP8[$$3$i$i359 + 48 >> 0] = 0;
 HEAP32[$33 >> 2] = $$3$i$i359;
 _memcpy($11707 | 0, 4459736, 2048) | 0;
 _memcpy($$3$i$i359 + 2100 | 0, 4461784, 2048) | 0;
 _memcpy($$3$i$i359 + 4148 | 0, 4463832, 2048) | 0;
 _memcpy($$3$i$i359 + 6196 | 0, 4465880, 2048) | 0;
 _memcpy($$3$i$i359 + 8244 | 0, 4467928, 2048) | 0;
 _memcpy($$3$i$i359 + 10292 | 0, 4469976, 2048) | 0;
 _memcpy($$3$i$i359 + 12340 | 0, 4472024, 2048) | 0;
 _memcpy($$3$i$i359 + 14388 | 0, 4474072, 2048) | 0;
 _memcpy($$3$i$i359 + 16436 | 0, 4476120, 2048) | 0;
 _memcpy($$3$i$i359 + 18484 | 0, 4478168, 2048) | 0;
 _memcpy($$3$i$i359 + 20532 | 0, 4480216, 2048) | 0;
 _memcpy($$3$i$i359 + 22580 | 0, 4482264, 2048) | 0;
 _memcpy($$3$i$i359 + 24628 | 0, 4484312, 2048) | 0;
 _memcpy($$3$i$i359 + 26676 | 0, 4486360, 2048) | 0;
 _memcpy($$3$i$i359 + 28724 | 0, 4488408, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $33);
 if ($$3$i$i359 | 0) {
  $11732 = $$3$i$i359 + 5 | 0;
  $11734 = (HEAP8[$11732 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$11732 >> 0] = $11734;
  if (!($11734 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i359);
  HEAP32[$33 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3419 >> 1] = 405;
 HEAP16[$3420 >> 1] = 1023;
 HEAP16[$3421 >> 1] = 419;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 468; else {
  $11738 = HEAP32[915090] | 0;
  if (($11738 | 0) == (HEAP32[915088] | 0)) label = 468; else {
   $$lcssa$i$i371 = 3660360;
   $$lcssa8$i$i370 = $11738;
   label = 469;
  }
 }
 do if ((label | 0) == 468) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11745 = HEAP32[915096] | 0;
   if (($11745 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i371 = 3660384;
    $$lcssa8$i$i370 = $11745;
    label = 469;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11750 = HEAP32[915102] | 0;
   if (($11750 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i371 = 3660408;
    $$lcssa8$i$i370 = $11750;
    label = 469;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11755 = HEAP32[915108] | 0;
   if (($11755 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i371 = 3660432;
    $$lcssa8$i$i370 = $11755;
    label = 469;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11760 = HEAP32[915114] | 0;
   if (($11760 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i371 = 3660456;
    $$lcssa8$i$i370 = $11760;
    label = 469;
    break;
   }
  }
  $$3$i$i372 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 469) {
  $11743 = $$lcssa8$i$i370 + -4 | 0;
  HEAP32[$$lcssa$i$i371 >> 2] = $11743;
  $$3$i$i372 = HEAP32[$11743 >> 2] | 0;
 }
 $11764 = $$3$i$i372 + 52 | 0;
 HEAP16[$$3$i$i372 >> 1] = 1024;
 HEAP16[$$3$i$i372 + 2 >> 1] = 15;
 HEAP8[$$3$i$i372 + 4 >> 0] = 16;
 HEAP8[$$3$i$i372 + 5 >> 0] = 1;
 HEAP32[$$3$i$i372 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i372 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i372 + 16 >> 2] = $11764;
 HEAP32[$$3$i$i372 + 20 >> 2] = 0;
 HEAP32[$$3$i$i372 + 24 >> 2] = 0;
 HEAP8[$$3$i$i372 + 48 >> 0] = 0;
 HEAP32[$34 >> 2] = $$3$i$i372;
 _memcpy($11764 | 0, 4490456, 2048) | 0;
 _memcpy($$3$i$i372 + 2100 | 0, 4492504, 2048) | 0;
 _memcpy($$3$i$i372 + 4148 | 0, 4494552, 2048) | 0;
 _memcpy($$3$i$i372 + 6196 | 0, 4496600, 2048) | 0;
 _memcpy($$3$i$i372 + 8244 | 0, 4498648, 2048) | 0;
 _memcpy($$3$i$i372 + 10292 | 0, 4500696, 2048) | 0;
 _memcpy($$3$i$i372 + 12340 | 0, 4502744, 2048) | 0;
 _memcpy($$3$i$i372 + 14388 | 0, 4504792, 2048) | 0;
 _memcpy($$3$i$i372 + 16436 | 0, 4506840, 2048) | 0;
 _memcpy($$3$i$i372 + 18484 | 0, 4508888, 2048) | 0;
 _memcpy($$3$i$i372 + 20532 | 0, 4510936, 2048) | 0;
 _memcpy($$3$i$i372 + 22580 | 0, 4512984, 2048) | 0;
 _memcpy($$3$i$i372 + 24628 | 0, 4515032, 2048) | 0;
 _memcpy($$3$i$i372 + 26676 | 0, 4517080, 2048) | 0;
 _memcpy($$3$i$i372 + 28724 | 0, 4519128, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $34);
 if ($$3$i$i372 | 0) {
  $11789 = $$3$i$i372 + 5 | 0;
  $11791 = (HEAP8[$11789 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$11789 >> 0] = $11791;
  if (!($11791 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i372);
  HEAP32[$34 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3422 >> 1] = 420;
 HEAP16[$3423 >> 1] = 1023;
 HEAP16[$3424 >> 1] = 434;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 484; else {
  $11795 = HEAP32[915090] | 0;
  if (($11795 | 0) == (HEAP32[915088] | 0)) label = 484; else {
   $$lcssa$i$i384 = 3660360;
   $$lcssa8$i$i383 = $11795;
   label = 485;
  }
 }
 do if ((label | 0) == 484) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11802 = HEAP32[915096] | 0;
   if (($11802 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i384 = 3660384;
    $$lcssa8$i$i383 = $11802;
    label = 485;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11807 = HEAP32[915102] | 0;
   if (($11807 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i384 = 3660408;
    $$lcssa8$i$i383 = $11807;
    label = 485;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11812 = HEAP32[915108] | 0;
   if (($11812 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i384 = 3660432;
    $$lcssa8$i$i383 = $11812;
    label = 485;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11817 = HEAP32[915114] | 0;
   if (($11817 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i384 = 3660456;
    $$lcssa8$i$i383 = $11817;
    label = 485;
    break;
   }
  }
  $$3$i$i385 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 485) {
  $11800 = $$lcssa8$i$i383 + -4 | 0;
  HEAP32[$$lcssa$i$i384 >> 2] = $11800;
  $$3$i$i385 = HEAP32[$11800 >> 2] | 0;
 }
 $11821 = $$3$i$i385 + 52 | 0;
 HEAP16[$$3$i$i385 >> 1] = 1024;
 HEAP16[$$3$i$i385 + 2 >> 1] = 15;
 HEAP8[$$3$i$i385 + 4 >> 0] = 16;
 HEAP8[$$3$i$i385 + 5 >> 0] = 1;
 HEAP32[$$3$i$i385 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i385 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i385 + 16 >> 2] = $11821;
 HEAP32[$$3$i$i385 + 20 >> 2] = 0;
 HEAP32[$$3$i$i385 + 24 >> 2] = 0;
 HEAP8[$$3$i$i385 + 48 >> 0] = 0;
 HEAP32[$35 >> 2] = $$3$i$i385;
 _memcpy($11821 | 0, 4521176, 2048) | 0;
 _memcpy($$3$i$i385 + 2100 | 0, 4523224, 2048) | 0;
 _memcpy($$3$i$i385 + 4148 | 0, 4525272, 2048) | 0;
 _memcpy($$3$i$i385 + 6196 | 0, 4527320, 2048) | 0;
 _memcpy($$3$i$i385 + 8244 | 0, 4529368, 2048) | 0;
 _memcpy($$3$i$i385 + 10292 | 0, 4531416, 2048) | 0;
 _memcpy($$3$i$i385 + 12340 | 0, 4533464, 2048) | 0;
 _memcpy($$3$i$i385 + 14388 | 0, 4535512, 2048) | 0;
 _memcpy($$3$i$i385 + 16436 | 0, 4537560, 2048) | 0;
 _memcpy($$3$i$i385 + 18484 | 0, 4539608, 2048) | 0;
 _memcpy($$3$i$i385 + 20532 | 0, 4541656, 2048) | 0;
 _memcpy($$3$i$i385 + 22580 | 0, 4543704, 2048) | 0;
 _memcpy($$3$i$i385 + 24628 | 0, 4545752, 2048) | 0;
 _memcpy($$3$i$i385 + 26676 | 0, 4547800, 2048) | 0;
 _memcpy($$3$i$i385 + 28724 | 0, 4549848, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $35);
 if ($$3$i$i385 | 0) {
  $11846 = $$3$i$i385 + 5 | 0;
  $11848 = (HEAP8[$11846 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$11846 >> 0] = $11848;
  if (!($11848 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i385);
  HEAP32[$35 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3425 >> 1] = 435;
 HEAP16[$3426 >> 1] = 1023;
 HEAP16[$3427 >> 1] = 449;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 500; else {
  $11852 = HEAP32[915090] | 0;
  if (($11852 | 0) == (HEAP32[915088] | 0)) label = 500; else {
   $$lcssa$i$i397 = 3660360;
   $$lcssa8$i$i396 = $11852;
   label = 501;
  }
 }
 do if ((label | 0) == 500) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11859 = HEAP32[915096] | 0;
   if (($11859 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i397 = 3660384;
    $$lcssa8$i$i396 = $11859;
    label = 501;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11864 = HEAP32[915102] | 0;
   if (($11864 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i397 = 3660408;
    $$lcssa8$i$i396 = $11864;
    label = 501;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11869 = HEAP32[915108] | 0;
   if (($11869 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i397 = 3660432;
    $$lcssa8$i$i396 = $11869;
    label = 501;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11874 = HEAP32[915114] | 0;
   if (($11874 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i397 = 3660456;
    $$lcssa8$i$i396 = $11874;
    label = 501;
    break;
   }
  }
  $$3$i$i398 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 501) {
  $11857 = $$lcssa8$i$i396 + -4 | 0;
  HEAP32[$$lcssa$i$i397 >> 2] = $11857;
  $$3$i$i398 = HEAP32[$11857 >> 2] | 0;
 }
 $11878 = $$3$i$i398 + 52 | 0;
 HEAP16[$$3$i$i398 >> 1] = 1024;
 HEAP16[$$3$i$i398 + 2 >> 1] = 15;
 HEAP8[$$3$i$i398 + 4 >> 0] = 16;
 HEAP8[$$3$i$i398 + 5 >> 0] = 1;
 HEAP32[$$3$i$i398 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i398 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i398 + 16 >> 2] = $11878;
 HEAP32[$$3$i$i398 + 20 >> 2] = 0;
 HEAP32[$$3$i$i398 + 24 >> 2] = 0;
 HEAP8[$$3$i$i398 + 48 >> 0] = 0;
 HEAP32[$36 >> 2] = $$3$i$i398;
 _memcpy($11878 | 0, 4551896, 2048) | 0;
 _memcpy($$3$i$i398 + 2100 | 0, 4553944, 2048) | 0;
 _memcpy($$3$i$i398 + 4148 | 0, 4555992, 2048) | 0;
 _memcpy($$3$i$i398 + 6196 | 0, 4558040, 2048) | 0;
 _memcpy($$3$i$i398 + 8244 | 0, 4560088, 2048) | 0;
 _memcpy($$3$i$i398 + 10292 | 0, 4562136, 2048) | 0;
 _memcpy($$3$i$i398 + 12340 | 0, 4564184, 2048) | 0;
 _memcpy($$3$i$i398 + 14388 | 0, 4566232, 2048) | 0;
 _memcpy($$3$i$i398 + 16436 | 0, 4568280, 2048) | 0;
 _memcpy($$3$i$i398 + 18484 | 0, 4570328, 2048) | 0;
 _memcpy($$3$i$i398 + 20532 | 0, 4572376, 2048) | 0;
 _memcpy($$3$i$i398 + 22580 | 0, 4574424, 2048) | 0;
 _memcpy($$3$i$i398 + 24628 | 0, 4576472, 2048) | 0;
 _memcpy($$3$i$i398 + 26676 | 0, 4578520, 2048) | 0;
 _memcpy($$3$i$i398 + 28724 | 0, 4580568, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $36);
 if ($$3$i$i398 | 0) {
  $11903 = $$3$i$i398 + 5 | 0;
  $11905 = (HEAP8[$11903 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$11903 >> 0] = $11905;
  if (!($11905 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i398);
  HEAP32[$36 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3428 >> 1] = 450;
 HEAP16[$3429 >> 1] = 1023;
 HEAP16[$3430 >> 1] = 464;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 516; else {
  $11909 = HEAP32[915090] | 0;
  if (($11909 | 0) == (HEAP32[915088] | 0)) label = 516; else {
   $$lcssa$i$i410 = 3660360;
   $$lcssa8$i$i409 = $11909;
   label = 517;
  }
 }
 do if ((label | 0) == 516) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11916 = HEAP32[915096] | 0;
   if (($11916 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i410 = 3660384;
    $$lcssa8$i$i409 = $11916;
    label = 517;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11921 = HEAP32[915102] | 0;
   if (($11921 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i410 = 3660408;
    $$lcssa8$i$i409 = $11921;
    label = 517;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11926 = HEAP32[915108] | 0;
   if (($11926 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i410 = 3660432;
    $$lcssa8$i$i409 = $11926;
    label = 517;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11931 = HEAP32[915114] | 0;
   if (($11931 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i410 = 3660456;
    $$lcssa8$i$i409 = $11931;
    label = 517;
    break;
   }
  }
  $$3$i$i411 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 517) {
  $11914 = $$lcssa8$i$i409 + -4 | 0;
  HEAP32[$$lcssa$i$i410 >> 2] = $11914;
  $$3$i$i411 = HEAP32[$11914 >> 2] | 0;
 }
 $11935 = $$3$i$i411 + 52 | 0;
 HEAP16[$$3$i$i411 >> 1] = 1024;
 HEAP16[$$3$i$i411 + 2 >> 1] = 15;
 HEAP8[$$3$i$i411 + 4 >> 0] = 16;
 HEAP8[$$3$i$i411 + 5 >> 0] = 1;
 HEAP32[$$3$i$i411 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i411 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i411 + 16 >> 2] = $11935;
 HEAP32[$$3$i$i411 + 20 >> 2] = 0;
 HEAP32[$$3$i$i411 + 24 >> 2] = 0;
 HEAP8[$$3$i$i411 + 48 >> 0] = 0;
 HEAP32[$37 >> 2] = $$3$i$i411;
 _memcpy($11935 | 0, 4582616, 2048) | 0;
 _memcpy($$3$i$i411 + 2100 | 0, 4584664, 2048) | 0;
 _memcpy($$3$i$i411 + 4148 | 0, 4586712, 2048) | 0;
 _memcpy($$3$i$i411 + 6196 | 0, 4588760, 2048) | 0;
 _memcpy($$3$i$i411 + 8244 | 0, 4590808, 2048) | 0;
 _memcpy($$3$i$i411 + 10292 | 0, 4592856, 2048) | 0;
 _memcpy($$3$i$i411 + 12340 | 0, 4594904, 2048) | 0;
 _memcpy($$3$i$i411 + 14388 | 0, 4596952, 2048) | 0;
 _memcpy($$3$i$i411 + 16436 | 0, 4599e3, 2048) | 0;
 _memcpy($$3$i$i411 + 18484 | 0, 4601048, 2048) | 0;
 _memcpy($$3$i$i411 + 20532 | 0, 4603096, 2048) | 0;
 _memcpy($$3$i$i411 + 22580 | 0, 4605144, 2048) | 0;
 _memcpy($$3$i$i411 + 24628 | 0, 4607192, 2048) | 0;
 _memcpy($$3$i$i411 + 26676 | 0, 4609240, 2048) | 0;
 _memcpy($$3$i$i411 + 28724 | 0, 4611288, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $37);
 if ($$3$i$i411 | 0) {
  $11960 = $$3$i$i411 + 5 | 0;
  $11962 = (HEAP8[$11960 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$11960 >> 0] = $11962;
  if (!($11962 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i411);
  HEAP32[$37 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3431 >> 1] = 465;
 HEAP16[$3432 >> 1] = 1023;
 HEAP16[$3433 >> 1] = 479;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 532; else {
  $11966 = HEAP32[915090] | 0;
  if (($11966 | 0) == (HEAP32[915088] | 0)) label = 532; else {
   $$lcssa$i$i423 = 3660360;
   $$lcssa8$i$i422 = $11966;
   label = 533;
  }
 }
 do if ((label | 0) == 532) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $11973 = HEAP32[915096] | 0;
   if (($11973 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i423 = 3660384;
    $$lcssa8$i$i422 = $11973;
    label = 533;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $11978 = HEAP32[915102] | 0;
   if (($11978 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i423 = 3660408;
    $$lcssa8$i$i422 = $11978;
    label = 533;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $11983 = HEAP32[915108] | 0;
   if (($11983 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i423 = 3660432;
    $$lcssa8$i$i422 = $11983;
    label = 533;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $11988 = HEAP32[915114] | 0;
   if (($11988 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i423 = 3660456;
    $$lcssa8$i$i422 = $11988;
    label = 533;
    break;
   }
  }
  $$3$i$i424 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 533) {
  $11971 = $$lcssa8$i$i422 + -4 | 0;
  HEAP32[$$lcssa$i$i423 >> 2] = $11971;
  $$3$i$i424 = HEAP32[$11971 >> 2] | 0;
 }
 $11992 = $$3$i$i424 + 52 | 0;
 HEAP16[$$3$i$i424 >> 1] = 1024;
 HEAP16[$$3$i$i424 + 2 >> 1] = 15;
 HEAP8[$$3$i$i424 + 4 >> 0] = 16;
 HEAP8[$$3$i$i424 + 5 >> 0] = 1;
 HEAP32[$$3$i$i424 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i424 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i424 + 16 >> 2] = $11992;
 HEAP32[$$3$i$i424 + 20 >> 2] = 0;
 HEAP32[$$3$i$i424 + 24 >> 2] = 0;
 HEAP8[$$3$i$i424 + 48 >> 0] = 0;
 HEAP32[$38 >> 2] = $$3$i$i424;
 _memcpy($11992 | 0, 4613336, 2048) | 0;
 _memcpy($$3$i$i424 + 2100 | 0, 4615384, 2048) | 0;
 _memcpy($$3$i$i424 + 4148 | 0, 4617432, 2048) | 0;
 _memcpy($$3$i$i424 + 6196 | 0, 4619480, 2048) | 0;
 _memcpy($$3$i$i424 + 8244 | 0, 4621528, 2048) | 0;
 _memcpy($$3$i$i424 + 10292 | 0, 4623576, 2048) | 0;
 _memcpy($$3$i$i424 + 12340 | 0, 4625624, 2048) | 0;
 _memcpy($$3$i$i424 + 14388 | 0, 4627672, 2048) | 0;
 _memcpy($$3$i$i424 + 16436 | 0, 4629720, 2048) | 0;
 _memcpy($$3$i$i424 + 18484 | 0, 4631768, 2048) | 0;
 _memcpy($$3$i$i424 + 20532 | 0, 4633816, 2048) | 0;
 _memcpy($$3$i$i424 + 22580 | 0, 4635864, 2048) | 0;
 _memcpy($$3$i$i424 + 24628 | 0, 4637912, 2048) | 0;
 _memcpy($$3$i$i424 + 26676 | 0, 4639960, 2048) | 0;
 _memcpy($$3$i$i424 + 28724 | 0, 4642008, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $38);
 if ($$3$i$i424 | 0) {
  $12017 = $$3$i$i424 + 5 | 0;
  $12019 = (HEAP8[$12017 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12017 >> 0] = $12019;
  if (!($12019 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i424);
  HEAP32[$38 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3434 >> 1] = 480;
 HEAP16[$3435 >> 1] = 1023;
 HEAP16[$3436 >> 1] = 494;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 548; else {
  $12023 = HEAP32[915090] | 0;
  if (($12023 | 0) == (HEAP32[915088] | 0)) label = 548; else {
   $$lcssa$i$i436 = 3660360;
   $$lcssa8$i$i435 = $12023;
   label = 549;
  }
 }
 do if ((label | 0) == 548) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12030 = HEAP32[915096] | 0;
   if (($12030 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i436 = 3660384;
    $$lcssa8$i$i435 = $12030;
    label = 549;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $12035 = HEAP32[915102] | 0;
   if (($12035 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i436 = 3660408;
    $$lcssa8$i$i435 = $12035;
    label = 549;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $12040 = HEAP32[915108] | 0;
   if (($12040 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i436 = 3660432;
    $$lcssa8$i$i435 = $12040;
    label = 549;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $12045 = HEAP32[915114] | 0;
   if (($12045 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i436 = 3660456;
    $$lcssa8$i$i435 = $12045;
    label = 549;
    break;
   }
  }
  $$3$i$i437 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 549) {
  $12028 = $$lcssa8$i$i435 + -4 | 0;
  HEAP32[$$lcssa$i$i436 >> 2] = $12028;
  $$3$i$i437 = HEAP32[$12028 >> 2] | 0;
 }
 $12049 = $$3$i$i437 + 52 | 0;
 HEAP16[$$3$i$i437 >> 1] = 1024;
 HEAP16[$$3$i$i437 + 2 >> 1] = 15;
 HEAP8[$$3$i$i437 + 4 >> 0] = 16;
 HEAP8[$$3$i$i437 + 5 >> 0] = 1;
 HEAP32[$$3$i$i437 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i437 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i437 + 16 >> 2] = $12049;
 HEAP32[$$3$i$i437 + 20 >> 2] = 0;
 HEAP32[$$3$i$i437 + 24 >> 2] = 0;
 HEAP8[$$3$i$i437 + 48 >> 0] = 0;
 HEAP32[$39 >> 2] = $$3$i$i437;
 _memcpy($12049 | 0, 4644056, 2048) | 0;
 _memcpy($$3$i$i437 + 2100 | 0, 4646104, 2048) | 0;
 _memcpy($$3$i$i437 + 4148 | 0, 4648152, 2048) | 0;
 _memcpy($$3$i$i437 + 6196 | 0, 4650200, 2048) | 0;
 _memcpy($$3$i$i437 + 8244 | 0, 4652248, 2048) | 0;
 _memcpy($$3$i$i437 + 10292 | 0, 4654296, 2048) | 0;
 _memcpy($$3$i$i437 + 12340 | 0, 4656344, 2048) | 0;
 _memcpy($$3$i$i437 + 14388 | 0, 4658392, 2048) | 0;
 _memcpy($$3$i$i437 + 16436 | 0, 4660440, 2048) | 0;
 _memcpy($$3$i$i437 + 18484 | 0, 4662488, 2048) | 0;
 _memcpy($$3$i$i437 + 20532 | 0, 4664536, 2048) | 0;
 _memcpy($$3$i$i437 + 22580 | 0, 4666584, 2048) | 0;
 _memcpy($$3$i$i437 + 24628 | 0, 4668632, 2048) | 0;
 _memcpy($$3$i$i437 + 26676 | 0, 4670680, 2048) | 0;
 _memcpy($$3$i$i437 + 28724 | 0, 4672728, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $39);
 if ($$3$i$i437 | 0) {
  $12074 = $$3$i$i437 + 5 | 0;
  $12076 = (HEAP8[$12074 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12074 >> 0] = $12076;
  if (!($12076 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i437);
  HEAP32[$39 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3437 >> 1] = 495;
 HEAP16[$3438 >> 1] = 1023;
 HEAP16[$3439 >> 1] = 509;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 564; else {
  $12080 = HEAP32[915090] | 0;
  if (($12080 | 0) == (HEAP32[915088] | 0)) label = 564; else {
   $$lcssa$i$i449 = 3660360;
   $$lcssa8$i$i448 = $12080;
   label = 565;
  }
 }
 do if ((label | 0) == 564) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12087 = HEAP32[915096] | 0;
   if (($12087 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i449 = 3660384;
    $$lcssa8$i$i448 = $12087;
    label = 565;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $12092 = HEAP32[915102] | 0;
   if (($12092 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i449 = 3660408;
    $$lcssa8$i$i448 = $12092;
    label = 565;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $12097 = HEAP32[915108] | 0;
   if (($12097 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i449 = 3660432;
    $$lcssa8$i$i448 = $12097;
    label = 565;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $12102 = HEAP32[915114] | 0;
   if (($12102 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i449 = 3660456;
    $$lcssa8$i$i448 = $12102;
    label = 565;
    break;
   }
  }
  $$3$i$i450 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 565) {
  $12085 = $$lcssa8$i$i448 + -4 | 0;
  HEAP32[$$lcssa$i$i449 >> 2] = $12085;
  $$3$i$i450 = HEAP32[$12085 >> 2] | 0;
 }
 $12106 = $$3$i$i450 + 52 | 0;
 HEAP16[$$3$i$i450 >> 1] = 1024;
 HEAP16[$$3$i$i450 + 2 >> 1] = 15;
 HEAP8[$$3$i$i450 + 4 >> 0] = 16;
 HEAP8[$$3$i$i450 + 5 >> 0] = 1;
 HEAP32[$$3$i$i450 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i450 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i450 + 16 >> 2] = $12106;
 HEAP32[$$3$i$i450 + 20 >> 2] = 0;
 HEAP32[$$3$i$i450 + 24 >> 2] = 0;
 HEAP8[$$3$i$i450 + 48 >> 0] = 0;
 HEAP32[$40 >> 2] = $$3$i$i450;
 _memcpy($12106 | 0, 4674776, 2048) | 0;
 _memcpy($$3$i$i450 + 2100 | 0, 4676824, 2048) | 0;
 _memcpy($$3$i$i450 + 4148 | 0, 4678872, 2048) | 0;
 _memcpy($$3$i$i450 + 6196 | 0, 4680920, 2048) | 0;
 _memcpy($$3$i$i450 + 8244 | 0, 4682968, 2048) | 0;
 _memcpy($$3$i$i450 + 10292 | 0, 4685016, 2048) | 0;
 _memcpy($$3$i$i450 + 12340 | 0, 4687064, 2048) | 0;
 _memcpy($$3$i$i450 + 14388 | 0, 4689112, 2048) | 0;
 _memcpy($$3$i$i450 + 16436 | 0, 4691160, 2048) | 0;
 _memcpy($$3$i$i450 + 18484 | 0, 4693208, 2048) | 0;
 _memcpy($$3$i$i450 + 20532 | 0, 4695256, 2048) | 0;
 _memcpy($$3$i$i450 + 22580 | 0, 4697304, 2048) | 0;
 _memcpy($$3$i$i450 + 24628 | 0, 4699352, 2048) | 0;
 _memcpy($$3$i$i450 + 26676 | 0, 4701400, 2048) | 0;
 _memcpy($$3$i$i450 + 28724 | 0, 4703448, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $40);
 if ($$3$i$i450 | 0) {
  $12131 = $$3$i$i450 + 5 | 0;
  $12133 = (HEAP8[$12131 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12131 >> 0] = $12133;
  if (!($12133 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i450);
  HEAP32[$40 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3440 >> 1] = 510;
 HEAP16[$3441 >> 1] = 1023;
 HEAP16[$3442 >> 1] = 524;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 580; else {
  $12137 = HEAP32[915090] | 0;
  if (($12137 | 0) == (HEAP32[915088] | 0)) label = 580; else {
   $$lcssa$i$i462 = 3660360;
   $$lcssa8$i$i461 = $12137;
   label = 581;
  }
 }
 do if ((label | 0) == 580) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12144 = HEAP32[915096] | 0;
   if (($12144 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i462 = 3660384;
    $$lcssa8$i$i461 = $12144;
    label = 581;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $12149 = HEAP32[915102] | 0;
   if (($12149 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i462 = 3660408;
    $$lcssa8$i$i461 = $12149;
    label = 581;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $12154 = HEAP32[915108] | 0;
   if (($12154 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i462 = 3660432;
    $$lcssa8$i$i461 = $12154;
    label = 581;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $12159 = HEAP32[915114] | 0;
   if (($12159 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i462 = 3660456;
    $$lcssa8$i$i461 = $12159;
    label = 581;
    break;
   }
  }
  $$3$i$i463 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 581) {
  $12142 = $$lcssa8$i$i461 + -4 | 0;
  HEAP32[$$lcssa$i$i462 >> 2] = $12142;
  $$3$i$i463 = HEAP32[$12142 >> 2] | 0;
 }
 $12163 = $$3$i$i463 + 52 | 0;
 HEAP16[$$3$i$i463 >> 1] = 1024;
 HEAP16[$$3$i$i463 + 2 >> 1] = 15;
 HEAP8[$$3$i$i463 + 4 >> 0] = 16;
 HEAP8[$$3$i$i463 + 5 >> 0] = 1;
 HEAP32[$$3$i$i463 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i463 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i463 + 16 >> 2] = $12163;
 HEAP32[$$3$i$i463 + 20 >> 2] = 0;
 HEAP32[$$3$i$i463 + 24 >> 2] = 0;
 HEAP8[$$3$i$i463 + 48 >> 0] = 0;
 HEAP32[$41 >> 2] = $$3$i$i463;
 _memcpy($12163 | 0, 4705496, 2048) | 0;
 _memcpy($$3$i$i463 + 2100 | 0, 4707544, 2048) | 0;
 _memcpy($$3$i$i463 + 4148 | 0, 4709592, 2048) | 0;
 _memcpy($$3$i$i463 + 6196 | 0, 4711640, 2048) | 0;
 _memcpy($$3$i$i463 + 8244 | 0, 4713688, 2048) | 0;
 _memcpy($$3$i$i463 + 10292 | 0, 4715736, 2048) | 0;
 _memcpy($$3$i$i463 + 12340 | 0, 4717784, 2048) | 0;
 _memcpy($$3$i$i463 + 14388 | 0, 4719832, 2048) | 0;
 _memcpy($$3$i$i463 + 16436 | 0, 4721880, 2048) | 0;
 _memcpy($$3$i$i463 + 18484 | 0, 4723928, 2048) | 0;
 _memcpy($$3$i$i463 + 20532 | 0, 4725976, 2048) | 0;
 _memcpy($$3$i$i463 + 22580 | 0, 4728024, 2048) | 0;
 _memcpy($$3$i$i463 + 24628 | 0, 4730072, 2048) | 0;
 _memcpy($$3$i$i463 + 26676 | 0, 4732120, 2048) | 0;
 _memcpy($$3$i$i463 + 28724 | 0, 4734168, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $41);
 if ($$3$i$i463 | 0) {
  $12188 = $$3$i$i463 + 5 | 0;
  $12190 = (HEAP8[$12188 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12188 >> 0] = $12190;
  if (!($12190 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i463);
  HEAP32[$41 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3443 >> 1] = 525;
 HEAP16[$3444 >> 1] = 1023;
 HEAP16[$3445 >> 1] = 539;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 596; else {
  $12194 = HEAP32[915090] | 0;
  if (($12194 | 0) == (HEAP32[915088] | 0)) label = 596; else {
   $$lcssa$i$i475 = 3660360;
   $$lcssa8$i$i474 = $12194;
   label = 597;
  }
 }
 do if ((label | 0) == 596) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12201 = HEAP32[915096] | 0;
   if (($12201 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i475 = 3660384;
    $$lcssa8$i$i474 = $12201;
    label = 597;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $12206 = HEAP32[915102] | 0;
   if (($12206 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i475 = 3660408;
    $$lcssa8$i$i474 = $12206;
    label = 597;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $12211 = HEAP32[915108] | 0;
   if (($12211 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i475 = 3660432;
    $$lcssa8$i$i474 = $12211;
    label = 597;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $12216 = HEAP32[915114] | 0;
   if (($12216 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i475 = 3660456;
    $$lcssa8$i$i474 = $12216;
    label = 597;
    break;
   }
  }
  $$3$i$i476 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 597) {
  $12199 = $$lcssa8$i$i474 + -4 | 0;
  HEAP32[$$lcssa$i$i475 >> 2] = $12199;
  $$3$i$i476 = HEAP32[$12199 >> 2] | 0;
 }
 $12220 = $$3$i$i476 + 52 | 0;
 HEAP16[$$3$i$i476 >> 1] = 1024;
 HEAP16[$$3$i$i476 + 2 >> 1] = 15;
 HEAP8[$$3$i$i476 + 4 >> 0] = 16;
 HEAP8[$$3$i$i476 + 5 >> 0] = 1;
 HEAP32[$$3$i$i476 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i476 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i476 + 16 >> 2] = $12220;
 HEAP32[$$3$i$i476 + 20 >> 2] = 0;
 HEAP32[$$3$i$i476 + 24 >> 2] = 0;
 HEAP8[$$3$i$i476 + 48 >> 0] = 0;
 HEAP32[$42 >> 2] = $$3$i$i476;
 _memcpy($12220 | 0, 4736216, 2048) | 0;
 _memcpy($$3$i$i476 + 2100 | 0, 4738264, 2048) | 0;
 _memcpy($$3$i$i476 + 4148 | 0, 4740312, 2048) | 0;
 _memcpy($$3$i$i476 + 6196 | 0, 4742360, 2048) | 0;
 _memcpy($$3$i$i476 + 8244 | 0, 4744408, 2048) | 0;
 _memcpy($$3$i$i476 + 10292 | 0, 4746456, 2048) | 0;
 _memcpy($$3$i$i476 + 12340 | 0, 4748504, 2048) | 0;
 _memcpy($$3$i$i476 + 14388 | 0, 4750552, 2048) | 0;
 _memcpy($$3$i$i476 + 16436 | 0, 4752600, 2048) | 0;
 _memcpy($$3$i$i476 + 18484 | 0, 4754648, 2048) | 0;
 _memcpy($$3$i$i476 + 20532 | 0, 4756696, 2048) | 0;
 _memcpy($$3$i$i476 + 22580 | 0, 4758744, 2048) | 0;
 _memcpy($$3$i$i476 + 24628 | 0, 4760792, 2048) | 0;
 _memcpy($$3$i$i476 + 26676 | 0, 4762840, 2048) | 0;
 _memcpy($$3$i$i476 + 28724 | 0, 4764888, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $42);
 if ($$3$i$i476 | 0) {
  $12245 = $$3$i$i476 + 5 | 0;
  $12247 = (HEAP8[$12245 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12245 >> 0] = $12247;
  if (!($12247 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i476);
  HEAP32[$42 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3446 >> 1] = 540;
 HEAP16[$3447 >> 1] = 1023;
 HEAP16[$3448 >> 1] = 554;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 612; else {
  $12251 = HEAP32[915090] | 0;
  if (($12251 | 0) == (HEAP32[915088] | 0)) label = 612; else {
   $$lcssa$i$i488 = 3660360;
   $$lcssa8$i$i487 = $12251;
   label = 613;
  }
 }
 do if ((label | 0) == 612) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12258 = HEAP32[915096] | 0;
   if (($12258 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i488 = 3660384;
    $$lcssa8$i$i487 = $12258;
    label = 613;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $12263 = HEAP32[915102] | 0;
   if (($12263 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i488 = 3660408;
    $$lcssa8$i$i487 = $12263;
    label = 613;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $12268 = HEAP32[915108] | 0;
   if (($12268 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i488 = 3660432;
    $$lcssa8$i$i487 = $12268;
    label = 613;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $12273 = HEAP32[915114] | 0;
   if (($12273 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i488 = 3660456;
    $$lcssa8$i$i487 = $12273;
    label = 613;
    break;
   }
  }
  $$3$i$i489 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 613) {
  $12256 = $$lcssa8$i$i487 + -4 | 0;
  HEAP32[$$lcssa$i$i488 >> 2] = $12256;
  $$3$i$i489 = HEAP32[$12256 >> 2] | 0;
 }
 $12277 = $$3$i$i489 + 52 | 0;
 HEAP16[$$3$i$i489 >> 1] = 1024;
 HEAP16[$$3$i$i489 + 2 >> 1] = 15;
 HEAP8[$$3$i$i489 + 4 >> 0] = 16;
 HEAP8[$$3$i$i489 + 5 >> 0] = 1;
 HEAP32[$$3$i$i489 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i489 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i489 + 16 >> 2] = $12277;
 HEAP32[$$3$i$i489 + 20 >> 2] = 0;
 HEAP32[$$3$i$i489 + 24 >> 2] = 0;
 HEAP8[$$3$i$i489 + 48 >> 0] = 0;
 HEAP32[$43 >> 2] = $$3$i$i489;
 _memcpy($12277 | 0, 4766936, 2048) | 0;
 _memcpy($$3$i$i489 + 2100 | 0, 4768984, 2048) | 0;
 _memcpy($$3$i$i489 + 4148 | 0, 4771032, 2048) | 0;
 _memcpy($$3$i$i489 + 6196 | 0, 4773080, 2048) | 0;
 _memcpy($$3$i$i489 + 8244 | 0, 4775128, 2048) | 0;
 _memcpy($$3$i$i489 + 10292 | 0, 4777176, 2048) | 0;
 _memcpy($$3$i$i489 + 12340 | 0, 4779224, 2048) | 0;
 _memcpy($$3$i$i489 + 14388 | 0, 4781272, 2048) | 0;
 _memcpy($$3$i$i489 + 16436 | 0, 4783320, 2048) | 0;
 _memcpy($$3$i$i489 + 18484 | 0, 4785368, 2048) | 0;
 _memcpy($$3$i$i489 + 20532 | 0, 4787416, 2048) | 0;
 _memcpy($$3$i$i489 + 22580 | 0, 4789464, 2048) | 0;
 _memcpy($$3$i$i489 + 24628 | 0, 4791512, 2048) | 0;
 _memcpy($$3$i$i489 + 26676 | 0, 4793560, 2048) | 0;
 _memcpy($$3$i$i489 + 28724 | 0, 4795608, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $43);
 if ($$3$i$i489 | 0) {
  $12302 = $$3$i$i489 + 5 | 0;
  $12304 = (HEAP8[$12302 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12302 >> 0] = $12304;
  if (!($12304 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i489);
  HEAP32[$43 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3449 >> 1] = 555;
 HEAP16[$3450 >> 1] = 1023;
 HEAP16[$3451 >> 1] = 569;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 628; else {
  $12308 = HEAP32[915090] | 0;
  if (($12308 | 0) == (HEAP32[915088] | 0)) label = 628; else {
   $$lcssa$i$i501 = 3660360;
   $$lcssa8$i$i500 = $12308;
   label = 629;
  }
 }
 do if ((label | 0) == 628) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12315 = HEAP32[915096] | 0;
   if (($12315 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i501 = 3660384;
    $$lcssa8$i$i500 = $12315;
    label = 629;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $12320 = HEAP32[915102] | 0;
   if (($12320 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i501 = 3660408;
    $$lcssa8$i$i500 = $12320;
    label = 629;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $12325 = HEAP32[915108] | 0;
   if (($12325 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i501 = 3660432;
    $$lcssa8$i$i500 = $12325;
    label = 629;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $12330 = HEAP32[915114] | 0;
   if (($12330 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i501 = 3660456;
    $$lcssa8$i$i500 = $12330;
    label = 629;
    break;
   }
  }
  $$3$i$i502 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 629) {
  $12313 = $$lcssa8$i$i500 + -4 | 0;
  HEAP32[$$lcssa$i$i501 >> 2] = $12313;
  $$3$i$i502 = HEAP32[$12313 >> 2] | 0;
 }
 $12334 = $$3$i$i502 + 52 | 0;
 HEAP16[$$3$i$i502 >> 1] = 1024;
 HEAP16[$$3$i$i502 + 2 >> 1] = 15;
 HEAP8[$$3$i$i502 + 4 >> 0] = 16;
 HEAP8[$$3$i$i502 + 5 >> 0] = 1;
 HEAP32[$$3$i$i502 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i502 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i502 + 16 >> 2] = $12334;
 HEAP32[$$3$i$i502 + 20 >> 2] = 0;
 HEAP32[$$3$i$i502 + 24 >> 2] = 0;
 HEAP8[$$3$i$i502 + 48 >> 0] = 0;
 HEAP32[$44 >> 2] = $$3$i$i502;
 _memcpy($12334 | 0, 4797656, 2048) | 0;
 _memcpy($$3$i$i502 + 2100 | 0, 4799704, 2048) | 0;
 _memcpy($$3$i$i502 + 4148 | 0, 4801752, 2048) | 0;
 _memcpy($$3$i$i502 + 6196 | 0, 4803800, 2048) | 0;
 _memcpy($$3$i$i502 + 8244 | 0, 4805848, 2048) | 0;
 _memcpy($$3$i$i502 + 10292 | 0, 4807896, 2048) | 0;
 _memcpy($$3$i$i502 + 12340 | 0, 4809944, 2048) | 0;
 _memcpy($$3$i$i502 + 14388 | 0, 4811992, 2048) | 0;
 _memcpy($$3$i$i502 + 16436 | 0, 4814040, 2048) | 0;
 _memcpy($$3$i$i502 + 18484 | 0, 4816088, 2048) | 0;
 _memcpy($$3$i$i502 + 20532 | 0, 4818136, 2048) | 0;
 _memcpy($$3$i$i502 + 22580 | 0, 4820184, 2048) | 0;
 _memcpy($$3$i$i502 + 24628 | 0, 4822232, 2048) | 0;
 _memcpy($$3$i$i502 + 26676 | 0, 4824280, 2048) | 0;
 _memcpy($$3$i$i502 + 28724 | 0, 4826328, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $44);
 if ($$3$i$i502 | 0) {
  $12359 = $$3$i$i502 + 5 | 0;
  $12361 = (HEAP8[$12359 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12359 >> 0] = $12361;
  if (!($12361 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i502);
  HEAP32[$44 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3452 >> 1] = 570;
 HEAP16[$3453 >> 1] = 1023;
 HEAP16[$3454 >> 1] = 584;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 644; else {
  $12365 = HEAP32[915090] | 0;
  if (($12365 | 0) == (HEAP32[915088] | 0)) label = 644; else {
   $$lcssa$i$i514 = 3660360;
   $$lcssa8$i$i513 = $12365;
   label = 645;
  }
 }
 do if ((label | 0) == 644) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12372 = HEAP32[915096] | 0;
   if (($12372 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i514 = 3660384;
    $$lcssa8$i$i513 = $12372;
    label = 645;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $12377 = HEAP32[915102] | 0;
   if (($12377 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i514 = 3660408;
    $$lcssa8$i$i513 = $12377;
    label = 645;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $12382 = HEAP32[915108] | 0;
   if (($12382 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i514 = 3660432;
    $$lcssa8$i$i513 = $12382;
    label = 645;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $12387 = HEAP32[915114] | 0;
   if (($12387 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i514 = 3660456;
    $$lcssa8$i$i513 = $12387;
    label = 645;
    break;
   }
  }
  $$3$i$i515 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 645) {
  $12370 = $$lcssa8$i$i513 + -4 | 0;
  HEAP32[$$lcssa$i$i514 >> 2] = $12370;
  $$3$i$i515 = HEAP32[$12370 >> 2] | 0;
 }
 $12391 = $$3$i$i515 + 52 | 0;
 HEAP16[$$3$i$i515 >> 1] = 1024;
 HEAP16[$$3$i$i515 + 2 >> 1] = 15;
 HEAP8[$$3$i$i515 + 4 >> 0] = 16;
 HEAP8[$$3$i$i515 + 5 >> 0] = 1;
 HEAP32[$$3$i$i515 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i515 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i515 + 16 >> 2] = $12391;
 HEAP32[$$3$i$i515 + 20 >> 2] = 0;
 HEAP32[$$3$i$i515 + 24 >> 2] = 0;
 HEAP8[$$3$i$i515 + 48 >> 0] = 0;
 HEAP32[$45 >> 2] = $$3$i$i515;
 _memcpy($12391 | 0, 4828376, 2048) | 0;
 _memcpy($$3$i$i515 + 2100 | 0, 4830424, 2048) | 0;
 _memcpy($$3$i$i515 + 4148 | 0, 4832472, 2048) | 0;
 _memcpy($$3$i$i515 + 6196 | 0, 4834520, 2048) | 0;
 _memcpy($$3$i$i515 + 8244 | 0, 4836568, 2048) | 0;
 _memcpy($$3$i$i515 + 10292 | 0, 4838616, 2048) | 0;
 _memcpy($$3$i$i515 + 12340 | 0, 4840664, 2048) | 0;
 _memcpy($$3$i$i515 + 14388 | 0, 4842712, 2048) | 0;
 _memcpy($$3$i$i515 + 16436 | 0, 4844760, 2048) | 0;
 _memcpy($$3$i$i515 + 18484 | 0, 4846808, 2048) | 0;
 _memcpy($$3$i$i515 + 20532 | 0, 4848856, 2048) | 0;
 _memcpy($$3$i$i515 + 22580 | 0, 4850904, 2048) | 0;
 _memcpy($$3$i$i515 + 24628 | 0, 4852952, 2048) | 0;
 _memcpy($$3$i$i515 + 26676 | 0, 4855e3, 2048) | 0;
 _memcpy($$3$i$i515 + 28724 | 0, 4857048, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $45);
 if ($$3$i$i515 | 0) {
  $12416 = $$3$i$i515 + 5 | 0;
  $12418 = (HEAP8[$12416 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12416 >> 0] = $12418;
  if (!($12418 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i515);
  HEAP32[$45 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3455 >> 1] = 585;
 HEAP16[$3456 >> 1] = 1023;
 HEAP16[$3457 >> 1] = 599;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 660; else {
  $12422 = HEAP32[915090] | 0;
  if (($12422 | 0) == (HEAP32[915088] | 0)) label = 660; else {
   $$lcssa$i$i527 = 3660360;
   $$lcssa8$i$i526 = $12422;
   label = 661;
  }
 }
 do if ((label | 0) == 660) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12429 = HEAP32[915096] | 0;
   if (($12429 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i527 = 3660384;
    $$lcssa8$i$i526 = $12429;
    label = 661;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $12434 = HEAP32[915102] | 0;
   if (($12434 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i527 = 3660408;
    $$lcssa8$i$i526 = $12434;
    label = 661;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $12439 = HEAP32[915108] | 0;
   if (($12439 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i527 = 3660432;
    $$lcssa8$i$i526 = $12439;
    label = 661;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $12444 = HEAP32[915114] | 0;
   if (($12444 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i527 = 3660456;
    $$lcssa8$i$i526 = $12444;
    label = 661;
    break;
   }
  }
  $$3$i$i528 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 661) {
  $12427 = $$lcssa8$i$i526 + -4 | 0;
  HEAP32[$$lcssa$i$i527 >> 2] = $12427;
  $$3$i$i528 = HEAP32[$12427 >> 2] | 0;
 }
 $12448 = $$3$i$i528 + 52 | 0;
 HEAP16[$$3$i$i528 >> 1] = 1024;
 HEAP16[$$3$i$i528 + 2 >> 1] = 15;
 HEAP8[$$3$i$i528 + 4 >> 0] = 16;
 HEAP8[$$3$i$i528 + 5 >> 0] = 1;
 HEAP32[$$3$i$i528 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i528 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i528 + 16 >> 2] = $12448;
 HEAP32[$$3$i$i528 + 20 >> 2] = 0;
 HEAP32[$$3$i$i528 + 24 >> 2] = 0;
 HEAP8[$$3$i$i528 + 48 >> 0] = 0;
 HEAP32[$46 >> 2] = $$3$i$i528;
 _memcpy($12448 | 0, 4859096, 2048) | 0;
 _memcpy($$3$i$i528 + 2100 | 0, 4861144, 2048) | 0;
 _memcpy($$3$i$i528 + 4148 | 0, 4863192, 2048) | 0;
 _memcpy($$3$i$i528 + 6196 | 0, 4865240, 2048) | 0;
 _memcpy($$3$i$i528 + 8244 | 0, 4867288, 2048) | 0;
 _memcpy($$3$i$i528 + 10292 | 0, 4869336, 2048) | 0;
 _memcpy($$3$i$i528 + 12340 | 0, 4871384, 2048) | 0;
 _memcpy($$3$i$i528 + 14388 | 0, 4873432, 2048) | 0;
 _memcpy($$3$i$i528 + 16436 | 0, 4875480, 2048) | 0;
 _memcpy($$3$i$i528 + 18484 | 0, 4877528, 2048) | 0;
 _memcpy($$3$i$i528 + 20532 | 0, 4879576, 2048) | 0;
 _memcpy($$3$i$i528 + 22580 | 0, 4881624, 2048) | 0;
 _memcpy($$3$i$i528 + 24628 | 0, 4883672, 2048) | 0;
 _memcpy($$3$i$i528 + 26676 | 0, 4885720, 2048) | 0;
 _memcpy($$3$i$i528 + 28724 | 0, 4887768, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $46);
 if ($$3$i$i528 | 0) {
  $12473 = $$3$i$i528 + 5 | 0;
  $12475 = (HEAP8[$12473 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12473 >> 0] = $12475;
  if (!($12475 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i528);
  HEAP32[$46 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3458 >> 1] = 600;
 HEAP16[$3459 >> 1] = 1023;
 HEAP16[$3460 >> 1] = 614;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 676; else {
  $12479 = HEAP32[915090] | 0;
  if (($12479 | 0) == (HEAP32[915088] | 0)) label = 676; else {
   $$lcssa$i$i540 = 3660360;
   $$lcssa8$i$i539 = $12479;
   label = 677;
  }
 }
 do if ((label | 0) == 676) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12486 = HEAP32[915096] | 0;
   if (($12486 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i540 = 3660384;
    $$lcssa8$i$i539 = $12486;
    label = 677;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $12491 = HEAP32[915102] | 0;
   if (($12491 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i540 = 3660408;
    $$lcssa8$i$i539 = $12491;
    label = 677;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $12496 = HEAP32[915108] | 0;
   if (($12496 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i540 = 3660432;
    $$lcssa8$i$i539 = $12496;
    label = 677;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $12501 = HEAP32[915114] | 0;
   if (($12501 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i540 = 3660456;
    $$lcssa8$i$i539 = $12501;
    label = 677;
    break;
   }
  }
  $$3$i$i541 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 677) {
  $12484 = $$lcssa8$i$i539 + -4 | 0;
  HEAP32[$$lcssa$i$i540 >> 2] = $12484;
  $$3$i$i541 = HEAP32[$12484 >> 2] | 0;
 }
 $12505 = $$3$i$i541 + 52 | 0;
 HEAP16[$$3$i$i541 >> 1] = 1024;
 HEAP16[$$3$i$i541 + 2 >> 1] = 15;
 HEAP8[$$3$i$i541 + 4 >> 0] = 16;
 HEAP8[$$3$i$i541 + 5 >> 0] = 1;
 HEAP32[$$3$i$i541 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i541 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i541 + 16 >> 2] = $12505;
 HEAP32[$$3$i$i541 + 20 >> 2] = 0;
 HEAP32[$$3$i$i541 + 24 >> 2] = 0;
 HEAP8[$$3$i$i541 + 48 >> 0] = 0;
 HEAP32[$47 >> 2] = $$3$i$i541;
 _memcpy($12505 | 0, 4889816, 2048) | 0;
 _memcpy($$3$i$i541 + 2100 | 0, 4891864, 2048) | 0;
 _memcpy($$3$i$i541 + 4148 | 0, 4893912, 2048) | 0;
 _memcpy($$3$i$i541 + 6196 | 0, 4895960, 2048) | 0;
 _memcpy($$3$i$i541 + 8244 | 0, 4898008, 2048) | 0;
 _memcpy($$3$i$i541 + 10292 | 0, 4900056, 2048) | 0;
 _memcpy($$3$i$i541 + 12340 | 0, 4902104, 2048) | 0;
 _memcpy($$3$i$i541 + 14388 | 0, 4904152, 2048) | 0;
 _memcpy($$3$i$i541 + 16436 | 0, 4906200, 2048) | 0;
 _memcpy($$3$i$i541 + 18484 | 0, 4908248, 2048) | 0;
 _memcpy($$3$i$i541 + 20532 | 0, 4910296, 2048) | 0;
 _memcpy($$3$i$i541 + 22580 | 0, 4912344, 2048) | 0;
 _memcpy($$3$i$i541 + 24628 | 0, 4914392, 2048) | 0;
 _memcpy($$3$i$i541 + 26676 | 0, 4916440, 2048) | 0;
 _memcpy($$3$i$i541 + 28724 | 0, 4918488, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $47);
 if ($$3$i$i541 | 0) {
  $12530 = $$3$i$i541 + 5 | 0;
  $12532 = (HEAP8[$12530 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12530 >> 0] = $12532;
  if (!($12532 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i541);
  HEAP32[$47 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3461 >> 1] = 615;
 HEAP16[$3462 >> 1] = 1023;
 HEAP16[$3463 >> 1] = 629;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 692; else {
  $12536 = HEAP32[915090] | 0;
  if (($12536 | 0) == (HEAP32[915088] | 0)) label = 692; else {
   $$lcssa$i$i553 = 3660360;
   $$lcssa8$i$i552 = $12536;
   label = 693;
  }
 }
 do if ((label | 0) == 692) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12543 = HEAP32[915096] | 0;
   if (($12543 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i553 = 3660384;
    $$lcssa8$i$i552 = $12543;
    label = 693;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $12548 = HEAP32[915102] | 0;
   if (($12548 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i553 = 3660408;
    $$lcssa8$i$i552 = $12548;
    label = 693;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $12553 = HEAP32[915108] | 0;
   if (($12553 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i553 = 3660432;
    $$lcssa8$i$i552 = $12553;
    label = 693;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $12558 = HEAP32[915114] | 0;
   if (($12558 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i553 = 3660456;
    $$lcssa8$i$i552 = $12558;
    label = 693;
    break;
   }
  }
  $$3$i$i554 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 693) {
  $12541 = $$lcssa8$i$i552 + -4 | 0;
  HEAP32[$$lcssa$i$i553 >> 2] = $12541;
  $$3$i$i554 = HEAP32[$12541 >> 2] | 0;
 }
 $12562 = $$3$i$i554 + 52 | 0;
 HEAP16[$$3$i$i554 >> 1] = 1024;
 HEAP16[$$3$i$i554 + 2 >> 1] = 15;
 HEAP8[$$3$i$i554 + 4 >> 0] = 16;
 HEAP8[$$3$i$i554 + 5 >> 0] = 1;
 HEAP32[$$3$i$i554 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i554 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i554 + 16 >> 2] = $12562;
 HEAP32[$$3$i$i554 + 20 >> 2] = 0;
 HEAP32[$$3$i$i554 + 24 >> 2] = 0;
 HEAP8[$$3$i$i554 + 48 >> 0] = 0;
 HEAP32[$48 >> 2] = $$3$i$i554;
 _memcpy($12562 | 0, 4920536, 2048) | 0;
 _memcpy($$3$i$i554 + 2100 | 0, 4922584, 2048) | 0;
 _memcpy($$3$i$i554 + 4148 | 0, 4924632, 2048) | 0;
 _memcpy($$3$i$i554 + 6196 | 0, 4926680, 2048) | 0;
 _memcpy($$3$i$i554 + 8244 | 0, 4928728, 2048) | 0;
 _memcpy($$3$i$i554 + 10292 | 0, 4930776, 2048) | 0;
 _memcpy($$3$i$i554 + 12340 | 0, 4932824, 2048) | 0;
 _memcpy($$3$i$i554 + 14388 | 0, 4934872, 2048) | 0;
 _memcpy($$3$i$i554 + 16436 | 0, 4936920, 2048) | 0;
 _memcpy($$3$i$i554 + 18484 | 0, 4938968, 2048) | 0;
 _memcpy($$3$i$i554 + 20532 | 0, 4941016, 2048) | 0;
 _memcpy($$3$i$i554 + 22580 | 0, 4943064, 2048) | 0;
 _memcpy($$3$i$i554 + 24628 | 0, 4945112, 2048) | 0;
 _memcpy($$3$i$i554 + 26676 | 0, 4947160, 2048) | 0;
 _memcpy($$3$i$i554 + 28724 | 0, 4949208, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $48);
 if ($$3$i$i554 | 0) {
  $12587 = $$3$i$i554 + 5 | 0;
  $12589 = (HEAP8[$12587 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12587 >> 0] = $12589;
  if (!($12589 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i554);
  HEAP32[$48 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3464 >> 1] = 630;
 HEAP16[$3465 >> 1] = 1023;
 HEAP16[$3466 >> 1] = 644;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 708; else {
  $12593 = HEAP32[915090] | 0;
  if (($12593 | 0) == (HEAP32[915088] | 0)) label = 708; else {
   $$lcssa$i$i566 = 3660360;
   $$lcssa8$i$i565 = $12593;
   label = 709;
  }
 }
 do if ((label | 0) == 708) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12600 = HEAP32[915096] | 0;
   if (($12600 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i566 = 3660384;
    $$lcssa8$i$i565 = $12600;
    label = 709;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $12605 = HEAP32[915102] | 0;
   if (($12605 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i566 = 3660408;
    $$lcssa8$i$i565 = $12605;
    label = 709;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $12610 = HEAP32[915108] | 0;
   if (($12610 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i566 = 3660432;
    $$lcssa8$i$i565 = $12610;
    label = 709;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $12615 = HEAP32[915114] | 0;
   if (($12615 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i566 = 3660456;
    $$lcssa8$i$i565 = $12615;
    label = 709;
    break;
   }
  }
  $$3$i$i567 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 709) {
  $12598 = $$lcssa8$i$i565 + -4 | 0;
  HEAP32[$$lcssa$i$i566 >> 2] = $12598;
  $$3$i$i567 = HEAP32[$12598 >> 2] | 0;
 }
 $12619 = $$3$i$i567 + 52 | 0;
 HEAP16[$$3$i$i567 >> 1] = 1024;
 HEAP16[$$3$i$i567 + 2 >> 1] = 15;
 HEAP8[$$3$i$i567 + 4 >> 0] = 16;
 HEAP8[$$3$i$i567 + 5 >> 0] = 1;
 HEAP32[$$3$i$i567 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i567 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i567 + 16 >> 2] = $12619;
 HEAP32[$$3$i$i567 + 20 >> 2] = 0;
 HEAP32[$$3$i$i567 + 24 >> 2] = 0;
 HEAP8[$$3$i$i567 + 48 >> 0] = 0;
 HEAP32[$49 >> 2] = $$3$i$i567;
 _memcpy($12619 | 0, 4951256, 2048) | 0;
 _memcpy($$3$i$i567 + 2100 | 0, 4953304, 2048) | 0;
 _memcpy($$3$i$i567 + 4148 | 0, 4955352, 2048) | 0;
 _memcpy($$3$i$i567 + 6196 | 0, 4957400, 2048) | 0;
 _memcpy($$3$i$i567 + 8244 | 0, 4959448, 2048) | 0;
 _memcpy($$3$i$i567 + 10292 | 0, 4961496, 2048) | 0;
 _memcpy($$3$i$i567 + 12340 | 0, 4963544, 2048) | 0;
 _memcpy($$3$i$i567 + 14388 | 0, 4965592, 2048) | 0;
 _memcpy($$3$i$i567 + 16436 | 0, 4967640, 2048) | 0;
 _memcpy($$3$i$i567 + 18484 | 0, 4969688, 2048) | 0;
 _memcpy($$3$i$i567 + 20532 | 0, 4971736, 2048) | 0;
 _memcpy($$3$i$i567 + 22580 | 0, 4973784, 2048) | 0;
 _memcpy($$3$i$i567 + 24628 | 0, 4975832, 2048) | 0;
 _memcpy($$3$i$i567 + 26676 | 0, 4977880, 2048) | 0;
 _memcpy($$3$i$i567 + 28724 | 0, 4979928, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $49);
 if ($$3$i$i567 | 0) {
  $12644 = $$3$i$i567 + 5 | 0;
  $12646 = (HEAP8[$12644 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12644 >> 0] = $12646;
  if (!($12646 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i567);
  HEAP32[$49 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3467 >> 1] = 645;
 HEAP16[$3468 >> 1] = 1023;
 HEAP16[$3469 >> 1] = 659;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 724; else {
  $12650 = HEAP32[915090] | 0;
  if (($12650 | 0) == (HEAP32[915088] | 0)) label = 724; else {
   $$lcssa$i$i579 = 3660360;
   $$lcssa8$i$i578 = $12650;
   label = 725;
  }
 }
 do if ((label | 0) == 724) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12657 = HEAP32[915096] | 0;
   if (($12657 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i579 = 3660384;
    $$lcssa8$i$i578 = $12657;
    label = 725;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $12662 = HEAP32[915102] | 0;
   if (($12662 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i579 = 3660408;
    $$lcssa8$i$i578 = $12662;
    label = 725;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $12667 = HEAP32[915108] | 0;
   if (($12667 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i579 = 3660432;
    $$lcssa8$i$i578 = $12667;
    label = 725;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $12672 = HEAP32[915114] | 0;
   if (($12672 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i579 = 3660456;
    $$lcssa8$i$i578 = $12672;
    label = 725;
    break;
   }
  }
  $$3$i$i580 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 725) {
  $12655 = $$lcssa8$i$i578 + -4 | 0;
  HEAP32[$$lcssa$i$i579 >> 2] = $12655;
  $$3$i$i580 = HEAP32[$12655 >> 2] | 0;
 }
 $12676 = $$3$i$i580 + 52 | 0;
 HEAP16[$$3$i$i580 >> 1] = 1024;
 HEAP16[$$3$i$i580 + 2 >> 1] = 15;
 HEAP8[$$3$i$i580 + 4 >> 0] = 16;
 HEAP8[$$3$i$i580 + 5 >> 0] = 1;
 HEAP32[$$3$i$i580 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i580 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i580 + 16 >> 2] = $12676;
 HEAP32[$$3$i$i580 + 20 >> 2] = 0;
 HEAP32[$$3$i$i580 + 24 >> 2] = 0;
 HEAP8[$$3$i$i580 + 48 >> 0] = 0;
 HEAP32[$50 >> 2] = $$3$i$i580;
 _memcpy($12676 | 0, 4981976, 2048) | 0;
 _memcpy($$3$i$i580 + 2100 | 0, 4984024, 2048) | 0;
 _memcpy($$3$i$i580 + 4148 | 0, 4986072, 2048) | 0;
 _memcpy($$3$i$i580 + 6196 | 0, 4988120, 2048) | 0;
 _memcpy($$3$i$i580 + 8244 | 0, 4990168, 2048) | 0;
 _memcpy($$3$i$i580 + 10292 | 0, 4992216, 2048) | 0;
 _memcpy($$3$i$i580 + 12340 | 0, 4994264, 2048) | 0;
 _memcpy($$3$i$i580 + 14388 | 0, 4996312, 2048) | 0;
 _memcpy($$3$i$i580 + 16436 | 0, 4998360, 2048) | 0;
 _memcpy($$3$i$i580 + 18484 | 0, 5000408, 2048) | 0;
 _memcpy($$3$i$i580 + 20532 | 0, 5002456, 2048) | 0;
 _memcpy($$3$i$i580 + 22580 | 0, 5004504, 2048) | 0;
 _memcpy($$3$i$i580 + 24628 | 0, 5006552, 2048) | 0;
 _memcpy($$3$i$i580 + 26676 | 0, 5008600, 2048) | 0;
 _memcpy($$3$i$i580 + 28724 | 0, 5010648, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $50);
 if ($$3$i$i580 | 0) {
  $12701 = $$3$i$i580 + 5 | 0;
  $12703 = (HEAP8[$12701 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12701 >> 0] = $12703;
  if (!($12703 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i580);
  HEAP32[$50 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3470 >> 1] = 660;
 HEAP16[$3471 >> 1] = 1023;
 HEAP16[$3472 >> 1] = 674;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 740; else {
  $12707 = HEAP32[915090] | 0;
  if (($12707 | 0) == (HEAP32[915088] | 0)) label = 740; else {
   $$lcssa$i$i592 = 3660360;
   $$lcssa8$i$i591 = $12707;
   label = 741;
  }
 }
 do if ((label | 0) == 740) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12714 = HEAP32[915096] | 0;
   if (($12714 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i592 = 3660384;
    $$lcssa8$i$i591 = $12714;
    label = 741;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $12719 = HEAP32[915102] | 0;
   if (($12719 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i592 = 3660408;
    $$lcssa8$i$i591 = $12719;
    label = 741;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $12724 = HEAP32[915108] | 0;
   if (($12724 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i592 = 3660432;
    $$lcssa8$i$i591 = $12724;
    label = 741;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $12729 = HEAP32[915114] | 0;
   if (($12729 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i592 = 3660456;
    $$lcssa8$i$i591 = $12729;
    label = 741;
    break;
   }
  }
  $$3$i$i593 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 741) {
  $12712 = $$lcssa8$i$i591 + -4 | 0;
  HEAP32[$$lcssa$i$i592 >> 2] = $12712;
  $$3$i$i593 = HEAP32[$12712 >> 2] | 0;
 }
 $12733 = $$3$i$i593 + 52 | 0;
 HEAP16[$$3$i$i593 >> 1] = 1024;
 HEAP16[$$3$i$i593 + 2 >> 1] = 15;
 HEAP8[$$3$i$i593 + 4 >> 0] = 16;
 HEAP8[$$3$i$i593 + 5 >> 0] = 1;
 HEAP32[$$3$i$i593 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i593 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i593 + 16 >> 2] = $12733;
 HEAP32[$$3$i$i593 + 20 >> 2] = 0;
 HEAP32[$$3$i$i593 + 24 >> 2] = 0;
 HEAP8[$$3$i$i593 + 48 >> 0] = 0;
 HEAP32[$51 >> 2] = $$3$i$i593;
 _memcpy($12733 | 0, 5012696, 2048) | 0;
 _memcpy($$3$i$i593 + 2100 | 0, 5014744, 2048) | 0;
 _memcpy($$3$i$i593 + 4148 | 0, 5016792, 2048) | 0;
 _memcpy($$3$i$i593 + 6196 | 0, 5018840, 2048) | 0;
 _memcpy($$3$i$i593 + 8244 | 0, 5020888, 2048) | 0;
 _memcpy($$3$i$i593 + 10292 | 0, 5022936, 2048) | 0;
 _memcpy($$3$i$i593 + 12340 | 0, 5024984, 2048) | 0;
 _memcpy($$3$i$i593 + 14388 | 0, 5027032, 2048) | 0;
 _memcpy($$3$i$i593 + 16436 | 0, 5029080, 2048) | 0;
 _memcpy($$3$i$i593 + 18484 | 0, 5031128, 2048) | 0;
 _memcpy($$3$i$i593 + 20532 | 0, 5033176, 2048) | 0;
 _memcpy($$3$i$i593 + 22580 | 0, 5035224, 2048) | 0;
 _memcpy($$3$i$i593 + 24628 | 0, 5037272, 2048) | 0;
 _memcpy($$3$i$i593 + 26676 | 0, 5039320, 2048) | 0;
 _memcpy($$3$i$i593 + 28724 | 0, 5041368, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $51);
 if ($$3$i$i593 | 0) {
  $12758 = $$3$i$i593 + 5 | 0;
  $12760 = (HEAP8[$12758 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12758 >> 0] = $12760;
  if (!($12760 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i593);
  HEAP32[$51 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3473 >> 1] = 675;
 HEAP16[$3474 >> 1] = 1023;
 HEAP16[$3475 >> 1] = 689;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 756; else {
  $12764 = HEAP32[915090] | 0;
  if (($12764 | 0) == (HEAP32[915088] | 0)) label = 756; else {
   $$lcssa$i$i605 = 3660360;
   $$lcssa8$i$i604 = $12764;
   label = 757;
  }
 }
 do if ((label | 0) == 756) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12771 = HEAP32[915096] | 0;
   if (($12771 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i605 = 3660384;
    $$lcssa8$i$i604 = $12771;
    label = 757;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $12776 = HEAP32[915102] | 0;
   if (($12776 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i605 = 3660408;
    $$lcssa8$i$i604 = $12776;
    label = 757;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $12781 = HEAP32[915108] | 0;
   if (($12781 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i605 = 3660432;
    $$lcssa8$i$i604 = $12781;
    label = 757;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $12786 = HEAP32[915114] | 0;
   if (($12786 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i605 = 3660456;
    $$lcssa8$i$i604 = $12786;
    label = 757;
    break;
   }
  }
  $$3$i$i606 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 757) {
  $12769 = $$lcssa8$i$i604 + -4 | 0;
  HEAP32[$$lcssa$i$i605 >> 2] = $12769;
  $$3$i$i606 = HEAP32[$12769 >> 2] | 0;
 }
 $12790 = $$3$i$i606 + 52 | 0;
 HEAP16[$$3$i$i606 >> 1] = 1024;
 HEAP16[$$3$i$i606 + 2 >> 1] = 15;
 HEAP8[$$3$i$i606 + 4 >> 0] = 16;
 HEAP8[$$3$i$i606 + 5 >> 0] = 1;
 HEAP32[$$3$i$i606 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i606 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i606 + 16 >> 2] = $12790;
 HEAP32[$$3$i$i606 + 20 >> 2] = 0;
 HEAP32[$$3$i$i606 + 24 >> 2] = 0;
 HEAP8[$$3$i$i606 + 48 >> 0] = 0;
 HEAP32[$52 >> 2] = $$3$i$i606;
 _memcpy($12790 | 0, 5043416, 2048) | 0;
 _memcpy($$3$i$i606 + 2100 | 0, 5045464, 2048) | 0;
 _memcpy($$3$i$i606 + 4148 | 0, 5047512, 2048) | 0;
 _memcpy($$3$i$i606 + 6196 | 0, 5049560, 2048) | 0;
 _memcpy($$3$i$i606 + 8244 | 0, 5051608, 2048) | 0;
 _memcpy($$3$i$i606 + 10292 | 0, 5053656, 2048) | 0;
 _memcpy($$3$i$i606 + 12340 | 0, 5055704, 2048) | 0;
 _memcpy($$3$i$i606 + 14388 | 0, 5057752, 2048) | 0;
 _memcpy($$3$i$i606 + 16436 | 0, 5059800, 2048) | 0;
 _memcpy($$3$i$i606 + 18484 | 0, 5061848, 2048) | 0;
 _memcpy($$3$i$i606 + 20532 | 0, 5063896, 2048) | 0;
 _memcpy($$3$i$i606 + 22580 | 0, 5065944, 2048) | 0;
 _memcpy($$3$i$i606 + 24628 | 0, 5067992, 2048) | 0;
 _memcpy($$3$i$i606 + 26676 | 0, 5070040, 2048) | 0;
 _memcpy($$3$i$i606 + 28724 | 0, 5072088, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $52);
 if ($$3$i$i606 | 0) {
  $12815 = $$3$i$i606 + 5 | 0;
  $12817 = (HEAP8[$12815 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12815 >> 0] = $12817;
  if (!($12817 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i606);
  HEAP32[$52 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3476 >> 1] = 690;
 HEAP16[$3477 >> 1] = 1023;
 HEAP16[$3478 >> 1] = 704;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 772; else {
  $12821 = HEAP32[915090] | 0;
  if (($12821 | 0) == (HEAP32[915088] | 0)) label = 772; else {
   $$lcssa$i$i618 = 3660360;
   $$lcssa8$i$i617 = $12821;
   label = 773;
  }
 }
 do if ((label | 0) == 772) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12828 = HEAP32[915096] | 0;
   if (($12828 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i618 = 3660384;
    $$lcssa8$i$i617 = $12828;
    label = 773;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $12833 = HEAP32[915102] | 0;
   if (($12833 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i618 = 3660408;
    $$lcssa8$i$i617 = $12833;
    label = 773;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $12838 = HEAP32[915108] | 0;
   if (($12838 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i618 = 3660432;
    $$lcssa8$i$i617 = $12838;
    label = 773;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $12843 = HEAP32[915114] | 0;
   if (($12843 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i618 = 3660456;
    $$lcssa8$i$i617 = $12843;
    label = 773;
    break;
   }
  }
  $$3$i$i619 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 773) {
  $12826 = $$lcssa8$i$i617 + -4 | 0;
  HEAP32[$$lcssa$i$i618 >> 2] = $12826;
  $$3$i$i619 = HEAP32[$12826 >> 2] | 0;
 }
 $12847 = $$3$i$i619 + 52 | 0;
 HEAP16[$$3$i$i619 >> 1] = 1024;
 HEAP16[$$3$i$i619 + 2 >> 1] = 15;
 HEAP8[$$3$i$i619 + 4 >> 0] = 16;
 HEAP8[$$3$i$i619 + 5 >> 0] = 1;
 HEAP32[$$3$i$i619 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i619 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i619 + 16 >> 2] = $12847;
 HEAP32[$$3$i$i619 + 20 >> 2] = 0;
 HEAP32[$$3$i$i619 + 24 >> 2] = 0;
 HEAP8[$$3$i$i619 + 48 >> 0] = 0;
 HEAP32[$53 >> 2] = $$3$i$i619;
 _memcpy($12847 | 0, 5074136, 2048) | 0;
 _memcpy($$3$i$i619 + 2100 | 0, 5076184, 2048) | 0;
 _memcpy($$3$i$i619 + 4148 | 0, 5078232, 2048) | 0;
 _memcpy($$3$i$i619 + 6196 | 0, 5080280, 2048) | 0;
 _memcpy($$3$i$i619 + 8244 | 0, 5082328, 2048) | 0;
 _memcpy($$3$i$i619 + 10292 | 0, 5084376, 2048) | 0;
 _memcpy($$3$i$i619 + 12340 | 0, 5086424, 2048) | 0;
 _memcpy($$3$i$i619 + 14388 | 0, 5088472, 2048) | 0;
 _memcpy($$3$i$i619 + 16436 | 0, 5090520, 2048) | 0;
 _memcpy($$3$i$i619 + 18484 | 0, 5092568, 2048) | 0;
 _memcpy($$3$i$i619 + 20532 | 0, 5094616, 2048) | 0;
 _memcpy($$3$i$i619 + 22580 | 0, 5096664, 2048) | 0;
 _memcpy($$3$i$i619 + 24628 | 0, 5098712, 2048) | 0;
 _memcpy($$3$i$i619 + 26676 | 0, 5100760, 2048) | 0;
 _memcpy($$3$i$i619 + 28724 | 0, 5102808, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $53);
 if ($$3$i$i619 | 0) {
  $12872 = $$3$i$i619 + 5 | 0;
  $12874 = (HEAP8[$12872 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12872 >> 0] = $12874;
  if (!($12874 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i619);
  HEAP32[$53 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3479 >> 1] = 705;
 HEAP16[$3480 >> 1] = 1023;
 HEAP16[$3481 >> 1] = 719;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 788; else {
  $12878 = HEAP32[915090] | 0;
  if (($12878 | 0) == (HEAP32[915088] | 0)) label = 788; else {
   $$lcssa$i$i631 = 3660360;
   $$lcssa8$i$i630 = $12878;
   label = 789;
  }
 }
 do if ((label | 0) == 788) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12885 = HEAP32[915096] | 0;
   if (($12885 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i631 = 3660384;
    $$lcssa8$i$i630 = $12885;
    label = 789;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $12890 = HEAP32[915102] | 0;
   if (($12890 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i631 = 3660408;
    $$lcssa8$i$i630 = $12890;
    label = 789;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $12895 = HEAP32[915108] | 0;
   if (($12895 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i631 = 3660432;
    $$lcssa8$i$i630 = $12895;
    label = 789;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $12900 = HEAP32[915114] | 0;
   if (($12900 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i631 = 3660456;
    $$lcssa8$i$i630 = $12900;
    label = 789;
    break;
   }
  }
  $$3$i$i632 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 789) {
  $12883 = $$lcssa8$i$i630 + -4 | 0;
  HEAP32[$$lcssa$i$i631 >> 2] = $12883;
  $$3$i$i632 = HEAP32[$12883 >> 2] | 0;
 }
 $12904 = $$3$i$i632 + 52 | 0;
 HEAP16[$$3$i$i632 >> 1] = 1024;
 HEAP16[$$3$i$i632 + 2 >> 1] = 15;
 HEAP8[$$3$i$i632 + 4 >> 0] = 16;
 HEAP8[$$3$i$i632 + 5 >> 0] = 1;
 HEAP32[$$3$i$i632 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i632 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i632 + 16 >> 2] = $12904;
 HEAP32[$$3$i$i632 + 20 >> 2] = 0;
 HEAP32[$$3$i$i632 + 24 >> 2] = 0;
 HEAP8[$$3$i$i632 + 48 >> 0] = 0;
 HEAP32[$54 >> 2] = $$3$i$i632;
 _memcpy($12904 | 0, 5104856, 2048) | 0;
 _memcpy($$3$i$i632 + 2100 | 0, 5106904, 2048) | 0;
 _memcpy($$3$i$i632 + 4148 | 0, 5108952, 2048) | 0;
 _memcpy($$3$i$i632 + 6196 | 0, 5111e3, 2048) | 0;
 _memcpy($$3$i$i632 + 8244 | 0, 5113048, 2048) | 0;
 _memcpy($$3$i$i632 + 10292 | 0, 5115096, 2048) | 0;
 _memcpy($$3$i$i632 + 12340 | 0, 5117144, 2048) | 0;
 _memcpy($$3$i$i632 + 14388 | 0, 5119192, 2048) | 0;
 _memcpy($$3$i$i632 + 16436 | 0, 5121240, 2048) | 0;
 _memcpy($$3$i$i632 + 18484 | 0, 5123288, 2048) | 0;
 _memcpy($$3$i$i632 + 20532 | 0, 5125336, 2048) | 0;
 _memcpy($$3$i$i632 + 22580 | 0, 5127384, 2048) | 0;
 _memcpy($$3$i$i632 + 24628 | 0, 5129432, 2048) | 0;
 _memcpy($$3$i$i632 + 26676 | 0, 5131480, 2048) | 0;
 _memcpy($$3$i$i632 + 28724 | 0, 5133528, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $54);
 if ($$3$i$i632 | 0) {
  $12929 = $$3$i$i632 + 5 | 0;
  $12931 = (HEAP8[$12929 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12929 >> 0] = $12931;
  if (!($12931 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i632);
  HEAP32[$54 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3482 >> 1] = 720;
 HEAP16[$3483 >> 1] = 1023;
 HEAP16[$3484 >> 1] = 734;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 804; else {
  $12935 = HEAP32[915090] | 0;
  if (($12935 | 0) == (HEAP32[915088] | 0)) label = 804; else {
   $$lcssa$i$i644 = 3660360;
   $$lcssa8$i$i643 = $12935;
   label = 805;
  }
 }
 do if ((label | 0) == 804) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12942 = HEAP32[915096] | 0;
   if (($12942 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i644 = 3660384;
    $$lcssa8$i$i643 = $12942;
    label = 805;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $12947 = HEAP32[915102] | 0;
   if (($12947 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i644 = 3660408;
    $$lcssa8$i$i643 = $12947;
    label = 805;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $12952 = HEAP32[915108] | 0;
   if (($12952 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i644 = 3660432;
    $$lcssa8$i$i643 = $12952;
    label = 805;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $12957 = HEAP32[915114] | 0;
   if (($12957 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i644 = 3660456;
    $$lcssa8$i$i643 = $12957;
    label = 805;
    break;
   }
  }
  $$3$i$i645 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 805) {
  $12940 = $$lcssa8$i$i643 + -4 | 0;
  HEAP32[$$lcssa$i$i644 >> 2] = $12940;
  $$3$i$i645 = HEAP32[$12940 >> 2] | 0;
 }
 $12961 = $$3$i$i645 + 52 | 0;
 HEAP16[$$3$i$i645 >> 1] = 1024;
 HEAP16[$$3$i$i645 + 2 >> 1] = 15;
 HEAP8[$$3$i$i645 + 4 >> 0] = 16;
 HEAP8[$$3$i$i645 + 5 >> 0] = 1;
 HEAP32[$$3$i$i645 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i645 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i645 + 16 >> 2] = $12961;
 HEAP32[$$3$i$i645 + 20 >> 2] = 0;
 HEAP32[$$3$i$i645 + 24 >> 2] = 0;
 HEAP8[$$3$i$i645 + 48 >> 0] = 0;
 HEAP32[$55 >> 2] = $$3$i$i645;
 _memcpy($12961 | 0, 5135576, 2048) | 0;
 _memcpy($$3$i$i645 + 2100 | 0, 5137624, 2048) | 0;
 _memcpy($$3$i$i645 + 4148 | 0, 5139672, 2048) | 0;
 _memcpy($$3$i$i645 + 6196 | 0, 5141720, 2048) | 0;
 _memcpy($$3$i$i645 + 8244 | 0, 5143768, 2048) | 0;
 _memcpy($$3$i$i645 + 10292 | 0, 5145816, 2048) | 0;
 _memcpy($$3$i$i645 + 12340 | 0, 5147864, 2048) | 0;
 _memcpy($$3$i$i645 + 14388 | 0, 5149912, 2048) | 0;
 _memcpy($$3$i$i645 + 16436 | 0, 5151960, 2048) | 0;
 _memcpy($$3$i$i645 + 18484 | 0, 5154008, 2048) | 0;
 _memcpy($$3$i$i645 + 20532 | 0, 5156056, 2048) | 0;
 _memcpy($$3$i$i645 + 22580 | 0, 5158104, 2048) | 0;
 _memcpy($$3$i$i645 + 24628 | 0, 5160152, 2048) | 0;
 _memcpy($$3$i$i645 + 26676 | 0, 5162200, 2048) | 0;
 _memcpy($$3$i$i645 + 28724 | 0, 5164248, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $55);
 if ($$3$i$i645 | 0) {
  $12986 = $$3$i$i645 + 5 | 0;
  $12988 = (HEAP8[$12986 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$12986 >> 0] = $12988;
  if (!($12988 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i645);
  HEAP32[$55 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3485 >> 1] = 735;
 HEAP16[$3486 >> 1] = 1023;
 HEAP16[$3487 >> 1] = 749;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 820; else {
  $12992 = HEAP32[915090] | 0;
  if (($12992 | 0) == (HEAP32[915088] | 0)) label = 820; else {
   $$lcssa$i$i657 = 3660360;
   $$lcssa8$i$i656 = $12992;
   label = 821;
  }
 }
 do if ((label | 0) == 820) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $12999 = HEAP32[915096] | 0;
   if (($12999 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i657 = 3660384;
    $$lcssa8$i$i656 = $12999;
    label = 821;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $13004 = HEAP32[915102] | 0;
   if (($13004 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i657 = 3660408;
    $$lcssa8$i$i656 = $13004;
    label = 821;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $13009 = HEAP32[915108] | 0;
   if (($13009 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i657 = 3660432;
    $$lcssa8$i$i656 = $13009;
    label = 821;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $13014 = HEAP32[915114] | 0;
   if (($13014 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i657 = 3660456;
    $$lcssa8$i$i656 = $13014;
    label = 821;
    break;
   }
  }
  $$3$i$i658 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 821) {
  $12997 = $$lcssa8$i$i656 + -4 | 0;
  HEAP32[$$lcssa$i$i657 >> 2] = $12997;
  $$3$i$i658 = HEAP32[$12997 >> 2] | 0;
 }
 $13018 = $$3$i$i658 + 52 | 0;
 HEAP16[$$3$i$i658 >> 1] = 1024;
 HEAP16[$$3$i$i658 + 2 >> 1] = 15;
 HEAP8[$$3$i$i658 + 4 >> 0] = 16;
 HEAP8[$$3$i$i658 + 5 >> 0] = 1;
 HEAP32[$$3$i$i658 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i658 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i658 + 16 >> 2] = $13018;
 HEAP32[$$3$i$i658 + 20 >> 2] = 0;
 HEAP32[$$3$i$i658 + 24 >> 2] = 0;
 HEAP8[$$3$i$i658 + 48 >> 0] = 0;
 HEAP32[$56 >> 2] = $$3$i$i658;
 _memcpy($13018 | 0, 5166296, 2048) | 0;
 _memcpy($$3$i$i658 + 2100 | 0, 5168344, 2048) | 0;
 _memcpy($$3$i$i658 + 4148 | 0, 5170392, 2048) | 0;
 _memcpy($$3$i$i658 + 6196 | 0, 5172440, 2048) | 0;
 _memcpy($$3$i$i658 + 8244 | 0, 5174488, 2048) | 0;
 _memcpy($$3$i$i658 + 10292 | 0, 5176536, 2048) | 0;
 _memcpy($$3$i$i658 + 12340 | 0, 5178584, 2048) | 0;
 _memcpy($$3$i$i658 + 14388 | 0, 5180632, 2048) | 0;
 _memcpy($$3$i$i658 + 16436 | 0, 5182680, 2048) | 0;
 _memcpy($$3$i$i658 + 18484 | 0, 5184728, 2048) | 0;
 _memcpy($$3$i$i658 + 20532 | 0, 5186776, 2048) | 0;
 _memcpy($$3$i$i658 + 22580 | 0, 5188824, 2048) | 0;
 _memcpy($$3$i$i658 + 24628 | 0, 5190872, 2048) | 0;
 _memcpy($$3$i$i658 + 26676 | 0, 5192920, 2048) | 0;
 _memcpy($$3$i$i658 + 28724 | 0, 5194968, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $56);
 if ($$3$i$i658 | 0) {
  $13043 = $$3$i$i658 + 5 | 0;
  $13045 = (HEAP8[$13043 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$13043 >> 0] = $13045;
  if (!($13045 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i658);
  HEAP32[$56 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3488 >> 1] = 750;
 HEAP16[$3489 >> 1] = 1023;
 HEAP16[$3490 >> 1] = 764;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 836; else {
  $13049 = HEAP32[915090] | 0;
  if (($13049 | 0) == (HEAP32[915088] | 0)) label = 836; else {
   $$lcssa$i$i670 = 3660360;
   $$lcssa8$i$i669 = $13049;
   label = 837;
  }
 }
 do if ((label | 0) == 836) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $13056 = HEAP32[915096] | 0;
   if (($13056 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i670 = 3660384;
    $$lcssa8$i$i669 = $13056;
    label = 837;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $13061 = HEAP32[915102] | 0;
   if (($13061 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i670 = 3660408;
    $$lcssa8$i$i669 = $13061;
    label = 837;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $13066 = HEAP32[915108] | 0;
   if (($13066 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i670 = 3660432;
    $$lcssa8$i$i669 = $13066;
    label = 837;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $13071 = HEAP32[915114] | 0;
   if (($13071 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i670 = 3660456;
    $$lcssa8$i$i669 = $13071;
    label = 837;
    break;
   }
  }
  $$3$i$i671 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 837) {
  $13054 = $$lcssa8$i$i669 + -4 | 0;
  HEAP32[$$lcssa$i$i670 >> 2] = $13054;
  $$3$i$i671 = HEAP32[$13054 >> 2] | 0;
 }
 $13075 = $$3$i$i671 + 52 | 0;
 HEAP16[$$3$i$i671 >> 1] = 1024;
 HEAP16[$$3$i$i671 + 2 >> 1] = 15;
 HEAP8[$$3$i$i671 + 4 >> 0] = 16;
 HEAP8[$$3$i$i671 + 5 >> 0] = 1;
 HEAP32[$$3$i$i671 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i671 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i671 + 16 >> 2] = $13075;
 HEAP32[$$3$i$i671 + 20 >> 2] = 0;
 HEAP32[$$3$i$i671 + 24 >> 2] = 0;
 HEAP8[$$3$i$i671 + 48 >> 0] = 0;
 HEAP32[$57 >> 2] = $$3$i$i671;
 _memcpy($13075 | 0, 5197016, 2048) | 0;
 _memcpy($$3$i$i671 + 2100 | 0, 5199064, 2048) | 0;
 _memcpy($$3$i$i671 + 4148 | 0, 5201112, 2048) | 0;
 _memcpy($$3$i$i671 + 6196 | 0, 5203160, 2048) | 0;
 _memcpy($$3$i$i671 + 8244 | 0, 5205208, 2048) | 0;
 _memcpy($$3$i$i671 + 10292 | 0, 5207256, 2048) | 0;
 _memcpy($$3$i$i671 + 12340 | 0, 5209304, 2048) | 0;
 _memcpy($$3$i$i671 + 14388 | 0, 5211352, 2048) | 0;
 _memcpy($$3$i$i671 + 16436 | 0, 5213400, 2048) | 0;
 _memcpy($$3$i$i671 + 18484 | 0, 5215448, 2048) | 0;
 _memcpy($$3$i$i671 + 20532 | 0, 5217496, 2048) | 0;
 _memcpy($$3$i$i671 + 22580 | 0, 5219544, 2048) | 0;
 _memcpy($$3$i$i671 + 24628 | 0, 5221592, 2048) | 0;
 _memcpy($$3$i$i671 + 26676 | 0, 5223640, 2048) | 0;
 _memcpy($$3$i$i671 + 28724 | 0, 5225688, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $57);
 if ($$3$i$i671 | 0) {
  $13100 = $$3$i$i671 + 5 | 0;
  $13102 = (HEAP8[$13100 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$13100 >> 0] = $13102;
  if (!($13102 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i671);
  HEAP32[$57 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3491 >> 1] = 765;
 HEAP16[$3492 >> 1] = 1023;
 HEAP16[$3493 >> 1] = 767;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6196) label = 852; else {
  $13106 = HEAP32[915090] | 0;
  if (($13106 | 0) == (HEAP32[915088] | 0)) label = 852; else {
   $$lcssa$i$i683 = 3660360;
   $$lcssa8$i$i682 = $13106;
   label = 853;
  }
 }
 do if ((label | 0) == 852) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6196) {
   $13113 = HEAP32[915096] | 0;
   if (($13113 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i683 = 3660384;
    $$lcssa8$i$i682 = $13113;
    label = 853;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6196) {
   $13118 = HEAP32[915102] | 0;
   if (($13118 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i683 = 3660408;
    $$lcssa8$i$i682 = $13118;
    label = 853;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6196) {
   $13123 = HEAP32[915108] | 0;
   if (($13123 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i683 = 3660432;
    $$lcssa8$i$i682 = $13123;
    label = 853;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6196) {
   $13128 = HEAP32[915114] | 0;
   if (($13128 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i683 = 3660456;
    $$lcssa8$i$i682 = $13128;
    label = 853;
    break;
   }
  }
  $$3$i$i684 = __Znwj(6196) | 0;
 } while (0);
 if ((label | 0) == 853) {
  $13111 = $$lcssa8$i$i682 + -4 | 0;
  HEAP32[$$lcssa$i$i683 >> 2] = $13111;
  $$3$i$i684 = HEAP32[$13111 >> 2] | 0;
 }
 $13132 = $$3$i$i684 + 52 | 0;
 HEAP16[$$3$i$i684 >> 1] = 1024;
 HEAP16[$$3$i$i684 + 2 >> 1] = 3;
 HEAP8[$$3$i$i684 + 4 >> 0] = 16;
 HEAP8[$$3$i$i684 + 5 >> 0] = 1;
 HEAP32[$$3$i$i684 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i684 + 12 >> 2] = 6144;
 HEAP32[$$3$i$i684 + 16 >> 2] = $13132;
 HEAP32[$$3$i$i684 + 20 >> 2] = 0;
 HEAP32[$$3$i$i684 + 24 >> 2] = 0;
 HEAP8[$$3$i$i684 + 48 >> 0] = 0;
 HEAP32[$58 >> 2] = $$3$i$i684;
 _memcpy($13132 | 0, 5227736, 2048) | 0;
 _memcpy($$3$i$i684 + 2100 | 0, 5229784, 2048) | 0;
 _memcpy($$3$i$i684 + 4148 | 0, 5231832, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $58);
 if ($$3$i$i684 | 0) {
  $13145 = $$3$i$i684 + 5 | 0;
  $13147 = (HEAP8[$13145 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$13145 >> 0] = $13147;
  if (!($13147 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i684);
  HEAP32[$58 >> 2] = 0;
 }
 $13149 = $59;
 HEAP32[$13149 >> 2] = 327685;
 HEAP32[$13149 + 4 >> 2] = 1835164;
 HEAP32[$3494 >> 2] = 6895;
 HEAP16[$60 >> 1] = 5;
 HEAP16[$3495 >> 1] = 5;
 HEAP16[$3496 >> 1] = 156;
 HEAP16[$3497 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $59, $60);
 $13153 = $61;
 HEAP32[$13153 >> 2] = 327685;
 HEAP32[$13153 + 4 >> 2] = 1835164;
 HEAP32[$3498 >> 2] = 6895;
 HEAP16[$62 >> 1] = 5;
 HEAP16[$3499 >> 1] = 5;
 HEAP16[$3500 >> 1] = 156;
 HEAP16[$3501 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $61, $62);
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3502 >> 1] = 33;
 HEAP16[$3503 >> 1] = 1023;
 HEAP16[$3504 >> 1] = 47;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 868; else {
  $13159 = HEAP32[915090] | 0;
  if (($13159 | 0) == (HEAP32[915088] | 0)) label = 868; else {
   $$lcssa$i$i702 = 3660360;
   $$lcssa8$i$i701 = $13159;
   label = 869;
  }
 }
 do if ((label | 0) == 868) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $13166 = HEAP32[915096] | 0;
   if (($13166 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i702 = 3660384;
    $$lcssa8$i$i701 = $13166;
    label = 869;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $13171 = HEAP32[915102] | 0;
   if (($13171 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i702 = 3660408;
    $$lcssa8$i$i701 = $13171;
    label = 869;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $13176 = HEAP32[915108] | 0;
   if (($13176 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i702 = 3660432;
    $$lcssa8$i$i701 = $13176;
    label = 869;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $13181 = HEAP32[915114] | 0;
   if (($13181 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i702 = 3660456;
    $$lcssa8$i$i701 = $13181;
    label = 869;
    break;
   }
  }
  $$3$i$i703 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 869) {
  $13164 = $$lcssa8$i$i701 + -4 | 0;
  HEAP32[$$lcssa$i$i702 >> 2] = $13164;
  $$3$i$i703 = HEAP32[$13164 >> 2] | 0;
 }
 $13185 = $$3$i$i703 + 52 | 0;
 HEAP16[$$3$i$i703 >> 1] = 1024;
 HEAP16[$$3$i$i703 + 2 >> 1] = 15;
 HEAP8[$$3$i$i703 + 4 >> 0] = 16;
 HEAP8[$$3$i$i703 + 5 >> 0] = 1;
 HEAP32[$$3$i$i703 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i703 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i703 + 16 >> 2] = $13185;
 HEAP32[$$3$i$i703 + 20 >> 2] = 0;
 HEAP32[$$3$i$i703 + 24 >> 2] = 0;
 HEAP8[$$3$i$i703 + 48 >> 0] = 0;
 HEAP32[$63 >> 2] = $$3$i$i703;
 _memcpy($13185 | 0, 10218, 2048) | 0;
 _memcpy($$3$i$i703 + 2100 | 0, 12266, 2048) | 0;
 _memcpy($$3$i$i703 + 4148 | 0, 14314, 2048) | 0;
 _memcpy($$3$i$i703 + 6196 | 0, 16362, 2048) | 0;
 _memcpy($$3$i$i703 + 8244 | 0, 18410, 2048) | 0;
 _memcpy($$3$i$i703 + 10292 | 0, 20458, 2048) | 0;
 _memcpy($$3$i$i703 + 12340 | 0, 22506, 2048) | 0;
 _memcpy($$3$i$i703 + 14388 | 0, 24554, 2048) | 0;
 _memcpy($$3$i$i703 + 16436 | 0, 26602, 2048) | 0;
 _memcpy($$3$i$i703 + 18484 | 0, 28650, 2048) | 0;
 _memcpy($$3$i$i703 + 20532 | 0, 30698, 2048) | 0;
 _memcpy($$3$i$i703 + 22580 | 0, 32746, 2048) | 0;
 _memcpy($$3$i$i703 + 24628 | 0, 34794, 2048) | 0;
 _memcpy($$3$i$i703 + 26676 | 0, 36842, 2048) | 0;
 _memcpy($$3$i$i703 + 28724 | 0, 38890, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $63);
 if ($$3$i$i703 | 0) {
  $13210 = $$3$i$i703 + 5 | 0;
  $13212 = (HEAP8[$13210 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$13210 >> 0] = $13212;
  if (!($13212 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i703);
  HEAP32[$63 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3505 >> 1] = 48;
 HEAP16[$3506 >> 1] = 1023;
 HEAP16[$3507 >> 1] = 62;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 884; else {
  $13216 = HEAP32[915090] | 0;
  if (($13216 | 0) == (HEAP32[915088] | 0)) label = 884; else {
   $$lcssa$i$i715 = 3660360;
   $$lcssa8$i$i714 = $13216;
   label = 885;
  }
 }
 do if ((label | 0) == 884) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $13223 = HEAP32[915096] | 0;
   if (($13223 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i715 = 3660384;
    $$lcssa8$i$i714 = $13223;
    label = 885;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $13228 = HEAP32[915102] | 0;
   if (($13228 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i715 = 3660408;
    $$lcssa8$i$i714 = $13228;
    label = 885;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $13233 = HEAP32[915108] | 0;
   if (($13233 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i715 = 3660432;
    $$lcssa8$i$i714 = $13233;
    label = 885;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $13238 = HEAP32[915114] | 0;
   if (($13238 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i715 = 3660456;
    $$lcssa8$i$i714 = $13238;
    label = 885;
    break;
   }
  }
  $$3$i$i716 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 885) {
  $13221 = $$lcssa8$i$i714 + -4 | 0;
  HEAP32[$$lcssa$i$i715 >> 2] = $13221;
  $$3$i$i716 = HEAP32[$13221 >> 2] | 0;
 }
 $13242 = $$3$i$i716 + 52 | 0;
 HEAP16[$$3$i$i716 >> 1] = 1024;
 HEAP16[$$3$i$i716 + 2 >> 1] = 15;
 HEAP8[$$3$i$i716 + 4 >> 0] = 16;
 HEAP8[$$3$i$i716 + 5 >> 0] = 1;
 HEAP32[$$3$i$i716 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i716 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i716 + 16 >> 2] = $13242;
 HEAP32[$$3$i$i716 + 20 >> 2] = 0;
 HEAP32[$$3$i$i716 + 24 >> 2] = 0;
 HEAP8[$$3$i$i716 + 48 >> 0] = 0;
 HEAP32[$64 >> 2] = $$3$i$i716;
 _memcpy($13242 | 0, 40938, 2048) | 0;
 _memcpy($$3$i$i716 + 2100 | 0, 42986, 2048) | 0;
 _memcpy($$3$i$i716 + 4148 | 0, 45034, 2048) | 0;
 _memcpy($$3$i$i716 + 6196 | 0, 47082, 2048) | 0;
 _memcpy($$3$i$i716 + 8244 | 0, 49130, 2048) | 0;
 _memcpy($$3$i$i716 + 10292 | 0, 51178, 2048) | 0;
 _memcpy($$3$i$i716 + 12340 | 0, 53226, 2048) | 0;
 _memcpy($$3$i$i716 + 14388 | 0, 55274, 2048) | 0;
 _memcpy($$3$i$i716 + 16436 | 0, 57322, 2048) | 0;
 _memcpy($$3$i$i716 + 18484 | 0, 59370, 2048) | 0;
 _memcpy($$3$i$i716 + 20532 | 0, 61418, 2048) | 0;
 _memcpy($$3$i$i716 + 22580 | 0, 63466, 2048) | 0;
 _memcpy($$3$i$i716 + 24628 | 0, 65514, 2048) | 0;
 _memcpy($$3$i$i716 + 26676 | 0, 67562, 2048) | 0;
 _memcpy($$3$i$i716 + 28724 | 0, 69610, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $64);
 if ($$3$i$i716 | 0) {
  $13267 = $$3$i$i716 + 5 | 0;
  $13269 = (HEAP8[$13267 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$13267 >> 0] = $13269;
  if (!($13269 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i716);
  HEAP32[$64 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3508 >> 1] = 63;
 HEAP16[$3509 >> 1] = 1023;
 HEAP16[$3510 >> 1] = 77;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 900; else {
  $13273 = HEAP32[915090] | 0;
  if (($13273 | 0) == (HEAP32[915088] | 0)) label = 900; else {
   $$lcssa$i$i728 = 3660360;
   $$lcssa8$i$i727 = $13273;
   label = 901;
  }
 }
 do if ((label | 0) == 900) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $13280 = HEAP32[915096] | 0;
   if (($13280 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i728 = 3660384;
    $$lcssa8$i$i727 = $13280;
    label = 901;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $13285 = HEAP32[915102] | 0;
   if (($13285 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i728 = 3660408;
    $$lcssa8$i$i727 = $13285;
    label = 901;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $13290 = HEAP32[915108] | 0;
   if (($13290 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i728 = 3660432;
    $$lcssa8$i$i727 = $13290;
    label = 901;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $13295 = HEAP32[915114] | 0;
   if (($13295 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i728 = 3660456;
    $$lcssa8$i$i727 = $13295;
    label = 901;
    break;
   }
  }
  $$3$i$i729 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 901) {
  $13278 = $$lcssa8$i$i727 + -4 | 0;
  HEAP32[$$lcssa$i$i728 >> 2] = $13278;
  $$3$i$i729 = HEAP32[$13278 >> 2] | 0;
 }
 $13299 = $$3$i$i729 + 52 | 0;
 HEAP16[$$3$i$i729 >> 1] = 1024;
 HEAP16[$$3$i$i729 + 2 >> 1] = 15;
 HEAP8[$$3$i$i729 + 4 >> 0] = 16;
 HEAP8[$$3$i$i729 + 5 >> 0] = 1;
 HEAP32[$$3$i$i729 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i729 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i729 + 16 >> 2] = $13299;
 HEAP32[$$3$i$i729 + 20 >> 2] = 0;
 HEAP32[$$3$i$i729 + 24 >> 2] = 0;
 HEAP8[$$3$i$i729 + 48 >> 0] = 0;
 HEAP32[$65 >> 2] = $$3$i$i729;
 _memcpy($13299 | 0, 71658, 2048) | 0;
 _memcpy($$3$i$i729 + 2100 | 0, 73706, 2048) | 0;
 _memcpy($$3$i$i729 + 4148 | 0, 75754, 2048) | 0;
 _memcpy($$3$i$i729 + 6196 | 0, 77802, 2048) | 0;
 _memcpy($$3$i$i729 + 8244 | 0, 79850, 2048) | 0;
 _memcpy($$3$i$i729 + 10292 | 0, 81898, 2048) | 0;
 _memcpy($$3$i$i729 + 12340 | 0, 83946, 2048) | 0;
 _memcpy($$3$i$i729 + 14388 | 0, 85994, 2048) | 0;
 _memcpy($$3$i$i729 + 16436 | 0, 88042, 2048) | 0;
 _memcpy($$3$i$i729 + 18484 | 0, 90090, 2048) | 0;
 _memcpy($$3$i$i729 + 20532 | 0, 92138, 2048) | 0;
 _memcpy($$3$i$i729 + 22580 | 0, 94186, 2048) | 0;
 _memcpy($$3$i$i729 + 24628 | 0, 96234, 2048) | 0;
 _memcpy($$3$i$i729 + 26676 | 0, 98282, 2048) | 0;
 _memcpy($$3$i$i729 + 28724 | 0, 100330, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $65);
 if ($$3$i$i729 | 0) {
  $13324 = $$3$i$i729 + 5 | 0;
  $13326 = (HEAP8[$13324 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$13324 >> 0] = $13326;
  if (!($13326 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i729);
  HEAP32[$65 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3511 >> 1] = 78;
 HEAP16[$3512 >> 1] = 1023;
 HEAP16[$3513 >> 1] = 92;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 916; else {
  $13330 = HEAP32[915090] | 0;
  if (($13330 | 0) == (HEAP32[915088] | 0)) label = 916; else {
   $$lcssa$i$i741 = 3660360;
   $$lcssa8$i$i740 = $13330;
   label = 917;
  }
 }
 do if ((label | 0) == 916) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $13337 = HEAP32[915096] | 0;
   if (($13337 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i741 = 3660384;
    $$lcssa8$i$i740 = $13337;
    label = 917;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $13342 = HEAP32[915102] | 0;
   if (($13342 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i741 = 3660408;
    $$lcssa8$i$i740 = $13342;
    label = 917;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $13347 = HEAP32[915108] | 0;
   if (($13347 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i741 = 3660432;
    $$lcssa8$i$i740 = $13347;
    label = 917;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $13352 = HEAP32[915114] | 0;
   if (($13352 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i741 = 3660456;
    $$lcssa8$i$i740 = $13352;
    label = 917;
    break;
   }
  }
  $$3$i$i742 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 917) {
  $13335 = $$lcssa8$i$i740 + -4 | 0;
  HEAP32[$$lcssa$i$i741 >> 2] = $13335;
  $$3$i$i742 = HEAP32[$13335 >> 2] | 0;
 }
 $13356 = $$3$i$i742 + 52 | 0;
 HEAP16[$$3$i$i742 >> 1] = 1024;
 HEAP16[$$3$i$i742 + 2 >> 1] = 15;
 HEAP8[$$3$i$i742 + 4 >> 0] = 16;
 HEAP8[$$3$i$i742 + 5 >> 0] = 1;
 HEAP32[$$3$i$i742 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i742 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i742 + 16 >> 2] = $13356;
 HEAP32[$$3$i$i742 + 20 >> 2] = 0;
 HEAP32[$$3$i$i742 + 24 >> 2] = 0;
 HEAP8[$$3$i$i742 + 48 >> 0] = 0;
 HEAP32[$66 >> 2] = $$3$i$i742;
 _memcpy($13356 | 0, 102378, 2048) | 0;
 _memcpy($$3$i$i742 + 2100 | 0, 104426, 2048) | 0;
 _memcpy($$3$i$i742 + 4148 | 0, 106474, 2048) | 0;
 _memcpy($$3$i$i742 + 6196 | 0, 108522, 2048) | 0;
 _memcpy($$3$i$i742 + 8244 | 0, 110570, 2048) | 0;
 _memcpy($$3$i$i742 + 10292 | 0, 112618, 2048) | 0;
 _memcpy($$3$i$i742 + 12340 | 0, 114666, 2048) | 0;
 _memcpy($$3$i$i742 + 14388 | 0, 116714, 2048) | 0;
 _memcpy($$3$i$i742 + 16436 | 0, 118762, 2048) | 0;
 _memcpy($$3$i$i742 + 18484 | 0, 120810, 2048) | 0;
 _memcpy($$3$i$i742 + 20532 | 0, 122858, 2048) | 0;
 _memcpy($$3$i$i742 + 22580 | 0, 124906, 2048) | 0;
 _memcpy($$3$i$i742 + 24628 | 0, 126954, 2048) | 0;
 _memcpy($$3$i$i742 + 26676 | 0, 129002, 2048) | 0;
 _memcpy($$3$i$i742 + 28724 | 0, 131050, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $66);
 if ($$3$i$i742 | 0) {
  $13381 = $$3$i$i742 + 5 | 0;
  $13383 = (HEAP8[$13381 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$13381 >> 0] = $13383;
  if (!($13383 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i742);
  HEAP32[$66 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3514 >> 1] = 93;
 HEAP16[$3515 >> 1] = 1023;
 HEAP16[$3516 >> 1] = 107;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 932; else {
  $13387 = HEAP32[915090] | 0;
  if (($13387 | 0) == (HEAP32[915088] | 0)) label = 932; else {
   $$lcssa$i$i754 = 3660360;
   $$lcssa8$i$i753 = $13387;
   label = 933;
  }
 }
 do if ((label | 0) == 932) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $13394 = HEAP32[915096] | 0;
   if (($13394 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i754 = 3660384;
    $$lcssa8$i$i753 = $13394;
    label = 933;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $13399 = HEAP32[915102] | 0;
   if (($13399 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i754 = 3660408;
    $$lcssa8$i$i753 = $13399;
    label = 933;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $13404 = HEAP32[915108] | 0;
   if (($13404 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i754 = 3660432;
    $$lcssa8$i$i753 = $13404;
    label = 933;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $13409 = HEAP32[915114] | 0;
   if (($13409 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i754 = 3660456;
    $$lcssa8$i$i753 = $13409;
    label = 933;
    break;
   }
  }
  $$3$i$i755 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 933) {
  $13392 = $$lcssa8$i$i753 + -4 | 0;
  HEAP32[$$lcssa$i$i754 >> 2] = $13392;
  $$3$i$i755 = HEAP32[$13392 >> 2] | 0;
 }
 $13413 = $$3$i$i755 + 52 | 0;
 HEAP16[$$3$i$i755 >> 1] = 1024;
 HEAP16[$$3$i$i755 + 2 >> 1] = 15;
 HEAP8[$$3$i$i755 + 4 >> 0] = 16;
 HEAP8[$$3$i$i755 + 5 >> 0] = 1;
 HEAP32[$$3$i$i755 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i755 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i755 + 16 >> 2] = $13413;
 HEAP32[$$3$i$i755 + 20 >> 2] = 0;
 HEAP32[$$3$i$i755 + 24 >> 2] = 0;
 HEAP8[$$3$i$i755 + 48 >> 0] = 0;
 HEAP32[$67 >> 2] = $$3$i$i755;
 _memcpy($13413 | 0, 133098, 2048) | 0;
 _memcpy($$3$i$i755 + 2100 | 0, 135146, 2048) | 0;
 _memcpy($$3$i$i755 + 4148 | 0, 137194, 2048) | 0;
 _memcpy($$3$i$i755 + 6196 | 0, 139242, 2048) | 0;
 _memcpy($$3$i$i755 + 8244 | 0, 141290, 2048) | 0;
 _memcpy($$3$i$i755 + 10292 | 0, 143338, 2048) | 0;
 _memcpy($$3$i$i755 + 12340 | 0, 145386, 2048) | 0;
 _memcpy($$3$i$i755 + 14388 | 0, 147434, 2048) | 0;
 _memcpy($$3$i$i755 + 16436 | 0, 149482, 2048) | 0;
 _memcpy($$3$i$i755 + 18484 | 0, 151530, 2048) | 0;
 _memcpy($$3$i$i755 + 20532 | 0, 153578, 2048) | 0;
 _memcpy($$3$i$i755 + 22580 | 0, 155626, 2048) | 0;
 _memcpy($$3$i$i755 + 24628 | 0, 157674, 2048) | 0;
 _memcpy($$3$i$i755 + 26676 | 0, 159722, 2048) | 0;
 _memcpy($$3$i$i755 + 28724 | 0, 161770, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $67);
 if ($$3$i$i755 | 0) {
  $13438 = $$3$i$i755 + 5 | 0;
  $13440 = (HEAP8[$13438 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$13438 >> 0] = $13440;
  if (!($13440 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i755);
  HEAP32[$67 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3517 >> 1] = 108;
 HEAP16[$3518 >> 1] = 1023;
 HEAP16[$3519 >> 1] = 122;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 948; else {
  $13444 = HEAP32[915090] | 0;
  if (($13444 | 0) == (HEAP32[915088] | 0)) label = 948; else {
   $$lcssa$i$i767 = 3660360;
   $$lcssa8$i$i766 = $13444;
   label = 949;
  }
 }
 do if ((label | 0) == 948) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $13451 = HEAP32[915096] | 0;
   if (($13451 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i767 = 3660384;
    $$lcssa8$i$i766 = $13451;
    label = 949;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $13456 = HEAP32[915102] | 0;
   if (($13456 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i767 = 3660408;
    $$lcssa8$i$i766 = $13456;
    label = 949;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $13461 = HEAP32[915108] | 0;
   if (($13461 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i767 = 3660432;
    $$lcssa8$i$i766 = $13461;
    label = 949;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $13466 = HEAP32[915114] | 0;
   if (($13466 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i767 = 3660456;
    $$lcssa8$i$i766 = $13466;
    label = 949;
    break;
   }
  }
  $$3$i$i768 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 949) {
  $13449 = $$lcssa8$i$i766 + -4 | 0;
  HEAP32[$$lcssa$i$i767 >> 2] = $13449;
  $$3$i$i768 = HEAP32[$13449 >> 2] | 0;
 }
 $13470 = $$3$i$i768 + 52 | 0;
 HEAP16[$$3$i$i768 >> 1] = 1024;
 HEAP16[$$3$i$i768 + 2 >> 1] = 15;
 HEAP8[$$3$i$i768 + 4 >> 0] = 16;
 HEAP8[$$3$i$i768 + 5 >> 0] = 1;
 HEAP32[$$3$i$i768 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i768 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i768 + 16 >> 2] = $13470;
 HEAP32[$$3$i$i768 + 20 >> 2] = 0;
 HEAP32[$$3$i$i768 + 24 >> 2] = 0;
 HEAP8[$$3$i$i768 + 48 >> 0] = 0;
 HEAP32[$68 >> 2] = $$3$i$i768;
 _memcpy($13470 | 0, 163818, 2048) | 0;
 _memcpy($$3$i$i768 + 2100 | 0, 165866, 2048) | 0;
 _memcpy($$3$i$i768 + 4148 | 0, 167914, 2048) | 0;
 _memcpy($$3$i$i768 + 6196 | 0, 169962, 2048) | 0;
 _memcpy($$3$i$i768 + 8244 | 0, 172010, 2048) | 0;
 _memcpy($$3$i$i768 + 10292 | 0, 174058, 2048) | 0;
 _memcpy($$3$i$i768 + 12340 | 0, 176106, 2048) | 0;
 _memcpy($$3$i$i768 + 14388 | 0, 178154, 2048) | 0;
 _memcpy($$3$i$i768 + 16436 | 0, 180202, 2048) | 0;
 _memcpy($$3$i$i768 + 18484 | 0, 182250, 2048) | 0;
 _memcpy($$3$i$i768 + 20532 | 0, 184298, 2048) | 0;
 _memcpy($$3$i$i768 + 22580 | 0, 186346, 2048) | 0;
 _memcpy($$3$i$i768 + 24628 | 0, 188394, 2048) | 0;
 _memcpy($$3$i$i768 + 26676 | 0, 190442, 2048) | 0;
 _memcpy($$3$i$i768 + 28724 | 0, 192490, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $68);
 if ($$3$i$i768 | 0) {
  $13495 = $$3$i$i768 + 5 | 0;
  $13497 = (HEAP8[$13495 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$13495 >> 0] = $13497;
  if (!($13497 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i768);
  HEAP32[$68 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3520 >> 1] = 123;
 HEAP16[$3521 >> 1] = 1023;
 HEAP16[$3522 >> 1] = 137;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 964; else {
  $13501 = HEAP32[915090] | 0;
  if (($13501 | 0) == (HEAP32[915088] | 0)) label = 964; else {
   $$lcssa$i$i780 = 3660360;
   $$lcssa8$i$i779 = $13501;
   label = 965;
  }
 }
 do if ((label | 0) == 964) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $13508 = HEAP32[915096] | 0;
   if (($13508 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i780 = 3660384;
    $$lcssa8$i$i779 = $13508;
    label = 965;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $13513 = HEAP32[915102] | 0;
   if (($13513 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i780 = 3660408;
    $$lcssa8$i$i779 = $13513;
    label = 965;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $13518 = HEAP32[915108] | 0;
   if (($13518 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i780 = 3660432;
    $$lcssa8$i$i779 = $13518;
    label = 965;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $13523 = HEAP32[915114] | 0;
   if (($13523 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i780 = 3660456;
    $$lcssa8$i$i779 = $13523;
    label = 965;
    break;
   }
  }
  $$3$i$i781 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 965) {
  $13506 = $$lcssa8$i$i779 + -4 | 0;
  HEAP32[$$lcssa$i$i780 >> 2] = $13506;
  $$3$i$i781 = HEAP32[$13506 >> 2] | 0;
 }
 $13527 = $$3$i$i781 + 52 | 0;
 HEAP16[$$3$i$i781 >> 1] = 1024;
 HEAP16[$$3$i$i781 + 2 >> 1] = 15;
 HEAP8[$$3$i$i781 + 4 >> 0] = 16;
 HEAP8[$$3$i$i781 + 5 >> 0] = 1;
 HEAP32[$$3$i$i781 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i781 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i781 + 16 >> 2] = $13527;
 HEAP32[$$3$i$i781 + 20 >> 2] = 0;
 HEAP32[$$3$i$i781 + 24 >> 2] = 0;
 HEAP8[$$3$i$i781 + 48 >> 0] = 0;
 HEAP32[$69 >> 2] = $$3$i$i781;
 _memcpy($13527 | 0, 194538, 2048) | 0;
 _memcpy($$3$i$i781 + 2100 | 0, 196586, 2048) | 0;
 _memcpy($$3$i$i781 + 4148 | 0, 198634, 2048) | 0;
 _memcpy($$3$i$i781 + 6196 | 0, 200682, 2048) | 0;
 _memcpy($$3$i$i781 + 8244 | 0, 202730, 2048) | 0;
 _memcpy($$3$i$i781 + 10292 | 0, 204778, 2048) | 0;
 _memcpy($$3$i$i781 + 12340 | 0, 206826, 2048) | 0;
 _memcpy($$3$i$i781 + 14388 | 0, 208874, 2048) | 0;
 _memcpy($$3$i$i781 + 16436 | 0, 210922, 2048) | 0;
 _memcpy($$3$i$i781 + 18484 | 0, 212970, 2048) | 0;
 _memcpy($$3$i$i781 + 20532 | 0, 215018, 2048) | 0;
 _memcpy($$3$i$i781 + 22580 | 0, 217066, 2048) | 0;
 _memcpy($$3$i$i781 + 24628 | 0, 219114, 2048) | 0;
 _memcpy($$3$i$i781 + 26676 | 0, 221162, 2048) | 0;
 _memcpy($$3$i$i781 + 28724 | 0, 223210, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $69);
 if ($$3$i$i781 | 0) {
  $13552 = $$3$i$i781 + 5 | 0;
  $13554 = (HEAP8[$13552 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$13552 >> 0] = $13554;
  if (!($13554 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i781);
  HEAP32[$69 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3523 >> 1] = 138;
 HEAP16[$3524 >> 1] = 1023;
 HEAP16[$3525 >> 1] = 152;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 980; else {
  $13558 = HEAP32[915090] | 0;
  if (($13558 | 0) == (HEAP32[915088] | 0)) label = 980; else {
   $$lcssa$i$i793 = 3660360;
   $$lcssa8$i$i792 = $13558;
   label = 981;
  }
 }
 do if ((label | 0) == 980) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $13565 = HEAP32[915096] | 0;
   if (($13565 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i793 = 3660384;
    $$lcssa8$i$i792 = $13565;
    label = 981;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $13570 = HEAP32[915102] | 0;
   if (($13570 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i793 = 3660408;
    $$lcssa8$i$i792 = $13570;
    label = 981;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $13575 = HEAP32[915108] | 0;
   if (($13575 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i793 = 3660432;
    $$lcssa8$i$i792 = $13575;
    label = 981;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $13580 = HEAP32[915114] | 0;
   if (($13580 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i793 = 3660456;
    $$lcssa8$i$i792 = $13580;
    label = 981;
    break;
   }
  }
  $$3$i$i794 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 981) {
  $13563 = $$lcssa8$i$i792 + -4 | 0;
  HEAP32[$$lcssa$i$i793 >> 2] = $13563;
  $$3$i$i794 = HEAP32[$13563 >> 2] | 0;
 }
 $13584 = $$3$i$i794 + 52 | 0;
 HEAP16[$$3$i$i794 >> 1] = 1024;
 HEAP16[$$3$i$i794 + 2 >> 1] = 15;
 HEAP8[$$3$i$i794 + 4 >> 0] = 16;
 HEAP8[$$3$i$i794 + 5 >> 0] = 1;
 HEAP32[$$3$i$i794 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i794 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i794 + 16 >> 2] = $13584;
 HEAP32[$$3$i$i794 + 20 >> 2] = 0;
 HEAP32[$$3$i$i794 + 24 >> 2] = 0;
 HEAP8[$$3$i$i794 + 48 >> 0] = 0;
 HEAP32[$70 >> 2] = $$3$i$i794;
 _memcpy($13584 | 0, 225258, 2048) | 0;
 _memcpy($$3$i$i794 + 2100 | 0, 227306, 2048) | 0;
 _memcpy($$3$i$i794 + 4148 | 0, 229354, 2048) | 0;
 _memcpy($$3$i$i794 + 6196 | 0, 231402, 2048) | 0;
 _memcpy($$3$i$i794 + 8244 | 0, 233450, 2048) | 0;
 _memcpy($$3$i$i794 + 10292 | 0, 235498, 2048) | 0;
 _memcpy($$3$i$i794 + 12340 | 0, 237546, 2048) | 0;
 _memcpy($$3$i$i794 + 14388 | 0, 239594, 2048) | 0;
 _memcpy($$3$i$i794 + 16436 | 0, 241642, 2048) | 0;
 _memcpy($$3$i$i794 + 18484 | 0, 243690, 2048) | 0;
 _memcpy($$3$i$i794 + 20532 | 0, 245738, 2048) | 0;
 _memcpy($$3$i$i794 + 22580 | 0, 247786, 2048) | 0;
 _memcpy($$3$i$i794 + 24628 | 0, 249834, 2048) | 0;
 _memcpy($$3$i$i794 + 26676 | 0, 251882, 2048) | 0;
 _memcpy($$3$i$i794 + 28724 | 0, 253930, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $70);
 if ($$3$i$i794 | 0) {
  $13609 = $$3$i$i794 + 5 | 0;
  $13611 = (HEAP8[$13609 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$13609 >> 0] = $13611;
  if (!($13611 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i794);
  HEAP32[$70 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3526 >> 1] = 153;
 HEAP16[$3527 >> 1] = 1023;
 HEAP16[$3528 >> 1] = 167;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 996; else {
  $13615 = HEAP32[915090] | 0;
  if (($13615 | 0) == (HEAP32[915088] | 0)) label = 996; else {
   $$lcssa$i$i806 = 3660360;
   $$lcssa8$i$i805 = $13615;
   label = 997;
  }
 }
 do if ((label | 0) == 996) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $13622 = HEAP32[915096] | 0;
   if (($13622 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i806 = 3660384;
    $$lcssa8$i$i805 = $13622;
    label = 997;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $13627 = HEAP32[915102] | 0;
   if (($13627 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i806 = 3660408;
    $$lcssa8$i$i805 = $13627;
    label = 997;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $13632 = HEAP32[915108] | 0;
   if (($13632 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i806 = 3660432;
    $$lcssa8$i$i805 = $13632;
    label = 997;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $13637 = HEAP32[915114] | 0;
   if (($13637 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i806 = 3660456;
    $$lcssa8$i$i805 = $13637;
    label = 997;
    break;
   }
  }
  $$3$i$i807 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 997) {
  $13620 = $$lcssa8$i$i805 + -4 | 0;
  HEAP32[$$lcssa$i$i806 >> 2] = $13620;
  $$3$i$i807 = HEAP32[$13620 >> 2] | 0;
 }
 $13641 = $$3$i$i807 + 52 | 0;
 HEAP16[$$3$i$i807 >> 1] = 1024;
 HEAP16[$$3$i$i807 + 2 >> 1] = 15;
 HEAP8[$$3$i$i807 + 4 >> 0] = 16;
 HEAP8[$$3$i$i807 + 5 >> 0] = 1;
 HEAP32[$$3$i$i807 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i807 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i807 + 16 >> 2] = $13641;
 HEAP32[$$3$i$i807 + 20 >> 2] = 0;
 HEAP32[$$3$i$i807 + 24 >> 2] = 0;
 HEAP8[$$3$i$i807 + 48 >> 0] = 0;
 HEAP32[$71 >> 2] = $$3$i$i807;
 _memcpy($13641 | 0, 255978, 2048) | 0;
 _memcpy($$3$i$i807 + 2100 | 0, 258026, 2048) | 0;
 _memcpy($$3$i$i807 + 4148 | 0, 260074, 2048) | 0;
 _memcpy($$3$i$i807 + 6196 | 0, 262122, 2048) | 0;
 _memcpy($$3$i$i807 + 8244 | 0, 264170, 2048) | 0;
 _memcpy($$3$i$i807 + 10292 | 0, 266218, 2048) | 0;
 _memcpy($$3$i$i807 + 12340 | 0, 268266, 2048) | 0;
 _memcpy($$3$i$i807 + 14388 | 0, 270314, 2048) | 0;
 _memcpy($$3$i$i807 + 16436 | 0, 272362, 2048) | 0;
 _memcpy($$3$i$i807 + 18484 | 0, 274410, 2048) | 0;
 _memcpy($$3$i$i807 + 20532 | 0, 276458, 2048) | 0;
 _memcpy($$3$i$i807 + 22580 | 0, 278506, 2048) | 0;
 _memcpy($$3$i$i807 + 24628 | 0, 280554, 2048) | 0;
 _memcpy($$3$i$i807 + 26676 | 0, 282602, 2048) | 0;
 _memcpy($$3$i$i807 + 28724 | 0, 284650, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $71);
 if ($$3$i$i807 | 0) {
  $13666 = $$3$i$i807 + 5 | 0;
  $13668 = (HEAP8[$13666 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$13666 >> 0] = $13668;
  if (!($13668 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i807);
  HEAP32[$71 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3529 >> 1] = 168;
 HEAP16[$3530 >> 1] = 1023;
 HEAP16[$3531 >> 1] = 182;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1012; else {
  $13672 = HEAP32[915090] | 0;
  if (($13672 | 0) == (HEAP32[915088] | 0)) label = 1012; else {
   $$lcssa$i$i819 = 3660360;
   $$lcssa8$i$i818 = $13672;
   label = 1013;
  }
 }
 do if ((label | 0) == 1012) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $13679 = HEAP32[915096] | 0;
   if (($13679 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i819 = 3660384;
    $$lcssa8$i$i818 = $13679;
    label = 1013;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $13684 = HEAP32[915102] | 0;
   if (($13684 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i819 = 3660408;
    $$lcssa8$i$i818 = $13684;
    label = 1013;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $13689 = HEAP32[915108] | 0;
   if (($13689 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i819 = 3660432;
    $$lcssa8$i$i818 = $13689;
    label = 1013;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $13694 = HEAP32[915114] | 0;
   if (($13694 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i819 = 3660456;
    $$lcssa8$i$i818 = $13694;
    label = 1013;
    break;
   }
  }
  $$3$i$i820 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1013) {
  $13677 = $$lcssa8$i$i818 + -4 | 0;
  HEAP32[$$lcssa$i$i819 >> 2] = $13677;
  $$3$i$i820 = HEAP32[$13677 >> 2] | 0;
 }
 $13698 = $$3$i$i820 + 52 | 0;
 HEAP16[$$3$i$i820 >> 1] = 1024;
 HEAP16[$$3$i$i820 + 2 >> 1] = 15;
 HEAP8[$$3$i$i820 + 4 >> 0] = 16;
 HEAP8[$$3$i$i820 + 5 >> 0] = 1;
 HEAP32[$$3$i$i820 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i820 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i820 + 16 >> 2] = $13698;
 HEAP32[$$3$i$i820 + 20 >> 2] = 0;
 HEAP32[$$3$i$i820 + 24 >> 2] = 0;
 HEAP8[$$3$i$i820 + 48 >> 0] = 0;
 HEAP32[$72 >> 2] = $$3$i$i820;
 _memcpy($13698 | 0, 286698, 2048) | 0;
 _memcpy($$3$i$i820 + 2100 | 0, 288746, 2048) | 0;
 _memcpy($$3$i$i820 + 4148 | 0, 290794, 2048) | 0;
 _memcpy($$3$i$i820 + 6196 | 0, 292842, 2048) | 0;
 _memcpy($$3$i$i820 + 8244 | 0, 294890, 2048) | 0;
 _memcpy($$3$i$i820 + 10292 | 0, 296938, 2048) | 0;
 _memcpy($$3$i$i820 + 12340 | 0, 298986, 2048) | 0;
 _memcpy($$3$i$i820 + 14388 | 0, 301034, 2048) | 0;
 _memcpy($$3$i$i820 + 16436 | 0, 303082, 2048) | 0;
 _memcpy($$3$i$i820 + 18484 | 0, 305130, 2048) | 0;
 _memcpy($$3$i$i820 + 20532 | 0, 307178, 2048) | 0;
 _memcpy($$3$i$i820 + 22580 | 0, 309226, 2048) | 0;
 _memcpy($$3$i$i820 + 24628 | 0, 311274, 2048) | 0;
 _memcpy($$3$i$i820 + 26676 | 0, 313322, 2048) | 0;
 _memcpy($$3$i$i820 + 28724 | 0, 315370, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $72);
 if ($$3$i$i820 | 0) {
  $13723 = $$3$i$i820 + 5 | 0;
  $13725 = (HEAP8[$13723 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$13723 >> 0] = $13725;
  if (!($13725 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i820);
  HEAP32[$72 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3532 >> 1] = 183;
 HEAP16[$3533 >> 1] = 1023;
 HEAP16[$3534 >> 1] = 197;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1028; else {
  $13729 = HEAP32[915090] | 0;
  if (($13729 | 0) == (HEAP32[915088] | 0)) label = 1028; else {
   $$lcssa$i$i832 = 3660360;
   $$lcssa8$i$i831 = $13729;
   label = 1029;
  }
 }
 do if ((label | 0) == 1028) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $13736 = HEAP32[915096] | 0;
   if (($13736 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i832 = 3660384;
    $$lcssa8$i$i831 = $13736;
    label = 1029;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $13741 = HEAP32[915102] | 0;
   if (($13741 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i832 = 3660408;
    $$lcssa8$i$i831 = $13741;
    label = 1029;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $13746 = HEAP32[915108] | 0;
   if (($13746 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i832 = 3660432;
    $$lcssa8$i$i831 = $13746;
    label = 1029;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $13751 = HEAP32[915114] | 0;
   if (($13751 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i832 = 3660456;
    $$lcssa8$i$i831 = $13751;
    label = 1029;
    break;
   }
  }
  $$3$i$i833 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1029) {
  $13734 = $$lcssa8$i$i831 + -4 | 0;
  HEAP32[$$lcssa$i$i832 >> 2] = $13734;
  $$3$i$i833 = HEAP32[$13734 >> 2] | 0;
 }
 $13755 = $$3$i$i833 + 52 | 0;
 HEAP16[$$3$i$i833 >> 1] = 1024;
 HEAP16[$$3$i$i833 + 2 >> 1] = 15;
 HEAP8[$$3$i$i833 + 4 >> 0] = 16;
 HEAP8[$$3$i$i833 + 5 >> 0] = 1;
 HEAP32[$$3$i$i833 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i833 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i833 + 16 >> 2] = $13755;
 HEAP32[$$3$i$i833 + 20 >> 2] = 0;
 HEAP32[$$3$i$i833 + 24 >> 2] = 0;
 HEAP8[$$3$i$i833 + 48 >> 0] = 0;
 HEAP32[$73 >> 2] = $$3$i$i833;
 _memcpy($13755 | 0, 317418, 2048) | 0;
 _memcpy($$3$i$i833 + 2100 | 0, 319466, 2048) | 0;
 _memcpy($$3$i$i833 + 4148 | 0, 321514, 2048) | 0;
 _memcpy($$3$i$i833 + 6196 | 0, 323562, 2048) | 0;
 _memcpy($$3$i$i833 + 8244 | 0, 325610, 2048) | 0;
 _memcpy($$3$i$i833 + 10292 | 0, 327658, 2048) | 0;
 _memcpy($$3$i$i833 + 12340 | 0, 329706, 2048) | 0;
 _memcpy($$3$i$i833 + 14388 | 0, 331754, 2048) | 0;
 _memcpy($$3$i$i833 + 16436 | 0, 333802, 2048) | 0;
 _memcpy($$3$i$i833 + 18484 | 0, 335850, 2048) | 0;
 _memcpy($$3$i$i833 + 20532 | 0, 337898, 2048) | 0;
 _memcpy($$3$i$i833 + 22580 | 0, 339946, 2048) | 0;
 _memcpy($$3$i$i833 + 24628 | 0, 341994, 2048) | 0;
 _memcpy($$3$i$i833 + 26676 | 0, 344042, 2048) | 0;
 _memcpy($$3$i$i833 + 28724 | 0, 346090, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $73);
 if ($$3$i$i833 | 0) {
  $13780 = $$3$i$i833 + 5 | 0;
  $13782 = (HEAP8[$13780 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$13780 >> 0] = $13782;
  if (!($13782 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i833);
  HEAP32[$73 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3535 >> 1] = 198;
 HEAP16[$3536 >> 1] = 1023;
 HEAP16[$3537 >> 1] = 212;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1044; else {
  $13786 = HEAP32[915090] | 0;
  if (($13786 | 0) == (HEAP32[915088] | 0)) label = 1044; else {
   $$lcssa$i$i845 = 3660360;
   $$lcssa8$i$i844 = $13786;
   label = 1045;
  }
 }
 do if ((label | 0) == 1044) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $13793 = HEAP32[915096] | 0;
   if (($13793 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i845 = 3660384;
    $$lcssa8$i$i844 = $13793;
    label = 1045;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $13798 = HEAP32[915102] | 0;
   if (($13798 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i845 = 3660408;
    $$lcssa8$i$i844 = $13798;
    label = 1045;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $13803 = HEAP32[915108] | 0;
   if (($13803 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i845 = 3660432;
    $$lcssa8$i$i844 = $13803;
    label = 1045;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $13808 = HEAP32[915114] | 0;
   if (($13808 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i845 = 3660456;
    $$lcssa8$i$i844 = $13808;
    label = 1045;
    break;
   }
  }
  $$3$i$i846 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1045) {
  $13791 = $$lcssa8$i$i844 + -4 | 0;
  HEAP32[$$lcssa$i$i845 >> 2] = $13791;
  $$3$i$i846 = HEAP32[$13791 >> 2] | 0;
 }
 $13812 = $$3$i$i846 + 52 | 0;
 HEAP16[$$3$i$i846 >> 1] = 1024;
 HEAP16[$$3$i$i846 + 2 >> 1] = 15;
 HEAP8[$$3$i$i846 + 4 >> 0] = 16;
 HEAP8[$$3$i$i846 + 5 >> 0] = 1;
 HEAP32[$$3$i$i846 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i846 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i846 + 16 >> 2] = $13812;
 HEAP32[$$3$i$i846 + 20 >> 2] = 0;
 HEAP32[$$3$i$i846 + 24 >> 2] = 0;
 HEAP8[$$3$i$i846 + 48 >> 0] = 0;
 HEAP32[$74 >> 2] = $$3$i$i846;
 _memcpy($13812 | 0, 348138, 2048) | 0;
 _memcpy($$3$i$i846 + 2100 | 0, 350186, 2048) | 0;
 _memcpy($$3$i$i846 + 4148 | 0, 352234, 2048) | 0;
 _memcpy($$3$i$i846 + 6196 | 0, 354282, 2048) | 0;
 _memcpy($$3$i$i846 + 8244 | 0, 356330, 2048) | 0;
 _memcpy($$3$i$i846 + 10292 | 0, 358378, 2048) | 0;
 _memcpy($$3$i$i846 + 12340 | 0, 360426, 2048) | 0;
 _memcpy($$3$i$i846 + 14388 | 0, 362474, 2048) | 0;
 _memcpy($$3$i$i846 + 16436 | 0, 364522, 2048) | 0;
 _memcpy($$3$i$i846 + 18484 | 0, 366570, 2048) | 0;
 _memcpy($$3$i$i846 + 20532 | 0, 368618, 2048) | 0;
 _memcpy($$3$i$i846 + 22580 | 0, 370666, 2048) | 0;
 _memcpy($$3$i$i846 + 24628 | 0, 372714, 2048) | 0;
 _memcpy($$3$i$i846 + 26676 | 0, 374762, 2048) | 0;
 _memcpy($$3$i$i846 + 28724 | 0, 376810, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $74);
 if ($$3$i$i846 | 0) {
  $13837 = $$3$i$i846 + 5 | 0;
  $13839 = (HEAP8[$13837 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$13837 >> 0] = $13839;
  if (!($13839 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i846);
  HEAP32[$74 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3538 >> 1] = 213;
 HEAP16[$3539 >> 1] = 1023;
 HEAP16[$3540 >> 1] = 227;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1060; else {
  $13843 = HEAP32[915090] | 0;
  if (($13843 | 0) == (HEAP32[915088] | 0)) label = 1060; else {
   $$lcssa$i$i858 = 3660360;
   $$lcssa8$i$i857 = $13843;
   label = 1061;
  }
 }
 do if ((label | 0) == 1060) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $13850 = HEAP32[915096] | 0;
   if (($13850 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i858 = 3660384;
    $$lcssa8$i$i857 = $13850;
    label = 1061;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $13855 = HEAP32[915102] | 0;
   if (($13855 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i858 = 3660408;
    $$lcssa8$i$i857 = $13855;
    label = 1061;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $13860 = HEAP32[915108] | 0;
   if (($13860 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i858 = 3660432;
    $$lcssa8$i$i857 = $13860;
    label = 1061;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $13865 = HEAP32[915114] | 0;
   if (($13865 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i858 = 3660456;
    $$lcssa8$i$i857 = $13865;
    label = 1061;
    break;
   }
  }
  $$3$i$i859 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1061) {
  $13848 = $$lcssa8$i$i857 + -4 | 0;
  HEAP32[$$lcssa$i$i858 >> 2] = $13848;
  $$3$i$i859 = HEAP32[$13848 >> 2] | 0;
 }
 $13869 = $$3$i$i859 + 52 | 0;
 HEAP16[$$3$i$i859 >> 1] = 1024;
 HEAP16[$$3$i$i859 + 2 >> 1] = 15;
 HEAP8[$$3$i$i859 + 4 >> 0] = 16;
 HEAP8[$$3$i$i859 + 5 >> 0] = 1;
 HEAP32[$$3$i$i859 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i859 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i859 + 16 >> 2] = $13869;
 HEAP32[$$3$i$i859 + 20 >> 2] = 0;
 HEAP32[$$3$i$i859 + 24 >> 2] = 0;
 HEAP8[$$3$i$i859 + 48 >> 0] = 0;
 HEAP32[$75 >> 2] = $$3$i$i859;
 _memcpy($13869 | 0, 378858, 2048) | 0;
 _memcpy($$3$i$i859 + 2100 | 0, 380906, 2048) | 0;
 _memcpy($$3$i$i859 + 4148 | 0, 382954, 2048) | 0;
 _memcpy($$3$i$i859 + 6196 | 0, 385002, 2048) | 0;
 _memcpy($$3$i$i859 + 8244 | 0, 387050, 2048) | 0;
 _memcpy($$3$i$i859 + 10292 | 0, 389098, 2048) | 0;
 _memcpy($$3$i$i859 + 12340 | 0, 391146, 2048) | 0;
 _memcpy($$3$i$i859 + 14388 | 0, 393194, 2048) | 0;
 _memcpy($$3$i$i859 + 16436 | 0, 395242, 2048) | 0;
 _memcpy($$3$i$i859 + 18484 | 0, 397290, 2048) | 0;
 _memcpy($$3$i$i859 + 20532 | 0, 399338, 2048) | 0;
 _memcpy($$3$i$i859 + 22580 | 0, 401386, 2048) | 0;
 _memcpy($$3$i$i859 + 24628 | 0, 403434, 2048) | 0;
 _memcpy($$3$i$i859 + 26676 | 0, 405482, 2048) | 0;
 _memcpy($$3$i$i859 + 28724 | 0, 407530, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $75);
 if ($$3$i$i859 | 0) {
  $13894 = $$3$i$i859 + 5 | 0;
  $13896 = (HEAP8[$13894 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$13894 >> 0] = $13896;
  if (!($13896 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i859);
  HEAP32[$75 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3541 >> 1] = 228;
 HEAP16[$3542 >> 1] = 1023;
 HEAP16[$3543 >> 1] = 242;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1076; else {
  $13900 = HEAP32[915090] | 0;
  if (($13900 | 0) == (HEAP32[915088] | 0)) label = 1076; else {
   $$lcssa$i$i871 = 3660360;
   $$lcssa8$i$i870 = $13900;
   label = 1077;
  }
 }
 do if ((label | 0) == 1076) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $13907 = HEAP32[915096] | 0;
   if (($13907 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i871 = 3660384;
    $$lcssa8$i$i870 = $13907;
    label = 1077;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $13912 = HEAP32[915102] | 0;
   if (($13912 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i871 = 3660408;
    $$lcssa8$i$i870 = $13912;
    label = 1077;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $13917 = HEAP32[915108] | 0;
   if (($13917 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i871 = 3660432;
    $$lcssa8$i$i870 = $13917;
    label = 1077;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $13922 = HEAP32[915114] | 0;
   if (($13922 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i871 = 3660456;
    $$lcssa8$i$i870 = $13922;
    label = 1077;
    break;
   }
  }
  $$3$i$i872 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1077) {
  $13905 = $$lcssa8$i$i870 + -4 | 0;
  HEAP32[$$lcssa$i$i871 >> 2] = $13905;
  $$3$i$i872 = HEAP32[$13905 >> 2] | 0;
 }
 $13926 = $$3$i$i872 + 52 | 0;
 HEAP16[$$3$i$i872 >> 1] = 1024;
 HEAP16[$$3$i$i872 + 2 >> 1] = 15;
 HEAP8[$$3$i$i872 + 4 >> 0] = 16;
 HEAP8[$$3$i$i872 + 5 >> 0] = 1;
 HEAP32[$$3$i$i872 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i872 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i872 + 16 >> 2] = $13926;
 HEAP32[$$3$i$i872 + 20 >> 2] = 0;
 HEAP32[$$3$i$i872 + 24 >> 2] = 0;
 HEAP8[$$3$i$i872 + 48 >> 0] = 0;
 HEAP32[$76 >> 2] = $$3$i$i872;
 _memcpy($13926 | 0, 409578, 2048) | 0;
 _memcpy($$3$i$i872 + 2100 | 0, 411626, 2048) | 0;
 _memcpy($$3$i$i872 + 4148 | 0, 413674, 2048) | 0;
 _memcpy($$3$i$i872 + 6196 | 0, 415722, 2048) | 0;
 _memcpy($$3$i$i872 + 8244 | 0, 417770, 2048) | 0;
 _memcpy($$3$i$i872 + 10292 | 0, 419818, 2048) | 0;
 _memcpy($$3$i$i872 + 12340 | 0, 421866, 2048) | 0;
 _memcpy($$3$i$i872 + 14388 | 0, 423914, 2048) | 0;
 _memcpy($$3$i$i872 + 16436 | 0, 425962, 2048) | 0;
 _memcpy($$3$i$i872 + 18484 | 0, 428010, 2048) | 0;
 _memcpy($$3$i$i872 + 20532 | 0, 430058, 2048) | 0;
 _memcpy($$3$i$i872 + 22580 | 0, 432106, 2048) | 0;
 _memcpy($$3$i$i872 + 24628 | 0, 434154, 2048) | 0;
 _memcpy($$3$i$i872 + 26676 | 0, 436202, 2048) | 0;
 _memcpy($$3$i$i872 + 28724 | 0, 438250, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $76);
 if ($$3$i$i872 | 0) {
  $13951 = $$3$i$i872 + 5 | 0;
  $13953 = (HEAP8[$13951 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$13951 >> 0] = $13953;
  if (!($13953 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i872);
  HEAP32[$76 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3544 >> 1] = 243;
 HEAP16[$3545 >> 1] = 1023;
 HEAP16[$3546 >> 1] = 257;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1092; else {
  $13957 = HEAP32[915090] | 0;
  if (($13957 | 0) == (HEAP32[915088] | 0)) label = 1092; else {
   $$lcssa$i$i884 = 3660360;
   $$lcssa8$i$i883 = $13957;
   label = 1093;
  }
 }
 do if ((label | 0) == 1092) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $13964 = HEAP32[915096] | 0;
   if (($13964 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i884 = 3660384;
    $$lcssa8$i$i883 = $13964;
    label = 1093;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $13969 = HEAP32[915102] | 0;
   if (($13969 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i884 = 3660408;
    $$lcssa8$i$i883 = $13969;
    label = 1093;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $13974 = HEAP32[915108] | 0;
   if (($13974 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i884 = 3660432;
    $$lcssa8$i$i883 = $13974;
    label = 1093;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $13979 = HEAP32[915114] | 0;
   if (($13979 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i884 = 3660456;
    $$lcssa8$i$i883 = $13979;
    label = 1093;
    break;
   }
  }
  $$3$i$i885 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1093) {
  $13962 = $$lcssa8$i$i883 + -4 | 0;
  HEAP32[$$lcssa$i$i884 >> 2] = $13962;
  $$3$i$i885 = HEAP32[$13962 >> 2] | 0;
 }
 $13983 = $$3$i$i885 + 52 | 0;
 HEAP16[$$3$i$i885 >> 1] = 1024;
 HEAP16[$$3$i$i885 + 2 >> 1] = 15;
 HEAP8[$$3$i$i885 + 4 >> 0] = 16;
 HEAP8[$$3$i$i885 + 5 >> 0] = 1;
 HEAP32[$$3$i$i885 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i885 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i885 + 16 >> 2] = $13983;
 HEAP32[$$3$i$i885 + 20 >> 2] = 0;
 HEAP32[$$3$i$i885 + 24 >> 2] = 0;
 HEAP8[$$3$i$i885 + 48 >> 0] = 0;
 HEAP32[$77 >> 2] = $$3$i$i885;
 _memcpy($13983 | 0, 440298, 2048) | 0;
 _memcpy($$3$i$i885 + 2100 | 0, 442346, 2048) | 0;
 _memcpy($$3$i$i885 + 4148 | 0, 444394, 2048) | 0;
 _memcpy($$3$i$i885 + 6196 | 0, 446442, 2048) | 0;
 _memcpy($$3$i$i885 + 8244 | 0, 448490, 2048) | 0;
 _memcpy($$3$i$i885 + 10292 | 0, 450538, 2048) | 0;
 _memcpy($$3$i$i885 + 12340 | 0, 452586, 2048) | 0;
 _memcpy($$3$i$i885 + 14388 | 0, 454634, 2048) | 0;
 _memcpy($$3$i$i885 + 16436 | 0, 456682, 2048) | 0;
 _memcpy($$3$i$i885 + 18484 | 0, 458730, 2048) | 0;
 _memcpy($$3$i$i885 + 20532 | 0, 460778, 2048) | 0;
 _memcpy($$3$i$i885 + 22580 | 0, 462826, 2048) | 0;
 _memcpy($$3$i$i885 + 24628 | 0, 464874, 2048) | 0;
 _memcpy($$3$i$i885 + 26676 | 0, 466922, 2048) | 0;
 _memcpy($$3$i$i885 + 28724 | 0, 468970, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $77);
 if ($$3$i$i885 | 0) {
  $14008 = $$3$i$i885 + 5 | 0;
  $14010 = (HEAP8[$14008 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14008 >> 0] = $14010;
  if (!($14010 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i885);
  HEAP32[$77 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3547 >> 1] = 258;
 HEAP16[$3548 >> 1] = 1023;
 HEAP16[$3549 >> 1] = 272;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1108; else {
  $14014 = HEAP32[915090] | 0;
  if (($14014 | 0) == (HEAP32[915088] | 0)) label = 1108; else {
   $$lcssa$i$i897 = 3660360;
   $$lcssa8$i$i896 = $14014;
   label = 1109;
  }
 }
 do if ((label | 0) == 1108) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14021 = HEAP32[915096] | 0;
   if (($14021 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i897 = 3660384;
    $$lcssa8$i$i896 = $14021;
    label = 1109;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14026 = HEAP32[915102] | 0;
   if (($14026 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i897 = 3660408;
    $$lcssa8$i$i896 = $14026;
    label = 1109;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $14031 = HEAP32[915108] | 0;
   if (($14031 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i897 = 3660432;
    $$lcssa8$i$i896 = $14031;
    label = 1109;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $14036 = HEAP32[915114] | 0;
   if (($14036 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i897 = 3660456;
    $$lcssa8$i$i896 = $14036;
    label = 1109;
    break;
   }
  }
  $$3$i$i898 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1109) {
  $14019 = $$lcssa8$i$i896 + -4 | 0;
  HEAP32[$$lcssa$i$i897 >> 2] = $14019;
  $$3$i$i898 = HEAP32[$14019 >> 2] | 0;
 }
 $14040 = $$3$i$i898 + 52 | 0;
 HEAP16[$$3$i$i898 >> 1] = 1024;
 HEAP16[$$3$i$i898 + 2 >> 1] = 15;
 HEAP8[$$3$i$i898 + 4 >> 0] = 16;
 HEAP8[$$3$i$i898 + 5 >> 0] = 1;
 HEAP32[$$3$i$i898 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i898 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i898 + 16 >> 2] = $14040;
 HEAP32[$$3$i$i898 + 20 >> 2] = 0;
 HEAP32[$$3$i$i898 + 24 >> 2] = 0;
 HEAP8[$$3$i$i898 + 48 >> 0] = 0;
 HEAP32[$78 >> 2] = $$3$i$i898;
 _memcpy($14040 | 0, 471018, 2048) | 0;
 _memcpy($$3$i$i898 + 2100 | 0, 473066, 2048) | 0;
 _memcpy($$3$i$i898 + 4148 | 0, 475114, 2048) | 0;
 _memcpy($$3$i$i898 + 6196 | 0, 477162, 2048) | 0;
 _memcpy($$3$i$i898 + 8244 | 0, 479210, 2048) | 0;
 _memcpy($$3$i$i898 + 10292 | 0, 481258, 2048) | 0;
 _memcpy($$3$i$i898 + 12340 | 0, 483306, 2048) | 0;
 _memcpy($$3$i$i898 + 14388 | 0, 485354, 2048) | 0;
 _memcpy($$3$i$i898 + 16436 | 0, 487402, 2048) | 0;
 _memcpy($$3$i$i898 + 18484 | 0, 489450, 2048) | 0;
 _memcpy($$3$i$i898 + 20532 | 0, 491498, 2048) | 0;
 _memcpy($$3$i$i898 + 22580 | 0, 493546, 2048) | 0;
 _memcpy($$3$i$i898 + 24628 | 0, 495594, 2048) | 0;
 _memcpy($$3$i$i898 + 26676 | 0, 497642, 2048) | 0;
 _memcpy($$3$i$i898 + 28724 | 0, 499690, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $78);
 if ($$3$i$i898 | 0) {
  $14065 = $$3$i$i898 + 5 | 0;
  $14067 = (HEAP8[$14065 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14065 >> 0] = $14067;
  if (!($14067 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i898);
  HEAP32[$78 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3550 >> 1] = 273;
 HEAP16[$3551 >> 1] = 1023;
 HEAP16[$3552 >> 1] = 287;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1124; else {
  $14071 = HEAP32[915090] | 0;
  if (($14071 | 0) == (HEAP32[915088] | 0)) label = 1124; else {
   $$lcssa$i$i910 = 3660360;
   $$lcssa8$i$i909 = $14071;
   label = 1125;
  }
 }
 do if ((label | 0) == 1124) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14078 = HEAP32[915096] | 0;
   if (($14078 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i910 = 3660384;
    $$lcssa8$i$i909 = $14078;
    label = 1125;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14083 = HEAP32[915102] | 0;
   if (($14083 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i910 = 3660408;
    $$lcssa8$i$i909 = $14083;
    label = 1125;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $14088 = HEAP32[915108] | 0;
   if (($14088 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i910 = 3660432;
    $$lcssa8$i$i909 = $14088;
    label = 1125;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $14093 = HEAP32[915114] | 0;
   if (($14093 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i910 = 3660456;
    $$lcssa8$i$i909 = $14093;
    label = 1125;
    break;
   }
  }
  $$3$i$i911 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1125) {
  $14076 = $$lcssa8$i$i909 + -4 | 0;
  HEAP32[$$lcssa$i$i910 >> 2] = $14076;
  $$3$i$i911 = HEAP32[$14076 >> 2] | 0;
 }
 $14097 = $$3$i$i911 + 52 | 0;
 HEAP16[$$3$i$i911 >> 1] = 1024;
 HEAP16[$$3$i$i911 + 2 >> 1] = 15;
 HEAP8[$$3$i$i911 + 4 >> 0] = 16;
 HEAP8[$$3$i$i911 + 5 >> 0] = 1;
 HEAP32[$$3$i$i911 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i911 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i911 + 16 >> 2] = $14097;
 HEAP32[$$3$i$i911 + 20 >> 2] = 0;
 HEAP32[$$3$i$i911 + 24 >> 2] = 0;
 HEAP8[$$3$i$i911 + 48 >> 0] = 0;
 HEAP32[$79 >> 2] = $$3$i$i911;
 _memcpy($14097 | 0, 501738, 2048) | 0;
 _memcpy($$3$i$i911 + 2100 | 0, 503786, 2048) | 0;
 _memcpy($$3$i$i911 + 4148 | 0, 505834, 2048) | 0;
 _memcpy($$3$i$i911 + 6196 | 0, 507882, 2048) | 0;
 _memcpy($$3$i$i911 + 8244 | 0, 509930, 2048) | 0;
 _memcpy($$3$i$i911 + 10292 | 0, 511978, 2048) | 0;
 _memcpy($$3$i$i911 + 12340 | 0, 514026, 2048) | 0;
 _memcpy($$3$i$i911 + 14388 | 0, 516074, 2048) | 0;
 _memcpy($$3$i$i911 + 16436 | 0, 518122, 2048) | 0;
 _memcpy($$3$i$i911 + 18484 | 0, 520170, 2048) | 0;
 _memcpy($$3$i$i911 + 20532 | 0, 522218, 2048) | 0;
 _memcpy($$3$i$i911 + 22580 | 0, 524266, 2048) | 0;
 _memcpy($$3$i$i911 + 24628 | 0, 526314, 2048) | 0;
 _memcpy($$3$i$i911 + 26676 | 0, 528362, 2048) | 0;
 _memcpy($$3$i$i911 + 28724 | 0, 530410, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $79);
 if ($$3$i$i911 | 0) {
  $14122 = $$3$i$i911 + 5 | 0;
  $14124 = (HEAP8[$14122 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14122 >> 0] = $14124;
  if (!($14124 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i911);
  HEAP32[$79 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3553 >> 1] = 288;
 HEAP16[$3554 >> 1] = 1023;
 HEAP16[$3555 >> 1] = 302;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1140; else {
  $14128 = HEAP32[915090] | 0;
  if (($14128 | 0) == (HEAP32[915088] | 0)) label = 1140; else {
   $$lcssa$i$i923 = 3660360;
   $$lcssa8$i$i922 = $14128;
   label = 1141;
  }
 }
 do if ((label | 0) == 1140) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14135 = HEAP32[915096] | 0;
   if (($14135 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i923 = 3660384;
    $$lcssa8$i$i922 = $14135;
    label = 1141;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14140 = HEAP32[915102] | 0;
   if (($14140 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i923 = 3660408;
    $$lcssa8$i$i922 = $14140;
    label = 1141;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $14145 = HEAP32[915108] | 0;
   if (($14145 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i923 = 3660432;
    $$lcssa8$i$i922 = $14145;
    label = 1141;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $14150 = HEAP32[915114] | 0;
   if (($14150 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i923 = 3660456;
    $$lcssa8$i$i922 = $14150;
    label = 1141;
    break;
   }
  }
  $$3$i$i924 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1141) {
  $14133 = $$lcssa8$i$i922 + -4 | 0;
  HEAP32[$$lcssa$i$i923 >> 2] = $14133;
  $$3$i$i924 = HEAP32[$14133 >> 2] | 0;
 }
 $14154 = $$3$i$i924 + 52 | 0;
 HEAP16[$$3$i$i924 >> 1] = 1024;
 HEAP16[$$3$i$i924 + 2 >> 1] = 15;
 HEAP8[$$3$i$i924 + 4 >> 0] = 16;
 HEAP8[$$3$i$i924 + 5 >> 0] = 1;
 HEAP32[$$3$i$i924 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i924 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i924 + 16 >> 2] = $14154;
 HEAP32[$$3$i$i924 + 20 >> 2] = 0;
 HEAP32[$$3$i$i924 + 24 >> 2] = 0;
 HEAP8[$$3$i$i924 + 48 >> 0] = 0;
 HEAP32[$80 >> 2] = $$3$i$i924;
 _memcpy($14154 | 0, 532458, 2048) | 0;
 _memcpy($$3$i$i924 + 2100 | 0, 534506, 2048) | 0;
 _memcpy($$3$i$i924 + 4148 | 0, 536554, 2048) | 0;
 _memcpy($$3$i$i924 + 6196 | 0, 538602, 2048) | 0;
 _memcpy($$3$i$i924 + 8244 | 0, 540650, 2048) | 0;
 _memcpy($$3$i$i924 + 10292 | 0, 542698, 2048) | 0;
 _memcpy($$3$i$i924 + 12340 | 0, 544746, 2048) | 0;
 _memcpy($$3$i$i924 + 14388 | 0, 546794, 2048) | 0;
 _memcpy($$3$i$i924 + 16436 | 0, 548842, 2048) | 0;
 _memcpy($$3$i$i924 + 18484 | 0, 550890, 2048) | 0;
 _memcpy($$3$i$i924 + 20532 | 0, 552938, 2048) | 0;
 _memcpy($$3$i$i924 + 22580 | 0, 554986, 2048) | 0;
 _memcpy($$3$i$i924 + 24628 | 0, 557034, 2048) | 0;
 _memcpy($$3$i$i924 + 26676 | 0, 559082, 2048) | 0;
 _memcpy($$3$i$i924 + 28724 | 0, 561130, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $80);
 if ($$3$i$i924 | 0) {
  $14179 = $$3$i$i924 + 5 | 0;
  $14181 = (HEAP8[$14179 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14179 >> 0] = $14181;
  if (!($14181 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i924);
  HEAP32[$80 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3556 >> 1] = 303;
 HEAP16[$3557 >> 1] = 1023;
 HEAP16[$3558 >> 1] = 317;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1156; else {
  $14185 = HEAP32[915090] | 0;
  if (($14185 | 0) == (HEAP32[915088] | 0)) label = 1156; else {
   $$lcssa$i$i936 = 3660360;
   $$lcssa8$i$i935 = $14185;
   label = 1157;
  }
 }
 do if ((label | 0) == 1156) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14192 = HEAP32[915096] | 0;
   if (($14192 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i936 = 3660384;
    $$lcssa8$i$i935 = $14192;
    label = 1157;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14197 = HEAP32[915102] | 0;
   if (($14197 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i936 = 3660408;
    $$lcssa8$i$i935 = $14197;
    label = 1157;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $14202 = HEAP32[915108] | 0;
   if (($14202 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i936 = 3660432;
    $$lcssa8$i$i935 = $14202;
    label = 1157;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $14207 = HEAP32[915114] | 0;
   if (($14207 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i936 = 3660456;
    $$lcssa8$i$i935 = $14207;
    label = 1157;
    break;
   }
  }
  $$3$i$i937 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1157) {
  $14190 = $$lcssa8$i$i935 + -4 | 0;
  HEAP32[$$lcssa$i$i936 >> 2] = $14190;
  $$3$i$i937 = HEAP32[$14190 >> 2] | 0;
 }
 $14211 = $$3$i$i937 + 52 | 0;
 HEAP16[$$3$i$i937 >> 1] = 1024;
 HEAP16[$$3$i$i937 + 2 >> 1] = 15;
 HEAP8[$$3$i$i937 + 4 >> 0] = 16;
 HEAP8[$$3$i$i937 + 5 >> 0] = 1;
 HEAP32[$$3$i$i937 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i937 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i937 + 16 >> 2] = $14211;
 HEAP32[$$3$i$i937 + 20 >> 2] = 0;
 HEAP32[$$3$i$i937 + 24 >> 2] = 0;
 HEAP8[$$3$i$i937 + 48 >> 0] = 0;
 HEAP32[$81 >> 2] = $$3$i$i937;
 _memcpy($14211 | 0, 563178, 2048) | 0;
 _memcpy($$3$i$i937 + 2100 | 0, 565226, 2048) | 0;
 _memcpy($$3$i$i937 + 4148 | 0, 567274, 2048) | 0;
 _memcpy($$3$i$i937 + 6196 | 0, 569322, 2048) | 0;
 _memcpy($$3$i$i937 + 8244 | 0, 571370, 2048) | 0;
 _memcpy($$3$i$i937 + 10292 | 0, 573418, 2048) | 0;
 _memcpy($$3$i$i937 + 12340 | 0, 575466, 2048) | 0;
 _memcpy($$3$i$i937 + 14388 | 0, 577514, 2048) | 0;
 _memcpy($$3$i$i937 + 16436 | 0, 579562, 2048) | 0;
 _memcpy($$3$i$i937 + 18484 | 0, 581610, 2048) | 0;
 _memcpy($$3$i$i937 + 20532 | 0, 583658, 2048) | 0;
 _memcpy($$3$i$i937 + 22580 | 0, 585706, 2048) | 0;
 _memcpy($$3$i$i937 + 24628 | 0, 587754, 2048) | 0;
 _memcpy($$3$i$i937 + 26676 | 0, 589802, 2048) | 0;
 _memcpy($$3$i$i937 + 28724 | 0, 591850, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $81);
 if ($$3$i$i937 | 0) {
  $14236 = $$3$i$i937 + 5 | 0;
  $14238 = (HEAP8[$14236 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14236 >> 0] = $14238;
  if (!($14238 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i937);
  HEAP32[$81 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3559 >> 1] = 318;
 HEAP16[$3560 >> 1] = 1023;
 HEAP16[$3561 >> 1] = 332;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1172; else {
  $14242 = HEAP32[915090] | 0;
  if (($14242 | 0) == (HEAP32[915088] | 0)) label = 1172; else {
   $$lcssa$i$i949 = 3660360;
   $$lcssa8$i$i948 = $14242;
   label = 1173;
  }
 }
 do if ((label | 0) == 1172) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14249 = HEAP32[915096] | 0;
   if (($14249 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i949 = 3660384;
    $$lcssa8$i$i948 = $14249;
    label = 1173;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14254 = HEAP32[915102] | 0;
   if (($14254 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i949 = 3660408;
    $$lcssa8$i$i948 = $14254;
    label = 1173;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $14259 = HEAP32[915108] | 0;
   if (($14259 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i949 = 3660432;
    $$lcssa8$i$i948 = $14259;
    label = 1173;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $14264 = HEAP32[915114] | 0;
   if (($14264 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i949 = 3660456;
    $$lcssa8$i$i948 = $14264;
    label = 1173;
    break;
   }
  }
  $$3$i$i950 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1173) {
  $14247 = $$lcssa8$i$i948 + -4 | 0;
  HEAP32[$$lcssa$i$i949 >> 2] = $14247;
  $$3$i$i950 = HEAP32[$14247 >> 2] | 0;
 }
 $14268 = $$3$i$i950 + 52 | 0;
 HEAP16[$$3$i$i950 >> 1] = 1024;
 HEAP16[$$3$i$i950 + 2 >> 1] = 15;
 HEAP8[$$3$i$i950 + 4 >> 0] = 16;
 HEAP8[$$3$i$i950 + 5 >> 0] = 1;
 HEAP32[$$3$i$i950 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i950 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i950 + 16 >> 2] = $14268;
 HEAP32[$$3$i$i950 + 20 >> 2] = 0;
 HEAP32[$$3$i$i950 + 24 >> 2] = 0;
 HEAP8[$$3$i$i950 + 48 >> 0] = 0;
 HEAP32[$82 >> 2] = $$3$i$i950;
 _memcpy($14268 | 0, 593898, 2048) | 0;
 _memcpy($$3$i$i950 + 2100 | 0, 595946, 2048) | 0;
 _memcpy($$3$i$i950 + 4148 | 0, 597994, 2048) | 0;
 _memcpy($$3$i$i950 + 6196 | 0, 600042, 2048) | 0;
 _memcpy($$3$i$i950 + 8244 | 0, 602090, 2048) | 0;
 _memcpy($$3$i$i950 + 10292 | 0, 604138, 2048) | 0;
 _memcpy($$3$i$i950 + 12340 | 0, 606186, 2048) | 0;
 _memcpy($$3$i$i950 + 14388 | 0, 608234, 2048) | 0;
 _memcpy($$3$i$i950 + 16436 | 0, 610282, 2048) | 0;
 _memcpy($$3$i$i950 + 18484 | 0, 612330, 2048) | 0;
 _memcpy($$3$i$i950 + 20532 | 0, 614378, 2048) | 0;
 _memcpy($$3$i$i950 + 22580 | 0, 616426, 2048) | 0;
 _memcpy($$3$i$i950 + 24628 | 0, 618474, 2048) | 0;
 _memcpy($$3$i$i950 + 26676 | 0, 620522, 2048) | 0;
 _memcpy($$3$i$i950 + 28724 | 0, 622570, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $82);
 if ($$3$i$i950 | 0) {
  $14293 = $$3$i$i950 + 5 | 0;
  $14295 = (HEAP8[$14293 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14293 >> 0] = $14295;
  if (!($14295 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i950);
  HEAP32[$82 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3562 >> 1] = 333;
 HEAP16[$3563 >> 1] = 1023;
 HEAP16[$3564 >> 1] = 347;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1188; else {
  $14299 = HEAP32[915090] | 0;
  if (($14299 | 0) == (HEAP32[915088] | 0)) label = 1188; else {
   $$lcssa$i$i962 = 3660360;
   $$lcssa8$i$i961 = $14299;
   label = 1189;
  }
 }
 do if ((label | 0) == 1188) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14306 = HEAP32[915096] | 0;
   if (($14306 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i962 = 3660384;
    $$lcssa8$i$i961 = $14306;
    label = 1189;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14311 = HEAP32[915102] | 0;
   if (($14311 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i962 = 3660408;
    $$lcssa8$i$i961 = $14311;
    label = 1189;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $14316 = HEAP32[915108] | 0;
   if (($14316 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i962 = 3660432;
    $$lcssa8$i$i961 = $14316;
    label = 1189;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $14321 = HEAP32[915114] | 0;
   if (($14321 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i962 = 3660456;
    $$lcssa8$i$i961 = $14321;
    label = 1189;
    break;
   }
  }
  $$3$i$i963 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1189) {
  $14304 = $$lcssa8$i$i961 + -4 | 0;
  HEAP32[$$lcssa$i$i962 >> 2] = $14304;
  $$3$i$i963 = HEAP32[$14304 >> 2] | 0;
 }
 $14325 = $$3$i$i963 + 52 | 0;
 HEAP16[$$3$i$i963 >> 1] = 1024;
 HEAP16[$$3$i$i963 + 2 >> 1] = 15;
 HEAP8[$$3$i$i963 + 4 >> 0] = 16;
 HEAP8[$$3$i$i963 + 5 >> 0] = 1;
 HEAP32[$$3$i$i963 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i963 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i963 + 16 >> 2] = $14325;
 HEAP32[$$3$i$i963 + 20 >> 2] = 0;
 HEAP32[$$3$i$i963 + 24 >> 2] = 0;
 HEAP8[$$3$i$i963 + 48 >> 0] = 0;
 HEAP32[$83 >> 2] = $$3$i$i963;
 _memcpy($14325 | 0, 624618, 2048) | 0;
 _memcpy($$3$i$i963 + 2100 | 0, 626666, 2048) | 0;
 _memcpy($$3$i$i963 + 4148 | 0, 628714, 2048) | 0;
 _memcpy($$3$i$i963 + 6196 | 0, 630762, 2048) | 0;
 _memcpy($$3$i$i963 + 8244 | 0, 632810, 2048) | 0;
 _memcpy($$3$i$i963 + 10292 | 0, 634858, 2048) | 0;
 _memcpy($$3$i$i963 + 12340 | 0, 636906, 2048) | 0;
 _memcpy($$3$i$i963 + 14388 | 0, 638954, 2048) | 0;
 _memcpy($$3$i$i963 + 16436 | 0, 641002, 2048) | 0;
 _memcpy($$3$i$i963 + 18484 | 0, 643050, 2048) | 0;
 _memcpy($$3$i$i963 + 20532 | 0, 645098, 2048) | 0;
 _memcpy($$3$i$i963 + 22580 | 0, 647146, 2048) | 0;
 _memcpy($$3$i$i963 + 24628 | 0, 649194, 2048) | 0;
 _memcpy($$3$i$i963 + 26676 | 0, 651242, 2048) | 0;
 _memcpy($$3$i$i963 + 28724 | 0, 653290, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $83);
 if ($$3$i$i963 | 0) {
  $14350 = $$3$i$i963 + 5 | 0;
  $14352 = (HEAP8[$14350 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14350 >> 0] = $14352;
  if (!($14352 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i963);
  HEAP32[$83 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3565 >> 1] = 348;
 HEAP16[$3566 >> 1] = 1023;
 HEAP16[$3567 >> 1] = 362;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1204; else {
  $14356 = HEAP32[915090] | 0;
  if (($14356 | 0) == (HEAP32[915088] | 0)) label = 1204; else {
   $$lcssa$i$i975 = 3660360;
   $$lcssa8$i$i974 = $14356;
   label = 1205;
  }
 }
 do if ((label | 0) == 1204) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14363 = HEAP32[915096] | 0;
   if (($14363 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i975 = 3660384;
    $$lcssa8$i$i974 = $14363;
    label = 1205;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14368 = HEAP32[915102] | 0;
   if (($14368 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i975 = 3660408;
    $$lcssa8$i$i974 = $14368;
    label = 1205;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $14373 = HEAP32[915108] | 0;
   if (($14373 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i975 = 3660432;
    $$lcssa8$i$i974 = $14373;
    label = 1205;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $14378 = HEAP32[915114] | 0;
   if (($14378 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i975 = 3660456;
    $$lcssa8$i$i974 = $14378;
    label = 1205;
    break;
   }
  }
  $$3$i$i976 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1205) {
  $14361 = $$lcssa8$i$i974 + -4 | 0;
  HEAP32[$$lcssa$i$i975 >> 2] = $14361;
  $$3$i$i976 = HEAP32[$14361 >> 2] | 0;
 }
 $14382 = $$3$i$i976 + 52 | 0;
 HEAP16[$$3$i$i976 >> 1] = 1024;
 HEAP16[$$3$i$i976 + 2 >> 1] = 15;
 HEAP8[$$3$i$i976 + 4 >> 0] = 16;
 HEAP8[$$3$i$i976 + 5 >> 0] = 1;
 HEAP32[$$3$i$i976 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i976 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i976 + 16 >> 2] = $14382;
 HEAP32[$$3$i$i976 + 20 >> 2] = 0;
 HEAP32[$$3$i$i976 + 24 >> 2] = 0;
 HEAP8[$$3$i$i976 + 48 >> 0] = 0;
 HEAP32[$84 >> 2] = $$3$i$i976;
 _memcpy($14382 | 0, 655338, 2048) | 0;
 _memcpy($$3$i$i976 + 2100 | 0, 657386, 2048) | 0;
 _memcpy($$3$i$i976 + 4148 | 0, 659434, 2048) | 0;
 _memcpy($$3$i$i976 + 6196 | 0, 661482, 2048) | 0;
 _memcpy($$3$i$i976 + 8244 | 0, 663530, 2048) | 0;
 _memcpy($$3$i$i976 + 10292 | 0, 665578, 2048) | 0;
 _memcpy($$3$i$i976 + 12340 | 0, 667626, 2048) | 0;
 _memcpy($$3$i$i976 + 14388 | 0, 669674, 2048) | 0;
 _memcpy($$3$i$i976 + 16436 | 0, 671722, 2048) | 0;
 _memcpy($$3$i$i976 + 18484 | 0, 673770, 2048) | 0;
 _memcpy($$3$i$i976 + 20532 | 0, 675818, 2048) | 0;
 _memcpy($$3$i$i976 + 22580 | 0, 677866, 2048) | 0;
 _memcpy($$3$i$i976 + 24628 | 0, 679914, 2048) | 0;
 _memcpy($$3$i$i976 + 26676 | 0, 681962, 2048) | 0;
 _memcpy($$3$i$i976 + 28724 | 0, 684010, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $84);
 if ($$3$i$i976 | 0) {
  $14407 = $$3$i$i976 + 5 | 0;
  $14409 = (HEAP8[$14407 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14407 >> 0] = $14409;
  if (!($14409 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i976);
  HEAP32[$84 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3568 >> 1] = 363;
 HEAP16[$3569 >> 1] = 1023;
 HEAP16[$3570 >> 1] = 377;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1220; else {
  $14413 = HEAP32[915090] | 0;
  if (($14413 | 0) == (HEAP32[915088] | 0)) label = 1220; else {
   $$lcssa$i$i988 = 3660360;
   $$lcssa8$i$i987 = $14413;
   label = 1221;
  }
 }
 do if ((label | 0) == 1220) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14420 = HEAP32[915096] | 0;
   if (($14420 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i988 = 3660384;
    $$lcssa8$i$i987 = $14420;
    label = 1221;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14425 = HEAP32[915102] | 0;
   if (($14425 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i988 = 3660408;
    $$lcssa8$i$i987 = $14425;
    label = 1221;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $14430 = HEAP32[915108] | 0;
   if (($14430 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i988 = 3660432;
    $$lcssa8$i$i987 = $14430;
    label = 1221;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $14435 = HEAP32[915114] | 0;
   if (($14435 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i988 = 3660456;
    $$lcssa8$i$i987 = $14435;
    label = 1221;
    break;
   }
  }
  $$3$i$i989 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1221) {
  $14418 = $$lcssa8$i$i987 + -4 | 0;
  HEAP32[$$lcssa$i$i988 >> 2] = $14418;
  $$3$i$i989 = HEAP32[$14418 >> 2] | 0;
 }
 $14439 = $$3$i$i989 + 52 | 0;
 HEAP16[$$3$i$i989 >> 1] = 1024;
 HEAP16[$$3$i$i989 + 2 >> 1] = 15;
 HEAP8[$$3$i$i989 + 4 >> 0] = 16;
 HEAP8[$$3$i$i989 + 5 >> 0] = 1;
 HEAP32[$$3$i$i989 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i989 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i989 + 16 >> 2] = $14439;
 HEAP32[$$3$i$i989 + 20 >> 2] = 0;
 HEAP32[$$3$i$i989 + 24 >> 2] = 0;
 HEAP8[$$3$i$i989 + 48 >> 0] = 0;
 HEAP32[$85 >> 2] = $$3$i$i989;
 _memcpy($14439 | 0, 686058, 2048) | 0;
 _memcpy($$3$i$i989 + 2100 | 0, 688106, 2048) | 0;
 _memcpy($$3$i$i989 + 4148 | 0, 690154, 2048) | 0;
 _memcpy($$3$i$i989 + 6196 | 0, 692202, 2048) | 0;
 _memcpy($$3$i$i989 + 8244 | 0, 694250, 2048) | 0;
 _memcpy($$3$i$i989 + 10292 | 0, 696298, 2048) | 0;
 _memcpy($$3$i$i989 + 12340 | 0, 698346, 2048) | 0;
 _memcpy($$3$i$i989 + 14388 | 0, 700394, 2048) | 0;
 _memcpy($$3$i$i989 + 16436 | 0, 702442, 2048) | 0;
 _memcpy($$3$i$i989 + 18484 | 0, 704490, 2048) | 0;
 _memcpy($$3$i$i989 + 20532 | 0, 706538, 2048) | 0;
 _memcpy($$3$i$i989 + 22580 | 0, 708586, 2048) | 0;
 _memcpy($$3$i$i989 + 24628 | 0, 710634, 2048) | 0;
 _memcpy($$3$i$i989 + 26676 | 0, 712682, 2048) | 0;
 _memcpy($$3$i$i989 + 28724 | 0, 714730, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $85);
 if ($$3$i$i989 | 0) {
  $14464 = $$3$i$i989 + 5 | 0;
  $14466 = (HEAP8[$14464 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14464 >> 0] = $14466;
  if (!($14466 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i989);
  HEAP32[$85 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3571 >> 1] = 378;
 HEAP16[$3572 >> 1] = 1023;
 HEAP16[$3573 >> 1] = 392;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1236; else {
  $14470 = HEAP32[915090] | 0;
  if (($14470 | 0) == (HEAP32[915088] | 0)) label = 1236; else {
   $$lcssa$i$i1001 = 3660360;
   $$lcssa8$i$i1000 = $14470;
   label = 1237;
  }
 }
 do if ((label | 0) == 1236) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14477 = HEAP32[915096] | 0;
   if (($14477 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1001 = 3660384;
    $$lcssa8$i$i1000 = $14477;
    label = 1237;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14482 = HEAP32[915102] | 0;
   if (($14482 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1001 = 3660408;
    $$lcssa8$i$i1000 = $14482;
    label = 1237;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $14487 = HEAP32[915108] | 0;
   if (($14487 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1001 = 3660432;
    $$lcssa8$i$i1000 = $14487;
    label = 1237;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $14492 = HEAP32[915114] | 0;
   if (($14492 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1001 = 3660456;
    $$lcssa8$i$i1000 = $14492;
    label = 1237;
    break;
   }
  }
  $$3$i$i1002 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1237) {
  $14475 = $$lcssa8$i$i1000 + -4 | 0;
  HEAP32[$$lcssa$i$i1001 >> 2] = $14475;
  $$3$i$i1002 = HEAP32[$14475 >> 2] | 0;
 }
 $14496 = $$3$i$i1002 + 52 | 0;
 HEAP16[$$3$i$i1002 >> 1] = 1024;
 HEAP16[$$3$i$i1002 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1002 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1002 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1002 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1002 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1002 + 16 >> 2] = $14496;
 HEAP32[$$3$i$i1002 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1002 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1002 + 48 >> 0] = 0;
 HEAP32[$86 >> 2] = $$3$i$i1002;
 _memcpy($14496 | 0, 716778, 2048) | 0;
 _memcpy($$3$i$i1002 + 2100 | 0, 718826, 2048) | 0;
 _memcpy($$3$i$i1002 + 4148 | 0, 720874, 2048) | 0;
 _memcpy($$3$i$i1002 + 6196 | 0, 722922, 2048) | 0;
 _memcpy($$3$i$i1002 + 8244 | 0, 724970, 2048) | 0;
 _memcpy($$3$i$i1002 + 10292 | 0, 727018, 2048) | 0;
 _memcpy($$3$i$i1002 + 12340 | 0, 729066, 2048) | 0;
 _memcpy($$3$i$i1002 + 14388 | 0, 731114, 2048) | 0;
 _memcpy($$3$i$i1002 + 16436 | 0, 733162, 2048) | 0;
 _memcpy($$3$i$i1002 + 18484 | 0, 735210, 2048) | 0;
 _memcpy($$3$i$i1002 + 20532 | 0, 737258, 2048) | 0;
 _memcpy($$3$i$i1002 + 22580 | 0, 739306, 2048) | 0;
 _memcpy($$3$i$i1002 + 24628 | 0, 741354, 2048) | 0;
 _memcpy($$3$i$i1002 + 26676 | 0, 743402, 2048) | 0;
 _memcpy($$3$i$i1002 + 28724 | 0, 745450, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $86);
 if ($$3$i$i1002 | 0) {
  $14521 = $$3$i$i1002 + 5 | 0;
  $14523 = (HEAP8[$14521 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14521 >> 0] = $14523;
  if (!($14523 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1002);
  HEAP32[$86 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3574 >> 1] = 393;
 HEAP16[$3575 >> 1] = 1023;
 HEAP16[$3576 >> 1] = 407;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1252; else {
  $14527 = HEAP32[915090] | 0;
  if (($14527 | 0) == (HEAP32[915088] | 0)) label = 1252; else {
   $$lcssa$i$i1014 = 3660360;
   $$lcssa8$i$i1013 = $14527;
   label = 1253;
  }
 }
 do if ((label | 0) == 1252) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14534 = HEAP32[915096] | 0;
   if (($14534 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1014 = 3660384;
    $$lcssa8$i$i1013 = $14534;
    label = 1253;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14539 = HEAP32[915102] | 0;
   if (($14539 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1014 = 3660408;
    $$lcssa8$i$i1013 = $14539;
    label = 1253;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $14544 = HEAP32[915108] | 0;
   if (($14544 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1014 = 3660432;
    $$lcssa8$i$i1013 = $14544;
    label = 1253;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $14549 = HEAP32[915114] | 0;
   if (($14549 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1014 = 3660456;
    $$lcssa8$i$i1013 = $14549;
    label = 1253;
    break;
   }
  }
  $$3$i$i1015 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1253) {
  $14532 = $$lcssa8$i$i1013 + -4 | 0;
  HEAP32[$$lcssa$i$i1014 >> 2] = $14532;
  $$3$i$i1015 = HEAP32[$14532 >> 2] | 0;
 }
 $14553 = $$3$i$i1015 + 52 | 0;
 HEAP16[$$3$i$i1015 >> 1] = 1024;
 HEAP16[$$3$i$i1015 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1015 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1015 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1015 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1015 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1015 + 16 >> 2] = $14553;
 HEAP32[$$3$i$i1015 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1015 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1015 + 48 >> 0] = 0;
 HEAP32[$87 >> 2] = $$3$i$i1015;
 _memcpy($14553 | 0, 747498, 2048) | 0;
 _memcpy($$3$i$i1015 + 2100 | 0, 749546, 2048) | 0;
 _memcpy($$3$i$i1015 + 4148 | 0, 751594, 2048) | 0;
 _memcpy($$3$i$i1015 + 6196 | 0, 753642, 2048) | 0;
 _memcpy($$3$i$i1015 + 8244 | 0, 755690, 2048) | 0;
 _memcpy($$3$i$i1015 + 10292 | 0, 757738, 2048) | 0;
 _memcpy($$3$i$i1015 + 12340 | 0, 759786, 2048) | 0;
 _memcpy($$3$i$i1015 + 14388 | 0, 761834, 2048) | 0;
 _memcpy($$3$i$i1015 + 16436 | 0, 763882, 2048) | 0;
 _memcpy($$3$i$i1015 + 18484 | 0, 765930, 2048) | 0;
 _memcpy($$3$i$i1015 + 20532 | 0, 767978, 2048) | 0;
 _memcpy($$3$i$i1015 + 22580 | 0, 770026, 2048) | 0;
 _memcpy($$3$i$i1015 + 24628 | 0, 772074, 2048) | 0;
 _memcpy($$3$i$i1015 + 26676 | 0, 774122, 2048) | 0;
 _memcpy($$3$i$i1015 + 28724 | 0, 776170, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $87);
 if ($$3$i$i1015 | 0) {
  $14578 = $$3$i$i1015 + 5 | 0;
  $14580 = (HEAP8[$14578 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14578 >> 0] = $14580;
  if (!($14580 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1015);
  HEAP32[$87 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3577 >> 1] = 408;
 HEAP16[$3578 >> 1] = 1023;
 HEAP16[$3579 >> 1] = 422;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1268; else {
  $14584 = HEAP32[915090] | 0;
  if (($14584 | 0) == (HEAP32[915088] | 0)) label = 1268; else {
   $$lcssa$i$i1027 = 3660360;
   $$lcssa8$i$i1026 = $14584;
   label = 1269;
  }
 }
 do if ((label | 0) == 1268) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14591 = HEAP32[915096] | 0;
   if (($14591 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1027 = 3660384;
    $$lcssa8$i$i1026 = $14591;
    label = 1269;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14596 = HEAP32[915102] | 0;
   if (($14596 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1027 = 3660408;
    $$lcssa8$i$i1026 = $14596;
    label = 1269;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $14601 = HEAP32[915108] | 0;
   if (($14601 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1027 = 3660432;
    $$lcssa8$i$i1026 = $14601;
    label = 1269;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $14606 = HEAP32[915114] | 0;
   if (($14606 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1027 = 3660456;
    $$lcssa8$i$i1026 = $14606;
    label = 1269;
    break;
   }
  }
  $$3$i$i1028 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1269) {
  $14589 = $$lcssa8$i$i1026 + -4 | 0;
  HEAP32[$$lcssa$i$i1027 >> 2] = $14589;
  $$3$i$i1028 = HEAP32[$14589 >> 2] | 0;
 }
 $14610 = $$3$i$i1028 + 52 | 0;
 HEAP16[$$3$i$i1028 >> 1] = 1024;
 HEAP16[$$3$i$i1028 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1028 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1028 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1028 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1028 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1028 + 16 >> 2] = $14610;
 HEAP32[$$3$i$i1028 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1028 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1028 + 48 >> 0] = 0;
 HEAP32[$88 >> 2] = $$3$i$i1028;
 _memcpy($14610 | 0, 778218, 2048) | 0;
 _memcpy($$3$i$i1028 + 2100 | 0, 780266, 2048) | 0;
 _memcpy($$3$i$i1028 + 4148 | 0, 782314, 2048) | 0;
 _memcpy($$3$i$i1028 + 6196 | 0, 784362, 2048) | 0;
 _memcpy($$3$i$i1028 + 8244 | 0, 786410, 2048) | 0;
 _memcpy($$3$i$i1028 + 10292 | 0, 788458, 2048) | 0;
 _memcpy($$3$i$i1028 + 12340 | 0, 790506, 2048) | 0;
 _memcpy($$3$i$i1028 + 14388 | 0, 792554, 2048) | 0;
 _memcpy($$3$i$i1028 + 16436 | 0, 794602, 2048) | 0;
 _memcpy($$3$i$i1028 + 18484 | 0, 796650, 2048) | 0;
 _memcpy($$3$i$i1028 + 20532 | 0, 798698, 2048) | 0;
 _memcpy($$3$i$i1028 + 22580 | 0, 800746, 2048) | 0;
 _memcpy($$3$i$i1028 + 24628 | 0, 802794, 2048) | 0;
 _memcpy($$3$i$i1028 + 26676 | 0, 804842, 2048) | 0;
 _memcpy($$3$i$i1028 + 28724 | 0, 806890, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $88);
 if ($$3$i$i1028 | 0) {
  $14635 = $$3$i$i1028 + 5 | 0;
  $14637 = (HEAP8[$14635 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14635 >> 0] = $14637;
  if (!($14637 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1028);
  HEAP32[$88 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3580 >> 1] = 423;
 HEAP16[$3581 >> 1] = 1023;
 HEAP16[$3582 >> 1] = 437;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1284; else {
  $14641 = HEAP32[915090] | 0;
  if (($14641 | 0) == (HEAP32[915088] | 0)) label = 1284; else {
   $$lcssa$i$i1040 = 3660360;
   $$lcssa8$i$i1039 = $14641;
   label = 1285;
  }
 }
 do if ((label | 0) == 1284) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14648 = HEAP32[915096] | 0;
   if (($14648 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1040 = 3660384;
    $$lcssa8$i$i1039 = $14648;
    label = 1285;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14653 = HEAP32[915102] | 0;
   if (($14653 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1040 = 3660408;
    $$lcssa8$i$i1039 = $14653;
    label = 1285;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $14658 = HEAP32[915108] | 0;
   if (($14658 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1040 = 3660432;
    $$lcssa8$i$i1039 = $14658;
    label = 1285;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $14663 = HEAP32[915114] | 0;
   if (($14663 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1040 = 3660456;
    $$lcssa8$i$i1039 = $14663;
    label = 1285;
    break;
   }
  }
  $$3$i$i1041 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1285) {
  $14646 = $$lcssa8$i$i1039 + -4 | 0;
  HEAP32[$$lcssa$i$i1040 >> 2] = $14646;
  $$3$i$i1041 = HEAP32[$14646 >> 2] | 0;
 }
 $14667 = $$3$i$i1041 + 52 | 0;
 HEAP16[$$3$i$i1041 >> 1] = 1024;
 HEAP16[$$3$i$i1041 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1041 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1041 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1041 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1041 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1041 + 16 >> 2] = $14667;
 HEAP32[$$3$i$i1041 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1041 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1041 + 48 >> 0] = 0;
 HEAP32[$89 >> 2] = $$3$i$i1041;
 _memcpy($14667 | 0, 808938, 2048) | 0;
 _memcpy($$3$i$i1041 + 2100 | 0, 810986, 2048) | 0;
 _memcpy($$3$i$i1041 + 4148 | 0, 813034, 2048) | 0;
 _memcpy($$3$i$i1041 + 6196 | 0, 815082, 2048) | 0;
 _memcpy($$3$i$i1041 + 8244 | 0, 817130, 2048) | 0;
 _memcpy($$3$i$i1041 + 10292 | 0, 819178, 2048) | 0;
 _memcpy($$3$i$i1041 + 12340 | 0, 821226, 2048) | 0;
 _memcpy($$3$i$i1041 + 14388 | 0, 823274, 2048) | 0;
 _memcpy($$3$i$i1041 + 16436 | 0, 825322, 2048) | 0;
 _memcpy($$3$i$i1041 + 18484 | 0, 827370, 2048) | 0;
 _memcpy($$3$i$i1041 + 20532 | 0, 829418, 2048) | 0;
 _memcpy($$3$i$i1041 + 22580 | 0, 831466, 2048) | 0;
 _memcpy($$3$i$i1041 + 24628 | 0, 833514, 2048) | 0;
 _memcpy($$3$i$i1041 + 26676 | 0, 835562, 2048) | 0;
 _memcpy($$3$i$i1041 + 28724 | 0, 837610, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $89);
 if ($$3$i$i1041 | 0) {
  $14692 = $$3$i$i1041 + 5 | 0;
  $14694 = (HEAP8[$14692 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14692 >> 0] = $14694;
  if (!($14694 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1041);
  HEAP32[$89 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3583 >> 1] = 438;
 HEAP16[$3584 >> 1] = 1023;
 HEAP16[$3585 >> 1] = 452;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1300; else {
  $14698 = HEAP32[915090] | 0;
  if (($14698 | 0) == (HEAP32[915088] | 0)) label = 1300; else {
   $$lcssa$i$i1053 = 3660360;
   $$lcssa8$i$i1052 = $14698;
   label = 1301;
  }
 }
 do if ((label | 0) == 1300) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14705 = HEAP32[915096] | 0;
   if (($14705 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1053 = 3660384;
    $$lcssa8$i$i1052 = $14705;
    label = 1301;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14710 = HEAP32[915102] | 0;
   if (($14710 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1053 = 3660408;
    $$lcssa8$i$i1052 = $14710;
    label = 1301;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $14715 = HEAP32[915108] | 0;
   if (($14715 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1053 = 3660432;
    $$lcssa8$i$i1052 = $14715;
    label = 1301;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $14720 = HEAP32[915114] | 0;
   if (($14720 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1053 = 3660456;
    $$lcssa8$i$i1052 = $14720;
    label = 1301;
    break;
   }
  }
  $$3$i$i1054 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1301) {
  $14703 = $$lcssa8$i$i1052 + -4 | 0;
  HEAP32[$$lcssa$i$i1053 >> 2] = $14703;
  $$3$i$i1054 = HEAP32[$14703 >> 2] | 0;
 }
 $14724 = $$3$i$i1054 + 52 | 0;
 HEAP16[$$3$i$i1054 >> 1] = 1024;
 HEAP16[$$3$i$i1054 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1054 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1054 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1054 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1054 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1054 + 16 >> 2] = $14724;
 HEAP32[$$3$i$i1054 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1054 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1054 + 48 >> 0] = 0;
 HEAP32[$90 >> 2] = $$3$i$i1054;
 _memcpy($14724 | 0, 839658, 2048) | 0;
 _memcpy($$3$i$i1054 + 2100 | 0, 841706, 2048) | 0;
 _memcpy($$3$i$i1054 + 4148 | 0, 843754, 2048) | 0;
 _memcpy($$3$i$i1054 + 6196 | 0, 845802, 2048) | 0;
 _memcpy($$3$i$i1054 + 8244 | 0, 847850, 2048) | 0;
 _memcpy($$3$i$i1054 + 10292 | 0, 849898, 2048) | 0;
 _memcpy($$3$i$i1054 + 12340 | 0, 851946, 2048) | 0;
 _memcpy($$3$i$i1054 + 14388 | 0, 853994, 2048) | 0;
 _memcpy($$3$i$i1054 + 16436 | 0, 856042, 2048) | 0;
 _memcpy($$3$i$i1054 + 18484 | 0, 858090, 2048) | 0;
 _memcpy($$3$i$i1054 + 20532 | 0, 860138, 2048) | 0;
 _memcpy($$3$i$i1054 + 22580 | 0, 862186, 2048) | 0;
 _memcpy($$3$i$i1054 + 24628 | 0, 864234, 2048) | 0;
 _memcpy($$3$i$i1054 + 26676 | 0, 866282, 2048) | 0;
 _memcpy($$3$i$i1054 + 28724 | 0, 868330, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $90);
 if ($$3$i$i1054 | 0) {
  $14749 = $$3$i$i1054 + 5 | 0;
  $14751 = (HEAP8[$14749 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14749 >> 0] = $14751;
  if (!($14751 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1054);
  HEAP32[$90 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3586 >> 1] = 453;
 HEAP16[$3587 >> 1] = 1023;
 HEAP16[$3588 >> 1] = 467;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1316; else {
  $14755 = HEAP32[915090] | 0;
  if (($14755 | 0) == (HEAP32[915088] | 0)) label = 1316; else {
   $$lcssa$i$i1066 = 3660360;
   $$lcssa8$i$i1065 = $14755;
   label = 1317;
  }
 }
 do if ((label | 0) == 1316) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14762 = HEAP32[915096] | 0;
   if (($14762 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1066 = 3660384;
    $$lcssa8$i$i1065 = $14762;
    label = 1317;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14767 = HEAP32[915102] | 0;
   if (($14767 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1066 = 3660408;
    $$lcssa8$i$i1065 = $14767;
    label = 1317;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $14772 = HEAP32[915108] | 0;
   if (($14772 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1066 = 3660432;
    $$lcssa8$i$i1065 = $14772;
    label = 1317;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $14777 = HEAP32[915114] | 0;
   if (($14777 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1066 = 3660456;
    $$lcssa8$i$i1065 = $14777;
    label = 1317;
    break;
   }
  }
  $$3$i$i1067 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1317) {
  $14760 = $$lcssa8$i$i1065 + -4 | 0;
  HEAP32[$$lcssa$i$i1066 >> 2] = $14760;
  $$3$i$i1067 = HEAP32[$14760 >> 2] | 0;
 }
 $14781 = $$3$i$i1067 + 52 | 0;
 HEAP16[$$3$i$i1067 >> 1] = 1024;
 HEAP16[$$3$i$i1067 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1067 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1067 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1067 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1067 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1067 + 16 >> 2] = $14781;
 HEAP32[$$3$i$i1067 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1067 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1067 + 48 >> 0] = 0;
 HEAP32[$91 >> 2] = $$3$i$i1067;
 _memcpy($14781 | 0, 870378, 2048) | 0;
 _memcpy($$3$i$i1067 + 2100 | 0, 872426, 2048) | 0;
 _memcpy($$3$i$i1067 + 4148 | 0, 874474, 2048) | 0;
 _memcpy($$3$i$i1067 + 6196 | 0, 876522, 2048) | 0;
 _memcpy($$3$i$i1067 + 8244 | 0, 878570, 2048) | 0;
 _memcpy($$3$i$i1067 + 10292 | 0, 880618, 2048) | 0;
 _memcpy($$3$i$i1067 + 12340 | 0, 882666, 2048) | 0;
 _memcpy($$3$i$i1067 + 14388 | 0, 884714, 2048) | 0;
 _memcpy($$3$i$i1067 + 16436 | 0, 886762, 2048) | 0;
 _memcpy($$3$i$i1067 + 18484 | 0, 888810, 2048) | 0;
 _memcpy($$3$i$i1067 + 20532 | 0, 890858, 2048) | 0;
 _memcpy($$3$i$i1067 + 22580 | 0, 892906, 2048) | 0;
 _memcpy($$3$i$i1067 + 24628 | 0, 894954, 2048) | 0;
 _memcpy($$3$i$i1067 + 26676 | 0, 897002, 2048) | 0;
 _memcpy($$3$i$i1067 + 28724 | 0, 899050, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $91);
 if ($$3$i$i1067 | 0) {
  $14806 = $$3$i$i1067 + 5 | 0;
  $14808 = (HEAP8[$14806 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14806 >> 0] = $14808;
  if (!($14808 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1067);
  HEAP32[$91 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3589 >> 1] = 468;
 HEAP16[$3590 >> 1] = 1023;
 HEAP16[$3591 >> 1] = 482;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1332; else {
  $14812 = HEAP32[915090] | 0;
  if (($14812 | 0) == (HEAP32[915088] | 0)) label = 1332; else {
   $$lcssa$i$i1079 = 3660360;
   $$lcssa8$i$i1078 = $14812;
   label = 1333;
  }
 }
 do if ((label | 0) == 1332) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14819 = HEAP32[915096] | 0;
   if (($14819 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1079 = 3660384;
    $$lcssa8$i$i1078 = $14819;
    label = 1333;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14824 = HEAP32[915102] | 0;
   if (($14824 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1079 = 3660408;
    $$lcssa8$i$i1078 = $14824;
    label = 1333;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $14829 = HEAP32[915108] | 0;
   if (($14829 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1079 = 3660432;
    $$lcssa8$i$i1078 = $14829;
    label = 1333;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $14834 = HEAP32[915114] | 0;
   if (($14834 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1079 = 3660456;
    $$lcssa8$i$i1078 = $14834;
    label = 1333;
    break;
   }
  }
  $$3$i$i1080 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1333) {
  $14817 = $$lcssa8$i$i1078 + -4 | 0;
  HEAP32[$$lcssa$i$i1079 >> 2] = $14817;
  $$3$i$i1080 = HEAP32[$14817 >> 2] | 0;
 }
 $14838 = $$3$i$i1080 + 52 | 0;
 HEAP16[$$3$i$i1080 >> 1] = 1024;
 HEAP16[$$3$i$i1080 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1080 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1080 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1080 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1080 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1080 + 16 >> 2] = $14838;
 HEAP32[$$3$i$i1080 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1080 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1080 + 48 >> 0] = 0;
 HEAP32[$92 >> 2] = $$3$i$i1080;
 _memcpy($14838 | 0, 901098, 2048) | 0;
 _memcpy($$3$i$i1080 + 2100 | 0, 903146, 2048) | 0;
 _memcpy($$3$i$i1080 + 4148 | 0, 905194, 2048) | 0;
 _memcpy($$3$i$i1080 + 6196 | 0, 907242, 2048) | 0;
 _memcpy($$3$i$i1080 + 8244 | 0, 909290, 2048) | 0;
 _memcpy($$3$i$i1080 + 10292 | 0, 911338, 2048) | 0;
 _memcpy($$3$i$i1080 + 12340 | 0, 913386, 2048) | 0;
 _memcpy($$3$i$i1080 + 14388 | 0, 915434, 2048) | 0;
 _memcpy($$3$i$i1080 + 16436 | 0, 917482, 2048) | 0;
 _memcpy($$3$i$i1080 + 18484 | 0, 919530, 2048) | 0;
 _memcpy($$3$i$i1080 + 20532 | 0, 921578, 2048) | 0;
 _memcpy($$3$i$i1080 + 22580 | 0, 923626, 2048) | 0;
 _memcpy($$3$i$i1080 + 24628 | 0, 925674, 2048) | 0;
 _memcpy($$3$i$i1080 + 26676 | 0, 927722, 2048) | 0;
 _memcpy($$3$i$i1080 + 28724 | 0, 929770, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $92);
 if ($$3$i$i1080 | 0) {
  $14863 = $$3$i$i1080 + 5 | 0;
  $14865 = (HEAP8[$14863 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14863 >> 0] = $14865;
  if (!($14865 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1080);
  HEAP32[$92 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3592 >> 1] = 483;
 HEAP16[$3593 >> 1] = 1023;
 HEAP16[$3594 >> 1] = 497;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1348; else {
  $14869 = HEAP32[915090] | 0;
  if (($14869 | 0) == (HEAP32[915088] | 0)) label = 1348; else {
   $$lcssa$i$i1092 = 3660360;
   $$lcssa8$i$i1091 = $14869;
   label = 1349;
  }
 }
 do if ((label | 0) == 1348) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14876 = HEAP32[915096] | 0;
   if (($14876 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1092 = 3660384;
    $$lcssa8$i$i1091 = $14876;
    label = 1349;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14881 = HEAP32[915102] | 0;
   if (($14881 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1092 = 3660408;
    $$lcssa8$i$i1091 = $14881;
    label = 1349;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $14886 = HEAP32[915108] | 0;
   if (($14886 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1092 = 3660432;
    $$lcssa8$i$i1091 = $14886;
    label = 1349;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $14891 = HEAP32[915114] | 0;
   if (($14891 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1092 = 3660456;
    $$lcssa8$i$i1091 = $14891;
    label = 1349;
    break;
   }
  }
  $$3$i$i1093 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1349) {
  $14874 = $$lcssa8$i$i1091 + -4 | 0;
  HEAP32[$$lcssa$i$i1092 >> 2] = $14874;
  $$3$i$i1093 = HEAP32[$14874 >> 2] | 0;
 }
 $14895 = $$3$i$i1093 + 52 | 0;
 HEAP16[$$3$i$i1093 >> 1] = 1024;
 HEAP16[$$3$i$i1093 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1093 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1093 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1093 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1093 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1093 + 16 >> 2] = $14895;
 HEAP32[$$3$i$i1093 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1093 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1093 + 48 >> 0] = 0;
 HEAP32[$93 >> 2] = $$3$i$i1093;
 _memcpy($14895 | 0, 931818, 2048) | 0;
 _memcpy($$3$i$i1093 + 2100 | 0, 933866, 2048) | 0;
 _memcpy($$3$i$i1093 + 4148 | 0, 935914, 2048) | 0;
 _memcpy($$3$i$i1093 + 6196 | 0, 937962, 2048) | 0;
 _memcpy($$3$i$i1093 + 8244 | 0, 940010, 2048) | 0;
 _memcpy($$3$i$i1093 + 10292 | 0, 942058, 2048) | 0;
 _memcpy($$3$i$i1093 + 12340 | 0, 944106, 2048) | 0;
 _memcpy($$3$i$i1093 + 14388 | 0, 946154, 2048) | 0;
 _memcpy($$3$i$i1093 + 16436 | 0, 948202, 2048) | 0;
 _memcpy($$3$i$i1093 + 18484 | 0, 950250, 2048) | 0;
 _memcpy($$3$i$i1093 + 20532 | 0, 952298, 2048) | 0;
 _memcpy($$3$i$i1093 + 22580 | 0, 954346, 2048) | 0;
 _memcpy($$3$i$i1093 + 24628 | 0, 956394, 2048) | 0;
 _memcpy($$3$i$i1093 + 26676 | 0, 958442, 2048) | 0;
 _memcpy($$3$i$i1093 + 28724 | 0, 960490, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $93);
 if ($$3$i$i1093 | 0) {
  $14920 = $$3$i$i1093 + 5 | 0;
  $14922 = (HEAP8[$14920 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14920 >> 0] = $14922;
  if (!($14922 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1093);
  HEAP32[$93 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3595 >> 1] = 498;
 HEAP16[$3596 >> 1] = 1023;
 HEAP16[$3597 >> 1] = 512;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1364; else {
  $14926 = HEAP32[915090] | 0;
  if (($14926 | 0) == (HEAP32[915088] | 0)) label = 1364; else {
   $$lcssa$i$i1105 = 3660360;
   $$lcssa8$i$i1104 = $14926;
   label = 1365;
  }
 }
 do if ((label | 0) == 1364) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14933 = HEAP32[915096] | 0;
   if (($14933 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1105 = 3660384;
    $$lcssa8$i$i1104 = $14933;
    label = 1365;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14938 = HEAP32[915102] | 0;
   if (($14938 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1105 = 3660408;
    $$lcssa8$i$i1104 = $14938;
    label = 1365;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $14943 = HEAP32[915108] | 0;
   if (($14943 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1105 = 3660432;
    $$lcssa8$i$i1104 = $14943;
    label = 1365;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $14948 = HEAP32[915114] | 0;
   if (($14948 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1105 = 3660456;
    $$lcssa8$i$i1104 = $14948;
    label = 1365;
    break;
   }
  }
  $$3$i$i1106 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1365) {
  $14931 = $$lcssa8$i$i1104 + -4 | 0;
  HEAP32[$$lcssa$i$i1105 >> 2] = $14931;
  $$3$i$i1106 = HEAP32[$14931 >> 2] | 0;
 }
 $14952 = $$3$i$i1106 + 52 | 0;
 HEAP16[$$3$i$i1106 >> 1] = 1024;
 HEAP16[$$3$i$i1106 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1106 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1106 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1106 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1106 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1106 + 16 >> 2] = $14952;
 HEAP32[$$3$i$i1106 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1106 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1106 + 48 >> 0] = 0;
 HEAP32[$94 >> 2] = $$3$i$i1106;
 _memcpy($14952 | 0, 962538, 2048) | 0;
 _memcpy($$3$i$i1106 + 2100 | 0, 964586, 2048) | 0;
 _memcpy($$3$i$i1106 + 4148 | 0, 966634, 2048) | 0;
 _memcpy($$3$i$i1106 + 6196 | 0, 968682, 2048) | 0;
 _memcpy($$3$i$i1106 + 8244 | 0, 970730, 2048) | 0;
 _memcpy($$3$i$i1106 + 10292 | 0, 972778, 2048) | 0;
 _memcpy($$3$i$i1106 + 12340 | 0, 974826, 2048) | 0;
 _memcpy($$3$i$i1106 + 14388 | 0, 976874, 2048) | 0;
 _memcpy($$3$i$i1106 + 16436 | 0, 978922, 2048) | 0;
 _memcpy($$3$i$i1106 + 18484 | 0, 980970, 2048) | 0;
 _memcpy($$3$i$i1106 + 20532 | 0, 983018, 2048) | 0;
 _memcpy($$3$i$i1106 + 22580 | 0, 985066, 2048) | 0;
 _memcpy($$3$i$i1106 + 24628 | 0, 987114, 2048) | 0;
 _memcpy($$3$i$i1106 + 26676 | 0, 989162, 2048) | 0;
 _memcpy($$3$i$i1106 + 28724 | 0, 991210, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $94);
 if ($$3$i$i1106 | 0) {
  $14977 = $$3$i$i1106 + 5 | 0;
  $14979 = (HEAP8[$14977 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$14977 >> 0] = $14979;
  if (!($14979 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1106);
  HEAP32[$94 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3598 >> 1] = 513;
 HEAP16[$3599 >> 1] = 1023;
 HEAP16[$3600 >> 1] = 527;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1380; else {
  $14983 = HEAP32[915090] | 0;
  if (($14983 | 0) == (HEAP32[915088] | 0)) label = 1380; else {
   $$lcssa$i$i1118 = 3660360;
   $$lcssa8$i$i1117 = $14983;
   label = 1381;
  }
 }
 do if ((label | 0) == 1380) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $14990 = HEAP32[915096] | 0;
   if (($14990 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1118 = 3660384;
    $$lcssa8$i$i1117 = $14990;
    label = 1381;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $14995 = HEAP32[915102] | 0;
   if (($14995 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1118 = 3660408;
    $$lcssa8$i$i1117 = $14995;
    label = 1381;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $15000 = HEAP32[915108] | 0;
   if (($15000 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1118 = 3660432;
    $$lcssa8$i$i1117 = $15000;
    label = 1381;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $15005 = HEAP32[915114] | 0;
   if (($15005 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1118 = 3660456;
    $$lcssa8$i$i1117 = $15005;
    label = 1381;
    break;
   }
  }
  $$3$i$i1119 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1381) {
  $14988 = $$lcssa8$i$i1117 + -4 | 0;
  HEAP32[$$lcssa$i$i1118 >> 2] = $14988;
  $$3$i$i1119 = HEAP32[$14988 >> 2] | 0;
 }
 $15009 = $$3$i$i1119 + 52 | 0;
 HEAP16[$$3$i$i1119 >> 1] = 1024;
 HEAP16[$$3$i$i1119 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1119 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1119 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1119 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1119 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1119 + 16 >> 2] = $15009;
 HEAP32[$$3$i$i1119 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1119 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1119 + 48 >> 0] = 0;
 HEAP32[$95 >> 2] = $$3$i$i1119;
 _memcpy($15009 | 0, 993258, 2048) | 0;
 _memcpy($$3$i$i1119 + 2100 | 0, 995306, 2048) | 0;
 _memcpy($$3$i$i1119 + 4148 | 0, 997354, 2048) | 0;
 _memcpy($$3$i$i1119 + 6196 | 0, 999402, 2048) | 0;
 _memcpy($$3$i$i1119 + 8244 | 0, 1001450, 2048) | 0;
 _memcpy($$3$i$i1119 + 10292 | 0, 1003498, 2048) | 0;
 _memcpy($$3$i$i1119 + 12340 | 0, 1005546, 2048) | 0;
 _memcpy($$3$i$i1119 + 14388 | 0, 1007594, 2048) | 0;
 _memcpy($$3$i$i1119 + 16436 | 0, 1009642, 2048) | 0;
 _memcpy($$3$i$i1119 + 18484 | 0, 1011690, 2048) | 0;
 _memcpy($$3$i$i1119 + 20532 | 0, 1013738, 2048) | 0;
 _memcpy($$3$i$i1119 + 22580 | 0, 1015786, 2048) | 0;
 _memcpy($$3$i$i1119 + 24628 | 0, 1017834, 2048) | 0;
 _memcpy($$3$i$i1119 + 26676 | 0, 1019882, 2048) | 0;
 _memcpy($$3$i$i1119 + 28724 | 0, 1021930, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $95);
 if ($$3$i$i1119 | 0) {
  $15034 = $$3$i$i1119 + 5 | 0;
  $15036 = (HEAP8[$15034 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15034 >> 0] = $15036;
  if (!($15036 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1119);
  HEAP32[$95 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3601 >> 1] = 528;
 HEAP16[$3602 >> 1] = 1023;
 HEAP16[$3603 >> 1] = 542;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1396; else {
  $15040 = HEAP32[915090] | 0;
  if (($15040 | 0) == (HEAP32[915088] | 0)) label = 1396; else {
   $$lcssa$i$i1131 = 3660360;
   $$lcssa8$i$i1130 = $15040;
   label = 1397;
  }
 }
 do if ((label | 0) == 1396) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $15047 = HEAP32[915096] | 0;
   if (($15047 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1131 = 3660384;
    $$lcssa8$i$i1130 = $15047;
    label = 1397;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $15052 = HEAP32[915102] | 0;
   if (($15052 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1131 = 3660408;
    $$lcssa8$i$i1130 = $15052;
    label = 1397;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $15057 = HEAP32[915108] | 0;
   if (($15057 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1131 = 3660432;
    $$lcssa8$i$i1130 = $15057;
    label = 1397;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $15062 = HEAP32[915114] | 0;
   if (($15062 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1131 = 3660456;
    $$lcssa8$i$i1130 = $15062;
    label = 1397;
    break;
   }
  }
  $$3$i$i1132 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1397) {
  $15045 = $$lcssa8$i$i1130 + -4 | 0;
  HEAP32[$$lcssa$i$i1131 >> 2] = $15045;
  $$3$i$i1132 = HEAP32[$15045 >> 2] | 0;
 }
 $15066 = $$3$i$i1132 + 52 | 0;
 HEAP16[$$3$i$i1132 >> 1] = 1024;
 HEAP16[$$3$i$i1132 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1132 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1132 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1132 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1132 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1132 + 16 >> 2] = $15066;
 HEAP32[$$3$i$i1132 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1132 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1132 + 48 >> 0] = 0;
 HEAP32[$96 >> 2] = $$3$i$i1132;
 _memcpy($15066 | 0, 1023978, 2048) | 0;
 _memcpy($$3$i$i1132 + 2100 | 0, 1026026, 2048) | 0;
 _memcpy($$3$i$i1132 + 4148 | 0, 1028074, 2048) | 0;
 _memcpy($$3$i$i1132 + 6196 | 0, 1030122, 2048) | 0;
 _memcpy($$3$i$i1132 + 8244 | 0, 1032170, 2048) | 0;
 _memcpy($$3$i$i1132 + 10292 | 0, 1034218, 2048) | 0;
 _memcpy($$3$i$i1132 + 12340 | 0, 1036266, 2048) | 0;
 _memcpy($$3$i$i1132 + 14388 | 0, 1038314, 2048) | 0;
 _memcpy($$3$i$i1132 + 16436 | 0, 1040362, 2048) | 0;
 _memcpy($$3$i$i1132 + 18484 | 0, 1042410, 2048) | 0;
 _memcpy($$3$i$i1132 + 20532 | 0, 1044458, 2048) | 0;
 _memcpy($$3$i$i1132 + 22580 | 0, 1046506, 2048) | 0;
 _memcpy($$3$i$i1132 + 24628 | 0, 1048554, 2048) | 0;
 _memcpy($$3$i$i1132 + 26676 | 0, 1050602, 2048) | 0;
 _memcpy($$3$i$i1132 + 28724 | 0, 1052650, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $96);
 if ($$3$i$i1132 | 0) {
  $15091 = $$3$i$i1132 + 5 | 0;
  $15093 = (HEAP8[$15091 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15091 >> 0] = $15093;
  if (!($15093 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1132);
  HEAP32[$96 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3604 >> 1] = 543;
 HEAP16[$3605 >> 1] = 1023;
 HEAP16[$3606 >> 1] = 557;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1412; else {
  $15097 = HEAP32[915090] | 0;
  if (($15097 | 0) == (HEAP32[915088] | 0)) label = 1412; else {
   $$lcssa$i$i1144 = 3660360;
   $$lcssa8$i$i1143 = $15097;
   label = 1413;
  }
 }
 do if ((label | 0) == 1412) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $15104 = HEAP32[915096] | 0;
   if (($15104 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1144 = 3660384;
    $$lcssa8$i$i1143 = $15104;
    label = 1413;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $15109 = HEAP32[915102] | 0;
   if (($15109 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1144 = 3660408;
    $$lcssa8$i$i1143 = $15109;
    label = 1413;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $15114 = HEAP32[915108] | 0;
   if (($15114 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1144 = 3660432;
    $$lcssa8$i$i1143 = $15114;
    label = 1413;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $15119 = HEAP32[915114] | 0;
   if (($15119 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1144 = 3660456;
    $$lcssa8$i$i1143 = $15119;
    label = 1413;
    break;
   }
  }
  $$3$i$i1145 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1413) {
  $15102 = $$lcssa8$i$i1143 + -4 | 0;
  HEAP32[$$lcssa$i$i1144 >> 2] = $15102;
  $$3$i$i1145 = HEAP32[$15102 >> 2] | 0;
 }
 $15123 = $$3$i$i1145 + 52 | 0;
 HEAP16[$$3$i$i1145 >> 1] = 1024;
 HEAP16[$$3$i$i1145 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1145 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1145 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1145 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1145 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1145 + 16 >> 2] = $15123;
 HEAP32[$$3$i$i1145 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1145 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1145 + 48 >> 0] = 0;
 HEAP32[$97 >> 2] = $$3$i$i1145;
 _memcpy($15123 | 0, 1054698, 2048) | 0;
 _memcpy($$3$i$i1145 + 2100 | 0, 1056746, 2048) | 0;
 _memcpy($$3$i$i1145 + 4148 | 0, 1058794, 2048) | 0;
 _memcpy($$3$i$i1145 + 6196 | 0, 1060842, 2048) | 0;
 _memcpy($$3$i$i1145 + 8244 | 0, 1062890, 2048) | 0;
 _memcpy($$3$i$i1145 + 10292 | 0, 1064938, 2048) | 0;
 _memcpy($$3$i$i1145 + 12340 | 0, 1066986, 2048) | 0;
 _memcpy($$3$i$i1145 + 14388 | 0, 1069034, 2048) | 0;
 _memcpy($$3$i$i1145 + 16436 | 0, 1071082, 2048) | 0;
 _memcpy($$3$i$i1145 + 18484 | 0, 1073130, 2048) | 0;
 _memcpy($$3$i$i1145 + 20532 | 0, 1075178, 2048) | 0;
 _memcpy($$3$i$i1145 + 22580 | 0, 1077226, 2048) | 0;
 _memcpy($$3$i$i1145 + 24628 | 0, 1079274, 2048) | 0;
 _memcpy($$3$i$i1145 + 26676 | 0, 1081322, 2048) | 0;
 _memcpy($$3$i$i1145 + 28724 | 0, 1083370, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $97);
 if ($$3$i$i1145 | 0) {
  $15148 = $$3$i$i1145 + 5 | 0;
  $15150 = (HEAP8[$15148 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15148 >> 0] = $15150;
  if (!($15150 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1145);
  HEAP32[$97 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3607 >> 1] = 558;
 HEAP16[$3608 >> 1] = 1023;
 HEAP16[$3609 >> 1] = 572;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1428; else {
  $15154 = HEAP32[915090] | 0;
  if (($15154 | 0) == (HEAP32[915088] | 0)) label = 1428; else {
   $$lcssa$i$i1157 = 3660360;
   $$lcssa8$i$i1156 = $15154;
   label = 1429;
  }
 }
 do if ((label | 0) == 1428) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $15161 = HEAP32[915096] | 0;
   if (($15161 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1157 = 3660384;
    $$lcssa8$i$i1156 = $15161;
    label = 1429;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $15166 = HEAP32[915102] | 0;
   if (($15166 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1157 = 3660408;
    $$lcssa8$i$i1156 = $15166;
    label = 1429;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $15171 = HEAP32[915108] | 0;
   if (($15171 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1157 = 3660432;
    $$lcssa8$i$i1156 = $15171;
    label = 1429;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $15176 = HEAP32[915114] | 0;
   if (($15176 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1157 = 3660456;
    $$lcssa8$i$i1156 = $15176;
    label = 1429;
    break;
   }
  }
  $$3$i$i1158 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1429) {
  $15159 = $$lcssa8$i$i1156 + -4 | 0;
  HEAP32[$$lcssa$i$i1157 >> 2] = $15159;
  $$3$i$i1158 = HEAP32[$15159 >> 2] | 0;
 }
 $15180 = $$3$i$i1158 + 52 | 0;
 HEAP16[$$3$i$i1158 >> 1] = 1024;
 HEAP16[$$3$i$i1158 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1158 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1158 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1158 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1158 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1158 + 16 >> 2] = $15180;
 HEAP32[$$3$i$i1158 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1158 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1158 + 48 >> 0] = 0;
 HEAP32[$98 >> 2] = $$3$i$i1158;
 _memcpy($15180 | 0, 1085418, 2048) | 0;
 _memcpy($$3$i$i1158 + 2100 | 0, 1087466, 2048) | 0;
 _memcpy($$3$i$i1158 + 4148 | 0, 1089514, 2048) | 0;
 _memcpy($$3$i$i1158 + 6196 | 0, 1091562, 2048) | 0;
 _memcpy($$3$i$i1158 + 8244 | 0, 1093610, 2048) | 0;
 _memcpy($$3$i$i1158 + 10292 | 0, 1095658, 2048) | 0;
 _memcpy($$3$i$i1158 + 12340 | 0, 1097706, 2048) | 0;
 _memcpy($$3$i$i1158 + 14388 | 0, 1099754, 2048) | 0;
 _memcpy($$3$i$i1158 + 16436 | 0, 1101802, 2048) | 0;
 _memcpy($$3$i$i1158 + 18484 | 0, 1103850, 2048) | 0;
 _memcpy($$3$i$i1158 + 20532 | 0, 1105898, 2048) | 0;
 _memcpy($$3$i$i1158 + 22580 | 0, 1107946, 2048) | 0;
 _memcpy($$3$i$i1158 + 24628 | 0, 1109994, 2048) | 0;
 _memcpy($$3$i$i1158 + 26676 | 0, 1112042, 2048) | 0;
 _memcpy($$3$i$i1158 + 28724 | 0, 1114090, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $98);
 if ($$3$i$i1158 | 0) {
  $15205 = $$3$i$i1158 + 5 | 0;
  $15207 = (HEAP8[$15205 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15205 >> 0] = $15207;
  if (!($15207 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1158);
  HEAP32[$98 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3610 >> 1] = 573;
 HEAP16[$3611 >> 1] = 1023;
 HEAP16[$3612 >> 1] = 587;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1444; else {
  $15211 = HEAP32[915090] | 0;
  if (($15211 | 0) == (HEAP32[915088] | 0)) label = 1444; else {
   $$lcssa$i$i1170 = 3660360;
   $$lcssa8$i$i1169 = $15211;
   label = 1445;
  }
 }
 do if ((label | 0) == 1444) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $15218 = HEAP32[915096] | 0;
   if (($15218 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1170 = 3660384;
    $$lcssa8$i$i1169 = $15218;
    label = 1445;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $15223 = HEAP32[915102] | 0;
   if (($15223 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1170 = 3660408;
    $$lcssa8$i$i1169 = $15223;
    label = 1445;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $15228 = HEAP32[915108] | 0;
   if (($15228 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1170 = 3660432;
    $$lcssa8$i$i1169 = $15228;
    label = 1445;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $15233 = HEAP32[915114] | 0;
   if (($15233 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1170 = 3660456;
    $$lcssa8$i$i1169 = $15233;
    label = 1445;
    break;
   }
  }
  $$3$i$i1171 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1445) {
  $15216 = $$lcssa8$i$i1169 + -4 | 0;
  HEAP32[$$lcssa$i$i1170 >> 2] = $15216;
  $$3$i$i1171 = HEAP32[$15216 >> 2] | 0;
 }
 $15237 = $$3$i$i1171 + 52 | 0;
 HEAP16[$$3$i$i1171 >> 1] = 1024;
 HEAP16[$$3$i$i1171 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1171 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1171 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1171 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1171 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1171 + 16 >> 2] = $15237;
 HEAP32[$$3$i$i1171 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1171 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1171 + 48 >> 0] = 0;
 HEAP32[$99 >> 2] = $$3$i$i1171;
 _memcpy($15237 | 0, 1116138, 2048) | 0;
 _memcpy($$3$i$i1171 + 2100 | 0, 1118186, 2048) | 0;
 _memcpy($$3$i$i1171 + 4148 | 0, 1120234, 2048) | 0;
 _memcpy($$3$i$i1171 + 6196 | 0, 1122282, 2048) | 0;
 _memcpy($$3$i$i1171 + 8244 | 0, 1124330, 2048) | 0;
 _memcpy($$3$i$i1171 + 10292 | 0, 1126378, 2048) | 0;
 _memcpy($$3$i$i1171 + 12340 | 0, 1128426, 2048) | 0;
 _memcpy($$3$i$i1171 + 14388 | 0, 1130474, 2048) | 0;
 _memcpy($$3$i$i1171 + 16436 | 0, 1132522, 2048) | 0;
 _memcpy($$3$i$i1171 + 18484 | 0, 1134570, 2048) | 0;
 _memcpy($$3$i$i1171 + 20532 | 0, 1136618, 2048) | 0;
 _memcpy($$3$i$i1171 + 22580 | 0, 1138666, 2048) | 0;
 _memcpy($$3$i$i1171 + 24628 | 0, 1140714, 2048) | 0;
 _memcpy($$3$i$i1171 + 26676 | 0, 1142762, 2048) | 0;
 _memcpy($$3$i$i1171 + 28724 | 0, 1144810, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $99);
 if ($$3$i$i1171 | 0) {
  $15262 = $$3$i$i1171 + 5 | 0;
  $15264 = (HEAP8[$15262 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15262 >> 0] = $15264;
  if (!($15264 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1171);
  HEAP32[$99 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3613 >> 1] = 588;
 HEAP16[$3614 >> 1] = 1023;
 HEAP16[$3615 >> 1] = 602;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1460; else {
  $15268 = HEAP32[915090] | 0;
  if (($15268 | 0) == (HEAP32[915088] | 0)) label = 1460; else {
   $$lcssa$i$i1183 = 3660360;
   $$lcssa8$i$i1182 = $15268;
   label = 1461;
  }
 }
 do if ((label | 0) == 1460) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $15275 = HEAP32[915096] | 0;
   if (($15275 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1183 = 3660384;
    $$lcssa8$i$i1182 = $15275;
    label = 1461;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $15280 = HEAP32[915102] | 0;
   if (($15280 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1183 = 3660408;
    $$lcssa8$i$i1182 = $15280;
    label = 1461;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $15285 = HEAP32[915108] | 0;
   if (($15285 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1183 = 3660432;
    $$lcssa8$i$i1182 = $15285;
    label = 1461;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $15290 = HEAP32[915114] | 0;
   if (($15290 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1183 = 3660456;
    $$lcssa8$i$i1182 = $15290;
    label = 1461;
    break;
   }
  }
  $$3$i$i1184 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1461) {
  $15273 = $$lcssa8$i$i1182 + -4 | 0;
  HEAP32[$$lcssa$i$i1183 >> 2] = $15273;
  $$3$i$i1184 = HEAP32[$15273 >> 2] | 0;
 }
 $15294 = $$3$i$i1184 + 52 | 0;
 HEAP16[$$3$i$i1184 >> 1] = 1024;
 HEAP16[$$3$i$i1184 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1184 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1184 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1184 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1184 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1184 + 16 >> 2] = $15294;
 HEAP32[$$3$i$i1184 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1184 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1184 + 48 >> 0] = 0;
 HEAP32[$100 >> 2] = $$3$i$i1184;
 _memcpy($15294 | 0, 1146858, 2048) | 0;
 _memcpy($$3$i$i1184 + 2100 | 0, 1148906, 2048) | 0;
 _memcpy($$3$i$i1184 + 4148 | 0, 1150954, 2048) | 0;
 _memcpy($$3$i$i1184 + 6196 | 0, 1153002, 2048) | 0;
 _memcpy($$3$i$i1184 + 8244 | 0, 1155050, 2048) | 0;
 _memcpy($$3$i$i1184 + 10292 | 0, 1157098, 2048) | 0;
 _memcpy($$3$i$i1184 + 12340 | 0, 1159146, 2048) | 0;
 _memcpy($$3$i$i1184 + 14388 | 0, 1161194, 2048) | 0;
 _memcpy($$3$i$i1184 + 16436 | 0, 1163242, 2048) | 0;
 _memcpy($$3$i$i1184 + 18484 | 0, 1165290, 2048) | 0;
 _memcpy($$3$i$i1184 + 20532 | 0, 1167338, 2048) | 0;
 _memcpy($$3$i$i1184 + 22580 | 0, 1169386, 2048) | 0;
 _memcpy($$3$i$i1184 + 24628 | 0, 1171434, 2048) | 0;
 _memcpy($$3$i$i1184 + 26676 | 0, 1173482, 2048) | 0;
 _memcpy($$3$i$i1184 + 28724 | 0, 1175530, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $100);
 if ($$3$i$i1184 | 0) {
  $15319 = $$3$i$i1184 + 5 | 0;
  $15321 = (HEAP8[$15319 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15319 >> 0] = $15321;
  if (!($15321 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1184);
  HEAP32[$100 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3616 >> 1] = 603;
 HEAP16[$3617 >> 1] = 1023;
 HEAP16[$3618 >> 1] = 617;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1476; else {
  $15325 = HEAP32[915090] | 0;
  if (($15325 | 0) == (HEAP32[915088] | 0)) label = 1476; else {
   $$lcssa$i$i1196 = 3660360;
   $$lcssa8$i$i1195 = $15325;
   label = 1477;
  }
 }
 do if ((label | 0) == 1476) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $15332 = HEAP32[915096] | 0;
   if (($15332 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1196 = 3660384;
    $$lcssa8$i$i1195 = $15332;
    label = 1477;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $15337 = HEAP32[915102] | 0;
   if (($15337 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1196 = 3660408;
    $$lcssa8$i$i1195 = $15337;
    label = 1477;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $15342 = HEAP32[915108] | 0;
   if (($15342 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1196 = 3660432;
    $$lcssa8$i$i1195 = $15342;
    label = 1477;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $15347 = HEAP32[915114] | 0;
   if (($15347 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1196 = 3660456;
    $$lcssa8$i$i1195 = $15347;
    label = 1477;
    break;
   }
  }
  $$3$i$i1197 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1477) {
  $15330 = $$lcssa8$i$i1195 + -4 | 0;
  HEAP32[$$lcssa$i$i1196 >> 2] = $15330;
  $$3$i$i1197 = HEAP32[$15330 >> 2] | 0;
 }
 $15351 = $$3$i$i1197 + 52 | 0;
 HEAP16[$$3$i$i1197 >> 1] = 1024;
 HEAP16[$$3$i$i1197 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1197 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1197 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1197 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1197 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1197 + 16 >> 2] = $15351;
 HEAP32[$$3$i$i1197 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1197 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1197 + 48 >> 0] = 0;
 HEAP32[$101 >> 2] = $$3$i$i1197;
 _memcpy($15351 | 0, 1177578, 2048) | 0;
 _memcpy($$3$i$i1197 + 2100 | 0, 1179626, 2048) | 0;
 _memcpy($$3$i$i1197 + 4148 | 0, 1181674, 2048) | 0;
 _memcpy($$3$i$i1197 + 6196 | 0, 1183722, 2048) | 0;
 _memcpy($$3$i$i1197 + 8244 | 0, 1185770, 2048) | 0;
 _memcpy($$3$i$i1197 + 10292 | 0, 1187818, 2048) | 0;
 _memcpy($$3$i$i1197 + 12340 | 0, 1189866, 2048) | 0;
 _memcpy($$3$i$i1197 + 14388 | 0, 1191914, 2048) | 0;
 _memcpy($$3$i$i1197 + 16436 | 0, 1193962, 2048) | 0;
 _memcpy($$3$i$i1197 + 18484 | 0, 1196010, 2048) | 0;
 _memcpy($$3$i$i1197 + 20532 | 0, 1198058, 2048) | 0;
 _memcpy($$3$i$i1197 + 22580 | 0, 1200106, 2048) | 0;
 _memcpy($$3$i$i1197 + 24628 | 0, 1202154, 2048) | 0;
 _memcpy($$3$i$i1197 + 26676 | 0, 1204202, 2048) | 0;
 _memcpy($$3$i$i1197 + 28724 | 0, 1206250, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $101);
 if ($$3$i$i1197 | 0) {
  $15376 = $$3$i$i1197 + 5 | 0;
  $15378 = (HEAP8[$15376 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15376 >> 0] = $15378;
  if (!($15378 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1197);
  HEAP32[$101 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3619 >> 1] = 618;
 HEAP16[$3620 >> 1] = 1023;
 HEAP16[$3621 >> 1] = 632;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1492; else {
  $15382 = HEAP32[915090] | 0;
  if (($15382 | 0) == (HEAP32[915088] | 0)) label = 1492; else {
   $$lcssa$i$i1209 = 3660360;
   $$lcssa8$i$i1208 = $15382;
   label = 1493;
  }
 }
 do if ((label | 0) == 1492) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $15389 = HEAP32[915096] | 0;
   if (($15389 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1209 = 3660384;
    $$lcssa8$i$i1208 = $15389;
    label = 1493;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $15394 = HEAP32[915102] | 0;
   if (($15394 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1209 = 3660408;
    $$lcssa8$i$i1208 = $15394;
    label = 1493;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $15399 = HEAP32[915108] | 0;
   if (($15399 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1209 = 3660432;
    $$lcssa8$i$i1208 = $15399;
    label = 1493;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $15404 = HEAP32[915114] | 0;
   if (($15404 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1209 = 3660456;
    $$lcssa8$i$i1208 = $15404;
    label = 1493;
    break;
   }
  }
  $$3$i$i1210 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1493) {
  $15387 = $$lcssa8$i$i1208 + -4 | 0;
  HEAP32[$$lcssa$i$i1209 >> 2] = $15387;
  $$3$i$i1210 = HEAP32[$15387 >> 2] | 0;
 }
 $15408 = $$3$i$i1210 + 52 | 0;
 HEAP16[$$3$i$i1210 >> 1] = 1024;
 HEAP16[$$3$i$i1210 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1210 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1210 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1210 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1210 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1210 + 16 >> 2] = $15408;
 HEAP32[$$3$i$i1210 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1210 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1210 + 48 >> 0] = 0;
 HEAP32[$102 >> 2] = $$3$i$i1210;
 _memcpy($15408 | 0, 1208298, 2048) | 0;
 _memcpy($$3$i$i1210 + 2100 | 0, 1210346, 2048) | 0;
 _memcpy($$3$i$i1210 + 4148 | 0, 1212394, 2048) | 0;
 _memcpy($$3$i$i1210 + 6196 | 0, 1214442, 2048) | 0;
 _memcpy($$3$i$i1210 + 8244 | 0, 1216490, 2048) | 0;
 _memcpy($$3$i$i1210 + 10292 | 0, 1218538, 2048) | 0;
 _memcpy($$3$i$i1210 + 12340 | 0, 1220586, 2048) | 0;
 _memcpy($$3$i$i1210 + 14388 | 0, 1222634, 2048) | 0;
 _memcpy($$3$i$i1210 + 16436 | 0, 1224682, 2048) | 0;
 _memcpy($$3$i$i1210 + 18484 | 0, 1226730, 2048) | 0;
 _memcpy($$3$i$i1210 + 20532 | 0, 1228778, 2048) | 0;
 _memcpy($$3$i$i1210 + 22580 | 0, 1230826, 2048) | 0;
 _memcpy($$3$i$i1210 + 24628 | 0, 1232874, 2048) | 0;
 _memcpy($$3$i$i1210 + 26676 | 0, 1234922, 2048) | 0;
 _memcpy($$3$i$i1210 + 28724 | 0, 1236970, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $102);
 if ($$3$i$i1210 | 0) {
  $15433 = $$3$i$i1210 + 5 | 0;
  $15435 = (HEAP8[$15433 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15433 >> 0] = $15435;
  if (!($15435 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1210);
  HEAP32[$102 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3622 >> 1] = 633;
 HEAP16[$3623 >> 1] = 1023;
 HEAP16[$3624 >> 1] = 647;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1508; else {
  $15439 = HEAP32[915090] | 0;
  if (($15439 | 0) == (HEAP32[915088] | 0)) label = 1508; else {
   $$lcssa$i$i1222 = 3660360;
   $$lcssa8$i$i1221 = $15439;
   label = 1509;
  }
 }
 do if ((label | 0) == 1508) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $15446 = HEAP32[915096] | 0;
   if (($15446 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1222 = 3660384;
    $$lcssa8$i$i1221 = $15446;
    label = 1509;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $15451 = HEAP32[915102] | 0;
   if (($15451 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1222 = 3660408;
    $$lcssa8$i$i1221 = $15451;
    label = 1509;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $15456 = HEAP32[915108] | 0;
   if (($15456 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1222 = 3660432;
    $$lcssa8$i$i1221 = $15456;
    label = 1509;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $15461 = HEAP32[915114] | 0;
   if (($15461 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1222 = 3660456;
    $$lcssa8$i$i1221 = $15461;
    label = 1509;
    break;
   }
  }
  $$3$i$i1223 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1509) {
  $15444 = $$lcssa8$i$i1221 + -4 | 0;
  HEAP32[$$lcssa$i$i1222 >> 2] = $15444;
  $$3$i$i1223 = HEAP32[$15444 >> 2] | 0;
 }
 $15465 = $$3$i$i1223 + 52 | 0;
 HEAP16[$$3$i$i1223 >> 1] = 1024;
 HEAP16[$$3$i$i1223 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1223 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1223 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1223 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1223 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1223 + 16 >> 2] = $15465;
 HEAP32[$$3$i$i1223 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1223 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1223 + 48 >> 0] = 0;
 HEAP32[$103 >> 2] = $$3$i$i1223;
 _memcpy($15465 | 0, 1239018, 2048) | 0;
 _memcpy($$3$i$i1223 + 2100 | 0, 1241066, 2048) | 0;
 _memcpy($$3$i$i1223 + 4148 | 0, 1243114, 2048) | 0;
 _memcpy($$3$i$i1223 + 6196 | 0, 1245162, 2048) | 0;
 _memcpy($$3$i$i1223 + 8244 | 0, 1247210, 2048) | 0;
 _memcpy($$3$i$i1223 + 10292 | 0, 1249258, 2048) | 0;
 _memcpy($$3$i$i1223 + 12340 | 0, 1251306, 2048) | 0;
 _memcpy($$3$i$i1223 + 14388 | 0, 1253354, 2048) | 0;
 _memcpy($$3$i$i1223 + 16436 | 0, 1255402, 2048) | 0;
 _memcpy($$3$i$i1223 + 18484 | 0, 1257450, 2048) | 0;
 _memcpy($$3$i$i1223 + 20532 | 0, 1259498, 2048) | 0;
 _memcpy($$3$i$i1223 + 22580 | 0, 1261546, 2048) | 0;
 _memcpy($$3$i$i1223 + 24628 | 0, 1263594, 2048) | 0;
 _memcpy($$3$i$i1223 + 26676 | 0, 1265642, 2048) | 0;
 _memcpy($$3$i$i1223 + 28724 | 0, 1267690, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $103);
 if ($$3$i$i1223 | 0) {
  $15490 = $$3$i$i1223 + 5 | 0;
  $15492 = (HEAP8[$15490 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15490 >> 0] = $15492;
  if (!($15492 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1223);
  HEAP32[$103 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3625 >> 1] = 648;
 HEAP16[$3626 >> 1] = 1023;
 HEAP16[$3627 >> 1] = 662;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1524; else {
  $15496 = HEAP32[915090] | 0;
  if (($15496 | 0) == (HEAP32[915088] | 0)) label = 1524; else {
   $$lcssa$i$i1235 = 3660360;
   $$lcssa8$i$i1234 = $15496;
   label = 1525;
  }
 }
 do if ((label | 0) == 1524) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $15503 = HEAP32[915096] | 0;
   if (($15503 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1235 = 3660384;
    $$lcssa8$i$i1234 = $15503;
    label = 1525;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $15508 = HEAP32[915102] | 0;
   if (($15508 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1235 = 3660408;
    $$lcssa8$i$i1234 = $15508;
    label = 1525;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $15513 = HEAP32[915108] | 0;
   if (($15513 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1235 = 3660432;
    $$lcssa8$i$i1234 = $15513;
    label = 1525;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $15518 = HEAP32[915114] | 0;
   if (($15518 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1235 = 3660456;
    $$lcssa8$i$i1234 = $15518;
    label = 1525;
    break;
   }
  }
  $$3$i$i1236 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1525) {
  $15501 = $$lcssa8$i$i1234 + -4 | 0;
  HEAP32[$$lcssa$i$i1235 >> 2] = $15501;
  $$3$i$i1236 = HEAP32[$15501 >> 2] | 0;
 }
 $15522 = $$3$i$i1236 + 52 | 0;
 HEAP16[$$3$i$i1236 >> 1] = 1024;
 HEAP16[$$3$i$i1236 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1236 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1236 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1236 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1236 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1236 + 16 >> 2] = $15522;
 HEAP32[$$3$i$i1236 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1236 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1236 + 48 >> 0] = 0;
 HEAP32[$104 >> 2] = $$3$i$i1236;
 _memcpy($15522 | 0, 1269738, 2048) | 0;
 _memcpy($$3$i$i1236 + 2100 | 0, 1271786, 2048) | 0;
 _memcpy($$3$i$i1236 + 4148 | 0, 1273834, 2048) | 0;
 _memcpy($$3$i$i1236 + 6196 | 0, 1275882, 2048) | 0;
 _memcpy($$3$i$i1236 + 8244 | 0, 1277930, 2048) | 0;
 _memcpy($$3$i$i1236 + 10292 | 0, 1279978, 2048) | 0;
 _memcpy($$3$i$i1236 + 12340 | 0, 1282026, 2048) | 0;
 _memcpy($$3$i$i1236 + 14388 | 0, 1284074, 2048) | 0;
 _memcpy($$3$i$i1236 + 16436 | 0, 1286122, 2048) | 0;
 _memcpy($$3$i$i1236 + 18484 | 0, 1288170, 2048) | 0;
 _memcpy($$3$i$i1236 + 20532 | 0, 1290218, 2048) | 0;
 _memcpy($$3$i$i1236 + 22580 | 0, 1292266, 2048) | 0;
 _memcpy($$3$i$i1236 + 24628 | 0, 1294314, 2048) | 0;
 _memcpy($$3$i$i1236 + 26676 | 0, 1296362, 2048) | 0;
 _memcpy($$3$i$i1236 + 28724 | 0, 1298410, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $104);
 if ($$3$i$i1236 | 0) {
  $15547 = $$3$i$i1236 + 5 | 0;
  $15549 = (HEAP8[$15547 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15547 >> 0] = $15549;
  if (!($15549 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1236);
  HEAP32[$104 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3628 >> 1] = 663;
 HEAP16[$3629 >> 1] = 1023;
 HEAP16[$3630 >> 1] = 677;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1540; else {
  $15553 = HEAP32[915090] | 0;
  if (($15553 | 0) == (HEAP32[915088] | 0)) label = 1540; else {
   $$lcssa$i$i1248 = 3660360;
   $$lcssa8$i$i1247 = $15553;
   label = 1541;
  }
 }
 do if ((label | 0) == 1540) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $15560 = HEAP32[915096] | 0;
   if (($15560 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1248 = 3660384;
    $$lcssa8$i$i1247 = $15560;
    label = 1541;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $15565 = HEAP32[915102] | 0;
   if (($15565 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1248 = 3660408;
    $$lcssa8$i$i1247 = $15565;
    label = 1541;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $15570 = HEAP32[915108] | 0;
   if (($15570 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1248 = 3660432;
    $$lcssa8$i$i1247 = $15570;
    label = 1541;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $15575 = HEAP32[915114] | 0;
   if (($15575 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1248 = 3660456;
    $$lcssa8$i$i1247 = $15575;
    label = 1541;
    break;
   }
  }
  $$3$i$i1249 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1541) {
  $15558 = $$lcssa8$i$i1247 + -4 | 0;
  HEAP32[$$lcssa$i$i1248 >> 2] = $15558;
  $$3$i$i1249 = HEAP32[$15558 >> 2] | 0;
 }
 $15579 = $$3$i$i1249 + 52 | 0;
 HEAP16[$$3$i$i1249 >> 1] = 1024;
 HEAP16[$$3$i$i1249 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1249 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1249 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1249 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1249 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1249 + 16 >> 2] = $15579;
 HEAP32[$$3$i$i1249 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1249 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1249 + 48 >> 0] = 0;
 HEAP32[$105 >> 2] = $$3$i$i1249;
 _memcpy($15579 | 0, 1300458, 2048) | 0;
 _memcpy($$3$i$i1249 + 2100 | 0, 1302506, 2048) | 0;
 _memcpy($$3$i$i1249 + 4148 | 0, 1304554, 2048) | 0;
 _memcpy($$3$i$i1249 + 6196 | 0, 1306602, 2048) | 0;
 _memcpy($$3$i$i1249 + 8244 | 0, 1308650, 2048) | 0;
 _memcpy($$3$i$i1249 + 10292 | 0, 1310698, 2048) | 0;
 _memcpy($$3$i$i1249 + 12340 | 0, 1312746, 2048) | 0;
 _memcpy($$3$i$i1249 + 14388 | 0, 1314794, 2048) | 0;
 _memcpy($$3$i$i1249 + 16436 | 0, 1316842, 2048) | 0;
 _memcpy($$3$i$i1249 + 18484 | 0, 1318890, 2048) | 0;
 _memcpy($$3$i$i1249 + 20532 | 0, 1320938, 2048) | 0;
 _memcpy($$3$i$i1249 + 22580 | 0, 1322986, 2048) | 0;
 _memcpy($$3$i$i1249 + 24628 | 0, 1325034, 2048) | 0;
 _memcpy($$3$i$i1249 + 26676 | 0, 1327082, 2048) | 0;
 _memcpy($$3$i$i1249 + 28724 | 0, 1329130, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $105);
 if ($$3$i$i1249 | 0) {
  $15604 = $$3$i$i1249 + 5 | 0;
  $15606 = (HEAP8[$15604 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15604 >> 0] = $15606;
  if (!($15606 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1249);
  HEAP32[$105 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3631 >> 1] = 678;
 HEAP16[$3632 >> 1] = 1023;
 HEAP16[$3633 >> 1] = 692;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1556; else {
  $15610 = HEAP32[915090] | 0;
  if (($15610 | 0) == (HEAP32[915088] | 0)) label = 1556; else {
   $$lcssa$i$i1261 = 3660360;
   $$lcssa8$i$i1260 = $15610;
   label = 1557;
  }
 }
 do if ((label | 0) == 1556) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $15617 = HEAP32[915096] | 0;
   if (($15617 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1261 = 3660384;
    $$lcssa8$i$i1260 = $15617;
    label = 1557;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $15622 = HEAP32[915102] | 0;
   if (($15622 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1261 = 3660408;
    $$lcssa8$i$i1260 = $15622;
    label = 1557;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $15627 = HEAP32[915108] | 0;
   if (($15627 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1261 = 3660432;
    $$lcssa8$i$i1260 = $15627;
    label = 1557;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $15632 = HEAP32[915114] | 0;
   if (($15632 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1261 = 3660456;
    $$lcssa8$i$i1260 = $15632;
    label = 1557;
    break;
   }
  }
  $$3$i$i1262 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1557) {
  $15615 = $$lcssa8$i$i1260 + -4 | 0;
  HEAP32[$$lcssa$i$i1261 >> 2] = $15615;
  $$3$i$i1262 = HEAP32[$15615 >> 2] | 0;
 }
 $15636 = $$3$i$i1262 + 52 | 0;
 HEAP16[$$3$i$i1262 >> 1] = 1024;
 HEAP16[$$3$i$i1262 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1262 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1262 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1262 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1262 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1262 + 16 >> 2] = $15636;
 HEAP32[$$3$i$i1262 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1262 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1262 + 48 >> 0] = 0;
 HEAP32[$106 >> 2] = $$3$i$i1262;
 _memcpy($15636 | 0, 1331178, 2048) | 0;
 _memcpy($$3$i$i1262 + 2100 | 0, 1333226, 2048) | 0;
 _memcpy($$3$i$i1262 + 4148 | 0, 1335274, 2048) | 0;
 _memcpy($$3$i$i1262 + 6196 | 0, 1337322, 2048) | 0;
 _memcpy($$3$i$i1262 + 8244 | 0, 1339370, 2048) | 0;
 _memcpy($$3$i$i1262 + 10292 | 0, 1341418, 2048) | 0;
 _memcpy($$3$i$i1262 + 12340 | 0, 1343466, 2048) | 0;
 _memcpy($$3$i$i1262 + 14388 | 0, 1345514, 2048) | 0;
 _memcpy($$3$i$i1262 + 16436 | 0, 1347562, 2048) | 0;
 _memcpy($$3$i$i1262 + 18484 | 0, 1349610, 2048) | 0;
 _memcpy($$3$i$i1262 + 20532 | 0, 1351658, 2048) | 0;
 _memcpy($$3$i$i1262 + 22580 | 0, 1353706, 2048) | 0;
 _memcpy($$3$i$i1262 + 24628 | 0, 1355754, 2048) | 0;
 _memcpy($$3$i$i1262 + 26676 | 0, 1357802, 2048) | 0;
 _memcpy($$3$i$i1262 + 28724 | 0, 1359850, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $106);
 if ($$3$i$i1262 | 0) {
  $15661 = $$3$i$i1262 + 5 | 0;
  $15663 = (HEAP8[$15661 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15661 >> 0] = $15663;
  if (!($15663 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1262);
  HEAP32[$106 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3634 >> 1] = 693;
 HEAP16[$3635 >> 1] = 1023;
 HEAP16[$3636 >> 1] = 707;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1572; else {
  $15667 = HEAP32[915090] | 0;
  if (($15667 | 0) == (HEAP32[915088] | 0)) label = 1572; else {
   $$lcssa$i$i1274 = 3660360;
   $$lcssa8$i$i1273 = $15667;
   label = 1573;
  }
 }
 do if ((label | 0) == 1572) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $15674 = HEAP32[915096] | 0;
   if (($15674 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1274 = 3660384;
    $$lcssa8$i$i1273 = $15674;
    label = 1573;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $15679 = HEAP32[915102] | 0;
   if (($15679 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1274 = 3660408;
    $$lcssa8$i$i1273 = $15679;
    label = 1573;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $15684 = HEAP32[915108] | 0;
   if (($15684 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1274 = 3660432;
    $$lcssa8$i$i1273 = $15684;
    label = 1573;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $15689 = HEAP32[915114] | 0;
   if (($15689 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1274 = 3660456;
    $$lcssa8$i$i1273 = $15689;
    label = 1573;
    break;
   }
  }
  $$3$i$i1275 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1573) {
  $15672 = $$lcssa8$i$i1273 + -4 | 0;
  HEAP32[$$lcssa$i$i1274 >> 2] = $15672;
  $$3$i$i1275 = HEAP32[$15672 >> 2] | 0;
 }
 $15693 = $$3$i$i1275 + 52 | 0;
 HEAP16[$$3$i$i1275 >> 1] = 1024;
 HEAP16[$$3$i$i1275 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1275 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1275 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1275 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1275 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1275 + 16 >> 2] = $15693;
 HEAP32[$$3$i$i1275 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1275 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1275 + 48 >> 0] = 0;
 HEAP32[$107 >> 2] = $$3$i$i1275;
 _memcpy($15693 | 0, 1361898, 2048) | 0;
 _memcpy($$3$i$i1275 + 2100 | 0, 1363946, 2048) | 0;
 _memcpy($$3$i$i1275 + 4148 | 0, 1365994, 2048) | 0;
 _memcpy($$3$i$i1275 + 6196 | 0, 1368042, 2048) | 0;
 _memcpy($$3$i$i1275 + 8244 | 0, 1370090, 2048) | 0;
 _memcpy($$3$i$i1275 + 10292 | 0, 1372138, 2048) | 0;
 _memcpy($$3$i$i1275 + 12340 | 0, 1374186, 2048) | 0;
 _memcpy($$3$i$i1275 + 14388 | 0, 1376234, 2048) | 0;
 _memcpy($$3$i$i1275 + 16436 | 0, 1378282, 2048) | 0;
 _memcpy($$3$i$i1275 + 18484 | 0, 1380330, 2048) | 0;
 _memcpy($$3$i$i1275 + 20532 | 0, 1382378, 2048) | 0;
 _memcpy($$3$i$i1275 + 22580 | 0, 1384426, 2048) | 0;
 _memcpy($$3$i$i1275 + 24628 | 0, 1386474, 2048) | 0;
 _memcpy($$3$i$i1275 + 26676 | 0, 1388522, 2048) | 0;
 _memcpy($$3$i$i1275 + 28724 | 0, 1390570, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $107);
 if ($$3$i$i1275 | 0) {
  $15718 = $$3$i$i1275 + 5 | 0;
  $15720 = (HEAP8[$15718 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15718 >> 0] = $15720;
  if (!($15720 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1275);
  HEAP32[$107 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3637 >> 1] = 708;
 HEAP16[$3638 >> 1] = 1023;
 HEAP16[$3639 >> 1] = 709;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4148) label = 1588; else {
  $15724 = HEAP32[915090] | 0;
  if (($15724 | 0) == (HEAP32[915088] | 0)) label = 1588; else {
   $$lcssa$i$i1287 = 3660360;
   $$lcssa8$i$i1286 = $15724;
   label = 1589;
  }
 }
 do if ((label | 0) == 1588) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4148) {
   $15731 = HEAP32[915096] | 0;
   if (($15731 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1287 = 3660384;
    $$lcssa8$i$i1286 = $15731;
    label = 1589;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4148) {
   $15736 = HEAP32[915102] | 0;
   if (($15736 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1287 = 3660408;
    $$lcssa8$i$i1286 = $15736;
    label = 1589;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4148) {
   $15741 = HEAP32[915108] | 0;
   if (($15741 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1287 = 3660432;
    $$lcssa8$i$i1286 = $15741;
    label = 1589;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4148) {
   $15746 = HEAP32[915114] | 0;
   if (($15746 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1287 = 3660456;
    $$lcssa8$i$i1286 = $15746;
    label = 1589;
    break;
   }
  }
  $$3$i$i1288 = __Znwj(4148) | 0;
 } while (0);
 if ((label | 0) == 1589) {
  $15729 = $$lcssa8$i$i1286 + -4 | 0;
  HEAP32[$$lcssa$i$i1287 >> 2] = $15729;
  $$3$i$i1288 = HEAP32[$15729 >> 2] | 0;
 }
 $15750 = $$3$i$i1288 + 52 | 0;
 HEAP16[$$3$i$i1288 >> 1] = 1024;
 HEAP16[$$3$i$i1288 + 2 >> 1] = 2;
 HEAP8[$$3$i$i1288 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1288 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1288 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1288 + 12 >> 2] = 4096;
 HEAP32[$$3$i$i1288 + 16 >> 2] = $15750;
 HEAP32[$$3$i$i1288 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1288 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1288 + 48 >> 0] = 0;
 HEAP32[$108 >> 2] = $$3$i$i1288;
 _memcpy($15750 | 0, 1392618, 2048) | 0;
 _memcpy($$3$i$i1288 + 2100 | 0, 1394666, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $108);
 if ($$3$i$i1288 | 0) {
  $15762 = $$3$i$i1288 + 5 | 0;
  $15764 = (HEAP8[$15762 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15762 >> 0] = $15764;
  if (!($15764 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1288);
  HEAP32[$108 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3640 >> 1] = 710;
 HEAP16[$3641 >> 1] = 1023;
 HEAP16[$3642 >> 1] = 711;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4148) label = 1604; else {
  $15768 = HEAP32[915090] | 0;
  if (($15768 | 0) == (HEAP32[915088] | 0)) label = 1604; else {
   $$lcssa$i$i1300 = 3660360;
   $$lcssa8$i$i1299 = $15768;
   label = 1605;
  }
 }
 do if ((label | 0) == 1604) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4148) {
   $15775 = HEAP32[915096] | 0;
   if (($15775 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1300 = 3660384;
    $$lcssa8$i$i1299 = $15775;
    label = 1605;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4148) {
   $15780 = HEAP32[915102] | 0;
   if (($15780 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1300 = 3660408;
    $$lcssa8$i$i1299 = $15780;
    label = 1605;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4148) {
   $15785 = HEAP32[915108] | 0;
   if (($15785 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1300 = 3660432;
    $$lcssa8$i$i1299 = $15785;
    label = 1605;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4148) {
   $15790 = HEAP32[915114] | 0;
   if (($15790 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1300 = 3660456;
    $$lcssa8$i$i1299 = $15790;
    label = 1605;
    break;
   }
  }
  $$3$i$i1301 = __Znwj(4148) | 0;
 } while (0);
 if ((label | 0) == 1605) {
  $15773 = $$lcssa8$i$i1299 + -4 | 0;
  HEAP32[$$lcssa$i$i1300 >> 2] = $15773;
  $$3$i$i1301 = HEAP32[$15773 >> 2] | 0;
 }
 $15794 = $$3$i$i1301 + 52 | 0;
 HEAP16[$$3$i$i1301 >> 1] = 1024;
 HEAP16[$$3$i$i1301 + 2 >> 1] = 2;
 HEAP8[$$3$i$i1301 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1301 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1301 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1301 + 12 >> 2] = 4096;
 HEAP32[$$3$i$i1301 + 16 >> 2] = $15794;
 HEAP32[$$3$i$i1301 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1301 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1301 + 48 >> 0] = 0;
 HEAP32[$109 >> 2] = $$3$i$i1301;
 _memcpy($15794 | 0, 1396714, 2048) | 0;
 _memcpy($$3$i$i1301 + 2100 | 0, 1398762, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $109);
 if ($$3$i$i1301 | 0) {
  $15806 = $$3$i$i1301 + 5 | 0;
  $15808 = (HEAP8[$15806 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15806 >> 0] = $15808;
  if (!($15808 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1301);
  HEAP32[$109 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3643 >> 1] = 712;
 HEAP16[$3644 >> 1] = 1023;
 HEAP16[$3645 >> 1] = 713;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4148) label = 1620; else {
  $15812 = HEAP32[915090] | 0;
  if (($15812 | 0) == (HEAP32[915088] | 0)) label = 1620; else {
   $$lcssa$i$i1313 = 3660360;
   $$lcssa8$i$i1312 = $15812;
   label = 1621;
  }
 }
 do if ((label | 0) == 1620) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4148) {
   $15819 = HEAP32[915096] | 0;
   if (($15819 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1313 = 3660384;
    $$lcssa8$i$i1312 = $15819;
    label = 1621;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4148) {
   $15824 = HEAP32[915102] | 0;
   if (($15824 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1313 = 3660408;
    $$lcssa8$i$i1312 = $15824;
    label = 1621;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4148) {
   $15829 = HEAP32[915108] | 0;
   if (($15829 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1313 = 3660432;
    $$lcssa8$i$i1312 = $15829;
    label = 1621;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4148) {
   $15834 = HEAP32[915114] | 0;
   if (($15834 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1313 = 3660456;
    $$lcssa8$i$i1312 = $15834;
    label = 1621;
    break;
   }
  }
  $$3$i$i1314 = __Znwj(4148) | 0;
 } while (0);
 if ((label | 0) == 1621) {
  $15817 = $$lcssa8$i$i1312 + -4 | 0;
  HEAP32[$$lcssa$i$i1313 >> 2] = $15817;
  $$3$i$i1314 = HEAP32[$15817 >> 2] | 0;
 }
 $15838 = $$3$i$i1314 + 52 | 0;
 HEAP16[$$3$i$i1314 >> 1] = 1024;
 HEAP16[$$3$i$i1314 + 2 >> 1] = 2;
 HEAP8[$$3$i$i1314 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1314 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1314 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1314 + 12 >> 2] = 4096;
 HEAP32[$$3$i$i1314 + 16 >> 2] = $15838;
 HEAP32[$$3$i$i1314 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1314 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1314 + 48 >> 0] = 0;
 HEAP32[$110 >> 2] = $$3$i$i1314;
 _memcpy($15838 | 0, 1400810, 2048) | 0;
 _memcpy($$3$i$i1314 + 2100 | 0, 1402858, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $110);
 if ($$3$i$i1314 | 0) {
  $15850 = $$3$i$i1314 + 5 | 0;
  $15852 = (HEAP8[$15850 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15850 >> 0] = $15852;
  if (!($15852 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1314);
  HEAP32[$110 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3646 >> 1] = 714;
 HEAP16[$3647 >> 1] = 1023;
 HEAP16[$3648 >> 1] = 714;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2100) label = 1636; else {
  $15856 = HEAP32[915090] | 0;
  if (($15856 | 0) == (HEAP32[915088] | 0)) label = 1636; else {
   $$lcssa$i$i1326 = 3660360;
   $$lcssa8$i$i1325 = $15856;
   label = 1637;
  }
 }
 do if ((label | 0) == 1636) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2100) {
   $15863 = HEAP32[915096] | 0;
   if (($15863 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1326 = 3660384;
    $$lcssa8$i$i1325 = $15863;
    label = 1637;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2100) {
   $15868 = HEAP32[915102] | 0;
   if (($15868 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1326 = 3660408;
    $$lcssa8$i$i1325 = $15868;
    label = 1637;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2100) {
   $15873 = HEAP32[915108] | 0;
   if (($15873 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1326 = 3660432;
    $$lcssa8$i$i1325 = $15873;
    label = 1637;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2100) {
   $15878 = HEAP32[915114] | 0;
   if (($15878 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1326 = 3660456;
    $$lcssa8$i$i1325 = $15878;
    label = 1637;
    break;
   }
  }
  $$3$i$i1327 = __Znwj(2100) | 0;
 } while (0);
 if ((label | 0) == 1637) {
  $15861 = $$lcssa8$i$i1325 + -4 | 0;
  HEAP32[$$lcssa$i$i1326 >> 2] = $15861;
  $$3$i$i1327 = HEAP32[$15861 >> 2] | 0;
 }
 $15882 = $$3$i$i1327 + 52 | 0;
 HEAP16[$$3$i$i1327 >> 1] = 1024;
 HEAP16[$$3$i$i1327 + 2 >> 1] = 1;
 HEAP8[$$3$i$i1327 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1327 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1327 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1327 + 12 >> 2] = 2048;
 HEAP32[$$3$i$i1327 + 16 >> 2] = $15882;
 HEAP32[$$3$i$i1327 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1327 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1327 + 48 >> 0] = 0;
 HEAP32[$111 >> 2] = $$3$i$i1327;
 _memcpy($15882 | 0, 1404906, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $111);
 if ($$3$i$i1327 | 0) {
  $15893 = $$3$i$i1327 + 5 | 0;
  $15895 = (HEAP8[$15893 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15893 >> 0] = $15895;
  if (!($15895 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1327);
  HEAP32[$111 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3649 >> 1] = 715;
 HEAP16[$3650 >> 1] = 1023;
 HEAP16[$3651 >> 1] = 715;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2100) label = 1652; else {
  $15899 = HEAP32[915090] | 0;
  if (($15899 | 0) == (HEAP32[915088] | 0)) label = 1652; else {
   $$lcssa$i$i1339 = 3660360;
   $$lcssa8$i$i1338 = $15899;
   label = 1653;
  }
 }
 do if ((label | 0) == 1652) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2100) {
   $15906 = HEAP32[915096] | 0;
   if (($15906 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1339 = 3660384;
    $$lcssa8$i$i1338 = $15906;
    label = 1653;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2100) {
   $15911 = HEAP32[915102] | 0;
   if (($15911 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1339 = 3660408;
    $$lcssa8$i$i1338 = $15911;
    label = 1653;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2100) {
   $15916 = HEAP32[915108] | 0;
   if (($15916 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1339 = 3660432;
    $$lcssa8$i$i1338 = $15916;
    label = 1653;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2100) {
   $15921 = HEAP32[915114] | 0;
   if (($15921 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1339 = 3660456;
    $$lcssa8$i$i1338 = $15921;
    label = 1653;
    break;
   }
  }
  $$3$i$i1340 = __Znwj(2100) | 0;
 } while (0);
 if ((label | 0) == 1653) {
  $15904 = $$lcssa8$i$i1338 + -4 | 0;
  HEAP32[$$lcssa$i$i1339 >> 2] = $15904;
  $$3$i$i1340 = HEAP32[$15904 >> 2] | 0;
 }
 $15925 = $$3$i$i1340 + 52 | 0;
 HEAP16[$$3$i$i1340 >> 1] = 1024;
 HEAP16[$$3$i$i1340 + 2 >> 1] = 1;
 HEAP8[$$3$i$i1340 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1340 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1340 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1340 + 12 >> 2] = 2048;
 HEAP32[$$3$i$i1340 + 16 >> 2] = $15925;
 HEAP32[$$3$i$i1340 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1340 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1340 + 48 >> 0] = 0;
 HEAP32[$112 >> 2] = $$3$i$i1340;
 _memcpy($15925 | 0, 1406954, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $112);
 if ($$3$i$i1340 | 0) {
  $15936 = $$3$i$i1340 + 5 | 0;
  $15938 = (HEAP8[$15936 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15936 >> 0] = $15938;
  if (!($15938 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1340);
  HEAP32[$112 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3652 >> 1] = 716;
 HEAP16[$3653 >> 1] = 1023;
 HEAP16[$3654 >> 1] = 716;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2100) label = 1668; else {
  $15942 = HEAP32[915090] | 0;
  if (($15942 | 0) == (HEAP32[915088] | 0)) label = 1668; else {
   $$lcssa$i$i1352 = 3660360;
   $$lcssa8$i$i1351 = $15942;
   label = 1669;
  }
 }
 do if ((label | 0) == 1668) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2100) {
   $15949 = HEAP32[915096] | 0;
   if (($15949 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1352 = 3660384;
    $$lcssa8$i$i1351 = $15949;
    label = 1669;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2100) {
   $15954 = HEAP32[915102] | 0;
   if (($15954 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1352 = 3660408;
    $$lcssa8$i$i1351 = $15954;
    label = 1669;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2100) {
   $15959 = HEAP32[915108] | 0;
   if (($15959 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1352 = 3660432;
    $$lcssa8$i$i1351 = $15959;
    label = 1669;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2100) {
   $15964 = HEAP32[915114] | 0;
   if (($15964 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1352 = 3660456;
    $$lcssa8$i$i1351 = $15964;
    label = 1669;
    break;
   }
  }
  $$3$i$i1353 = __Znwj(2100) | 0;
 } while (0);
 if ((label | 0) == 1669) {
  $15947 = $$lcssa8$i$i1351 + -4 | 0;
  HEAP32[$$lcssa$i$i1352 >> 2] = $15947;
  $$3$i$i1353 = HEAP32[$15947 >> 2] | 0;
 }
 $15968 = $$3$i$i1353 + 52 | 0;
 HEAP16[$$3$i$i1353 >> 1] = 1024;
 HEAP16[$$3$i$i1353 + 2 >> 1] = 1;
 HEAP8[$$3$i$i1353 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1353 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1353 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1353 + 12 >> 2] = 2048;
 HEAP32[$$3$i$i1353 + 16 >> 2] = $15968;
 HEAP32[$$3$i$i1353 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1353 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1353 + 48 >> 0] = 0;
 HEAP32[$113 >> 2] = $$3$i$i1353;
 _memcpy($15968 | 0, 1409002, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $113);
 if ($$3$i$i1353 | 0) {
  $15979 = $$3$i$i1353 + 5 | 0;
  $15981 = (HEAP8[$15979 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$15979 >> 0] = $15981;
  if (!($15981 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1353);
  HEAP32[$113 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3655 >> 1] = 717;
 HEAP16[$3656 >> 1] = 1023;
 HEAP16[$3657 >> 1] = 717;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2100) label = 1684; else {
  $15985 = HEAP32[915090] | 0;
  if (($15985 | 0) == (HEAP32[915088] | 0)) label = 1684; else {
   $$lcssa$i$i1365 = 3660360;
   $$lcssa8$i$i1364 = $15985;
   label = 1685;
  }
 }
 do if ((label | 0) == 1684) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2100) {
   $15992 = HEAP32[915096] | 0;
   if (($15992 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1365 = 3660384;
    $$lcssa8$i$i1364 = $15992;
    label = 1685;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2100) {
   $15997 = HEAP32[915102] | 0;
   if (($15997 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1365 = 3660408;
    $$lcssa8$i$i1364 = $15997;
    label = 1685;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2100) {
   $16002 = HEAP32[915108] | 0;
   if (($16002 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1365 = 3660432;
    $$lcssa8$i$i1364 = $16002;
    label = 1685;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2100) {
   $16007 = HEAP32[915114] | 0;
   if (($16007 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1365 = 3660456;
    $$lcssa8$i$i1364 = $16007;
    label = 1685;
    break;
   }
  }
  $$3$i$i1366 = __Znwj(2100) | 0;
 } while (0);
 if ((label | 0) == 1685) {
  $15990 = $$lcssa8$i$i1364 + -4 | 0;
  HEAP32[$$lcssa$i$i1365 >> 2] = $15990;
  $$3$i$i1366 = HEAP32[$15990 >> 2] | 0;
 }
 $16011 = $$3$i$i1366 + 52 | 0;
 HEAP16[$$3$i$i1366 >> 1] = 1024;
 HEAP16[$$3$i$i1366 + 2 >> 1] = 1;
 HEAP8[$$3$i$i1366 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1366 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1366 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1366 + 12 >> 2] = 2048;
 HEAP32[$$3$i$i1366 + 16 >> 2] = $16011;
 HEAP32[$$3$i$i1366 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1366 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1366 + 48 >> 0] = 0;
 HEAP32[$114 >> 2] = $$3$i$i1366;
 _memcpy($16011 | 0, 1411050, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $114);
 if ($$3$i$i1366 | 0) {
  $16022 = $$3$i$i1366 + 5 | 0;
  $16024 = (HEAP8[$16022 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16022 >> 0] = $16024;
  if (!($16024 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1366);
  HEAP32[$114 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3658 >> 1] = 718;
 HEAP16[$3659 >> 1] = 1023;
 HEAP16[$3660 >> 1] = 732;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1700; else {
  $16028 = HEAP32[915090] | 0;
  if (($16028 | 0) == (HEAP32[915088] | 0)) label = 1700; else {
   $$lcssa$i$i1378 = 3660360;
   $$lcssa8$i$i1377 = $16028;
   label = 1701;
  }
 }
 do if ((label | 0) == 1700) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $16035 = HEAP32[915096] | 0;
   if (($16035 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1378 = 3660384;
    $$lcssa8$i$i1377 = $16035;
    label = 1701;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $16040 = HEAP32[915102] | 0;
   if (($16040 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1378 = 3660408;
    $$lcssa8$i$i1377 = $16040;
    label = 1701;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $16045 = HEAP32[915108] | 0;
   if (($16045 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1378 = 3660432;
    $$lcssa8$i$i1377 = $16045;
    label = 1701;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $16050 = HEAP32[915114] | 0;
   if (($16050 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1378 = 3660456;
    $$lcssa8$i$i1377 = $16050;
    label = 1701;
    break;
   }
  }
  $$3$i$i1379 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1701) {
  $16033 = $$lcssa8$i$i1377 + -4 | 0;
  HEAP32[$$lcssa$i$i1378 >> 2] = $16033;
  $$3$i$i1379 = HEAP32[$16033 >> 2] | 0;
 }
 $16054 = $$3$i$i1379 + 52 | 0;
 HEAP16[$$3$i$i1379 >> 1] = 1024;
 HEAP16[$$3$i$i1379 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1379 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1379 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1379 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1379 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1379 + 16 >> 2] = $16054;
 HEAP32[$$3$i$i1379 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1379 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1379 + 48 >> 0] = 0;
 HEAP32[$115 >> 2] = $$3$i$i1379;
 _memcpy($16054 | 0, 1413098, 2048) | 0;
 _memcpy($$3$i$i1379 + 2100 | 0, 1415146, 2048) | 0;
 _memcpy($$3$i$i1379 + 4148 | 0, 1417194, 2048) | 0;
 _memcpy($$3$i$i1379 + 6196 | 0, 1419242, 2048) | 0;
 _memcpy($$3$i$i1379 + 8244 | 0, 1421290, 2048) | 0;
 _memcpy($$3$i$i1379 + 10292 | 0, 1423338, 2048) | 0;
 _memcpy($$3$i$i1379 + 12340 | 0, 1425386, 2048) | 0;
 _memcpy($$3$i$i1379 + 14388 | 0, 1427434, 2048) | 0;
 _memcpy($$3$i$i1379 + 16436 | 0, 1429482, 2048) | 0;
 _memcpy($$3$i$i1379 + 18484 | 0, 1431530, 2048) | 0;
 _memcpy($$3$i$i1379 + 20532 | 0, 1433578, 2048) | 0;
 _memcpy($$3$i$i1379 + 22580 | 0, 1435626, 2048) | 0;
 _memcpy($$3$i$i1379 + 24628 | 0, 1437674, 2048) | 0;
 _memcpy($$3$i$i1379 + 26676 | 0, 1439722, 2048) | 0;
 _memcpy($$3$i$i1379 + 28724 | 0, 1441770, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $115);
 if ($$3$i$i1379 | 0) {
  $16079 = $$3$i$i1379 + 5 | 0;
  $16081 = (HEAP8[$16079 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16079 >> 0] = $16081;
  if (!($16081 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1379);
  HEAP32[$115 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3661 >> 1] = 733;
 HEAP16[$3662 >> 1] = 1023;
 HEAP16[$3663 >> 1] = 738;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 12340) label = 1716; else {
  $16085 = HEAP32[915090] | 0;
  if (($16085 | 0) == (HEAP32[915088] | 0)) label = 1716; else {
   $$lcssa$i$i1391 = 3660360;
   $$lcssa8$i$i1390 = $16085;
   label = 1717;
  }
 }
 do if ((label | 0) == 1716) {
  if ((HEAP32[915097] | 0) >>> 0 >= 12340) {
   $16092 = HEAP32[915096] | 0;
   if (($16092 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1391 = 3660384;
    $$lcssa8$i$i1390 = $16092;
    label = 1717;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 12340) {
   $16097 = HEAP32[915102] | 0;
   if (($16097 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1391 = 3660408;
    $$lcssa8$i$i1390 = $16097;
    label = 1717;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 12340) {
   $16102 = HEAP32[915108] | 0;
   if (($16102 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1391 = 3660432;
    $$lcssa8$i$i1390 = $16102;
    label = 1717;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 12340) {
   $16107 = HEAP32[915114] | 0;
   if (($16107 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1391 = 3660456;
    $$lcssa8$i$i1390 = $16107;
    label = 1717;
    break;
   }
  }
  $$3$i$i1392 = __Znwj(12340) | 0;
 } while (0);
 if ((label | 0) == 1717) {
  $16090 = $$lcssa8$i$i1390 + -4 | 0;
  HEAP32[$$lcssa$i$i1391 >> 2] = $16090;
  $$3$i$i1392 = HEAP32[$16090 >> 2] | 0;
 }
 $16111 = $$3$i$i1392 + 52 | 0;
 HEAP16[$$3$i$i1392 >> 1] = 1024;
 HEAP16[$$3$i$i1392 + 2 >> 1] = 6;
 HEAP8[$$3$i$i1392 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1392 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1392 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1392 + 12 >> 2] = 12288;
 HEAP32[$$3$i$i1392 + 16 >> 2] = $16111;
 HEAP32[$$3$i$i1392 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1392 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1392 + 48 >> 0] = 0;
 HEAP32[$116 >> 2] = $$3$i$i1392;
 _memcpy($16111 | 0, 1443818, 2048) | 0;
 _memcpy($$3$i$i1392 + 2100 | 0, 1445866, 2048) | 0;
 _memcpy($$3$i$i1392 + 4148 | 0, 1447914, 2048) | 0;
 _memcpy($$3$i$i1392 + 6196 | 0, 1449962, 2048) | 0;
 _memcpy($$3$i$i1392 + 8244 | 0, 1452010, 2048) | 0;
 _memcpy($$3$i$i1392 + 10292 | 0, 1454058, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $116);
 if ($$3$i$i1392 | 0) {
  $16127 = $$3$i$i1392 + 5 | 0;
  $16129 = (HEAP8[$16127 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16127 >> 0] = $16129;
  if (!($16129 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1392);
  HEAP32[$116 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3664 >> 1] = 739;
 HEAP16[$3665 >> 1] = 1023;
 HEAP16[$3666 >> 1] = 753;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30772) label = 1732; else {
  $16133 = HEAP32[915090] | 0;
  if (($16133 | 0) == (HEAP32[915088] | 0)) label = 1732; else {
   $$lcssa$i$i1404 = 3660360;
   $$lcssa8$i$i1403 = $16133;
   label = 1733;
  }
 }
 do if ((label | 0) == 1732) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30772) {
   $16140 = HEAP32[915096] | 0;
   if (($16140 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1404 = 3660384;
    $$lcssa8$i$i1403 = $16140;
    label = 1733;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30772) {
   $16145 = HEAP32[915102] | 0;
   if (($16145 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1404 = 3660408;
    $$lcssa8$i$i1403 = $16145;
    label = 1733;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30772) {
   $16150 = HEAP32[915108] | 0;
   if (($16150 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1404 = 3660432;
    $$lcssa8$i$i1403 = $16150;
    label = 1733;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30772) {
   $16155 = HEAP32[915114] | 0;
   if (($16155 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1404 = 3660456;
    $$lcssa8$i$i1403 = $16155;
    label = 1733;
    break;
   }
  }
  $$3$i$i1405 = __Znwj(30772) | 0;
 } while (0);
 if ((label | 0) == 1733) {
  $16138 = $$lcssa8$i$i1403 + -4 | 0;
  HEAP32[$$lcssa$i$i1404 >> 2] = $16138;
  $$3$i$i1405 = HEAP32[$16138 >> 2] | 0;
 }
 $16159 = $$3$i$i1405 + 52 | 0;
 HEAP16[$$3$i$i1405 >> 1] = 1024;
 HEAP16[$$3$i$i1405 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1405 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1405 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1405 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1405 + 12 >> 2] = 30720;
 HEAP32[$$3$i$i1405 + 16 >> 2] = $16159;
 HEAP32[$$3$i$i1405 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1405 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1405 + 48 >> 0] = 0;
 HEAP32[$117 >> 2] = $$3$i$i1405;
 _memcpy($16159 | 0, 1456106, 2048) | 0;
 _memcpy($$3$i$i1405 + 2100 | 0, 1458154, 2048) | 0;
 _memcpy($$3$i$i1405 + 4148 | 0, 1460202, 2048) | 0;
 _memcpy($$3$i$i1405 + 6196 | 0, 1462250, 2048) | 0;
 _memcpy($$3$i$i1405 + 8244 | 0, 1464298, 2048) | 0;
 _memcpy($$3$i$i1405 + 10292 | 0, 1466346, 2048) | 0;
 _memcpy($$3$i$i1405 + 12340 | 0, 1468394, 2048) | 0;
 _memcpy($$3$i$i1405 + 14388 | 0, 1470442, 2048) | 0;
 _memcpy($$3$i$i1405 + 16436 | 0, 1472490, 2048) | 0;
 _memcpy($$3$i$i1405 + 18484 | 0, 1474538, 2048) | 0;
 _memcpy($$3$i$i1405 + 20532 | 0, 1476586, 2048) | 0;
 _memcpy($$3$i$i1405 + 22580 | 0, 1478634, 2048) | 0;
 _memcpy($$3$i$i1405 + 24628 | 0, 1480682, 2048) | 0;
 _memcpy($$3$i$i1405 + 26676 | 0, 1482730, 2048) | 0;
 _memcpy($$3$i$i1405 + 28724 | 0, 1484778, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $117);
 if ($$3$i$i1405 | 0) {
  $16184 = $$3$i$i1405 + 5 | 0;
  $16186 = (HEAP8[$16184 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16184 >> 0] = $16186;
  if (!($16186 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1405);
  HEAP32[$117 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3667 >> 1] = 754;
 HEAP16[$3668 >> 1] = 1023;
 HEAP16[$3669 >> 1] = 765;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 24628) label = 1748; else {
  $16190 = HEAP32[915090] | 0;
  if (($16190 | 0) == (HEAP32[915088] | 0)) label = 1748; else {
   $$lcssa$i$i1417 = 3660360;
   $$lcssa8$i$i1416 = $16190;
   label = 1749;
  }
 }
 do if ((label | 0) == 1748) {
  if ((HEAP32[915097] | 0) >>> 0 >= 24628) {
   $16197 = HEAP32[915096] | 0;
   if (($16197 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1417 = 3660384;
    $$lcssa8$i$i1416 = $16197;
    label = 1749;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 24628) {
   $16202 = HEAP32[915102] | 0;
   if (($16202 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1417 = 3660408;
    $$lcssa8$i$i1416 = $16202;
    label = 1749;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 24628) {
   $16207 = HEAP32[915108] | 0;
   if (($16207 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1417 = 3660432;
    $$lcssa8$i$i1416 = $16207;
    label = 1749;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 24628) {
   $16212 = HEAP32[915114] | 0;
   if (($16212 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1417 = 3660456;
    $$lcssa8$i$i1416 = $16212;
    label = 1749;
    break;
   }
  }
  $$3$i$i1418 = __Znwj(24628) | 0;
 } while (0);
 if ((label | 0) == 1749) {
  $16195 = $$lcssa8$i$i1416 + -4 | 0;
  HEAP32[$$lcssa$i$i1417 >> 2] = $16195;
  $$3$i$i1418 = HEAP32[$16195 >> 2] | 0;
 }
 $16216 = $$3$i$i1418 + 52 | 0;
 HEAP16[$$3$i$i1418 >> 1] = 1024;
 HEAP16[$$3$i$i1418 + 2 >> 1] = 12;
 HEAP8[$$3$i$i1418 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1418 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1418 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1418 + 12 >> 2] = 24576;
 HEAP32[$$3$i$i1418 + 16 >> 2] = $16216;
 HEAP32[$$3$i$i1418 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1418 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1418 + 48 >> 0] = 0;
 HEAP32[$118 >> 2] = $$3$i$i1418;
 _memcpy($16216 | 0, 1486826, 2048) | 0;
 _memcpy($$3$i$i1418 + 2100 | 0, 1488874, 2048) | 0;
 _memcpy($$3$i$i1418 + 4148 | 0, 1490922, 2048) | 0;
 _memcpy($$3$i$i1418 + 6196 | 0, 1492970, 2048) | 0;
 _memcpy($$3$i$i1418 + 8244 | 0, 1495018, 2048) | 0;
 _memcpy($$3$i$i1418 + 10292 | 0, 1497066, 2048) | 0;
 _memcpy($$3$i$i1418 + 12340 | 0, 1499114, 2048) | 0;
 _memcpy($$3$i$i1418 + 14388 | 0, 1501162, 2048) | 0;
 _memcpy($$3$i$i1418 + 16436 | 0, 1503210, 2048) | 0;
 _memcpy($$3$i$i1418 + 18484 | 0, 1505258, 2048) | 0;
 _memcpy($$3$i$i1418 + 20532 | 0, 1507306, 2048) | 0;
 _memcpy($$3$i$i1418 + 22580 | 0, 1509354, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $118);
 if ($$3$i$i1418 | 0) {
  $16238 = $$3$i$i1418 + 5 | 0;
  $16240 = (HEAP8[$16238 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16238 >> 0] = $16240;
  if (!($16240 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1418);
  HEAP32[$118 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3670 >> 1] = 766;
 HEAP16[$3671 >> 1] = 1023;
 HEAP16[$3672 >> 1] = 767;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4148) label = 1764; else {
  $16244 = HEAP32[915090] | 0;
  if (($16244 | 0) == (HEAP32[915088] | 0)) label = 1764; else {
   $$lcssa$i$i1430 = 3660360;
   $$lcssa8$i$i1429 = $16244;
   label = 1765;
  }
 }
 do if ((label | 0) == 1764) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4148) {
   $16251 = HEAP32[915096] | 0;
   if (($16251 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1430 = 3660384;
    $$lcssa8$i$i1429 = $16251;
    label = 1765;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4148) {
   $16256 = HEAP32[915102] | 0;
   if (($16256 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1430 = 3660408;
    $$lcssa8$i$i1429 = $16256;
    label = 1765;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4148) {
   $16261 = HEAP32[915108] | 0;
   if (($16261 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1430 = 3660432;
    $$lcssa8$i$i1429 = $16261;
    label = 1765;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4148) {
   $16266 = HEAP32[915114] | 0;
   if (($16266 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1430 = 3660456;
    $$lcssa8$i$i1429 = $16266;
    label = 1765;
    break;
   }
  }
  $$3$i$i1431 = __Znwj(4148) | 0;
 } while (0);
 if ((label | 0) == 1765) {
  $16249 = $$lcssa8$i$i1429 + -4 | 0;
  HEAP32[$$lcssa$i$i1430 >> 2] = $16249;
  $$3$i$i1431 = HEAP32[$16249 >> 2] | 0;
 }
 $16270 = $$3$i$i1431 + 52 | 0;
 HEAP16[$$3$i$i1431 >> 1] = 1024;
 HEAP16[$$3$i$i1431 + 2 >> 1] = 2;
 HEAP8[$$3$i$i1431 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1431 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1431 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1431 + 12 >> 2] = 4096;
 HEAP32[$$3$i$i1431 + 16 >> 2] = $16270;
 HEAP32[$$3$i$i1431 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1431 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1431 + 48 >> 0] = 0;
 HEAP32[$119 >> 2] = $$3$i$i1431;
 _memcpy($16270 | 0, 1511402, 2048) | 0;
 _memcpy($$3$i$i1431 + 2100 | 0, 1513450, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $119);
 if ($$3$i$i1431 | 0) {
  $16282 = $$3$i$i1431 + 5 | 0;
  $16284 = (HEAP8[$16282 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16282 >> 0] = $16284;
  if (!($16284 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1431);
  HEAP32[$119 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 161;
 HEAP16[$3673 >> 1] = 5;
 HEAP16[$3674 >> 1] = 1023;
 HEAP16[$3675 >> 1] = 22;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31156) label = 1780; else {
  $16288 = HEAP32[915090] | 0;
  if (($16288 | 0) == (HEAP32[915088] | 0)) label = 1780; else {
   $$lcssa$i$i1443 = 3660360;
   $$lcssa8$i$i1442 = $16288;
   label = 1781;
  }
 }
 do if ((label | 0) == 1780) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31156) {
   $16295 = HEAP32[915096] | 0;
   if (($16295 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1443 = 3660384;
    $$lcssa8$i$i1442 = $16295;
    label = 1781;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31156) {
   $16300 = HEAP32[915102] | 0;
   if (($16300 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1443 = 3660408;
    $$lcssa8$i$i1442 = $16300;
    label = 1781;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31156) {
   $16305 = HEAP32[915108] | 0;
   if (($16305 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1443 = 3660432;
    $$lcssa8$i$i1442 = $16305;
    label = 1781;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31156) {
   $16310 = HEAP32[915114] | 0;
   if (($16310 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1443 = 3660456;
    $$lcssa8$i$i1442 = $16310;
    label = 1781;
    break;
   }
  }
  $$3$i$i1444 = __Znwj(31156) | 0;
 } while (0);
 if ((label | 0) == 1781) {
  $16293 = $$lcssa8$i$i1442 + -4 | 0;
  HEAP32[$$lcssa$i$i1443 >> 2] = $16293;
  $$3$i$i1444 = HEAP32[$16293 >> 2] | 0;
 }
 $16314 = $$3$i$i1444 + 52 | 0;
 HEAP16[$$3$i$i1444 >> 1] = 864;
 HEAP16[$$3$i$i1444 + 2 >> 1] = 18;
 HEAP8[$$3$i$i1444 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1444 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1444 + 8 >> 2] = 1728;
 HEAP32[$$3$i$i1444 + 12 >> 2] = 31104;
 HEAP32[$$3$i$i1444 + 16 >> 2] = $16314;
 HEAP32[$$3$i$i1444 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1444 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1444 + 48 >> 0] = 0;
 HEAP32[$120 >> 2] = $$3$i$i1444;
 _memcpy($16314 | 0, 1515498, 1728) | 0;
 _memcpy($$3$i$i1444 + 1780 | 0, 1517226, 1728) | 0;
 _memcpy($$3$i$i1444 + 3508 | 0, 1518954, 1728) | 0;
 _memcpy($$3$i$i1444 + 5236 | 0, 1520682, 1728) | 0;
 _memcpy($$3$i$i1444 + 6964 | 0, 1522410, 1728) | 0;
 _memcpy($$3$i$i1444 + 8692 | 0, 1524138, 1728) | 0;
 _memcpy($$3$i$i1444 + 10420 | 0, 1525866, 1728) | 0;
 _memcpy($$3$i$i1444 + 12148 | 0, 1527594, 1728) | 0;
 _memcpy($$3$i$i1444 + 13876 | 0, 1529322, 1728) | 0;
 _memcpy($$3$i$i1444 + 15604 | 0, 1531050, 1728) | 0;
 _memcpy($$3$i$i1444 + 17332 | 0, 1532778, 1728) | 0;
 _memcpy($$3$i$i1444 + 19060 | 0, 1534506, 1728) | 0;
 _memcpy($$3$i$i1444 + 20788 | 0, 1536234, 1728) | 0;
 _memcpy($$3$i$i1444 + 22516 | 0, 1537962, 1728) | 0;
 _memcpy($$3$i$i1444 + 24244 | 0, 1539690, 1728) | 0;
 _memcpy($$3$i$i1444 + 25972 | 0, 1541418, 1728) | 0;
 _memcpy($$3$i$i1444 + 27700 | 0, 1543146, 1728) | 0;
 _memcpy($$3$i$i1444 + 29428 | 0, 1544874, 1728) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $120);
 if ($$3$i$i1444 | 0) {
  $16342 = $$3$i$i1444 + 5 | 0;
  $16344 = (HEAP8[$16342 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16342 >> 0] = $16344;
  if (!($16344 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1444);
  HEAP32[$120 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 161;
 HEAP16[$3676 >> 1] = 23;
 HEAP16[$3677 >> 1] = 1023;
 HEAP16[$3678 >> 1] = 32;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 17332) label = 1796; else {
  $16348 = HEAP32[915090] | 0;
  if (($16348 | 0) == (HEAP32[915088] | 0)) label = 1796; else {
   $$lcssa$i$i1456 = 3660360;
   $$lcssa8$i$i1455 = $16348;
   label = 1797;
  }
 }
 do if ((label | 0) == 1796) {
  if ((HEAP32[915097] | 0) >>> 0 >= 17332) {
   $16355 = HEAP32[915096] | 0;
   if (($16355 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1456 = 3660384;
    $$lcssa8$i$i1455 = $16355;
    label = 1797;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 17332) {
   $16360 = HEAP32[915102] | 0;
   if (($16360 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1456 = 3660408;
    $$lcssa8$i$i1455 = $16360;
    label = 1797;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 17332) {
   $16365 = HEAP32[915108] | 0;
   if (($16365 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1456 = 3660432;
    $$lcssa8$i$i1455 = $16365;
    label = 1797;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 17332) {
   $16370 = HEAP32[915114] | 0;
   if (($16370 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1456 = 3660456;
    $$lcssa8$i$i1455 = $16370;
    label = 1797;
    break;
   }
  }
  $$3$i$i1457 = __Znwj(17332) | 0;
 } while (0);
 if ((label | 0) == 1797) {
  $16353 = $$lcssa8$i$i1455 + -4 | 0;
  HEAP32[$$lcssa$i$i1456 >> 2] = $16353;
  $$3$i$i1457 = HEAP32[$16353 >> 2] | 0;
 }
 $16374 = $$3$i$i1457 + 52 | 0;
 HEAP16[$$3$i$i1457 >> 1] = 864;
 HEAP16[$$3$i$i1457 + 2 >> 1] = 10;
 HEAP8[$$3$i$i1457 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1457 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1457 + 8 >> 2] = 1728;
 HEAP32[$$3$i$i1457 + 12 >> 2] = 17280;
 HEAP32[$$3$i$i1457 + 16 >> 2] = $16374;
 HEAP32[$$3$i$i1457 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1457 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1457 + 48 >> 0] = 0;
 HEAP32[$121 >> 2] = $$3$i$i1457;
 _memcpy($16374 | 0, 1546602, 1728) | 0;
 _memcpy($$3$i$i1457 + 1780 | 0, 1548330, 1728) | 0;
 _memcpy($$3$i$i1457 + 3508 | 0, 1550058, 1728) | 0;
 _memcpy($$3$i$i1457 + 5236 | 0, 1551786, 1728) | 0;
 _memcpy($$3$i$i1457 + 6964 | 0, 1553514, 1728) | 0;
 _memcpy($$3$i$i1457 + 8692 | 0, 1555242, 1728) | 0;
 _memcpy($$3$i$i1457 + 10420 | 0, 1556970, 1728) | 0;
 _memcpy($$3$i$i1457 + 12148 | 0, 1558698, 1728) | 0;
 _memcpy($$3$i$i1457 + 13876 | 0, 1560426, 1728) | 0;
 _memcpy($$3$i$i1457 + 15604 | 0, 1562154, 1728) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $121);
 if ($$3$i$i1457 | 0) {
  $16394 = $$3$i$i1457 + 5 | 0;
  $16396 = (HEAP8[$16394 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16394 >> 0] = $16396;
  if (!($16396 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1457);
  HEAP32[$121 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3679 >> 1] = 5;
 HEAP16[$3680 >> 1] = 4;
 HEAP16[$3681 >> 1] = 32;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 500) label = 1812; else {
  $16400 = HEAP32[915090] | 0;
  if (($16400 | 0) == (HEAP32[915088] | 0)) label = 1812; else {
   $$lcssa$i$i1469 = 3660360;
   $$lcssa8$i$i1468 = $16400;
   label = 1813;
  }
 }
 do if ((label | 0) == 1812) {
  if ((HEAP32[915097] | 0) >>> 0 >= 500) {
   $16407 = HEAP32[915096] | 0;
   if (($16407 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1469 = 3660384;
    $$lcssa8$i$i1468 = $16407;
    label = 1813;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 500) {
   $16412 = HEAP32[915102] | 0;
   if (($16412 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1469 = 3660408;
    $$lcssa8$i$i1468 = $16412;
    label = 1813;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 500) {
   $16417 = HEAP32[915108] | 0;
   if (($16417 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1469 = 3660432;
    $$lcssa8$i$i1468 = $16417;
    label = 1813;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 500) {
   $16422 = HEAP32[915114] | 0;
   if (($16422 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1469 = 3660456;
    $$lcssa8$i$i1468 = $16422;
    label = 1813;
    break;
   }
  }
  $$3$i$i1470 = __Znwj(500) | 0;
 } while (0);
 if ((label | 0) == 1813) {
  $16405 = $$lcssa8$i$i1468 + -4 | 0;
  HEAP32[$$lcssa$i$i1469 >> 2] = $16405;
  $$3$i$i1470 = HEAP32[$16405 >> 2] | 0;
 }
 $16426 = $$3$i$i1470 + 52 | 0;
 HEAP16[$$3$i$i1470 >> 1] = 8;
 HEAP16[$$3$i$i1470 + 2 >> 1] = 28;
 HEAP8[$$3$i$i1470 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1470 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1470 + 8 >> 2] = 16;
 HEAP32[$$3$i$i1470 + 12 >> 2] = 448;
 HEAP32[$$3$i$i1470 + 16 >> 2] = $16426;
 HEAP32[$$3$i$i1470 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1470 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1470 + 48 >> 0] = 0;
 HEAP32[$122 >> 2] = $$3$i$i1470;
 dest = $16426;
 src = 1563882;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 68 | 0;
 src = 1563898;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 84 | 0;
 src = 1563914;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 100 | 0;
 src = 1563930;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 116 | 0;
 src = 1563946;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 132 | 0;
 src = 1563962;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 148 | 0;
 src = 1563978;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 164 | 0;
 src = 1563994;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 180 | 0;
 src = 1564010;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 196 | 0;
 src = 1564026;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 212 | 0;
 src = 1564042;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 228 | 0;
 src = 1564058;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 244 | 0;
 src = 1564074;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 260 | 0;
 src = 1564090;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 276 | 0;
 src = 1564106;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 292 | 0;
 src = 1564122;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 308 | 0;
 src = 1564138;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 324 | 0;
 src = 1564154;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 340 | 0;
 src = 1564170;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 356 | 0;
 src = 1564186;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 372 | 0;
 src = 1564202;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 388 | 0;
 src = 1564218;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 404 | 0;
 src = 1564234;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 420 | 0;
 src = 1564250;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 436 | 0;
 src = 1564266;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 452 | 0;
 src = 1564282;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 468 | 0;
 src = 1564298;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1470 + 484 | 0;
 src = 1564314;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $122);
 if ($$3$i$i1470 | 0) {
  $16464 = $$3$i$i1470 + 5 | 0;
  $16466 = (HEAP8[$16464 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16464 >> 0] = $16466;
  if (!($16466 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1470);
  HEAP32[$122 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$3682 >> 1] = 1023;
 HEAP16[$3683 >> 1] = 4;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 10292) label = 1828; else {
  $16470 = HEAP32[915090] | 0;
  if (($16470 | 0) == (HEAP32[915088] | 0)) label = 1828; else {
   $$lcssa$i$i1482 = 3660360;
   $$lcssa8$i$i1481 = $16470;
   label = 1829;
  }
 }
 do if ((label | 0) == 1828) {
  if ((HEAP32[915097] | 0) >>> 0 >= 10292) {
   $16477 = HEAP32[915096] | 0;
   if (($16477 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1482 = 3660384;
    $$lcssa8$i$i1481 = $16477;
    label = 1829;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 10292) {
   $16482 = HEAP32[915102] | 0;
   if (($16482 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1482 = 3660408;
    $$lcssa8$i$i1481 = $16482;
    label = 1829;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 10292) {
   $16487 = HEAP32[915108] | 0;
   if (($16487 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1482 = 3660432;
    $$lcssa8$i$i1481 = $16487;
    label = 1829;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 10292) {
   $16492 = HEAP32[915114] | 0;
   if (($16492 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1482 = 3660456;
    $$lcssa8$i$i1481 = $16492;
    label = 1829;
    break;
   }
  }
  $$3$i$i1483 = __Znwj(10292) | 0;
 } while (0);
 if ((label | 0) == 1829) {
  $16475 = $$lcssa8$i$i1481 + -4 | 0;
  HEAP32[$$lcssa$i$i1482 >> 2] = $16475;
  $$3$i$i1483 = HEAP32[$16475 >> 2] | 0;
 }
 $16496 = $$3$i$i1483 + 52 | 0;
 HEAP16[$$3$i$i1483 >> 1] = 1024;
 HEAP16[$$3$i$i1483 + 2 >> 1] = 5;
 HEAP8[$$3$i$i1483 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1483 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1483 + 8 >> 2] = 2048;
 HEAP32[$$3$i$i1483 + 12 >> 2] = 10240;
 HEAP32[$$3$i$i1483 + 16 >> 2] = $16496;
 HEAP32[$$3$i$i1483 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1483 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1483 + 48 >> 0] = 0;
 HEAP32[$123 >> 2] = $$3$i$i1483;
 _memcpy($16496 | 0, 1564330, 2048) | 0;
 _memcpy($$3$i$i1483 + 2100 | 0, 1566378, 2048) | 0;
 _memcpy($$3$i$i1483 + 4148 | 0, 1568426, 2048) | 0;
 _memcpy($$3$i$i1483 + 6196 | 0, 1570474, 2048) | 0;
 _memcpy($$3$i$i1483 + 8244 | 0, 1572522, 2048) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $123);
 if ($$3$i$i1483 | 0) {
  $16511 = $$3$i$i1483 + 5 | 0;
  $16513 = (HEAP8[$16511 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16511 >> 0] = $16513;
  if (!($16513 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1483);
  HEAP32[$123 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 7;
 HEAP16[$3684 >> 1] = 5;
 HEAP16[$3685 >> 1] = 41;
 HEAP16[$3686 >> 1] = 32;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2068) label = 1844; else {
  $16517 = HEAP32[915090] | 0;
  if (($16517 | 0) == (HEAP32[915088] | 0)) label = 1844; else {
   $$lcssa$i$i1495 = 3660360;
   $$lcssa8$i$i1494 = $16517;
   label = 1845;
  }
 }
 do if ((label | 0) == 1844) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2068) {
   $16524 = HEAP32[915096] | 0;
   if (($16524 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1495 = 3660384;
    $$lcssa8$i$i1494 = $16524;
    label = 1845;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2068) {
   $16529 = HEAP32[915102] | 0;
   if (($16529 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1495 = 3660408;
    $$lcssa8$i$i1494 = $16529;
    label = 1845;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2068) {
   $16534 = HEAP32[915108] | 0;
   if (($16534 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1495 = 3660432;
    $$lcssa8$i$i1494 = $16534;
    label = 1845;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2068) {
   $16539 = HEAP32[915114] | 0;
   if (($16539 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1495 = 3660456;
    $$lcssa8$i$i1494 = $16539;
    label = 1845;
    break;
   }
  }
  $$3$i$i1496 = __Znwj(2068) | 0;
 } while (0);
 if ((label | 0) == 1845) {
  $16522 = $$lcssa8$i$i1494 + -4 | 0;
  HEAP32[$$lcssa$i$i1495 >> 2] = $16522;
  $$3$i$i1496 = HEAP32[$16522 >> 2] | 0;
 }
 $16543 = $$3$i$i1496 + 52 | 0;
 HEAP16[$$3$i$i1496 >> 1] = 36;
 HEAP16[$$3$i$i1496 + 2 >> 1] = 28;
 HEAP8[$$3$i$i1496 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1496 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1496 + 8 >> 2] = 72;
 HEAP32[$$3$i$i1496 + 12 >> 2] = 2016;
 HEAP32[$$3$i$i1496 + 16 >> 2] = $16543;
 HEAP32[$$3$i$i1496 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1496 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1496 + 48 >> 0] = 0;
 HEAP32[$124 >> 2] = $$3$i$i1496;
 dest = $16543;
 src = 1574570;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 124 | 0;
 src = 1574642;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 196 | 0;
 src = 1574714;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 268 | 0;
 src = 1574786;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 340 | 0;
 src = 1574858;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 412 | 0;
 src = 1574930;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 484 | 0;
 src = 1575002;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 556 | 0;
 src = 1575074;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 628 | 0;
 src = 1575146;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 700 | 0;
 src = 1575218;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 772 | 0;
 src = 1575290;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 844 | 0;
 src = 1575362;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 916 | 0;
 src = 1575434;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 988 | 0;
 src = 1575506;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 1060 | 0;
 src = 1575578;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 1132 | 0;
 src = 1575650;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 1204 | 0;
 src = 1575722;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 1276 | 0;
 src = 1575794;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 1348 | 0;
 src = 1575866;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 1420 | 0;
 src = 1575938;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 1492 | 0;
 src = 1576010;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 1564 | 0;
 src = 1576082;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 1636 | 0;
 src = 1576154;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 1708 | 0;
 src = 1576226;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 1780 | 0;
 src = 1576298;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 1852 | 0;
 src = 1576370;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 1924 | 0;
 src = 1576442;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1496 + 1996 | 0;
 src = 1576514;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $124);
 if ($$3$i$i1496 | 0) {
  $16581 = $$3$i$i1496 + 5 | 0;
  $16583 = (HEAP8[$16581 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16581 >> 0] = $16583;
  if (!($16583 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1496);
  HEAP32[$124 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 220;
 HEAP16[$3687 >> 1] = 318;
 HEAP16[$3688 >> 1] = 802;
 HEAP16[$3689 >> 1] = 323;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 7060) label = 1860; else {
  $16587 = HEAP32[915090] | 0;
  if (($16587 | 0) == (HEAP32[915088] | 0)) label = 1860; else {
   $$lcssa$i$i1508 = 3660360;
   $$lcssa8$i$i1507 = $16587;
   label = 1861;
  }
 }
 do if ((label | 0) == 1860) {
  if ((HEAP32[915097] | 0) >>> 0 >= 7060) {
   $16594 = HEAP32[915096] | 0;
   if (($16594 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1508 = 3660384;
    $$lcssa8$i$i1507 = $16594;
    label = 1861;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 7060) {
   $16599 = HEAP32[915102] | 0;
   if (($16599 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1508 = 3660408;
    $$lcssa8$i$i1507 = $16599;
    label = 1861;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 7060) {
   $16604 = HEAP32[915108] | 0;
   if (($16604 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1508 = 3660432;
    $$lcssa8$i$i1507 = $16604;
    label = 1861;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 7060) {
   $16609 = HEAP32[915114] | 0;
   if (($16609 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1508 = 3660456;
    $$lcssa8$i$i1507 = $16609;
    label = 1861;
    break;
   }
  }
  $$3$i$i1509 = __Znwj(7060) | 0;
 } while (0);
 if ((label | 0) == 1861) {
  $16592 = $$lcssa8$i$i1507 + -4 | 0;
  HEAP32[$$lcssa$i$i1508 >> 2] = $16592;
  $$3$i$i1509 = HEAP32[$16592 >> 2] | 0;
 }
 $16613 = $$3$i$i1509 + 52 | 0;
 HEAP16[$$3$i$i1509 >> 1] = 584;
 HEAP16[$$3$i$i1509 + 2 >> 1] = 6;
 HEAP8[$$3$i$i1509 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1509 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1509 + 8 >> 2] = 1168;
 HEAP32[$$3$i$i1509 + 12 >> 2] = 7008;
 HEAP32[$$3$i$i1509 + 16 >> 2] = $16613;
 HEAP32[$$3$i$i1509 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1509 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1509 + 48 >> 0] = 0;
 HEAP32[$125 >> 2] = $$3$i$i1509;
 _memcpy($16613 | 0, 1576586, 1168) | 0;
 _memcpy($$3$i$i1509 + 1220 | 0, 1577754, 1168) | 0;
 _memcpy($$3$i$i1509 + 2388 | 0, 1578922, 1168) | 0;
 _memcpy($$3$i$i1509 + 3556 | 0, 1580090, 1168) | 0;
 _memcpy($$3$i$i1509 + 4724 | 0, 1581258, 1168) | 0;
 _memcpy($$3$i$i1509 + 5892 | 0, 1582426, 1168) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $125);
 if ($$3$i$i1509 | 0) {
  $16629 = $$3$i$i1509 + 5 | 0;
  $16631 = (HEAP8[$16629 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16629 >> 0] = $16631;
  if (!($16631 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1509);
  HEAP32[$125 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 220;
 HEAP16[$3690 >> 1] = 324;
 HEAP16[$3691 >> 1] = 802;
 HEAP16[$3692 >> 1] = 329;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 7060) label = 1876; else {
  $16635 = HEAP32[915090] | 0;
  if (($16635 | 0) == (HEAP32[915088] | 0)) label = 1876; else {
   $$lcssa$i$i1521 = 3660360;
   $$lcssa8$i$i1520 = $16635;
   label = 1877;
  }
 }
 do if ((label | 0) == 1876) {
  if ((HEAP32[915097] | 0) >>> 0 >= 7060) {
   $16642 = HEAP32[915096] | 0;
   if (($16642 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1521 = 3660384;
    $$lcssa8$i$i1520 = $16642;
    label = 1877;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 7060) {
   $16647 = HEAP32[915102] | 0;
   if (($16647 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1521 = 3660408;
    $$lcssa8$i$i1520 = $16647;
    label = 1877;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 7060) {
   $16652 = HEAP32[915108] | 0;
   if (($16652 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1521 = 3660432;
    $$lcssa8$i$i1520 = $16652;
    label = 1877;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 7060) {
   $16657 = HEAP32[915114] | 0;
   if (($16657 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1521 = 3660456;
    $$lcssa8$i$i1520 = $16657;
    label = 1877;
    break;
   }
  }
  $$3$i$i1522 = __Znwj(7060) | 0;
 } while (0);
 if ((label | 0) == 1877) {
  $16640 = $$lcssa8$i$i1520 + -4 | 0;
  HEAP32[$$lcssa$i$i1521 >> 2] = $16640;
  $$3$i$i1522 = HEAP32[$16640 >> 2] | 0;
 }
 $16661 = $$3$i$i1522 + 52 | 0;
 HEAP16[$$3$i$i1522 >> 1] = 584;
 HEAP16[$$3$i$i1522 + 2 >> 1] = 6;
 HEAP8[$$3$i$i1522 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1522 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1522 + 8 >> 2] = 1168;
 HEAP32[$$3$i$i1522 + 12 >> 2] = 7008;
 HEAP32[$$3$i$i1522 + 16 >> 2] = $16661;
 HEAP32[$$3$i$i1522 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1522 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1522 + 48 >> 0] = 0;
 HEAP32[$126 >> 2] = $$3$i$i1522;
 _memcpy($16661 | 0, 1583594, 1168) | 0;
 _memcpy($$3$i$i1522 + 1220 | 0, 1584762, 1168) | 0;
 _memcpy($$3$i$i1522 + 2388 | 0, 1585930, 1168) | 0;
 _memcpy($$3$i$i1522 + 3556 | 0, 1587098, 1168) | 0;
 _memcpy($$3$i$i1522 + 4724 | 0, 1588266, 1168) | 0;
 _memcpy($$3$i$i1522 + 5892 | 0, 1589434, 1168) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $126);
 if ($$3$i$i1522 | 0) {
  $16677 = $$3$i$i1522 + 5 | 0;
  $16679 = (HEAP8[$16677 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16677 >> 0] = $16679;
  if (!($16679 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1522);
  HEAP32[$126 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 220;
 HEAP16[$3693 >> 1] = 330;
 HEAP16[$3694 >> 1] = 802;
 HEAP16[$3695 >> 1] = 334;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 5892) label = 1892; else {
  $16683 = HEAP32[915090] | 0;
  if (($16683 | 0) == (HEAP32[915088] | 0)) label = 1892; else {
   $$lcssa$i$i1534 = 3660360;
   $$lcssa8$i$i1533 = $16683;
   label = 1893;
  }
 }
 do if ((label | 0) == 1892) {
  if ((HEAP32[915097] | 0) >>> 0 >= 5892) {
   $16690 = HEAP32[915096] | 0;
   if (($16690 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1534 = 3660384;
    $$lcssa8$i$i1533 = $16690;
    label = 1893;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 5892) {
   $16695 = HEAP32[915102] | 0;
   if (($16695 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1534 = 3660408;
    $$lcssa8$i$i1533 = $16695;
    label = 1893;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 5892) {
   $16700 = HEAP32[915108] | 0;
   if (($16700 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1534 = 3660432;
    $$lcssa8$i$i1533 = $16700;
    label = 1893;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 5892) {
   $16705 = HEAP32[915114] | 0;
   if (($16705 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1534 = 3660456;
    $$lcssa8$i$i1533 = $16705;
    label = 1893;
    break;
   }
  }
  $$3$i$i1535 = __Znwj(5892) | 0;
 } while (0);
 if ((label | 0) == 1893) {
  $16688 = $$lcssa8$i$i1533 + -4 | 0;
  HEAP32[$$lcssa$i$i1534 >> 2] = $16688;
  $$3$i$i1535 = HEAP32[$16688 >> 2] | 0;
 }
 $16709 = $$3$i$i1535 + 52 | 0;
 HEAP16[$$3$i$i1535 >> 1] = 584;
 HEAP16[$$3$i$i1535 + 2 >> 1] = 5;
 HEAP8[$$3$i$i1535 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1535 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1535 + 8 >> 2] = 1168;
 HEAP32[$$3$i$i1535 + 12 >> 2] = 5840;
 HEAP32[$$3$i$i1535 + 16 >> 2] = $16709;
 HEAP32[$$3$i$i1535 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1535 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1535 + 48 >> 0] = 0;
 HEAP32[$127 >> 2] = $$3$i$i1535;
 _memcpy($16709 | 0, 1590602, 1168) | 0;
 _memcpy($$3$i$i1535 + 1220 | 0, 1591770, 1168) | 0;
 _memcpy($$3$i$i1535 + 2388 | 0, 1592938, 1168) | 0;
 _memcpy($$3$i$i1535 + 3556 | 0, 1594106, 1168) | 0;
 _memcpy($$3$i$i1535 + 4724 | 0, 1595274, 1168) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $127);
 if ($$3$i$i1535 | 0) {
  $16724 = $$3$i$i1535 + 5 | 0;
  $16726 = (HEAP8[$16724 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16724 >> 0] = $16726;
  if (!($16726 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1535);
  HEAP32[$127 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 220;
 HEAP16[$3696 >> 1] = 335;
 HEAP16[$3697 >> 1] = 802;
 HEAP16[$3698 >> 1] = 337;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 3556) label = 1908; else {
  $16730 = HEAP32[915090] | 0;
  if (($16730 | 0) == (HEAP32[915088] | 0)) label = 1908; else {
   $$lcssa$i$i1547 = 3660360;
   $$lcssa8$i$i1546 = $16730;
   label = 1909;
  }
 }
 do if ((label | 0) == 1908) {
  if ((HEAP32[915097] | 0) >>> 0 >= 3556) {
   $16737 = HEAP32[915096] | 0;
   if (($16737 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1547 = 3660384;
    $$lcssa8$i$i1546 = $16737;
    label = 1909;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 3556) {
   $16742 = HEAP32[915102] | 0;
   if (($16742 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1547 = 3660408;
    $$lcssa8$i$i1546 = $16742;
    label = 1909;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 3556) {
   $16747 = HEAP32[915108] | 0;
   if (($16747 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1547 = 3660432;
    $$lcssa8$i$i1546 = $16747;
    label = 1909;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 3556) {
   $16752 = HEAP32[915114] | 0;
   if (($16752 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1547 = 3660456;
    $$lcssa8$i$i1546 = $16752;
    label = 1909;
    break;
   }
  }
  $$3$i$i1548 = __Znwj(3556) | 0;
 } while (0);
 if ((label | 0) == 1909) {
  $16735 = $$lcssa8$i$i1546 + -4 | 0;
  HEAP32[$$lcssa$i$i1547 >> 2] = $16735;
  $$3$i$i1548 = HEAP32[$16735 >> 2] | 0;
 }
 $16756 = $$3$i$i1548 + 52 | 0;
 HEAP16[$$3$i$i1548 >> 1] = 584;
 HEAP16[$$3$i$i1548 + 2 >> 1] = 3;
 HEAP8[$$3$i$i1548 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1548 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1548 + 8 >> 2] = 1168;
 HEAP32[$$3$i$i1548 + 12 >> 2] = 3504;
 HEAP32[$$3$i$i1548 + 16 >> 2] = $16756;
 HEAP32[$$3$i$i1548 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1548 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1548 + 48 >> 0] = 0;
 HEAP32[$128 >> 2] = $$3$i$i1548;
 _memcpy($16756 | 0, 1596442, 1168) | 0;
 _memcpy($$3$i$i1548 + 1220 | 0, 1597610, 1168) | 0;
 _memcpy($$3$i$i1548 + 2388 | 0, 1598778, 1168) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $128);
 if ($$3$i$i1548 | 0) {
  $16769 = $$3$i$i1548 + 5 | 0;
  $16771 = (HEAP8[$16769 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16769 >> 0] = $16771;
  if (!($16771 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1548);
  HEAP32[$128 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 220;
 HEAP16[$3699 >> 1] = 338;
 HEAP16[$3700 >> 1] = 802;
 HEAP16[$3701 >> 1] = 338;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1220) label = 1924; else {
  $16775 = HEAP32[915090] | 0;
  if (($16775 | 0) == (HEAP32[915088] | 0)) label = 1924; else {
   $$lcssa$i$i1560 = 3660360;
   $$lcssa8$i$i1559 = $16775;
   label = 1925;
  }
 }
 do if ((label | 0) == 1924) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1220) {
   $16782 = HEAP32[915096] | 0;
   if (($16782 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1560 = 3660384;
    $$lcssa8$i$i1559 = $16782;
    label = 1925;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1220) {
   $16787 = HEAP32[915102] | 0;
   if (($16787 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1560 = 3660408;
    $$lcssa8$i$i1559 = $16787;
    label = 1925;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1220) {
   $16792 = HEAP32[915108] | 0;
   if (($16792 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1560 = 3660432;
    $$lcssa8$i$i1559 = $16792;
    label = 1925;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1220) {
   $16797 = HEAP32[915114] | 0;
   if (($16797 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1560 = 3660456;
    $$lcssa8$i$i1559 = $16797;
    label = 1925;
    break;
   }
  }
  $$3$i$i1561 = __Znwj(1220) | 0;
 } while (0);
 if ((label | 0) == 1925) {
  $16780 = $$lcssa8$i$i1559 + -4 | 0;
  HEAP32[$$lcssa$i$i1560 >> 2] = $16780;
  $$3$i$i1561 = HEAP32[$16780 >> 2] | 0;
 }
 $16801 = $$3$i$i1561 + 52 | 0;
 HEAP16[$$3$i$i1561 >> 1] = 584;
 HEAP16[$$3$i$i1561 + 2 >> 1] = 1;
 HEAP8[$$3$i$i1561 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1561 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1561 + 8 >> 2] = 1168;
 HEAP32[$$3$i$i1561 + 12 >> 2] = 1168;
 HEAP32[$$3$i$i1561 + 16 >> 2] = $16801;
 HEAP32[$$3$i$i1561 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1561 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1561 + 48 >> 0] = 0;
 HEAP32[$129 >> 2] = $$3$i$i1561;
 _memcpy($16801 | 0, 1599946, 1168) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $129);
 if ($$3$i$i1561 | 0) {
  $16812 = $$3$i$i1561 + 5 | 0;
  $16814 = (HEAP8[$16812 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16812 >> 0] = $16814;
  if (!($16814 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1561);
  HEAP32[$129 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 220;
 HEAP16[$3702 >> 1] = 339;
 HEAP16[$3703 >> 1] = 802;
 HEAP16[$3704 >> 1] = 353;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 17572) label = 1940; else {
  $16818 = HEAP32[915090] | 0;
  if (($16818 | 0) == (HEAP32[915088] | 0)) label = 1940; else {
   $$lcssa$i$i1573 = 3660360;
   $$lcssa8$i$i1572 = $16818;
   label = 1941;
  }
 }
 do if ((label | 0) == 1940) {
  if ((HEAP32[915097] | 0) >>> 0 >= 17572) {
   $16825 = HEAP32[915096] | 0;
   if (($16825 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1573 = 3660384;
    $$lcssa8$i$i1572 = $16825;
    label = 1941;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 17572) {
   $16830 = HEAP32[915102] | 0;
   if (($16830 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1573 = 3660408;
    $$lcssa8$i$i1572 = $16830;
    label = 1941;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 17572) {
   $16835 = HEAP32[915108] | 0;
   if (($16835 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1573 = 3660432;
    $$lcssa8$i$i1572 = $16835;
    label = 1941;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 17572) {
   $16840 = HEAP32[915114] | 0;
   if (($16840 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1573 = 3660456;
    $$lcssa8$i$i1572 = $16840;
    label = 1941;
    break;
   }
  }
  $$3$i$i1574 = __Znwj(17572) | 0;
 } while (0);
 if ((label | 0) == 1941) {
  $16823 = $$lcssa8$i$i1572 + -4 | 0;
  HEAP32[$$lcssa$i$i1573 >> 2] = $16823;
  $$3$i$i1574 = HEAP32[$16823 >> 2] | 0;
 }
 $16844 = $$3$i$i1574 + 52 | 0;
 HEAP16[$$3$i$i1574 >> 1] = 584;
 HEAP16[$$3$i$i1574 + 2 >> 1] = 15;
 HEAP8[$$3$i$i1574 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1574 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1574 + 8 >> 2] = 1168;
 HEAP32[$$3$i$i1574 + 12 >> 2] = 17520;
 HEAP32[$$3$i$i1574 + 16 >> 2] = $16844;
 HEAP32[$$3$i$i1574 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1574 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1574 + 48 >> 0] = 0;
 HEAP32[$130 >> 2] = $$3$i$i1574;
 _memcpy($16844 | 0, 1601114, 1168) | 0;
 _memcpy($$3$i$i1574 + 1220 | 0, 1602282, 1168) | 0;
 _memcpy($$3$i$i1574 + 2388 | 0, 1603450, 1168) | 0;
 _memcpy($$3$i$i1574 + 3556 | 0, 1604618, 1168) | 0;
 _memcpy($$3$i$i1574 + 4724 | 0, 1605786, 1168) | 0;
 _memcpy($$3$i$i1574 + 5892 | 0, 1606954, 1168) | 0;
 _memcpy($$3$i$i1574 + 7060 | 0, 1608122, 1168) | 0;
 _memcpy($$3$i$i1574 + 8228 | 0, 1609290, 1168) | 0;
 _memcpy($$3$i$i1574 + 9396 | 0, 1610458, 1168) | 0;
 _memcpy($$3$i$i1574 + 10564 | 0, 1611626, 1168) | 0;
 _memcpy($$3$i$i1574 + 11732 | 0, 1612794, 1168) | 0;
 _memcpy($$3$i$i1574 + 12900 | 0, 1613962, 1168) | 0;
 _memcpy($$3$i$i1574 + 14068 | 0, 1615130, 1168) | 0;
 _memcpy($$3$i$i1574 + 15236 | 0, 1616298, 1168) | 0;
 _memcpy($$3$i$i1574 + 16404 | 0, 1617466, 1168) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $130);
 if ($$3$i$i1574 | 0) {
  $16869 = $$3$i$i1574 + 5 | 0;
  $16871 = (HEAP8[$16869 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16869 >> 0] = $16871;
  if (!($16871 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1574);
  HEAP32[$130 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 220;
 HEAP16[$3705 >> 1] = 324;
 HEAP16[$3706 >> 1] = 239;
 HEAP16[$3707 >> 1] = 343;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 852) label = 1956; else {
  $16875 = HEAP32[915090] | 0;
  if (($16875 | 0) == (HEAP32[915088] | 0)) label = 1956; else {
   $$lcssa$i$i1586 = 3660360;
   $$lcssa8$i$i1585 = $16875;
   label = 1957;
  }
 }
 do if ((label | 0) == 1956) {
  if ((HEAP32[915097] | 0) >>> 0 >= 852) {
   $16882 = HEAP32[915096] | 0;
   if (($16882 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1586 = 3660384;
    $$lcssa8$i$i1585 = $16882;
    label = 1957;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 852) {
   $16887 = HEAP32[915102] | 0;
   if (($16887 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1586 = 3660408;
    $$lcssa8$i$i1585 = $16887;
    label = 1957;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 852) {
   $16892 = HEAP32[915108] | 0;
   if (($16892 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1586 = 3660432;
    $$lcssa8$i$i1585 = $16892;
    label = 1957;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 852) {
   $16897 = HEAP32[915114] | 0;
   if (($16897 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1586 = 3660456;
    $$lcssa8$i$i1585 = $16897;
    label = 1957;
    break;
   }
  }
  $$3$i$i1587 = __Znwj(852) | 0;
 } while (0);
 if ((label | 0) == 1957) {
  $16880 = $$lcssa8$i$i1585 + -4 | 0;
  HEAP32[$$lcssa$i$i1586 >> 2] = $16880;
  $$3$i$i1587 = HEAP32[$16880 >> 2] | 0;
 }
 $16901 = $$3$i$i1587 + 52 | 0;
 HEAP16[$$3$i$i1587 >> 1] = 20;
 HEAP16[$$3$i$i1587 + 2 >> 1] = 20;
 HEAP8[$$3$i$i1587 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1587 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1587 + 8 >> 2] = 40;
 HEAP32[$$3$i$i1587 + 12 >> 2] = 800;
 HEAP32[$$3$i$i1587 + 16 >> 2] = $16901;
 HEAP32[$$3$i$i1587 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1587 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1587 + 48 >> 0] = 0;
 HEAP32[$131 >> 2] = $$3$i$i1587;
 dest = $16901;
 src = 1618634;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 92 | 0;
 src = 1618674;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 132 | 0;
 src = 1618714;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 172 | 0;
 src = 1618754;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 212 | 0;
 src = 1618794;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 252 | 0;
 src = 1618834;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 292 | 0;
 src = 1618874;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 332 | 0;
 src = 1618914;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 372 | 0;
 src = 1618954;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 412 | 0;
 src = 1618994;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 452 | 0;
 src = 1619034;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 492 | 0;
 src = 1619074;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 532 | 0;
 src = 1619114;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 572 | 0;
 src = 1619154;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 612 | 0;
 src = 1619194;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 652 | 0;
 src = 1619234;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 692 | 0;
 src = 1619274;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 732 | 0;
 src = 1619314;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 772 | 0;
 src = 1619354;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1587 + 812 | 0;
 src = 1619394;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $131);
 if ($$3$i$i1587 | 0) {
  $16931 = $$3$i$i1587 + 5 | 0;
  $16933 = (HEAP8[$16931 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16931 >> 0] = $16933;
  if (!($16933 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1587);
  HEAP32[$131 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 136;
 HEAP16[$3708 >> 1] = 318;
 HEAP16[$3709 >> 1] = 887;
 HEAP16[$3710 >> 1] = 336;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 28628) label = 1972; else {
  $16937 = HEAP32[915090] | 0;
  if (($16937 | 0) == (HEAP32[915088] | 0)) label = 1972; else {
   $$lcssa$i$i1599 = 3660360;
   $$lcssa8$i$i1598 = $16937;
   label = 1973;
  }
 }
 do if ((label | 0) == 1972) {
  if ((HEAP32[915097] | 0) >>> 0 >= 28628) {
   $16944 = HEAP32[915096] | 0;
   if (($16944 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1599 = 3660384;
    $$lcssa8$i$i1598 = $16944;
    label = 1973;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 28628) {
   $16949 = HEAP32[915102] | 0;
   if (($16949 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1599 = 3660408;
    $$lcssa8$i$i1598 = $16949;
    label = 1973;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 28628) {
   $16954 = HEAP32[915108] | 0;
   if (($16954 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1599 = 3660432;
    $$lcssa8$i$i1598 = $16954;
    label = 1973;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 28628) {
   $16959 = HEAP32[915114] | 0;
   if (($16959 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1599 = 3660456;
    $$lcssa8$i$i1598 = $16959;
    label = 1973;
    break;
   }
  }
  $$3$i$i1600 = __Znwj(28628) | 0;
 } while (0);
 if ((label | 0) == 1973) {
  $16942 = $$lcssa8$i$i1598 + -4 | 0;
  HEAP32[$$lcssa$i$i1599 >> 2] = $16942;
  $$3$i$i1600 = HEAP32[$16942 >> 2] | 0;
 }
 $16963 = $$3$i$i1600 + 52 | 0;
 HEAP16[$$3$i$i1600 >> 1] = 752;
 HEAP16[$$3$i$i1600 + 2 >> 1] = 19;
 HEAP8[$$3$i$i1600 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1600 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1600 + 8 >> 2] = 1504;
 HEAP32[$$3$i$i1600 + 12 >> 2] = 28576;
 HEAP32[$$3$i$i1600 + 16 >> 2] = $16963;
 HEAP32[$$3$i$i1600 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1600 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1600 + 48 >> 0] = 0;
 HEAP32[$132 >> 2] = $$3$i$i1600;
 _memcpy($16963 | 0, 1619434, 1504) | 0;
 _memcpy($$3$i$i1600 + 1556 | 0, 1620938, 1504) | 0;
 _memcpy($$3$i$i1600 + 3060 | 0, 1622442, 1504) | 0;
 _memcpy($$3$i$i1600 + 4564 | 0, 1623946, 1504) | 0;
 _memcpy($$3$i$i1600 + 6068 | 0, 1625450, 1504) | 0;
 _memcpy($$3$i$i1600 + 7572 | 0, 1626954, 1504) | 0;
 _memcpy($$3$i$i1600 + 9076 | 0, 1628458, 1504) | 0;
 _memcpy($$3$i$i1600 + 10580 | 0, 1629962, 1504) | 0;
 _memcpy($$3$i$i1600 + 12084 | 0, 1631466, 1504) | 0;
 _memcpy($$3$i$i1600 + 13588 | 0, 1632970, 1504) | 0;
 _memcpy($$3$i$i1600 + 15092 | 0, 1634474, 1504) | 0;
 _memcpy($$3$i$i1600 + 16596 | 0, 1635978, 1504) | 0;
 _memcpy($$3$i$i1600 + 18100 | 0, 1637482, 1504) | 0;
 _memcpy($$3$i$i1600 + 19604 | 0, 1638986, 1504) | 0;
 _memcpy($$3$i$i1600 + 21108 | 0, 1640490, 1504) | 0;
 _memcpy($$3$i$i1600 + 22612 | 0, 1641994, 1504) | 0;
 _memcpy($$3$i$i1600 + 24116 | 0, 1643498, 1504) | 0;
 _memcpy($$3$i$i1600 + 25620 | 0, 1645002, 1504) | 0;
 _memcpy($$3$i$i1600 + 27124 | 0, 1646506, 1504) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $132);
 if ($$3$i$i1600 | 0) {
  $16992 = $$3$i$i1600 + 5 | 0;
  $16994 = (HEAP8[$16992 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$16992 >> 0] = $16994;
  if (!($16994 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1600);
  HEAP32[$132 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 136;
 HEAP16[$3711 >> 1] = 337;
 HEAP16[$3712 >> 1] = 887;
 HEAP16[$3713 >> 1] = 350;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 21108) label = 1988; else {
  $16998 = HEAP32[915090] | 0;
  if (($16998 | 0) == (HEAP32[915088] | 0)) label = 1988; else {
   $$lcssa$i$i1612 = 3660360;
   $$lcssa8$i$i1611 = $16998;
   label = 1989;
  }
 }
 do if ((label | 0) == 1988) {
  if ((HEAP32[915097] | 0) >>> 0 >= 21108) {
   $17005 = HEAP32[915096] | 0;
   if (($17005 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1612 = 3660384;
    $$lcssa8$i$i1611 = $17005;
    label = 1989;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 21108) {
   $17010 = HEAP32[915102] | 0;
   if (($17010 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1612 = 3660408;
    $$lcssa8$i$i1611 = $17010;
    label = 1989;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 21108) {
   $17015 = HEAP32[915108] | 0;
   if (($17015 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1612 = 3660432;
    $$lcssa8$i$i1611 = $17015;
    label = 1989;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 21108) {
   $17020 = HEAP32[915114] | 0;
   if (($17020 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1612 = 3660456;
    $$lcssa8$i$i1611 = $17020;
    label = 1989;
    break;
   }
  }
  $$3$i$i1613 = __Znwj(21108) | 0;
 } while (0);
 if ((label | 0) == 1989) {
  $17003 = $$lcssa8$i$i1611 + -4 | 0;
  HEAP32[$$lcssa$i$i1612 >> 2] = $17003;
  $$3$i$i1613 = HEAP32[$17003 >> 2] | 0;
 }
 $17024 = $$3$i$i1613 + 52 | 0;
 HEAP16[$$3$i$i1613 >> 1] = 752;
 HEAP16[$$3$i$i1613 + 2 >> 1] = 14;
 HEAP8[$$3$i$i1613 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1613 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1613 + 8 >> 2] = 1504;
 HEAP32[$$3$i$i1613 + 12 >> 2] = 21056;
 HEAP32[$$3$i$i1613 + 16 >> 2] = $17024;
 HEAP32[$$3$i$i1613 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1613 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1613 + 48 >> 0] = 0;
 HEAP32[$133 >> 2] = $$3$i$i1613;
 _memcpy($17024 | 0, 1648010, 1504) | 0;
 _memcpy($$3$i$i1613 + 1556 | 0, 1649514, 1504) | 0;
 _memcpy($$3$i$i1613 + 3060 | 0, 1651018, 1504) | 0;
 _memcpy($$3$i$i1613 + 4564 | 0, 1652522, 1504) | 0;
 _memcpy($$3$i$i1613 + 6068 | 0, 1654026, 1504) | 0;
 _memcpy($$3$i$i1613 + 7572 | 0, 1655530, 1504) | 0;
 _memcpy($$3$i$i1613 + 9076 | 0, 1657034, 1504) | 0;
 _memcpy($$3$i$i1613 + 10580 | 0, 1658538, 1504) | 0;
 _memcpy($$3$i$i1613 + 12084 | 0, 1660042, 1504) | 0;
 _memcpy($$3$i$i1613 + 13588 | 0, 1661546, 1504) | 0;
 _memcpy($$3$i$i1613 + 15092 | 0, 1663050, 1504) | 0;
 _memcpy($$3$i$i1613 + 16596 | 0, 1664554, 1504) | 0;
 _memcpy($$3$i$i1613 + 18100 | 0, 1666058, 1504) | 0;
 _memcpy($$3$i$i1613 + 19604 | 0, 1667562, 1504) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $133);
 if ($$3$i$i1613 | 0) {
  $17048 = $$3$i$i1613 + 5 | 0;
  $17050 = (HEAP8[$17048 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$17048 >> 0] = $17050;
  if (!($17050 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1613);
  HEAP32[$133 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 136;
 HEAP16[$3714 >> 1] = 351;
 HEAP16[$3715 >> 1] = 887;
 HEAP16[$3716 >> 1] = 353;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4564) label = 2004; else {
  $17054 = HEAP32[915090] | 0;
  if (($17054 | 0) == (HEAP32[915088] | 0)) label = 2004; else {
   $$lcssa$i$i1625 = 3660360;
   $$lcssa8$i$i1624 = $17054;
   label = 2005;
  }
 }
 do if ((label | 0) == 2004) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4564) {
   $17061 = HEAP32[915096] | 0;
   if (($17061 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1625 = 3660384;
    $$lcssa8$i$i1624 = $17061;
    label = 2005;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4564) {
   $17066 = HEAP32[915102] | 0;
   if (($17066 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1625 = 3660408;
    $$lcssa8$i$i1624 = $17066;
    label = 2005;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4564) {
   $17071 = HEAP32[915108] | 0;
   if (($17071 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1625 = 3660432;
    $$lcssa8$i$i1624 = $17071;
    label = 2005;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4564) {
   $17076 = HEAP32[915114] | 0;
   if (($17076 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1625 = 3660456;
    $$lcssa8$i$i1624 = $17076;
    label = 2005;
    break;
   }
  }
  $$3$i$i1626 = __Znwj(4564) | 0;
 } while (0);
 if ((label | 0) == 2005) {
  $17059 = $$lcssa8$i$i1624 + -4 | 0;
  HEAP32[$$lcssa$i$i1625 >> 2] = $17059;
  $$3$i$i1626 = HEAP32[$17059 >> 2] | 0;
 }
 $17080 = $$3$i$i1626 + 52 | 0;
 HEAP16[$$3$i$i1626 >> 1] = 752;
 HEAP16[$$3$i$i1626 + 2 >> 1] = 3;
 HEAP8[$$3$i$i1626 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1626 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1626 + 8 >> 2] = 1504;
 HEAP32[$$3$i$i1626 + 12 >> 2] = 4512;
 HEAP32[$$3$i$i1626 + 16 >> 2] = $17080;
 HEAP32[$$3$i$i1626 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1626 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1626 + 48 >> 0] = 0;
 HEAP32[$134 >> 2] = $$3$i$i1626;
 _memcpy($17080 | 0, 1669066, 1504) | 0;
 _memcpy($$3$i$i1626 + 1556 | 0, 1670570, 1504) | 0;
 _memcpy($$3$i$i1626 + 3060 | 0, 1672074, 1504) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $134);
 if ($$3$i$i1626 | 0) {
  $17093 = $$3$i$i1626 + 5 | 0;
  $17095 = (HEAP8[$17093 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$17093 >> 0] = $17095;
  if (!($17095 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1626);
  HEAP32[$134 >> 2] = 0;
 }
 $17097 = $135;
 HEAP32[$17097 >> 2] = 327685;
 HEAP32[$17097 + 4 >> 2] = 1835164;
 HEAP32[$3717 >> 2] = 6895;
 HEAP16[$136 >> 1] = 5;
 HEAP16[$3718 >> 1] = 5;
 HEAP16[$3719 >> 1] = 156;
 HEAP16[$3720 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $135, $136);
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 7;
 HEAP16[$3721 >> 1] = 5;
 HEAP16[$3722 >> 1] = 41;
 HEAP16[$3723 >> 1] = 32;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2068) label = 2020; else {
  $17103 = HEAP32[915090] | 0;
  if (($17103 | 0) == (HEAP32[915088] | 0)) label = 2020; else {
   $$lcssa$i$i1641 = 3660360;
   $$lcssa8$i$i1640 = $17103;
   label = 2021;
  }
 }
 do if ((label | 0) == 2020) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2068) {
   $17110 = HEAP32[915096] | 0;
   if (($17110 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1641 = 3660384;
    $$lcssa8$i$i1640 = $17110;
    label = 2021;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2068) {
   $17115 = HEAP32[915102] | 0;
   if (($17115 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1641 = 3660408;
    $$lcssa8$i$i1640 = $17115;
    label = 2021;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2068) {
   $17120 = HEAP32[915108] | 0;
   if (($17120 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1641 = 3660432;
    $$lcssa8$i$i1640 = $17120;
    label = 2021;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2068) {
   $17125 = HEAP32[915114] | 0;
   if (($17125 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1641 = 3660456;
    $$lcssa8$i$i1640 = $17125;
    label = 2021;
    break;
   }
  }
  $$3$i$i1642 = __Znwj(2068) | 0;
 } while (0);
 if ((label | 0) == 2021) {
  $17108 = $$lcssa8$i$i1640 + -4 | 0;
  HEAP32[$$lcssa$i$i1641 >> 2] = $17108;
  $$3$i$i1642 = HEAP32[$17108 >> 2] | 0;
 }
 $17129 = $$3$i$i1642 + 52 | 0;
 HEAP16[$$3$i$i1642 >> 1] = 36;
 HEAP16[$$3$i$i1642 + 2 >> 1] = 28;
 HEAP8[$$3$i$i1642 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1642 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1642 + 8 >> 2] = 72;
 HEAP32[$$3$i$i1642 + 12 >> 2] = 2016;
 HEAP32[$$3$i$i1642 + 16 >> 2] = $17129;
 HEAP32[$$3$i$i1642 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1642 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1642 + 48 >> 0] = 0;
 HEAP32[$137 >> 2] = $$3$i$i1642;
 dest = $17129;
 src = 1673578;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 124 | 0;
 src = 1673650;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 196 | 0;
 src = 1673722;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 268 | 0;
 src = 1673794;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 340 | 0;
 src = 1673866;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 412 | 0;
 src = 1673938;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 484 | 0;
 src = 1674010;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 556 | 0;
 src = 1674082;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 628 | 0;
 src = 1674154;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 700 | 0;
 src = 1674226;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 772 | 0;
 src = 1674298;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 844 | 0;
 src = 1674370;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 916 | 0;
 src = 1674442;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 988 | 0;
 src = 1674514;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 1060 | 0;
 src = 1674586;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 1132 | 0;
 src = 1674658;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 1204 | 0;
 src = 1674730;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 1276 | 0;
 src = 1674802;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 1348 | 0;
 src = 1674874;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 1420 | 0;
 src = 1674946;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 1492 | 0;
 src = 1675018;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 1564 | 0;
 src = 1675090;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 1636 | 0;
 src = 1675162;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 1708 | 0;
 src = 1675234;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 1780 | 0;
 src = 1675306;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 1852 | 0;
 src = 1675378;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 1924 | 0;
 src = 1675450;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1642 + 1996 | 0;
 src = 1675522;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $137);
 if ($$3$i$i1642 | 0) {
  $17167 = $$3$i$i1642 + 5 | 0;
  $17169 = (HEAP8[$17167 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$17167 >> 0] = $17169;
  if (!($17169 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1642);
  HEAP32[$137 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 368;
 HEAP16[$3724 >> 1] = 324;
 HEAP16[$3725 >> 1] = 387;
 HEAP16[$3726 >> 1] = 343;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 852) label = 2036; else {
  $17173 = HEAP32[915090] | 0;
  if (($17173 | 0) == (HEAP32[915088] | 0)) label = 2036; else {
   $$lcssa$i$i1654 = 3660360;
   $$lcssa8$i$i1653 = $17173;
   label = 2037;
  }
 }
 do if ((label | 0) == 2036) {
  if ((HEAP32[915097] | 0) >>> 0 >= 852) {
   $17180 = HEAP32[915096] | 0;
   if (($17180 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1654 = 3660384;
    $$lcssa8$i$i1653 = $17180;
    label = 2037;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 852) {
   $17185 = HEAP32[915102] | 0;
   if (($17185 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1654 = 3660408;
    $$lcssa8$i$i1653 = $17185;
    label = 2037;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 852) {
   $17190 = HEAP32[915108] | 0;
   if (($17190 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1654 = 3660432;
    $$lcssa8$i$i1653 = $17190;
    label = 2037;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 852) {
   $17195 = HEAP32[915114] | 0;
   if (($17195 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1654 = 3660456;
    $$lcssa8$i$i1653 = $17195;
    label = 2037;
    break;
   }
  }
  $$3$i$i1655 = __Znwj(852) | 0;
 } while (0);
 if ((label | 0) == 2037) {
  $17178 = $$lcssa8$i$i1653 + -4 | 0;
  HEAP32[$$lcssa$i$i1654 >> 2] = $17178;
  $$3$i$i1655 = HEAP32[$17178 >> 2] | 0;
 }
 $17199 = $$3$i$i1655 + 52 | 0;
 HEAP16[$$3$i$i1655 >> 1] = 20;
 HEAP16[$$3$i$i1655 + 2 >> 1] = 20;
 HEAP8[$$3$i$i1655 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1655 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1655 + 8 >> 2] = 40;
 HEAP32[$$3$i$i1655 + 12 >> 2] = 800;
 HEAP32[$$3$i$i1655 + 16 >> 2] = $17199;
 HEAP32[$$3$i$i1655 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1655 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1655 + 48 >> 0] = 0;
 HEAP32[$138 >> 2] = $$3$i$i1655;
 dest = $17199;
 src = 1675594;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 92 | 0;
 src = 1675634;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 132 | 0;
 src = 1675674;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 172 | 0;
 src = 1675714;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 212 | 0;
 src = 1675754;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 252 | 0;
 src = 1675794;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 292 | 0;
 src = 1675834;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 332 | 0;
 src = 1675874;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 372 | 0;
 src = 1675914;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 412 | 0;
 src = 1675954;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 452 | 0;
 src = 1675994;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 492 | 0;
 src = 1676034;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 532 | 0;
 src = 1676074;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 572 | 0;
 src = 1676114;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 612 | 0;
 src = 1676154;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 652 | 0;
 src = 1676194;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 692 | 0;
 src = 1676234;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 732 | 0;
 src = 1676274;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 772 | 0;
 src = 1676314;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1655 + 812 | 0;
 src = 1676354;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $138);
 if ($$3$i$i1655 | 0) {
  $17229 = $$3$i$i1655 + 5 | 0;
  $17231 = (HEAP8[$17229 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$17229 >> 0] = $17231;
  if (!($17231 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1655);
  HEAP32[$138 >> 2] = 0;
 }
 $17233 = $139;
 HEAP32[$17233 >> 2] = 0;
 HEAP32[$17233 + 4 >> 2] = 50332672;
 HEAP32[$3727 >> 2] = 15220;
 HEAP16[$140 >> 1] = 0;
 HEAP16[$3728 >> 1] = 0;
 HEAP16[$3729 >> 1] = 1024;
 HEAP16[$3730 >> 1] = 768;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $139, $140);
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 368;
 HEAP16[$3731 >> 1] = 324;
 HEAP16[$3732 >> 1] = 387;
 HEAP16[$3733 >> 1] = 343;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 852) label = 2052; else {
  $17239 = HEAP32[915090] | 0;
  if (($17239 | 0) == (HEAP32[915088] | 0)) label = 2052; else {
   $$lcssa$i$i1670 = 3660360;
   $$lcssa8$i$i1669 = $17239;
   label = 2053;
  }
 }
 do if ((label | 0) == 2052) {
  if ((HEAP32[915097] | 0) >>> 0 >= 852) {
   $17246 = HEAP32[915096] | 0;
   if (($17246 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1670 = 3660384;
    $$lcssa8$i$i1669 = $17246;
    label = 2053;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 852) {
   $17251 = HEAP32[915102] | 0;
   if (($17251 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1670 = 3660408;
    $$lcssa8$i$i1669 = $17251;
    label = 2053;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 852) {
   $17256 = HEAP32[915108] | 0;
   if (($17256 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1670 = 3660432;
    $$lcssa8$i$i1669 = $17256;
    label = 2053;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 852) {
   $17261 = HEAP32[915114] | 0;
   if (($17261 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1670 = 3660456;
    $$lcssa8$i$i1669 = $17261;
    label = 2053;
    break;
   }
  }
  $$3$i$i1671 = __Znwj(852) | 0;
 } while (0);
 if ((label | 0) == 2053) {
  $17244 = $$lcssa8$i$i1669 + -4 | 0;
  HEAP32[$$lcssa$i$i1670 >> 2] = $17244;
  $$3$i$i1671 = HEAP32[$17244 >> 2] | 0;
 }
 $17265 = $$3$i$i1671 + 52 | 0;
 HEAP16[$$3$i$i1671 >> 1] = 20;
 HEAP16[$$3$i$i1671 + 2 >> 1] = 20;
 HEAP8[$$3$i$i1671 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1671 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1671 + 8 >> 2] = 40;
 HEAP32[$$3$i$i1671 + 12 >> 2] = 800;
 HEAP32[$$3$i$i1671 + 16 >> 2] = $17265;
 HEAP32[$$3$i$i1671 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1671 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1671 + 48 >> 0] = 0;
 HEAP32[$141 >> 2] = $$3$i$i1671;
 dest = $17265;
 src = 1676394;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 92 | 0;
 src = 1676434;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 132 | 0;
 src = 1676474;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 172 | 0;
 src = 1676514;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 212 | 0;
 src = 1676554;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 252 | 0;
 src = 1676594;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 292 | 0;
 src = 1676634;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 332 | 0;
 src = 1676674;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 372 | 0;
 src = 1676714;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 412 | 0;
 src = 1676754;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 452 | 0;
 src = 1676794;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 492 | 0;
 src = 1676834;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 532 | 0;
 src = 1676874;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 572 | 0;
 src = 1676914;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 612 | 0;
 src = 1676954;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 652 | 0;
 src = 1676994;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 692 | 0;
 src = 1677034;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 732 | 0;
 src = 1677074;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 772 | 0;
 src = 1677114;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1671 + 812 | 0;
 src = 1677154;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $141);
 if ($$3$i$i1671 | 0) {
  $17295 = $$3$i$i1671 + 5 | 0;
  $17297 = (HEAP8[$17295 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$17295 >> 0] = $17297;
  if (!($17297 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1671);
  HEAP32[$141 >> 2] = 0;
 }
 $17299 = $142;
 HEAP32[$17299 >> 2] = 0;
 HEAP32[$17299 + 4 >> 2] = 50332672;
 HEAP32[$3734 >> 2] = 15220;
 HEAP16[$143 >> 1] = 0;
 HEAP16[$3735 >> 1] = 0;
 HEAP16[$3736 >> 1] = 1024;
 HEAP16[$3737 >> 1] = 768;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $142, $143);
 $17303 = $144;
 HEAP32[$17303 >> 2] = 47448064;
 HEAP32[$17303 + 4 >> 2] = 66560;
 HEAP32[$3738 >> 2] = 54937;
 HEAP16[$145 >> 1] = 0;
 HEAP16[$3739 >> 1] = 724;
 HEAP16[$3740 >> 1] = 1024;
 HEAP16[$3741 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $144, $145);
 $17307 = $146;
 HEAP32[$17307 >> 2] = 47513600;
 HEAP32[$17307 + 4 >> 2] = 66560;
 HEAP32[$3742 >> 2] = 65535;
 HEAP16[$147 >> 1] = 0;
 HEAP16[$3743 >> 1] = 725;
 HEAP16[$3744 >> 1] = 1024;
 HEAP16[$3745 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $146, $147);
 $17311 = $148;
 HEAP32[$17311 >> 2] = 47579136;
 HEAP32[$17311 + 4 >> 2] = 2686977;
 HEAP32[$3746 >> 2] = 54937;
 HEAP16[$149 >> 1] = 0;
 HEAP16[$3747 >> 1] = 726;
 HEAP16[$3748 >> 1] = 1;
 HEAP16[$3749 >> 1] = 41;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $148, $149);
 $17315 = $150;
 HEAP32[$17315 >> 2] = 47579137;
 HEAP32[$17315 + 4 >> 2] = 66559;
 HEAP32[$3750 >> 2] = 54937;
 HEAP16[$151 >> 1] = 1;
 HEAP16[$3751 >> 1] = 726;
 HEAP16[$3752 >> 1] = 1023;
 HEAP16[$3753 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $150, $151);
 $17319 = $152;
 HEAP32[$17319 >> 2] = 50266112;
 HEAP32[$17319 + 4 >> 2] = 66559;
 HEAP32[$3754 >> 2] = 54937;
 HEAP16[$153 >> 1] = 0;
 HEAP16[$3755 >> 1] = 767;
 HEAP16[$3756 >> 1] = 1023;
 HEAP16[$3757 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $152, $153);
 $17323 = $154;
 HEAP32[$17323 >> 2] = 47645695;
 HEAP32[$17323 + 4 >> 2] = 2686977;
 HEAP32[$3758 >> 2] = 54937;
 HEAP16[$155 >> 1] = 1023;
 HEAP16[$3759 >> 1] = 727;
 HEAP16[$3760 >> 1] = 1;
 HEAP16[$3761 >> 1] = 41;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $154, $155);
 $17327 = $156;
 HEAP32[$17327 >> 2] = 47644673;
 HEAP32[$17327 + 4 >> 2] = 2555905;
 HEAP32[$3762 >> 2] = 54937;
 HEAP16[$157 >> 1] = 1;
 HEAP16[$3763 >> 1] = 727;
 HEAP16[$3764 >> 1] = 1;
 HEAP16[$3765 >> 1] = 39;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $156, $157);
 $17331 = $158;
 HEAP32[$17331 >> 2] = 47644674;
 HEAP32[$17331 + 4 >> 2] = 66557;
 HEAP32[$3766 >> 2] = 54937;
 HEAP16[$159 >> 1] = 2;
 HEAP16[$3767 >> 1] = 727;
 HEAP16[$3768 >> 1] = 1021;
 HEAP16[$3769 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $158, $159);
 $17335 = $160;
 HEAP32[$17335 >> 2] = 50200577;
 HEAP32[$17335 + 4 >> 2] = 66557;
 HEAP32[$3770 >> 2] = 54937;
 HEAP16[$161 >> 1] = 1;
 HEAP16[$3771 >> 1] = 766;
 HEAP16[$3772 >> 1] = 1021;
 HEAP16[$3773 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $160, $161);
 $17339 = $162;
 HEAP32[$17339 >> 2] = 47711230;
 HEAP32[$17339 + 4 >> 2] = 2555905;
 HEAP32[$3774 >> 2] = 54937;
 HEAP16[$163 >> 1] = 1022;
 HEAP16[$3775 >> 1] = 728;
 HEAP16[$3776 >> 1] = 1;
 HEAP16[$3777 >> 1] = 39;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $162, $163);
 $17343 = $164;
 HEAP32[$17343 >> 2] = 47710210;
 HEAP32[$17343 + 4 >> 2] = 2490451;
 HEAP32[$3778 >> 2] = 54937;
 HEAP16[$165 >> 1] = 2;
 HEAP16[$3779 >> 1] = 728;
 HEAP16[$3780 >> 1] = 83;
 HEAP16[$3781 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $164, $165);
 $17347 = $166;
 HEAP32[$17347 >> 2] = 47711229;
 HEAP32[$17347 + 4 >> 2] = 2490369;
 HEAP32[$3782 >> 2] = 65535;
 HEAP16[$167 >> 1] = 1021;
 HEAP16[$3783 >> 1] = 728;
 HEAP16[$3784 >> 1] = 1;
 HEAP16[$3785 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $166, $167);
 $17351 = $168;
 HEAP32[$17351 >> 2] = 50135974;
 HEAP32[$17351 + 4 >> 2] = 65623;
 HEAP32[$3786 >> 2] = 65535;
 HEAP16[$169 >> 1] = 934;
 HEAP16[$3787 >> 1] = 765;
 HEAP16[$3788 >> 1] = 87;
 HEAP16[$3789 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $168, $169);
 $17355 = $170;
 HEAP32[$17355 >> 2] = 47711142;
 HEAP32[$17355 + 4 >> 2] = 2424833;
 HEAP32[$3790 >> 2] = 33808;
 HEAP16[$171 >> 1] = 934;
 HEAP16[$3791 >> 1] = 728;
 HEAP16[$3792 >> 1] = 1;
 HEAP16[$3793 >> 1] = 37;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $170, $171);
 $17359 = $172;
 HEAP32[$17359 >> 2] = 47711143;
 HEAP32[$17359 + 4 >> 2] = 65622;
 HEAP32[$3794 >> 2] = 33808;
 HEAP16[$173 >> 1] = 935;
 HEAP16[$3795 >> 1] = 728;
 HEAP16[$3796 >> 1] = 86;
 HEAP16[$3797 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $172, $173);
 $17363 = $174;
 HEAP32[$17363 >> 2] = 47710210;
 HEAP32[$17363 + 4 >> 2] = 2490451;
 HEAP32[$3798 >> 2] = 54937;
 HEAP16[$175 >> 1] = 2;
 HEAP16[$3799 >> 1] = 728;
 HEAP16[$3800 >> 1] = 83;
 HEAP16[$3801 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $174, $175);
 $17367 = $176;
 HEAP32[$17367 >> 2] = 47710210;
 HEAP32[$17367 + 4 >> 2] = 65537;
 HEAP32[$3802 >> 2] = 16904;
 HEAP16[$177 >> 1] = 2;
 HEAP16[$3803 >> 1] = 728;
 HEAP16[$3804 >> 1] = 1;
 HEAP16[$3805 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $176, $177);
 $17371 = $178;
 HEAP32[$17371 >> 2] = 47710210;
 HEAP32[$17371 + 4 >> 2] = 65537;
 HEAP32[$3806 >> 2] = 65535;
 HEAP16[$179 >> 1] = 2;
 HEAP16[$3807 >> 1] = 728;
 HEAP16[$3808 >> 1] = 1;
 HEAP16[$3809 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $178, $179);
 $17375 = $180;
 HEAP32[$17375 >> 2] = 47710210;
 HEAP32[$17375 + 4 >> 2] = 65537;
 HEAP32[$3810 >> 2] = 54937;
 HEAP16[$181 >> 1] = 2;
 HEAP16[$3811 >> 1] = 728;
 HEAP16[$3812 >> 1] = 1;
 HEAP16[$3813 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $180, $181);
 $17379 = $182;
 HEAP32[$17379 >> 2] = 47710210;
 HEAP32[$17379 + 4 >> 2] = 2490451;
 HEAP32[$3814 >> 2] = 54937;
 HEAP16[$183 >> 1] = 2;
 HEAP16[$3815 >> 1] = 728;
 HEAP16[$3816 >> 1] = 83;
 HEAP16[$3817 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $182, $183);
 $17383 = $184;
 HEAP32[$17383 >> 2] = 47710210;
 HEAP32[$17383 + 4 >> 2] = 2490451;
 HEAP32[$3818 >> 2] = 54937;
 HEAP16[$185 >> 1] = 2;
 HEAP16[$3819 >> 1] = 728;
 HEAP16[$3820 >> 1] = 83;
 HEAP16[$3821 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $184, $185);
 $17387 = $186;
 HEAP32[$17387 >> 2] = 47710210;
 HEAP32[$17387 + 4 >> 2] = 65537;
 HEAP32[$3822 >> 2] = 16904;
 HEAP16[$187 >> 1] = 2;
 HEAP16[$3823 >> 1] = 728;
 HEAP16[$3824 >> 1] = 1;
 HEAP16[$3825 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $186, $187);
 $17391 = $188;
 HEAP32[$17391 >> 2] = 47710210;
 HEAP32[$17391 + 4 >> 2] = 65537;
 HEAP32[$3826 >> 2] = 65535;
 HEAP16[$189 >> 1] = 2;
 HEAP16[$3827 >> 1] = 728;
 HEAP16[$3828 >> 1] = 1;
 HEAP16[$3829 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $188, $189);
 $17395 = $190;
 HEAP32[$17395 >> 2] = 47710210;
 HEAP32[$17395 + 4 >> 2] = 65537;
 HEAP32[$3830 >> 2] = 54937;
 HEAP16[$191 >> 1] = 2;
 HEAP16[$3831 >> 1] = 728;
 HEAP16[$3832 >> 1] = 1;
 HEAP16[$3833 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $190, $191);
 $17399 = $192;
 HEAP32[$17399 >> 2] = 47710210;
 HEAP32[$17399 + 4 >> 2] = 2490451;
 HEAP32[$3834 >> 2] = 54937;
 HEAP16[$193 >> 1] = 80;
 HEAP16[$3835 >> 1] = 728;
 HEAP16[$3836 >> 1] = 5;
 HEAP16[$3837 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $192, $193);
 $17403 = $194;
 HEAP32[$17403 >> 2] = 47710210;
 HEAP32[$17403 + 4 >> 2] = 2490451;
 HEAP32[$3838 >> 2] = 54937;
 HEAP16[$195 >> 1] = 80;
 HEAP16[$3839 >> 1] = 728;
 HEAP16[$3840 >> 1] = 5;
 HEAP16[$3841 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $194, $195);
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 2;
 HEAP16[$3842 >> 1] = 728;
 HEAP16[$3843 >> 1] = 79;
 HEAP16[$3844 >> 1] = 765;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6132) label = 2068; else {
  $17409 = HEAP32[915090] | 0;
  if (($17409 | 0) == (HEAP32[915088] | 0)) label = 2068; else {
   $$lcssa$i$i1764 = 3660360;
   $$lcssa8$i$i1763 = $17409;
   label = 2069;
  }
 }
 do if ((label | 0) == 2068) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6132) {
   $17416 = HEAP32[915096] | 0;
   if (($17416 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1764 = 3660384;
    $$lcssa8$i$i1763 = $17416;
    label = 2069;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6132) {
   $17421 = HEAP32[915102] | 0;
   if (($17421 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1764 = 3660408;
    $$lcssa8$i$i1763 = $17421;
    label = 2069;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6132) {
   $17426 = HEAP32[915108] | 0;
   if (($17426 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1764 = 3660432;
    $$lcssa8$i$i1763 = $17426;
    label = 2069;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6132) {
   $17431 = HEAP32[915114] | 0;
   if (($17431 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1764 = 3660456;
    $$lcssa8$i$i1763 = $17431;
    label = 2069;
    break;
   }
  }
  $$3$i$i1765 = __Znwj(6132) | 0;
 } while (0);
 if ((label | 0) == 2069) {
  $17414 = $$lcssa8$i$i1763 + -4 | 0;
  HEAP32[$$lcssa$i$i1764 >> 2] = $17414;
  $$3$i$i1765 = HEAP32[$17414 >> 2] | 0;
 }
 $17435 = $$3$i$i1765 + 52 | 0;
 HEAP16[$$3$i$i1765 >> 1] = 80;
 HEAP16[$$3$i$i1765 + 2 >> 1] = 38;
 HEAP8[$$3$i$i1765 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1765 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1765 + 8 >> 2] = 160;
 HEAP32[$$3$i$i1765 + 12 >> 2] = 6080;
 HEAP32[$$3$i$i1765 + 16 >> 2] = $17435;
 HEAP32[$$3$i$i1765 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1765 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1765 + 48 >> 0] = 0;
 HEAP32[$196 >> 2] = $$3$i$i1765;
 _memcpy($17435 | 0, 1677194, 160) | 0;
 _memcpy($$3$i$i1765 + 212 | 0, 1677354, 160) | 0;
 _memcpy($$3$i$i1765 + 372 | 0, 1677514, 160) | 0;
 _memcpy($$3$i$i1765 + 532 | 0, 1677674, 160) | 0;
 _memcpy($$3$i$i1765 + 692 | 0, 1677834, 160) | 0;
 _memcpy($$3$i$i1765 + 852 | 0, 1677994, 160) | 0;
 _memcpy($$3$i$i1765 + 1012 | 0, 1678154, 160) | 0;
 _memcpy($$3$i$i1765 + 1172 | 0, 1678314, 160) | 0;
 _memcpy($$3$i$i1765 + 1332 | 0, 1678474, 160) | 0;
 _memcpy($$3$i$i1765 + 1492 | 0, 1678634, 160) | 0;
 _memcpy($$3$i$i1765 + 1652 | 0, 1678794, 160) | 0;
 _memcpy($$3$i$i1765 + 1812 | 0, 1678954, 160) | 0;
 _memcpy($$3$i$i1765 + 1972 | 0, 1679114, 160) | 0;
 _memcpy($$3$i$i1765 + 2132 | 0, 1679274, 160) | 0;
 _memcpy($$3$i$i1765 + 2292 | 0, 1679434, 160) | 0;
 _memcpy($$3$i$i1765 + 2452 | 0, 1679594, 160) | 0;
 _memcpy($$3$i$i1765 + 2612 | 0, 1679754, 160) | 0;
 _memcpy($$3$i$i1765 + 2772 | 0, 1679914, 160) | 0;
 _memcpy($$3$i$i1765 + 2932 | 0, 1680074, 160) | 0;
 _memcpy($$3$i$i1765 + 3092 | 0, 1680234, 160) | 0;
 _memcpy($$3$i$i1765 + 3252 | 0, 1680394, 160) | 0;
 _memcpy($$3$i$i1765 + 3412 | 0, 1680554, 160) | 0;
 _memcpy($$3$i$i1765 + 3572 | 0, 1680714, 160) | 0;
 _memcpy($$3$i$i1765 + 3732 | 0, 1680874, 160) | 0;
 _memcpy($$3$i$i1765 + 3892 | 0, 1681034, 160) | 0;
 _memcpy($$3$i$i1765 + 4052 | 0, 1681194, 160) | 0;
 _memcpy($$3$i$i1765 + 4212 | 0, 1681354, 160) | 0;
 _memcpy($$3$i$i1765 + 4372 | 0, 1681514, 160) | 0;
 _memcpy($$3$i$i1765 + 4532 | 0, 1681674, 160) | 0;
 _memcpy($$3$i$i1765 + 4692 | 0, 1681834, 160) | 0;
 _memcpy($$3$i$i1765 + 4852 | 0, 1681994, 160) | 0;
 _memcpy($$3$i$i1765 + 5012 | 0, 1682154, 160) | 0;
 _memcpy($$3$i$i1765 + 5172 | 0, 1682314, 160) | 0;
 _memcpy($$3$i$i1765 + 5332 | 0, 1682474, 160) | 0;
 _memcpy($$3$i$i1765 + 5492 | 0, 1682634, 160) | 0;
 _memcpy($$3$i$i1765 + 5652 | 0, 1682794, 160) | 0;
 _memcpy($$3$i$i1765 + 5812 | 0, 1682954, 160) | 0;
 _memcpy($$3$i$i1765 + 5972 | 0, 1683114, 160) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $196);
 if ($$3$i$i1765 | 0) {
  $17483 = $$3$i$i1765 + 5 | 0;
  $17485 = (HEAP8[$17483 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$17483 >> 0] = $17485;
  if (!($17485 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1765);
  HEAP32[$196 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 935;
 HEAP16[$3845 >> 1] = 729;
 HEAP16[$3846 >> 1] = 1002;
 HEAP16[$3847 >> 1] = 764;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4948) label = 2084; else {
  $17489 = HEAP32[915090] | 0;
  if (($17489 | 0) == (HEAP32[915088] | 0)) label = 2084; else {
   $$lcssa$i$i1777 = 3660360;
   $$lcssa8$i$i1776 = $17489;
   label = 2085;
  }
 }
 do if ((label | 0) == 2084) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4948) {
   $17496 = HEAP32[915096] | 0;
   if (($17496 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1777 = 3660384;
    $$lcssa8$i$i1776 = $17496;
    label = 2085;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4948) {
   $17501 = HEAP32[915102] | 0;
   if (($17501 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1777 = 3660408;
    $$lcssa8$i$i1776 = $17501;
    label = 2085;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4948) {
   $17506 = HEAP32[915108] | 0;
   if (($17506 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1777 = 3660432;
    $$lcssa8$i$i1776 = $17506;
    label = 2085;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4948) {
   $17511 = HEAP32[915114] | 0;
   if (($17511 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1777 = 3660456;
    $$lcssa8$i$i1776 = $17511;
    label = 2085;
    break;
   }
  }
  $$3$i$i1778 = __Znwj(4948) | 0;
 } while (0);
 if ((label | 0) == 2085) {
  $17494 = $$lcssa8$i$i1776 + -4 | 0;
  HEAP32[$$lcssa$i$i1777 >> 2] = $17494;
  $$3$i$i1778 = HEAP32[$17494 >> 2] | 0;
 }
 $17515 = $$3$i$i1778 + 52 | 0;
 HEAP16[$$3$i$i1778 >> 1] = 68;
 HEAP16[$$3$i$i1778 + 2 >> 1] = 36;
 HEAP8[$$3$i$i1778 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1778 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1778 + 8 >> 2] = 136;
 HEAP32[$$3$i$i1778 + 12 >> 2] = 4896;
 HEAP32[$$3$i$i1778 + 16 >> 2] = $17515;
 HEAP32[$$3$i$i1778 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1778 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1778 + 48 >> 0] = 0;
 HEAP32[$197 >> 2] = $$3$i$i1778;
 _memcpy($17515 | 0, 1683274, 136) | 0;
 _memcpy($$3$i$i1778 + 188 | 0, 1683410, 136) | 0;
 _memcpy($$3$i$i1778 + 324 | 0, 1683546, 136) | 0;
 _memcpy($$3$i$i1778 + 460 | 0, 1683682, 136) | 0;
 _memcpy($$3$i$i1778 + 596 | 0, 1683818, 136) | 0;
 _memcpy($$3$i$i1778 + 732 | 0, 1683954, 136) | 0;
 _memcpy($$3$i$i1778 + 868 | 0, 1684090, 136) | 0;
 _memcpy($$3$i$i1778 + 1004 | 0, 1684226, 136) | 0;
 _memcpy($$3$i$i1778 + 1140 | 0, 1684362, 136) | 0;
 _memcpy($$3$i$i1778 + 1276 | 0, 1684498, 136) | 0;
 _memcpy($$3$i$i1778 + 1412 | 0, 1684634, 136) | 0;
 _memcpy($$3$i$i1778 + 1548 | 0, 1684770, 136) | 0;
 _memcpy($$3$i$i1778 + 1684 | 0, 1684906, 136) | 0;
 _memcpy($$3$i$i1778 + 1820 | 0, 1685042, 136) | 0;
 _memcpy($$3$i$i1778 + 1956 | 0, 1685178, 136) | 0;
 _memcpy($$3$i$i1778 + 2092 | 0, 1685314, 136) | 0;
 _memcpy($$3$i$i1778 + 2228 | 0, 1685450, 136) | 0;
 _memcpy($$3$i$i1778 + 2364 | 0, 1685586, 136) | 0;
 _memcpy($$3$i$i1778 + 2500 | 0, 1685722, 136) | 0;
 _memcpy($$3$i$i1778 + 2636 | 0, 1685858, 136) | 0;
 _memcpy($$3$i$i1778 + 2772 | 0, 1685994, 136) | 0;
 _memcpy($$3$i$i1778 + 2908 | 0, 1686130, 136) | 0;
 _memcpy($$3$i$i1778 + 3044 | 0, 1686266, 136) | 0;
 _memcpy($$3$i$i1778 + 3180 | 0, 1686402, 136) | 0;
 _memcpy($$3$i$i1778 + 3316 | 0, 1686538, 136) | 0;
 _memcpy($$3$i$i1778 + 3452 | 0, 1686674, 136) | 0;
 _memcpy($$3$i$i1778 + 3588 | 0, 1686810, 136) | 0;
 _memcpy($$3$i$i1778 + 3724 | 0, 1686946, 136) | 0;
 _memcpy($$3$i$i1778 + 3860 | 0, 1687082, 136) | 0;
 _memcpy($$3$i$i1778 + 3996 | 0, 1687218, 136) | 0;
 _memcpy($$3$i$i1778 + 4132 | 0, 1687354, 136) | 0;
 _memcpy($$3$i$i1778 + 4268 | 0, 1687490, 136) | 0;
 _memcpy($$3$i$i1778 + 4404 | 0, 1687626, 136) | 0;
 _memcpy($$3$i$i1778 + 4540 | 0, 1687762, 136) | 0;
 _memcpy($$3$i$i1778 + 4676 | 0, 1687898, 136) | 0;
 _memcpy($$3$i$i1778 + 4812 | 0, 1688034, 136) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $197);
 if ($$3$i$i1778 | 0) {
  $17561 = $$3$i$i1778 + 5 | 0;
  $17563 = (HEAP8[$17561 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$17561 >> 0] = $17563;
  if (!($17563 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1778);
  HEAP32[$197 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 85;
 HEAP16[$3848 >> 1] = 728;
 HEAP16[$3849 >> 1] = 933;
 HEAP16[$3850 >> 1] = 745;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30724) label = 2100; else {
  $17567 = HEAP32[915090] | 0;
  if (($17567 | 0) == (HEAP32[915088] | 0)) label = 2100; else {
   $$lcssa$i$i1790 = 3660360;
   $$lcssa8$i$i1789 = $17567;
   label = 2101;
  }
 }
 do if ((label | 0) == 2100) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30724) {
   $17574 = HEAP32[915096] | 0;
   if (($17574 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1790 = 3660384;
    $$lcssa8$i$i1789 = $17574;
    label = 2101;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30724) {
   $17579 = HEAP32[915102] | 0;
   if (($17579 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1790 = 3660408;
    $$lcssa8$i$i1789 = $17579;
    label = 2101;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30724) {
   $17584 = HEAP32[915108] | 0;
   if (($17584 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1790 = 3660432;
    $$lcssa8$i$i1789 = $17584;
    label = 2101;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30724) {
   $17589 = HEAP32[915114] | 0;
   if (($17589 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1790 = 3660456;
    $$lcssa8$i$i1789 = $17589;
    label = 2101;
    break;
   }
  }
  $$3$i$i1791 = __Znwj(30724) | 0;
 } while (0);
 if ((label | 0) == 2101) {
  $17572 = $$lcssa8$i$i1789 + -4 | 0;
  HEAP32[$$lcssa$i$i1790 >> 2] = $17572;
  $$3$i$i1791 = HEAP32[$17572 >> 2] | 0;
 }
 $17593 = $$3$i$i1791 + 52 | 0;
 HEAP16[$$3$i$i1791 >> 1] = 852;
 HEAP16[$$3$i$i1791 + 2 >> 1] = 18;
 HEAP8[$$3$i$i1791 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1791 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1791 + 8 >> 2] = 1704;
 HEAP32[$$3$i$i1791 + 12 >> 2] = 30672;
 HEAP32[$$3$i$i1791 + 16 >> 2] = $17593;
 HEAP32[$$3$i$i1791 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1791 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1791 + 48 >> 0] = 0;
 HEAP32[$198 >> 2] = $$3$i$i1791;
 _memcpy($17593 | 0, 1688170, 1704) | 0;
 _memcpy($$3$i$i1791 + 1756 | 0, 1689874, 1704) | 0;
 _memcpy($$3$i$i1791 + 3460 | 0, 1691578, 1704) | 0;
 _memcpy($$3$i$i1791 + 5164 | 0, 1693282, 1704) | 0;
 _memcpy($$3$i$i1791 + 6868 | 0, 1694986, 1704) | 0;
 _memcpy($$3$i$i1791 + 8572 | 0, 1696690, 1704) | 0;
 _memcpy($$3$i$i1791 + 10276 | 0, 1698394, 1704) | 0;
 _memcpy($$3$i$i1791 + 11980 | 0, 1700098, 1704) | 0;
 _memcpy($$3$i$i1791 + 13684 | 0, 1701802, 1704) | 0;
 _memcpy($$3$i$i1791 + 15388 | 0, 1703506, 1704) | 0;
 _memcpy($$3$i$i1791 + 17092 | 0, 1705210, 1704) | 0;
 _memcpy($$3$i$i1791 + 18796 | 0, 1706914, 1704) | 0;
 _memcpy($$3$i$i1791 + 20500 | 0, 1708618, 1704) | 0;
 _memcpy($$3$i$i1791 + 22204 | 0, 1710322, 1704) | 0;
 _memcpy($$3$i$i1791 + 23908 | 0, 1712026, 1704) | 0;
 _memcpy($$3$i$i1791 + 25612 | 0, 1713730, 1704) | 0;
 _memcpy($$3$i$i1791 + 27316 | 0, 1715434, 1704) | 0;
 _memcpy($$3$i$i1791 + 29020 | 0, 1717138, 1704) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $198);
 if ($$3$i$i1791 | 0) {
  $17621 = $$3$i$i1791 + 5 | 0;
  $17623 = (HEAP8[$17621 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$17621 >> 0] = $17623;
  if (!($17623 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1791);
  HEAP32[$198 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 85;
 HEAP16[$3851 >> 1] = 746;
 HEAP16[$3852 >> 1] = 933;
 HEAP16[$3853 >> 1] = 753;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 13684) label = 2116; else {
  $17627 = HEAP32[915090] | 0;
  if (($17627 | 0) == (HEAP32[915088] | 0)) label = 2116; else {
   $$lcssa$i$i1803 = 3660360;
   $$lcssa8$i$i1802 = $17627;
   label = 2117;
  }
 }
 do if ((label | 0) == 2116) {
  if ((HEAP32[915097] | 0) >>> 0 >= 13684) {
   $17634 = HEAP32[915096] | 0;
   if (($17634 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1803 = 3660384;
    $$lcssa8$i$i1802 = $17634;
    label = 2117;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 13684) {
   $17639 = HEAP32[915102] | 0;
   if (($17639 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1803 = 3660408;
    $$lcssa8$i$i1802 = $17639;
    label = 2117;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 13684) {
   $17644 = HEAP32[915108] | 0;
   if (($17644 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1803 = 3660432;
    $$lcssa8$i$i1802 = $17644;
    label = 2117;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 13684) {
   $17649 = HEAP32[915114] | 0;
   if (($17649 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1803 = 3660456;
    $$lcssa8$i$i1802 = $17649;
    label = 2117;
    break;
   }
  }
  $$3$i$i1804 = __Znwj(13684) | 0;
 } while (0);
 if ((label | 0) == 2117) {
  $17632 = $$lcssa8$i$i1802 + -4 | 0;
  HEAP32[$$lcssa$i$i1803 >> 2] = $17632;
  $$3$i$i1804 = HEAP32[$17632 >> 2] | 0;
 }
 $17653 = $$3$i$i1804 + 52 | 0;
 HEAP16[$$3$i$i1804 >> 1] = 852;
 HEAP16[$$3$i$i1804 + 2 >> 1] = 8;
 HEAP8[$$3$i$i1804 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1804 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1804 + 8 >> 2] = 1704;
 HEAP32[$$3$i$i1804 + 12 >> 2] = 13632;
 HEAP32[$$3$i$i1804 + 16 >> 2] = $17653;
 HEAP32[$$3$i$i1804 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1804 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1804 + 48 >> 0] = 0;
 HEAP32[$199 >> 2] = $$3$i$i1804;
 _memcpy($17653 | 0, 1718842, 1704) | 0;
 _memcpy($$3$i$i1804 + 1756 | 0, 1720546, 1704) | 0;
 _memcpy($$3$i$i1804 + 3460 | 0, 1722250, 1704) | 0;
 _memcpy($$3$i$i1804 + 5164 | 0, 1723954, 1704) | 0;
 _memcpy($$3$i$i1804 + 6868 | 0, 1725658, 1704) | 0;
 _memcpy($$3$i$i1804 + 8572 | 0, 1727362, 1704) | 0;
 _memcpy($$3$i$i1804 + 10276 | 0, 1729066, 1704) | 0;
 _memcpy($$3$i$i1804 + 11980 | 0, 1730770, 1704) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $199);
 if ($$3$i$i1804 | 0) {
  $17671 = $$3$i$i1804 + 5 | 0;
  $17673 = (HEAP8[$17671 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$17671 >> 0] = $17673;
  if (!($17673 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1804);
  HEAP32[$199 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 85;
 HEAP16[$3854 >> 1] = 754;
 HEAP16[$3855 >> 1] = 933;
 HEAP16[$3856 >> 1] = 765;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 20500) label = 2132; else {
  $17677 = HEAP32[915090] | 0;
  if (($17677 | 0) == (HEAP32[915088] | 0)) label = 2132; else {
   $$lcssa$i$i1816 = 3660360;
   $$lcssa8$i$i1815 = $17677;
   label = 2133;
  }
 }
 do if ((label | 0) == 2132) {
  if ((HEAP32[915097] | 0) >>> 0 >= 20500) {
   $17684 = HEAP32[915096] | 0;
   if (($17684 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1816 = 3660384;
    $$lcssa8$i$i1815 = $17684;
    label = 2133;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 20500) {
   $17689 = HEAP32[915102] | 0;
   if (($17689 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1816 = 3660408;
    $$lcssa8$i$i1815 = $17689;
    label = 2133;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 20500) {
   $17694 = HEAP32[915108] | 0;
   if (($17694 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1816 = 3660432;
    $$lcssa8$i$i1815 = $17694;
    label = 2133;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 20500) {
   $17699 = HEAP32[915114] | 0;
   if (($17699 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1816 = 3660456;
    $$lcssa8$i$i1815 = $17699;
    label = 2133;
    break;
   }
  }
  $$3$i$i1817 = __Znwj(20500) | 0;
 } while (0);
 if ((label | 0) == 2133) {
  $17682 = $$lcssa8$i$i1815 + -4 | 0;
  HEAP32[$$lcssa$i$i1816 >> 2] = $17682;
  $$3$i$i1817 = HEAP32[$17682 >> 2] | 0;
 }
 $17703 = $$3$i$i1817 + 52 | 0;
 HEAP16[$$3$i$i1817 >> 1] = 852;
 HEAP16[$$3$i$i1817 + 2 >> 1] = 12;
 HEAP8[$$3$i$i1817 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1817 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1817 + 8 >> 2] = 1704;
 HEAP32[$$3$i$i1817 + 12 >> 2] = 20448;
 HEAP32[$$3$i$i1817 + 16 >> 2] = $17703;
 HEAP32[$$3$i$i1817 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1817 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1817 + 48 >> 0] = 0;
 HEAP32[$200 >> 2] = $$3$i$i1817;
 _memcpy($17703 | 0, 1732474, 1704) | 0;
 _memcpy($$3$i$i1817 + 1756 | 0, 1734178, 1704) | 0;
 _memcpy($$3$i$i1817 + 3460 | 0, 1735882, 1704) | 0;
 _memcpy($$3$i$i1817 + 5164 | 0, 1737586, 1704) | 0;
 _memcpy($$3$i$i1817 + 6868 | 0, 1739290, 1704) | 0;
 _memcpy($$3$i$i1817 + 8572 | 0, 1740994, 1704) | 0;
 _memcpy($$3$i$i1817 + 10276 | 0, 1742698, 1704) | 0;
 _memcpy($$3$i$i1817 + 11980 | 0, 1744402, 1704) | 0;
 _memcpy($$3$i$i1817 + 13684 | 0, 1746106, 1704) | 0;
 _memcpy($$3$i$i1817 + 15388 | 0, 1747810, 1704) | 0;
 _memcpy($$3$i$i1817 + 17092 | 0, 1749514, 1704) | 0;
 _memcpy($$3$i$i1817 + 18796 | 0, 1751218, 1704) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $200);
 if ($$3$i$i1817 | 0) {
  $17725 = $$3$i$i1817 + 5 | 0;
  $17727 = (HEAP8[$17725 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$17725 >> 0] = $17727;
  if (!($17727 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1817);
  HEAP32[$200 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 1003;
 HEAP16[$3857 >> 1] = 729;
 HEAP16[$3858 >> 1] = 1020;
 HEAP16[$3859 >> 1] = 764;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1492) label = 2148; else {
  $17731 = HEAP32[915090] | 0;
  if (($17731 | 0) == (HEAP32[915088] | 0)) label = 2148; else {
   $$lcssa$i$i1829 = 3660360;
   $$lcssa8$i$i1828 = $17731;
   label = 2149;
  }
 }
 do if ((label | 0) == 2148) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1492) {
   $17738 = HEAP32[915096] | 0;
   if (($17738 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1829 = 3660384;
    $$lcssa8$i$i1828 = $17738;
    label = 2149;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1492) {
   $17743 = HEAP32[915102] | 0;
   if (($17743 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1829 = 3660408;
    $$lcssa8$i$i1828 = $17743;
    label = 2149;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1492) {
   $17748 = HEAP32[915108] | 0;
   if (($17748 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1829 = 3660432;
    $$lcssa8$i$i1828 = $17748;
    label = 2149;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1492) {
   $17753 = HEAP32[915114] | 0;
   if (($17753 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1829 = 3660456;
    $$lcssa8$i$i1828 = $17753;
    label = 2149;
    break;
   }
  }
  $$3$i$i1830 = __Znwj(1492) | 0;
 } while (0);
 if ((label | 0) == 2149) {
  $17736 = $$lcssa8$i$i1828 + -4 | 0;
  HEAP32[$$lcssa$i$i1829 >> 2] = $17736;
  $$3$i$i1830 = HEAP32[$17736 >> 2] | 0;
 }
 $17757 = $$3$i$i1830 + 52 | 0;
 HEAP16[$$3$i$i1830 >> 1] = 20;
 HEAP16[$$3$i$i1830 + 2 >> 1] = 36;
 HEAP8[$$3$i$i1830 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1830 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1830 + 8 >> 2] = 40;
 HEAP32[$$3$i$i1830 + 12 >> 2] = 1440;
 HEAP32[$$3$i$i1830 + 16 >> 2] = $17757;
 HEAP32[$$3$i$i1830 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1830 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1830 + 48 >> 0] = 0;
 HEAP32[$201 >> 2] = $$3$i$i1830;
 dest = $17757;
 src = 1752922;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 92 | 0;
 src = 1752962;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 132 | 0;
 src = 1753002;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 172 | 0;
 src = 1753042;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 212 | 0;
 src = 1753082;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 252 | 0;
 src = 1753122;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 292 | 0;
 src = 1753162;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 332 | 0;
 src = 1753202;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 372 | 0;
 src = 1753242;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 412 | 0;
 src = 1753282;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 452 | 0;
 src = 1753322;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 492 | 0;
 src = 1753362;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 532 | 0;
 src = 1753402;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 572 | 0;
 src = 1753442;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 612 | 0;
 src = 1753482;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 652 | 0;
 src = 1753522;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 692 | 0;
 src = 1753562;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 732 | 0;
 src = 1753602;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 772 | 0;
 src = 1753642;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 812 | 0;
 src = 1753682;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 852 | 0;
 src = 1753722;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 892 | 0;
 src = 1753762;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 932 | 0;
 src = 1753802;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 972 | 0;
 src = 1753842;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 1012 | 0;
 src = 1753882;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 1052 | 0;
 src = 1753922;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 1092 | 0;
 src = 1753962;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 1132 | 0;
 src = 1754002;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 1172 | 0;
 src = 1754042;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 1212 | 0;
 src = 1754082;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 1252 | 0;
 src = 1754122;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 1292 | 0;
 src = 1754162;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 1332 | 0;
 src = 1754202;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 1372 | 0;
 src = 1754242;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 1412 | 0;
 src = 1754282;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i1830 + 1452 | 0;
 src = 1754322;
 stop = dest + 40 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $201);
 if ($$3$i$i1830 | 0) {
  $17803 = $$3$i$i1830 + 5 | 0;
  $17805 = (HEAP8[$17803 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$17803 >> 0] = $17805;
  if (!($17805 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1830);
  HEAP32[$201 >> 2] = 0;
 }
 $17807 = $202;
 HEAP32[$17807 >> 2] = 0;
 HEAP32[$17807 + 4 >> 2] = 47449088;
 HEAP32[$3860 >> 2] = 15220;
 HEAP16[$203 >> 1] = 0;
 HEAP16[$3861 >> 1] = 0;
 HEAP16[$3862 >> 1] = 1024;
 HEAP16[$3863 >> 1] = 724;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $202, $203);
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 2;
 HEAP16[$3864 >> 1] = 728;
 HEAP16[$3865 >> 1] = 79;
 HEAP16[$3866 >> 1] = 765;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6132) label = 2164; else {
  $17813 = HEAP32[915090] | 0;
  if (($17813 | 0) == (HEAP32[915088] | 0)) label = 2164; else {
   $$lcssa$i$i1845 = 3660360;
   $$lcssa8$i$i1844 = $17813;
   label = 2165;
  }
 }
 do if ((label | 0) == 2164) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6132) {
   $17820 = HEAP32[915096] | 0;
   if (($17820 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1845 = 3660384;
    $$lcssa8$i$i1844 = $17820;
    label = 2165;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6132) {
   $17825 = HEAP32[915102] | 0;
   if (($17825 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1845 = 3660408;
    $$lcssa8$i$i1844 = $17825;
    label = 2165;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6132) {
   $17830 = HEAP32[915108] | 0;
   if (($17830 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1845 = 3660432;
    $$lcssa8$i$i1844 = $17830;
    label = 2165;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6132) {
   $17835 = HEAP32[915114] | 0;
   if (($17835 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1845 = 3660456;
    $$lcssa8$i$i1844 = $17835;
    label = 2165;
    break;
   }
  }
  $$3$i$i1846 = __Znwj(6132) | 0;
 } while (0);
 if ((label | 0) == 2165) {
  $17818 = $$lcssa8$i$i1844 + -4 | 0;
  HEAP32[$$lcssa$i$i1845 >> 2] = $17818;
  $$3$i$i1846 = HEAP32[$17818 >> 2] | 0;
 }
 $17839 = $$3$i$i1846 + 52 | 0;
 HEAP16[$$3$i$i1846 >> 1] = 80;
 HEAP16[$$3$i$i1846 + 2 >> 1] = 38;
 HEAP8[$$3$i$i1846 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1846 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1846 + 8 >> 2] = 160;
 HEAP32[$$3$i$i1846 + 12 >> 2] = 6080;
 HEAP32[$$3$i$i1846 + 16 >> 2] = $17839;
 HEAP32[$$3$i$i1846 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1846 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1846 + 48 >> 0] = 0;
 HEAP32[$204 >> 2] = $$3$i$i1846;
 _memcpy($17839 | 0, 1754362, 160) | 0;
 _memcpy($$3$i$i1846 + 212 | 0, 1754522, 160) | 0;
 _memcpy($$3$i$i1846 + 372 | 0, 1754682, 160) | 0;
 _memcpy($$3$i$i1846 + 532 | 0, 1754842, 160) | 0;
 _memcpy($$3$i$i1846 + 692 | 0, 1755002, 160) | 0;
 _memcpy($$3$i$i1846 + 852 | 0, 1755162, 160) | 0;
 _memcpy($$3$i$i1846 + 1012 | 0, 1755322, 160) | 0;
 _memcpy($$3$i$i1846 + 1172 | 0, 1755482, 160) | 0;
 _memcpy($$3$i$i1846 + 1332 | 0, 1755642, 160) | 0;
 _memcpy($$3$i$i1846 + 1492 | 0, 1755802, 160) | 0;
 _memcpy($$3$i$i1846 + 1652 | 0, 1755962, 160) | 0;
 _memcpy($$3$i$i1846 + 1812 | 0, 1756122, 160) | 0;
 _memcpy($$3$i$i1846 + 1972 | 0, 1756282, 160) | 0;
 _memcpy($$3$i$i1846 + 2132 | 0, 1756442, 160) | 0;
 _memcpy($$3$i$i1846 + 2292 | 0, 1756602, 160) | 0;
 _memcpy($$3$i$i1846 + 2452 | 0, 1756762, 160) | 0;
 _memcpy($$3$i$i1846 + 2612 | 0, 1756922, 160) | 0;
 _memcpy($$3$i$i1846 + 2772 | 0, 1757082, 160) | 0;
 _memcpy($$3$i$i1846 + 2932 | 0, 1757242, 160) | 0;
 _memcpy($$3$i$i1846 + 3092 | 0, 1757402, 160) | 0;
 _memcpy($$3$i$i1846 + 3252 | 0, 1757562, 160) | 0;
 _memcpy($$3$i$i1846 + 3412 | 0, 1757722, 160) | 0;
 _memcpy($$3$i$i1846 + 3572 | 0, 1757882, 160) | 0;
 _memcpy($$3$i$i1846 + 3732 | 0, 1758042, 160) | 0;
 _memcpy($$3$i$i1846 + 3892 | 0, 1758202, 160) | 0;
 _memcpy($$3$i$i1846 + 4052 | 0, 1758362, 160) | 0;
 _memcpy($$3$i$i1846 + 4212 | 0, 1758522, 160) | 0;
 _memcpy($$3$i$i1846 + 4372 | 0, 1758682, 160) | 0;
 _memcpy($$3$i$i1846 + 4532 | 0, 1758842, 160) | 0;
 _memcpy($$3$i$i1846 + 4692 | 0, 1759002, 160) | 0;
 _memcpy($$3$i$i1846 + 4852 | 0, 1759162, 160) | 0;
 _memcpy($$3$i$i1846 + 5012 | 0, 1759322, 160) | 0;
 _memcpy($$3$i$i1846 + 5172 | 0, 1759482, 160) | 0;
 _memcpy($$3$i$i1846 + 5332 | 0, 1759642, 160) | 0;
 _memcpy($$3$i$i1846 + 5492 | 0, 1759802, 160) | 0;
 _memcpy($$3$i$i1846 + 5652 | 0, 1759962, 160) | 0;
 _memcpy($$3$i$i1846 + 5812 | 0, 1760122, 160) | 0;
 _memcpy($$3$i$i1846 + 5972 | 0, 1760282, 160) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $204);
 if ($$3$i$i1846 | 0) {
  $17887 = $$3$i$i1846 + 5 | 0;
  $17889 = (HEAP8[$17887 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$17887 >> 0] = $17889;
  if (!($17889 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1846);
  HEAP32[$204 >> 2] = 0;
 }
 $17891 = $205;
 HEAP32[$17891 >> 2] = 47711229;
 HEAP32[$17891 + 4 >> 2] = 2490369;
 HEAP32[$3867 >> 2] = 65535;
 HEAP16[$206 >> 1] = 1021;
 HEAP16[$3868 >> 1] = 728;
 HEAP16[$3869 >> 1] = 1;
 HEAP16[$3870 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $205, $206);
 $17895 = $207;
 HEAP32[$17895 >> 2] = 50135958;
 HEAP32[$17895 + 4 >> 2] = 65639;
 HEAP32[$3871 >> 2] = 65535;
 HEAP16[$208 >> 1] = 918;
 HEAP16[$3872 >> 1] = 765;
 HEAP16[$3873 >> 1] = 103;
 HEAP16[$3874 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $207, $208);
 $17899 = $209;
 HEAP32[$17899 >> 2] = 47711126;
 HEAP32[$17899 + 4 >> 2] = 2424833;
 HEAP32[$3875 >> 2] = 33808;
 HEAP16[$210 >> 1] = 918;
 HEAP16[$3876 >> 1] = 728;
 HEAP16[$3877 >> 1] = 1;
 HEAP16[$3878 >> 1] = 37;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $209, $210);
 $17903 = $211;
 HEAP32[$17903 >> 2] = 47711127;
 HEAP32[$17903 + 4 >> 2] = 65638;
 HEAP32[$3879 >> 2] = 33808;
 HEAP16[$212 >> 1] = 919;
 HEAP16[$3880 >> 1] = 728;
 HEAP16[$3881 >> 1] = 102;
 HEAP16[$3882 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $211, $212);
 $17907 = $213;
 HEAP32[$17907 >> 2] = 47776749;
 HEAP32[$17907 + 4 >> 2] = 2359312;
 HEAP32[$3883 >> 2] = 54937;
 HEAP16[$214 >> 1] = 1005;
 HEAP16[$3884 >> 1] = 729;
 HEAP16[$3885 >> 1] = 16;
 HEAP16[$3886 >> 1] = 36;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $213, $214);
 $17911 = $215;
 HEAP32[$17911 >> 2] = 47710210;
 HEAP32[$17911 + 4 >> 2] = 2490451;
 HEAP32[$3887 >> 2] = 54937;
 HEAP16[$216 >> 1] = 80;
 HEAP16[$3888 >> 1] = 728;
 HEAP16[$3889 >> 1] = 5;
 HEAP16[$3890 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $215, $216);
 $17915 = $217;
 HEAP32[$17915 >> 2] = 47710210;
 HEAP32[$17915 + 4 >> 2] = 2490451;
 HEAP32[$3891 >> 2] = 54937;
 HEAP16[$218 >> 1] = 80;
 HEAP16[$3892 >> 1] = 728;
 HEAP16[$3893 >> 1] = 5;
 HEAP16[$3894 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $217, $218);
 $17919 = $219;
 HEAP32[$17919 >> 2] = 47776663;
 HEAP32[$17919 + 4 >> 2] = 2359312;
 HEAP32[$3895 >> 2] = 54937;
 HEAP16[$220 >> 1] = 919;
 HEAP16[$3896 >> 1] = 729;
 HEAP16[$3897 >> 1] = 16;
 HEAP16[$3898 >> 1] = 36;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $219, $220);
 $17923 = $221;
 HEAP32[$17923 >> 2] = 48694173;
 HEAP32[$17923 + 4 >> 2] = 131073;
 HEAP32[$3899 >> 2] = 0;
 HEAP16[$222 >> 1] = 925;
 HEAP16[$3900 >> 1] = 743;
 HEAP16[$3901 >> 1] = 1;
 HEAP16[$3902 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $221, $222);
 $17927 = $223;
 HEAP32[$17927 >> 2] = 48956317;
 HEAP32[$17927 + 4 >> 2] = 131073;
 HEAP32[$3903 >> 2] = 0;
 HEAP16[$224 >> 1] = 925;
 HEAP16[$3904 >> 1] = 747;
 HEAP16[$3905 >> 1] = 1;
 HEAP16[$3906 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $223, $224);
 $17931 = $225;
 HEAP32[$17931 >> 2] = 48628638;
 HEAP32[$17931 + 4 >> 2] = 131073;
 HEAP32[$3907 >> 2] = 0;
 HEAP16[$226 >> 1] = 926;
 HEAP16[$3908 >> 1] = 742;
 HEAP16[$3909 >> 1] = 1;
 HEAP16[$3910 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $225, $226);
 $17935 = $227;
 HEAP32[$17935 >> 2] = 48890782;
 HEAP32[$17935 + 4 >> 2] = 131073;
 HEAP32[$3911 >> 2] = 0;
 HEAP16[$228 >> 1] = 926;
 HEAP16[$3912 >> 1] = 746;
 HEAP16[$3913 >> 1] = 1;
 HEAP16[$3914 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $227, $228);
 $17939 = $229;
 HEAP32[$17939 >> 2] = 48563103;
 HEAP32[$17939 + 4 >> 2] = 131073;
 HEAP32[$3915 >> 2] = 0;
 HEAP16[$230 >> 1] = 927;
 HEAP16[$3916 >> 1] = 741;
 HEAP16[$3917 >> 1] = 1;
 HEAP16[$3918 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $229, $230);
 $17943 = $231;
 HEAP32[$17943 >> 2] = 48825247;
 HEAP32[$17943 + 4 >> 2] = 131073;
 HEAP32[$3919 >> 2] = 0;
 HEAP16[$232 >> 1] = 927;
 HEAP16[$3920 >> 1] = 745;
 HEAP16[$3921 >> 1] = 1;
 HEAP16[$3922 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $231, $232);
 $17947 = $233;
 HEAP32[$17947 >> 2] = 48628640;
 HEAP32[$17947 + 4 >> 2] = 131073;
 HEAP32[$3923 >> 2] = 0;
 HEAP16[$234 >> 1] = 928;
 HEAP16[$3924 >> 1] = 742;
 HEAP16[$3925 >> 1] = 1;
 HEAP16[$3926 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $233, $234);
 $17951 = $235;
 HEAP32[$17951 >> 2] = 48890784;
 HEAP32[$17951 + 4 >> 2] = 131073;
 HEAP32[$3927 >> 2] = 0;
 HEAP16[$236 >> 1] = 928;
 HEAP16[$3928 >> 1] = 746;
 HEAP16[$3929 >> 1] = 1;
 HEAP16[$3930 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $235, $236);
 $17955 = $237;
 HEAP32[$17955 >> 2] = 48694177;
 HEAP32[$17955 + 4 >> 2] = 131073;
 HEAP32[$3931 >> 2] = 0;
 HEAP16[$238 >> 1] = 929;
 HEAP16[$3932 >> 1] = 743;
 HEAP16[$3933 >> 1] = 1;
 HEAP16[$3934 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $237, $238);
 $17959 = $239;
 HEAP32[$17959 >> 2] = 48956321;
 HEAP32[$17959 + 4 >> 2] = 131073;
 HEAP32[$3935 >> 2] = 0;
 HEAP16[$240 >> 1] = 929;
 HEAP16[$3936 >> 1] = 747;
 HEAP16[$3937 >> 1] = 1;
 HEAP16[$3938 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $239, $240);
 $17963 = $241;
 HEAP32[$17963 >> 2] = 47710210;
 HEAP32[$17963 + 4 >> 2] = 2490451;
 HEAP32[$3939 >> 2] = 54937;
 HEAP16[$242 >> 1] = 80;
 HEAP16[$3940 >> 1] = 728;
 HEAP16[$3941 >> 1] = 5;
 HEAP16[$3942 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $241, $242);
 $17967 = $243;
 HEAP32[$17967 >> 2] = 47710210;
 HEAP32[$17967 + 4 >> 2] = 2490451;
 HEAP32[$3943 >> 2] = 54937;
 HEAP16[$244 >> 1] = 80;
 HEAP16[$3944 >> 1] = 728;
 HEAP16[$3945 >> 1] = 5;
 HEAP16[$3946 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $243, $244);
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 2;
 HEAP16[$3947 >> 1] = 728;
 HEAP16[$3948 >> 1] = 79;
 HEAP16[$3949 >> 1] = 765;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6132) label = 2180; else {
  $17973 = HEAP32[915090] | 0;
  if (($17973 | 0) == (HEAP32[915088] | 0)) label = 2180; else {
   $$lcssa$i$i1918 = 3660360;
   $$lcssa8$i$i1917 = $17973;
   label = 2181;
  }
 }
 do if ((label | 0) == 2180) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6132) {
   $17980 = HEAP32[915096] | 0;
   if (($17980 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1918 = 3660384;
    $$lcssa8$i$i1917 = $17980;
    label = 2181;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6132) {
   $17985 = HEAP32[915102] | 0;
   if (($17985 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1918 = 3660408;
    $$lcssa8$i$i1917 = $17985;
    label = 2181;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6132) {
   $17990 = HEAP32[915108] | 0;
   if (($17990 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1918 = 3660432;
    $$lcssa8$i$i1917 = $17990;
    label = 2181;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6132) {
   $17995 = HEAP32[915114] | 0;
   if (($17995 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1918 = 3660456;
    $$lcssa8$i$i1917 = $17995;
    label = 2181;
    break;
   }
  }
  $$3$i$i1919 = __Znwj(6132) | 0;
 } while (0);
 if ((label | 0) == 2181) {
  $17978 = $$lcssa8$i$i1917 + -4 | 0;
  HEAP32[$$lcssa$i$i1918 >> 2] = $17978;
  $$3$i$i1919 = HEAP32[$17978 >> 2] | 0;
 }
 $17999 = $$3$i$i1919 + 52 | 0;
 HEAP16[$$3$i$i1919 >> 1] = 80;
 HEAP16[$$3$i$i1919 + 2 >> 1] = 38;
 HEAP8[$$3$i$i1919 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1919 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1919 + 8 >> 2] = 160;
 HEAP32[$$3$i$i1919 + 12 >> 2] = 6080;
 HEAP32[$$3$i$i1919 + 16 >> 2] = $17999;
 HEAP32[$$3$i$i1919 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1919 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1919 + 48 >> 0] = 0;
 HEAP32[$245 >> 2] = $$3$i$i1919;
 _memcpy($17999 | 0, 1760442, 160) | 0;
 _memcpy($$3$i$i1919 + 212 | 0, 1760602, 160) | 0;
 _memcpy($$3$i$i1919 + 372 | 0, 1760762, 160) | 0;
 _memcpy($$3$i$i1919 + 532 | 0, 1760922, 160) | 0;
 _memcpy($$3$i$i1919 + 692 | 0, 1761082, 160) | 0;
 _memcpy($$3$i$i1919 + 852 | 0, 1761242, 160) | 0;
 _memcpy($$3$i$i1919 + 1012 | 0, 1761402, 160) | 0;
 _memcpy($$3$i$i1919 + 1172 | 0, 1761562, 160) | 0;
 _memcpy($$3$i$i1919 + 1332 | 0, 1761722, 160) | 0;
 _memcpy($$3$i$i1919 + 1492 | 0, 1761882, 160) | 0;
 _memcpy($$3$i$i1919 + 1652 | 0, 1762042, 160) | 0;
 _memcpy($$3$i$i1919 + 1812 | 0, 1762202, 160) | 0;
 _memcpy($$3$i$i1919 + 1972 | 0, 1762362, 160) | 0;
 _memcpy($$3$i$i1919 + 2132 | 0, 1762522, 160) | 0;
 _memcpy($$3$i$i1919 + 2292 | 0, 1762682, 160) | 0;
 _memcpy($$3$i$i1919 + 2452 | 0, 1762842, 160) | 0;
 _memcpy($$3$i$i1919 + 2612 | 0, 1763002, 160) | 0;
 _memcpy($$3$i$i1919 + 2772 | 0, 1763162, 160) | 0;
 _memcpy($$3$i$i1919 + 2932 | 0, 1763322, 160) | 0;
 _memcpy($$3$i$i1919 + 3092 | 0, 1763482, 160) | 0;
 _memcpy($$3$i$i1919 + 3252 | 0, 1763642, 160) | 0;
 _memcpy($$3$i$i1919 + 3412 | 0, 1763802, 160) | 0;
 _memcpy($$3$i$i1919 + 3572 | 0, 1763962, 160) | 0;
 _memcpy($$3$i$i1919 + 3732 | 0, 1764122, 160) | 0;
 _memcpy($$3$i$i1919 + 3892 | 0, 1764282, 160) | 0;
 _memcpy($$3$i$i1919 + 4052 | 0, 1764442, 160) | 0;
 _memcpy($$3$i$i1919 + 4212 | 0, 1764602, 160) | 0;
 _memcpy($$3$i$i1919 + 4372 | 0, 1764762, 160) | 0;
 _memcpy($$3$i$i1919 + 4532 | 0, 1764922, 160) | 0;
 _memcpy($$3$i$i1919 + 4692 | 0, 1765082, 160) | 0;
 _memcpy($$3$i$i1919 + 4852 | 0, 1765242, 160) | 0;
 _memcpy($$3$i$i1919 + 5012 | 0, 1765402, 160) | 0;
 _memcpy($$3$i$i1919 + 5172 | 0, 1765562, 160) | 0;
 _memcpy($$3$i$i1919 + 5332 | 0, 1765722, 160) | 0;
 _memcpy($$3$i$i1919 + 5492 | 0, 1765882, 160) | 0;
 _memcpy($$3$i$i1919 + 5652 | 0, 1766042, 160) | 0;
 _memcpy($$3$i$i1919 + 5812 | 0, 1766202, 160) | 0;
 _memcpy($$3$i$i1919 + 5972 | 0, 1766362, 160) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $245);
 if ($$3$i$i1919 | 0) {
  $18047 = $$3$i$i1919 + 5 | 0;
  $18049 = (HEAP8[$18047 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$18047 >> 0] = $18049;
  if (!($18049 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1919);
  HEAP32[$245 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 85;
 HEAP16[$3950 >> 1] = 728;
 HEAP16[$3951 >> 1] = 917;
 HEAP16[$3952 >> 1] = 746;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31820) label = 2196; else {
  $18053 = HEAP32[915090] | 0;
  if (($18053 | 0) == (HEAP32[915088] | 0)) label = 2196; else {
   $$lcssa$i$i1931 = 3660360;
   $$lcssa8$i$i1930 = $18053;
   label = 2197;
  }
 }
 do if ((label | 0) == 2196) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31820) {
   $18060 = HEAP32[915096] | 0;
   if (($18060 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1931 = 3660384;
    $$lcssa8$i$i1930 = $18060;
    label = 2197;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31820) {
   $18065 = HEAP32[915102] | 0;
   if (($18065 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1931 = 3660408;
    $$lcssa8$i$i1930 = $18065;
    label = 2197;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31820) {
   $18070 = HEAP32[915108] | 0;
   if (($18070 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1931 = 3660432;
    $$lcssa8$i$i1930 = $18070;
    label = 2197;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31820) {
   $18075 = HEAP32[915114] | 0;
   if (($18075 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1931 = 3660456;
    $$lcssa8$i$i1930 = $18075;
    label = 2197;
    break;
   }
  }
  $$3$i$i1932 = __Znwj(31820) | 0;
 } while (0);
 if ((label | 0) == 2197) {
  $18058 = $$lcssa8$i$i1930 + -4 | 0;
  HEAP32[$$lcssa$i$i1931 >> 2] = $18058;
  $$3$i$i1932 = HEAP32[$18058 >> 2] | 0;
 }
 $18079 = $$3$i$i1932 + 52 | 0;
 HEAP16[$$3$i$i1932 >> 1] = 836;
 HEAP16[$$3$i$i1932 + 2 >> 1] = 19;
 HEAP8[$$3$i$i1932 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1932 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1932 + 8 >> 2] = 1672;
 HEAP32[$$3$i$i1932 + 12 >> 2] = 31768;
 HEAP32[$$3$i$i1932 + 16 >> 2] = $18079;
 HEAP32[$$3$i$i1932 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1932 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1932 + 48 >> 0] = 0;
 HEAP32[$246 >> 2] = $$3$i$i1932;
 _memcpy($18079 | 0, 1766522, 1672) | 0;
 _memcpy($$3$i$i1932 + 1724 | 0, 1768194, 1672) | 0;
 _memcpy($$3$i$i1932 + 3396 | 0, 1769866, 1672) | 0;
 _memcpy($$3$i$i1932 + 5068 | 0, 1771538, 1672) | 0;
 _memcpy($$3$i$i1932 + 6740 | 0, 1773210, 1672) | 0;
 _memcpy($$3$i$i1932 + 8412 | 0, 1774882, 1672) | 0;
 _memcpy($$3$i$i1932 + 10084 | 0, 1776554, 1672) | 0;
 _memcpy($$3$i$i1932 + 11756 | 0, 1778226, 1672) | 0;
 _memcpy($$3$i$i1932 + 13428 | 0, 1779898, 1672) | 0;
 _memcpy($$3$i$i1932 + 15100 | 0, 1781570, 1672) | 0;
 _memcpy($$3$i$i1932 + 16772 | 0, 1783242, 1672) | 0;
 _memcpy($$3$i$i1932 + 18444 | 0, 1784914, 1672) | 0;
 _memcpy($$3$i$i1932 + 20116 | 0, 1786586, 1672) | 0;
 _memcpy($$3$i$i1932 + 21788 | 0, 1788258, 1672) | 0;
 _memcpy($$3$i$i1932 + 23460 | 0, 1789930, 1672) | 0;
 _memcpy($$3$i$i1932 + 25132 | 0, 1791602, 1672) | 0;
 _memcpy($$3$i$i1932 + 26804 | 0, 1793274, 1672) | 0;
 _memcpy($$3$i$i1932 + 28476 | 0, 1794946, 1672) | 0;
 _memcpy($$3$i$i1932 + 30148 | 0, 1796618, 1672) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $246);
 if ($$3$i$i1932 | 0) {
  $18108 = $$3$i$i1932 + 5 | 0;
  $18110 = (HEAP8[$18108 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$18108 >> 0] = $18110;
  if (!($18110 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1932);
  HEAP32[$246 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 85;
 HEAP16[$3953 >> 1] = 747;
 HEAP16[$3954 >> 1] = 917;
 HEAP16[$3955 >> 1] = 748;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 3396) label = 2212; else {
  $18114 = HEAP32[915090] | 0;
  if (($18114 | 0) == (HEAP32[915088] | 0)) label = 2212; else {
   $$lcssa$i$i1944 = 3660360;
   $$lcssa8$i$i1943 = $18114;
   label = 2213;
  }
 }
 do if ((label | 0) == 2212) {
  if ((HEAP32[915097] | 0) >>> 0 >= 3396) {
   $18121 = HEAP32[915096] | 0;
   if (($18121 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1944 = 3660384;
    $$lcssa8$i$i1943 = $18121;
    label = 2213;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 3396) {
   $18126 = HEAP32[915102] | 0;
   if (($18126 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1944 = 3660408;
    $$lcssa8$i$i1943 = $18126;
    label = 2213;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 3396) {
   $18131 = HEAP32[915108] | 0;
   if (($18131 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1944 = 3660432;
    $$lcssa8$i$i1943 = $18131;
    label = 2213;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 3396) {
   $18136 = HEAP32[915114] | 0;
   if (($18136 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1944 = 3660456;
    $$lcssa8$i$i1943 = $18136;
    label = 2213;
    break;
   }
  }
  $$3$i$i1945 = __Znwj(3396) | 0;
 } while (0);
 if ((label | 0) == 2213) {
  $18119 = $$lcssa8$i$i1943 + -4 | 0;
  HEAP32[$$lcssa$i$i1944 >> 2] = $18119;
  $$3$i$i1945 = HEAP32[$18119 >> 2] | 0;
 }
 $18140 = $$3$i$i1945 + 52 | 0;
 HEAP16[$$3$i$i1945 >> 1] = 836;
 HEAP16[$$3$i$i1945 + 2 >> 1] = 2;
 HEAP8[$$3$i$i1945 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1945 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1945 + 8 >> 2] = 1672;
 HEAP32[$$3$i$i1945 + 12 >> 2] = 3344;
 HEAP32[$$3$i$i1945 + 16 >> 2] = $18140;
 HEAP32[$$3$i$i1945 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1945 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1945 + 48 >> 0] = 0;
 HEAP32[$247 >> 2] = $$3$i$i1945;
 _memcpy($18140 | 0, 1798290, 1672) | 0;
 _memcpy($$3$i$i1945 + 1724 | 0, 1799962, 1672) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $247);
 if ($$3$i$i1945 | 0) {
  $18152 = $$3$i$i1945 + 5 | 0;
  $18154 = (HEAP8[$18152 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$18152 >> 0] = $18154;
  if (!($18154 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1945);
  HEAP32[$247 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 85;
 HEAP16[$3956 >> 1] = 749;
 HEAP16[$3957 >> 1] = 917;
 HEAP16[$3958 >> 1] = 758;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 16772) label = 2228; else {
  $18158 = HEAP32[915090] | 0;
  if (($18158 | 0) == (HEAP32[915088] | 0)) label = 2228; else {
   $$lcssa$i$i1957 = 3660360;
   $$lcssa8$i$i1956 = $18158;
   label = 2229;
  }
 }
 do if ((label | 0) == 2228) {
  if ((HEAP32[915097] | 0) >>> 0 >= 16772) {
   $18165 = HEAP32[915096] | 0;
   if (($18165 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1957 = 3660384;
    $$lcssa8$i$i1956 = $18165;
    label = 2229;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 16772) {
   $18170 = HEAP32[915102] | 0;
   if (($18170 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1957 = 3660408;
    $$lcssa8$i$i1956 = $18170;
    label = 2229;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 16772) {
   $18175 = HEAP32[915108] | 0;
   if (($18175 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1957 = 3660432;
    $$lcssa8$i$i1956 = $18175;
    label = 2229;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 16772) {
   $18180 = HEAP32[915114] | 0;
   if (($18180 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1957 = 3660456;
    $$lcssa8$i$i1956 = $18180;
    label = 2229;
    break;
   }
  }
  $$3$i$i1958 = __Znwj(16772) | 0;
 } while (0);
 if ((label | 0) == 2229) {
  $18163 = $$lcssa8$i$i1956 + -4 | 0;
  HEAP32[$$lcssa$i$i1957 >> 2] = $18163;
  $$3$i$i1958 = HEAP32[$18163 >> 2] | 0;
 }
 $18184 = $$3$i$i1958 + 52 | 0;
 HEAP16[$$3$i$i1958 >> 1] = 836;
 HEAP16[$$3$i$i1958 + 2 >> 1] = 10;
 HEAP8[$$3$i$i1958 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1958 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1958 + 8 >> 2] = 1672;
 HEAP32[$$3$i$i1958 + 12 >> 2] = 16720;
 HEAP32[$$3$i$i1958 + 16 >> 2] = $18184;
 HEAP32[$$3$i$i1958 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1958 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1958 + 48 >> 0] = 0;
 HEAP32[$248 >> 2] = $$3$i$i1958;
 _memcpy($18184 | 0, 1801634, 1672) | 0;
 _memcpy($$3$i$i1958 + 1724 | 0, 1803306, 1672) | 0;
 _memcpy($$3$i$i1958 + 3396 | 0, 1804978, 1672) | 0;
 _memcpy($$3$i$i1958 + 5068 | 0, 1806650, 1672) | 0;
 _memcpy($$3$i$i1958 + 6740 | 0, 1808322, 1672) | 0;
 _memcpy($$3$i$i1958 + 8412 | 0, 1809994, 1672) | 0;
 _memcpy($$3$i$i1958 + 10084 | 0, 1811666, 1672) | 0;
 _memcpy($$3$i$i1958 + 11756 | 0, 1813338, 1672) | 0;
 _memcpy($$3$i$i1958 + 13428 | 0, 1815010, 1672) | 0;
 _memcpy($$3$i$i1958 + 15100 | 0, 1816682, 1672) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $248);
 if ($$3$i$i1958 | 0) {
  $18204 = $$3$i$i1958 + 5 | 0;
  $18206 = (HEAP8[$18204 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$18204 >> 0] = $18206;
  if (!($18206 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1958);
  HEAP32[$248 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 85;
 HEAP16[$3959 >> 1] = 759;
 HEAP16[$3960 >> 1] = 917;
 HEAP16[$3961 >> 1] = 765;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 11756) label = 2244; else {
  $18210 = HEAP32[915090] | 0;
  if (($18210 | 0) == (HEAP32[915088] | 0)) label = 2244; else {
   $$lcssa$i$i1970 = 3660360;
   $$lcssa8$i$i1969 = $18210;
   label = 2245;
  }
 }
 do if ((label | 0) == 2244) {
  if ((HEAP32[915097] | 0) >>> 0 >= 11756) {
   $18217 = HEAP32[915096] | 0;
   if (($18217 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1970 = 3660384;
    $$lcssa8$i$i1969 = $18217;
    label = 2245;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 11756) {
   $18222 = HEAP32[915102] | 0;
   if (($18222 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1970 = 3660408;
    $$lcssa8$i$i1969 = $18222;
    label = 2245;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 11756) {
   $18227 = HEAP32[915108] | 0;
   if (($18227 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1970 = 3660432;
    $$lcssa8$i$i1969 = $18227;
    label = 2245;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 11756) {
   $18232 = HEAP32[915114] | 0;
   if (($18232 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1970 = 3660456;
    $$lcssa8$i$i1969 = $18232;
    label = 2245;
    break;
   }
  }
  $$3$i$i1971 = __Znwj(11756) | 0;
 } while (0);
 if ((label | 0) == 2245) {
  $18215 = $$lcssa8$i$i1969 + -4 | 0;
  HEAP32[$$lcssa$i$i1970 >> 2] = $18215;
  $$3$i$i1971 = HEAP32[$18215 >> 2] | 0;
 }
 $18236 = $$3$i$i1971 + 52 | 0;
 HEAP16[$$3$i$i1971 >> 1] = 836;
 HEAP16[$$3$i$i1971 + 2 >> 1] = 7;
 HEAP8[$$3$i$i1971 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1971 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1971 + 8 >> 2] = 1672;
 HEAP32[$$3$i$i1971 + 12 >> 2] = 11704;
 HEAP32[$$3$i$i1971 + 16 >> 2] = $18236;
 HEAP32[$$3$i$i1971 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1971 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1971 + 48 >> 0] = 0;
 HEAP32[$249 >> 2] = $$3$i$i1971;
 _memcpy($18236 | 0, 1818354, 1672) | 0;
 _memcpy($$3$i$i1971 + 1724 | 0, 1820026, 1672) | 0;
 _memcpy($$3$i$i1971 + 3396 | 0, 1821698, 1672) | 0;
 _memcpy($$3$i$i1971 + 5068 | 0, 1823370, 1672) | 0;
 _memcpy($$3$i$i1971 + 6740 | 0, 1825042, 1672) | 0;
 _memcpy($$3$i$i1971 + 8412 | 0, 1826714, 1672) | 0;
 _memcpy($$3$i$i1971 + 10084 | 0, 1828386, 1672) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $249);
 if ($$3$i$i1971 | 0) {
  $18253 = $$3$i$i1971 + 5 | 0;
  $18255 = (HEAP8[$18253 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$18253 >> 0] = $18255;
  if (!($18255 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1971);
  HEAP32[$249 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 935;
 HEAP16[$3962 >> 1] = 729;
 HEAP16[$3963 >> 1] = 1020;
 HEAP16[$3964 >> 1] = 764;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6388) label = 2260; else {
  $18259 = HEAP32[915090] | 0;
  if (($18259 | 0) == (HEAP32[915088] | 0)) label = 2260; else {
   $$lcssa$i$i1983 = 3660360;
   $$lcssa8$i$i1982 = $18259;
   label = 2261;
  }
 }
 do if ((label | 0) == 2260) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6388) {
   $18266 = HEAP32[915096] | 0;
   if (($18266 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i1983 = 3660384;
    $$lcssa8$i$i1982 = $18266;
    label = 2261;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6388) {
   $18271 = HEAP32[915102] | 0;
   if (($18271 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i1983 = 3660408;
    $$lcssa8$i$i1982 = $18271;
    label = 2261;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6388) {
   $18276 = HEAP32[915108] | 0;
   if (($18276 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i1983 = 3660432;
    $$lcssa8$i$i1982 = $18276;
    label = 2261;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6388) {
   $18281 = HEAP32[915114] | 0;
   if (($18281 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i1983 = 3660456;
    $$lcssa8$i$i1982 = $18281;
    label = 2261;
    break;
   }
  }
  $$3$i$i1984 = __Znwj(6388) | 0;
 } while (0);
 if ((label | 0) == 2261) {
  $18264 = $$lcssa8$i$i1982 + -4 | 0;
  HEAP32[$$lcssa$i$i1983 >> 2] = $18264;
  $$3$i$i1984 = HEAP32[$18264 >> 2] | 0;
 }
 $18285 = $$3$i$i1984 + 52 | 0;
 HEAP16[$$3$i$i1984 >> 1] = 88;
 HEAP16[$$3$i$i1984 + 2 >> 1] = 36;
 HEAP8[$$3$i$i1984 + 4 >> 0] = 16;
 HEAP8[$$3$i$i1984 + 5 >> 0] = 1;
 HEAP32[$$3$i$i1984 + 8 >> 2] = 176;
 HEAP32[$$3$i$i1984 + 12 >> 2] = 6336;
 HEAP32[$$3$i$i1984 + 16 >> 2] = $18285;
 HEAP32[$$3$i$i1984 + 20 >> 2] = 0;
 HEAP32[$$3$i$i1984 + 24 >> 2] = 0;
 HEAP8[$$3$i$i1984 + 48 >> 0] = 0;
 HEAP32[$250 >> 2] = $$3$i$i1984;
 _memcpy($18285 | 0, 1830058, 176) | 0;
 _memcpy($$3$i$i1984 + 228 | 0, 1830234, 176) | 0;
 _memcpy($$3$i$i1984 + 404 | 0, 1830410, 176) | 0;
 _memcpy($$3$i$i1984 + 580 | 0, 1830586, 176) | 0;
 _memcpy($$3$i$i1984 + 756 | 0, 1830762, 176) | 0;
 _memcpy($$3$i$i1984 + 932 | 0, 1830938, 176) | 0;
 _memcpy($$3$i$i1984 + 1108 | 0, 1831114, 176) | 0;
 _memcpy($$3$i$i1984 + 1284 | 0, 1831290, 176) | 0;
 _memcpy($$3$i$i1984 + 1460 | 0, 1831466, 176) | 0;
 _memcpy($$3$i$i1984 + 1636 | 0, 1831642, 176) | 0;
 _memcpy($$3$i$i1984 + 1812 | 0, 1831818, 176) | 0;
 _memcpy($$3$i$i1984 + 1988 | 0, 1831994, 176) | 0;
 _memcpy($$3$i$i1984 + 2164 | 0, 1832170, 176) | 0;
 _memcpy($$3$i$i1984 + 2340 | 0, 1832346, 176) | 0;
 _memcpy($$3$i$i1984 + 2516 | 0, 1832522, 176) | 0;
 _memcpy($$3$i$i1984 + 2692 | 0, 1832698, 176) | 0;
 _memcpy($$3$i$i1984 + 2868 | 0, 1832874, 176) | 0;
 _memcpy($$3$i$i1984 + 3044 | 0, 1833050, 176) | 0;
 _memcpy($$3$i$i1984 + 3220 | 0, 1833226, 176) | 0;
 _memcpy($$3$i$i1984 + 3396 | 0, 1833402, 176) | 0;
 _memcpy($$3$i$i1984 + 3572 | 0, 1833578, 176) | 0;
 _memcpy($$3$i$i1984 + 3748 | 0, 1833754, 176) | 0;
 _memcpy($$3$i$i1984 + 3924 | 0, 1833930, 176) | 0;
 _memcpy($$3$i$i1984 + 4100 | 0, 1834106, 176) | 0;
 _memcpy($$3$i$i1984 + 4276 | 0, 1834282, 176) | 0;
 _memcpy($$3$i$i1984 + 4452 | 0, 1834458, 176) | 0;
 _memcpy($$3$i$i1984 + 4628 | 0, 1834634, 176) | 0;
 _memcpy($$3$i$i1984 + 4804 | 0, 1834810, 176) | 0;
 _memcpy($$3$i$i1984 + 4980 | 0, 1834986, 176) | 0;
 _memcpy($$3$i$i1984 + 5156 | 0, 1835162, 176) | 0;
 _memcpy($$3$i$i1984 + 5332 | 0, 1835338, 176) | 0;
 _memcpy($$3$i$i1984 + 5508 | 0, 1835514, 176) | 0;
 _memcpy($$3$i$i1984 + 5684 | 0, 1835690, 176) | 0;
 _memcpy($$3$i$i1984 + 5860 | 0, 1835866, 176) | 0;
 _memcpy($$3$i$i1984 + 6036 | 0, 1836042, 176) | 0;
 _memcpy($$3$i$i1984 + 6212 | 0, 1836218, 176) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $250);
 if ($$3$i$i1984 | 0) {
  $18331 = $$3$i$i1984 + 5 | 0;
  $18333 = (HEAP8[$18331 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$18331 >> 0] = $18333;
  if (!($18333 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i1984);
  HEAP32[$250 >> 2] = 0;
 }
 $18335 = $251;
 HEAP32[$18335 >> 2] = 0;
 HEAP32[$18335 + 4 >> 2] = 47449088;
 HEAP32[$3965 >> 2] = 15220;
 HEAP16[$252 >> 1] = 0;
 HEAP16[$3966 >> 1] = 0;
 HEAP16[$3967 >> 1] = 1024;
 HEAP16[$3968 >> 1] = 724;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $251, $252);
 $18339 = $253;
 HEAP32[$18339 >> 2] = 458774;
 HEAP32[$18339 + 4 >> 2] = 3145776;
 HEAP32[$3969 >> 2] = 15220;
 HEAP16[$254 >> 1] = 22;
 HEAP16[$3970 >> 1] = 7;
 HEAP16[$3971 >> 1] = 48;
 HEAP16[$3972 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $253, $254);
 $18343 = $255;
 HEAP32[$18343 >> 2] = 3801111;
 HEAP32[$18343 + 4 >> 2] = 983085;
 HEAP32[$3973 >> 2] = 15220;
 HEAP16[$256 >> 1] = 23;
 HEAP16[$3974 >> 1] = 58;
 HEAP16[$3975 >> 1] = 45;
 HEAP16[$3976 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $255, $256);
 $18347 = $257;
 HEAP32[$18347 >> 2] = 7208982;
 HEAP32[$18347 + 4 >> 2] = 3145776;
 HEAP32[$3977 >> 2] = 15220;
 HEAP16[$258 >> 1] = 22;
 HEAP16[$3978 >> 1] = 110;
 HEAP16[$3979 >> 1] = 48;
 HEAP16[$3980 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $257, $258);
 $18351 = $259;
 HEAP32[$18351 >> 2] = 10551299;
 HEAP32[$18351 + 4 >> 2] = 983126;
 HEAP32[$3981 >> 2] = 15220;
 HEAP16[$260 >> 1] = 3;
 HEAP16[$3982 >> 1] = 161;
 HEAP16[$3983 >> 1] = 86;
 HEAP16[$3984 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $259, $260);
 $18355 = $261;
 HEAP32[$18355 >> 2] = 13959190;
 HEAP32[$18355 + 4 >> 2] = 3145776;
 HEAP32[$3985 >> 2] = 15220;
 HEAP16[$262 >> 1] = 22;
 HEAP16[$3986 >> 1] = 213;
 HEAP16[$3987 >> 1] = 48;
 HEAP16[$3988 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $261, $262);
 $18359 = $263;
 HEAP32[$18359 >> 2] = 17301529;
 HEAP32[$18359 + 4 >> 2] = 983081;
 HEAP32[$3989 >> 2] = 15220;
 HEAP16[$264 >> 1] = 25;
 HEAP16[$3990 >> 1] = 264;
 HEAP16[$3991 >> 1] = 41;
 HEAP16[$3992 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $263, $264);
 $18363 = $265;
 HEAP32[$18363 >> 2] = 20709398;
 HEAP32[$18363 + 4 >> 2] = 3145776;
 HEAP32[$3993 >> 2] = 15220;
 HEAP16[$266 >> 1] = 22;
 HEAP16[$3994 >> 1] = 316;
 HEAP16[$3995 >> 1] = 48;
 HEAP16[$3996 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $265, $266);
 $18367 = $267;
 HEAP32[$18367 >> 2] = 24051713;
 HEAP32[$18367 + 4 >> 2] = 983130;
 HEAP32[$3997 >> 2] = 15220;
 HEAP16[$268 >> 1] = 1;
 HEAP16[$3998 >> 1] = 367;
 HEAP16[$3999 >> 1] = 90;
 HEAP16[$4000 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $267, $268);
 $18371 = $269;
 HEAP32[$18371 >> 2] = 27459606;
 HEAP32[$18371 + 4 >> 2] = 3145776;
 HEAP32[$4001 >> 2] = 15220;
 HEAP16[$270 >> 1] = 22;
 HEAP16[$4002 >> 1] = 419;
 HEAP16[$4003 >> 1] = 48;
 HEAP16[$4004 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $269, $270);
 $18375 = $271;
 HEAP32[$18375 >> 2] = 30801942;
 HEAP32[$18375 + 4 >> 2] = 983088;
 HEAP32[$4005 >> 2] = 15220;
 HEAP16[$272 >> 1] = 22;
 HEAP16[$4006 >> 1] = 470;
 HEAP16[$4007 >> 1] = 48;
 HEAP16[$4008 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $271, $272);
 $18379 = $273;
 HEAP32[$18379 >> 2] = 34209814;
 HEAP32[$18379 + 4 >> 2] = 3145776;
 HEAP32[$4009 >> 2] = 15220;
 HEAP16[$274 >> 1] = 22;
 HEAP16[$4010 >> 1] = 522;
 HEAP16[$4011 >> 1] = 48;
 HEAP16[$4012 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $273, $274);
 $18383 = $275;
 HEAP32[$18383 >> 2] = 37552154;
 HEAP32[$18383 + 4 >> 2] = 983080;
 HEAP32[$4013 >> 2] = 15220;
 HEAP16[$276 >> 1] = 26;
 HEAP16[$4014 >> 1] = 573;
 HEAP16[$4015 >> 1] = 40;
 HEAP16[$4016 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $275, $276);
 $18387 = $277;
 HEAP32[$18387 >> 2] = 40960022;
 HEAP32[$18387 + 4 >> 2] = 3145776;
 HEAP32[$4017 >> 2] = 15220;
 HEAP16[$278 >> 1] = 22;
 HEAP16[$4018 >> 1] = 625;
 HEAP16[$4019 >> 1] = 48;
 HEAP16[$4020 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $277, $278);
 $18391 = $279;
 HEAP32[$18391 >> 2] = 44302346;
 HEAP32[$18391 + 4 >> 2] = 983112;
 HEAP32[$4021 >> 2] = 15220;
 HEAP16[$280 >> 1] = 10;
 HEAP16[$4022 >> 1] = 676;
 HEAP16[$4023 >> 1] = 72;
 HEAP16[$4024 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $279, $280);
 $18395 = $281;
 HEAP32[$18395 >> 2] = 458867;
 HEAP32[$18395 + 4 >> 2] = 3145776;
 HEAP32[$4025 >> 2] = 15220;
 HEAP16[$282 >> 1] = 115;
 HEAP16[$4026 >> 1] = 7;
 HEAP16[$4027 >> 1] = 48;
 HEAP16[$4028 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $281, $282);
 $18399 = $283;
 HEAP32[$18399 >> 2] = 3801182;
 HEAP32[$18399 + 4 >> 2] = 983130;
 HEAP32[$4029 >> 2] = 15220;
 HEAP16[$284 >> 1] = 94;
 HEAP16[$4030 >> 1] = 58;
 HEAP16[$4031 >> 1] = 90;
 HEAP16[$4032 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $283, $284);
 $18403 = $285;
 HEAP32[$18403 >> 2] = 7209075;
 HEAP32[$18403 + 4 >> 2] = 3145776;
 HEAP32[$4033 >> 2] = 15220;
 HEAP16[$286 >> 1] = 115;
 HEAP16[$4034 >> 1] = 110;
 HEAP16[$4035 >> 1] = 48;
 HEAP16[$4036 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $285, $286);
 $18407 = $287;
 HEAP32[$18407 >> 2] = 10551391;
 HEAP32[$18407 + 4 >> 2] = 983128;
 HEAP32[$4037 >> 2] = 15220;
 HEAP16[$288 >> 1] = 95;
 HEAP16[$4038 >> 1] = 161;
 HEAP16[$4039 >> 1] = 88;
 HEAP16[$4040 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $287, $288);
 $18411 = $289;
 HEAP32[$18411 >> 2] = 6422611;
 HEAP32[$18411 + 4 >> 2] = 5767280;
 HEAP32[$4041 >> 2] = 15220;
 HEAP16[$290 >> 1] = 83;
 HEAP16[$4042 >> 1] = 98;
 HEAP16[$4043 >> 1] = 112;
 HEAP16[$4044 >> 1] = 88;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $289, $290);
 $18415 = $291;
 HEAP32[$18415 >> 2] = 10551379;
 HEAP32[$18415 + 4 >> 2] = 983046;
 HEAP32[$4045 >> 2] = 15220;
 HEAP16[$292 >> 1] = 83;
 HEAP16[$4046 >> 1] = 161;
 HEAP16[$4047 >> 1] = 6;
 HEAP16[$4048 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $291, $292);
 $18419 = $293;
 HEAP32[$18419 >> 2] = 7209075;
 HEAP32[$18419 + 4 >> 2] = 3145776;
 HEAP32[$4049 >> 2] = 15220;
 HEAP16[$294 >> 1] = 115;
 HEAP16[$4050 >> 1] = 110;
 HEAP16[$4051 >> 1] = 48;
 HEAP16[$4052 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $293, $294);
 $18423 = $295;
 HEAP32[$18423 >> 2] = 10551391;
 HEAP32[$18423 + 4 >> 2] = 983128;
 HEAP32[$4053 >> 2] = 15220;
 HEAP16[$296 >> 1] = 95;
 HEAP16[$4054 >> 1] = 161;
 HEAP16[$4055 >> 1] = 88;
 HEAP16[$4056 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $295, $296);
 $18427 = $297;
 HEAP32[$18427 >> 2] = 83;
 HEAP32[$18427 + 4 >> 2] = 5439600;
 HEAP32[$4057 >> 2] = 15220;
 HEAP16[$298 >> 1] = 83;
 HEAP16[$4058 >> 1] = 0;
 HEAP16[$4059 >> 1] = 112;
 HEAP16[$4060 >> 1] = 83;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $297, $298);
 $18431 = $299;
 HEAP32[$18431 >> 2] = 458867;
 HEAP32[$18431 + 4 >> 2] = 3145776;
 HEAP32[$4061 >> 2] = 15220;
 HEAP16[$300 >> 1] = 115;
 HEAP16[$4062 >> 1] = 7;
 HEAP16[$4063 >> 1] = 48;
 HEAP16[$4064 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $299, $300);
 $18435 = $301;
 HEAP32[$18435 >> 2] = 3801182;
 HEAP32[$18435 + 4 >> 2] = 983130;
 HEAP32[$4065 >> 2] = 15220;
 HEAP16[$302 >> 1] = 94;
 HEAP16[$4066 >> 1] = 58;
 HEAP16[$4067 >> 1] = 90;
 HEAP16[$4068 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $301, $302);
 $18439 = $303;
 HEAP32[$18439 >> 2] = 40173568;
 HEAP32[$18439 + 4 >> 2] = 5767270;
 HEAP32[$4069 >> 2] = 15220;
 HEAP16[$304 >> 1] = 0;
 HEAP16[$4070 >> 1] = 613;
 HEAP16[$4071 >> 1] = 102;
 HEAP16[$4072 >> 1] = 88;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $303, $304);
 $18443 = $305;
 HEAP32[$18443 >> 2] = 40960022;
 HEAP32[$18443 + 4 >> 2] = 3145776;
 HEAP32[$4073 >> 2] = 15220;
 HEAP16[$306 >> 1] = 22;
 HEAP16[$4074 >> 1] = 625;
 HEAP16[$4075 >> 1] = 48;
 HEAP16[$4076 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $305, $306);
 $18447 = $307;
 HEAP32[$18447 >> 2] = 44302346;
 HEAP32[$18447 + 4 >> 2] = 983112;
 HEAP32[$4077 >> 2] = 15220;
 HEAP16[$308 >> 1] = 10;
 HEAP16[$4078 >> 1] = 676;
 HEAP16[$4079 >> 1] = 72;
 HEAP16[$4080 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $307, $308);
 $18451 = $309;
 HEAP32[$18451 >> 2] = 33423360;
 HEAP32[$18451 + 4 >> 2] = 5767270;
 HEAP32[$4081 >> 2] = 15220;
 HEAP16[$310 >> 1] = 0;
 HEAP16[$4082 >> 1] = 510;
 HEAP16[$4083 >> 1] = 102;
 HEAP16[$4084 >> 1] = 88;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $309, $310);
 $18455 = $311;
 HEAP32[$18455 >> 2] = 34209814;
 HEAP32[$18455 + 4 >> 2] = 3145776;
 HEAP32[$4085 >> 2] = 15220;
 HEAP16[$312 >> 1] = 22;
 HEAP16[$4086 >> 1] = 522;
 HEAP16[$4087 >> 1] = 48;
 HEAP16[$4088 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $311, $312);
 $18459 = $313;
 HEAP32[$18459 >> 2] = 37552154;
 HEAP32[$18459 + 4 >> 2] = 983080;
 HEAP32[$4089 >> 2] = 15220;
 HEAP16[$314 >> 1] = 26;
 HEAP16[$4090 >> 1] = 573;
 HEAP16[$4091 >> 1] = 40;
 HEAP16[$4092 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $313, $314);
 $18463 = $315;
 HEAP32[$18463 >> 2] = 26673152;
 HEAP32[$18463 + 4 >> 2] = 5767270;
 HEAP32[$4093 >> 2] = 15220;
 HEAP16[$316 >> 1] = 0;
 HEAP16[$4094 >> 1] = 407;
 HEAP16[$4095 >> 1] = 102;
 HEAP16[$4096 >> 1] = 88;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $315, $316);
 $18467 = $317;
 HEAP32[$18467 >> 2] = 27459606;
 HEAP32[$18467 + 4 >> 2] = 3145776;
 HEAP32[$4097 >> 2] = 15220;
 HEAP16[$318 >> 1] = 22;
 HEAP16[$4098 >> 1] = 419;
 HEAP16[$4099 >> 1] = 48;
 HEAP16[$4100 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $317, $318);
 $18471 = $319;
 HEAP32[$18471 >> 2] = 30801942;
 HEAP32[$18471 + 4 >> 2] = 983088;
 HEAP32[$4101 >> 2] = 15220;
 HEAP16[$320 >> 1] = 22;
 HEAP16[$4102 >> 1] = 470;
 HEAP16[$4103 >> 1] = 48;
 HEAP16[$4104 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $319, $320);
 $18475 = $321;
 HEAP32[$18475 >> 2] = 19922944;
 HEAP32[$18475 + 4 >> 2] = 5767270;
 HEAP32[$4105 >> 2] = 15220;
 HEAP16[$322 >> 1] = 0;
 HEAP16[$4106 >> 1] = 304;
 HEAP16[$4107 >> 1] = 102;
 HEAP16[$4108 >> 1] = 88;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $321, $322);
 $18479 = $323;
 HEAP32[$18479 >> 2] = 20709398;
 HEAP32[$18479 + 4 >> 2] = 3145776;
 HEAP32[$4109 >> 2] = 15220;
 HEAP16[$324 >> 1] = 22;
 HEAP16[$4110 >> 1] = 316;
 HEAP16[$4111 >> 1] = 48;
 HEAP16[$4112 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $323, $324);
 $18483 = $325;
 HEAP32[$18483 >> 2] = 24051713;
 HEAP32[$18483 + 4 >> 2] = 983130;
 HEAP32[$4113 >> 2] = 15220;
 HEAP16[$326 >> 1] = 1;
 HEAP16[$4114 >> 1] = 367;
 HEAP16[$4115 >> 1] = 90;
 HEAP16[$4116 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $325, $326);
 $18487 = $327;
 HEAP32[$18487 >> 2] = 13172736;
 HEAP32[$18487 + 4 >> 2] = 5767270;
 HEAP32[$4117 >> 2] = 15220;
 HEAP16[$328 >> 1] = 0;
 HEAP16[$4118 >> 1] = 201;
 HEAP16[$4119 >> 1] = 102;
 HEAP16[$4120 >> 1] = 88;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $327, $328);
 $18491 = $329;
 HEAP32[$18491 >> 2] = 13959190;
 HEAP32[$18491 + 4 >> 2] = 3145776;
 HEAP32[$4121 >> 2] = 15220;
 HEAP16[$330 >> 1] = 22;
 HEAP16[$4122 >> 1] = 213;
 HEAP16[$4123 >> 1] = 48;
 HEAP16[$4124 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $329, $330);
 $18495 = $331;
 HEAP32[$18495 >> 2] = 17301529;
 HEAP32[$18495 + 4 >> 2] = 983081;
 HEAP32[$4125 >> 2] = 15220;
 HEAP16[$332 >> 1] = 25;
 HEAP16[$4126 >> 1] = 264;
 HEAP16[$4127 >> 1] = 41;
 HEAP16[$4128 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $331, $332);
 $18499 = $333;
 HEAP32[$18499 >> 2] = 6422528;
 HEAP32[$18499 + 4 >> 2] = 5767270;
 HEAP32[$4129 >> 2] = 15220;
 HEAP16[$334 >> 1] = 0;
 HEAP16[$4130 >> 1] = 98;
 HEAP16[$4131 >> 1] = 102;
 HEAP16[$4132 >> 1] = 88;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $333, $334);
 $18503 = $335;
 HEAP32[$18503 >> 2] = 7208982;
 HEAP32[$18503 + 4 >> 2] = 3145776;
 HEAP32[$4133 >> 2] = 15220;
 HEAP16[$336 >> 1] = 22;
 HEAP16[$4134 >> 1] = 110;
 HEAP16[$4135 >> 1] = 48;
 HEAP16[$4136 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $335, $336);
 $18507 = $337;
 HEAP32[$18507 >> 2] = 10551299;
 HEAP32[$18507 + 4 >> 2] = 983126;
 HEAP32[$4137 >> 2] = 15220;
 HEAP16[$338 >> 1] = 3;
 HEAP16[$4138 >> 1] = 161;
 HEAP16[$4139 >> 1] = 86;
 HEAP16[$4140 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $337, $338);
 $18511 = $339;
 HEAP32[$18511 >> 2] = 10551391;
 HEAP32[$18511 + 4 >> 2] = 983047;
 HEAP32[$4141 >> 2] = 15220;
 HEAP16[$340 >> 1] = 95;
 HEAP16[$4142 >> 1] = 161;
 HEAP16[$4143 >> 1] = 7;
 HEAP16[$4144 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $339, $340);
 $18515 = $341;
 HEAP32[$18515 >> 2] = 0;
 HEAP32[$18515 + 4 >> 2] = 5439590;
 HEAP32[$4145 >> 2] = 15220;
 HEAP16[$342 >> 1] = 0;
 HEAP16[$4146 >> 1] = 0;
 HEAP16[$4147 >> 1] = 102;
 HEAP16[$4148 >> 1] = 83;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $341, $342);
 $18519 = $343;
 HEAP32[$18519 >> 2] = 458774;
 HEAP32[$18519 + 4 >> 2] = 3145776;
 HEAP32[$4149 >> 2] = 15220;
 HEAP16[$344 >> 1] = 22;
 HEAP16[$4150 >> 1] = 7;
 HEAP16[$4151 >> 1] = 48;
 HEAP16[$4152 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $343, $344);
 $18523 = $345;
 HEAP32[$18523 >> 2] = 3801111;
 HEAP32[$18523 + 4 >> 2] = 983085;
 HEAP32[$4153 >> 2] = 15220;
 HEAP16[$346 >> 1] = 23;
 HEAP16[$4154 >> 1] = 58;
 HEAP16[$4155 >> 1] = 45;
 HEAP16[$4156 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $345, $346);
 $18527 = $347;
 HEAP32[$18527 >> 2] = 3801182;
 HEAP32[$18527 + 4 >> 2] = 983048;
 HEAP32[$4157 >> 2] = 15220;
 HEAP16[$348 >> 1] = 94;
 HEAP16[$4158 >> 1] = 58;
 HEAP16[$4159 >> 1] = 8;
 HEAP16[$4160 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $347, $348);
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 96;
 HEAP16[$4161 >> 1] = 58;
 HEAP16[$4162 >> 1] = 101;
 HEAP16[$4163 >> 1] = 70;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 260) label = 2276; else {
  $18533 = HEAP32[915090] | 0;
  if (($18533 | 0) == (HEAP32[915088] | 0)) label = 2276; else {
   $$lcssa$i$i2243 = 3660360;
   $$lcssa8$i$i2242 = $18533;
   label = 2277;
  }
 }
 do if ((label | 0) == 2276) {
  if ((HEAP32[915097] | 0) >>> 0 >= 260) {
   $18540 = HEAP32[915096] | 0;
   if (($18540 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2243 = 3660384;
    $$lcssa8$i$i2242 = $18540;
    label = 2277;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 260) {
   $18545 = HEAP32[915102] | 0;
   if (($18545 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2243 = 3660408;
    $$lcssa8$i$i2242 = $18545;
    label = 2277;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 260) {
   $18550 = HEAP32[915108] | 0;
   if (($18550 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2243 = 3660432;
    $$lcssa8$i$i2242 = $18550;
    label = 2277;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 260) {
   $18555 = HEAP32[915114] | 0;
   if (($18555 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2243 = 3660456;
    $$lcssa8$i$i2242 = $18555;
    label = 2277;
    break;
   }
  }
  $$3$i$i2244 = __Znwj(260) | 0;
 } while (0);
 if ((label | 0) == 2277) {
  $18538 = $$lcssa8$i$i2242 + -4 | 0;
  HEAP32[$$lcssa$i$i2243 >> 2] = $18538;
  $$3$i$i2244 = HEAP32[$18538 >> 2] | 0;
 }
 $18559 = $$3$i$i2244 + 52 | 0;
 HEAP16[$$3$i$i2244 >> 1] = 8;
 HEAP16[$$3$i$i2244 + 2 >> 1] = 13;
 HEAP8[$$3$i$i2244 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2244 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2244 + 8 >> 2] = 16;
 HEAP32[$$3$i$i2244 + 12 >> 2] = 208;
 HEAP32[$$3$i$i2244 + 16 >> 2] = $18559;
 HEAP32[$$3$i$i2244 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2244 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2244 + 48 >> 0] = 0;
 HEAP32[$349 >> 2] = $$3$i$i2244;
 dest = $18559;
 src = 1836394;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2244 + 68 | 0;
 src = 1836410;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2244 + 84 | 0;
 src = 1836426;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2244 + 100 | 0;
 src = 1836442;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2244 + 116 | 0;
 src = 1836458;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2244 + 132 | 0;
 src = 1836474;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2244 + 148 | 0;
 src = 1836490;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2244 + 164 | 0;
 src = 1836506;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2244 + 180 | 0;
 src = 1836522;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2244 + 196 | 0;
 src = 1836538;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2244 + 212 | 0;
 src = 1836554;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2244 + 228 | 0;
 src = 1836570;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2244 + 244 | 0;
 src = 1836586;
 stop = dest + 16 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $349);
 if ($$3$i$i2244 | 0) {
  $18582 = $$3$i$i2244 + 5 | 0;
  $18584 = (HEAP8[$18582 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$18582 >> 0] = $18584;
  if (!($18584 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2244);
  HEAP32[$349 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 99;
 HEAP16[$4164 >> 1] = 161;
 HEAP16[$4165 >> 1] = 101;
 HEAP16[$4166 >> 1] = 173;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 156) label = 2292; else {
  $18588 = HEAP32[915090] | 0;
  if (($18588 | 0) == (HEAP32[915088] | 0)) label = 2292; else {
   $$lcssa$i$i2266 = 3660360;
   $$lcssa8$i$i2265 = $18588;
   label = 2293;
  }
 }
 do if ((label | 0) == 2292) {
  if ((HEAP32[915097] | 0) >>> 0 >= 156) {
   $18595 = HEAP32[915096] | 0;
   if (($18595 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2266 = 3660384;
    $$lcssa8$i$i2265 = $18595;
    label = 2293;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 156) {
   $18600 = HEAP32[915102] | 0;
   if (($18600 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2266 = 3660408;
    $$lcssa8$i$i2265 = $18600;
    label = 2293;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 156) {
   $18605 = HEAP32[915108] | 0;
   if (($18605 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2266 = 3660432;
    $$lcssa8$i$i2265 = $18605;
    label = 2293;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 156) {
   $18610 = HEAP32[915114] | 0;
   if (($18610 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2266 = 3660456;
    $$lcssa8$i$i2265 = $18610;
    label = 2293;
    break;
   }
  }
  $$3$i$i2267 = __Znwj(156) | 0;
 } while (0);
 if ((label | 0) == 2293) {
  $18593 = $$lcssa8$i$i2265 + -4 | 0;
  HEAP32[$$lcssa$i$i2266 >> 2] = $18593;
  $$3$i$i2267 = HEAP32[$18593 >> 2] | 0;
 }
 $18614 = $$3$i$i2267 + 52 | 0;
 HEAP16[$$3$i$i2267 >> 1] = 4;
 HEAP16[$$3$i$i2267 + 2 >> 1] = 13;
 HEAP8[$$3$i$i2267 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2267 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2267 + 8 >> 2] = 8;
 HEAP32[$$3$i$i2267 + 12 >> 2] = 104;
 HEAP32[$$3$i$i2267 + 16 >> 2] = $18614;
 HEAP32[$$3$i$i2267 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2267 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2267 + 48 >> 0] = 0;
 HEAP32[$350 >> 2] = $$3$i$i2267;
 $18624 = $18614;
 $18625 = $18624;
 HEAP8[$18625 >> 0] = 116;
 HEAP8[$18625 + 1 >> 0] = 59;
 HEAP8[$18625 + 2 >> 0] = 116;
 HEAP8[$18625 + 3 >> 0] = 59;
 $18627 = $18624 + 4 | 0;
 HEAP8[$18627 >> 0] = 116;
 HEAP8[$18627 + 1 >> 0] = 59;
 HEAP8[$18627 + 2 >> 0] = 0;
 HEAP8[$18627 + 3 >> 0] = 0;
 $18629 = $$3$i$i2267 + 60 | 0;
 $18630 = $18629;
 HEAP8[$18630 >> 0] = 116;
 HEAP8[$18630 + 1 >> 0] = 59;
 HEAP8[$18630 + 2 >> 0] = 116;
 HEAP8[$18630 + 3 >> 0] = 59;
 $18632 = $18629 + 4 | 0;
 HEAP8[$18632 >> 0] = 116;
 HEAP8[$18632 + 1 >> 0] = 59;
 HEAP8[$18632 + 2 >> 0] = 0;
 HEAP8[$18632 + 3 >> 0] = 0;
 $18634 = $$3$i$i2267 + 68 | 0;
 $18635 = $18634;
 HEAP8[$18635 >> 0] = 116;
 HEAP8[$18635 + 1 >> 0] = 59;
 HEAP8[$18635 + 2 >> 0] = 116;
 HEAP8[$18635 + 3 >> 0] = 59;
 $18637 = $18634 + 4 | 0;
 HEAP8[$18637 >> 0] = 255;
 HEAP8[$18637 + 1 >> 0] = 255;
 HEAP8[$18637 + 2 >> 0] = 0;
 HEAP8[$18637 + 3 >> 0] = 0;
 $18639 = $$3$i$i2267 + 76 | 0;
 $18640 = $18639;
 HEAP8[$18640 >> 0] = 116;
 HEAP8[$18640 + 1 >> 0] = 59;
 HEAP8[$18640 + 2 >> 0] = 116;
 HEAP8[$18640 + 3 >> 0] = 59;
 $18642 = $18639 + 4 | 0;
 HEAP8[$18642 >> 0] = 255;
 HEAP8[$18642 + 1 >> 0] = 255;
 HEAP8[$18642 + 2 >> 0] = 0;
 HEAP8[$18642 + 3 >> 0] = 0;
 $18644 = $$3$i$i2267 + 84 | 0;
 $18645 = $18644;
 HEAP8[$18645 >> 0] = -50316;
 HEAP8[$18645 + 1 >> 0] = -50316 >> 8;
 HEAP8[$18645 + 2 >> 0] = -50316 >> 16;
 HEAP8[$18645 + 3 >> 0] = -50316 >> 24;
 $18647 = $18644 + 4 | 0;
 HEAP8[$18647 >> 0] = 116;
 HEAP8[$18647 + 1 >> 0] = 59;
 HEAP8[$18647 + 2 >> 0] = 0;
 HEAP8[$18647 + 3 >> 0] = 0;
 $18649 = $$3$i$i2267 + 92 | 0;
 $18650 = $18649;
 HEAP8[$18650 >> 0] = -50316;
 HEAP8[$18650 + 1 >> 0] = -50316 >> 8;
 HEAP8[$18650 + 2 >> 0] = -50316 >> 16;
 HEAP8[$18650 + 3 >> 0] = -50316 >> 24;
 $18652 = $18649 + 4 | 0;
 HEAP8[$18652 >> 0] = 116;
 HEAP8[$18652 + 1 >> 0] = 59;
 HEAP8[$18652 + 2 >> 0] = 0;
 HEAP8[$18652 + 3 >> 0] = 0;
 $18654 = $$3$i$i2267 + 100 | 0;
 $18655 = $18654;
 HEAP8[$18655 >> 0] = -50316;
 HEAP8[$18655 + 1 >> 0] = -50316 >> 8;
 HEAP8[$18655 + 2 >> 0] = -50316 >> 16;
 HEAP8[$18655 + 3 >> 0] = -50316 >> 24;
 $18657 = $18654 + 4 | 0;
 HEAP8[$18657 >> 0] = 116;
 HEAP8[$18657 + 1 >> 0] = 59;
 HEAP8[$18657 + 2 >> 0] = 0;
 HEAP8[$18657 + 3 >> 0] = 0;
 $18659 = $$3$i$i2267 + 108 | 0;
 $18660 = $18659;
 HEAP8[$18660 >> 0] = 255;
 HEAP8[$18660 + 1 >> 0] = 255;
 HEAP8[$18660 + 2 >> 0] = 116;
 HEAP8[$18660 + 3 >> 0] = 59;
 $18662 = $18659 + 4 | 0;
 HEAP8[$18662 >> 0] = 116;
 HEAP8[$18662 + 1 >> 0] = 59;
 HEAP8[$18662 + 2 >> 0] = 0;
 HEAP8[$18662 + 3 >> 0] = 0;
 $18664 = $$3$i$i2267 + 116 | 0;
 $18665 = $18664;
 HEAP8[$18665 >> 0] = 255;
 HEAP8[$18665 + 1 >> 0] = 255;
 HEAP8[$18665 + 2 >> 0] = 116;
 HEAP8[$18665 + 3 >> 0] = 59;
 $18667 = $18664 + 4 | 0;
 HEAP8[$18667 >> 0] = 116;
 HEAP8[$18667 + 1 >> 0] = 59;
 HEAP8[$18667 + 2 >> 0] = 0;
 HEAP8[$18667 + 3 >> 0] = 0;
 $18669 = $$3$i$i2267 + 124 | 0;
 $18670 = $18669;
 HEAP8[$18670 >> 0] = 255;
 HEAP8[$18670 + 1 >> 0] = 255;
 HEAP8[$18670 + 2 >> 0] = 116;
 HEAP8[$18670 + 3 >> 0] = 59;
 $18672 = $18669 + 4 | 0;
 HEAP8[$18672 >> 0] = 116;
 HEAP8[$18672 + 1 >> 0] = 59;
 HEAP8[$18672 + 2 >> 0] = 0;
 HEAP8[$18672 + 3 >> 0] = 0;
 $18674 = $$3$i$i2267 + 132 | 0;
 $18675 = $18674;
 HEAP8[$18675 >> 0] = 116;
 HEAP8[$18675 + 1 >> 0] = 59;
 HEAP8[$18675 + 2 >> 0] = 116;
 HEAP8[$18675 + 3 >> 0] = 59;
 $18677 = $18674 + 4 | 0;
 HEAP8[$18677 >> 0] = 116;
 HEAP8[$18677 + 1 >> 0] = 59;
 HEAP8[$18677 + 2 >> 0] = 0;
 HEAP8[$18677 + 3 >> 0] = 0;
 $18679 = $$3$i$i2267 + 140 | 0;
 $18680 = $18679;
 HEAP8[$18680 >> 0] = 116;
 HEAP8[$18680 + 1 >> 0] = 59;
 HEAP8[$18680 + 2 >> 0] = 116;
 HEAP8[$18680 + 3 >> 0] = 59;
 $18682 = $18679 + 4 | 0;
 HEAP8[$18682 >> 0] = 116;
 HEAP8[$18682 + 1 >> 0] = 59;
 HEAP8[$18682 + 2 >> 0] = 0;
 HEAP8[$18682 + 3 >> 0] = 0;
 $18684 = $$3$i$i2267 + 148 | 0;
 $18685 = $18684;
 HEAP8[$18685 >> 0] = 116;
 HEAP8[$18685 + 1 >> 0] = 59;
 HEAP8[$18685 + 2 >> 0] = 116;
 HEAP8[$18685 + 3 >> 0] = 59;
 $18687 = $18684 + 4 | 0;
 HEAP8[$18687 >> 0] = 116;
 HEAP8[$18687 + 1 >> 0] = 59;
 HEAP8[$18687 + 2 >> 0] = 0;
 HEAP8[$18687 + 3 >> 0] = 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $350);
 if ($$3$i$i2267 | 0) {
  $18689 = $$3$i$i2267 + 5 | 0;
  $18691 = (HEAP8[$18689 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$18689 >> 0] = $18691;
  if (!($18691 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2267);
  HEAP32[$350 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 5;
 HEAP16[$4167 >> 1] = 161;
 HEAP16[$4168 >> 1] = 86;
 HEAP16[$4169 >> 1] = 173;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2236) label = 2308; else {
  $18695 = HEAP32[915090] | 0;
  if (($18695 | 0) == (HEAP32[915088] | 0)) label = 2308; else {
   $$lcssa$i$i2278 = 3660360;
   $$lcssa8$i$i2277 = $18695;
   label = 2309;
  }
 }
 do if ((label | 0) == 2308) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2236) {
   $18702 = HEAP32[915096] | 0;
   if (($18702 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2278 = 3660384;
    $$lcssa8$i$i2277 = $18702;
    label = 2309;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2236) {
   $18707 = HEAP32[915102] | 0;
   if (($18707 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2278 = 3660408;
    $$lcssa8$i$i2277 = $18707;
    label = 2309;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2236) {
   $18712 = HEAP32[915108] | 0;
   if (($18712 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2278 = 3660432;
    $$lcssa8$i$i2277 = $18712;
    label = 2309;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2236) {
   $18717 = HEAP32[915114] | 0;
   if (($18717 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2278 = 3660456;
    $$lcssa8$i$i2277 = $18717;
    label = 2309;
    break;
   }
  }
  $$3$i$i2279 = __Znwj(2236) | 0;
 } while (0);
 if ((label | 0) == 2309) {
  $18700 = $$lcssa8$i$i2277 + -4 | 0;
  HEAP32[$$lcssa$i$i2278 >> 2] = $18700;
  $$3$i$i2279 = HEAP32[$18700 >> 2] | 0;
 }
 $18721 = $$3$i$i2279 + 52 | 0;
 HEAP16[$$3$i$i2279 >> 1] = 84;
 HEAP16[$$3$i$i2279 + 2 >> 1] = 13;
 HEAP8[$$3$i$i2279 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2279 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2279 + 8 >> 2] = 168;
 HEAP32[$$3$i$i2279 + 12 >> 2] = 2184;
 HEAP32[$$3$i$i2279 + 16 >> 2] = $18721;
 HEAP32[$$3$i$i2279 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2279 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2279 + 48 >> 0] = 0;
 HEAP32[$351 >> 2] = $$3$i$i2279;
 _memcpy($18721 | 0, 1836602, 168) | 0;
 _memcpy($$3$i$i2279 + 220 | 0, 1836770, 168) | 0;
 _memcpy($$3$i$i2279 + 388 | 0, 1836938, 168) | 0;
 _memcpy($$3$i$i2279 + 556 | 0, 1837106, 168) | 0;
 _memcpy($$3$i$i2279 + 724 | 0, 1837274, 168) | 0;
 _memcpy($$3$i$i2279 + 892 | 0, 1837442, 168) | 0;
 _memcpy($$3$i$i2279 + 1060 | 0, 1837610, 168) | 0;
 _memcpy($$3$i$i2279 + 1228 | 0, 1837778, 168) | 0;
 _memcpy($$3$i$i2279 + 1396 | 0, 1837946, 168) | 0;
 _memcpy($$3$i$i2279 + 1564 | 0, 1838114, 168) | 0;
 _memcpy($$3$i$i2279 + 1732 | 0, 1838282, 168) | 0;
 _memcpy($$3$i$i2279 + 1900 | 0, 1838450, 168) | 0;
 _memcpy($$3$i$i2279 + 2068 | 0, 1838618, 168) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $351);
 if ($$3$i$i2279 | 0) {
  $18744 = $$3$i$i2279 + 5 | 0;
  $18746 = (HEAP8[$18744 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$18744 >> 0] = $18746;
  if (!($18746 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2279);
  HEAP32[$351 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 102;
 HEAP16[$4170 >> 1] = 161;
 HEAP16[$4171 >> 1] = 178;
 HEAP16[$4172 >> 1] = 173;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2132) label = 2324; else {
  $18750 = HEAP32[915090] | 0;
  if (($18750 | 0) == (HEAP32[915088] | 0)) label = 2324; else {
   $$lcssa$i$i2291 = 3660360;
   $$lcssa8$i$i2290 = $18750;
   label = 2325;
  }
 }
 do if ((label | 0) == 2324) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2132) {
   $18757 = HEAP32[915096] | 0;
   if (($18757 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2291 = 3660384;
    $$lcssa8$i$i2290 = $18757;
    label = 2325;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2132) {
   $18762 = HEAP32[915102] | 0;
   if (($18762 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2291 = 3660408;
    $$lcssa8$i$i2290 = $18762;
    label = 2325;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2132) {
   $18767 = HEAP32[915108] | 0;
   if (($18767 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2291 = 3660432;
    $$lcssa8$i$i2290 = $18767;
    label = 2325;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2132) {
   $18772 = HEAP32[915114] | 0;
   if (($18772 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2291 = 3660456;
    $$lcssa8$i$i2290 = $18772;
    label = 2325;
    break;
   }
  }
  $$3$i$i2292 = __Znwj(2132) | 0;
 } while (0);
 if ((label | 0) == 2325) {
  $18755 = $$lcssa8$i$i2290 + -4 | 0;
  HEAP32[$$lcssa$i$i2291 >> 2] = $18755;
  $$3$i$i2292 = HEAP32[$18755 >> 2] | 0;
 }
 $18776 = $$3$i$i2292 + 52 | 0;
 HEAP16[$$3$i$i2292 >> 1] = 80;
 HEAP16[$$3$i$i2292 + 2 >> 1] = 13;
 HEAP8[$$3$i$i2292 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2292 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2292 + 8 >> 2] = 160;
 HEAP32[$$3$i$i2292 + 12 >> 2] = 2080;
 HEAP32[$$3$i$i2292 + 16 >> 2] = $18776;
 HEAP32[$$3$i$i2292 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2292 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2292 + 48 >> 0] = 0;
 HEAP32[$352 >> 2] = $$3$i$i2292;
 _memcpy($18776 | 0, 1838786, 160) | 0;
 _memcpy($$3$i$i2292 + 212 | 0, 1838946, 160) | 0;
 _memcpy($$3$i$i2292 + 372 | 0, 1839106, 160) | 0;
 _memcpy($$3$i$i2292 + 532 | 0, 1839266, 160) | 0;
 _memcpy($$3$i$i2292 + 692 | 0, 1839426, 160) | 0;
 _memcpy($$3$i$i2292 + 852 | 0, 1839586, 160) | 0;
 _memcpy($$3$i$i2292 + 1012 | 0, 1839746, 160) | 0;
 _memcpy($$3$i$i2292 + 1172 | 0, 1839906, 160) | 0;
 _memcpy($$3$i$i2292 + 1332 | 0, 1840066, 160) | 0;
 _memcpy($$3$i$i2292 + 1492 | 0, 1840226, 160) | 0;
 _memcpy($$3$i$i2292 + 1652 | 0, 1840386, 160) | 0;
 _memcpy($$3$i$i2292 + 1812 | 0, 1840546, 160) | 0;
 _memcpy($$3$i$i2292 + 1972 | 0, 1840706, 160) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $352);
 if ($$3$i$i2292 | 0) {
  $18799 = $$3$i$i2292 + 5 | 0;
  $18801 = (HEAP8[$18799 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$18799 >> 0] = $18801;
  if (!($18801 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2292);
  HEAP32[$352 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 115;
 HEAP16[$4173 >> 1] = 110;
 HEAP16[$4174 >> 1] = 162;
 HEAP16[$4175 >> 1] = 157;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4660) label = 2340; else {
  $18805 = HEAP32[915090] | 0;
  if (($18805 | 0) == (HEAP32[915088] | 0)) label = 2340; else {
   $$lcssa$i$i2303 = 3660360;
   $$lcssa8$i$i2302 = $18805;
   label = 2341;
  }
 }
 do if ((label | 0) == 2340) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4660) {
   $18812 = HEAP32[915096] | 0;
   if (($18812 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2303 = 3660384;
    $$lcssa8$i$i2302 = $18812;
    label = 2341;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4660) {
   $18817 = HEAP32[915102] | 0;
   if (($18817 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2303 = 3660408;
    $$lcssa8$i$i2302 = $18817;
    label = 2341;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4660) {
   $18822 = HEAP32[915108] | 0;
   if (($18822 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2303 = 3660432;
    $$lcssa8$i$i2302 = $18822;
    label = 2341;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4660) {
   $18827 = HEAP32[915114] | 0;
   if (($18827 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2303 = 3660456;
    $$lcssa8$i$i2302 = $18827;
    label = 2341;
    break;
   }
  }
  $$3$i$i2304 = __Znwj(4660) | 0;
 } while (0);
 if ((label | 0) == 2341) {
  $18810 = $$lcssa8$i$i2302 + -4 | 0;
  HEAP32[$$lcssa$i$i2303 >> 2] = $18810;
  $$3$i$i2304 = HEAP32[$18810 >> 2] | 0;
 }
 $18831 = $$3$i$i2304 + 52 | 0;
 HEAP16[$$3$i$i2304 >> 1] = 48;
 HEAP16[$$3$i$i2304 + 2 >> 1] = 48;
 HEAP8[$$3$i$i2304 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2304 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2304 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2304 + 12 >> 2] = 4608;
 HEAP32[$$3$i$i2304 + 16 >> 2] = $18831;
 HEAP32[$$3$i$i2304 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2304 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2304 + 48 >> 0] = 0;
 HEAP32[$353 >> 2] = $$3$i$i2304;
 dest = $18831;
 src = 1840866;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 148 | 0;
 src = 1840962;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 244 | 0;
 src = 1841058;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 340 | 0;
 src = 1841154;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 436 | 0;
 src = 1841250;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 532 | 0;
 src = 1841346;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 628 | 0;
 src = 1841442;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 724 | 0;
 src = 1841538;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 820 | 0;
 src = 1841634;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 916 | 0;
 src = 1841730;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 1012 | 0;
 src = 1841826;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 1108 | 0;
 src = 1841922;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 1204 | 0;
 src = 1842018;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 1300 | 0;
 src = 1842114;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 1396 | 0;
 src = 1842210;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 1492 | 0;
 src = 1842306;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 1588 | 0;
 src = 1842402;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 1684 | 0;
 src = 1842498;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 1780 | 0;
 src = 1842594;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 1876 | 0;
 src = 1842690;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 1972 | 0;
 src = 1842786;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 2068 | 0;
 src = 1842882;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 2164 | 0;
 src = 1842978;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 2260 | 0;
 src = 1843074;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 2356 | 0;
 src = 1843170;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 2452 | 0;
 src = 1843266;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 2548 | 0;
 src = 1843362;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 2644 | 0;
 src = 1843458;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 2740 | 0;
 src = 1843554;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 2836 | 0;
 src = 1843650;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 2932 | 0;
 src = 1843746;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 3028 | 0;
 src = 1843842;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 3124 | 0;
 src = 1843938;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 3220 | 0;
 src = 1844034;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 3316 | 0;
 src = 1844130;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 3412 | 0;
 src = 1844226;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 3508 | 0;
 src = 1844322;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 3604 | 0;
 src = 1844418;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 3700 | 0;
 src = 1844514;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 3796 | 0;
 src = 1844610;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 3892 | 0;
 src = 1844706;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 3988 | 0;
 src = 1844802;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 4084 | 0;
 src = 1844898;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 4180 | 0;
 src = 1844994;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 4276 | 0;
 src = 1845090;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 4372 | 0;
 src = 1845186;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 4468 | 0;
 src = 1845282;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2304 + 4564 | 0;
 src = 1845378;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $353);
 if ($$3$i$i2304 | 0) {
  $18889 = $$3$i$i2304 + 5 | 0;
  $18891 = (HEAP8[$18889 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$18889 >> 0] = $18891;
  if (!($18891 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2304);
  HEAP32[$353 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 102;
 HEAP16[$4176 >> 1] = 58;
 HEAP16[$4177 >> 1] = 181;
 HEAP16[$4178 >> 1] = 70;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2132) label = 2356; else {
  $18895 = HEAP32[915090] | 0;
  if (($18895 | 0) == (HEAP32[915088] | 0)) label = 2356; else {
   $$lcssa$i$i2326 = 3660360;
   $$lcssa8$i$i2325 = $18895;
   label = 2357;
  }
 }
 do if ((label | 0) == 2356) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2132) {
   $18902 = HEAP32[915096] | 0;
   if (($18902 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2326 = 3660384;
    $$lcssa8$i$i2325 = $18902;
    label = 2357;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2132) {
   $18907 = HEAP32[915102] | 0;
   if (($18907 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2326 = 3660408;
    $$lcssa8$i$i2325 = $18907;
    label = 2357;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2132) {
   $18912 = HEAP32[915108] | 0;
   if (($18912 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2326 = 3660432;
    $$lcssa8$i$i2325 = $18912;
    label = 2357;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2132) {
   $18917 = HEAP32[915114] | 0;
   if (($18917 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2326 = 3660456;
    $$lcssa8$i$i2325 = $18917;
    label = 2357;
    break;
   }
  }
  $$3$i$i2327 = __Znwj(2132) | 0;
 } while (0);
 if ((label | 0) == 2357) {
  $18900 = $$lcssa8$i$i2325 + -4 | 0;
  HEAP32[$$lcssa$i$i2326 >> 2] = $18900;
  $$3$i$i2327 = HEAP32[$18900 >> 2] | 0;
 }
 $18921 = $$3$i$i2327 + 52 | 0;
 HEAP16[$$3$i$i2327 >> 1] = 80;
 HEAP16[$$3$i$i2327 + 2 >> 1] = 13;
 HEAP8[$$3$i$i2327 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2327 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2327 + 8 >> 2] = 160;
 HEAP32[$$3$i$i2327 + 12 >> 2] = 2080;
 HEAP32[$$3$i$i2327 + 16 >> 2] = $18921;
 HEAP32[$$3$i$i2327 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2327 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2327 + 48 >> 0] = 0;
 HEAP32[$354 >> 2] = $$3$i$i2327;
 _memcpy($18921 | 0, 1845474, 160) | 0;
 _memcpy($$3$i$i2327 + 212 | 0, 1845634, 160) | 0;
 _memcpy($$3$i$i2327 + 372 | 0, 1845794, 160) | 0;
 _memcpy($$3$i$i2327 + 532 | 0, 1845954, 160) | 0;
 _memcpy($$3$i$i2327 + 692 | 0, 1846114, 160) | 0;
 _memcpy($$3$i$i2327 + 852 | 0, 1846274, 160) | 0;
 _memcpy($$3$i$i2327 + 1012 | 0, 1846434, 160) | 0;
 _memcpy($$3$i$i2327 + 1172 | 0, 1846594, 160) | 0;
 _memcpy($$3$i$i2327 + 1332 | 0, 1846754, 160) | 0;
 _memcpy($$3$i$i2327 + 1492 | 0, 1846914, 160) | 0;
 _memcpy($$3$i$i2327 + 1652 | 0, 1847074, 160) | 0;
 _memcpy($$3$i$i2327 + 1812 | 0, 1847234, 160) | 0;
 _memcpy($$3$i$i2327 + 1972 | 0, 1847394, 160) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $354);
 if ($$3$i$i2327 | 0) {
  $18944 = $$3$i$i2327 + 5 | 0;
  $18946 = (HEAP8[$18944 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$18944 >> 0] = $18946;
  if (!($18946 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2327);
  HEAP32[$354 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 115;
 HEAP16[$4179 >> 1] = 7;
 HEAP16[$4180 >> 1] = 162;
 HEAP16[$4181 >> 1] = 54;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4660) label = 2372; else {
  $18950 = HEAP32[915090] | 0;
  if (($18950 | 0) == (HEAP32[915088] | 0)) label = 2372; else {
   $$lcssa$i$i2338 = 3660360;
   $$lcssa8$i$i2337 = $18950;
   label = 2373;
  }
 }
 do if ((label | 0) == 2372) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4660) {
   $18957 = HEAP32[915096] | 0;
   if (($18957 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2338 = 3660384;
    $$lcssa8$i$i2337 = $18957;
    label = 2373;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4660) {
   $18962 = HEAP32[915102] | 0;
   if (($18962 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2338 = 3660408;
    $$lcssa8$i$i2337 = $18962;
    label = 2373;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4660) {
   $18967 = HEAP32[915108] | 0;
   if (($18967 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2338 = 3660432;
    $$lcssa8$i$i2337 = $18967;
    label = 2373;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4660) {
   $18972 = HEAP32[915114] | 0;
   if (($18972 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2338 = 3660456;
    $$lcssa8$i$i2337 = $18972;
    label = 2373;
    break;
   }
  }
  $$3$i$i2339 = __Znwj(4660) | 0;
 } while (0);
 if ((label | 0) == 2373) {
  $18955 = $$lcssa8$i$i2337 + -4 | 0;
  HEAP32[$$lcssa$i$i2338 >> 2] = $18955;
  $$3$i$i2339 = HEAP32[$18955 >> 2] | 0;
 }
 $18976 = $$3$i$i2339 + 52 | 0;
 HEAP16[$$3$i$i2339 >> 1] = 48;
 HEAP16[$$3$i$i2339 + 2 >> 1] = 48;
 HEAP8[$$3$i$i2339 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2339 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2339 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2339 + 12 >> 2] = 4608;
 HEAP32[$$3$i$i2339 + 16 >> 2] = $18976;
 HEAP32[$$3$i$i2339 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2339 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2339 + 48 >> 0] = 0;
 HEAP32[$355 >> 2] = $$3$i$i2339;
 dest = $18976;
 src = 1847554;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 148 | 0;
 src = 1847650;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 244 | 0;
 src = 1847746;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 340 | 0;
 src = 1847842;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 436 | 0;
 src = 1847938;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 532 | 0;
 src = 1848034;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 628 | 0;
 src = 1848130;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 724 | 0;
 src = 1848226;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 820 | 0;
 src = 1848322;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 916 | 0;
 src = 1848418;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 1012 | 0;
 src = 1848514;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 1108 | 0;
 src = 1848610;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 1204 | 0;
 src = 1848706;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 1300 | 0;
 src = 1848802;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 1396 | 0;
 src = 1848898;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 1492 | 0;
 src = 1848994;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 1588 | 0;
 src = 1849090;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 1684 | 0;
 src = 1849186;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 1780 | 0;
 src = 1849282;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 1876 | 0;
 src = 1849378;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 1972 | 0;
 src = 1849474;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 2068 | 0;
 src = 1849570;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 2164 | 0;
 src = 1849666;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 2260 | 0;
 src = 1849762;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 2356 | 0;
 src = 1849858;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 2452 | 0;
 src = 1849954;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 2548 | 0;
 src = 1850050;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 2644 | 0;
 src = 1850146;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 2740 | 0;
 src = 1850242;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 2836 | 0;
 src = 1850338;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 2932 | 0;
 src = 1850434;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 3028 | 0;
 src = 1850530;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 3124 | 0;
 src = 1850626;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 3220 | 0;
 src = 1850722;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 3316 | 0;
 src = 1850818;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 3412 | 0;
 src = 1850914;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 3508 | 0;
 src = 1851010;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 3604 | 0;
 src = 1851106;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 3700 | 0;
 src = 1851202;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 3796 | 0;
 src = 1851298;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 3892 | 0;
 src = 1851394;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 3988 | 0;
 src = 1851490;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 4084 | 0;
 src = 1851586;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 4180 | 0;
 src = 1851682;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 4276 | 0;
 src = 1851778;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 4372 | 0;
 src = 1851874;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 4468 | 0;
 src = 1851970;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2339 + 4564 | 0;
 src = 1852066;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $355);
 if ($$3$i$i2339 | 0) {
  $19034 = $$3$i$i2339 + 5 | 0;
  $19036 = (HEAP8[$19034 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$19034 >> 0] = $19036;
  if (!($19036 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2339);
  HEAP32[$355 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 12;
 HEAP16[$4182 >> 1] = 676;
 HEAP16[$4183 >> 1] = 79;
 HEAP16[$4184 >> 1] = 688;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1820) label = 2388; else {
  $19040 = HEAP32[915090] | 0;
  if (($19040 | 0) == (HEAP32[915088] | 0)) label = 2388; else {
   $$lcssa$i$i2351 = 3660360;
   $$lcssa8$i$i2350 = $19040;
   label = 2389;
  }
 }
 do if ((label | 0) == 2388) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1820) {
   $19047 = HEAP32[915096] | 0;
   if (($19047 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2351 = 3660384;
    $$lcssa8$i$i2350 = $19047;
    label = 2389;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1820) {
   $19052 = HEAP32[915102] | 0;
   if (($19052 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2351 = 3660408;
    $$lcssa8$i$i2350 = $19052;
    label = 2389;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1820) {
   $19057 = HEAP32[915108] | 0;
   if (($19057 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2351 = 3660432;
    $$lcssa8$i$i2350 = $19057;
    label = 2389;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1820) {
   $19062 = HEAP32[915114] | 0;
   if (($19062 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2351 = 3660456;
    $$lcssa8$i$i2350 = $19062;
    label = 2389;
    break;
   }
  }
  $$3$i$i2352 = __Znwj(1820) | 0;
 } while (0);
 if ((label | 0) == 2389) {
  $19045 = $$lcssa8$i$i2350 + -4 | 0;
  HEAP32[$$lcssa$i$i2351 >> 2] = $19045;
  $$3$i$i2352 = HEAP32[$19045 >> 2] | 0;
 }
 $19066 = $$3$i$i2352 + 52 | 0;
 HEAP16[$$3$i$i2352 >> 1] = 68;
 HEAP16[$$3$i$i2352 + 2 >> 1] = 13;
 HEAP8[$$3$i$i2352 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2352 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2352 + 8 >> 2] = 136;
 HEAP32[$$3$i$i2352 + 12 >> 2] = 1768;
 HEAP32[$$3$i$i2352 + 16 >> 2] = $19066;
 HEAP32[$$3$i$i2352 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2352 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2352 + 48 >> 0] = 0;
 HEAP32[$356 >> 2] = $$3$i$i2352;
 _memcpy($19066 | 0, 1852162, 136) | 0;
 _memcpy($$3$i$i2352 + 188 | 0, 1852298, 136) | 0;
 _memcpy($$3$i$i2352 + 324 | 0, 1852434, 136) | 0;
 _memcpy($$3$i$i2352 + 460 | 0, 1852570, 136) | 0;
 _memcpy($$3$i$i2352 + 596 | 0, 1852706, 136) | 0;
 _memcpy($$3$i$i2352 + 732 | 0, 1852842, 136) | 0;
 _memcpy($$3$i$i2352 + 868 | 0, 1852978, 136) | 0;
 _memcpy($$3$i$i2352 + 1004 | 0, 1853114, 136) | 0;
 _memcpy($$3$i$i2352 + 1140 | 0, 1853250, 136) | 0;
 _memcpy($$3$i$i2352 + 1276 | 0, 1853386, 136) | 0;
 _memcpy($$3$i$i2352 + 1412 | 0, 1853522, 136) | 0;
 _memcpy($$3$i$i2352 + 1548 | 0, 1853658, 136) | 0;
 _memcpy($$3$i$i2352 + 1684 | 0, 1853794, 136) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $356);
 if ($$3$i$i2352 | 0) {
  $19089 = $$3$i$i2352 + 5 | 0;
  $19091 = (HEAP8[$19089 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$19089 >> 0] = $19091;
  if (!($19091 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2352);
  HEAP32[$356 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4185 >> 1] = 625;
 HEAP16[$4186 >> 1] = 69;
 HEAP16[$4187 >> 1] = 649;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2452) label = 2404; else {
  $19095 = HEAP32[915090] | 0;
  if (($19095 | 0) == (HEAP32[915088] | 0)) label = 2404; else {
   $$lcssa$i$i2363 = 3660360;
   $$lcssa8$i$i2362 = $19095;
   label = 2405;
  }
 }
 do if ((label | 0) == 2404) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2452) {
   $19102 = HEAP32[915096] | 0;
   if (($19102 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2363 = 3660384;
    $$lcssa8$i$i2362 = $19102;
    label = 2405;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2452) {
   $19107 = HEAP32[915102] | 0;
   if (($19107 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2363 = 3660408;
    $$lcssa8$i$i2362 = $19107;
    label = 2405;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2452) {
   $19112 = HEAP32[915108] | 0;
   if (($19112 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2363 = 3660432;
    $$lcssa8$i$i2362 = $19112;
    label = 2405;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2452) {
   $19117 = HEAP32[915114] | 0;
   if (($19117 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2363 = 3660456;
    $$lcssa8$i$i2362 = $19117;
    label = 2405;
    break;
   }
  }
  $$3$i$i2364 = __Znwj(2452) | 0;
 } while (0);
 if ((label | 0) == 2405) {
  $19100 = $$lcssa8$i$i2362 + -4 | 0;
  HEAP32[$$lcssa$i$i2363 >> 2] = $19100;
  $$3$i$i2364 = HEAP32[$19100 >> 2] | 0;
 }
 $19121 = $$3$i$i2364 + 52 | 0;
 HEAP16[$$3$i$i2364 >> 1] = 48;
 HEAP16[$$3$i$i2364 + 2 >> 1] = 25;
 HEAP8[$$3$i$i2364 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2364 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2364 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2364 + 12 >> 2] = 2400;
 HEAP32[$$3$i$i2364 + 16 >> 2] = $19121;
 HEAP32[$$3$i$i2364 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2364 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2364 + 48 >> 0] = 0;
 HEAP32[$357 >> 2] = $$3$i$i2364;
 dest = $19121;
 src = 1853930;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 148 | 0;
 src = 1854026;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 244 | 0;
 src = 1854122;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 340 | 0;
 src = 1854218;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 436 | 0;
 src = 1854314;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 532 | 0;
 src = 1854410;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 628 | 0;
 src = 1854506;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 724 | 0;
 src = 1854602;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 820 | 0;
 src = 1854698;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 916 | 0;
 src = 1854794;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 1012 | 0;
 src = 1854890;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 1108 | 0;
 src = 1854986;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 1204 | 0;
 src = 1855082;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 1300 | 0;
 src = 1855178;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 1396 | 0;
 src = 1855274;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 1492 | 0;
 src = 1855370;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 1588 | 0;
 src = 1855466;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 1684 | 0;
 src = 1855562;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 1780 | 0;
 src = 1855658;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 1876 | 0;
 src = 1855754;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 1972 | 0;
 src = 1855850;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 2068 | 0;
 src = 1855946;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 2164 | 0;
 src = 1856042;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 2260 | 0;
 src = 1856138;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2364 + 2356 | 0;
 src = 1856234;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $357);
 if ($$3$i$i2364 | 0) {
  $19156 = $$3$i$i2364 + 5 | 0;
  $19158 = (HEAP8[$19156 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$19156 >> 0] = $19158;
  if (!($19158 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2364);
  HEAP32[$357 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4188 >> 1] = 650;
 HEAP16[$4189 >> 1] = 69;
 HEAP16[$4190 >> 1] = 661;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1204) label = 2420; else {
  $19162 = HEAP32[915090] | 0;
  if (($19162 | 0) == (HEAP32[915088] | 0)) label = 2420; else {
   $$lcssa$i$i2386 = 3660360;
   $$lcssa8$i$i2385 = $19162;
   label = 2421;
  }
 }
 do if ((label | 0) == 2420) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1204) {
   $19169 = HEAP32[915096] | 0;
   if (($19169 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2386 = 3660384;
    $$lcssa8$i$i2385 = $19169;
    label = 2421;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1204) {
   $19174 = HEAP32[915102] | 0;
   if (($19174 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2386 = 3660408;
    $$lcssa8$i$i2385 = $19174;
    label = 2421;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1204) {
   $19179 = HEAP32[915108] | 0;
   if (($19179 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2386 = 3660432;
    $$lcssa8$i$i2385 = $19179;
    label = 2421;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1204) {
   $19184 = HEAP32[915114] | 0;
   if (($19184 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2386 = 3660456;
    $$lcssa8$i$i2385 = $19184;
    label = 2421;
    break;
   }
  }
  $$3$i$i2387 = __Znwj(1204) | 0;
 } while (0);
 if ((label | 0) == 2421) {
  $19167 = $$lcssa8$i$i2385 + -4 | 0;
  HEAP32[$$lcssa$i$i2386 >> 2] = $19167;
  $$3$i$i2387 = HEAP32[$19167 >> 2] | 0;
 }
 $19188 = $$3$i$i2387 + 52 | 0;
 HEAP16[$$3$i$i2387 >> 1] = 48;
 HEAP16[$$3$i$i2387 + 2 >> 1] = 12;
 HEAP8[$$3$i$i2387 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2387 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2387 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2387 + 12 >> 2] = 1152;
 HEAP32[$$3$i$i2387 + 16 >> 2] = $19188;
 HEAP32[$$3$i$i2387 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2387 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2387 + 48 >> 0] = 0;
 HEAP32[$358 >> 2] = $$3$i$i2387;
 dest = $19188;
 src = 1856330;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2387 + 148 | 0;
 src = 1856426;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2387 + 244 | 0;
 src = 1856522;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2387 + 340 | 0;
 src = 1856618;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2387 + 436 | 0;
 src = 1856714;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2387 + 532 | 0;
 src = 1856810;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2387 + 628 | 0;
 src = 1856906;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2387 + 724 | 0;
 src = 1857002;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2387 + 820 | 0;
 src = 1857098;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2387 + 916 | 0;
 src = 1857194;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2387 + 1012 | 0;
 src = 1857290;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2387 + 1108 | 0;
 src = 1857386;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $358);
 if ($$3$i$i2387 | 0) {
  $19210 = $$3$i$i2387 + 5 | 0;
  $19212 = (HEAP8[$19210 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$19210 >> 0] = $19212;
  if (!($19212 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2387);
  HEAP32[$358 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4191 >> 1] = 662;
 HEAP16[$4192 >> 1] = 69;
 HEAP16[$4193 >> 1] = 662;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 148) label = 2436; else {
  $19216 = HEAP32[915090] | 0;
  if (($19216 | 0) == (HEAP32[915088] | 0)) label = 2436; else {
   $$lcssa$i$i2398 = 3660360;
   $$lcssa8$i$i2397 = $19216;
   label = 2437;
  }
 }
 do if ((label | 0) == 2436) {
  if ((HEAP32[915097] | 0) >>> 0 >= 148) {
   $19223 = HEAP32[915096] | 0;
   if (($19223 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2398 = 3660384;
    $$lcssa8$i$i2397 = $19223;
    label = 2437;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 148) {
   $19228 = HEAP32[915102] | 0;
   if (($19228 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2398 = 3660408;
    $$lcssa8$i$i2397 = $19228;
    label = 2437;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 148) {
   $19233 = HEAP32[915108] | 0;
   if (($19233 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2398 = 3660432;
    $$lcssa8$i$i2397 = $19233;
    label = 2437;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 148) {
   $19238 = HEAP32[915114] | 0;
   if (($19238 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2398 = 3660456;
    $$lcssa8$i$i2397 = $19238;
    label = 2437;
    break;
   }
  }
  $$3$i$i2399 = __Znwj(148) | 0;
 } while (0);
 if ((label | 0) == 2437) {
  $19221 = $$lcssa8$i$i2397 + -4 | 0;
  HEAP32[$$lcssa$i$i2398 >> 2] = $19221;
  $$3$i$i2399 = HEAP32[$19221 >> 2] | 0;
 }
 $19242 = $$3$i$i2399 + 52 | 0;
 HEAP16[$$3$i$i2399 >> 1] = 48;
 HEAP16[$$3$i$i2399 + 2 >> 1] = 1;
 HEAP8[$$3$i$i2399 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2399 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2399 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2399 + 12 >> 2] = 96;
 HEAP32[$$3$i$i2399 + 16 >> 2] = $19242;
 HEAP32[$$3$i$i2399 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2399 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2399 + 48 >> 0] = 0;
 HEAP32[$359 >> 2] = $$3$i$i2399;
 dest = $19242;
 src = 1857482;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $359);
 if ($$3$i$i2399 | 0) {
  $19253 = $$3$i$i2399 + 5 | 0;
  $19255 = (HEAP8[$19253 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$19253 >> 0] = $19255;
  if (!($19255 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2399);
  HEAP32[$359 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4194 >> 1] = 663;
 HEAP16[$4195 >> 1] = 69;
 HEAP16[$4196 >> 1] = 672;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1012) label = 2452; else {
  $19259 = HEAP32[915090] | 0;
  if (($19259 | 0) == (HEAP32[915088] | 0)) label = 2452; else {
   $$lcssa$i$i2411 = 3660360;
   $$lcssa8$i$i2410 = $19259;
   label = 2453;
  }
 }
 do if ((label | 0) == 2452) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1012) {
   $19266 = HEAP32[915096] | 0;
   if (($19266 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2411 = 3660384;
    $$lcssa8$i$i2410 = $19266;
    label = 2453;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1012) {
   $19271 = HEAP32[915102] | 0;
   if (($19271 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2411 = 3660408;
    $$lcssa8$i$i2410 = $19271;
    label = 2453;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1012) {
   $19276 = HEAP32[915108] | 0;
   if (($19276 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2411 = 3660432;
    $$lcssa8$i$i2410 = $19276;
    label = 2453;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1012) {
   $19281 = HEAP32[915114] | 0;
   if (($19281 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2411 = 3660456;
    $$lcssa8$i$i2410 = $19281;
    label = 2453;
    break;
   }
  }
  $$3$i$i2412 = __Znwj(1012) | 0;
 } while (0);
 if ((label | 0) == 2453) {
  $19264 = $$lcssa8$i$i2410 + -4 | 0;
  HEAP32[$$lcssa$i$i2411 >> 2] = $19264;
  $$3$i$i2412 = HEAP32[$19264 >> 2] | 0;
 }
 $19285 = $$3$i$i2412 + 52 | 0;
 HEAP16[$$3$i$i2412 >> 1] = 48;
 HEAP16[$$3$i$i2412 + 2 >> 1] = 10;
 HEAP8[$$3$i$i2412 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2412 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2412 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2412 + 12 >> 2] = 960;
 HEAP32[$$3$i$i2412 + 16 >> 2] = $19285;
 HEAP32[$$3$i$i2412 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2412 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2412 + 48 >> 0] = 0;
 HEAP32[$360 >> 2] = $$3$i$i2412;
 dest = $19285;
 src = 1857578;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2412 + 148 | 0;
 src = 1857674;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2412 + 244 | 0;
 src = 1857770;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2412 + 340 | 0;
 src = 1857866;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2412 + 436 | 0;
 src = 1857962;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2412 + 532 | 0;
 src = 1858058;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2412 + 628 | 0;
 src = 1858154;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2412 + 724 | 0;
 src = 1858250;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2412 + 820 | 0;
 src = 1858346;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2412 + 916 | 0;
 src = 1858442;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $360);
 if ($$3$i$i2412 | 0) {
  $19305 = $$3$i$i2412 + 5 | 0;
  $19307 = (HEAP8[$19305 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$19305 >> 0] = $19307;
  if (!($19307 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2412);
  HEAP32[$360 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 28;
 HEAP16[$4197 >> 1] = 573;
 HEAP16[$4198 >> 1] = 63;
 HEAP16[$4199 >> 1] = 585;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 988) label = 2468; else {
  $19311 = HEAP32[915090] | 0;
  if (($19311 | 0) == (HEAP32[915088] | 0)) label = 2468; else {
   $$lcssa$i$i2423 = 3660360;
   $$lcssa8$i$i2422 = $19311;
   label = 2469;
  }
 }
 do if ((label | 0) == 2468) {
  if ((HEAP32[915097] | 0) >>> 0 >= 988) {
   $19318 = HEAP32[915096] | 0;
   if (($19318 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2423 = 3660384;
    $$lcssa8$i$i2422 = $19318;
    label = 2469;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 988) {
   $19323 = HEAP32[915102] | 0;
   if (($19323 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2423 = 3660408;
    $$lcssa8$i$i2422 = $19323;
    label = 2469;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 988) {
   $19328 = HEAP32[915108] | 0;
   if (($19328 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2423 = 3660432;
    $$lcssa8$i$i2422 = $19328;
    label = 2469;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 988) {
   $19333 = HEAP32[915114] | 0;
   if (($19333 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2423 = 3660456;
    $$lcssa8$i$i2422 = $19333;
    label = 2469;
    break;
   }
  }
  $$3$i$i2424 = __Znwj(988) | 0;
 } while (0);
 if ((label | 0) == 2469) {
  $19316 = $$lcssa8$i$i2422 + -4 | 0;
  HEAP32[$$lcssa$i$i2423 >> 2] = $19316;
  $$3$i$i2424 = HEAP32[$19316 >> 2] | 0;
 }
 $19337 = $$3$i$i2424 + 52 | 0;
 HEAP16[$$3$i$i2424 >> 1] = 36;
 HEAP16[$$3$i$i2424 + 2 >> 1] = 13;
 HEAP8[$$3$i$i2424 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2424 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2424 + 8 >> 2] = 72;
 HEAP32[$$3$i$i2424 + 12 >> 2] = 936;
 HEAP32[$$3$i$i2424 + 16 >> 2] = $19337;
 HEAP32[$$3$i$i2424 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2424 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2424 + 48 >> 0] = 0;
 HEAP32[$361 >> 2] = $$3$i$i2424;
 dest = $19337;
 src = 1858538;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2424 + 124 | 0;
 src = 1858610;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2424 + 196 | 0;
 src = 1858682;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2424 + 268 | 0;
 src = 1858754;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2424 + 340 | 0;
 src = 1858826;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2424 + 412 | 0;
 src = 1858898;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2424 + 484 | 0;
 src = 1858970;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2424 + 556 | 0;
 src = 1859042;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2424 + 628 | 0;
 src = 1859114;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2424 + 700 | 0;
 src = 1859186;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2424 + 772 | 0;
 src = 1859258;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2424 + 844 | 0;
 src = 1859330;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2424 + 916 | 0;
 src = 1859402;
 stop = dest + 72 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $361);
 if ($$3$i$i2424 | 0) {
  $19360 = $$3$i$i2424 + 5 | 0;
  $19362 = (HEAP8[$19360 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$19360 >> 0] = $19362;
  if (!($19362 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2424);
  HEAP32[$361 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4200 >> 1] = 522;
 HEAP16[$4201 >> 1] = 69;
 HEAP16[$4202 >> 1] = 569;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4660) label = 2484; else {
  $19366 = HEAP32[915090] | 0;
  if (($19366 | 0) == (HEAP32[915088] | 0)) label = 2484; else {
   $$lcssa$i$i2446 = 3660360;
   $$lcssa8$i$i2445 = $19366;
   label = 2485;
  }
 }
 do if ((label | 0) == 2484) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4660) {
   $19373 = HEAP32[915096] | 0;
   if (($19373 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2446 = 3660384;
    $$lcssa8$i$i2445 = $19373;
    label = 2485;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4660) {
   $19378 = HEAP32[915102] | 0;
   if (($19378 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2446 = 3660408;
    $$lcssa8$i$i2445 = $19378;
    label = 2485;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4660) {
   $19383 = HEAP32[915108] | 0;
   if (($19383 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2446 = 3660432;
    $$lcssa8$i$i2445 = $19383;
    label = 2485;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4660) {
   $19388 = HEAP32[915114] | 0;
   if (($19388 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2446 = 3660456;
    $$lcssa8$i$i2445 = $19388;
    label = 2485;
    break;
   }
  }
  $$3$i$i2447 = __Znwj(4660) | 0;
 } while (0);
 if ((label | 0) == 2485) {
  $19371 = $$lcssa8$i$i2445 + -4 | 0;
  HEAP32[$$lcssa$i$i2446 >> 2] = $19371;
  $$3$i$i2447 = HEAP32[$19371 >> 2] | 0;
 }
 $19392 = $$3$i$i2447 + 52 | 0;
 HEAP16[$$3$i$i2447 >> 1] = 48;
 HEAP16[$$3$i$i2447 + 2 >> 1] = 48;
 HEAP8[$$3$i$i2447 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2447 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2447 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2447 + 12 >> 2] = 4608;
 HEAP32[$$3$i$i2447 + 16 >> 2] = $19392;
 HEAP32[$$3$i$i2447 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2447 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2447 + 48 >> 0] = 0;
 HEAP32[$362 >> 2] = $$3$i$i2447;
 dest = $19392;
 src = 1859474;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 148 | 0;
 src = 1859570;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 244 | 0;
 src = 1859666;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 340 | 0;
 src = 1859762;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 436 | 0;
 src = 1859858;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 532 | 0;
 src = 1859954;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 628 | 0;
 src = 1860050;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 724 | 0;
 src = 1860146;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 820 | 0;
 src = 1860242;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 916 | 0;
 src = 1860338;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 1012 | 0;
 src = 1860434;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 1108 | 0;
 src = 1860530;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 1204 | 0;
 src = 1860626;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 1300 | 0;
 src = 1860722;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 1396 | 0;
 src = 1860818;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 1492 | 0;
 src = 1860914;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 1588 | 0;
 src = 1861010;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 1684 | 0;
 src = 1861106;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 1780 | 0;
 src = 1861202;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 1876 | 0;
 src = 1861298;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 1972 | 0;
 src = 1861394;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 2068 | 0;
 src = 1861490;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 2164 | 0;
 src = 1861586;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 2260 | 0;
 src = 1861682;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 2356 | 0;
 src = 1861778;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 2452 | 0;
 src = 1861874;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 2548 | 0;
 src = 1861970;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 2644 | 0;
 src = 1862066;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 2740 | 0;
 src = 1862162;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 2836 | 0;
 src = 1862258;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 2932 | 0;
 src = 1862354;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 3028 | 0;
 src = 1862450;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 3124 | 0;
 src = 1862546;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 3220 | 0;
 src = 1862642;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 3316 | 0;
 src = 1862738;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 3412 | 0;
 src = 1862834;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 3508 | 0;
 src = 1862930;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 3604 | 0;
 src = 1863026;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 3700 | 0;
 src = 1863122;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 3796 | 0;
 src = 1863218;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 3892 | 0;
 src = 1863314;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 3988 | 0;
 src = 1863410;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 4084 | 0;
 src = 1863506;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 4180 | 0;
 src = 1863602;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 4276 | 0;
 src = 1863698;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 4372 | 0;
 src = 1863794;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 4468 | 0;
 src = 1863890;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2447 + 4564 | 0;
 src = 1863986;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $362);
 if ($$3$i$i2447 | 0) {
  $19450 = $$3$i$i2447 + 5 | 0;
  $19452 = (HEAP8[$19450 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$19450 >> 0] = $19452;
  if (!($19452 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2447);
  HEAP32[$362 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 24;
 HEAP16[$4203 >> 1] = 470;
 HEAP16[$4204 >> 1] = 67;
 HEAP16[$4205 >> 1] = 482;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1196) label = 2500; else {
  $19456 = HEAP32[915090] | 0;
  if (($19456 | 0) == (HEAP32[915088] | 0)) label = 2500; else {
   $$lcssa$i$i2458 = 3660360;
   $$lcssa8$i$i2457 = $19456;
   label = 2501;
  }
 }
 do if ((label | 0) == 2500) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1196) {
   $19463 = HEAP32[915096] | 0;
   if (($19463 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2458 = 3660384;
    $$lcssa8$i$i2457 = $19463;
    label = 2501;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1196) {
   $19468 = HEAP32[915102] | 0;
   if (($19468 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2458 = 3660408;
    $$lcssa8$i$i2457 = $19468;
    label = 2501;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1196) {
   $19473 = HEAP32[915108] | 0;
   if (($19473 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2458 = 3660432;
    $$lcssa8$i$i2457 = $19473;
    label = 2501;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1196) {
   $19478 = HEAP32[915114] | 0;
   if (($19478 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2458 = 3660456;
    $$lcssa8$i$i2457 = $19478;
    label = 2501;
    break;
   }
  }
  $$3$i$i2459 = __Znwj(1196) | 0;
 } while (0);
 if ((label | 0) == 2501) {
  $19461 = $$lcssa8$i$i2457 + -4 | 0;
  HEAP32[$$lcssa$i$i2458 >> 2] = $19461;
  $$3$i$i2459 = HEAP32[$19461 >> 2] | 0;
 }
 $19482 = $$3$i$i2459 + 52 | 0;
 HEAP16[$$3$i$i2459 >> 1] = 44;
 HEAP16[$$3$i$i2459 + 2 >> 1] = 13;
 HEAP8[$$3$i$i2459 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2459 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2459 + 8 >> 2] = 88;
 HEAP32[$$3$i$i2459 + 12 >> 2] = 1144;
 HEAP32[$$3$i$i2459 + 16 >> 2] = $19482;
 HEAP32[$$3$i$i2459 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2459 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2459 + 48 >> 0] = 0;
 HEAP32[$363 >> 2] = $$3$i$i2459;
 dest = $19482;
 src = 1864082;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2459 + 140 | 0;
 src = 1864170;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2459 + 228 | 0;
 src = 1864258;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2459 + 316 | 0;
 src = 1864346;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2459 + 404 | 0;
 src = 1864434;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2459 + 492 | 0;
 src = 1864522;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2459 + 580 | 0;
 src = 1864610;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2459 + 668 | 0;
 src = 1864698;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2459 + 756 | 0;
 src = 1864786;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2459 + 844 | 0;
 src = 1864874;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2459 + 932 | 0;
 src = 1864962;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2459 + 1020 | 0;
 src = 1865050;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2459 + 1108 | 0;
 src = 1865138;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $363);
 if ($$3$i$i2459 | 0) {
  $19505 = $$3$i$i2459 + 5 | 0;
  $19507 = (HEAP8[$19505 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$19505 >> 0] = $19507;
  if (!($19507 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2459);
  HEAP32[$363 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4206 >> 1] = 419;
 HEAP16[$4207 >> 1] = 69;
 HEAP16[$4208 >> 1] = 466;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4660) label = 2516; else {
  $19511 = HEAP32[915090] | 0;
  if (($19511 | 0) == (HEAP32[915088] | 0)) label = 2516; else {
   $$lcssa$i$i2471 = 3660360;
   $$lcssa8$i$i2470 = $19511;
   label = 2517;
  }
 }
 do if ((label | 0) == 2516) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4660) {
   $19518 = HEAP32[915096] | 0;
   if (($19518 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2471 = 3660384;
    $$lcssa8$i$i2470 = $19518;
    label = 2517;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4660) {
   $19523 = HEAP32[915102] | 0;
   if (($19523 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2471 = 3660408;
    $$lcssa8$i$i2470 = $19523;
    label = 2517;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4660) {
   $19528 = HEAP32[915108] | 0;
   if (($19528 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2471 = 3660432;
    $$lcssa8$i$i2470 = $19528;
    label = 2517;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4660) {
   $19533 = HEAP32[915114] | 0;
   if (($19533 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2471 = 3660456;
    $$lcssa8$i$i2470 = $19533;
    label = 2517;
    break;
   }
  }
  $$3$i$i2472 = __Znwj(4660) | 0;
 } while (0);
 if ((label | 0) == 2517) {
  $19516 = $$lcssa8$i$i2470 + -4 | 0;
  HEAP32[$$lcssa$i$i2471 >> 2] = $19516;
  $$3$i$i2472 = HEAP32[$19516 >> 2] | 0;
 }
 $19537 = $$3$i$i2472 + 52 | 0;
 HEAP16[$$3$i$i2472 >> 1] = 48;
 HEAP16[$$3$i$i2472 + 2 >> 1] = 48;
 HEAP8[$$3$i$i2472 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2472 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2472 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2472 + 12 >> 2] = 4608;
 HEAP32[$$3$i$i2472 + 16 >> 2] = $19537;
 HEAP32[$$3$i$i2472 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2472 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2472 + 48 >> 0] = 0;
 HEAP32[$364 >> 2] = $$3$i$i2472;
 dest = $19537;
 src = 1865226;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 148 | 0;
 src = 1865322;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 244 | 0;
 src = 1865418;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 340 | 0;
 src = 1865514;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 436 | 0;
 src = 1865610;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 532 | 0;
 src = 1865706;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 628 | 0;
 src = 1865802;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 724 | 0;
 src = 1865898;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 820 | 0;
 src = 1865994;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 916 | 0;
 src = 1866090;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 1012 | 0;
 src = 1866186;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 1108 | 0;
 src = 1866282;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 1204 | 0;
 src = 1866378;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 1300 | 0;
 src = 1866474;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 1396 | 0;
 src = 1866570;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 1492 | 0;
 src = 1866666;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 1588 | 0;
 src = 1866762;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 1684 | 0;
 src = 1866858;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 1780 | 0;
 src = 1866954;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 1876 | 0;
 src = 1867050;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 1972 | 0;
 src = 1867146;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 2068 | 0;
 src = 1867242;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 2164 | 0;
 src = 1867338;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 2260 | 0;
 src = 1867434;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 2356 | 0;
 src = 1867530;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 2452 | 0;
 src = 1867626;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 2548 | 0;
 src = 1867722;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 2644 | 0;
 src = 1867818;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 2740 | 0;
 src = 1867914;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 2836 | 0;
 src = 1868010;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 2932 | 0;
 src = 1868106;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 3028 | 0;
 src = 1868202;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 3124 | 0;
 src = 1868298;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 3220 | 0;
 src = 1868394;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 3316 | 0;
 src = 1868490;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 3412 | 0;
 src = 1868586;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 3508 | 0;
 src = 1868682;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 3604 | 0;
 src = 1868778;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 3700 | 0;
 src = 1868874;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 3796 | 0;
 src = 1868970;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 3892 | 0;
 src = 1869066;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 3988 | 0;
 src = 1869162;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 4084 | 0;
 src = 1869258;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 4180 | 0;
 src = 1869354;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 4276 | 0;
 src = 1869450;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 4372 | 0;
 src = 1869546;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 4468 | 0;
 src = 1869642;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2472 + 4564 | 0;
 src = 1869738;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $364);
 if ($$3$i$i2472 | 0) {
  $19595 = $$3$i$i2472 + 5 | 0;
  $19597 = (HEAP8[$19595 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$19595 >> 0] = $19597;
  if (!($19597 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2472);
  HEAP32[$364 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 3;
 HEAP16[$4209 >> 1] = 367;
 HEAP16[$4210 >> 1] = 88;
 HEAP16[$4211 >> 1] = 379;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2340) label = 2532; else {
  $19601 = HEAP32[915090] | 0;
  if (($19601 | 0) == (HEAP32[915088] | 0)) label = 2532; else {
   $$lcssa$i$i2483 = 3660360;
   $$lcssa8$i$i2482 = $19601;
   label = 2533;
  }
 }
 do if ((label | 0) == 2532) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2340) {
   $19608 = HEAP32[915096] | 0;
   if (($19608 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2483 = 3660384;
    $$lcssa8$i$i2482 = $19608;
    label = 2533;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2340) {
   $19613 = HEAP32[915102] | 0;
   if (($19613 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2483 = 3660408;
    $$lcssa8$i$i2482 = $19613;
    label = 2533;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2340) {
   $19618 = HEAP32[915108] | 0;
   if (($19618 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2483 = 3660432;
    $$lcssa8$i$i2482 = $19618;
    label = 2533;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2340) {
   $19623 = HEAP32[915114] | 0;
   if (($19623 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2483 = 3660456;
    $$lcssa8$i$i2482 = $19623;
    label = 2533;
    break;
   }
  }
  $$3$i$i2484 = __Znwj(2340) | 0;
 } while (0);
 if ((label | 0) == 2533) {
  $19606 = $$lcssa8$i$i2482 + -4 | 0;
  HEAP32[$$lcssa$i$i2483 >> 2] = $19606;
  $$3$i$i2484 = HEAP32[$19606 >> 2] | 0;
 }
 $19627 = $$3$i$i2484 + 52 | 0;
 HEAP16[$$3$i$i2484 >> 1] = 88;
 HEAP16[$$3$i$i2484 + 2 >> 1] = 13;
 HEAP8[$$3$i$i2484 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2484 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2484 + 8 >> 2] = 176;
 HEAP32[$$3$i$i2484 + 12 >> 2] = 2288;
 HEAP32[$$3$i$i2484 + 16 >> 2] = $19627;
 HEAP32[$$3$i$i2484 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2484 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2484 + 48 >> 0] = 0;
 HEAP32[$365 >> 2] = $$3$i$i2484;
 _memcpy($19627 | 0, 1869834, 176) | 0;
 _memcpy($$3$i$i2484 + 228 | 0, 1870010, 176) | 0;
 _memcpy($$3$i$i2484 + 404 | 0, 1870186, 176) | 0;
 _memcpy($$3$i$i2484 + 580 | 0, 1870362, 176) | 0;
 _memcpy($$3$i$i2484 + 756 | 0, 1870538, 176) | 0;
 _memcpy($$3$i$i2484 + 932 | 0, 1870714, 176) | 0;
 _memcpy($$3$i$i2484 + 1108 | 0, 1870890, 176) | 0;
 _memcpy($$3$i$i2484 + 1284 | 0, 1871066, 176) | 0;
 _memcpy($$3$i$i2484 + 1460 | 0, 1871242, 176) | 0;
 _memcpy($$3$i$i2484 + 1636 | 0, 1871418, 176) | 0;
 _memcpy($$3$i$i2484 + 1812 | 0, 1871594, 176) | 0;
 _memcpy($$3$i$i2484 + 1988 | 0, 1871770, 176) | 0;
 _memcpy($$3$i$i2484 + 2164 | 0, 1871946, 176) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $365);
 if ($$3$i$i2484 | 0) {
  $19650 = $$3$i$i2484 + 5 | 0;
  $19652 = (HEAP8[$19650 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$19650 >> 0] = $19652;
  if (!($19652 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2484);
  HEAP32[$365 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4212 >> 1] = 316;
 HEAP16[$4213 >> 1] = 69;
 HEAP16[$4214 >> 1] = 327;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1204) label = 2548; else {
  $19656 = HEAP32[915090] | 0;
  if (($19656 | 0) == (HEAP32[915088] | 0)) label = 2548; else {
   $$lcssa$i$i2506 = 3660360;
   $$lcssa8$i$i2505 = $19656;
   label = 2549;
  }
 }
 do if ((label | 0) == 2548) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1204) {
   $19663 = HEAP32[915096] | 0;
   if (($19663 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2506 = 3660384;
    $$lcssa8$i$i2505 = $19663;
    label = 2549;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1204) {
   $19668 = HEAP32[915102] | 0;
   if (($19668 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2506 = 3660408;
    $$lcssa8$i$i2505 = $19668;
    label = 2549;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1204) {
   $19673 = HEAP32[915108] | 0;
   if (($19673 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2506 = 3660432;
    $$lcssa8$i$i2505 = $19673;
    label = 2549;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1204) {
   $19678 = HEAP32[915114] | 0;
   if (($19678 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2506 = 3660456;
    $$lcssa8$i$i2505 = $19678;
    label = 2549;
    break;
   }
  }
  $$3$i$i2507 = __Znwj(1204) | 0;
 } while (0);
 if ((label | 0) == 2549) {
  $19661 = $$lcssa8$i$i2505 + -4 | 0;
  HEAP32[$$lcssa$i$i2506 >> 2] = $19661;
  $$3$i$i2507 = HEAP32[$19661 >> 2] | 0;
 }
 $19682 = $$3$i$i2507 + 52 | 0;
 HEAP16[$$3$i$i2507 >> 1] = 48;
 HEAP16[$$3$i$i2507 + 2 >> 1] = 12;
 HEAP8[$$3$i$i2507 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2507 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2507 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2507 + 12 >> 2] = 1152;
 HEAP32[$$3$i$i2507 + 16 >> 2] = $19682;
 HEAP32[$$3$i$i2507 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2507 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2507 + 48 >> 0] = 0;
 HEAP32[$366 >> 2] = $$3$i$i2507;
 dest = $19682;
 src = 1872122;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2507 + 148 | 0;
 src = 1872218;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2507 + 244 | 0;
 src = 1872314;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2507 + 340 | 0;
 src = 1872410;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2507 + 436 | 0;
 src = 1872506;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2507 + 532 | 0;
 src = 1872602;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2507 + 628 | 0;
 src = 1872698;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2507 + 724 | 0;
 src = 1872794;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2507 + 820 | 0;
 src = 1872890;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2507 + 916 | 0;
 src = 1872986;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2507 + 1012 | 0;
 src = 1873082;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2507 + 1108 | 0;
 src = 1873178;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $366);
 if ($$3$i$i2507 | 0) {
  $19704 = $$3$i$i2507 + 5 | 0;
  $19706 = (HEAP8[$19704 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$19704 >> 0] = $19706;
  if (!($19706 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2507);
  HEAP32[$366 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4215 >> 1] = 328;
 HEAP16[$4216 >> 1] = 69;
 HEAP16[$4217 >> 1] = 333;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 628) label = 2564; else {
  $19710 = HEAP32[915090] | 0;
  if (($19710 | 0) == (HEAP32[915088] | 0)) label = 2564; else {
   $$lcssa$i$i2518 = 3660360;
   $$lcssa8$i$i2517 = $19710;
   label = 2565;
  }
 }
 do if ((label | 0) == 2564) {
  if ((HEAP32[915097] | 0) >>> 0 >= 628) {
   $19717 = HEAP32[915096] | 0;
   if (($19717 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2518 = 3660384;
    $$lcssa8$i$i2517 = $19717;
    label = 2565;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 628) {
   $19722 = HEAP32[915102] | 0;
   if (($19722 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2518 = 3660408;
    $$lcssa8$i$i2517 = $19722;
    label = 2565;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 628) {
   $19727 = HEAP32[915108] | 0;
   if (($19727 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2518 = 3660432;
    $$lcssa8$i$i2517 = $19727;
    label = 2565;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 628) {
   $19732 = HEAP32[915114] | 0;
   if (($19732 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2518 = 3660456;
    $$lcssa8$i$i2517 = $19732;
    label = 2565;
    break;
   }
  }
  $$3$i$i2519 = __Znwj(628) | 0;
 } while (0);
 if ((label | 0) == 2565) {
  $19715 = $$lcssa8$i$i2517 + -4 | 0;
  HEAP32[$$lcssa$i$i2518 >> 2] = $19715;
  $$3$i$i2519 = HEAP32[$19715 >> 2] | 0;
 }
 $19736 = $$3$i$i2519 + 52 | 0;
 HEAP16[$$3$i$i2519 >> 1] = 48;
 HEAP16[$$3$i$i2519 + 2 >> 1] = 6;
 HEAP8[$$3$i$i2519 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2519 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2519 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2519 + 12 >> 2] = 576;
 HEAP32[$$3$i$i2519 + 16 >> 2] = $19736;
 HEAP32[$$3$i$i2519 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2519 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2519 + 48 >> 0] = 0;
 HEAP32[$367 >> 2] = $$3$i$i2519;
 dest = $19736;
 src = 1873274;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2519 + 148 | 0;
 src = 1873370;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2519 + 244 | 0;
 src = 1873466;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2519 + 340 | 0;
 src = 1873562;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2519 + 436 | 0;
 src = 1873658;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2519 + 532 | 0;
 src = 1873754;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $367);
 if ($$3$i$i2519 | 0) {
  $19752 = $$3$i$i2519 + 5 | 0;
  $19754 = (HEAP8[$19752 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$19752 >> 0] = $19754;
  if (!($19754 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2519);
  HEAP32[$367 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4218 >> 1] = 334;
 HEAP16[$4219 >> 1] = 69;
 HEAP16[$4220 >> 1] = 336;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 340) label = 2580; else {
  $19758 = HEAP32[915090] | 0;
  if (($19758 | 0) == (HEAP32[915088] | 0)) label = 2580; else {
   $$lcssa$i$i2531 = 3660360;
   $$lcssa8$i$i2530 = $19758;
   label = 2581;
  }
 }
 do if ((label | 0) == 2580) {
  if ((HEAP32[915097] | 0) >>> 0 >= 340) {
   $19765 = HEAP32[915096] | 0;
   if (($19765 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2531 = 3660384;
    $$lcssa8$i$i2530 = $19765;
    label = 2581;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 340) {
   $19770 = HEAP32[915102] | 0;
   if (($19770 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2531 = 3660408;
    $$lcssa8$i$i2530 = $19770;
    label = 2581;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 340) {
   $19775 = HEAP32[915108] | 0;
   if (($19775 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2531 = 3660432;
    $$lcssa8$i$i2530 = $19775;
    label = 2581;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 340) {
   $19780 = HEAP32[915114] | 0;
   if (($19780 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2531 = 3660456;
    $$lcssa8$i$i2530 = $19780;
    label = 2581;
    break;
   }
  }
  $$3$i$i2532 = __Znwj(340) | 0;
 } while (0);
 if ((label | 0) == 2581) {
  $19763 = $$lcssa8$i$i2530 + -4 | 0;
  HEAP32[$$lcssa$i$i2531 >> 2] = $19763;
  $$3$i$i2532 = HEAP32[$19763 >> 2] | 0;
 }
 $19784 = $$3$i$i2532 + 52 | 0;
 HEAP16[$$3$i$i2532 >> 1] = 48;
 HEAP16[$$3$i$i2532 + 2 >> 1] = 3;
 HEAP8[$$3$i$i2532 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2532 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2532 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2532 + 12 >> 2] = 288;
 HEAP32[$$3$i$i2532 + 16 >> 2] = $19784;
 HEAP32[$$3$i$i2532 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2532 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2532 + 48 >> 0] = 0;
 HEAP32[$368 >> 2] = $$3$i$i2532;
 dest = $19784;
 src = 1873850;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2532 + 148 | 0;
 src = 1873946;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2532 + 244 | 0;
 src = 1874042;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $368);
 if ($$3$i$i2532 | 0) {
  $19797 = $$3$i$i2532 + 5 | 0;
  $19799 = (HEAP8[$19797 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$19797 >> 0] = $19799;
  if (!($19799 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2532);
  HEAP32[$368 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4221 >> 1] = 337;
 HEAP16[$4222 >> 1] = 69;
 HEAP16[$4223 >> 1] = 338;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 244) label = 2596; else {
  $19803 = HEAP32[915090] | 0;
  if (($19803 | 0) == (HEAP32[915088] | 0)) label = 2596; else {
   $$lcssa$i$i2543 = 3660360;
   $$lcssa8$i$i2542 = $19803;
   label = 2597;
  }
 }
 do if ((label | 0) == 2596) {
  if ((HEAP32[915097] | 0) >>> 0 >= 244) {
   $19810 = HEAP32[915096] | 0;
   if (($19810 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2543 = 3660384;
    $$lcssa8$i$i2542 = $19810;
    label = 2597;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 244) {
   $19815 = HEAP32[915102] | 0;
   if (($19815 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2543 = 3660408;
    $$lcssa8$i$i2542 = $19815;
    label = 2597;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 244) {
   $19820 = HEAP32[915108] | 0;
   if (($19820 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2543 = 3660432;
    $$lcssa8$i$i2542 = $19820;
    label = 2597;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 244) {
   $19825 = HEAP32[915114] | 0;
   if (($19825 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2543 = 3660456;
    $$lcssa8$i$i2542 = $19825;
    label = 2597;
    break;
   }
  }
  $$3$i$i2544 = __Znwj(244) | 0;
 } while (0);
 if ((label | 0) == 2597) {
  $19808 = $$lcssa8$i$i2542 + -4 | 0;
  HEAP32[$$lcssa$i$i2543 >> 2] = $19808;
  $$3$i$i2544 = HEAP32[$19808 >> 2] | 0;
 }
 $19829 = $$3$i$i2544 + 52 | 0;
 HEAP16[$$3$i$i2544 >> 1] = 48;
 HEAP16[$$3$i$i2544 + 2 >> 1] = 2;
 HEAP8[$$3$i$i2544 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2544 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2544 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2544 + 12 >> 2] = 192;
 HEAP32[$$3$i$i2544 + 16 >> 2] = $19829;
 HEAP32[$$3$i$i2544 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2544 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2544 + 48 >> 0] = 0;
 HEAP32[$369 >> 2] = $$3$i$i2544;
 dest = $19829;
 src = 1874138;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2544 + 148 | 0;
 src = 1874234;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $369);
 if ($$3$i$i2544 | 0) {
  $19841 = $$3$i$i2544 + 5 | 0;
  $19843 = (HEAP8[$19841 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$19841 >> 0] = $19843;
  if (!($19843 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2544);
  HEAP32[$369 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4224 >> 1] = 339;
 HEAP16[$4225 >> 1] = 69;
 HEAP16[$4226 >> 1] = 344;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 628) label = 2612; else {
  $19847 = HEAP32[915090] | 0;
  if (($19847 | 0) == (HEAP32[915088] | 0)) label = 2612; else {
   $$lcssa$i$i2566 = 3660360;
   $$lcssa8$i$i2565 = $19847;
   label = 2613;
  }
 }
 do if ((label | 0) == 2612) {
  if ((HEAP32[915097] | 0) >>> 0 >= 628) {
   $19854 = HEAP32[915096] | 0;
   if (($19854 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2566 = 3660384;
    $$lcssa8$i$i2565 = $19854;
    label = 2613;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 628) {
   $19859 = HEAP32[915102] | 0;
   if (($19859 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2566 = 3660408;
    $$lcssa8$i$i2565 = $19859;
    label = 2613;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 628) {
   $19864 = HEAP32[915108] | 0;
   if (($19864 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2566 = 3660432;
    $$lcssa8$i$i2565 = $19864;
    label = 2613;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 628) {
   $19869 = HEAP32[915114] | 0;
   if (($19869 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2566 = 3660456;
    $$lcssa8$i$i2565 = $19869;
    label = 2613;
    break;
   }
  }
  $$3$i$i2567 = __Znwj(628) | 0;
 } while (0);
 if ((label | 0) == 2613) {
  $19852 = $$lcssa8$i$i2565 + -4 | 0;
  HEAP32[$$lcssa$i$i2566 >> 2] = $19852;
  $$3$i$i2567 = HEAP32[$19852 >> 2] | 0;
 }
 $19873 = $$3$i$i2567 + 52 | 0;
 HEAP16[$$3$i$i2567 >> 1] = 48;
 HEAP16[$$3$i$i2567 + 2 >> 1] = 6;
 HEAP8[$$3$i$i2567 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2567 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2567 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2567 + 12 >> 2] = 576;
 HEAP32[$$3$i$i2567 + 16 >> 2] = $19873;
 HEAP32[$$3$i$i2567 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2567 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2567 + 48 >> 0] = 0;
 HEAP32[$370 >> 2] = $$3$i$i2567;
 dest = $19873;
 src = 1874330;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2567 + 148 | 0;
 src = 1874426;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2567 + 244 | 0;
 src = 1874522;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2567 + 340 | 0;
 src = 1874618;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2567 + 436 | 0;
 src = 1874714;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2567 + 532 | 0;
 src = 1874810;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $370);
 if ($$3$i$i2567 | 0) {
  $19889 = $$3$i$i2567 + 5 | 0;
  $19891 = (HEAP8[$19889 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$19889 >> 0] = $19891;
  if (!($19891 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2567);
  HEAP32[$370 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4227 >> 1] = 345;
 HEAP16[$4228 >> 1] = 69;
 HEAP16[$4229 >> 1] = 363;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1876) label = 2628; else {
  $19895 = HEAP32[915090] | 0;
  if (($19895 | 0) == (HEAP32[915088] | 0)) label = 2628; else {
   $$lcssa$i$i2578 = 3660360;
   $$lcssa8$i$i2577 = $19895;
   label = 2629;
  }
 }
 do if ((label | 0) == 2628) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1876) {
   $19902 = HEAP32[915096] | 0;
   if (($19902 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2578 = 3660384;
    $$lcssa8$i$i2577 = $19902;
    label = 2629;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1876) {
   $19907 = HEAP32[915102] | 0;
   if (($19907 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2578 = 3660408;
    $$lcssa8$i$i2577 = $19907;
    label = 2629;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1876) {
   $19912 = HEAP32[915108] | 0;
   if (($19912 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2578 = 3660432;
    $$lcssa8$i$i2577 = $19912;
    label = 2629;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1876) {
   $19917 = HEAP32[915114] | 0;
   if (($19917 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2578 = 3660456;
    $$lcssa8$i$i2577 = $19917;
    label = 2629;
    break;
   }
  }
  $$3$i$i2579 = __Znwj(1876) | 0;
 } while (0);
 if ((label | 0) == 2629) {
  $19900 = $$lcssa8$i$i2577 + -4 | 0;
  HEAP32[$$lcssa$i$i2578 >> 2] = $19900;
  $$3$i$i2579 = HEAP32[$19900 >> 2] | 0;
 }
 $19921 = $$3$i$i2579 + 52 | 0;
 HEAP16[$$3$i$i2579 >> 1] = 48;
 HEAP16[$$3$i$i2579 + 2 >> 1] = 19;
 HEAP8[$$3$i$i2579 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2579 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2579 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2579 + 12 >> 2] = 1824;
 HEAP32[$$3$i$i2579 + 16 >> 2] = $19921;
 HEAP32[$$3$i$i2579 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2579 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2579 + 48 >> 0] = 0;
 HEAP32[$371 >> 2] = $$3$i$i2579;
 dest = $19921;
 src = 1874906;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 148 | 0;
 src = 1875002;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 244 | 0;
 src = 1875098;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 340 | 0;
 src = 1875194;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 436 | 0;
 src = 1875290;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 532 | 0;
 src = 1875386;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 628 | 0;
 src = 1875482;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 724 | 0;
 src = 1875578;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 820 | 0;
 src = 1875674;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 916 | 0;
 src = 1875770;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 1012 | 0;
 src = 1875866;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 1108 | 0;
 src = 1875962;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 1204 | 0;
 src = 1876058;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 1300 | 0;
 src = 1876154;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 1396 | 0;
 src = 1876250;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 1492 | 0;
 src = 1876346;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 1588 | 0;
 src = 1876442;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 1684 | 0;
 src = 1876538;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2579 + 1780 | 0;
 src = 1876634;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $371);
 if ($$3$i$i2579 | 0) {
  $19950 = $$3$i$i2579 + 5 | 0;
  $19952 = (HEAP8[$19950 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$19950 >> 0] = $19952;
  if (!($19952 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2579);
  HEAP32[$371 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 27;
 HEAP16[$4230 >> 1] = 264;
 HEAP16[$4231 >> 1] = 63;
 HEAP16[$4232 >> 1] = 276;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1092) label = 2644; else {
  $19956 = HEAP32[915090] | 0;
  if (($19956 | 0) == (HEAP32[915088] | 0)) label = 2644; else {
   $$lcssa$i$i2591 = 3660360;
   $$lcssa8$i$i2590 = $19956;
   label = 2645;
  }
 }
 do if ((label | 0) == 2644) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1092) {
   $19963 = HEAP32[915096] | 0;
   if (($19963 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2591 = 3660384;
    $$lcssa8$i$i2590 = $19963;
    label = 2645;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1092) {
   $19968 = HEAP32[915102] | 0;
   if (($19968 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2591 = 3660408;
    $$lcssa8$i$i2590 = $19968;
    label = 2645;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1092) {
   $19973 = HEAP32[915108] | 0;
   if (($19973 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2591 = 3660432;
    $$lcssa8$i$i2590 = $19973;
    label = 2645;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1092) {
   $19978 = HEAP32[915114] | 0;
   if (($19978 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2591 = 3660456;
    $$lcssa8$i$i2590 = $19978;
    label = 2645;
    break;
   }
  }
  $$3$i$i2592 = __Znwj(1092) | 0;
 } while (0);
 if ((label | 0) == 2645) {
  $19961 = $$lcssa8$i$i2590 + -4 | 0;
  HEAP32[$$lcssa$i$i2591 >> 2] = $19961;
  $$3$i$i2592 = HEAP32[$19961 >> 2] | 0;
 }
 $19982 = $$3$i$i2592 + 52 | 0;
 HEAP16[$$3$i$i2592 >> 1] = 40;
 HEAP16[$$3$i$i2592 + 2 >> 1] = 13;
 HEAP8[$$3$i$i2592 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2592 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2592 + 8 >> 2] = 80;
 HEAP32[$$3$i$i2592 + 12 >> 2] = 1040;
 HEAP32[$$3$i$i2592 + 16 >> 2] = $19982;
 HEAP32[$$3$i$i2592 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2592 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2592 + 48 >> 0] = 0;
 HEAP32[$372 >> 2] = $$3$i$i2592;
 dest = $19982;
 src = 1876730;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2592 + 132 | 0;
 src = 1876810;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2592 + 212 | 0;
 src = 1876890;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2592 + 292 | 0;
 src = 1876970;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2592 + 372 | 0;
 src = 1877050;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2592 + 452 | 0;
 src = 1877130;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2592 + 532 | 0;
 src = 1877210;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2592 + 612 | 0;
 src = 1877290;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2592 + 692 | 0;
 src = 1877370;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2592 + 772 | 0;
 src = 1877450;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2592 + 852 | 0;
 src = 1877530;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2592 + 932 | 0;
 src = 1877610;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2592 + 1012 | 0;
 src = 1877690;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $372);
 if ($$3$i$i2592 | 0) {
  $20005 = $$3$i$i2592 + 5 | 0;
  $20007 = (HEAP8[$20005 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$20005 >> 0] = $20007;
  if (!($20007 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2592);
  HEAP32[$372 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4233 >> 1] = 213;
 HEAP16[$4234 >> 1] = 69;
 HEAP16[$4235 >> 1] = 260;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4660) label = 2660; else {
  $20011 = HEAP32[915090] | 0;
  if (($20011 | 0) == (HEAP32[915088] | 0)) label = 2660; else {
   $$lcssa$i$i2603 = 3660360;
   $$lcssa8$i$i2602 = $20011;
   label = 2661;
  }
 }
 do if ((label | 0) == 2660) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4660) {
   $20018 = HEAP32[915096] | 0;
   if (($20018 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2603 = 3660384;
    $$lcssa8$i$i2602 = $20018;
    label = 2661;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4660) {
   $20023 = HEAP32[915102] | 0;
   if (($20023 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2603 = 3660408;
    $$lcssa8$i$i2602 = $20023;
    label = 2661;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4660) {
   $20028 = HEAP32[915108] | 0;
   if (($20028 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2603 = 3660432;
    $$lcssa8$i$i2602 = $20028;
    label = 2661;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4660) {
   $20033 = HEAP32[915114] | 0;
   if (($20033 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2603 = 3660456;
    $$lcssa8$i$i2602 = $20033;
    label = 2661;
    break;
   }
  }
  $$3$i$i2604 = __Znwj(4660) | 0;
 } while (0);
 if ((label | 0) == 2661) {
  $20016 = $$lcssa8$i$i2602 + -4 | 0;
  HEAP32[$$lcssa$i$i2603 >> 2] = $20016;
  $$3$i$i2604 = HEAP32[$20016 >> 2] | 0;
 }
 $20037 = $$3$i$i2604 + 52 | 0;
 HEAP16[$$3$i$i2604 >> 1] = 48;
 HEAP16[$$3$i$i2604 + 2 >> 1] = 48;
 HEAP8[$$3$i$i2604 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2604 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2604 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2604 + 12 >> 2] = 4608;
 HEAP32[$$3$i$i2604 + 16 >> 2] = $20037;
 HEAP32[$$3$i$i2604 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2604 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2604 + 48 >> 0] = 0;
 HEAP32[$373 >> 2] = $$3$i$i2604;
 dest = $20037;
 src = 1877770;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 148 | 0;
 src = 1877866;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 244 | 0;
 src = 1877962;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 340 | 0;
 src = 1878058;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 436 | 0;
 src = 1878154;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 532 | 0;
 src = 1878250;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 628 | 0;
 src = 1878346;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 724 | 0;
 src = 1878442;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 820 | 0;
 src = 1878538;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 916 | 0;
 src = 1878634;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 1012 | 0;
 src = 1878730;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 1108 | 0;
 src = 1878826;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 1204 | 0;
 src = 1878922;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 1300 | 0;
 src = 1879018;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 1396 | 0;
 src = 1879114;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 1492 | 0;
 src = 1879210;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 1588 | 0;
 src = 1879306;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 1684 | 0;
 src = 1879402;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 1780 | 0;
 src = 1879498;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 1876 | 0;
 src = 1879594;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 1972 | 0;
 src = 1879690;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 2068 | 0;
 src = 1879786;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 2164 | 0;
 src = 1879882;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 2260 | 0;
 src = 1879978;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 2356 | 0;
 src = 1880074;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 2452 | 0;
 src = 1880170;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 2548 | 0;
 src = 1880266;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 2644 | 0;
 src = 1880362;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 2740 | 0;
 src = 1880458;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 2836 | 0;
 src = 1880554;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 2932 | 0;
 src = 1880650;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 3028 | 0;
 src = 1880746;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 3124 | 0;
 src = 1880842;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 3220 | 0;
 src = 1880938;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 3316 | 0;
 src = 1881034;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 3412 | 0;
 src = 1881130;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 3508 | 0;
 src = 1881226;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 3604 | 0;
 src = 1881322;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 3700 | 0;
 src = 1881418;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 3796 | 0;
 src = 1881514;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 3892 | 0;
 src = 1881610;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 3988 | 0;
 src = 1881706;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 4084 | 0;
 src = 1881802;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 4180 | 0;
 src = 1881898;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 4276 | 0;
 src = 1881994;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 4372 | 0;
 src = 1882090;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 4468 | 0;
 src = 1882186;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2604 + 4564 | 0;
 src = 1882282;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $373);
 if ($$3$i$i2604 | 0) {
  $20095 = $$3$i$i2604 + 5 | 0;
  $20097 = (HEAP8[$20095 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$20095 >> 0] = $20097;
  if (!($20097 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2604);
  HEAP32[$373 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4236 >> 1] = 110;
 HEAP16[$4237 >> 1] = 69;
 HEAP16[$4238 >> 1] = 157;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4660) label = 2676; else {
  $20101 = HEAP32[915090] | 0;
  if (($20101 | 0) == (HEAP32[915088] | 0)) label = 2676; else {
   $$lcssa$i$i2626 = 3660360;
   $$lcssa8$i$i2625 = $20101;
   label = 2677;
  }
 }
 do if ((label | 0) == 2676) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4660) {
   $20108 = HEAP32[915096] | 0;
   if (($20108 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2626 = 3660384;
    $$lcssa8$i$i2625 = $20108;
    label = 2677;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4660) {
   $20113 = HEAP32[915102] | 0;
   if (($20113 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2626 = 3660408;
    $$lcssa8$i$i2625 = $20113;
    label = 2677;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4660) {
   $20118 = HEAP32[915108] | 0;
   if (($20118 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2626 = 3660432;
    $$lcssa8$i$i2625 = $20118;
    label = 2677;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4660) {
   $20123 = HEAP32[915114] | 0;
   if (($20123 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2626 = 3660456;
    $$lcssa8$i$i2625 = $20123;
    label = 2677;
    break;
   }
  }
  $$3$i$i2627 = __Znwj(4660) | 0;
 } while (0);
 if ((label | 0) == 2677) {
  $20106 = $$lcssa8$i$i2625 + -4 | 0;
  HEAP32[$$lcssa$i$i2626 >> 2] = $20106;
  $$3$i$i2627 = HEAP32[$20106 >> 2] | 0;
 }
 $20127 = $$3$i$i2627 + 52 | 0;
 HEAP16[$$3$i$i2627 >> 1] = 48;
 HEAP16[$$3$i$i2627 + 2 >> 1] = 48;
 HEAP8[$$3$i$i2627 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2627 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2627 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2627 + 12 >> 2] = 4608;
 HEAP32[$$3$i$i2627 + 16 >> 2] = $20127;
 HEAP32[$$3$i$i2627 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2627 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2627 + 48 >> 0] = 0;
 HEAP32[$374 >> 2] = $$3$i$i2627;
 dest = $20127;
 src = 1882378;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 148 | 0;
 src = 1882474;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 244 | 0;
 src = 1882570;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 340 | 0;
 src = 1882666;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 436 | 0;
 src = 1882762;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 532 | 0;
 src = 1882858;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 628 | 0;
 src = 1882954;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 724 | 0;
 src = 1883050;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 820 | 0;
 src = 1883146;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 916 | 0;
 src = 1883242;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 1012 | 0;
 src = 1883338;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 1108 | 0;
 src = 1883434;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 1204 | 0;
 src = 1883530;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 1300 | 0;
 src = 1883626;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 1396 | 0;
 src = 1883722;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 1492 | 0;
 src = 1883818;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 1588 | 0;
 src = 1883914;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 1684 | 0;
 src = 1884010;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 1780 | 0;
 src = 1884106;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 1876 | 0;
 src = 1884202;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 1972 | 0;
 src = 1884298;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 2068 | 0;
 src = 1884394;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 2164 | 0;
 src = 1884490;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 2260 | 0;
 src = 1884586;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 2356 | 0;
 src = 1884682;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 2452 | 0;
 src = 1884778;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 2548 | 0;
 src = 1884874;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 2644 | 0;
 src = 1884970;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 2740 | 0;
 src = 1885066;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 2836 | 0;
 src = 1885162;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 2932 | 0;
 src = 1885258;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 3028 | 0;
 src = 1885354;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 3124 | 0;
 src = 1885450;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 3220 | 0;
 src = 1885546;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 3316 | 0;
 src = 1885642;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 3412 | 0;
 src = 1885738;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 3508 | 0;
 src = 1885834;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 3604 | 0;
 src = 1885930;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 3700 | 0;
 src = 1886026;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 3796 | 0;
 src = 1886122;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 3892 | 0;
 src = 1886218;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 3988 | 0;
 src = 1886314;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 4084 | 0;
 src = 1886410;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 4180 | 0;
 src = 1886506;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 4276 | 0;
 src = 1886602;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 4372 | 0;
 src = 1886698;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 4468 | 0;
 src = 1886794;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2627 + 4564 | 0;
 src = 1886890;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $374);
 if ($$3$i$i2627 | 0) {
  $20185 = $$3$i$i2627 + 5 | 0;
  $20187 = (HEAP8[$20185 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$20185 >> 0] = $20187;
  if (!($20187 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2627);
  HEAP32[$374 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 25;
 HEAP16[$4239 >> 1] = 58;
 HEAP16[$4240 >> 1] = 65;
 HEAP16[$4241 >> 1] = 70;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1196) label = 2692; else {
  $20191 = HEAP32[915090] | 0;
  if (($20191 | 0) == (HEAP32[915088] | 0)) label = 2692; else {
   $$lcssa$i$i2638 = 3660360;
   $$lcssa8$i$i2637 = $20191;
   label = 2693;
  }
 }
 do if ((label | 0) == 2692) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1196) {
   $20198 = HEAP32[915096] | 0;
   if (($20198 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2638 = 3660384;
    $$lcssa8$i$i2637 = $20198;
    label = 2693;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1196) {
   $20203 = HEAP32[915102] | 0;
   if (($20203 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2638 = 3660408;
    $$lcssa8$i$i2637 = $20203;
    label = 2693;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1196) {
   $20208 = HEAP32[915108] | 0;
   if (($20208 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2638 = 3660432;
    $$lcssa8$i$i2637 = $20208;
    label = 2693;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1196) {
   $20213 = HEAP32[915114] | 0;
   if (($20213 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2638 = 3660456;
    $$lcssa8$i$i2637 = $20213;
    label = 2693;
    break;
   }
  }
  $$3$i$i2639 = __Znwj(1196) | 0;
 } while (0);
 if ((label | 0) == 2693) {
  $20196 = $$lcssa8$i$i2637 + -4 | 0;
  HEAP32[$$lcssa$i$i2638 >> 2] = $20196;
  $$3$i$i2639 = HEAP32[$20196 >> 2] | 0;
 }
 $20217 = $$3$i$i2639 + 52 | 0;
 HEAP16[$$3$i$i2639 >> 1] = 44;
 HEAP16[$$3$i$i2639 + 2 >> 1] = 13;
 HEAP8[$$3$i$i2639 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2639 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2639 + 8 >> 2] = 88;
 HEAP32[$$3$i$i2639 + 12 >> 2] = 1144;
 HEAP32[$$3$i$i2639 + 16 >> 2] = $20217;
 HEAP32[$$3$i$i2639 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2639 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2639 + 48 >> 0] = 0;
 HEAP32[$375 >> 2] = $$3$i$i2639;
 dest = $20217;
 src = 1886986;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2639 + 140 | 0;
 src = 1887074;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2639 + 228 | 0;
 src = 1887162;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2639 + 316 | 0;
 src = 1887250;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2639 + 404 | 0;
 src = 1887338;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2639 + 492 | 0;
 src = 1887426;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2639 + 580 | 0;
 src = 1887514;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2639 + 668 | 0;
 src = 1887602;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2639 + 756 | 0;
 src = 1887690;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2639 + 844 | 0;
 src = 1887778;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2639 + 932 | 0;
 src = 1887866;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2639 + 1020 | 0;
 src = 1887954;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2639 + 1108 | 0;
 src = 1888042;
 stop = dest + 88 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $375);
 if ($$3$i$i2639 | 0) {
  $20240 = $$3$i$i2639 + 5 | 0;
  $20242 = (HEAP8[$20240 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$20240 >> 0] = $20242;
  if (!($20242 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2639);
  HEAP32[$375 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4242 >> 1] = 7;
 HEAP16[$4243 >> 1] = 69;
 HEAP16[$4244 >> 1] = 21;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1492) label = 2708; else {
  $20246 = HEAP32[915090] | 0;
  if (($20246 | 0) == (HEAP32[915088] | 0)) label = 2708; else {
   $$lcssa$i$i2651 = 3660360;
   $$lcssa8$i$i2650 = $20246;
   label = 2709;
  }
 }
 do if ((label | 0) == 2708) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1492) {
   $20253 = HEAP32[915096] | 0;
   if (($20253 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2651 = 3660384;
    $$lcssa8$i$i2650 = $20253;
    label = 2709;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1492) {
   $20258 = HEAP32[915102] | 0;
   if (($20258 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2651 = 3660408;
    $$lcssa8$i$i2650 = $20258;
    label = 2709;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1492) {
   $20263 = HEAP32[915108] | 0;
   if (($20263 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2651 = 3660432;
    $$lcssa8$i$i2650 = $20263;
    label = 2709;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1492) {
   $20268 = HEAP32[915114] | 0;
   if (($20268 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2651 = 3660456;
    $$lcssa8$i$i2650 = $20268;
    label = 2709;
    break;
   }
  }
  $$3$i$i2652 = __Znwj(1492) | 0;
 } while (0);
 if ((label | 0) == 2709) {
  $20251 = $$lcssa8$i$i2650 + -4 | 0;
  HEAP32[$$lcssa$i$i2651 >> 2] = $20251;
  $$3$i$i2652 = HEAP32[$20251 >> 2] | 0;
 }
 $20272 = $$3$i$i2652 + 52 | 0;
 HEAP16[$$3$i$i2652 >> 1] = 48;
 HEAP16[$$3$i$i2652 + 2 >> 1] = 15;
 HEAP8[$$3$i$i2652 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2652 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2652 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2652 + 12 >> 2] = 1440;
 HEAP32[$$3$i$i2652 + 16 >> 2] = $20272;
 HEAP32[$$3$i$i2652 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2652 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2652 + 48 >> 0] = 0;
 HEAP32[$376 >> 2] = $$3$i$i2652;
 dest = $20272;
 src = 1888130;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2652 + 148 | 0;
 src = 1888226;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2652 + 244 | 0;
 src = 1888322;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2652 + 340 | 0;
 src = 1888418;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2652 + 436 | 0;
 src = 1888514;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2652 + 532 | 0;
 src = 1888610;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2652 + 628 | 0;
 src = 1888706;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2652 + 724 | 0;
 src = 1888802;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2652 + 820 | 0;
 src = 1888898;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2652 + 916 | 0;
 src = 1888994;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2652 + 1012 | 0;
 src = 1889090;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2652 + 1108 | 0;
 src = 1889186;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2652 + 1204 | 0;
 src = 1889282;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2652 + 1300 | 0;
 src = 1889378;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2652 + 1396 | 0;
 src = 1889474;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $376);
 if ($$3$i$i2652 | 0) {
  $20297 = $$3$i$i2652 + 5 | 0;
  $20299 = (HEAP8[$20297 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$20297 >> 0] = $20299;
  if (!($20299 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2652);
  HEAP32[$376 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4245 >> 1] = 22;
 HEAP16[$4246 >> 1] = 69;
 HEAP16[$4247 >> 1] = 28;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 724) label = 2724; else {
  $20303 = HEAP32[915090] | 0;
  if (($20303 | 0) == (HEAP32[915088] | 0)) label = 2724; else {
   $$lcssa$i$i2663 = 3660360;
   $$lcssa8$i$i2662 = $20303;
   label = 2725;
  }
 }
 do if ((label | 0) == 2724) {
  if ((HEAP32[915097] | 0) >>> 0 >= 724) {
   $20310 = HEAP32[915096] | 0;
   if (($20310 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2663 = 3660384;
    $$lcssa8$i$i2662 = $20310;
    label = 2725;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 724) {
   $20315 = HEAP32[915102] | 0;
   if (($20315 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2663 = 3660408;
    $$lcssa8$i$i2662 = $20315;
    label = 2725;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 724) {
   $20320 = HEAP32[915108] | 0;
   if (($20320 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2663 = 3660432;
    $$lcssa8$i$i2662 = $20320;
    label = 2725;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 724) {
   $20325 = HEAP32[915114] | 0;
   if (($20325 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2663 = 3660456;
    $$lcssa8$i$i2662 = $20325;
    label = 2725;
    break;
   }
  }
  $$3$i$i2664 = __Znwj(724) | 0;
 } while (0);
 if ((label | 0) == 2725) {
  $20308 = $$lcssa8$i$i2662 + -4 | 0;
  HEAP32[$$lcssa$i$i2663 >> 2] = $20308;
  $$3$i$i2664 = HEAP32[$20308 >> 2] | 0;
 }
 $20329 = $$3$i$i2664 + 52 | 0;
 HEAP16[$$3$i$i2664 >> 1] = 48;
 HEAP16[$$3$i$i2664 + 2 >> 1] = 7;
 HEAP8[$$3$i$i2664 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2664 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2664 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2664 + 12 >> 2] = 672;
 HEAP32[$$3$i$i2664 + 16 >> 2] = $20329;
 HEAP32[$$3$i$i2664 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2664 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2664 + 48 >> 0] = 0;
 HEAP32[$377 >> 2] = $$3$i$i2664;
 dest = $20329;
 src = 1889570;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2664 + 148 | 0;
 src = 1889666;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2664 + 244 | 0;
 src = 1889762;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2664 + 340 | 0;
 src = 1889858;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2664 + 436 | 0;
 src = 1889954;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2664 + 532 | 0;
 src = 1890050;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2664 + 628 | 0;
 src = 1890146;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $377);
 if ($$3$i$i2664 | 0) {
  $20346 = $$3$i$i2664 + 5 | 0;
  $20348 = (HEAP8[$20346 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$20346 >> 0] = $20348;
  if (!($20348 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2664);
  HEAP32[$377 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4248 >> 1] = 29;
 HEAP16[$4249 >> 1] = 69;
 HEAP16[$4250 >> 1] = 31;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 340) label = 2740; else {
  $20352 = HEAP32[915090] | 0;
  if (($20352 | 0) == (HEAP32[915088] | 0)) label = 2740; else {
   $$lcssa$i$i2686 = 3660360;
   $$lcssa8$i$i2685 = $20352;
   label = 2741;
  }
 }
 do if ((label | 0) == 2740) {
  if ((HEAP32[915097] | 0) >>> 0 >= 340) {
   $20359 = HEAP32[915096] | 0;
   if (($20359 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2686 = 3660384;
    $$lcssa8$i$i2685 = $20359;
    label = 2741;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 340) {
   $20364 = HEAP32[915102] | 0;
   if (($20364 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2686 = 3660408;
    $$lcssa8$i$i2685 = $20364;
    label = 2741;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 340) {
   $20369 = HEAP32[915108] | 0;
   if (($20369 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2686 = 3660432;
    $$lcssa8$i$i2685 = $20369;
    label = 2741;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 340) {
   $20374 = HEAP32[915114] | 0;
   if (($20374 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2686 = 3660456;
    $$lcssa8$i$i2685 = $20374;
    label = 2741;
    break;
   }
  }
  $$3$i$i2687 = __Znwj(340) | 0;
 } while (0);
 if ((label | 0) == 2741) {
  $20357 = $$lcssa8$i$i2685 + -4 | 0;
  HEAP32[$$lcssa$i$i2686 >> 2] = $20357;
  $$3$i$i2687 = HEAP32[$20357 >> 2] | 0;
 }
 $20378 = $$3$i$i2687 + 52 | 0;
 HEAP16[$$3$i$i2687 >> 1] = 48;
 HEAP16[$$3$i$i2687 + 2 >> 1] = 3;
 HEAP8[$$3$i$i2687 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2687 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2687 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2687 + 12 >> 2] = 288;
 HEAP32[$$3$i$i2687 + 16 >> 2] = $20378;
 HEAP32[$$3$i$i2687 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2687 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2687 + 48 >> 0] = 0;
 HEAP32[$378 >> 2] = $$3$i$i2687;
 dest = $20378;
 src = 1890242;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2687 + 148 | 0;
 src = 1890338;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2687 + 244 | 0;
 src = 1890434;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $378);
 if ($$3$i$i2687 | 0) {
  $20391 = $$3$i$i2687 + 5 | 0;
  $20393 = (HEAP8[$20391 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$20391 >> 0] = $20393;
  if (!($20393 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2687);
  HEAP32[$378 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 22;
 HEAP16[$4251 >> 1] = 32;
 HEAP16[$4252 >> 1] = 69;
 HEAP16[$4253 >> 1] = 54;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2260) label = 2756; else {
  $20397 = HEAP32[915090] | 0;
  if (($20397 | 0) == (HEAP32[915088] | 0)) label = 2756; else {
   $$lcssa$i$i2698 = 3660360;
   $$lcssa8$i$i2697 = $20397;
   label = 2757;
  }
 }
 do if ((label | 0) == 2756) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2260) {
   $20404 = HEAP32[915096] | 0;
   if (($20404 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2698 = 3660384;
    $$lcssa8$i$i2697 = $20404;
    label = 2757;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2260) {
   $20409 = HEAP32[915102] | 0;
   if (($20409 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2698 = 3660408;
    $$lcssa8$i$i2697 = $20409;
    label = 2757;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2260) {
   $20414 = HEAP32[915108] | 0;
   if (($20414 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2698 = 3660432;
    $$lcssa8$i$i2697 = $20414;
    label = 2757;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2260) {
   $20419 = HEAP32[915114] | 0;
   if (($20419 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2698 = 3660456;
    $$lcssa8$i$i2697 = $20419;
    label = 2757;
    break;
   }
  }
  $$3$i$i2699 = __Znwj(2260) | 0;
 } while (0);
 if ((label | 0) == 2757) {
  $20402 = $$lcssa8$i$i2697 + -4 | 0;
  HEAP32[$$lcssa$i$i2698 >> 2] = $20402;
  $$3$i$i2699 = HEAP32[$20402 >> 2] | 0;
 }
 $20423 = $$3$i$i2699 + 52 | 0;
 HEAP16[$$3$i$i2699 >> 1] = 48;
 HEAP16[$$3$i$i2699 + 2 >> 1] = 23;
 HEAP8[$$3$i$i2699 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2699 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2699 + 8 >> 2] = 96;
 HEAP32[$$3$i$i2699 + 12 >> 2] = 2208;
 HEAP32[$$3$i$i2699 + 16 >> 2] = $20423;
 HEAP32[$$3$i$i2699 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2699 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2699 + 48 >> 0] = 0;
 HEAP32[$379 >> 2] = $$3$i$i2699;
 dest = $20423;
 src = 1890530;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 148 | 0;
 src = 1890626;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 244 | 0;
 src = 1890722;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 340 | 0;
 src = 1890818;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 436 | 0;
 src = 1890914;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 532 | 0;
 src = 1891010;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 628 | 0;
 src = 1891106;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 724 | 0;
 src = 1891202;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 820 | 0;
 src = 1891298;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 916 | 0;
 src = 1891394;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 1012 | 0;
 src = 1891490;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 1108 | 0;
 src = 1891586;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 1204 | 0;
 src = 1891682;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 1300 | 0;
 src = 1891778;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 1396 | 0;
 src = 1891874;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 1492 | 0;
 src = 1891970;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 1588 | 0;
 src = 1892066;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 1684 | 0;
 src = 1892162;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 1780 | 0;
 src = 1892258;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 1876 | 0;
 src = 1892354;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 1972 | 0;
 src = 1892450;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 2068 | 0;
 src = 1892546;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2699 + 2164 | 0;
 src = 1892642;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $379);
 if ($$3$i$i2699 | 0) {
  $20456 = $$3$i$i2699 + 5 | 0;
  $20458 = (HEAP8[$20456 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$20456 >> 0] = $20458;
  if (!($20458 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2699);
  HEAP32[$379 >> 2] = 0;
 }
 $20460 = $380;
 HEAP32[$20460 >> 2] = 47711094;
 HEAP32[$20460 + 4 >> 2] = 2490400;
 HEAP32[$4254 >> 2] = 54937;
 HEAP16[$381 >> 1] = 886;
 HEAP16[$4255 >> 1] = 728;
 HEAP16[$4256 >> 1] = 32;
 HEAP16[$4257 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $380, $381);
 $20464 = $382;
 HEAP32[$20464 >> 2] = 47711094;
 HEAP32[$20464 + 4 >> 2] = 2490400;
 HEAP32[$4258 >> 2] = 54937;
 HEAP16[$383 >> 1] = 886;
 HEAP16[$4259 >> 1] = 736;
 HEAP16[$4260 >> 1] = 4;
 HEAP16[$4261 >> 1] = 22;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $382, $383);
 $20468 = $384;
 HEAP32[$20468 >> 2] = 47711094;
 HEAP32[$20468 + 4 >> 2] = 2490400;
 HEAP32[$4262 >> 2] = 54937;
 HEAP16[$385 >> 1] = 886;
 HEAP16[$4263 >> 1] = 758;
 HEAP16[$4264 >> 1] = 32;
 HEAP16[$4265 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $384, $385);
 $20472 = $386;
 HEAP32[$20472 >> 2] = 47710293;
 HEAP32[$20472 + 4 >> 2] = 2491173;
 HEAP32[$4266 >> 2] = 54937;
 HEAP16[$387 >> 1] = 85;
 HEAP16[$4267 >> 1] = 728;
 HEAP16[$4268 >> 1] = 9;
 HEAP16[$4269 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $386, $387);
 $20476 = $388;
 HEAP32[$20476 >> 2] = 47710293;
 HEAP32[$20476 + 4 >> 2] = 2491173;
 HEAP32[$4270 >> 2] = 54937;
 HEAP16[$389 >> 1] = 877;
 HEAP16[$4271 >> 1] = 728;
 HEAP16[$4272 >> 1] = 13;
 HEAP16[$4273 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $388, $389);
 $20480 = $390;
 HEAP32[$20480 >> 2] = 47710293;
 HEAP32[$20480 + 4 >> 2] = 2491173;
 HEAP32[$4274 >> 2] = 54937;
 HEAP16[$391 >> 1] = 85;
 HEAP16[$4275 >> 1] = 728;
 HEAP16[$4276 >> 1] = 9;
 HEAP16[$4277 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $390, $391);
 $20484 = $392;
 HEAP32[$20484 >> 2] = 47710293;
 HEAP32[$20484 + 4 >> 2] = 2491173;
 HEAP32[$4278 >> 2] = 54937;
 HEAP16[$393 >> 1] = 877;
 HEAP16[$4279 >> 1] = 728;
 HEAP16[$4280 >> 1] = 13;
 HEAP16[$4281 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $392, $393);
 $20488 = $394;
 HEAP32[$20488 >> 2] = 47841369;
 HEAP32[$20488 + 4 >> 2] = 2228225;
 HEAP32[$4282 >> 2] = 33808;
 HEAP16[$395 >> 1] = 89;
 HEAP16[$4283 >> 1] = 730;
 HEAP16[$4284 >> 1] = 1;
 HEAP16[$4285 >> 1] = 34;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $394, $395);
 $20492 = $396;
 HEAP32[$20492 >> 2] = 50004055;
 HEAP32[$20492 + 4 >> 2] = 65538;
 HEAP32[$4286 >> 2] = 33808;
 HEAP16[$397 >> 1] = 87;
 HEAP16[$4287 >> 1] = 763;
 HEAP16[$4288 >> 1] = 2;
 HEAP16[$4289 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $396, $397);
 $20496 = $398;
 HEAP32[$20496 >> 2] = 47841367;
 HEAP32[$20496 + 4 >> 2] = 2162689;
 HEAP32[$4290 >> 2] = 65535;
 HEAP16[$399 >> 1] = 87;
 HEAP16[$4291 >> 1] = 730;
 HEAP16[$4292 >> 1] = 1;
 HEAP16[$4293 >> 1] = 33;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $398, $399);
 $20500 = $400;
 HEAP32[$20500 >> 2] = 47841368;
 HEAP32[$20500 + 4 >> 2] = 65537;
 HEAP32[$4294 >> 2] = 65535;
 HEAP16[$401 >> 1] = 88;
 HEAP16[$4295 >> 1] = 730;
 HEAP16[$4296 >> 1] = 1;
 HEAP16[$4297 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $400, $401);
 $20504 = $402;
 HEAP32[$20504 >> 2] = 47906904;
 HEAP32[$20504 + 4 >> 2] = 2097153;
 HEAP32[$4298 >> 2] = 54937;
 HEAP16[$403 >> 1] = 88;
 HEAP16[$4299 >> 1] = 731;
 HEAP16[$4300 >> 1] = 1;
 HEAP16[$4301 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $402, $403);
 $20508 = $404;
 HEAP32[$20508 >> 2] = 47842165;
 HEAP32[$20508 + 4 >> 2] = 2228225;
 HEAP32[$4302 >> 2] = 33808;
 HEAP16[$405 >> 1] = 885;
 HEAP16[$4303 >> 1] = 730;
 HEAP16[$4304 >> 1] = 1;
 HEAP16[$4305 >> 1] = 34;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $404, $405);
 $20512 = $406;
 HEAP32[$20512 >> 2] = 50004851;
 HEAP32[$20512 + 4 >> 2] = 65538;
 HEAP32[$4306 >> 2] = 33808;
 HEAP16[$407 >> 1] = 883;
 HEAP16[$4307 >> 1] = 763;
 HEAP16[$4308 >> 1] = 2;
 HEAP16[$4309 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $406, $407);
 $20516 = $408;
 HEAP32[$20516 >> 2] = 47842163;
 HEAP32[$20516 + 4 >> 2] = 2162689;
 HEAP32[$4310 >> 2] = 65535;
 HEAP16[$409 >> 1] = 883;
 HEAP16[$4311 >> 1] = 730;
 HEAP16[$4312 >> 1] = 1;
 HEAP16[$4313 >> 1] = 33;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $408, $409);
 $20520 = $410;
 HEAP32[$20520 >> 2] = 47842164;
 HEAP32[$20520 + 4 >> 2] = 65537;
 HEAP32[$4314 >> 2] = 65535;
 HEAP16[$411 >> 1] = 884;
 HEAP16[$4315 >> 1] = 730;
 HEAP16[$4316 >> 1] = 1;
 HEAP16[$4317 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $410, $411);
 $20524 = $412;
 HEAP32[$20524 >> 2] = 47907700;
 HEAP32[$20524 + 4 >> 2] = 2097153;
 HEAP32[$4318 >> 2] = 54937;
 HEAP16[$413 >> 1] = 884;
 HEAP16[$4319 >> 1] = 731;
 HEAP16[$4320 >> 1] = 1;
 HEAP16[$4321 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $412, $413);
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 94;
 HEAP16[$4322 >> 1] = 728;
 HEAP16[$4323 >> 1] = 876;
 HEAP16[$4324 >> 1] = 747;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31412) label = 2772; else {
  $20530 = HEAP32[915090] | 0;
  if (($20530 | 0) == (HEAP32[915088] | 0)) label = 2772; else {
   $$lcssa$i$i2866 = 3660360;
   $$lcssa8$i$i2865 = $20530;
   label = 2773;
  }
 }
 do if ((label | 0) == 2772) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31412) {
   $20537 = HEAP32[915096] | 0;
   if (($20537 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2866 = 3660384;
    $$lcssa8$i$i2865 = $20537;
    label = 2773;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31412) {
   $20542 = HEAP32[915102] | 0;
   if (($20542 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2866 = 3660408;
    $$lcssa8$i$i2865 = $20542;
    label = 2773;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31412) {
   $20547 = HEAP32[915108] | 0;
   if (($20547 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2866 = 3660432;
    $$lcssa8$i$i2865 = $20547;
    label = 2773;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31412) {
   $20552 = HEAP32[915114] | 0;
   if (($20552 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2866 = 3660456;
    $$lcssa8$i$i2865 = $20552;
    label = 2773;
    break;
   }
  }
  $$3$i$i2867 = __Znwj(31412) | 0;
 } while (0);
 if ((label | 0) == 2773) {
  $20535 = $$lcssa8$i$i2865 + -4 | 0;
  HEAP32[$$lcssa$i$i2866 >> 2] = $20535;
  $$3$i$i2867 = HEAP32[$20535 >> 2] | 0;
 }
 $20556 = $$3$i$i2867 + 52 | 0;
 HEAP16[$$3$i$i2867 >> 1] = 784;
 HEAP16[$$3$i$i2867 + 2 >> 1] = 20;
 HEAP8[$$3$i$i2867 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2867 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2867 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i2867 + 12 >> 2] = 31360;
 HEAP32[$$3$i$i2867 + 16 >> 2] = $20556;
 HEAP32[$$3$i$i2867 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2867 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2867 + 48 >> 0] = 0;
 HEAP32[$414 >> 2] = $$3$i$i2867;
 _memcpy($20556 | 0, 1892738, 1568) | 0;
 _memcpy($$3$i$i2867 + 1620 | 0, 1894306, 1568) | 0;
 _memcpy($$3$i$i2867 + 3188 | 0, 1895874, 1568) | 0;
 _memcpy($$3$i$i2867 + 4756 | 0, 1897442, 1568) | 0;
 _memcpy($$3$i$i2867 + 6324 | 0, 1899010, 1568) | 0;
 _memcpy($$3$i$i2867 + 7892 | 0, 1900578, 1568) | 0;
 _memcpy($$3$i$i2867 + 9460 | 0, 1902146, 1568) | 0;
 _memcpy($$3$i$i2867 + 11028 | 0, 1903714, 1568) | 0;
 _memcpy($$3$i$i2867 + 12596 | 0, 1905282, 1568) | 0;
 _memcpy($$3$i$i2867 + 14164 | 0, 1906850, 1568) | 0;
 _memcpy($$3$i$i2867 + 15732 | 0, 1908418, 1568) | 0;
 _memcpy($$3$i$i2867 + 17300 | 0, 1909986, 1568) | 0;
 _memcpy($$3$i$i2867 + 18868 | 0, 1911554, 1568) | 0;
 _memcpy($$3$i$i2867 + 20436 | 0, 1913122, 1568) | 0;
 _memcpy($$3$i$i2867 + 22004 | 0, 1914690, 1568) | 0;
 _memcpy($$3$i$i2867 + 23572 | 0, 1916258, 1568) | 0;
 _memcpy($$3$i$i2867 + 25140 | 0, 1917826, 1568) | 0;
 _memcpy($$3$i$i2867 + 26708 | 0, 1919394, 1568) | 0;
 _memcpy($$3$i$i2867 + 28276 | 0, 1920962, 1568) | 0;
 _memcpy($$3$i$i2867 + 29844 | 0, 1922530, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $414);
 if ($$3$i$i2867 | 0) {
  $20586 = $$3$i$i2867 + 5 | 0;
  $20588 = (HEAP8[$20586 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$20586 >> 0] = $20588;
  if (!($20588 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2867);
  HEAP32[$414 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 94;
 HEAP16[$4325 >> 1] = 748;
 HEAP16[$4326 >> 1] = 876;
 HEAP16[$4327 >> 1] = 753;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 9460) label = 2788; else {
  $20592 = HEAP32[915090] | 0;
  if (($20592 | 0) == (HEAP32[915088] | 0)) label = 2788; else {
   $$lcssa$i$i2879 = 3660360;
   $$lcssa8$i$i2878 = $20592;
   label = 2789;
  }
 }
 do if ((label | 0) == 2788) {
  if ((HEAP32[915097] | 0) >>> 0 >= 9460) {
   $20599 = HEAP32[915096] | 0;
   if (($20599 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2879 = 3660384;
    $$lcssa8$i$i2878 = $20599;
    label = 2789;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 9460) {
   $20604 = HEAP32[915102] | 0;
   if (($20604 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2879 = 3660408;
    $$lcssa8$i$i2878 = $20604;
    label = 2789;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 9460) {
   $20609 = HEAP32[915108] | 0;
   if (($20609 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2879 = 3660432;
    $$lcssa8$i$i2878 = $20609;
    label = 2789;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 9460) {
   $20614 = HEAP32[915114] | 0;
   if (($20614 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2879 = 3660456;
    $$lcssa8$i$i2878 = $20614;
    label = 2789;
    break;
   }
  }
  $$3$i$i2880 = __Znwj(9460) | 0;
 } while (0);
 if ((label | 0) == 2789) {
  $20597 = $$lcssa8$i$i2878 + -4 | 0;
  HEAP32[$$lcssa$i$i2879 >> 2] = $20597;
  $$3$i$i2880 = HEAP32[$20597 >> 2] | 0;
 }
 $20618 = $$3$i$i2880 + 52 | 0;
 HEAP16[$$3$i$i2880 >> 1] = 784;
 HEAP16[$$3$i$i2880 + 2 >> 1] = 6;
 HEAP8[$$3$i$i2880 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2880 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2880 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i2880 + 12 >> 2] = 9408;
 HEAP32[$$3$i$i2880 + 16 >> 2] = $20618;
 HEAP32[$$3$i$i2880 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2880 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2880 + 48 >> 0] = 0;
 HEAP32[$415 >> 2] = $$3$i$i2880;
 _memcpy($20618 | 0, 1924098, 1568) | 0;
 _memcpy($$3$i$i2880 + 1620 | 0, 1925666, 1568) | 0;
 _memcpy($$3$i$i2880 + 3188 | 0, 1927234, 1568) | 0;
 _memcpy($$3$i$i2880 + 4756 | 0, 1928802, 1568) | 0;
 _memcpy($$3$i$i2880 + 6324 | 0, 1930370, 1568) | 0;
 _memcpy($$3$i$i2880 + 7892 | 0, 1931938, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $415);
 if ($$3$i$i2880 | 0) {
  $20634 = $$3$i$i2880 + 5 | 0;
  $20636 = (HEAP8[$20634 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$20634 >> 0] = $20636;
  if (!($20636 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2880);
  HEAP32[$415 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 94;
 HEAP16[$4328 >> 1] = 754;
 HEAP16[$4329 >> 1] = 876;
 HEAP16[$4330 >> 1] = 756;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4756) label = 2804; else {
  $20640 = HEAP32[915090] | 0;
  if (($20640 | 0) == (HEAP32[915088] | 0)) label = 2804; else {
   $$lcssa$i$i2891 = 3660360;
   $$lcssa8$i$i2890 = $20640;
   label = 2805;
  }
 }
 do if ((label | 0) == 2804) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4756) {
   $20647 = HEAP32[915096] | 0;
   if (($20647 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2891 = 3660384;
    $$lcssa8$i$i2890 = $20647;
    label = 2805;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4756) {
   $20652 = HEAP32[915102] | 0;
   if (($20652 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2891 = 3660408;
    $$lcssa8$i$i2890 = $20652;
    label = 2805;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4756) {
   $20657 = HEAP32[915108] | 0;
   if (($20657 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2891 = 3660432;
    $$lcssa8$i$i2890 = $20657;
    label = 2805;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4756) {
   $20662 = HEAP32[915114] | 0;
   if (($20662 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2891 = 3660456;
    $$lcssa8$i$i2890 = $20662;
    label = 2805;
    break;
   }
  }
  $$3$i$i2892 = __Znwj(4756) | 0;
 } while (0);
 if ((label | 0) == 2805) {
  $20645 = $$lcssa8$i$i2890 + -4 | 0;
  HEAP32[$$lcssa$i$i2891 >> 2] = $20645;
  $$3$i$i2892 = HEAP32[$20645 >> 2] | 0;
 }
 $20666 = $$3$i$i2892 + 52 | 0;
 HEAP16[$$3$i$i2892 >> 1] = 784;
 HEAP16[$$3$i$i2892 + 2 >> 1] = 3;
 HEAP8[$$3$i$i2892 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2892 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2892 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i2892 + 12 >> 2] = 4704;
 HEAP32[$$3$i$i2892 + 16 >> 2] = $20666;
 HEAP32[$$3$i$i2892 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2892 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2892 + 48 >> 0] = 0;
 HEAP32[$416 >> 2] = $$3$i$i2892;
 _memcpy($20666 | 0, 1933506, 1568) | 0;
 _memcpy($$3$i$i2892 + 1620 | 0, 1935074, 1568) | 0;
 _memcpy($$3$i$i2892 + 3188 | 0, 1936642, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $416);
 if ($$3$i$i2892 | 0) {
  $20679 = $$3$i$i2892 + 5 | 0;
  $20681 = (HEAP8[$20679 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$20679 >> 0] = $20681;
  if (!($20681 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2892);
  HEAP32[$416 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 94;
 HEAP16[$4331 >> 1] = 757;
 HEAP16[$4332 >> 1] = 876;
 HEAP16[$4333 >> 1] = 759;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4756) label = 2820; else {
  $20685 = HEAP32[915090] | 0;
  if (($20685 | 0) == (HEAP32[915088] | 0)) label = 2820; else {
   $$lcssa$i$i2914 = 3660360;
   $$lcssa8$i$i2913 = $20685;
   label = 2821;
  }
 }
 do if ((label | 0) == 2820) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4756) {
   $20692 = HEAP32[915096] | 0;
   if (($20692 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2914 = 3660384;
    $$lcssa8$i$i2913 = $20692;
    label = 2821;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4756) {
   $20697 = HEAP32[915102] | 0;
   if (($20697 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2914 = 3660408;
    $$lcssa8$i$i2913 = $20697;
    label = 2821;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4756) {
   $20702 = HEAP32[915108] | 0;
   if (($20702 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2914 = 3660432;
    $$lcssa8$i$i2913 = $20702;
    label = 2821;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4756) {
   $20707 = HEAP32[915114] | 0;
   if (($20707 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2914 = 3660456;
    $$lcssa8$i$i2913 = $20707;
    label = 2821;
    break;
   }
  }
  $$3$i$i2915 = __Znwj(4756) | 0;
 } while (0);
 if ((label | 0) == 2821) {
  $20690 = $$lcssa8$i$i2913 + -4 | 0;
  HEAP32[$$lcssa$i$i2914 >> 2] = $20690;
  $$3$i$i2915 = HEAP32[$20690 >> 2] | 0;
 }
 $20711 = $$3$i$i2915 + 52 | 0;
 HEAP16[$$3$i$i2915 >> 1] = 784;
 HEAP16[$$3$i$i2915 + 2 >> 1] = 3;
 HEAP8[$$3$i$i2915 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2915 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2915 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i2915 + 12 >> 2] = 4704;
 HEAP32[$$3$i$i2915 + 16 >> 2] = $20711;
 HEAP32[$$3$i$i2915 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2915 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2915 + 48 >> 0] = 0;
 HEAP32[$417 >> 2] = $$3$i$i2915;
 _memcpy($20711 | 0, 1938210, 1568) | 0;
 _memcpy($$3$i$i2915 + 1620 | 0, 1939778, 1568) | 0;
 _memcpy($$3$i$i2915 + 3188 | 0, 1941346, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $417);
 if ($$3$i$i2915 | 0) {
  $20724 = $$3$i$i2915 + 5 | 0;
  $20726 = (HEAP8[$20724 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$20724 >> 0] = $20726;
  if (!($20726 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2915);
  HEAP32[$417 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 94;
 HEAP16[$4334 >> 1] = 760;
 HEAP16[$4335 >> 1] = 876;
 HEAP16[$4336 >> 1] = 765;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 9460) label = 2836; else {
  $20730 = HEAP32[915090] | 0;
  if (($20730 | 0) == (HEAP32[915088] | 0)) label = 2836; else {
   $$lcssa$i$i2926 = 3660360;
   $$lcssa8$i$i2925 = $20730;
   label = 2837;
  }
 }
 do if ((label | 0) == 2836) {
  if ((HEAP32[915097] | 0) >>> 0 >= 9460) {
   $20737 = HEAP32[915096] | 0;
   if (($20737 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2926 = 3660384;
    $$lcssa8$i$i2925 = $20737;
    label = 2837;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 9460) {
   $20742 = HEAP32[915102] | 0;
   if (($20742 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2926 = 3660408;
    $$lcssa8$i$i2925 = $20742;
    label = 2837;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 9460) {
   $20747 = HEAP32[915108] | 0;
   if (($20747 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2926 = 3660432;
    $$lcssa8$i$i2925 = $20747;
    label = 2837;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 9460) {
   $20752 = HEAP32[915114] | 0;
   if (($20752 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2926 = 3660456;
    $$lcssa8$i$i2925 = $20752;
    label = 2837;
    break;
   }
  }
  $$3$i$i2927 = __Znwj(9460) | 0;
 } while (0);
 if ((label | 0) == 2837) {
  $20735 = $$lcssa8$i$i2925 + -4 | 0;
  HEAP32[$$lcssa$i$i2926 >> 2] = $20735;
  $$3$i$i2927 = HEAP32[$20735 >> 2] | 0;
 }
 $20756 = $$3$i$i2927 + 52 | 0;
 HEAP16[$$3$i$i2927 >> 1] = 784;
 HEAP16[$$3$i$i2927 + 2 >> 1] = 6;
 HEAP8[$$3$i$i2927 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2927 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2927 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i2927 + 12 >> 2] = 9408;
 HEAP32[$$3$i$i2927 + 16 >> 2] = $20756;
 HEAP32[$$3$i$i2927 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2927 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2927 + 48 >> 0] = 0;
 HEAP32[$418 >> 2] = $$3$i$i2927;
 _memcpy($20756 | 0, 1942914, 1568) | 0;
 _memcpy($$3$i$i2927 + 1620 | 0, 1944482, 1568) | 0;
 _memcpy($$3$i$i2927 + 3188 | 0, 1946050, 1568) | 0;
 _memcpy($$3$i$i2927 + 4756 | 0, 1947618, 1568) | 0;
 _memcpy($$3$i$i2927 + 6324 | 0, 1949186, 1568) | 0;
 _memcpy($$3$i$i2927 + 7892 | 0, 1950754, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $418);
 if ($$3$i$i2927 | 0) {
  $20772 = $$3$i$i2927 + 5 | 0;
  $20774 = (HEAP8[$20772 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$20772 >> 0] = $20774;
  if (!($20774 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2927);
  HEAP32[$418 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 890;
 HEAP16[$4337 >> 1] = 728;
 HEAP16[$4338 >> 1] = 917;
 HEAP16[$4339 >> 1] = 765;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2180) label = 2852; else {
  $20778 = HEAP32[915090] | 0;
  if (($20778 | 0) == (HEAP32[915088] | 0)) label = 2852; else {
   $$lcssa$i$i2939 = 3660360;
   $$lcssa8$i$i2938 = $20778;
   label = 2853;
  }
 }
 do if ((label | 0) == 2852) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2180) {
   $20785 = HEAP32[915096] | 0;
   if (($20785 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2939 = 3660384;
    $$lcssa8$i$i2938 = $20785;
    label = 2853;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2180) {
   $20790 = HEAP32[915102] | 0;
   if (($20790 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2939 = 3660408;
    $$lcssa8$i$i2938 = $20790;
    label = 2853;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2180) {
   $20795 = HEAP32[915108] | 0;
   if (($20795 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2939 = 3660432;
    $$lcssa8$i$i2938 = $20795;
    label = 2853;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2180) {
   $20800 = HEAP32[915114] | 0;
   if (($20800 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2939 = 3660456;
    $$lcssa8$i$i2938 = $20800;
    label = 2853;
    break;
   }
  }
  $$3$i$i2940 = __Znwj(2180) | 0;
 } while (0);
 if ((label | 0) == 2853) {
  $20783 = $$lcssa8$i$i2938 + -4 | 0;
  HEAP32[$$lcssa$i$i2939 >> 2] = $20783;
  $$3$i$i2940 = HEAP32[$20783 >> 2] | 0;
 }
 $20804 = $$3$i$i2940 + 52 | 0;
 HEAP16[$$3$i$i2940 >> 1] = 28;
 HEAP16[$$3$i$i2940 + 2 >> 1] = 38;
 HEAP8[$$3$i$i2940 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2940 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2940 + 8 >> 2] = 56;
 HEAP32[$$3$i$i2940 + 12 >> 2] = 2128;
 HEAP32[$$3$i$i2940 + 16 >> 2] = $20804;
 HEAP32[$$3$i$i2940 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2940 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2940 + 48 >> 0] = 0;
 HEAP32[$419 >> 2] = $$3$i$i2940;
 dest = $20804;
 src = 1952322;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 108 | 0;
 src = 1952378;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 164 | 0;
 src = 1952434;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 220 | 0;
 src = 1952490;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 276 | 0;
 src = 1952546;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 332 | 0;
 src = 1952602;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 388 | 0;
 src = 1952658;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 444 | 0;
 src = 1952714;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 500 | 0;
 src = 1952770;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 556 | 0;
 src = 1952826;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 612 | 0;
 src = 1952882;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 668 | 0;
 src = 1952938;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 724 | 0;
 src = 1952994;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 780 | 0;
 src = 1953050;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 836 | 0;
 src = 1953106;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 892 | 0;
 src = 1953162;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 948 | 0;
 src = 1953218;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1004 | 0;
 src = 1953274;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1060 | 0;
 src = 1953330;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1116 | 0;
 src = 1953386;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1172 | 0;
 src = 1953442;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1228 | 0;
 src = 1953498;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1284 | 0;
 src = 1953554;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1340 | 0;
 src = 1953610;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1396 | 0;
 src = 1953666;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1452 | 0;
 src = 1953722;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1508 | 0;
 src = 1953778;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1564 | 0;
 src = 1953834;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1620 | 0;
 src = 1953890;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1676 | 0;
 src = 1953946;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1732 | 0;
 src = 1954002;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1788 | 0;
 src = 1954058;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1844 | 0;
 src = 1954114;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1900 | 0;
 src = 1954170;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 1956 | 0;
 src = 1954226;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 2012 | 0;
 src = 1954282;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 2068 | 0;
 src = 1954338;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2940 + 2124 | 0;
 src = 1954394;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $419);
 if ($$3$i$i2940 | 0) {
  $20852 = $$3$i$i2940 + 5 | 0;
  $20854 = (HEAP8[$20852 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$20852 >> 0] = $20854;
  if (!($20854 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2940);
  HEAP32[$419 >> 2] = 0;
 }
 $20856 = $420;
 HEAP32[$20856 >> 2] = 47710210;
 HEAP32[$20856 + 4 >> 2] = 2490451;
 HEAP32[$4340 >> 2] = 54937;
 HEAP16[$421 >> 1] = 80;
 HEAP16[$4341 >> 1] = 728;
 HEAP16[$4342 >> 1] = 5;
 HEAP16[$4343 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $420, $421);
 $20860 = $422;
 HEAP32[$20860 >> 2] = 47710210;
 HEAP32[$20860 + 4 >> 2] = 2490451;
 HEAP32[$4344 >> 2] = 54937;
 HEAP16[$423 >> 1] = 80;
 HEAP16[$4345 >> 1] = 728;
 HEAP16[$4346 >> 1] = 5;
 HEAP16[$4347 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $422, $423);
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 2;
 HEAP16[$4348 >> 1] = 728;
 HEAP16[$4349 >> 1] = 79;
 HEAP16[$4350 >> 1] = 765;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6132) label = 2868; else {
  $20866 = HEAP32[915090] | 0;
  if (($20866 | 0) == (HEAP32[915088] | 0)) label = 2868; else {
   $$lcssa$i$i2974 = 3660360;
   $$lcssa8$i$i2973 = $20866;
   label = 2869;
  }
 }
 do if ((label | 0) == 2868) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6132) {
   $20873 = HEAP32[915096] | 0;
   if (($20873 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2974 = 3660384;
    $$lcssa8$i$i2973 = $20873;
    label = 2869;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6132) {
   $20878 = HEAP32[915102] | 0;
   if (($20878 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2974 = 3660408;
    $$lcssa8$i$i2973 = $20878;
    label = 2869;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6132) {
   $20883 = HEAP32[915108] | 0;
   if (($20883 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2974 = 3660432;
    $$lcssa8$i$i2973 = $20883;
    label = 2869;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6132) {
   $20888 = HEAP32[915114] | 0;
   if (($20888 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2974 = 3660456;
    $$lcssa8$i$i2973 = $20888;
    label = 2869;
    break;
   }
  }
  $$3$i$i2975 = __Znwj(6132) | 0;
 } while (0);
 if ((label | 0) == 2869) {
  $20871 = $$lcssa8$i$i2973 + -4 | 0;
  HEAP32[$$lcssa$i$i2974 >> 2] = $20871;
  $$3$i$i2975 = HEAP32[$20871 >> 2] | 0;
 }
 $20892 = $$3$i$i2975 + 52 | 0;
 HEAP16[$$3$i$i2975 >> 1] = 80;
 HEAP16[$$3$i$i2975 + 2 >> 1] = 38;
 HEAP8[$$3$i$i2975 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2975 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2975 + 8 >> 2] = 160;
 HEAP32[$$3$i$i2975 + 12 >> 2] = 6080;
 HEAP32[$$3$i$i2975 + 16 >> 2] = $20892;
 HEAP32[$$3$i$i2975 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2975 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2975 + 48 >> 0] = 0;
 HEAP32[$424 >> 2] = $$3$i$i2975;
 _memcpy($20892 | 0, 1954450, 160) | 0;
 _memcpy($$3$i$i2975 + 212 | 0, 1954610, 160) | 0;
 _memcpy($$3$i$i2975 + 372 | 0, 1954770, 160) | 0;
 _memcpy($$3$i$i2975 + 532 | 0, 1954930, 160) | 0;
 _memcpy($$3$i$i2975 + 692 | 0, 1955090, 160) | 0;
 _memcpy($$3$i$i2975 + 852 | 0, 1955250, 160) | 0;
 _memcpy($$3$i$i2975 + 1012 | 0, 1955410, 160) | 0;
 _memcpy($$3$i$i2975 + 1172 | 0, 1955570, 160) | 0;
 _memcpy($$3$i$i2975 + 1332 | 0, 1955730, 160) | 0;
 _memcpy($$3$i$i2975 + 1492 | 0, 1955890, 160) | 0;
 _memcpy($$3$i$i2975 + 1652 | 0, 1956050, 160) | 0;
 _memcpy($$3$i$i2975 + 1812 | 0, 1956210, 160) | 0;
 _memcpy($$3$i$i2975 + 1972 | 0, 1956370, 160) | 0;
 _memcpy($$3$i$i2975 + 2132 | 0, 1956530, 160) | 0;
 _memcpy($$3$i$i2975 + 2292 | 0, 1956690, 160) | 0;
 _memcpy($$3$i$i2975 + 2452 | 0, 1956850, 160) | 0;
 _memcpy($$3$i$i2975 + 2612 | 0, 1957010, 160) | 0;
 _memcpy($$3$i$i2975 + 2772 | 0, 1957170, 160) | 0;
 _memcpy($$3$i$i2975 + 2932 | 0, 1957330, 160) | 0;
 _memcpy($$3$i$i2975 + 3092 | 0, 1957490, 160) | 0;
 _memcpy($$3$i$i2975 + 3252 | 0, 1957650, 160) | 0;
 _memcpy($$3$i$i2975 + 3412 | 0, 1957810, 160) | 0;
 _memcpy($$3$i$i2975 + 3572 | 0, 1957970, 160) | 0;
 _memcpy($$3$i$i2975 + 3732 | 0, 1958130, 160) | 0;
 _memcpy($$3$i$i2975 + 3892 | 0, 1958290, 160) | 0;
 _memcpy($$3$i$i2975 + 4052 | 0, 1958450, 160) | 0;
 _memcpy($$3$i$i2975 + 4212 | 0, 1958610, 160) | 0;
 _memcpy($$3$i$i2975 + 4372 | 0, 1958770, 160) | 0;
 _memcpy($$3$i$i2975 + 4532 | 0, 1958930, 160) | 0;
 _memcpy($$3$i$i2975 + 4692 | 0, 1959090, 160) | 0;
 _memcpy($$3$i$i2975 + 4852 | 0, 1959250, 160) | 0;
 _memcpy($$3$i$i2975 + 5012 | 0, 1959410, 160) | 0;
 _memcpy($$3$i$i2975 + 5172 | 0, 1959570, 160) | 0;
 _memcpy($$3$i$i2975 + 5332 | 0, 1959730, 160) | 0;
 _memcpy($$3$i$i2975 + 5492 | 0, 1959890, 160) | 0;
 _memcpy($$3$i$i2975 + 5652 | 0, 1960050, 160) | 0;
 _memcpy($$3$i$i2975 + 5812 | 0, 1960210, 160) | 0;
 _memcpy($$3$i$i2975 + 5972 | 0, 1960370, 160) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $424);
 if ($$3$i$i2975 | 0) {
  $20940 = $$3$i$i2975 + 5 | 0;
  $20942 = (HEAP8[$20940 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$20940 >> 0] = $20942;
  if (!($20942 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2975);
  HEAP32[$424 >> 2] = 0;
 }
 $20944 = $425;
 HEAP32[$20944 >> 2] = 47711229;
 HEAP32[$20944 + 4 >> 2] = 2490369;
 HEAP32[$4351 >> 2] = 65535;
 HEAP16[$426 >> 1] = 1021;
 HEAP16[$4352 >> 1] = 728;
 HEAP16[$4353 >> 1] = 1;
 HEAP16[$4354 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $425, $426);
 $20948 = $427;
 HEAP32[$20948 >> 2] = 50135928;
 HEAP32[$20948 + 4 >> 2] = 65669;
 HEAP32[$4355 >> 2] = 65535;
 HEAP16[$428 >> 1] = 888;
 HEAP16[$4356 >> 1] = 765;
 HEAP16[$4357 >> 1] = 133;
 HEAP16[$4358 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $427, $428);
 $20952 = $429;
 HEAP32[$20952 >> 2] = 47711096;
 HEAP32[$20952 + 4 >> 2] = 2424833;
 HEAP32[$4359 >> 2] = 33808;
 HEAP16[$430 >> 1] = 888;
 HEAP16[$4360 >> 1] = 728;
 HEAP16[$4361 >> 1] = 1;
 HEAP16[$4362 >> 1] = 37;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $429, $430);
 $20956 = $431;
 HEAP32[$20956 >> 2] = 47711097;
 HEAP32[$20956 + 4 >> 2] = 65668;
 HEAP32[$4363 >> 2] = 33808;
 HEAP16[$432 >> 1] = 889;
 HEAP16[$4364 >> 1] = 728;
 HEAP16[$4365 >> 1] = 132;
 HEAP16[$4366 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $431, $432);
 $20960 = $433;
 HEAP32[$20960 >> 2] = 47776735;
 HEAP32[$20960 + 4 >> 2] = 2359326;
 HEAP32[$4367 >> 2] = 54937;
 HEAP16[$434 >> 1] = 991;
 HEAP16[$4368 >> 1] = 729;
 HEAP16[$4369 >> 1] = 30;
 HEAP16[$4370 >> 1] = 36;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $433, $434);
 $20964 = $435;
 HEAP32[$20964 >> 2] = 47710293;
 HEAP32[$20964 + 4 >> 2] = 2491171;
 HEAP32[$4371 >> 2] = 54937;
 HEAP16[$436 >> 1] = 85;
 HEAP16[$4372 >> 1] = 728;
 HEAP16[$4373 >> 1] = 9;
 HEAP16[$4374 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $435, $436);
 $20968 = $437;
 HEAP32[$20968 >> 2] = 47710293;
 HEAP32[$20968 + 4 >> 2] = 2491171;
 HEAP32[$4375 >> 2] = 54937;
 HEAP16[$438 >> 1] = 877;
 HEAP16[$4376 >> 1] = 728;
 HEAP16[$4377 >> 1] = 11;
 HEAP16[$4378 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $437, $438);
 $20972 = $439;
 HEAP32[$20972 >> 2] = 47710293;
 HEAP32[$20972 + 4 >> 2] = 2491143;
 HEAP32[$4379 >> 2] = 54937;
 HEAP16[$440 >> 1] = 85;
 HEAP16[$4380 >> 1] = 728;
 HEAP16[$4381 >> 1] = 9;
 HEAP16[$4382 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $439, $440);
 $20976 = $441;
 HEAP32[$20976 >> 2] = 47710293;
 HEAP32[$20976 + 4 >> 2] = 2491143;
 HEAP32[$4383 >> 2] = 54937;
 HEAP16[$442 >> 1] = 847;
 HEAP16[$4384 >> 1] = 728;
 HEAP16[$4385 >> 1] = 13;
 HEAP16[$4386 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $441, $442);
 $20980 = $443;
 HEAP32[$20980 >> 2] = 47776649;
 HEAP32[$20980 + 4 >> 2] = 2359326;
 HEAP32[$4387 >> 2] = 54937;
 HEAP16[$444 >> 1] = 905;
 HEAP16[$4388 >> 1] = 729;
 HEAP16[$4389 >> 1] = 30;
 HEAP16[$4390 >> 1] = 36;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $443, $444);
 $20984 = $445;
 HEAP32[$20984 >> 2] = 47710210;
 HEAP32[$20984 + 4 >> 2] = 2490451;
 HEAP32[$4391 >> 2] = 54937;
 HEAP16[$446 >> 1] = 80;
 HEAP16[$4392 >> 1] = 728;
 HEAP16[$4393 >> 1] = 5;
 HEAP16[$4394 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $445, $446);
 $20988 = $447;
 HEAP32[$20988 >> 2] = 47710210;
 HEAP32[$20988 + 4 >> 2] = 2490451;
 HEAP32[$4395 >> 2] = 54937;
 HEAP16[$448 >> 1] = 80;
 HEAP16[$4396 >> 1] = 728;
 HEAP16[$4397 >> 1] = 5;
 HEAP16[$4398 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $447, $448);
 $20992 = $449;
 HEAP32[$20992 >> 2] = 47776633;
 HEAP32[$20992 + 4 >> 2] = 2359312;
 HEAP32[$4399 >> 2] = 54937;
 HEAP16[$450 >> 1] = 889;
 HEAP16[$4400 >> 1] = 729;
 HEAP16[$4401 >> 1] = 16;
 HEAP16[$4402 >> 1] = 36;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $449, $450);
 $20996 = $451;
 HEAP32[$20996 >> 2] = 48694143;
 HEAP32[$20996 + 4 >> 2] = 131073;
 HEAP32[$4403 >> 2] = 0;
 HEAP16[$452 >> 1] = 895;
 HEAP16[$4404 >> 1] = 743;
 HEAP16[$4405 >> 1] = 1;
 HEAP16[$4406 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $451, $452);
 $21000 = $453;
 HEAP32[$21000 >> 2] = 48956287;
 HEAP32[$21000 + 4 >> 2] = 131073;
 HEAP32[$4407 >> 2] = 0;
 HEAP16[$454 >> 1] = 895;
 HEAP16[$4408 >> 1] = 747;
 HEAP16[$4409 >> 1] = 1;
 HEAP16[$4410 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $453, $454);
 $21004 = $455;
 HEAP32[$21004 >> 2] = 48628608;
 HEAP32[$21004 + 4 >> 2] = 131073;
 HEAP32[$4411 >> 2] = 0;
 HEAP16[$456 >> 1] = 896;
 HEAP16[$4412 >> 1] = 742;
 HEAP16[$4413 >> 1] = 1;
 HEAP16[$4414 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $455, $456);
 $21008 = $457;
 HEAP32[$21008 >> 2] = 48890752;
 HEAP32[$21008 + 4 >> 2] = 131073;
 HEAP32[$4415 >> 2] = 0;
 HEAP16[$458 >> 1] = 896;
 HEAP16[$4416 >> 1] = 746;
 HEAP16[$4417 >> 1] = 1;
 HEAP16[$4418 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $457, $458);
 $21012 = $459;
 HEAP32[$21012 >> 2] = 48563073;
 HEAP32[$21012 + 4 >> 2] = 131073;
 HEAP32[$4419 >> 2] = 0;
 HEAP16[$460 >> 1] = 897;
 HEAP16[$4420 >> 1] = 741;
 HEAP16[$4421 >> 1] = 1;
 HEAP16[$4422 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $459, $460);
 $21016 = $461;
 HEAP32[$21016 >> 2] = 48825217;
 HEAP32[$21016 + 4 >> 2] = 131073;
 HEAP32[$4423 >> 2] = 0;
 HEAP16[$462 >> 1] = 897;
 HEAP16[$4424 >> 1] = 745;
 HEAP16[$4425 >> 1] = 1;
 HEAP16[$4426 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $461, $462);
 $21020 = $463;
 HEAP32[$21020 >> 2] = 48628610;
 HEAP32[$21020 + 4 >> 2] = 131073;
 HEAP32[$4427 >> 2] = 0;
 HEAP16[$464 >> 1] = 898;
 HEAP16[$4428 >> 1] = 742;
 HEAP16[$4429 >> 1] = 1;
 HEAP16[$4430 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $463, $464);
 $21024 = $465;
 HEAP32[$21024 >> 2] = 48890754;
 HEAP32[$21024 + 4 >> 2] = 131073;
 HEAP32[$4431 >> 2] = 0;
 HEAP16[$466 >> 1] = 898;
 HEAP16[$4432 >> 1] = 746;
 HEAP16[$4433 >> 1] = 1;
 HEAP16[$4434 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $465, $466);
 $21028 = $467;
 HEAP32[$21028 >> 2] = 48694147;
 HEAP32[$21028 + 4 >> 2] = 131073;
 HEAP32[$4435 >> 2] = 0;
 HEAP16[$468 >> 1] = 899;
 HEAP16[$4436 >> 1] = 743;
 HEAP16[$4437 >> 1] = 1;
 HEAP16[$4438 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $467, $468);
 $21032 = $469;
 HEAP32[$21032 >> 2] = 48956291;
 HEAP32[$21032 + 4 >> 2] = 131073;
 HEAP32[$4439 >> 2] = 0;
 HEAP16[$470 >> 1] = 899;
 HEAP16[$4440 >> 1] = 747;
 HEAP16[$4441 >> 1] = 1;
 HEAP16[$4442 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $469, $470);
 $21036 = $471;
 HEAP32[$21036 >> 2] = 47841369;
 HEAP32[$21036 + 4 >> 2] = 2228225;
 HEAP32[$4443 >> 2] = 33808;
 HEAP16[$472 >> 1] = 89;
 HEAP16[$4444 >> 1] = 730;
 HEAP16[$4445 >> 1] = 1;
 HEAP16[$4446 >> 1] = 34;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $471, $472);
 $21040 = $473;
 HEAP32[$21040 >> 2] = 50004055;
 HEAP32[$21040 + 4 >> 2] = 65538;
 HEAP32[$4447 >> 2] = 33808;
 HEAP16[$474 >> 1] = 87;
 HEAP16[$4448 >> 1] = 763;
 HEAP16[$4449 >> 1] = 2;
 HEAP16[$4450 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $473, $474);
 $21044 = $475;
 HEAP32[$21044 >> 2] = 47841367;
 HEAP32[$21044 + 4 >> 2] = 2162689;
 HEAP32[$4451 >> 2] = 65535;
 HEAP16[$476 >> 1] = 87;
 HEAP16[$4452 >> 1] = 730;
 HEAP16[$4453 >> 1] = 1;
 HEAP16[$4454 >> 1] = 33;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $475, $476);
 $21048 = $477;
 HEAP32[$21048 >> 2] = 47841368;
 HEAP32[$21048 + 4 >> 2] = 65537;
 HEAP32[$4455 >> 2] = 65535;
 HEAP16[$478 >> 1] = 88;
 HEAP16[$4456 >> 1] = 730;
 HEAP16[$4457 >> 1] = 1;
 HEAP16[$4458 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $477, $478);
 $21052 = $479;
 HEAP32[$21052 >> 2] = 47906904;
 HEAP32[$21052 + 4 >> 2] = 2097153;
 HEAP32[$4459 >> 2] = 54937;
 HEAP16[$480 >> 1] = 88;
 HEAP16[$4460 >> 1] = 731;
 HEAP16[$4461 >> 1] = 1;
 HEAP16[$4462 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $479, $480);
 $21056 = $481;
 HEAP32[$21056 >> 2] = 47842135;
 HEAP32[$21056 + 4 >> 2] = 2228225;
 HEAP32[$4463 >> 2] = 33808;
 HEAP16[$482 >> 1] = 855;
 HEAP16[$4464 >> 1] = 730;
 HEAP16[$4465 >> 1] = 1;
 HEAP16[$4466 >> 1] = 34;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $481, $482);
 $21060 = $483;
 HEAP32[$21060 >> 2] = 50004821;
 HEAP32[$21060 + 4 >> 2] = 65538;
 HEAP32[$4467 >> 2] = 33808;
 HEAP16[$484 >> 1] = 853;
 HEAP16[$4468 >> 1] = 763;
 HEAP16[$4469 >> 1] = 2;
 HEAP16[$4470 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $483, $484);
 $21064 = $485;
 HEAP32[$21064 >> 2] = 47842133;
 HEAP32[$21064 + 4 >> 2] = 2162689;
 HEAP32[$4471 >> 2] = 65535;
 HEAP16[$486 >> 1] = 853;
 HEAP16[$4472 >> 1] = 730;
 HEAP16[$4473 >> 1] = 1;
 HEAP16[$4474 >> 1] = 33;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $485, $486);
 $21068 = $487;
 HEAP32[$21068 >> 2] = 47842134;
 HEAP32[$21068 + 4 >> 2] = 65537;
 HEAP32[$4475 >> 2] = 65535;
 HEAP16[$488 >> 1] = 854;
 HEAP16[$4476 >> 1] = 730;
 HEAP16[$4477 >> 1] = 1;
 HEAP16[$4478 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $487, $488);
 $21072 = $489;
 HEAP32[$21072 >> 2] = 47907670;
 HEAP32[$21072 + 4 >> 2] = 2097153;
 HEAP32[$4479 >> 2] = 54937;
 HEAP16[$490 >> 1] = 854;
 HEAP16[$4480 >> 1] = 731;
 HEAP16[$4481 >> 1] = 1;
 HEAP16[$4482 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $489, $490);
 $21076 = $491;
 HEAP32[$21076 >> 2] = 47710210;
 HEAP32[$21076 + 4 >> 2] = 2490451;
 HEAP32[$4483 >> 2] = 54937;
 HEAP16[$492 >> 1] = 80;
 HEAP16[$4484 >> 1] = 728;
 HEAP16[$4485 >> 1] = 5;
 HEAP16[$4486 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $491, $492);
 $21080 = $493;
 HEAP32[$21080 >> 2] = 47710210;
 HEAP32[$21080 + 4 >> 2] = 2490451;
 HEAP32[$4487 >> 2] = 54937;
 HEAP16[$494 >> 1] = 80;
 HEAP16[$4488 >> 1] = 728;
 HEAP16[$4489 >> 1] = 5;
 HEAP16[$4490 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $493, $494);
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 2;
 HEAP16[$4491 >> 1] = 728;
 HEAP16[$4492 >> 1] = 79;
 HEAP16[$4493 >> 1] = 765;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6132) label = 2884; else {
  $21086 = HEAP32[915090] | 0;
  if (($21086 | 0) == (HEAP32[915088] | 0)) label = 2884; else {
   $$lcssa$i$i3106 = 3660360;
   $$lcssa8$i$i3105 = $21086;
   label = 2885;
  }
 }
 do if ((label | 0) == 2884) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6132) {
   $21093 = HEAP32[915096] | 0;
   if (($21093 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3106 = 3660384;
    $$lcssa8$i$i3105 = $21093;
    label = 2885;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6132) {
   $21098 = HEAP32[915102] | 0;
   if (($21098 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3106 = 3660408;
    $$lcssa8$i$i3105 = $21098;
    label = 2885;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6132) {
   $21103 = HEAP32[915108] | 0;
   if (($21103 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3106 = 3660432;
    $$lcssa8$i$i3105 = $21103;
    label = 2885;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6132) {
   $21108 = HEAP32[915114] | 0;
   if (($21108 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3106 = 3660456;
    $$lcssa8$i$i3105 = $21108;
    label = 2885;
    break;
   }
  }
  $$3$i$i3107 = __Znwj(6132) | 0;
 } while (0);
 if ((label | 0) == 2885) {
  $21091 = $$lcssa8$i$i3105 + -4 | 0;
  HEAP32[$$lcssa$i$i3106 >> 2] = $21091;
  $$3$i$i3107 = HEAP32[$21091 >> 2] | 0;
 }
 $21112 = $$3$i$i3107 + 52 | 0;
 HEAP16[$$3$i$i3107 >> 1] = 80;
 HEAP16[$$3$i$i3107 + 2 >> 1] = 38;
 HEAP8[$$3$i$i3107 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3107 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3107 + 8 >> 2] = 160;
 HEAP32[$$3$i$i3107 + 12 >> 2] = 6080;
 HEAP32[$$3$i$i3107 + 16 >> 2] = $21112;
 HEAP32[$$3$i$i3107 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3107 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3107 + 48 >> 0] = 0;
 HEAP32[$495 >> 2] = $$3$i$i3107;
 _memcpy($21112 | 0, 1960530, 160) | 0;
 _memcpy($$3$i$i3107 + 212 | 0, 1960690, 160) | 0;
 _memcpy($$3$i$i3107 + 372 | 0, 1960850, 160) | 0;
 _memcpy($$3$i$i3107 + 532 | 0, 1961010, 160) | 0;
 _memcpy($$3$i$i3107 + 692 | 0, 1961170, 160) | 0;
 _memcpy($$3$i$i3107 + 852 | 0, 1961330, 160) | 0;
 _memcpy($$3$i$i3107 + 1012 | 0, 1961490, 160) | 0;
 _memcpy($$3$i$i3107 + 1172 | 0, 1961650, 160) | 0;
 _memcpy($$3$i$i3107 + 1332 | 0, 1961810, 160) | 0;
 _memcpy($$3$i$i3107 + 1492 | 0, 1961970, 160) | 0;
 _memcpy($$3$i$i3107 + 1652 | 0, 1962130, 160) | 0;
 _memcpy($$3$i$i3107 + 1812 | 0, 1962290, 160) | 0;
 _memcpy($$3$i$i3107 + 1972 | 0, 1962450, 160) | 0;
 _memcpy($$3$i$i3107 + 2132 | 0, 1962610, 160) | 0;
 _memcpy($$3$i$i3107 + 2292 | 0, 1962770, 160) | 0;
 _memcpy($$3$i$i3107 + 2452 | 0, 1962930, 160) | 0;
 _memcpy($$3$i$i3107 + 2612 | 0, 1963090, 160) | 0;
 _memcpy($$3$i$i3107 + 2772 | 0, 1963250, 160) | 0;
 _memcpy($$3$i$i3107 + 2932 | 0, 1963410, 160) | 0;
 _memcpy($$3$i$i3107 + 3092 | 0, 1963570, 160) | 0;
 _memcpy($$3$i$i3107 + 3252 | 0, 1963730, 160) | 0;
 _memcpy($$3$i$i3107 + 3412 | 0, 1963890, 160) | 0;
 _memcpy($$3$i$i3107 + 3572 | 0, 1964050, 160) | 0;
 _memcpy($$3$i$i3107 + 3732 | 0, 1964210, 160) | 0;
 _memcpy($$3$i$i3107 + 3892 | 0, 1964370, 160) | 0;
 _memcpy($$3$i$i3107 + 4052 | 0, 1964530, 160) | 0;
 _memcpy($$3$i$i3107 + 4212 | 0, 1964690, 160) | 0;
 _memcpy($$3$i$i3107 + 4372 | 0, 1964850, 160) | 0;
 _memcpy($$3$i$i3107 + 4532 | 0, 1965010, 160) | 0;
 _memcpy($$3$i$i3107 + 4692 | 0, 1965170, 160) | 0;
 _memcpy($$3$i$i3107 + 4852 | 0, 1965330, 160) | 0;
 _memcpy($$3$i$i3107 + 5012 | 0, 1965490, 160) | 0;
 _memcpy($$3$i$i3107 + 5172 | 0, 1965650, 160) | 0;
 _memcpy($$3$i$i3107 + 5332 | 0, 1965810, 160) | 0;
 _memcpy($$3$i$i3107 + 5492 | 0, 1965970, 160) | 0;
 _memcpy($$3$i$i3107 + 5652 | 0, 1966130, 160) | 0;
 _memcpy($$3$i$i3107 + 5812 | 0, 1966290, 160) | 0;
 _memcpy($$3$i$i3107 + 5972 | 0, 1966450, 160) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $495);
 if ($$3$i$i3107 | 0) {
  $21160 = $$3$i$i3107 + 5 | 0;
  $21162 = (HEAP8[$21160 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$21160 >> 0] = $21162;
  if (!($21162 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3107);
  HEAP32[$495 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 94;
 HEAP16[$4494 >> 1] = 728;
 HEAP16[$4495 >> 1] = 846;
 HEAP16[$4496 >> 1] = 740;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 19708) label = 2900; else {
  $21166 = HEAP32[915090] | 0;
  if (($21166 | 0) == (HEAP32[915088] | 0)) label = 2900; else {
   $$lcssa$i$i3118 = 3660360;
   $$lcssa8$i$i3117 = $21166;
   label = 2901;
  }
 }
 do if ((label | 0) == 2900) {
  if ((HEAP32[915097] | 0) >>> 0 >= 19708) {
   $21173 = HEAP32[915096] | 0;
   if (($21173 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3118 = 3660384;
    $$lcssa8$i$i3117 = $21173;
    label = 2901;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 19708) {
   $21178 = HEAP32[915102] | 0;
   if (($21178 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3118 = 3660408;
    $$lcssa8$i$i3117 = $21178;
    label = 2901;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 19708) {
   $21183 = HEAP32[915108] | 0;
   if (($21183 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3118 = 3660432;
    $$lcssa8$i$i3117 = $21183;
    label = 2901;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 19708) {
   $21188 = HEAP32[915114] | 0;
   if (($21188 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3118 = 3660456;
    $$lcssa8$i$i3117 = $21188;
    label = 2901;
    break;
   }
  }
  $$3$i$i3119 = __Znwj(19708) | 0;
 } while (0);
 if ((label | 0) == 2901) {
  $21171 = $$lcssa8$i$i3117 + -4 | 0;
  HEAP32[$$lcssa$i$i3118 >> 2] = $21171;
  $$3$i$i3119 = HEAP32[$21171 >> 2] | 0;
 }
 $21192 = $$3$i$i3119 + 52 | 0;
 HEAP16[$$3$i$i3119 >> 1] = 756;
 HEAP16[$$3$i$i3119 + 2 >> 1] = 13;
 HEAP8[$$3$i$i3119 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3119 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3119 + 8 >> 2] = 1512;
 HEAP32[$$3$i$i3119 + 12 >> 2] = 19656;
 HEAP32[$$3$i$i3119 + 16 >> 2] = $21192;
 HEAP32[$$3$i$i3119 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3119 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3119 + 48 >> 0] = 0;
 HEAP32[$496 >> 2] = $$3$i$i3119;
 _memcpy($21192 | 0, 1966610, 1512) | 0;
 _memcpy($$3$i$i3119 + 1564 | 0, 1968122, 1512) | 0;
 _memcpy($$3$i$i3119 + 3076 | 0, 1969634, 1512) | 0;
 _memcpy($$3$i$i3119 + 4588 | 0, 1971146, 1512) | 0;
 _memcpy($$3$i$i3119 + 6100 | 0, 1972658, 1512) | 0;
 _memcpy($$3$i$i3119 + 7612 | 0, 1974170, 1512) | 0;
 _memcpy($$3$i$i3119 + 9124 | 0, 1975682, 1512) | 0;
 _memcpy($$3$i$i3119 + 10636 | 0, 1977194, 1512) | 0;
 _memcpy($$3$i$i3119 + 12148 | 0, 1978706, 1512) | 0;
 _memcpy($$3$i$i3119 + 13660 | 0, 1980218, 1512) | 0;
 _memcpy($$3$i$i3119 + 15172 | 0, 1981730, 1512) | 0;
 _memcpy($$3$i$i3119 + 16684 | 0, 1983242, 1512) | 0;
 _memcpy($$3$i$i3119 + 18196 | 0, 1984754, 1512) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $496);
 if ($$3$i$i3119 | 0) {
  $21215 = $$3$i$i3119 + 5 | 0;
  $21217 = (HEAP8[$21215 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$21215 >> 0] = $21217;
  if (!($21217 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3119);
  HEAP32[$496 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 94;
 HEAP16[$4497 >> 1] = 741;
 HEAP16[$4498 >> 1] = 846;
 HEAP16[$4499 >> 1] = 761;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31804) label = 2916; else {
  $21221 = HEAP32[915090] | 0;
  if (($21221 | 0) == (HEAP32[915088] | 0)) label = 2916; else {
   $$lcssa$i$i3130 = 3660360;
   $$lcssa8$i$i3129 = $21221;
   label = 2917;
  }
 }
 do if ((label | 0) == 2916) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31804) {
   $21228 = HEAP32[915096] | 0;
   if (($21228 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3130 = 3660384;
    $$lcssa8$i$i3129 = $21228;
    label = 2917;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31804) {
   $21233 = HEAP32[915102] | 0;
   if (($21233 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3130 = 3660408;
    $$lcssa8$i$i3129 = $21233;
    label = 2917;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31804) {
   $21238 = HEAP32[915108] | 0;
   if (($21238 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3130 = 3660432;
    $$lcssa8$i$i3129 = $21238;
    label = 2917;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31804) {
   $21243 = HEAP32[915114] | 0;
   if (($21243 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3130 = 3660456;
    $$lcssa8$i$i3129 = $21243;
    label = 2917;
    break;
   }
  }
  $$3$i$i3131 = __Znwj(31804) | 0;
 } while (0);
 if ((label | 0) == 2917) {
  $21226 = $$lcssa8$i$i3129 + -4 | 0;
  HEAP32[$$lcssa$i$i3130 >> 2] = $21226;
  $$3$i$i3131 = HEAP32[$21226 >> 2] | 0;
 }
 $21247 = $$3$i$i3131 + 52 | 0;
 HEAP16[$$3$i$i3131 >> 1] = 756;
 HEAP16[$$3$i$i3131 + 2 >> 1] = 21;
 HEAP8[$$3$i$i3131 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3131 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3131 + 8 >> 2] = 1512;
 HEAP32[$$3$i$i3131 + 12 >> 2] = 31752;
 HEAP32[$$3$i$i3131 + 16 >> 2] = $21247;
 HEAP32[$$3$i$i3131 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3131 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3131 + 48 >> 0] = 0;
 HEAP32[$497 >> 2] = $$3$i$i3131;
 _memcpy($21247 | 0, 1986266, 1512) | 0;
 _memcpy($$3$i$i3131 + 1564 | 0, 1987778, 1512) | 0;
 _memcpy($$3$i$i3131 + 3076 | 0, 1989290, 1512) | 0;
 _memcpy($$3$i$i3131 + 4588 | 0, 1990802, 1512) | 0;
 _memcpy($$3$i$i3131 + 6100 | 0, 1992314, 1512) | 0;
 _memcpy($$3$i$i3131 + 7612 | 0, 1993826, 1512) | 0;
 _memcpy($$3$i$i3131 + 9124 | 0, 1995338, 1512) | 0;
 _memcpy($$3$i$i3131 + 10636 | 0, 1996850, 1512) | 0;
 _memcpy($$3$i$i3131 + 12148 | 0, 1998362, 1512) | 0;
 _memcpy($$3$i$i3131 + 13660 | 0, 1999874, 1512) | 0;
 _memcpy($$3$i$i3131 + 15172 | 0, 2001386, 1512) | 0;
 _memcpy($$3$i$i3131 + 16684 | 0, 2002898, 1512) | 0;
 _memcpy($$3$i$i3131 + 18196 | 0, 2004410, 1512) | 0;
 _memcpy($$3$i$i3131 + 19708 | 0, 2005922, 1512) | 0;
 _memcpy($$3$i$i3131 + 21220 | 0, 2007434, 1512) | 0;
 _memcpy($$3$i$i3131 + 22732 | 0, 2008946, 1512) | 0;
 _memcpy($$3$i$i3131 + 24244 | 0, 2010458, 1512) | 0;
 _memcpy($$3$i$i3131 + 25756 | 0, 2011970, 1512) | 0;
 _memcpy($$3$i$i3131 + 27268 | 0, 2013482, 1512) | 0;
 _memcpy($$3$i$i3131 + 28780 | 0, 2014994, 1512) | 0;
 _memcpy($$3$i$i3131 + 30292 | 0, 2016506, 1512) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $497);
 if ($$3$i$i3131 | 0) {
  $21278 = $$3$i$i3131 + 5 | 0;
  $21280 = (HEAP8[$21278 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$21278 >> 0] = $21280;
  if (!($21280 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3131);
  HEAP32[$497 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 94;
 HEAP16[$4500 >> 1] = 762;
 HEAP16[$4501 >> 1] = 846;
 HEAP16[$4502 >> 1] = 765;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6100) label = 2932; else {
  $21284 = HEAP32[915090] | 0;
  if (($21284 | 0) == (HEAP32[915088] | 0)) label = 2932; else {
   $$lcssa$i$i3142 = 3660360;
   $$lcssa8$i$i3141 = $21284;
   label = 2933;
  }
 }
 do if ((label | 0) == 2932) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6100) {
   $21291 = HEAP32[915096] | 0;
   if (($21291 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3142 = 3660384;
    $$lcssa8$i$i3141 = $21291;
    label = 2933;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6100) {
   $21296 = HEAP32[915102] | 0;
   if (($21296 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3142 = 3660408;
    $$lcssa8$i$i3141 = $21296;
    label = 2933;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6100) {
   $21301 = HEAP32[915108] | 0;
   if (($21301 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3142 = 3660432;
    $$lcssa8$i$i3141 = $21301;
    label = 2933;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6100) {
   $21306 = HEAP32[915114] | 0;
   if (($21306 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3142 = 3660456;
    $$lcssa8$i$i3141 = $21306;
    label = 2933;
    break;
   }
  }
  $$3$i$i3143 = __Znwj(6100) | 0;
 } while (0);
 if ((label | 0) == 2933) {
  $21289 = $$lcssa8$i$i3141 + -4 | 0;
  HEAP32[$$lcssa$i$i3142 >> 2] = $21289;
  $$3$i$i3143 = HEAP32[$21289 >> 2] | 0;
 }
 $21310 = $$3$i$i3143 + 52 | 0;
 HEAP16[$$3$i$i3143 >> 1] = 756;
 HEAP16[$$3$i$i3143 + 2 >> 1] = 4;
 HEAP8[$$3$i$i3143 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3143 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3143 + 8 >> 2] = 1512;
 HEAP32[$$3$i$i3143 + 12 >> 2] = 6048;
 HEAP32[$$3$i$i3143 + 16 >> 2] = $21310;
 HEAP32[$$3$i$i3143 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3143 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3143 + 48 >> 0] = 0;
 HEAP32[$498 >> 2] = $$3$i$i3143;
 _memcpy($21310 | 0, 2018018, 1512) | 0;
 _memcpy($$3$i$i3143 + 1564 | 0, 2019530, 1512) | 0;
 _memcpy($$3$i$i3143 + 3076 | 0, 2021042, 1512) | 0;
 _memcpy($$3$i$i3143 + 4588 | 0, 2022554, 1512) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $498);
 if ($$3$i$i3143 | 0) {
  $21324 = $$3$i$i3143 + 5 | 0;
  $21326 = (HEAP8[$21324 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$21324 >> 0] = $21326;
  if (!($21326 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3143);
  HEAP32[$498 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 860;
 HEAP16[$4503 >> 1] = 728;
 HEAP16[$4504 >> 1] = 887;
 HEAP16[$4505 >> 1] = 765;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2180) label = 2948; else {
  $21330 = HEAP32[915090] | 0;
  if (($21330 | 0) == (HEAP32[915088] | 0)) label = 2948; else {
   $$lcssa$i$i3154 = 3660360;
   $$lcssa8$i$i3153 = $21330;
   label = 2949;
  }
 }
 do if ((label | 0) == 2948) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2180) {
   $21337 = HEAP32[915096] | 0;
   if (($21337 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3154 = 3660384;
    $$lcssa8$i$i3153 = $21337;
    label = 2949;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2180) {
   $21342 = HEAP32[915102] | 0;
   if (($21342 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3154 = 3660408;
    $$lcssa8$i$i3153 = $21342;
    label = 2949;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2180) {
   $21347 = HEAP32[915108] | 0;
   if (($21347 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3154 = 3660432;
    $$lcssa8$i$i3153 = $21347;
    label = 2949;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2180) {
   $21352 = HEAP32[915114] | 0;
   if (($21352 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3154 = 3660456;
    $$lcssa8$i$i3153 = $21352;
    label = 2949;
    break;
   }
  }
  $$3$i$i3155 = __Znwj(2180) | 0;
 } while (0);
 if ((label | 0) == 2949) {
  $21335 = $$lcssa8$i$i3153 + -4 | 0;
  HEAP32[$$lcssa$i$i3154 >> 2] = $21335;
  $$3$i$i3155 = HEAP32[$21335 >> 2] | 0;
 }
 $21356 = $$3$i$i3155 + 52 | 0;
 HEAP16[$$3$i$i3155 >> 1] = 28;
 HEAP16[$$3$i$i3155 + 2 >> 1] = 38;
 HEAP8[$$3$i$i3155 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3155 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3155 + 8 >> 2] = 56;
 HEAP32[$$3$i$i3155 + 12 >> 2] = 2128;
 HEAP32[$$3$i$i3155 + 16 >> 2] = $21356;
 HEAP32[$$3$i$i3155 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3155 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3155 + 48 >> 0] = 0;
 HEAP32[$499 >> 2] = $$3$i$i3155;
 dest = $21356;
 src = 2024066;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 108 | 0;
 src = 2024122;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 164 | 0;
 src = 2024178;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 220 | 0;
 src = 2024234;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 276 | 0;
 src = 2024290;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 332 | 0;
 src = 2024346;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 388 | 0;
 src = 2024402;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 444 | 0;
 src = 2024458;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 500 | 0;
 src = 2024514;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 556 | 0;
 src = 2024570;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 612 | 0;
 src = 2024626;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 668 | 0;
 src = 2024682;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 724 | 0;
 src = 2024738;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 780 | 0;
 src = 2024794;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 836 | 0;
 src = 2024850;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 892 | 0;
 src = 2024906;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 948 | 0;
 src = 2024962;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1004 | 0;
 src = 2025018;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1060 | 0;
 src = 2025074;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1116 | 0;
 src = 2025130;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1172 | 0;
 src = 2025186;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1228 | 0;
 src = 2025242;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1284 | 0;
 src = 2025298;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1340 | 0;
 src = 2025354;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1396 | 0;
 src = 2025410;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1452 | 0;
 src = 2025466;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1508 | 0;
 src = 2025522;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1564 | 0;
 src = 2025578;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1620 | 0;
 src = 2025634;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1676 | 0;
 src = 2025690;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1732 | 0;
 src = 2025746;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1788 | 0;
 src = 2025802;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1844 | 0;
 src = 2025858;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1900 | 0;
 src = 2025914;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 1956 | 0;
 src = 2025970;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 2012 | 0;
 src = 2026026;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 2068 | 0;
 src = 2026082;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3155 + 2124 | 0;
 src = 2026138;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $499);
 if ($$3$i$i3155 | 0) {
  $21404 = $$3$i$i3155 + 5 | 0;
  $21406 = (HEAP8[$21404 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$21404 >> 0] = $21406;
  if (!($21406 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3155);
  HEAP32[$499 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 905;
 HEAP16[$4506 >> 1] = 729;
 HEAP16[$4507 >> 1] = 1020;
 HEAP16[$4508 >> 1] = 764;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 8404) label = 2964; else {
  $21410 = HEAP32[915090] | 0;
  if (($21410 | 0) == (HEAP32[915088] | 0)) label = 2964; else {
   $$lcssa$i$i3166 = 3660360;
   $$lcssa8$i$i3165 = $21410;
   label = 2965;
  }
 }
 do if ((label | 0) == 2964) {
  if ((HEAP32[915097] | 0) >>> 0 >= 8404) {
   $21417 = HEAP32[915096] | 0;
   if (($21417 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3166 = 3660384;
    $$lcssa8$i$i3165 = $21417;
    label = 2965;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 8404) {
   $21422 = HEAP32[915102] | 0;
   if (($21422 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3166 = 3660408;
    $$lcssa8$i$i3165 = $21422;
    label = 2965;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 8404) {
   $21427 = HEAP32[915108] | 0;
   if (($21427 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3166 = 3660432;
    $$lcssa8$i$i3165 = $21427;
    label = 2965;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 8404) {
   $21432 = HEAP32[915114] | 0;
   if (($21432 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3166 = 3660456;
    $$lcssa8$i$i3165 = $21432;
    label = 2965;
    break;
   }
  }
  $$3$i$i3167 = __Znwj(8404) | 0;
 } while (0);
 if ((label | 0) == 2965) {
  $21415 = $$lcssa8$i$i3165 + -4 | 0;
  HEAP32[$$lcssa$i$i3166 >> 2] = $21415;
  $$3$i$i3167 = HEAP32[$21415 >> 2] | 0;
 }
 $21436 = $$3$i$i3167 + 52 | 0;
 HEAP16[$$3$i$i3167 >> 1] = 116;
 HEAP16[$$3$i$i3167 + 2 >> 1] = 36;
 HEAP8[$$3$i$i3167 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3167 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3167 + 8 >> 2] = 232;
 HEAP32[$$3$i$i3167 + 12 >> 2] = 8352;
 HEAP32[$$3$i$i3167 + 16 >> 2] = $21436;
 HEAP32[$$3$i$i3167 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3167 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3167 + 48 >> 0] = 0;
 HEAP32[$500 >> 2] = $$3$i$i3167;
 _memcpy($21436 | 0, 2026194, 232) | 0;
 _memcpy($$3$i$i3167 + 284 | 0, 2026426, 232) | 0;
 _memcpy($$3$i$i3167 + 516 | 0, 2026658, 232) | 0;
 _memcpy($$3$i$i3167 + 748 | 0, 2026890, 232) | 0;
 _memcpy($$3$i$i3167 + 980 | 0, 2027122, 232) | 0;
 _memcpy($$3$i$i3167 + 1212 | 0, 2027354, 232) | 0;
 _memcpy($$3$i$i3167 + 1444 | 0, 2027586, 232) | 0;
 _memcpy($$3$i$i3167 + 1676 | 0, 2027818, 232) | 0;
 _memcpy($$3$i$i3167 + 1908 | 0, 2028050, 232) | 0;
 _memcpy($$3$i$i3167 + 2140 | 0, 2028282, 232) | 0;
 _memcpy($$3$i$i3167 + 2372 | 0, 2028514, 232) | 0;
 _memcpy($$3$i$i3167 + 2604 | 0, 2028746, 232) | 0;
 _memcpy($$3$i$i3167 + 2836 | 0, 2028978, 232) | 0;
 _memcpy($$3$i$i3167 + 3068 | 0, 2029210, 232) | 0;
 _memcpy($$3$i$i3167 + 3300 | 0, 2029442, 232) | 0;
 _memcpy($$3$i$i3167 + 3532 | 0, 2029674, 232) | 0;
 _memcpy($$3$i$i3167 + 3764 | 0, 2029906, 232) | 0;
 _memcpy($$3$i$i3167 + 3996 | 0, 2030138, 232) | 0;
 _memcpy($$3$i$i3167 + 4228 | 0, 2030370, 232) | 0;
 _memcpy($$3$i$i3167 + 4460 | 0, 2030602, 232) | 0;
 _memcpy($$3$i$i3167 + 4692 | 0, 2030834, 232) | 0;
 _memcpy($$3$i$i3167 + 4924 | 0, 2031066, 232) | 0;
 _memcpy($$3$i$i3167 + 5156 | 0, 2031298, 232) | 0;
 _memcpy($$3$i$i3167 + 5388 | 0, 2031530, 232) | 0;
 _memcpy($$3$i$i3167 + 5620 | 0, 2031762, 232) | 0;
 _memcpy($$3$i$i3167 + 5852 | 0, 2031994, 232) | 0;
 _memcpy($$3$i$i3167 + 6084 | 0, 2032226, 232) | 0;
 _memcpy($$3$i$i3167 + 6316 | 0, 2032458, 232) | 0;
 _memcpy($$3$i$i3167 + 6548 | 0, 2032690, 232) | 0;
 _memcpy($$3$i$i3167 + 6780 | 0, 2032922, 232) | 0;
 _memcpy($$3$i$i3167 + 7012 | 0, 2033154, 232) | 0;
 _memcpy($$3$i$i3167 + 7244 | 0, 2033386, 232) | 0;
 _memcpy($$3$i$i3167 + 7476 | 0, 2033618, 232) | 0;
 _memcpy($$3$i$i3167 + 7708 | 0, 2033850, 232) | 0;
 _memcpy($$3$i$i3167 + 7940 | 0, 2034082, 232) | 0;
 _memcpy($$3$i$i3167 + 8172 | 0, 2034314, 232) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $500);
 if ($$3$i$i3167 | 0) {
  $21482 = $$3$i$i3167 + 5 | 0;
  $21484 = (HEAP8[$21482 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$21482 >> 0] = $21484;
  if (!($21484 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3167);
  HEAP32[$500 >> 2] = 0;
 }
 $21486 = $501;
 HEAP32[$21486 >> 2] = 1179648;
 HEAP32[$21486 + 4 >> 2] = 66560;
 HEAP32[$4509 >> 2] = 54937;
 HEAP16[$502 >> 1] = 0;
 HEAP16[$4510 >> 1] = 18;
 HEAP16[$4511 >> 1] = 1024;
 HEAP16[$4512 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $501, $502);
 $21490 = $503;
 HEAP32[$21490 >> 2] = 132094;
 HEAP32[$21490 + 4 >> 2] = 917506;
 HEAP32[$4513 >> 2] = 2349;
 HEAP16[$504 >> 1] = 1022;
 HEAP16[$4514 >> 1] = 2;
 HEAP16[$4515 >> 1] = 2;
 HEAP16[$4516 >> 1] = 14;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $503, $504);
 $21494 = $505;
 HEAP32[$21494 >> 2] = 132076;
 HEAP32[$21494 + 4 >> 2] = 917506;
 HEAP32[$4517 >> 2] = 2349;
 HEAP16[$506 >> 1] = 1004;
 HEAP16[$4518 >> 1] = 2;
 HEAP16[$4519 >> 1] = 2;
 HEAP16[$4520 >> 1] = 14;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $505, $506);
 $21498 = $507;
 HEAP32[$21498 >> 2] = 132042;
 HEAP32[$21498 + 4 >> 2] = 917506;
 HEAP32[$4521 >> 2] = 2349;
 HEAP16[$508 >> 1] = 970;
 HEAP16[$4522 >> 1] = 2;
 HEAP16[$4523 >> 1] = 2;
 HEAP16[$4524 >> 1] = 14;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $507, $508);
 $21502 = $509;
 HEAP32[$21502 >> 2] = 970;
 HEAP32[$21502 + 4 >> 2] = 131126;
 HEAP32[$4525 >> 2] = 2349;
 HEAP16[$510 >> 1] = 970;
 HEAP16[$4526 >> 1] = 0;
 HEAP16[$4527 >> 1] = 54;
 HEAP16[$4528 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $509, $510);
 $21506 = $511;
 HEAP32[$21506 >> 2] = 1049546;
 HEAP32[$21506 + 4 >> 2] = 131126;
 HEAP32[$4529 >> 2] = 2349;
 HEAP16[$512 >> 1] = 970;
 HEAP16[$4530 >> 1] = 16;
 HEAP16[$4531 >> 1] = 54;
 HEAP16[$4532 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $511, $512);
 $21510 = $513;
 HEAP32[$21510 >> 2] = 0;
 HEAP32[$21510 + 4 >> 2] = 1179666;
 HEAP32[$4533 >> 2] = 2349;
 HEAP16[$514 >> 1] = 0;
 HEAP16[$4534 >> 1] = 0;
 HEAP16[$4535 >> 1] = 18;
 HEAP16[$4536 >> 1] = 18;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $513, $514);
 $21514 = $515;
 HEAP32[$21514 >> 2] = 18;
 HEAP32[$21514 + 4 >> 2] = 1180600;
 HEAP32[$4537 >> 2] = 2349;
 HEAP16[$516 >> 1] = 18;
 HEAP16[$4538 >> 1] = 0;
 HEAP16[$4539 >> 1] = 952;
 HEAP16[$4540 >> 1] = 18;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $515, $516);
 $21518 = $517;
 HEAP32[$21518 >> 2] = 4653056;
 HEAP32[$21518 + 4 >> 2] = 41485312;
 HEAP32[$4541 >> 2] = 65535;
 HEAP16[$518 >> 1] = 196;
 HEAP16[$4542 >> 1] = 71;
 HEAP16[$4543 >> 1] = 3;
 HEAP16[$4544 >> 1] = 625;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $517, $518);
 $21522 = $519;
 HEAP32[$21522 >> 2] = 4653056;
 HEAP32[$21522 + 4 >> 2] = 41485312;
 HEAP32[$4545 >> 2] = 65535;
 HEAP16[$520 >> 1] = 1016;
 HEAP16[$4546 >> 1] = 71;
 HEAP16[$4547 >> 1] = 8;
 HEAP16[$4548 >> 1] = 625;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $519, $520);
 $21526 = $521;
 HEAP32[$21526 >> 2] = 4653056;
 HEAP32[$21526 + 4 >> 2] = 41485312;
 HEAP32[$4549 >> 2] = 65535;
 HEAP16[$522 >> 1] = 0;
 HEAP16[$4550 >> 1] = 696;
 HEAP16[$4551 >> 1] = 1024;
 HEAP16[$4552 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $521, $522);
 $21530 = $523;
 HEAP32[$21530 >> 2] = 6226935;
 HEAP32[$21530 + 4 >> 2] = 39387137;
 HEAP32[$4553 >> 2] = 65535;
 HEAP16[$524 >> 1] = 1015;
 HEAP16[$4554 >> 1] = 95;
 HEAP16[$4555 >> 1] = 1;
 HEAP16[$4556 >> 1] = 601;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $523, $524);
 $21534 = $525;
 HEAP32[$21534 >> 2] = 45547719;
 HEAP32[$21534 + 4 >> 2] = 66352;
 HEAP32[$4557 >> 2] = 65535;
 HEAP16[$526 >> 1] = 199;
 HEAP16[$4558 >> 1] = 695;
 HEAP16[$4559 >> 1] = 816;
 HEAP16[$4560 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $525, $526);
 $21538 = $527;
 HEAP32[$21538 >> 2] = 6226119;
 HEAP32[$21538 + 4 >> 2] = 39321601;
 HEAP32[$4561 >> 2] = 33808;
 HEAP16[$528 >> 1] = 199;
 HEAP16[$4562 >> 1] = 95;
 HEAP16[$4563 >> 1] = 1;
 HEAP16[$4564 >> 1] = 600;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $527, $528);
 $21542 = $529;
 HEAP32[$21542 >> 2] = 6226120;
 HEAP32[$21542 + 4 >> 2] = 66351;
 HEAP32[$4565 >> 2] = 33808;
 HEAP16[$530 >> 1] = 200;
 HEAP16[$4566 >> 1] = 95;
 HEAP16[$4567 >> 1] = 815;
 HEAP16[$4568 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $529, $530);
 $21546 = $531;
 HEAP32[$21546 >> 2] = 6292470;
 HEAP32[$21546 + 4 >> 2] = 39256065;
 HEAP32[$4569 >> 2] = 54937;
 HEAP16[$532 >> 1] = 1014;
 HEAP16[$4570 >> 1] = 96;
 HEAP16[$4571 >> 1] = 1;
 HEAP16[$4572 >> 1] = 599;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $531, $532);
 $21550 = $533;
 HEAP32[$21550 >> 2] = 45482184;
 HEAP32[$21550 + 4 >> 2] = 66350;
 HEAP32[$4573 >> 2] = 54937;
 HEAP16[$534 >> 1] = 200;
 HEAP16[$4574 >> 1] = 694;
 HEAP16[$4575 >> 1] = 814;
 HEAP16[$4576 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $533, $534);
 $21554 = $535;
 HEAP32[$21554 >> 2] = 6291656;
 HEAP32[$21554 + 4 >> 2] = 39190529;
 HEAP32[$4577 >> 2] = 16904;
 HEAP16[$536 >> 1] = 200;
 HEAP16[$4578 >> 1] = 96;
 HEAP16[$4579 >> 1] = 1;
 HEAP16[$4580 >> 1] = 598;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $535, $536);
 $21558 = $537;
 HEAP32[$21558 >> 2] = 6291657;
 HEAP32[$21558 + 4 >> 2] = 66349;
 HEAP32[$4581 >> 2] = 16904;
 HEAP16[$538 >> 1] = 201;
 HEAP16[$4582 >> 1] = 96;
 HEAP16[$4583 >> 1] = 813;
 HEAP16[$4584 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $537, $538);
 $21562 = $539;
 HEAP32[$21562 >> 2] = 6357193;
 HEAP32[$21562 + 4 >> 2] = 39125805;
 HEAP32[$4585 >> 2] = 65535;
 HEAP16[$540 >> 1] = 201;
 HEAP16[$4586 >> 1] = 97;
 HEAP16[$4587 >> 1] = 813;
 HEAP16[$4588 >> 1] = 597;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $539, $540);
 $21566 = $541;
 HEAP32[$21566 >> 2] = 4653251;
 HEAP32[$21566 + 4 >> 2] = 40960001;
 HEAP32[$4589 >> 2] = 65535;
 HEAP16[$542 >> 1] = 195;
 HEAP16[$4590 >> 1] = 71;
 HEAP16[$4591 >> 1] = 1;
 HEAP16[$4592 >> 1] = 625;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $541, $542);
 $21570 = $543;
 HEAP32[$21570 >> 2] = 45547520;
 HEAP32[$21570 + 4 >> 2] = 65731;
 HEAP32[$4593 >> 2] = 65535;
 HEAP16[$544 >> 1] = 0;
 HEAP16[$4594 >> 1] = 695;
 HEAP16[$4595 >> 1] = 195;
 HEAP16[$4596 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $543, $544);
 $21574 = $545;
 HEAP32[$21574 >> 2] = 4653056;
 HEAP32[$21574 + 4 >> 2] = 40894465;
 HEAP32[$4597 >> 2] = 33808;
 HEAP16[$546 >> 1] = 0;
 HEAP16[$4598 >> 1] = 71;
 HEAP16[$4599 >> 1] = 1;
 HEAP16[$4600 >> 1] = 624;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $545, $546);
 $21578 = $547;
 HEAP32[$21578 >> 2] = 4653057;
 HEAP32[$21578 + 4 >> 2] = 65730;
 HEAP32[$4601 >> 2] = 33808;
 HEAP16[$548 >> 1] = 1;
 HEAP16[$4602 >> 1] = 71;
 HEAP16[$4603 >> 1] = 194;
 HEAP16[$4604 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $547, $548);
 $21582 = $549;
 HEAP32[$21582 >> 2] = 4718786;
 HEAP32[$21582 + 4 >> 2] = 40828929;
 HEAP32[$4605 >> 2] = 54937;
 HEAP16[$550 >> 1] = 194;
 HEAP16[$4606 >> 1] = 72;
 HEAP16[$4607 >> 1] = 1;
 HEAP16[$4608 >> 1] = 623;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $549, $550);
 $21586 = $551;
 HEAP32[$21586 >> 2] = 45481985;
 HEAP32[$21586 + 4 >> 2] = 65729;
 HEAP32[$4609 >> 2] = 54937;
 HEAP16[$552 >> 1] = 1;
 HEAP16[$4610 >> 1] = 694;
 HEAP16[$4611 >> 1] = 193;
 HEAP16[$4612 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $551, $552);
 $21590 = $553;
 HEAP32[$21590 >> 2] = 4718593;
 HEAP32[$21590 + 4 >> 2] = 40763393;
 HEAP32[$4613 >> 2] = 16904;
 HEAP16[$554 >> 1] = 1;
 HEAP16[$4614 >> 1] = 72;
 HEAP16[$4615 >> 1] = 1;
 HEAP16[$4616 >> 1] = 622;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $553, $554);
 $21594 = $555;
 HEAP32[$21594 >> 2] = 4718594;
 HEAP32[$21594 + 4 >> 2] = 65728;
 HEAP32[$4617 >> 2] = 16904;
 HEAP16[$556 >> 1] = 2;
 HEAP16[$4618 >> 1] = 72;
 HEAP16[$4619 >> 1] = 192;
 HEAP16[$4620 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $555, $556);
 $21598 = $557;
 HEAP32[$21598 >> 2] = 44433548;
 HEAP32[$21598 + 4 >> 2] = 1048614;
 HEAP8[$4621 >> 0] = -16;
 HEAP32[$4622 >> 2] = 65535;
 HEAP32[$4623 >> 2] = 54937;
 HEAP8[$4624 >> 0] = 0;
 HEAP8[$4625 >> 0] = 7;
 HEAP8[$4626 >> 0] = 3;
 HEAP8[$4627 >> 0] = -86;
 HEAP32[$4628 >> 2] = 0;
 HEAP16[$4628 + 4 >> 1] = 0;
 HEAP8[$4628 + 6 >> 0] = 0;
 HEAP16[$558 >> 1] = 140;
 HEAP16[$4629 >> 1] = 678;
 HEAP16[$4630 >> 1] = 38;
 HEAP16[$4631 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK9RDPPatBltRK4Rect($front, $557, $558);
 $21602 = $559;
 HEAP32[$21602 >> 2] = 44433547;
 HEAP32[$21602 + 4 >> 2] = 1048577;
 HEAP32[$4632 >> 2] = 16904;
 HEAP16[$560 >> 1] = 139;
 HEAP16[$4633 >> 1] = 678;
 HEAP16[$4634 >> 1] = 1;
 HEAP16[$4635 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $559, $560);
 $21606 = $561;
 HEAP32[$21606 >> 2] = 45416466;
 HEAP32[$21606 + 4 >> 2] = 65657;
 HEAP32[$4636 >> 2] = 16904;
 HEAP16[$562 >> 1] = 18;
 HEAP16[$4637 >> 1] = 693;
 HEAP16[$4638 >> 1] = 121;
 HEAP16[$4639 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $561, $562);
 $21610 = $563;
 HEAP32[$21610 >> 2] = 44433426;
 HEAP32[$21610 + 4 >> 2] = 983041;
 HEAP32[$4640 >> 2] = 54937;
 HEAP16[$564 >> 1] = 18;
 HEAP16[$4641 >> 1] = 678;
 HEAP16[$4642 >> 1] = 1;
 HEAP16[$4643 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $563, $564);
 $21614 = $565;
 HEAP32[$21614 >> 2] = 44433427;
 HEAP32[$21614 + 4 >> 2] = 65656;
 HEAP32[$4644 >> 2] = 54937;
 HEAP16[$566 >> 1] = 19;
 HEAP16[$4645 >> 1] = 678;
 HEAP16[$4646 >> 1] = 120;
 HEAP16[$4647 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $565, $566);
 $21618 = $567;
 HEAP32[$21618 >> 2] = 44499082;
 HEAP32[$21618 + 4 >> 2] = 917505;
 HEAP32[$4648 >> 2] = 33808;
 HEAP16[$568 >> 1] = 138;
 HEAP16[$4649 >> 1] = 679;
 HEAP16[$4650 >> 1] = 1;
 HEAP16[$4651 >> 1] = 14;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $567, $568);
 $21622 = $569;
 HEAP32[$21622 >> 2] = 45350931;
 HEAP32[$21622 + 4 >> 2] = 65655;
 HEAP32[$4652 >> 2] = 33808;
 HEAP16[$570 >> 1] = 19;
 HEAP16[$4653 >> 1] = 692;
 HEAP16[$4654 >> 1] = 119;
 HEAP16[$4655 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $569, $570);
 $21626 = $571;
 HEAP32[$21626 >> 2] = 44498963;
 HEAP32[$21626 + 4 >> 2] = 851969;
 HEAP32[$4656 >> 2] = 65535;
 HEAP16[$572 >> 1] = 19;
 HEAP16[$4657 >> 1] = 679;
 HEAP16[$4658 >> 1] = 1;
 HEAP16[$4659 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $571, $572);
 $21630 = $573;
 HEAP32[$21630 >> 2] = 44498964;
 HEAP32[$21630 + 4 >> 2] = 65654;
 HEAP32[$4660 >> 2] = 65535;
 HEAP16[$574 >> 1] = 20;
 HEAP16[$4661 >> 1] = 679;
 HEAP16[$4662 >> 1] = 118;
 HEAP16[$4663 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $573, $574);
 $21634 = $575;
 HEAP32[$21634 >> 2] = 44564500;
 HEAP32[$21634 + 4 >> 2] = 786550;
 HEAP32[$4664 >> 2] = 54937;
 HEAP16[$576 >> 1] = 20;
 HEAP16[$4665 >> 1] = 680;
 HEAP16[$4666 >> 1] = 118;
 HEAP16[$4667 >> 1] = 12;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $575, $576);
 $21638 = $577;
 HEAP32[$21638 >> 2] = 4784130;
 HEAP32[$21638 + 4 >> 2] = 39649472;
 HEAP32[$4668 >> 2] = 65535;
 HEAP16[$578 >> 1] = 2;
 HEAP16[$4669 >> 1] = 73;
 HEAP16[$4670 >> 1] = 192;
 HEAP16[$4671 >> 1] = 605;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $577, $578);
 $21642 = $579;
 HEAP32[$21642 >> 2] = 4654071;
 HEAP32[$21642 + 4 >> 2] = 1572865;
 HEAP32[$4672 >> 2] = 65535;
 HEAP16[$580 >> 1] = 1015;
 HEAP16[$4673 >> 1] = 71;
 HEAP16[$4674 >> 1] = 1;
 HEAP16[$4675 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $579, $580);
 $21646 = $581;
 HEAP32[$21646 >> 2] = 6160583;
 HEAP32[$21646 + 4 >> 2] = 66352;
 HEAP32[$4676 >> 2] = 65535;
 HEAP16[$582 >> 1] = 199;
 HEAP16[$4677 >> 1] = 94;
 HEAP16[$4678 >> 1] = 816;
 HEAP16[$4679 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $581, $582);
 $21650 = $583;
 HEAP32[$21650 >> 2] = 4653255;
 HEAP32[$21650 + 4 >> 2] = 1507329;
 HEAP32[$4680 >> 2] = 33808;
 HEAP16[$584 >> 1] = 199;
 HEAP16[$4681 >> 1] = 71;
 HEAP16[$4682 >> 1] = 1;
 HEAP16[$4683 >> 1] = 23;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $583, $584);
 $21654 = $585;
 HEAP32[$21654 >> 2] = 4653256;
 HEAP32[$21654 + 4 >> 2] = 66351;
 HEAP32[$4684 >> 2] = 33808;
 HEAP16[$586 >> 1] = 200;
 HEAP16[$4685 >> 1] = 71;
 HEAP16[$4686 >> 1] = 815;
 HEAP16[$4687 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $585, $586);
 $21658 = $587;
 HEAP32[$21658 >> 2] = 46137344;
 HEAP32[$21658 + 4 >> 2] = 1311744;
 HEAP32[$4688 >> 2] = 54937;
 HEAP16[$588 >> 1] = 0;
 HEAP16[$4689 >> 1] = 704;
 HEAP16[$4690 >> 1] = 1024;
 HEAP16[$4691 >> 1] = 20;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $587, $588);
 $21662 = $589;
 HEAP32[$21662 >> 2] = 46137344;
 HEAP32[$21662 + 4 >> 2] = 1311744;
 HEAP32[$4692 >> 2] = 54937;
 HEAP16[$590 >> 1] = 0;
 HEAP16[$4693 >> 1] = 704;
 HEAP16[$4694 >> 1] = 1024;
 HEAP16[$4695 >> 1] = 20;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $589, $590);
 $21666 = $591;
 HEAP32[$21666 >> 2] = 4653252;
 HEAP32[$21666 + 4 >> 2] = 41484291;
 HEAP32[$4696 >> 2] = 65535;
 HEAP16[$592 >> 1] = 196;
 HEAP16[$4697 >> 1] = 71;
 HEAP16[$4698 >> 1] = 3;
 HEAP16[$4699 >> 1] = 633;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $591, $592);
 $21670 = $593;
 HEAP32[$21670 >> 2] = 6226943;
 HEAP32[$21670 + 4 >> 2] = 39911425;
 HEAP32[$4700 >> 2] = 65535;
 HEAP16[$594 >> 1] = 1023;
 HEAP16[$4701 >> 1] = 95;
 HEAP16[$4702 >> 1] = 1;
 HEAP16[$4703 >> 1] = 609;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $593, $594);
 $21674 = $595;
 HEAP32[$21674 >> 2] = 46072007;
 HEAP32[$21674 + 4 >> 2] = 66360;
 HEAP32[$4704 >> 2] = 65535;
 HEAP16[$596 >> 1] = 199;
 HEAP16[$4705 >> 1] = 703;
 HEAP16[$4706 >> 1] = 824;
 HEAP16[$4707 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $595, $596);
 $21678 = $597;
 HEAP32[$21678 >> 2] = 6226119;
 HEAP32[$21678 + 4 >> 2] = 39845889;
 HEAP32[$4708 >> 2] = 33808;
 HEAP16[$598 >> 1] = 199;
 HEAP16[$4709 >> 1] = 95;
 HEAP16[$4710 >> 1] = 1;
 HEAP16[$4711 >> 1] = 608;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $597, $598);
 $21682 = $599;
 HEAP32[$21682 >> 2] = 6226120;
 HEAP32[$21682 + 4 >> 2] = 66359;
 HEAP32[$4712 >> 2] = 33808;
 HEAP16[$600 >> 1] = 200;
 HEAP16[$4713 >> 1] = 95;
 HEAP16[$4714 >> 1] = 823;
 HEAP16[$4715 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $599, $600);
 $21686 = $601;
 HEAP32[$21686 >> 2] = 6292478;
 HEAP32[$21686 + 4 >> 2] = 39780353;
 HEAP32[$4716 >> 2] = 54937;
 HEAP16[$602 >> 1] = 1022;
 HEAP16[$4717 >> 1] = 96;
 HEAP16[$4718 >> 1] = 1;
 HEAP16[$4719 >> 1] = 607;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $601, $602);
 $21690 = $603;
 HEAP32[$21690 >> 2] = 46006472;
 HEAP32[$21690 + 4 >> 2] = 66358;
 HEAP32[$4720 >> 2] = 54937;
 HEAP16[$604 >> 1] = 200;
 HEAP16[$4721 >> 1] = 702;
 HEAP16[$4722 >> 1] = 822;
 HEAP16[$4723 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $603, $604);
 $21694 = $605;
 HEAP32[$21694 >> 2] = 6291656;
 HEAP32[$21694 + 4 >> 2] = 39714817;
 HEAP32[$4724 >> 2] = 16904;
 HEAP16[$606 >> 1] = 200;
 HEAP16[$4725 >> 1] = 96;
 HEAP16[$4726 >> 1] = 1;
 HEAP16[$4727 >> 1] = 606;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $605, $606);
 $21698 = $607;
 HEAP32[$21698 >> 2] = 6291657;
 HEAP32[$21698 + 4 >> 2] = 66357;
 HEAP32[$4728 >> 2] = 16904;
 HEAP16[$608 >> 1] = 201;
 HEAP16[$4729 >> 1] = 96;
 HEAP16[$4730 >> 1] = 821;
 HEAP16[$4731 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $607, $608);
 $21702 = $609;
 HEAP32[$21702 >> 2] = 6357193;
 HEAP32[$21702 + 4 >> 2] = 39650101;
 HEAP32[$4732 >> 2] = 65535;
 HEAP16[$610 >> 1] = 1014;
 HEAP16[$4733 >> 1] = 97;
 HEAP16[$4734 >> 1] = 8;
 HEAP16[$4735 >> 1] = 597;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $609, $610);
 $21706 = $611;
 HEAP32[$21706 >> 2] = 6357193;
 HEAP32[$21706 + 4 >> 2] = 39650101;
 HEAP32[$4736 >> 2] = 65535;
 HEAP16[$612 >> 1] = 201;
 HEAP16[$4737 >> 1] = 694;
 HEAP16[$4738 >> 1] = 821;
 HEAP16[$4739 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $611, $612);
 $21710 = $613;
 HEAP32[$21710 >> 2] = 6357193;
 HEAP32[$21710 + 4 >> 2] = 39125805;
 HEAP32[$4740 >> 2] = 65535;
 HEAP16[$614 >> 1] = 201;
 HEAP16[$4741 >> 1] = 97;
 HEAP16[$4742 >> 1] = 813;
 HEAP16[$4743 >> 1] = 597;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $613, $614);
 $21714 = $615;
 HEAP32[$21714 >> 2] = 4653251;
 HEAP32[$21714 + 4 >> 2] = 41484289;
 HEAP32[$4744 >> 2] = 65535;
 HEAP16[$616 >> 1] = 195;
 HEAP16[$4745 >> 1] = 71;
 HEAP16[$4746 >> 1] = 1;
 HEAP16[$4747 >> 1] = 633;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $615, $616);
 $21718 = $617;
 HEAP32[$21718 >> 2] = 46071808;
 HEAP32[$21718 + 4 >> 2] = 65731;
 HEAP32[$4748 >> 2] = 65535;
 HEAP16[$618 >> 1] = 0;
 HEAP16[$4749 >> 1] = 703;
 HEAP16[$4750 >> 1] = 195;
 HEAP16[$4751 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $617, $618);
 $21722 = $619;
 HEAP32[$21722 >> 2] = 4653056;
 HEAP32[$21722 + 4 >> 2] = 41418753;
 HEAP32[$4752 >> 2] = 33808;
 HEAP16[$620 >> 1] = 0;
 HEAP16[$4753 >> 1] = 71;
 HEAP16[$4754 >> 1] = 1;
 HEAP16[$4755 >> 1] = 632;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $619, $620);
 $21726 = $621;
 HEAP32[$21726 >> 2] = 4653057;
 HEAP32[$21726 + 4 >> 2] = 65730;
 HEAP32[$4756 >> 2] = 33808;
 HEAP16[$622 >> 1] = 1;
 HEAP16[$4757 >> 1] = 71;
 HEAP16[$4758 >> 1] = 194;
 HEAP16[$4759 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $621, $622);
 $21730 = $623;
 HEAP32[$21730 >> 2] = 4718786;
 HEAP32[$21730 + 4 >> 2] = 41353217;
 HEAP32[$4760 >> 2] = 54937;
 HEAP16[$624 >> 1] = 194;
 HEAP16[$4761 >> 1] = 72;
 HEAP16[$4762 >> 1] = 1;
 HEAP16[$4763 >> 1] = 631;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $623, $624);
 $21734 = $625;
 HEAP32[$21734 >> 2] = 46006273;
 HEAP32[$21734 + 4 >> 2] = 65729;
 HEAP32[$4764 >> 2] = 54937;
 HEAP16[$626 >> 1] = 1;
 HEAP16[$4765 >> 1] = 702;
 HEAP16[$4766 >> 1] = 193;
 HEAP16[$4767 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $625, $626);
 $21738 = $627;
 HEAP32[$21738 >> 2] = 4718593;
 HEAP32[$21738 + 4 >> 2] = 41287681;
 HEAP32[$4768 >> 2] = 16904;
 HEAP16[$628 >> 1] = 1;
 HEAP16[$4769 >> 1] = 72;
 HEAP16[$4770 >> 1] = 1;
 HEAP16[$4771 >> 1] = 630;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $627, $628);
 $21742 = $629;
 HEAP32[$21742 >> 2] = 4718594;
 HEAP32[$21742 + 4 >> 2] = 65728;
 HEAP32[$4772 >> 2] = 16904;
 HEAP16[$630 >> 1] = 2;
 HEAP16[$4773 >> 1] = 72;
 HEAP16[$4774 >> 1] = 192;
 HEAP16[$4775 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $629, $630);
 $21746 = $631;
 HEAP32[$21746 >> 2] = 44957836;
 HEAP32[$21746 + 4 >> 2] = 1048614;
 HEAP8[$4776 >> 0] = -16;
 HEAP32[$4777 >> 2] = 65535;
 HEAP32[$4778 >> 2] = 54937;
 HEAP8[$4779 >> 0] = 0;
 HEAP8[$4780 >> 0] = 7;
 HEAP8[$4781 >> 0] = 3;
 HEAP8[$4782 >> 0] = -86;
 HEAP32[$4783 >> 2] = 0;
 HEAP16[$4783 + 4 >> 1] = 0;
 HEAP8[$4783 + 6 >> 0] = 0;
 HEAP16[$632 >> 1] = 140;
 HEAP16[$4784 >> 1] = 686;
 HEAP16[$4785 >> 1] = 38;
 HEAP16[$4786 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK9RDPPatBltRK4Rect($front, $631, $632);
 $21750 = $633;
 HEAP32[$21750 >> 2] = 44957835;
 HEAP32[$21750 + 4 >> 2] = 1048577;
 HEAP32[$4787 >> 2] = 16904;
 HEAP16[$634 >> 1] = 139;
 HEAP16[$4788 >> 1] = 686;
 HEAP16[$4789 >> 1] = 1;
 HEAP16[$4790 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $633, $634);
 $21754 = $635;
 HEAP32[$21754 >> 2] = 45940754;
 HEAP32[$21754 + 4 >> 2] = 65657;
 HEAP32[$4791 >> 2] = 16904;
 HEAP16[$636 >> 1] = 18;
 HEAP16[$4792 >> 1] = 701;
 HEAP16[$4793 >> 1] = 121;
 HEAP16[$4794 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $635, $636);
 $21758 = $637;
 HEAP32[$21758 >> 2] = 44957714;
 HEAP32[$21758 + 4 >> 2] = 983041;
 HEAP32[$4795 >> 2] = 54937;
 HEAP16[$638 >> 1] = 18;
 HEAP16[$4796 >> 1] = 686;
 HEAP16[$4797 >> 1] = 1;
 HEAP16[$4798 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $637, $638);
 $21762 = $639;
 HEAP32[$21762 >> 2] = 44957715;
 HEAP32[$21762 + 4 >> 2] = 65656;
 HEAP32[$4799 >> 2] = 54937;
 HEAP16[$640 >> 1] = 19;
 HEAP16[$4800 >> 1] = 686;
 HEAP16[$4801 >> 1] = 120;
 HEAP16[$4802 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $639, $640);
 $21766 = $641;
 HEAP32[$21766 >> 2] = 45023370;
 HEAP32[$21766 + 4 >> 2] = 917505;
 HEAP32[$4803 >> 2] = 33808;
 HEAP16[$642 >> 1] = 138;
 HEAP16[$4804 >> 1] = 687;
 HEAP16[$4805 >> 1] = 1;
 HEAP16[$4806 >> 1] = 14;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $641, $642);
 $21770 = $643;
 HEAP32[$21770 >> 2] = 45875219;
 HEAP32[$21770 + 4 >> 2] = 65655;
 HEAP32[$4807 >> 2] = 33808;
 HEAP16[$644 >> 1] = 19;
 HEAP16[$4808 >> 1] = 700;
 HEAP16[$4809 >> 1] = 119;
 HEAP16[$4810 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $643, $644);
 $21774 = $645;
 HEAP32[$21774 >> 2] = 45023251;
 HEAP32[$21774 + 4 >> 2] = 851969;
 HEAP32[$4811 >> 2] = 65535;
 HEAP16[$646 >> 1] = 19;
 HEAP16[$4812 >> 1] = 687;
 HEAP16[$4813 >> 1] = 1;
 HEAP16[$4814 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $645, $646);
 $21778 = $647;
 HEAP32[$21778 >> 2] = 45023252;
 HEAP32[$21778 + 4 >> 2] = 65654;
 HEAP32[$4815 >> 2] = 65535;
 HEAP16[$648 >> 1] = 20;
 HEAP16[$4816 >> 1] = 687;
 HEAP16[$4817 >> 1] = 118;
 HEAP16[$4818 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $647, $648);
 $21782 = $649;
 HEAP32[$21782 >> 2] = 45088788;
 HEAP32[$21782 + 4 >> 2] = 786550;
 HEAP32[$4819 >> 2] = 54937;
 HEAP16[$650 >> 1] = 20;
 HEAP16[$4820 >> 1] = 688;
 HEAP16[$4821 >> 1] = 118;
 HEAP16[$4822 >> 1] = 12;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $649, $650);
 $21786 = $651;
 HEAP32[$21786 >> 2] = 4784130;
 HEAP32[$21786 + 4 >> 2] = 40173760;
 HEAP32[$4823 >> 2] = 65535;
 HEAP16[$652 >> 1] = 2;
 HEAP16[$4824 >> 1] = 73;
 HEAP16[$4825 >> 1] = 192;
 HEAP16[$4826 >> 1] = 613;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $651, $652);
 $21790 = $653;
 HEAP32[$21790 >> 2] = 4654079;
 HEAP32[$21790 + 4 >> 2] = 1572865;
 HEAP32[$4827 >> 2] = 65535;
 HEAP16[$654 >> 1] = 1023;
 HEAP16[$4828 >> 1] = 71;
 HEAP16[$4829 >> 1] = 1;
 HEAP16[$4830 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $653, $654);
 $21794 = $655;
 HEAP32[$21794 >> 2] = 6160583;
 HEAP32[$21794 + 4 >> 2] = 66360;
 HEAP32[$4831 >> 2] = 65535;
 HEAP16[$656 >> 1] = 199;
 HEAP16[$4832 >> 1] = 94;
 HEAP16[$4833 >> 1] = 824;
 HEAP16[$4834 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $655, $656);
 $21798 = $657;
 HEAP32[$21798 >> 2] = 4653255;
 HEAP32[$21798 + 4 >> 2] = 1507329;
 HEAP32[$4835 >> 2] = 33808;
 HEAP16[$658 >> 1] = 199;
 HEAP16[$4836 >> 1] = 71;
 HEAP16[$4837 >> 1] = 1;
 HEAP16[$4838 >> 1] = 23;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $657, $658);
 $21802 = $659;
 HEAP32[$21802 >> 2] = 4653256;
 HEAP32[$21802 + 4 >> 2] = 66359;
 HEAP32[$4839 >> 2] = 33808;
 HEAP16[$660 >> 1] = 200;
 HEAP16[$4840 >> 1] = 71;
 HEAP16[$4841 >> 1] = 823;
 HEAP16[$4842 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $659, $660);
 $21806 = $661;
 HEAP32[$21806 >> 2] = 44957836;
 HEAP32[$21806 + 4 >> 2] = 1048614;
 HEAP8[$4843 >> 0] = -16;
 HEAP32[$4844 >> 2] = 65535;
 HEAP32[$4845 >> 2] = 54937;
 HEAP8[$4846 >> 0] = 0;
 HEAP8[$4847 >> 0] = 7;
 HEAP8[$4848 >> 0] = 3;
 HEAP8[$4849 >> 0] = -86;
 HEAP32[$4850 >> 2] = 0;
 HEAP16[$4850 + 4 >> 1] = 0;
 HEAP8[$4850 + 6 >> 0] = 0;
 HEAP16[$662 >> 1] = 140;
 HEAP16[$4851 >> 1] = 686;
 HEAP16[$4852 >> 1] = 38;
 HEAP16[$4853 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK9RDPPatBltRK4Rect($front, $661, $662);
 $21810 = $663;
 HEAP32[$21810 >> 2] = 44957835;
 HEAP32[$21810 + 4 >> 2] = 1048577;
 HEAP32[$4854 >> 2] = 16904;
 HEAP16[$664 >> 1] = 139;
 HEAP16[$4855 >> 1] = 686;
 HEAP16[$4856 >> 1] = 1;
 HEAP16[$4857 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $663, $664);
 $21814 = $665;
 HEAP32[$21814 >> 2] = 45940754;
 HEAP32[$21814 + 4 >> 2] = 65657;
 HEAP32[$4858 >> 2] = 16904;
 HEAP16[$666 >> 1] = 18;
 HEAP16[$4859 >> 1] = 701;
 HEAP16[$4860 >> 1] = 121;
 HEAP16[$4861 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $665, $666);
 $21818 = $667;
 HEAP32[$21818 >> 2] = 44957714;
 HEAP32[$21818 + 4 >> 2] = 983041;
 HEAP32[$4862 >> 2] = 54937;
 HEAP16[$668 >> 1] = 18;
 HEAP16[$4863 >> 1] = 686;
 HEAP16[$4864 >> 1] = 1;
 HEAP16[$4865 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $667, $668);
 $21822 = $669;
 HEAP32[$21822 >> 2] = 44957715;
 HEAP32[$21822 + 4 >> 2] = 65656;
 HEAP32[$4866 >> 2] = 54937;
 HEAP16[$670 >> 1] = 19;
 HEAP16[$4867 >> 1] = 686;
 HEAP16[$4868 >> 1] = 120;
 HEAP16[$4869 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $669, $670);
 $21826 = $671;
 HEAP32[$21826 >> 2] = 45023370;
 HEAP32[$21826 + 4 >> 2] = 917505;
 HEAP32[$4870 >> 2] = 33808;
 HEAP16[$672 >> 1] = 138;
 HEAP16[$4871 >> 1] = 687;
 HEAP16[$4872 >> 1] = 1;
 HEAP16[$4873 >> 1] = 14;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $671, $672);
 $21830 = $673;
 HEAP32[$21830 >> 2] = 45875219;
 HEAP32[$21830 + 4 >> 2] = 65655;
 HEAP32[$4874 >> 2] = 33808;
 HEAP16[$674 >> 1] = 19;
 HEAP16[$4875 >> 1] = 700;
 HEAP16[$4876 >> 1] = 119;
 HEAP16[$4877 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $673, $674);
 $21834 = $675;
 HEAP32[$21834 >> 2] = 45023251;
 HEAP32[$21834 + 4 >> 2] = 851969;
 HEAP32[$4878 >> 2] = 65535;
 HEAP16[$676 >> 1] = 19;
 HEAP16[$4879 >> 1] = 687;
 HEAP16[$4880 >> 1] = 1;
 HEAP16[$4881 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $675, $676);
 $21838 = $677;
 HEAP32[$21838 >> 2] = 45023252;
 HEAP32[$21838 + 4 >> 2] = 65654;
 HEAP32[$4882 >> 2] = 65535;
 HEAP16[$678 >> 1] = 20;
 HEAP16[$4883 >> 1] = 687;
 HEAP16[$4884 >> 1] = 118;
 HEAP16[$4885 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $677, $678);
 $21842 = $679;
 HEAP32[$21842 >> 2] = 45088788;
 HEAP32[$21842 + 4 >> 2] = 786550;
 HEAP32[$4886 >> 2] = 54937;
 HEAP16[$680 >> 1] = 20;
 HEAP16[$4887 >> 1] = 688;
 HEAP16[$4888 >> 1] = 118;
 HEAP16[$4889 >> 1] = 12;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $679, $680);
 $21846 = $681;
 HEAP32[$21846 >> 2] = 6357193;
 HEAP32[$21846 + 4 >> 2] = 39125805;
 HEAP32[$4890 >> 2] = 65535;
 HEAP16[$682 >> 1] = 201;
 HEAP16[$4891 >> 1] = 97;
 HEAP16[$4892 >> 1] = 813;
 HEAP16[$4893 >> 1] = 597;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $681, $682);
 $21850 = $683;
 HEAP32[$21850 >> 2] = 6357193;
 HEAP32[$21850 + 4 >> 2] = 39650101;
 HEAP32[$4894 >> 2] = 65535;
 HEAP16[$684 >> 1] = 201;
 HEAP16[$4895 >> 1] = 97;
 HEAP16[$4896 >> 1] = 821;
 HEAP16[$4897 >> 1] = 605;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $683, $684);
 $21854 = $685;
 HEAP32[$21854 >> 2] = 4653252;
 HEAP32[$21854 + 4 >> 2] = 41484291;
 HEAP32[$4898 >> 2] = 54937;
 HEAP16[$686 >> 1] = 196;
 HEAP16[$4899 >> 1] = 71;
 HEAP16[$4900 >> 1] = 3;
 HEAP16[$4901 >> 1] = 633;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $685, $686);
 $21858 = $687;
 HEAP32[$21858 >> 2] = 4718792;
 HEAP32[$21858 + 4 >> 2] = 1442615;
 HEAP32[$4902 >> 2] = 16904;
 HEAP16[$688 >> 1] = 200;
 HEAP16[$4903 >> 1] = 72;
 HEAP16[$4904 >> 1] = 823;
 HEAP16[$4905 >> 1] = 22;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $687, $688);
 $21862 = $689;
 HEAP32[$21862 >> 2] = 4784152;
 HEAP32[$21862 + 4 >> 2] = 1048746;
 HEAP32[$4906 >> 2] = 2349;
 HEAP16[$690 >> 1] = 24;
 HEAP16[$4907 >> 1] = 73;
 HEAP16[$4908 >> 1] = 170;
 HEAP16[$4909 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $689, $690);
 $21866 = $691;
 HEAP32[$21866 >> 2] = 5832747;
 HEAP32[$21866 + 4 >> 2] = 1048606;
 HEAP32[$4910 >> 2] = 65535;
 HEAP16[$692 >> 1] = 43;
 HEAP16[$4911 >> 1] = 89;
 HEAP16[$4912 >> 1] = 30;
 HEAP16[$4913 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $691, $692);
 $21870 = $693;
 HEAP32[$21870 >> 2] = 6094857;
 HEAP32[$21870 + 4 >> 2] = 524296;
 HEAP32[$4914 >> 2] = 65535;
 HEAP16[$694 >> 1] = 9;
 HEAP16[$4915 >> 1] = 93;
 HEAP16[$4916 >> 1] = 8;
 HEAP16[$4917 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $693, $694);
 $21874 = $695;
 HEAP32[$21874 >> 2] = 6357003;
 HEAP32[$21874 + 4 >> 2] = 65541;
 HEAP32[$4918 >> 2] = 0;
 HEAP16[$696 >> 1] = 11;
 HEAP16[$4919 >> 1] = 97;
 HEAP16[$4920 >> 1] = 5;
 HEAP16[$4921 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $695, $696);
 $21878 = $697;
 HEAP32[$21878 >> 2] = 6225933;
 HEAP32[$21878 + 4 >> 2] = 327681;
 HEAP32[$4922 >> 2] = 0;
 HEAP16[$698 >> 1] = 13;
 HEAP16[$4923 >> 1] = 95;
 HEAP16[$4924 >> 1] = 1;
 HEAP16[$4925 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $697, $698);
 $21882 = $699;
 HEAP32[$21882 >> 2] = 6094857;
 HEAP32[$21882 + 4 >> 2] = 65545;
 HEAP32[$4926 >> 2] = 33808;
 HEAP16[$700 >> 1] = 9;
 HEAP16[$4927 >> 1] = 93;
 HEAP16[$4928 >> 1] = 9;
 HEAP16[$4929 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $699, $700);
 $21886 = $701;
 HEAP32[$21886 >> 2] = 6094857;
 HEAP32[$21886 + 4 >> 2] = 589825;
 HEAP32[$4930 >> 2] = 33808;
 HEAP16[$702 >> 1] = 9;
 HEAP16[$4931 >> 1] = 93;
 HEAP16[$4932 >> 1] = 1;
 HEAP16[$4933 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $701, $702);
 $21890 = $703;
 HEAP32[$21890 >> 2] = 6619145;
 HEAP32[$21890 + 4 >> 2] = 65545;
 HEAP32[$4934 >> 2] = 33808;
 HEAP16[$704 >> 1] = 9;
 HEAP16[$4935 >> 1] = 101;
 HEAP16[$4936 >> 1] = 9;
 HEAP16[$4937 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $703, $704);
 $21894 = $705;
 HEAP32[$21894 >> 2] = 6094865;
 HEAP32[$21894 + 4 >> 2] = 589825;
 HEAP32[$4938 >> 2] = 33808;
 HEAP16[$706 >> 1] = 17;
 HEAP16[$4939 >> 1] = 93;
 HEAP16[$4940 >> 1] = 1;
 HEAP16[$4941 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $705, $706);
 $21898 = $707;
 HEAP32[$21898 >> 2] = 6881323;
 HEAP32[$21898 + 4 >> 2] = 1048652;
 HEAP32[$4942 >> 2] = 65535;
 HEAP16[$708 >> 1] = 43;
 HEAP16[$4943 >> 1] = 105;
 HEAP16[$4944 >> 1] = 76;
 HEAP16[$4945 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $707, $708);
 $21902 = $709;
 HEAP32[$21902 >> 2] = 7143433;
 HEAP32[$21902 + 4 >> 2] = 524296;
 HEAP32[$4946 >> 2] = 65535;
 HEAP16[$710 >> 1] = 9;
 HEAP16[$4947 >> 1] = 109;
 HEAP16[$4948 >> 1] = 8;
 HEAP16[$4949 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $709, $710);
 $21906 = $711;
 HEAP32[$21906 >> 2] = 7405579;
 HEAP32[$21906 + 4 >> 2] = 65541;
 HEAP32[$4950 >> 2] = 0;
 HEAP16[$712 >> 1] = 11;
 HEAP16[$4951 >> 1] = 113;
 HEAP16[$4952 >> 1] = 5;
 HEAP16[$4953 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $711, $712);
 $21910 = $713;
 HEAP32[$21910 >> 2] = 7274509;
 HEAP32[$21910 + 4 >> 2] = 327681;
 HEAP32[$4954 >> 2] = 0;
 HEAP16[$714 >> 1] = 13;
 HEAP16[$4955 >> 1] = 111;
 HEAP16[$4956 >> 1] = 1;
 HEAP16[$4957 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $713, $714);
 $21914 = $715;
 HEAP32[$21914 >> 2] = 7143433;
 HEAP32[$21914 + 4 >> 2] = 65545;
 HEAP32[$4958 >> 2] = 33808;
 HEAP16[$716 >> 1] = 9;
 HEAP16[$4959 >> 1] = 109;
 HEAP16[$4960 >> 1] = 9;
 HEAP16[$4961 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $715, $716);
 $21918 = $717;
 HEAP32[$21918 >> 2] = 7143433;
 HEAP32[$21918 + 4 >> 2] = 589825;
 HEAP32[$4962 >> 2] = 33808;
 HEAP16[$718 >> 1] = 9;
 HEAP16[$4963 >> 1] = 109;
 HEAP16[$4964 >> 1] = 1;
 HEAP16[$4965 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $717, $718);
 $21922 = $719;
 HEAP32[$21922 >> 2] = 7667721;
 HEAP32[$21922 + 4 >> 2] = 65545;
 HEAP32[$4966 >> 2] = 33808;
 HEAP16[$720 >> 1] = 9;
 HEAP16[$4967 >> 1] = 117;
 HEAP16[$4968 >> 1] = 9;
 HEAP16[$4969 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $719, $720);
 $21926 = $721;
 HEAP32[$21926 >> 2] = 7143441;
 HEAP32[$21926 + 4 >> 2] = 589825;
 HEAP32[$4970 >> 2] = 33808;
 HEAP16[$722 >> 1] = 17;
 HEAP16[$4971 >> 1] = 109;
 HEAP16[$4972 >> 1] = 1;
 HEAP16[$4973 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $721, $722);
 $21930 = $723;
 HEAP32[$21930 >> 2] = 7929899;
 HEAP32[$21930 + 4 >> 2] = 1048634;
 HEAP32[$4974 >> 2] = 65535;
 HEAP16[$724 >> 1] = 43;
 HEAP16[$4975 >> 1] = 121;
 HEAP16[$4976 >> 1] = 58;
 HEAP16[$4977 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $723, $724);
 $21934 = $725;
 HEAP32[$21934 >> 2] = 8192009;
 HEAP32[$21934 + 4 >> 2] = 524296;
 HEAP32[$4978 >> 2] = 65535;
 HEAP16[$726 >> 1] = 9;
 HEAP16[$4979 >> 1] = 125;
 HEAP16[$4980 >> 1] = 8;
 HEAP16[$4981 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $725, $726);
 $21938 = $727;
 HEAP32[$21938 >> 2] = 8454155;
 HEAP32[$21938 + 4 >> 2] = 65541;
 HEAP32[$4982 >> 2] = 0;
 HEAP16[$728 >> 1] = 11;
 HEAP16[$4983 >> 1] = 129;
 HEAP16[$4984 >> 1] = 5;
 HEAP16[$4985 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $727, $728);
 $21942 = $729;
 HEAP32[$21942 >> 2] = 8323085;
 HEAP32[$21942 + 4 >> 2] = 327681;
 HEAP32[$4986 >> 2] = 0;
 HEAP16[$730 >> 1] = 13;
 HEAP16[$4987 >> 1] = 127;
 HEAP16[$4988 >> 1] = 1;
 HEAP16[$4989 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $729, $730);
 $21946 = $731;
 HEAP32[$21946 >> 2] = 8192009;
 HEAP32[$21946 + 4 >> 2] = 65545;
 HEAP32[$4990 >> 2] = 33808;
 HEAP16[$732 >> 1] = 9;
 HEAP16[$4991 >> 1] = 125;
 HEAP16[$4992 >> 1] = 9;
 HEAP16[$4993 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $731, $732);
 $21950 = $733;
 HEAP32[$21950 >> 2] = 8192009;
 HEAP32[$21950 + 4 >> 2] = 589825;
 HEAP32[$4994 >> 2] = 33808;
 HEAP16[$734 >> 1] = 9;
 HEAP16[$4995 >> 1] = 125;
 HEAP16[$4996 >> 1] = 1;
 HEAP16[$4997 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $733, $734);
 $21954 = $735;
 HEAP32[$21954 >> 2] = 8716297;
 HEAP32[$21954 + 4 >> 2] = 65545;
 HEAP32[$4998 >> 2] = 33808;
 HEAP16[$736 >> 1] = 9;
 HEAP16[$4999 >> 1] = 133;
 HEAP16[$5000 >> 1] = 9;
 HEAP16[$5001 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $735, $736);
 $21958 = $737;
 HEAP32[$21958 >> 2] = 8192017;
 HEAP32[$21958 + 4 >> 2] = 589825;
 HEAP32[$5002 >> 2] = 33808;
 HEAP16[$738 >> 1] = 17;
 HEAP16[$5003 >> 1] = 125;
 HEAP16[$5004 >> 1] = 1;
 HEAP16[$5005 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $737, $738);
 $21962 = $739;
 HEAP32[$21962 >> 2] = 8978475;
 HEAP32[$21962 + 4 >> 2] = 1048645;
 HEAP32[$5006 >> 2] = 65535;
 HEAP16[$740 >> 1] = 43;
 HEAP16[$5007 >> 1] = 137;
 HEAP16[$5008 >> 1] = 69;
 HEAP16[$5009 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $739, $740);
 $21966 = $741;
 HEAP32[$21966 >> 2] = 9240585;
 HEAP32[$21966 + 4 >> 2] = 524296;
 HEAP32[$5010 >> 2] = 65535;
 HEAP16[$742 >> 1] = 9;
 HEAP16[$5011 >> 1] = 141;
 HEAP16[$5012 >> 1] = 8;
 HEAP16[$5013 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $741, $742);
 $21970 = $743;
 HEAP32[$21970 >> 2] = 9502731;
 HEAP32[$21970 + 4 >> 2] = 65541;
 HEAP32[$5014 >> 2] = 0;
 HEAP16[$744 >> 1] = 11;
 HEAP16[$5015 >> 1] = 145;
 HEAP16[$5016 >> 1] = 5;
 HEAP16[$5017 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $743, $744);
 $21974 = $745;
 HEAP32[$21974 >> 2] = 9371661;
 HEAP32[$21974 + 4 >> 2] = 327681;
 HEAP32[$5018 >> 2] = 0;
 HEAP16[$746 >> 1] = 13;
 HEAP16[$5019 >> 1] = 143;
 HEAP16[$5020 >> 1] = 1;
 HEAP16[$5021 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $745, $746);
 $21978 = $747;
 HEAP32[$21978 >> 2] = 9240585;
 HEAP32[$21978 + 4 >> 2] = 65545;
 HEAP32[$5022 >> 2] = 33808;
 HEAP16[$748 >> 1] = 9;
 HEAP16[$5023 >> 1] = 141;
 HEAP16[$5024 >> 1] = 9;
 HEAP16[$5025 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $747, $748);
 $21982 = $749;
 HEAP32[$21982 >> 2] = 9240585;
 HEAP32[$21982 + 4 >> 2] = 589825;
 HEAP32[$5026 >> 2] = 33808;
 HEAP16[$750 >> 1] = 9;
 HEAP16[$5027 >> 1] = 141;
 HEAP16[$5028 >> 1] = 1;
 HEAP16[$5029 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $749, $750);
 $21986 = $751;
 HEAP32[$21986 >> 2] = 9764873;
 HEAP32[$21986 + 4 >> 2] = 65545;
 HEAP32[$5030 >> 2] = 33808;
 HEAP16[$752 >> 1] = 9;
 HEAP16[$5031 >> 1] = 149;
 HEAP16[$5032 >> 1] = 9;
 HEAP16[$5033 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $751, $752);
 $21990 = $753;
 HEAP32[$21990 >> 2] = 9240593;
 HEAP32[$21990 + 4 >> 2] = 589825;
 HEAP32[$5034 >> 2] = 33808;
 HEAP16[$754 >> 1] = 17;
 HEAP16[$5035 >> 1] = 141;
 HEAP16[$5036 >> 1] = 1;
 HEAP16[$5037 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $753, $754);
 $21994 = $755;
 HEAP32[$21994 >> 2] = 10027051;
 HEAP32[$21994 + 4 >> 2] = 1048624;
 HEAP32[$5038 >> 2] = 65535;
 HEAP16[$756 >> 1] = 43;
 HEAP16[$5039 >> 1] = 153;
 HEAP16[$5040 >> 1] = 48;
 HEAP16[$5041 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $755, $756);
 $21998 = $757;
 HEAP32[$21998 >> 2] = 10289161;
 HEAP32[$21998 + 4 >> 2] = 524296;
 HEAP32[$5042 >> 2] = 65535;
 HEAP16[$758 >> 1] = 9;
 HEAP16[$5043 >> 1] = 157;
 HEAP16[$5044 >> 1] = 8;
 HEAP16[$5045 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $757, $758);
 $22002 = $759;
 HEAP32[$22002 >> 2] = 10551307;
 HEAP32[$22002 + 4 >> 2] = 65541;
 HEAP32[$5046 >> 2] = 0;
 HEAP16[$760 >> 1] = 11;
 HEAP16[$5047 >> 1] = 161;
 HEAP16[$5048 >> 1] = 5;
 HEAP16[$5049 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $759, $760);
 $22006 = $761;
 HEAP32[$22006 >> 2] = 10420237;
 HEAP32[$22006 + 4 >> 2] = 327681;
 HEAP32[$5050 >> 2] = 0;
 HEAP16[$762 >> 1] = 13;
 HEAP16[$5051 >> 1] = 159;
 HEAP16[$5052 >> 1] = 1;
 HEAP16[$5053 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $761, $762);
 $22010 = $763;
 HEAP32[$22010 >> 2] = 10289161;
 HEAP32[$22010 + 4 >> 2] = 65545;
 HEAP32[$5054 >> 2] = 33808;
 HEAP16[$764 >> 1] = 9;
 HEAP16[$5055 >> 1] = 157;
 HEAP16[$5056 >> 1] = 9;
 HEAP16[$5057 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $763, $764);
 $22014 = $765;
 HEAP32[$22014 >> 2] = 10289161;
 HEAP32[$22014 + 4 >> 2] = 589825;
 HEAP32[$5058 >> 2] = 33808;
 HEAP16[$766 >> 1] = 9;
 HEAP16[$5059 >> 1] = 157;
 HEAP16[$5060 >> 1] = 1;
 HEAP16[$5061 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $765, $766);
 $22018 = $767;
 HEAP32[$22018 >> 2] = 10813449;
 HEAP32[$22018 + 4 >> 2] = 65545;
 HEAP32[$5062 >> 2] = 33808;
 HEAP16[$768 >> 1] = 9;
 HEAP16[$5063 >> 1] = 165;
 HEAP16[$5064 >> 1] = 9;
 HEAP16[$5065 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $767, $768);
 $22022 = $769;
 HEAP32[$22022 >> 2] = 10289169;
 HEAP32[$22022 + 4 >> 2] = 589825;
 HEAP32[$5066 >> 2] = 33808;
 HEAP16[$770 >> 1] = 17;
 HEAP16[$5067 >> 1] = 157;
 HEAP16[$5068 >> 1] = 1;
 HEAP16[$5069 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $769, $770);
 $22026 = $771;
 HEAP32[$22026 >> 2] = 4718792;
 HEAP32[$22026 + 4 >> 2] = 1442615;
 HEAP32[$5070 >> 2] = 16904;
 HEAP16[$772 >> 1] = 200;
 HEAP16[$5071 >> 1] = 72;
 HEAP16[$5072 >> 1] = 823;
 HEAP16[$5073 >> 1] = 22;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $771, $772);
 $22030 = $773;
 HEAP32[$22030 >> 2] = 46269219;
 HEAP32[$22030 + 4 >> 2] = 1179649;
 HEAP32[$5074 >> 2] = 65535;
 HEAP16[$774 >> 1] = 803;
 HEAP16[$5075 >> 1] = 706;
 HEAP16[$5076 >> 1] = 1;
 HEAP16[$5077 >> 1] = 18;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $773, $774);
 $22034 = $775;
 HEAP32[$22034 >> 2] = 47382528;
 HEAP32[$22034 + 4 >> 2] = 66339;
 HEAP32[$5078 >> 2] = 65535;
 HEAP16[$776 >> 1] = 0;
 HEAP16[$5079 >> 1] = 723;
 HEAP16[$5080 >> 1] = 803;
 HEAP16[$5081 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $775, $776);
 $22038 = $777;
 HEAP32[$22038 >> 2] = 46268416;
 HEAP32[$22038 + 4 >> 2] = 1114113;
 HEAP32[$5082 >> 2] = 33808;
 HEAP16[$778 >> 1] = 0;
 HEAP16[$5083 >> 1] = 706;
 HEAP16[$5084 >> 1] = 1;
 HEAP16[$5085 >> 1] = 17;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $777, $778);
 $22042 = $779;
 HEAP32[$22042 >> 2] = 46268417;
 HEAP32[$22042 + 4 >> 2] = 66338;
 HEAP32[$5086 >> 2] = 33808;
 HEAP16[$780 >> 1] = 1;
 HEAP16[$5087 >> 1] = 706;
 HEAP16[$5088 >> 1] = 802;
 HEAP16[$5089 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $779, $780);
 $22046 = $781;
 HEAP32[$22046 >> 2] = 46333953;
 HEAP32[$22046 + 4 >> 2] = 1049378;
 HEAP32[$5090 >> 2] = 54937;
 HEAP16[$782 >> 1] = 1;
 HEAP16[$5091 >> 1] = 707;
 HEAP16[$5092 >> 1] = 802;
 HEAP16[$5093 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $781, $782);
 $22050 = $783;
 HEAP32[$22050 >> 2] = 46269352;
 HEAP32[$22050 + 4 >> 2] = 1179649;
 HEAP32[$5094 >> 2] = 65535;
 HEAP16[$784 >> 1] = 936;
 HEAP16[$5095 >> 1] = 706;
 HEAP16[$5096 >> 1] = 1;
 HEAP16[$5097 >> 1] = 18;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $783, $784);
 $22054 = $785;
 HEAP32[$22054 >> 2] = 47383334;
 HEAP32[$22054 + 4 >> 2] = 65666;
 HEAP32[$5098 >> 2] = 65535;
 HEAP16[$786 >> 1] = 806;
 HEAP16[$5099 >> 1] = 723;
 HEAP16[$5100 >> 1] = 130;
 HEAP16[$5101 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $785, $786);
 $22058 = $787;
 HEAP32[$22058 >> 2] = 46269222;
 HEAP32[$22058 + 4 >> 2] = 1114113;
 HEAP32[$5102 >> 2] = 33808;
 HEAP16[$788 >> 1] = 806;
 HEAP16[$5103 >> 1] = 706;
 HEAP16[$5104 >> 1] = 1;
 HEAP16[$5105 >> 1] = 17;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $787, $788);
 $22062 = $789;
 HEAP32[$22062 >> 2] = 46269223;
 HEAP32[$22062 + 4 >> 2] = 65665;
 HEAP32[$5106 >> 2] = 33808;
 HEAP16[$790 >> 1] = 807;
 HEAP16[$5107 >> 1] = 706;
 HEAP16[$5108 >> 1] = 129;
 HEAP16[$5109 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $789, $790);
 $22066 = $791;
 HEAP32[$22066 >> 2] = 46334759;
 HEAP32[$22066 + 4 >> 2] = 1048705;
 HEAP32[$5110 >> 2] = 54937;
 HEAP16[$792 >> 1] = 807;
 HEAP16[$5111 >> 1] = 707;
 HEAP16[$5112 >> 1] = 129;
 HEAP16[$5113 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $791, $792);
 $22070 = $793;
 HEAP32[$22070 >> 2] = 46269437;
 HEAP32[$22070 + 4 >> 2] = 1179649;
 HEAP32[$5114 >> 2] = 65535;
 HEAP16[$794 >> 1] = 1021;
 HEAP16[$5115 >> 1] = 706;
 HEAP16[$5116 >> 1] = 1;
 HEAP16[$5117 >> 1] = 18;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $793, $794);
 $22074 = $795;
 HEAP32[$22074 >> 2] = 47383467;
 HEAP32[$22074 + 4 >> 2] = 65618;
 HEAP32[$5118 >> 2] = 65535;
 HEAP16[$796 >> 1] = 939;
 HEAP16[$5119 >> 1] = 723;
 HEAP16[$5120 >> 1] = 82;
 HEAP16[$5121 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $795, $796);
 $22078 = $797;
 HEAP32[$22078 >> 2] = 46269355;
 HEAP32[$22078 + 4 >> 2] = 1114113;
 HEAP32[$5122 >> 2] = 33808;
 HEAP16[$798 >> 1] = 939;
 HEAP16[$5123 >> 1] = 706;
 HEAP16[$5124 >> 1] = 1;
 HEAP16[$5125 >> 1] = 17;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $797, $798);
 $22082 = $799;
 HEAP32[$22082 >> 2] = 46269356;
 HEAP32[$22082 + 4 >> 2] = 65617;
 HEAP32[$5126 >> 2] = 33808;
 HEAP16[$800 >> 1] = 940;
 HEAP16[$5127 >> 1] = 706;
 HEAP16[$5128 >> 1] = 81;
 HEAP16[$5129 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $799, $800);
 $22086 = $801;
 HEAP32[$22086 >> 2] = 46334892;
 HEAP32[$22086 + 4 >> 2] = 1048657;
 HEAP32[$5130 >> 2] = 54937;
 HEAP16[$802 >> 1] = 940;
 HEAP16[$5131 >> 1] = 707;
 HEAP16[$5132 >> 1] = 81;
 HEAP16[$5133 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $801, $802);
 $22090 = $803;
 HEAP32[$22090 >> 2] = 1245184;
 HEAP32[$22090 + 4 >> 2] = 3408896;
 HEAP32[$5134 >> 2] = 54937;
 HEAP16[$804 >> 1] = 0;
 HEAP16[$5135 >> 1] = 19;
 HEAP16[$5136 >> 1] = 1024;
 HEAP16[$5137 >> 1] = 52;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $803, $804);
 $22094 = $805;
 HEAP32[$22094 >> 2] = 1246207;
 HEAP32[$22094 + 4 >> 2] = 3276801;
 HEAP32[$5138 >> 2] = 65535;
 HEAP16[$806 >> 1] = 1023;
 HEAP16[$5139 >> 1] = 19;
 HEAP16[$5140 >> 1] = 1;
 HEAP16[$5141 >> 1] = 50;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $805, $806);
 $22098 = $807;
 HEAP32[$22098 >> 2] = 4456448;
 HEAP32[$22098 + 4 >> 2] = 66559;
 HEAP32[$5142 >> 2] = 65535;
 HEAP16[$808 >> 1] = 0;
 HEAP16[$5143 >> 1] = 68;
 HEAP16[$5144 >> 1] = 1023;
 HEAP16[$5145 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $807, $808);
 $22102 = $809;
 HEAP32[$22102 >> 2] = 1245184;
 HEAP32[$22102 + 4 >> 2] = 3211265;
 HEAP32[$5146 >> 2] = 33808;
 HEAP16[$810 >> 1] = 0;
 HEAP16[$5147 >> 1] = 19;
 HEAP16[$5148 >> 1] = 1;
 HEAP16[$5149 >> 1] = 49;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $809, $810);
 $22106 = $811;
 HEAP32[$22106 >> 2] = 1245185;
 HEAP32[$22106 + 4 >> 2] = 66558;
 HEAP32[$5150 >> 2] = 33808;
 HEAP16[$812 >> 1] = 1;
 HEAP16[$5151 >> 1] = 19;
 HEAP16[$5152 >> 1] = 1022;
 HEAP16[$5153 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $811, $812);
 $22110 = $813;
 HEAP32[$22110 >> 2] = 1311742;
 HEAP32[$22110 + 4 >> 2] = 3145729;
 HEAP32[$5154 >> 2] = 33808;
 HEAP16[$814 >> 1] = 1022;
 HEAP16[$5155 >> 1] = 20;
 HEAP16[$5156 >> 1] = 1;
 HEAP16[$5157 >> 1] = 48;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $813, $814);
 $22114 = $815;
 HEAP32[$22114 >> 2] = 4390913;
 HEAP32[$22114 + 4 >> 2] = 66557;
 HEAP32[$5158 >> 2] = 33808;
 HEAP16[$816 >> 1] = 1;
 HEAP16[$5159 >> 1] = 67;
 HEAP16[$5160 >> 1] = 1021;
 HEAP16[$5161 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $815, $816);
 $22118 = $817;
 HEAP32[$22118 >> 2] = 1310721;
 HEAP32[$22118 + 4 >> 2] = 3080193;
 HEAP32[$5162 >> 2] = 65535;
 HEAP16[$818 >> 1] = 1;
 HEAP16[$5163 >> 1] = 20;
 HEAP16[$5164 >> 1] = 1;
 HEAP16[$5165 >> 1] = 47;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $817, $818);
 $22122 = $819;
 HEAP32[$22122 >> 2] = 1310722;
 HEAP32[$22122 + 4 >> 2] = 66556;
 HEAP32[$5166 >> 2] = 65535;
 HEAP16[$820 >> 1] = 2;
 HEAP16[$5167 >> 1] = 20;
 HEAP16[$5168 >> 1] = 1020;
 HEAP16[$5169 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $819, $820);
 $22126 = $821;
 HEAP32[$22126 >> 2] = 1376258;
 HEAP32[$22126 + 4 >> 2] = 3015676;
 HEAP32[$5170 >> 2] = 54937;
 HEAP16[$822 >> 1] = 2;
 HEAP16[$5171 >> 1] = 21;
 HEAP16[$5172 >> 1] = 1020;
 HEAP16[$5173 >> 1] = 46;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $821, $822);
 $22130 = $823;
 HEAP32[$22130 >> 2] = 2883586;
 HEAP32[$22130 + 4 >> 2] = 66556;
 HEAP32[$5174 >> 2] = 65535;
 HEAP16[$824 >> 1] = 2;
 HEAP16[$5175 >> 1] = 44;
 HEAP16[$5176 >> 1] = 1020;
 HEAP16[$5177 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $823, $824);
 $22134 = $825;
 HEAP32[$22134 >> 2] = 2818050;
 HEAP32[$22134 + 4 >> 2] = 66556;
 HEAP32[$5178 >> 2] = 33808;
 HEAP16[$826 >> 1] = 2;
 HEAP16[$5179 >> 1] = 43;
 HEAP16[$5180 >> 1] = 1020;
 HEAP16[$5181 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $825, $826);
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 94;
 HEAP16[$5182 >> 1] = 728;
 HEAP16[$5183 >> 1] = 846;
 HEAP16[$5184 >> 1] = 748;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31804) label = 2980; else {
  $22140 = HEAP32[915090] | 0;
  if (($22140 | 0) == (HEAP32[915088] | 0)) label = 2980; else {
   $$lcssa$i$i3563 = 3660360;
   $$lcssa8$i$i3562 = $22140;
   label = 2981;
  }
 }
 do if ((label | 0) == 2980) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31804) {
   $22147 = HEAP32[915096] | 0;
   if (($22147 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3563 = 3660384;
    $$lcssa8$i$i3562 = $22147;
    label = 2981;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31804) {
   $22152 = HEAP32[915102] | 0;
   if (($22152 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3563 = 3660408;
    $$lcssa8$i$i3562 = $22152;
    label = 2981;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31804) {
   $22157 = HEAP32[915108] | 0;
   if (($22157 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3563 = 3660432;
    $$lcssa8$i$i3562 = $22157;
    label = 2981;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31804) {
   $22162 = HEAP32[915114] | 0;
   if (($22162 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3563 = 3660456;
    $$lcssa8$i$i3562 = $22162;
    label = 2981;
    break;
   }
  }
  $$3$i$i3564 = __Znwj(31804) | 0;
 } while (0);
 if ((label | 0) == 2981) {
  $22145 = $$lcssa8$i$i3562 + -4 | 0;
  HEAP32[$$lcssa$i$i3563 >> 2] = $22145;
  $$3$i$i3564 = HEAP32[$22145 >> 2] | 0;
 }
 $22166 = $$3$i$i3564 + 52 | 0;
 HEAP16[$$3$i$i3564 >> 1] = 756;
 HEAP16[$$3$i$i3564 + 2 >> 1] = 21;
 HEAP8[$$3$i$i3564 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3564 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3564 + 8 >> 2] = 1512;
 HEAP32[$$3$i$i3564 + 12 >> 2] = 31752;
 HEAP32[$$3$i$i3564 + 16 >> 2] = $22166;
 HEAP32[$$3$i$i3564 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3564 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3564 + 48 >> 0] = 0;
 HEAP32[$827 >> 2] = $$3$i$i3564;
 _memcpy($22166 | 0, 2034546, 1512) | 0;
 _memcpy($$3$i$i3564 + 1564 | 0, 2036058, 1512) | 0;
 _memcpy($$3$i$i3564 + 3076 | 0, 2037570, 1512) | 0;
 _memcpy($$3$i$i3564 + 4588 | 0, 2039082, 1512) | 0;
 _memcpy($$3$i$i3564 + 6100 | 0, 2040594, 1512) | 0;
 _memcpy($$3$i$i3564 + 7612 | 0, 2042106, 1512) | 0;
 _memcpy($$3$i$i3564 + 9124 | 0, 2043618, 1512) | 0;
 _memcpy($$3$i$i3564 + 10636 | 0, 2045130, 1512) | 0;
 _memcpy($$3$i$i3564 + 12148 | 0, 2046642, 1512) | 0;
 _memcpy($$3$i$i3564 + 13660 | 0, 2048154, 1512) | 0;
 _memcpy($$3$i$i3564 + 15172 | 0, 2049666, 1512) | 0;
 _memcpy($$3$i$i3564 + 16684 | 0, 2051178, 1512) | 0;
 _memcpy($$3$i$i3564 + 18196 | 0, 2052690, 1512) | 0;
 _memcpy($$3$i$i3564 + 19708 | 0, 2054202, 1512) | 0;
 _memcpy($$3$i$i3564 + 21220 | 0, 2055714, 1512) | 0;
 _memcpy($$3$i$i3564 + 22732 | 0, 2057226, 1512) | 0;
 _memcpy($$3$i$i3564 + 24244 | 0, 2058738, 1512) | 0;
 _memcpy($$3$i$i3564 + 25756 | 0, 2060250, 1512) | 0;
 _memcpy($$3$i$i3564 + 27268 | 0, 2061762, 1512) | 0;
 _memcpy($$3$i$i3564 + 28780 | 0, 2063274, 1512) | 0;
 _memcpy($$3$i$i3564 + 30292 | 0, 2064786, 1512) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $827);
 if ($$3$i$i3564 | 0) {
  $22197 = $$3$i$i3564 + 5 | 0;
  $22199 = (HEAP8[$22197 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$22197 >> 0] = $22199;
  if (!($22199 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3564);
  HEAP32[$827 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 94;
 HEAP16[$5185 >> 1] = 749;
 HEAP16[$5186 >> 1] = 846;
 HEAP16[$5187 >> 1] = 765;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 25756) label = 2996; else {
  $22203 = HEAP32[915090] | 0;
  if (($22203 | 0) == (HEAP32[915088] | 0)) label = 2996; else {
   $$lcssa$i$i3575 = 3660360;
   $$lcssa8$i$i3574 = $22203;
   label = 2997;
  }
 }
 do if ((label | 0) == 2996) {
  if ((HEAP32[915097] | 0) >>> 0 >= 25756) {
   $22210 = HEAP32[915096] | 0;
   if (($22210 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3575 = 3660384;
    $$lcssa8$i$i3574 = $22210;
    label = 2997;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 25756) {
   $22215 = HEAP32[915102] | 0;
   if (($22215 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3575 = 3660408;
    $$lcssa8$i$i3574 = $22215;
    label = 2997;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 25756) {
   $22220 = HEAP32[915108] | 0;
   if (($22220 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3575 = 3660432;
    $$lcssa8$i$i3574 = $22220;
    label = 2997;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 25756) {
   $22225 = HEAP32[915114] | 0;
   if (($22225 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3575 = 3660456;
    $$lcssa8$i$i3574 = $22225;
    label = 2997;
    break;
   }
  }
  $$3$i$i3576 = __Znwj(25756) | 0;
 } while (0);
 if ((label | 0) == 2997) {
  $22208 = $$lcssa8$i$i3574 + -4 | 0;
  HEAP32[$$lcssa$i$i3575 >> 2] = $22208;
  $$3$i$i3576 = HEAP32[$22208 >> 2] | 0;
 }
 $22229 = $$3$i$i3576 + 52 | 0;
 HEAP16[$$3$i$i3576 >> 1] = 756;
 HEAP16[$$3$i$i3576 + 2 >> 1] = 17;
 HEAP8[$$3$i$i3576 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3576 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3576 + 8 >> 2] = 1512;
 HEAP32[$$3$i$i3576 + 12 >> 2] = 25704;
 HEAP32[$$3$i$i3576 + 16 >> 2] = $22229;
 HEAP32[$$3$i$i3576 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3576 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3576 + 48 >> 0] = 0;
 HEAP32[$828 >> 2] = $$3$i$i3576;
 _memcpy($22229 | 0, 2066298, 1512) | 0;
 _memcpy($$3$i$i3576 + 1564 | 0, 2067810, 1512) | 0;
 _memcpy($$3$i$i3576 + 3076 | 0, 2069322, 1512) | 0;
 _memcpy($$3$i$i3576 + 4588 | 0, 2070834, 1512) | 0;
 _memcpy($$3$i$i3576 + 6100 | 0, 2072346, 1512) | 0;
 _memcpy($$3$i$i3576 + 7612 | 0, 2073858, 1512) | 0;
 _memcpy($$3$i$i3576 + 9124 | 0, 2075370, 1512) | 0;
 _memcpy($$3$i$i3576 + 10636 | 0, 2076882, 1512) | 0;
 _memcpy($$3$i$i3576 + 12148 | 0, 2078394, 1512) | 0;
 _memcpy($$3$i$i3576 + 13660 | 0, 2079906, 1512) | 0;
 _memcpy($$3$i$i3576 + 15172 | 0, 2081418, 1512) | 0;
 _memcpy($$3$i$i3576 + 16684 | 0, 2082930, 1512) | 0;
 _memcpy($$3$i$i3576 + 18196 | 0, 2084442, 1512) | 0;
 _memcpy($$3$i$i3576 + 19708 | 0, 2085954, 1512) | 0;
 _memcpy($$3$i$i3576 + 21220 | 0, 2087466, 1512) | 0;
 _memcpy($$3$i$i3576 + 22732 | 0, 2088978, 1512) | 0;
 _memcpy($$3$i$i3576 + 24244 | 0, 2090490, 1512) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $828);
 if ($$3$i$i3576 | 0) {
  $22256 = $$3$i$i3576 + 5 | 0;
  $22258 = (HEAP8[$22256 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$22256 >> 0] = $22258;
  if (!($22258 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3576);
  HEAP32[$828 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 2;
 HEAP16[$5188 >> 1] = 21;
 HEAP16[$5189 >> 1] = 1021;
 HEAP16[$5190 >> 1] = 35;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30652) label = 3012; else {
  $22262 = HEAP32[915090] | 0;
  if (($22262 | 0) == (HEAP32[915088] | 0)) label = 3012; else {
   $$lcssa$i$i3598 = 3660360;
   $$lcssa8$i$i3597 = $22262;
   label = 3013;
  }
 }
 do if ((label | 0) == 3012) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30652) {
   $22269 = HEAP32[915096] | 0;
   if (($22269 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3598 = 3660384;
    $$lcssa8$i$i3597 = $22269;
    label = 3013;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30652) {
   $22274 = HEAP32[915102] | 0;
   if (($22274 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3598 = 3660408;
    $$lcssa8$i$i3597 = $22274;
    label = 3013;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30652) {
   $22279 = HEAP32[915108] | 0;
   if (($22279 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3598 = 3660432;
    $$lcssa8$i$i3597 = $22279;
    label = 3013;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30652) {
   $22284 = HEAP32[915114] | 0;
   if (($22284 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3598 = 3660456;
    $$lcssa8$i$i3597 = $22284;
    label = 3013;
    break;
   }
  }
  $$3$i$i3599 = __Znwj(30652) | 0;
 } while (0);
 if ((label | 0) == 3013) {
  $22267 = $$lcssa8$i$i3597 + -4 | 0;
  HEAP32[$$lcssa$i$i3598 >> 2] = $22267;
  $$3$i$i3599 = HEAP32[$22267 >> 2] | 0;
 }
 $22288 = $$3$i$i3599 + 52 | 0;
 HEAP16[$$3$i$i3599 >> 1] = 1020;
 HEAP16[$$3$i$i3599 + 2 >> 1] = 15;
 HEAP8[$$3$i$i3599 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3599 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3599 + 8 >> 2] = 2040;
 HEAP32[$$3$i$i3599 + 12 >> 2] = 30600;
 HEAP32[$$3$i$i3599 + 16 >> 2] = $22288;
 HEAP32[$$3$i$i3599 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3599 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3599 + 48 >> 0] = 0;
 HEAP32[$829 >> 2] = $$3$i$i3599;
 _memcpy($22288 | 0, 2092002, 2040) | 0;
 _memcpy($$3$i$i3599 + 2092 | 0, 2094042, 2040) | 0;
 _memcpy($$3$i$i3599 + 4132 | 0, 2096082, 2040) | 0;
 _memcpy($$3$i$i3599 + 6172 | 0, 2098122, 2040) | 0;
 _memcpy($$3$i$i3599 + 8212 | 0, 2100162, 2040) | 0;
 _memcpy($$3$i$i3599 + 10252 | 0, 2102202, 2040) | 0;
 _memcpy($$3$i$i3599 + 12292 | 0, 2104242, 2040) | 0;
 _memcpy($$3$i$i3599 + 14332 | 0, 2106282, 2040) | 0;
 _memcpy($$3$i$i3599 + 16372 | 0, 2108322, 2040) | 0;
 _memcpy($$3$i$i3599 + 18412 | 0, 2110362, 2040) | 0;
 _memcpy($$3$i$i3599 + 20452 | 0, 2112402, 2040) | 0;
 _memcpy($$3$i$i3599 + 22492 | 0, 2114442, 2040) | 0;
 _memcpy($$3$i$i3599 + 24532 | 0, 2116482, 2040) | 0;
 _memcpy($$3$i$i3599 + 26572 | 0, 2118522, 2040) | 0;
 _memcpy($$3$i$i3599 + 28612 | 0, 2120562, 2040) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $829);
 if ($$3$i$i3599 | 0) {
  $22313 = $$3$i$i3599 + 5 | 0;
  $22315 = (HEAP8[$22313 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$22313 >> 0] = $22315;
  if (!($22315 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3599);
  HEAP32[$829 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 2;
 HEAP16[$5191 >> 1] = 36;
 HEAP16[$5192 >> 1] = 1021;
 HEAP16[$5193 >> 1] = 42;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 14332) label = 3028; else {
  $22319 = HEAP32[915090] | 0;
  if (($22319 | 0) == (HEAP32[915088] | 0)) label = 3028; else {
   $$lcssa$i$i3610 = 3660360;
   $$lcssa8$i$i3609 = $22319;
   label = 3029;
  }
 }
 do if ((label | 0) == 3028) {
  if ((HEAP32[915097] | 0) >>> 0 >= 14332) {
   $22326 = HEAP32[915096] | 0;
   if (($22326 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3610 = 3660384;
    $$lcssa8$i$i3609 = $22326;
    label = 3029;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 14332) {
   $22331 = HEAP32[915102] | 0;
   if (($22331 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3610 = 3660408;
    $$lcssa8$i$i3609 = $22331;
    label = 3029;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 14332) {
   $22336 = HEAP32[915108] | 0;
   if (($22336 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3610 = 3660432;
    $$lcssa8$i$i3609 = $22336;
    label = 3029;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 14332) {
   $22341 = HEAP32[915114] | 0;
   if (($22341 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3610 = 3660456;
    $$lcssa8$i$i3609 = $22341;
    label = 3029;
    break;
   }
  }
  $$3$i$i3611 = __Znwj(14332) | 0;
 } while (0);
 if ((label | 0) == 3029) {
  $22324 = $$lcssa8$i$i3609 + -4 | 0;
  HEAP32[$$lcssa$i$i3610 >> 2] = $22324;
  $$3$i$i3611 = HEAP32[$22324 >> 2] | 0;
 }
 $22345 = $$3$i$i3611 + 52 | 0;
 HEAP16[$$3$i$i3611 >> 1] = 1020;
 HEAP16[$$3$i$i3611 + 2 >> 1] = 7;
 HEAP8[$$3$i$i3611 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3611 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3611 + 8 >> 2] = 2040;
 HEAP32[$$3$i$i3611 + 12 >> 2] = 14280;
 HEAP32[$$3$i$i3611 + 16 >> 2] = $22345;
 HEAP32[$$3$i$i3611 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3611 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3611 + 48 >> 0] = 0;
 HEAP32[$830 >> 2] = $$3$i$i3611;
 _memcpy($22345 | 0, 2122602, 2040) | 0;
 _memcpy($$3$i$i3611 + 2092 | 0, 2124642, 2040) | 0;
 _memcpy($$3$i$i3611 + 4132 | 0, 2126682, 2040) | 0;
 _memcpy($$3$i$i3611 + 6172 | 0, 2128722, 2040) | 0;
 _memcpy($$3$i$i3611 + 8212 | 0, 2130762, 2040) | 0;
 _memcpy($$3$i$i3611 + 10252 | 0, 2132802, 2040) | 0;
 _memcpy($$3$i$i3611 + 12292 | 0, 2134842, 2040) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $830);
 if ($$3$i$i3611 | 0) {
  $22362 = $$3$i$i3611 + 5 | 0;
  $22364 = (HEAP8[$22362 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$22362 >> 0] = $22364;
  if (!($22364 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3611);
  HEAP32[$830 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 2;
 HEAP16[$5194 >> 1] = 45;
 HEAP16[$5195 >> 1] = 1021;
 HEAP16[$5196 >> 1] = 59;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30652) label = 3044; else {
  $22368 = HEAP32[915090] | 0;
  if (($22368 | 0) == (HEAP32[915088] | 0)) label = 3044; else {
   $$lcssa$i$i3623 = 3660360;
   $$lcssa8$i$i3622 = $22368;
   label = 3045;
  }
 }
 do if ((label | 0) == 3044) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30652) {
   $22375 = HEAP32[915096] | 0;
   if (($22375 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3623 = 3660384;
    $$lcssa8$i$i3622 = $22375;
    label = 3045;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30652) {
   $22380 = HEAP32[915102] | 0;
   if (($22380 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3623 = 3660408;
    $$lcssa8$i$i3622 = $22380;
    label = 3045;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30652) {
   $22385 = HEAP32[915108] | 0;
   if (($22385 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3623 = 3660432;
    $$lcssa8$i$i3622 = $22385;
    label = 3045;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30652) {
   $22390 = HEAP32[915114] | 0;
   if (($22390 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3623 = 3660456;
    $$lcssa8$i$i3622 = $22390;
    label = 3045;
    break;
   }
  }
  $$3$i$i3624 = __Znwj(30652) | 0;
 } while (0);
 if ((label | 0) == 3045) {
  $22373 = $$lcssa8$i$i3622 + -4 | 0;
  HEAP32[$$lcssa$i$i3623 >> 2] = $22373;
  $$3$i$i3624 = HEAP32[$22373 >> 2] | 0;
 }
 $22394 = $$3$i$i3624 + 52 | 0;
 HEAP16[$$3$i$i3624 >> 1] = 1020;
 HEAP16[$$3$i$i3624 + 2 >> 1] = 15;
 HEAP8[$$3$i$i3624 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3624 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3624 + 8 >> 2] = 2040;
 HEAP32[$$3$i$i3624 + 12 >> 2] = 30600;
 HEAP32[$$3$i$i3624 + 16 >> 2] = $22394;
 HEAP32[$$3$i$i3624 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3624 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3624 + 48 >> 0] = 0;
 HEAP32[$831 >> 2] = $$3$i$i3624;
 _memcpy($22394 | 0, 2136882, 2040) | 0;
 _memcpy($$3$i$i3624 + 2092 | 0, 2138922, 2040) | 0;
 _memcpy($$3$i$i3624 + 4132 | 0, 2140962, 2040) | 0;
 _memcpy($$3$i$i3624 + 6172 | 0, 2143002, 2040) | 0;
 _memcpy($$3$i$i3624 + 8212 | 0, 2145042, 2040) | 0;
 _memcpy($$3$i$i3624 + 10252 | 0, 2147082, 2040) | 0;
 _memcpy($$3$i$i3624 + 12292 | 0, 2149122, 2040) | 0;
 _memcpy($$3$i$i3624 + 14332 | 0, 2151162, 2040) | 0;
 _memcpy($$3$i$i3624 + 16372 | 0, 2153202, 2040) | 0;
 _memcpy($$3$i$i3624 + 18412 | 0, 2155242, 2040) | 0;
 _memcpy($$3$i$i3624 + 20452 | 0, 2157282, 2040) | 0;
 _memcpy($$3$i$i3624 + 22492 | 0, 2159322, 2040) | 0;
 _memcpy($$3$i$i3624 + 24532 | 0, 2161362, 2040) | 0;
 _memcpy($$3$i$i3624 + 26572 | 0, 2163402, 2040) | 0;
 _memcpy($$3$i$i3624 + 28612 | 0, 2165442, 2040) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $831);
 if ($$3$i$i3624 | 0) {
  $22419 = $$3$i$i3624 + 5 | 0;
  $22421 = (HEAP8[$22419 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$22419 >> 0] = $22421;
  if (!($22421 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3624);
  HEAP32[$831 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 2;
 HEAP16[$5197 >> 1] = 60;
 HEAP16[$5198 >> 1] = 1021;
 HEAP16[$5199 >> 1] = 66;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 14332) label = 3060; else {
  $22425 = HEAP32[915090] | 0;
  if (($22425 | 0) == (HEAP32[915088] | 0)) label = 3060; else {
   $$lcssa$i$i3635 = 3660360;
   $$lcssa8$i$i3634 = $22425;
   label = 3061;
  }
 }
 do if ((label | 0) == 3060) {
  if ((HEAP32[915097] | 0) >>> 0 >= 14332) {
   $22432 = HEAP32[915096] | 0;
   if (($22432 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3635 = 3660384;
    $$lcssa8$i$i3634 = $22432;
    label = 3061;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 14332) {
   $22437 = HEAP32[915102] | 0;
   if (($22437 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3635 = 3660408;
    $$lcssa8$i$i3634 = $22437;
    label = 3061;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 14332) {
   $22442 = HEAP32[915108] | 0;
   if (($22442 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3635 = 3660432;
    $$lcssa8$i$i3634 = $22442;
    label = 3061;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 14332) {
   $22447 = HEAP32[915114] | 0;
   if (($22447 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3635 = 3660456;
    $$lcssa8$i$i3634 = $22447;
    label = 3061;
    break;
   }
  }
  $$3$i$i3636 = __Znwj(14332) | 0;
 } while (0);
 if ((label | 0) == 3061) {
  $22430 = $$lcssa8$i$i3634 + -4 | 0;
  HEAP32[$$lcssa$i$i3635 >> 2] = $22430;
  $$3$i$i3636 = HEAP32[$22430 >> 2] | 0;
 }
 $22451 = $$3$i$i3636 + 52 | 0;
 HEAP16[$$3$i$i3636 >> 1] = 1020;
 HEAP16[$$3$i$i3636 + 2 >> 1] = 7;
 HEAP8[$$3$i$i3636 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3636 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3636 + 8 >> 2] = 2040;
 HEAP32[$$3$i$i3636 + 12 >> 2] = 14280;
 HEAP32[$$3$i$i3636 + 16 >> 2] = $22451;
 HEAP32[$$3$i$i3636 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3636 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3636 + 48 >> 0] = 0;
 HEAP32[$832 >> 2] = $$3$i$i3636;
 _memcpy($22451 | 0, 2167482, 2040) | 0;
 _memcpy($$3$i$i3636 + 2092 | 0, 2169522, 2040) | 0;
 _memcpy($$3$i$i3636 + 4132 | 0, 2171562, 2040) | 0;
 _memcpy($$3$i$i3636 + 6172 | 0, 2173602, 2040) | 0;
 _memcpy($$3$i$i3636 + 8212 | 0, 2175642, 2040) | 0;
 _memcpy($$3$i$i3636 + 10252 | 0, 2177682, 2040) | 0;
 _memcpy($$3$i$i3636 + 12292 | 0, 2179722, 2040) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $832);
 if ($$3$i$i3636 | 0) {
  $22468 = $$3$i$i3636 + 5 | 0;
  $22470 = (HEAP8[$22468 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$22468 >> 0] = $22470;
  if (!($22470 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3636);
  HEAP32[$832 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 43;
 HEAP16[$5200 >> 1] = 153;
 HEAP16[$5201 >> 1] = 90;
 HEAP16[$5202 >> 1] = 168;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1588) label = 3076; else {
  $22474 = HEAP32[915090] | 0;
  if (($22474 | 0) == (HEAP32[915088] | 0)) label = 3076; else {
   $$lcssa$i$i3658 = 3660360;
   $$lcssa8$i$i3657 = $22474;
   label = 3077;
  }
 }
 do if ((label | 0) == 3076) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1588) {
   $22481 = HEAP32[915096] | 0;
   if (($22481 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3658 = 3660384;
    $$lcssa8$i$i3657 = $22481;
    label = 3077;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1588) {
   $22486 = HEAP32[915102] | 0;
   if (($22486 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3658 = 3660408;
    $$lcssa8$i$i3657 = $22486;
    label = 3077;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1588) {
   $22491 = HEAP32[915108] | 0;
   if (($22491 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3658 = 3660432;
    $$lcssa8$i$i3657 = $22491;
    label = 3077;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1588) {
   $22496 = HEAP32[915114] | 0;
   if (($22496 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3658 = 3660456;
    $$lcssa8$i$i3657 = $22496;
    label = 3077;
    break;
   }
  }
  $$3$i$i3659 = __Znwj(1588) | 0;
 } while (0);
 if ((label | 0) == 3077) {
  $22479 = $$lcssa8$i$i3657 + -4 | 0;
  HEAP32[$$lcssa$i$i3658 >> 2] = $22479;
  $$3$i$i3659 = HEAP32[$22479 >> 2] | 0;
 }
 $22500 = $$3$i$i3659 + 52 | 0;
 HEAP16[$$3$i$i3659 >> 1] = 48;
 HEAP16[$$3$i$i3659 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3659 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3659 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3659 + 8 >> 2] = 96;
 HEAP32[$$3$i$i3659 + 12 >> 2] = 1536;
 HEAP32[$$3$i$i3659 + 16 >> 2] = $22500;
 HEAP32[$$3$i$i3659 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3659 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3659 + 48 >> 0] = 0;
 HEAP32[$833 >> 2] = $$3$i$i3659;
 dest = $22500;
 src = 2181762;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3659 + 148 | 0;
 src = 2181858;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3659 + 244 | 0;
 src = 2181954;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3659 + 340 | 0;
 src = 2182050;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3659 + 436 | 0;
 src = 2182146;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3659 + 532 | 0;
 src = 2182242;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3659 + 628 | 0;
 src = 2182338;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3659 + 724 | 0;
 src = 2182434;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3659 + 820 | 0;
 src = 2182530;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3659 + 916 | 0;
 src = 2182626;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3659 + 1012 | 0;
 src = 2182722;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3659 + 1108 | 0;
 src = 2182818;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3659 + 1204 | 0;
 src = 2182914;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3659 + 1300 | 0;
 src = 2183010;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3659 + 1396 | 0;
 src = 2183106;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3659 + 1492 | 0;
 src = 2183202;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $833);
 if ($$3$i$i3659 | 0) {
  $22526 = $$3$i$i3659 + 5 | 0;
  $22528 = (HEAP8[$22526 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$22526 >> 0] = $22528;
  if (!($22528 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3659);
  HEAP32[$833 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 43;
 HEAP16[$5203 >> 1] = 137;
 HEAP16[$5204 >> 1] = 111;
 HEAP16[$5205 >> 1] = 152;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2356) label = 3092; else {
  $22532 = HEAP32[915090] | 0;
  if (($22532 | 0) == (HEAP32[915088] | 0)) label = 3092; else {
   $$lcssa$i$i3670 = 3660360;
   $$lcssa8$i$i3669 = $22532;
   label = 3093;
  }
 }
 do if ((label | 0) == 3092) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2356) {
   $22539 = HEAP32[915096] | 0;
   if (($22539 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3670 = 3660384;
    $$lcssa8$i$i3669 = $22539;
    label = 3093;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2356) {
   $22544 = HEAP32[915102] | 0;
   if (($22544 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3670 = 3660408;
    $$lcssa8$i$i3669 = $22544;
    label = 3093;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2356) {
   $22549 = HEAP32[915108] | 0;
   if (($22549 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3670 = 3660432;
    $$lcssa8$i$i3669 = $22549;
    label = 3093;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2356) {
   $22554 = HEAP32[915114] | 0;
   if (($22554 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3670 = 3660456;
    $$lcssa8$i$i3669 = $22554;
    label = 3093;
    break;
   }
  }
  $$3$i$i3671 = __Znwj(2356) | 0;
 } while (0);
 if ((label | 0) == 3093) {
  $22537 = $$lcssa8$i$i3669 + -4 | 0;
  HEAP32[$$lcssa$i$i3670 >> 2] = $22537;
  $$3$i$i3671 = HEAP32[$22537 >> 2] | 0;
 }
 $22558 = $$3$i$i3671 + 52 | 0;
 HEAP16[$$3$i$i3671 >> 1] = 72;
 HEAP16[$$3$i$i3671 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3671 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3671 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3671 + 8 >> 2] = 144;
 HEAP32[$$3$i$i3671 + 12 >> 2] = 2304;
 HEAP32[$$3$i$i3671 + 16 >> 2] = $22558;
 HEAP32[$$3$i$i3671 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3671 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3671 + 48 >> 0] = 0;
 HEAP32[$834 >> 2] = $$3$i$i3671;
 _memcpy($22558 | 0, 2183298, 144) | 0;
 _memcpy($$3$i$i3671 + 196 | 0, 2183442, 144) | 0;
 _memcpy($$3$i$i3671 + 340 | 0, 2183586, 144) | 0;
 _memcpy($$3$i$i3671 + 484 | 0, 2183730, 144) | 0;
 _memcpy($$3$i$i3671 + 628 | 0, 2183874, 144) | 0;
 _memcpy($$3$i$i3671 + 772 | 0, 2184018, 144) | 0;
 _memcpy($$3$i$i3671 + 916 | 0, 2184162, 144) | 0;
 _memcpy($$3$i$i3671 + 1060 | 0, 2184306, 144) | 0;
 _memcpy($$3$i$i3671 + 1204 | 0, 2184450, 144) | 0;
 _memcpy($$3$i$i3671 + 1348 | 0, 2184594, 144) | 0;
 _memcpy($$3$i$i3671 + 1492 | 0, 2184738, 144) | 0;
 _memcpy($$3$i$i3671 + 1636 | 0, 2184882, 144) | 0;
 _memcpy($$3$i$i3671 + 1780 | 0, 2185026, 144) | 0;
 _memcpy($$3$i$i3671 + 1924 | 0, 2185170, 144) | 0;
 _memcpy($$3$i$i3671 + 2068 | 0, 2185314, 144) | 0;
 _memcpy($$3$i$i3671 + 2212 | 0, 2185458, 144) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $834);
 if ($$3$i$i3671 | 0) {
  $22584 = $$3$i$i3671 + 5 | 0;
  $22586 = (HEAP8[$22584 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$22584 >> 0] = $22586;
  if (!($22586 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3671);
  HEAP32[$834 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 43;
 HEAP16[$5206 >> 1] = 121;
 HEAP16[$5207 >> 1] = 100;
 HEAP16[$5208 >> 1] = 136;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1972) label = 3108; else {
  $22590 = HEAP32[915090] | 0;
  if (($22590 | 0) == (HEAP32[915088] | 0)) label = 3108; else {
   $$lcssa$i$i3682 = 3660360;
   $$lcssa8$i$i3681 = $22590;
   label = 3109;
  }
 }
 do if ((label | 0) == 3108) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1972) {
   $22597 = HEAP32[915096] | 0;
   if (($22597 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3682 = 3660384;
    $$lcssa8$i$i3681 = $22597;
    label = 3109;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1972) {
   $22602 = HEAP32[915102] | 0;
   if (($22602 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3682 = 3660408;
    $$lcssa8$i$i3681 = $22602;
    label = 3109;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1972) {
   $22607 = HEAP32[915108] | 0;
   if (($22607 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3682 = 3660432;
    $$lcssa8$i$i3681 = $22607;
    label = 3109;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1972) {
   $22612 = HEAP32[915114] | 0;
   if (($22612 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3682 = 3660456;
    $$lcssa8$i$i3681 = $22612;
    label = 3109;
    break;
   }
  }
  $$3$i$i3683 = __Znwj(1972) | 0;
 } while (0);
 if ((label | 0) == 3109) {
  $22595 = $$lcssa8$i$i3681 + -4 | 0;
  HEAP32[$$lcssa$i$i3682 >> 2] = $22595;
  $$3$i$i3683 = HEAP32[$22595 >> 2] | 0;
 }
 $22616 = $$3$i$i3683 + 52 | 0;
 HEAP16[$$3$i$i3683 >> 1] = 60;
 HEAP16[$$3$i$i3683 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3683 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3683 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3683 + 8 >> 2] = 120;
 HEAP32[$$3$i$i3683 + 12 >> 2] = 1920;
 HEAP32[$$3$i$i3683 + 16 >> 2] = $22616;
 HEAP32[$$3$i$i3683 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3683 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3683 + 48 >> 0] = 0;
 HEAP32[$835 >> 2] = $$3$i$i3683;
 dest = $22616;
 src = 2185602;
 stop = dest + 120 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3683 + 172 | 0;
 src = 2185722;
 stop = dest + 120 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3683 + 292 | 0;
 src = 2185842;
 stop = dest + 120 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3683 + 412 | 0;
 src = 2185962;
 stop = dest + 120 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3683 + 532 | 0;
 src = 2186082;
 stop = dest + 120 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3683 + 652 | 0;
 src = 2186202;
 stop = dest + 120 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3683 + 772 | 0;
 src = 2186322;
 stop = dest + 120 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3683 + 892 | 0;
 src = 2186442;
 stop = dest + 120 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3683 + 1012 | 0;
 src = 2186562;
 stop = dest + 120 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3683 + 1132 | 0;
 src = 2186682;
 stop = dest + 120 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3683 + 1252 | 0;
 src = 2186802;
 stop = dest + 120 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3683 + 1372 | 0;
 src = 2186922;
 stop = dest + 120 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3683 + 1492 | 0;
 src = 2187042;
 stop = dest + 120 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3683 + 1612 | 0;
 src = 2187162;
 stop = dest + 120 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3683 + 1732 | 0;
 src = 2187282;
 stop = dest + 120 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3683 + 1852 | 0;
 src = 2187402;
 stop = dest + 120 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $835);
 if ($$3$i$i3683 | 0) {
  $22642 = $$3$i$i3683 + 5 | 0;
  $22644 = (HEAP8[$22642 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$22642 >> 0] = $22644;
  if (!($22644 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3683);
  HEAP32[$835 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 43;
 HEAP16[$5209 >> 1] = 105;
 HEAP16[$5210 >> 1] = 118;
 HEAP16[$5211 >> 1] = 120;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2484) label = 3124; else {
  $22648 = HEAP32[915090] | 0;
  if (($22648 | 0) == (HEAP32[915088] | 0)) label = 3124; else {
   $$lcssa$i$i3694 = 3660360;
   $$lcssa8$i$i3693 = $22648;
   label = 3125;
  }
 }
 do if ((label | 0) == 3124) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2484) {
   $22655 = HEAP32[915096] | 0;
   if (($22655 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3694 = 3660384;
    $$lcssa8$i$i3693 = $22655;
    label = 3125;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2484) {
   $22660 = HEAP32[915102] | 0;
   if (($22660 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3694 = 3660408;
    $$lcssa8$i$i3693 = $22660;
    label = 3125;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2484) {
   $22665 = HEAP32[915108] | 0;
   if (($22665 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3694 = 3660432;
    $$lcssa8$i$i3693 = $22665;
    label = 3125;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2484) {
   $22670 = HEAP32[915114] | 0;
   if (($22670 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3694 = 3660456;
    $$lcssa8$i$i3693 = $22670;
    label = 3125;
    break;
   }
  }
  $$3$i$i3695 = __Znwj(2484) | 0;
 } while (0);
 if ((label | 0) == 3125) {
  $22653 = $$lcssa8$i$i3693 + -4 | 0;
  HEAP32[$$lcssa$i$i3694 >> 2] = $22653;
  $$3$i$i3695 = HEAP32[$22653 >> 2] | 0;
 }
 $22674 = $$3$i$i3695 + 52 | 0;
 HEAP16[$$3$i$i3695 >> 1] = 76;
 HEAP16[$$3$i$i3695 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3695 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3695 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3695 + 8 >> 2] = 152;
 HEAP32[$$3$i$i3695 + 12 >> 2] = 2432;
 HEAP32[$$3$i$i3695 + 16 >> 2] = $22674;
 HEAP32[$$3$i$i3695 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3695 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3695 + 48 >> 0] = 0;
 HEAP32[$836 >> 2] = $$3$i$i3695;
 _memcpy($22674 | 0, 2187522, 152) | 0;
 _memcpy($$3$i$i3695 + 204 | 0, 2187674, 152) | 0;
 _memcpy($$3$i$i3695 + 356 | 0, 2187826, 152) | 0;
 _memcpy($$3$i$i3695 + 508 | 0, 2187978, 152) | 0;
 _memcpy($$3$i$i3695 + 660 | 0, 2188130, 152) | 0;
 _memcpy($$3$i$i3695 + 812 | 0, 2188282, 152) | 0;
 _memcpy($$3$i$i3695 + 964 | 0, 2188434, 152) | 0;
 _memcpy($$3$i$i3695 + 1116 | 0, 2188586, 152) | 0;
 _memcpy($$3$i$i3695 + 1268 | 0, 2188738, 152) | 0;
 _memcpy($$3$i$i3695 + 1420 | 0, 2188890, 152) | 0;
 _memcpy($$3$i$i3695 + 1572 | 0, 2189042, 152) | 0;
 _memcpy($$3$i$i3695 + 1724 | 0, 2189194, 152) | 0;
 _memcpy($$3$i$i3695 + 1876 | 0, 2189346, 152) | 0;
 _memcpy($$3$i$i3695 + 2028 | 0, 2189498, 152) | 0;
 _memcpy($$3$i$i3695 + 2180 | 0, 2189650, 152) | 0;
 _memcpy($$3$i$i3695 + 2332 | 0, 2189802, 152) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $836);
 if ($$3$i$i3695 | 0) {
  $22700 = $$3$i$i3695 + 5 | 0;
  $22702 = (HEAP8[$22700 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$22700 >> 0] = $22702;
  if (!($22702 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3695);
  HEAP32[$836 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 43;
 HEAP16[$5212 >> 1] = 89;
 HEAP16[$5213 >> 1] = 72;
 HEAP16[$5214 >> 1] = 104;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1076) label = 3140; else {
  $22706 = HEAP32[915090] | 0;
  if (($22706 | 0) == (HEAP32[915088] | 0)) label = 3140; else {
   $$lcssa$i$i3706 = 3660360;
   $$lcssa8$i$i3705 = $22706;
   label = 3141;
  }
 }
 do if ((label | 0) == 3140) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1076) {
   $22713 = HEAP32[915096] | 0;
   if (($22713 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3706 = 3660384;
    $$lcssa8$i$i3705 = $22713;
    label = 3141;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1076) {
   $22718 = HEAP32[915102] | 0;
   if (($22718 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3706 = 3660408;
    $$lcssa8$i$i3705 = $22718;
    label = 3141;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1076) {
   $22723 = HEAP32[915108] | 0;
   if (($22723 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3706 = 3660432;
    $$lcssa8$i$i3705 = $22723;
    label = 3141;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1076) {
   $22728 = HEAP32[915114] | 0;
   if (($22728 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3706 = 3660456;
    $$lcssa8$i$i3705 = $22728;
    label = 3141;
    break;
   }
  }
  $$3$i$i3707 = __Znwj(1076) | 0;
 } while (0);
 if ((label | 0) == 3141) {
  $22711 = $$lcssa8$i$i3705 + -4 | 0;
  HEAP32[$$lcssa$i$i3706 >> 2] = $22711;
  $$3$i$i3707 = HEAP32[$22711 >> 2] | 0;
 }
 $22732 = $$3$i$i3707 + 52 | 0;
 HEAP16[$$3$i$i3707 >> 1] = 32;
 HEAP16[$$3$i$i3707 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3707 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3707 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3707 + 8 >> 2] = 64;
 HEAP32[$$3$i$i3707 + 12 >> 2] = 1024;
 HEAP32[$$3$i$i3707 + 16 >> 2] = $22732;
 HEAP32[$$3$i$i3707 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3707 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3707 + 48 >> 0] = 0;
 HEAP32[$837 >> 2] = $$3$i$i3707;
 dest = $22732;
 src = 2189954;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3707 + 116 | 0;
 src = 2190018;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3707 + 180 | 0;
 src = 2190082;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3707 + 244 | 0;
 src = 2190146;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3707 + 308 | 0;
 src = 2190210;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3707 + 372 | 0;
 src = 2190274;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3707 + 436 | 0;
 src = 2190338;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3707 + 500 | 0;
 src = 2190402;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3707 + 564 | 0;
 src = 2190466;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3707 + 628 | 0;
 src = 2190530;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3707 + 692 | 0;
 src = 2190594;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3707 + 756 | 0;
 src = 2190658;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3707 + 820 | 0;
 src = 2190722;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3707 + 884 | 0;
 src = 2190786;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3707 + 948 | 0;
 src = 2190850;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3707 + 1012 | 0;
 src = 2190914;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $837);
 if ($$3$i$i3707 | 0) {
  $22758 = $$3$i$i3707 + 5 | 0;
  $22760 = (HEAP8[$22758 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$22758 >> 0] = $22760;
  if (!($22760 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3707);
  HEAP32[$837 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 24;
 HEAP16[$5215 >> 1] = 89;
 HEAP16[$5216 >> 1] = 39;
 HEAP16[$5217 >> 1] = 133;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1492) label = 3156; else {
  $22764 = HEAP32[915090] | 0;
  if (($22764 | 0) == (HEAP32[915088] | 0)) label = 3156; else {
   $$lcssa$i$i3718 = 3660360;
   $$lcssa8$i$i3717 = $22764;
   label = 3157;
  }
 }
 do if ((label | 0) == 3156) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1492) {
   $22771 = HEAP32[915096] | 0;
   if (($22771 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3718 = 3660384;
    $$lcssa8$i$i3717 = $22771;
    label = 3157;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1492) {
   $22776 = HEAP32[915102] | 0;
   if (($22776 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3718 = 3660408;
    $$lcssa8$i$i3717 = $22776;
    label = 3157;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1492) {
   $22781 = HEAP32[915108] | 0;
   if (($22781 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3718 = 3660432;
    $$lcssa8$i$i3717 = $22781;
    label = 3157;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1492) {
   $22786 = HEAP32[915114] | 0;
   if (($22786 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3718 = 3660456;
    $$lcssa8$i$i3717 = $22786;
    label = 3157;
    break;
   }
  }
  $$3$i$i3719 = __Znwj(1492) | 0;
 } while (0);
 if ((label | 0) == 3157) {
  $22769 = $$lcssa8$i$i3717 + -4 | 0;
  HEAP32[$$lcssa$i$i3718 >> 2] = $22769;
  $$3$i$i3719 = HEAP32[$22769 >> 2] | 0;
 }
 $22790 = $$3$i$i3719 + 52 | 0;
 HEAP16[$$3$i$i3719 >> 1] = 16;
 HEAP16[$$3$i$i3719 + 2 >> 1] = 45;
 HEAP8[$$3$i$i3719 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3719 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3719 + 8 >> 2] = 32;
 HEAP32[$$3$i$i3719 + 12 >> 2] = 1440;
 HEAP32[$$3$i$i3719 + 16 >> 2] = $22790;
 HEAP32[$$3$i$i3719 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3719 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3719 + 48 >> 0] = 0;
 HEAP32[$838 >> 2] = $$3$i$i3719;
 dest = $22790;
 src = 2190978;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 84 | 0;
 src = 2191010;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 116 | 0;
 src = 2191042;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 148 | 0;
 src = 2191074;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 180 | 0;
 src = 2191106;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 212 | 0;
 src = 2191138;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 244 | 0;
 src = 2191170;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 276 | 0;
 src = 2191202;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 308 | 0;
 src = 2191234;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 340 | 0;
 src = 2191266;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 372 | 0;
 src = 2191298;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 404 | 0;
 src = 2191330;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 436 | 0;
 src = 2191362;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 468 | 0;
 src = 2191394;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 500 | 0;
 src = 2191426;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 532 | 0;
 src = 2191458;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 564 | 0;
 src = 2191490;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 596 | 0;
 src = 2191522;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 628 | 0;
 src = 2191554;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 660 | 0;
 src = 2191586;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 692 | 0;
 src = 2191618;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 724 | 0;
 src = 2191650;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 756 | 0;
 src = 2191682;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 788 | 0;
 src = 2191714;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 820 | 0;
 src = 2191746;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 852 | 0;
 src = 2191778;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 884 | 0;
 src = 2191810;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 916 | 0;
 src = 2191842;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 948 | 0;
 src = 2191874;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 980 | 0;
 src = 2191906;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 1012 | 0;
 src = 2191938;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 1044 | 0;
 src = 2191970;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 1076 | 0;
 src = 2192002;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 1108 | 0;
 src = 2192034;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 1140 | 0;
 src = 2192066;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 1172 | 0;
 src = 2192098;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 1204 | 0;
 src = 2192130;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 1236 | 0;
 src = 2192162;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 1268 | 0;
 src = 2192194;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 1300 | 0;
 src = 2192226;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 1332 | 0;
 src = 2192258;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 1364 | 0;
 src = 2192290;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 1396 | 0;
 src = 2192322;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 1428 | 0;
 src = 2192354;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3719 + 1460 | 0;
 src = 2192386;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $838);
 if ($$3$i$i3719 | 0) {
  $22845 = $$3$i$i3719 + 5 | 0;
  $22847 = (HEAP8[$22845 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$22845 >> 0] = $22847;
  if (!($22847 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3719);
  HEAP32[$838 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 24;
 HEAP16[$5218 >> 1] = 134;
 HEAP16[$5219 >> 1] = 39;
 HEAP16[$5220 >> 1] = 140;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 276) label = 3172; else {
  $22851 = HEAP32[915090] | 0;
  if (($22851 | 0) == (HEAP32[915088] | 0)) label = 3172; else {
   $$lcssa$i$i3730 = 3660360;
   $$lcssa8$i$i3729 = $22851;
   label = 3173;
  }
 }
 do if ((label | 0) == 3172) {
  if ((HEAP32[915097] | 0) >>> 0 >= 276) {
   $22858 = HEAP32[915096] | 0;
   if (($22858 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3730 = 3660384;
    $$lcssa8$i$i3729 = $22858;
    label = 3173;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 276) {
   $22863 = HEAP32[915102] | 0;
   if (($22863 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3730 = 3660408;
    $$lcssa8$i$i3729 = $22863;
    label = 3173;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 276) {
   $22868 = HEAP32[915108] | 0;
   if (($22868 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3730 = 3660432;
    $$lcssa8$i$i3729 = $22868;
    label = 3173;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 276) {
   $22873 = HEAP32[915114] | 0;
   if (($22873 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3730 = 3660456;
    $$lcssa8$i$i3729 = $22873;
    label = 3173;
    break;
   }
  }
  $$3$i$i3731 = __Znwj(276) | 0;
 } while (0);
 if ((label | 0) == 3173) {
  $22856 = $$lcssa8$i$i3729 + -4 | 0;
  HEAP32[$$lcssa$i$i3730 >> 2] = $22856;
  $$3$i$i3731 = HEAP32[$22856 >> 2] | 0;
 }
 $22877 = $$3$i$i3731 + 52 | 0;
 HEAP16[$$3$i$i3731 >> 1] = 16;
 HEAP16[$$3$i$i3731 + 2 >> 1] = 7;
 HEAP8[$$3$i$i3731 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3731 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3731 + 8 >> 2] = 32;
 HEAP32[$$3$i$i3731 + 12 >> 2] = 224;
 HEAP32[$$3$i$i3731 + 16 >> 2] = $22877;
 HEAP32[$$3$i$i3731 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3731 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3731 + 48 >> 0] = 0;
 HEAP32[$839 >> 2] = $$3$i$i3731;
 dest = $22877;
 src = 2192418;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3731 + 84 | 0;
 src = 2192450;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3731 + 116 | 0;
 src = 2192482;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3731 + 148 | 0;
 src = 2192514;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3731 + 180 | 0;
 src = 2192546;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3731 + 212 | 0;
 src = 2192578;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3731 + 244 | 0;
 src = 2192610;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $839);
 if ($$3$i$i3731 | 0) {
  $22894 = $$3$i$i3731 + 5 | 0;
  $22896 = (HEAP8[$22894 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$22894 >> 0] = $22896;
  if (!($22896 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3731);
  HEAP32[$839 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 24;
 HEAP16[$5221 >> 1] = 141;
 HEAP16[$5222 >> 1] = 39;
 HEAP16[$5223 >> 1] = 168;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 948) label = 3188; else {
  $22900 = HEAP32[915090] | 0;
  if (($22900 | 0) == (HEAP32[915088] | 0)) label = 3188; else {
   $$lcssa$i$i3742 = 3660360;
   $$lcssa8$i$i3741 = $22900;
   label = 3189;
  }
 }
 do if ((label | 0) == 3188) {
  if ((HEAP32[915097] | 0) >>> 0 >= 948) {
   $22907 = HEAP32[915096] | 0;
   if (($22907 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3742 = 3660384;
    $$lcssa8$i$i3741 = $22907;
    label = 3189;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 948) {
   $22912 = HEAP32[915102] | 0;
   if (($22912 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3742 = 3660408;
    $$lcssa8$i$i3741 = $22912;
    label = 3189;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 948) {
   $22917 = HEAP32[915108] | 0;
   if (($22917 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3742 = 3660432;
    $$lcssa8$i$i3741 = $22917;
    label = 3189;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 948) {
   $22922 = HEAP32[915114] | 0;
   if (($22922 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3742 = 3660456;
    $$lcssa8$i$i3741 = $22922;
    label = 3189;
    break;
   }
  }
  $$3$i$i3743 = __Znwj(948) | 0;
 } while (0);
 if ((label | 0) == 3189) {
  $22905 = $$lcssa8$i$i3741 + -4 | 0;
  HEAP32[$$lcssa$i$i3742 >> 2] = $22905;
  $$3$i$i3743 = HEAP32[$22905 >> 2] | 0;
 }
 $22926 = $$3$i$i3743 + 52 | 0;
 HEAP16[$$3$i$i3743 >> 1] = 16;
 HEAP16[$$3$i$i3743 + 2 >> 1] = 28;
 HEAP8[$$3$i$i3743 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3743 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3743 + 8 >> 2] = 32;
 HEAP32[$$3$i$i3743 + 12 >> 2] = 896;
 HEAP32[$$3$i$i3743 + 16 >> 2] = $22926;
 HEAP32[$$3$i$i3743 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3743 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3743 + 48 >> 0] = 0;
 HEAP32[$840 >> 2] = $$3$i$i3743;
 dest = $22926;
 src = 2192642;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 84 | 0;
 src = 2192674;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 116 | 0;
 src = 2192706;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 148 | 0;
 src = 2192738;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 180 | 0;
 src = 2192770;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 212 | 0;
 src = 2192802;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 244 | 0;
 src = 2192834;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 276 | 0;
 src = 2192866;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 308 | 0;
 src = 2192898;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 340 | 0;
 src = 2192930;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 372 | 0;
 src = 2192962;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 404 | 0;
 src = 2192994;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 436 | 0;
 src = 2193026;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 468 | 0;
 src = 2193058;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 500 | 0;
 src = 2193090;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 532 | 0;
 src = 2193122;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 564 | 0;
 src = 2193154;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 596 | 0;
 src = 2193186;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 628 | 0;
 src = 2193218;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 660 | 0;
 src = 2193250;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 692 | 0;
 src = 2193282;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 724 | 0;
 src = 2193314;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 756 | 0;
 src = 2193346;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 788 | 0;
 src = 2193378;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 820 | 0;
 src = 2193410;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 852 | 0;
 src = 2193442;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 884 | 0;
 src = 2193474;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3743 + 916 | 0;
 src = 2193506;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $840);
 if ($$3$i$i3743 | 0) {
  $22964 = $$3$i$i3743 + 5 | 0;
  $22966 = (HEAP8[$22964 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$22964 >> 0] = $22966;
  if (!($22966 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3743);
  HEAP32[$840 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 24;
 HEAP16[$5224 >> 1] = 73;
 HEAP16[$5225 >> 1] = 193;
 HEAP16[$5226 >> 1] = 88;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 5556) label = 3204; else {
  $22970 = HEAP32[915090] | 0;
  if (($22970 | 0) == (HEAP32[915088] | 0)) label = 3204; else {
   $$lcssa$i$i3754 = 3660360;
   $$lcssa8$i$i3753 = $22970;
   label = 3205;
  }
 }
 do if ((label | 0) == 3204) {
  if ((HEAP32[915097] | 0) >>> 0 >= 5556) {
   $22977 = HEAP32[915096] | 0;
   if (($22977 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3754 = 3660384;
    $$lcssa8$i$i3753 = $22977;
    label = 3205;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 5556) {
   $22982 = HEAP32[915102] | 0;
   if (($22982 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3754 = 3660408;
    $$lcssa8$i$i3753 = $22982;
    label = 3205;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 5556) {
   $22987 = HEAP32[915108] | 0;
   if (($22987 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3754 = 3660432;
    $$lcssa8$i$i3753 = $22987;
    label = 3205;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 5556) {
   $22992 = HEAP32[915114] | 0;
   if (($22992 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3754 = 3660456;
    $$lcssa8$i$i3753 = $22992;
    label = 3205;
    break;
   }
  }
  $$3$i$i3755 = __Znwj(5556) | 0;
 } while (0);
 if ((label | 0) == 3205) {
  $22975 = $$lcssa8$i$i3753 + -4 | 0;
  HEAP32[$$lcssa$i$i3754 >> 2] = $22975;
  $$3$i$i3755 = HEAP32[$22975 >> 2] | 0;
 }
 $22996 = $$3$i$i3755 + 52 | 0;
 HEAP16[$$3$i$i3755 >> 1] = 172;
 HEAP16[$$3$i$i3755 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3755 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3755 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3755 + 8 >> 2] = 344;
 HEAP32[$$3$i$i3755 + 12 >> 2] = 5504;
 HEAP32[$$3$i$i3755 + 16 >> 2] = $22996;
 HEAP32[$$3$i$i3755 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3755 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3755 + 48 >> 0] = 0;
 HEAP32[$841 >> 2] = $$3$i$i3755;
 _memcpy($22996 | 0, 2193538, 344) | 0;
 _memcpy($$3$i$i3755 + 396 | 0, 2193882, 344) | 0;
 _memcpy($$3$i$i3755 + 740 | 0, 2194226, 344) | 0;
 _memcpy($$3$i$i3755 + 1084 | 0, 2194570, 344) | 0;
 _memcpy($$3$i$i3755 + 1428 | 0, 2194914, 344) | 0;
 _memcpy($$3$i$i3755 + 1772 | 0, 2195258, 344) | 0;
 _memcpy($$3$i$i3755 + 2116 | 0, 2195602, 344) | 0;
 _memcpy($$3$i$i3755 + 2460 | 0, 2195946, 344) | 0;
 _memcpy($$3$i$i3755 + 2804 | 0, 2196290, 344) | 0;
 _memcpy($$3$i$i3755 + 3148 | 0, 2196634, 344) | 0;
 _memcpy($$3$i$i3755 + 3492 | 0, 2196978, 344) | 0;
 _memcpy($$3$i$i3755 + 3836 | 0, 2197322, 344) | 0;
 _memcpy($$3$i$i3755 + 4180 | 0, 2197666, 344) | 0;
 _memcpy($$3$i$i3755 + 4524 | 0, 2198010, 344) | 0;
 _memcpy($$3$i$i3755 + 4868 | 0, 2198354, 344) | 0;
 _memcpy($$3$i$i3755 + 5212 | 0, 2198698, 344) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $841);
 if ($$3$i$i3755 | 0) {
  $23022 = $$3$i$i3755 + 5 | 0;
  $23024 = (HEAP8[$23022 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$23022 >> 0] = $23024;
  if (!($23024 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3755);
  HEAP32[$841 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 5;
 HEAP16[$5227 >> 1] = 73;
 HEAP16[$5228 >> 1] = 20;
 HEAP16[$5229 >> 1] = 88;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 564) label = 3220; else {
  $23028 = HEAP32[915090] | 0;
  if (($23028 | 0) == (HEAP32[915088] | 0)) label = 3220; else {
   $$lcssa$i$i3766 = 3660360;
   $$lcssa8$i$i3765 = $23028;
   label = 3221;
  }
 }
 do if ((label | 0) == 3220) {
  if ((HEAP32[915097] | 0) >>> 0 >= 564) {
   $23035 = HEAP32[915096] | 0;
   if (($23035 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3766 = 3660384;
    $$lcssa8$i$i3765 = $23035;
    label = 3221;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 564) {
   $23040 = HEAP32[915102] | 0;
   if (($23040 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3766 = 3660408;
    $$lcssa8$i$i3765 = $23040;
    label = 3221;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 564) {
   $23045 = HEAP32[915108] | 0;
   if (($23045 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3766 = 3660432;
    $$lcssa8$i$i3765 = $23045;
    label = 3221;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 564) {
   $23050 = HEAP32[915114] | 0;
   if (($23050 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3766 = 3660456;
    $$lcssa8$i$i3765 = $23050;
    label = 3221;
    break;
   }
  }
  $$3$i$i3767 = __Znwj(564) | 0;
 } while (0);
 if ((label | 0) == 3221) {
  $23033 = $$lcssa8$i$i3765 + -4 | 0;
  HEAP32[$$lcssa$i$i3766 >> 2] = $23033;
  $$3$i$i3767 = HEAP32[$23033 >> 2] | 0;
 }
 $23054 = $$3$i$i3767 + 52 | 0;
 HEAP16[$$3$i$i3767 >> 1] = 16;
 HEAP16[$$3$i$i3767 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3767 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3767 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3767 + 8 >> 2] = 32;
 HEAP32[$$3$i$i3767 + 12 >> 2] = 512;
 HEAP32[$$3$i$i3767 + 16 >> 2] = $23054;
 HEAP32[$$3$i$i3767 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3767 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3767 + 48 >> 0] = 0;
 HEAP32[$842 >> 2] = $$3$i$i3767;
 dest = $23054;
 src = 2199042;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3767 + 84 | 0;
 src = 2199074;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3767 + 116 | 0;
 src = 2199106;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3767 + 148 | 0;
 src = 2199138;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3767 + 180 | 0;
 src = 2199170;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3767 + 212 | 0;
 src = 2199202;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3767 + 244 | 0;
 src = 2199234;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3767 + 276 | 0;
 src = 2199266;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3767 + 308 | 0;
 src = 2199298;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3767 + 340 | 0;
 src = 2199330;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3767 + 372 | 0;
 src = 2199362;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3767 + 404 | 0;
 src = 2199394;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3767 + 436 | 0;
 src = 2199426;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3767 + 468 | 0;
 src = 2199458;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3767 + 500 | 0;
 src = 2199490;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3767 + 532 | 0;
 src = 2199522;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $842);
 if ($$3$i$i3767 | 0) {
  $23080 = $$3$i$i3767 + 5 | 0;
  $23082 = (HEAP8[$23080 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$23080 >> 0] = $23082;
  if (!($23082 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3767);
  HEAP32[$842 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 206;
 HEAP16[$5230 >> 1] = 76;
 HEAP16[$5231 >> 1] = 465;
 HEAP16[$5232 >> 1] = 88;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6812) label = 3236; else {
  $23086 = HEAP32[915090] | 0;
  if (($23086 | 0) == (HEAP32[915088] | 0)) label = 3236; else {
   $$lcssa$i$i3778 = 3660360;
   $$lcssa8$i$i3777 = $23086;
   label = 3237;
  }
 }
 do if ((label | 0) == 3236) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6812) {
   $23093 = HEAP32[915096] | 0;
   if (($23093 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3778 = 3660384;
    $$lcssa8$i$i3777 = $23093;
    label = 3237;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6812) {
   $23098 = HEAP32[915102] | 0;
   if (($23098 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3778 = 3660408;
    $$lcssa8$i$i3777 = $23098;
    label = 3237;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6812) {
   $23103 = HEAP32[915108] | 0;
   if (($23103 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3778 = 3660432;
    $$lcssa8$i$i3777 = $23103;
    label = 3237;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6812) {
   $23108 = HEAP32[915114] | 0;
   if (($23108 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3778 = 3660456;
    $$lcssa8$i$i3777 = $23108;
    label = 3237;
    break;
   }
  }
  $$3$i$i3779 = __Znwj(6812) | 0;
 } while (0);
 if ((label | 0) == 3237) {
  $23091 = $$lcssa8$i$i3777 + -4 | 0;
  HEAP32[$$lcssa$i$i3778 >> 2] = $23091;
  $$3$i$i3779 = HEAP32[$23091 >> 2] | 0;
 }
 $23112 = $$3$i$i3779 + 52 | 0;
 HEAP16[$$3$i$i3779 >> 1] = 260;
 HEAP16[$$3$i$i3779 + 2 >> 1] = 13;
 HEAP8[$$3$i$i3779 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3779 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3779 + 8 >> 2] = 520;
 HEAP32[$$3$i$i3779 + 12 >> 2] = 6760;
 HEAP32[$$3$i$i3779 + 16 >> 2] = $23112;
 HEAP32[$$3$i$i3779 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3779 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3779 + 48 >> 0] = 0;
 HEAP32[$843 >> 2] = $$3$i$i3779;
 _memcpy($23112 | 0, 2199554, 520) | 0;
 _memcpy($$3$i$i3779 + 572 | 0, 2200074, 520) | 0;
 _memcpy($$3$i$i3779 + 1092 | 0, 2200594, 520) | 0;
 _memcpy($$3$i$i3779 + 1612 | 0, 2201114, 520) | 0;
 _memcpy($$3$i$i3779 + 2132 | 0, 2201634, 520) | 0;
 _memcpy($$3$i$i3779 + 2652 | 0, 2202154, 520) | 0;
 _memcpy($$3$i$i3779 + 3172 | 0, 2202674, 520) | 0;
 _memcpy($$3$i$i3779 + 3692 | 0, 2203194, 520) | 0;
 _memcpy($$3$i$i3779 + 4212 | 0, 2203714, 520) | 0;
 _memcpy($$3$i$i3779 + 4732 | 0, 2204234, 520) | 0;
 _memcpy($$3$i$i3779 + 5252 | 0, 2204754, 520) | 0;
 _memcpy($$3$i$i3779 + 5772 | 0, 2205274, 520) | 0;
 _memcpy($$3$i$i3779 + 6292 | 0, 2205794, 520) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $843);
 if ($$3$i$i3779 | 0) {
  $23135 = $$3$i$i3779 + 5 | 0;
  $23137 = (HEAP8[$23135 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$23135 >> 0] = $23137;
  if (!($23137 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3779);
  HEAP32[$843 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 178;
 HEAP16[$5233 >> 1] = 678;
 HEAP16[$5234 >> 1] = 193;
 HEAP16[$5235 >> 1] = 701;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 820) label = 3252; else {
  $23141 = HEAP32[915090] | 0;
  if (($23141 | 0) == (HEAP32[915088] | 0)) label = 3252; else {
   $$lcssa$i$i3790 = 3660360;
   $$lcssa8$i$i3789 = $23141;
   label = 3253;
  }
 }
 do if ((label | 0) == 3252) {
  if ((HEAP32[915097] | 0) >>> 0 >= 820) {
   $23148 = HEAP32[915096] | 0;
   if (($23148 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3790 = 3660384;
    $$lcssa8$i$i3789 = $23148;
    label = 3253;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 820) {
   $23153 = HEAP32[915102] | 0;
   if (($23153 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3790 = 3660408;
    $$lcssa8$i$i3789 = $23153;
    label = 3253;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 820) {
   $23158 = HEAP32[915108] | 0;
   if (($23158 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3790 = 3660432;
    $$lcssa8$i$i3789 = $23158;
    label = 3253;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 820) {
   $23163 = HEAP32[915114] | 0;
   if (($23163 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3790 = 3660456;
    $$lcssa8$i$i3789 = $23163;
    label = 3253;
    break;
   }
  }
  $$3$i$i3791 = __Znwj(820) | 0;
 } while (0);
 if ((label | 0) == 3253) {
  $23146 = $$lcssa8$i$i3789 + -4 | 0;
  HEAP32[$$lcssa$i$i3790 >> 2] = $23146;
  $$3$i$i3791 = HEAP32[$23146 >> 2] | 0;
 }
 $23167 = $$3$i$i3791 + 52 | 0;
 HEAP16[$$3$i$i3791 >> 1] = 16;
 HEAP16[$$3$i$i3791 + 2 >> 1] = 24;
 HEAP8[$$3$i$i3791 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3791 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3791 + 8 >> 2] = 32;
 HEAP32[$$3$i$i3791 + 12 >> 2] = 768;
 HEAP32[$$3$i$i3791 + 16 >> 2] = $23167;
 HEAP32[$$3$i$i3791 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3791 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3791 + 48 >> 0] = 0;
 HEAP32[$844 >> 2] = $$3$i$i3791;
 dest = $23167;
 src = 2206314;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 84 | 0;
 src = 2206346;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 116 | 0;
 src = 2206378;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 148 | 0;
 src = 2206410;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 180 | 0;
 src = 2206442;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 212 | 0;
 src = 2206474;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 244 | 0;
 src = 2206506;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 276 | 0;
 src = 2206538;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 308 | 0;
 src = 2206570;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 340 | 0;
 src = 2206602;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 372 | 0;
 src = 2206634;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 404 | 0;
 src = 2206666;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 436 | 0;
 src = 2206698;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 468 | 0;
 src = 2206730;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 500 | 0;
 src = 2206762;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 532 | 0;
 src = 2206794;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 564 | 0;
 src = 2206826;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 596 | 0;
 src = 2206858;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 628 | 0;
 src = 2206890;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 660 | 0;
 src = 2206922;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 692 | 0;
 src = 2206954;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 724 | 0;
 src = 2206986;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 756 | 0;
 src = 2207018;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3791 + 788 | 0;
 src = 2207050;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $844);
 if ($$3$i$i3791 | 0) {
  $23201 = $$3$i$i3791 + 5 | 0;
  $23203 = (HEAP8[$23201 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$23201 >> 0] = $23203;
  if (!($23203 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3791);
  HEAP32[$844 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 2;
 HEAP16[$5236 >> 1] = 678;
 HEAP16[$5237 >> 1] = 17;
 HEAP16[$5238 >> 1] = 701;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 820) label = 3268; else {
  $23207 = HEAP32[915090] | 0;
  if (($23207 | 0) == (HEAP32[915088] | 0)) label = 3268; else {
   $$lcssa$i$i3802 = 3660360;
   $$lcssa8$i$i3801 = $23207;
   label = 3269;
  }
 }
 do if ((label | 0) == 3268) {
  if ((HEAP32[915097] | 0) >>> 0 >= 820) {
   $23214 = HEAP32[915096] | 0;
   if (($23214 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3802 = 3660384;
    $$lcssa8$i$i3801 = $23214;
    label = 3269;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 820) {
   $23219 = HEAP32[915102] | 0;
   if (($23219 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3802 = 3660408;
    $$lcssa8$i$i3801 = $23219;
    label = 3269;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 820) {
   $23224 = HEAP32[915108] | 0;
   if (($23224 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3802 = 3660432;
    $$lcssa8$i$i3801 = $23224;
    label = 3269;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 820) {
   $23229 = HEAP32[915114] | 0;
   if (($23229 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3802 = 3660456;
    $$lcssa8$i$i3801 = $23229;
    label = 3269;
    break;
   }
  }
  $$3$i$i3803 = __Znwj(820) | 0;
 } while (0);
 if ((label | 0) == 3269) {
  $23212 = $$lcssa8$i$i3801 + -4 | 0;
  HEAP32[$$lcssa$i$i3802 >> 2] = $23212;
  $$3$i$i3803 = HEAP32[$23212 >> 2] | 0;
 }
 $23233 = $$3$i$i3803 + 52 | 0;
 HEAP16[$$3$i$i3803 >> 1] = 16;
 HEAP16[$$3$i$i3803 + 2 >> 1] = 24;
 HEAP8[$$3$i$i3803 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3803 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3803 + 8 >> 2] = 32;
 HEAP32[$$3$i$i3803 + 12 >> 2] = 768;
 HEAP32[$$3$i$i3803 + 16 >> 2] = $23233;
 HEAP32[$$3$i$i3803 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3803 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3803 + 48 >> 0] = 0;
 HEAP32[$845 >> 2] = $$3$i$i3803;
 dest = $23233;
 src = 2207082;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 84 | 0;
 src = 2207114;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 116 | 0;
 src = 2207146;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 148 | 0;
 src = 2207178;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 180 | 0;
 src = 2207210;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 212 | 0;
 src = 2207242;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 244 | 0;
 src = 2207274;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 276 | 0;
 src = 2207306;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 308 | 0;
 src = 2207338;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 340 | 0;
 src = 2207370;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 372 | 0;
 src = 2207402;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 404 | 0;
 src = 2207434;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 436 | 0;
 src = 2207466;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 468 | 0;
 src = 2207498;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 500 | 0;
 src = 2207530;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 532 | 0;
 src = 2207562;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 564 | 0;
 src = 2207594;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 596 | 0;
 src = 2207626;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 628 | 0;
 src = 2207658;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 660 | 0;
 src = 2207690;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 692 | 0;
 src = 2207722;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 724 | 0;
 src = 2207754;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 756 | 0;
 src = 2207786;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3803 + 788 | 0;
 src = 2207818;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $845);
 if ($$3$i$i3803 | 0) {
  $23267 = $$3$i$i3803 + 5 | 0;
  $23269 = (HEAP8[$23267 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$23267 >> 0] = $23269;
  if (!($23269 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3803);
  HEAP32[$845 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 20;
 HEAP16[$5239 >> 1] = 2;
 HEAP16[$5240 >> 1] = 155;
 HEAP16[$5241 >> 1] = 14;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 3588) label = 3284; else {
  $23273 = HEAP32[915090] | 0;
  if (($23273 | 0) == (HEAP32[915088] | 0)) label = 3284; else {
   $$lcssa$i$i3814 = 3660360;
   $$lcssa8$i$i3813 = $23273;
   label = 3285;
  }
 }
 do if ((label | 0) == 3284) {
  if ((HEAP32[915097] | 0) >>> 0 >= 3588) {
   $23280 = HEAP32[915096] | 0;
   if (($23280 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3814 = 3660384;
    $$lcssa8$i$i3813 = $23280;
    label = 3285;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 3588) {
   $23285 = HEAP32[915102] | 0;
   if (($23285 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3814 = 3660408;
    $$lcssa8$i$i3813 = $23285;
    label = 3285;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 3588) {
   $23290 = HEAP32[915108] | 0;
   if (($23290 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3814 = 3660432;
    $$lcssa8$i$i3813 = $23290;
    label = 3285;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 3588) {
   $23295 = HEAP32[915114] | 0;
   if (($23295 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3814 = 3660456;
    $$lcssa8$i$i3813 = $23295;
    label = 3285;
    break;
   }
  }
  $$3$i$i3815 = __Znwj(3588) | 0;
 } while (0);
 if ((label | 0) == 3285) {
  $23278 = $$lcssa8$i$i3813 + -4 | 0;
  HEAP32[$$lcssa$i$i3814 >> 2] = $23278;
  $$3$i$i3815 = HEAP32[$23278 >> 2] | 0;
 }
 $23299 = $$3$i$i3815 + 52 | 0;
 HEAP16[$$3$i$i3815 >> 1] = 136;
 HEAP16[$$3$i$i3815 + 2 >> 1] = 13;
 HEAP8[$$3$i$i3815 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3815 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3815 + 8 >> 2] = 272;
 HEAP32[$$3$i$i3815 + 12 >> 2] = 3536;
 HEAP32[$$3$i$i3815 + 16 >> 2] = $23299;
 HEAP32[$$3$i$i3815 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3815 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3815 + 48 >> 0] = 0;
 HEAP32[$846 >> 2] = $$3$i$i3815;
 _memcpy($23299 | 0, 2207850, 272) | 0;
 _memcpy($$3$i$i3815 + 324 | 0, 2208122, 272) | 0;
 _memcpy($$3$i$i3815 + 596 | 0, 2208394, 272) | 0;
 _memcpy($$3$i$i3815 + 868 | 0, 2208666, 272) | 0;
 _memcpy($$3$i$i3815 + 1140 | 0, 2208938, 272) | 0;
 _memcpy($$3$i$i3815 + 1412 | 0, 2209210, 272) | 0;
 _memcpy($$3$i$i3815 + 1684 | 0, 2209482, 272) | 0;
 _memcpy($$3$i$i3815 + 1956 | 0, 2209754, 272) | 0;
 _memcpy($$3$i$i3815 + 2228 | 0, 2210026, 272) | 0;
 _memcpy($$3$i$i3815 + 2500 | 0, 2210298, 272) | 0;
 _memcpy($$3$i$i3815 + 2772 | 0, 2210570, 272) | 0;
 _memcpy($$3$i$i3815 + 3044 | 0, 2210842, 272) | 0;
 _memcpy($$3$i$i3815 + 3316 | 0, 2211114, 272) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $846);
 if ($$3$i$i3815 | 0) {
  $23322 = $$3$i$i3815 + 5 | 0;
  $23324 = (HEAP8[$23322 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$23322 >> 0] = $23324;
  if (!($23324 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3815);
  HEAP32[$846 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 2;
 HEAP16[$5242 >> 1] = 1;
 HEAP16[$5243 >> 1] = 17;
 HEAP16[$5244 >> 1] = 16;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 564) label = 3300; else {
  $23328 = HEAP32[915090] | 0;
  if (($23328 | 0) == (HEAP32[915088] | 0)) label = 3300; else {
   $$lcssa$i$i3826 = 3660360;
   $$lcssa8$i$i3825 = $23328;
   label = 3301;
  }
 }
 do if ((label | 0) == 3300) {
  if ((HEAP32[915097] | 0) >>> 0 >= 564) {
   $23335 = HEAP32[915096] | 0;
   if (($23335 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3826 = 3660384;
    $$lcssa8$i$i3825 = $23335;
    label = 3301;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 564) {
   $23340 = HEAP32[915102] | 0;
   if (($23340 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3826 = 3660408;
    $$lcssa8$i$i3825 = $23340;
    label = 3301;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 564) {
   $23345 = HEAP32[915108] | 0;
   if (($23345 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3826 = 3660432;
    $$lcssa8$i$i3825 = $23345;
    label = 3301;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 564) {
   $23350 = HEAP32[915114] | 0;
   if (($23350 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3826 = 3660456;
    $$lcssa8$i$i3825 = $23350;
    label = 3301;
    break;
   }
  }
  $$3$i$i3827 = __Znwj(564) | 0;
 } while (0);
 if ((label | 0) == 3301) {
  $23333 = $$lcssa8$i$i3825 + -4 | 0;
  HEAP32[$$lcssa$i$i3826 >> 2] = $23333;
  $$3$i$i3827 = HEAP32[$23333 >> 2] | 0;
 }
 $23354 = $$3$i$i3827 + 52 | 0;
 HEAP16[$$3$i$i3827 >> 1] = 16;
 HEAP16[$$3$i$i3827 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3827 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3827 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3827 + 8 >> 2] = 32;
 HEAP32[$$3$i$i3827 + 12 >> 2] = 512;
 HEAP32[$$3$i$i3827 + 16 >> 2] = $23354;
 HEAP32[$$3$i$i3827 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3827 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3827 + 48 >> 0] = 0;
 HEAP32[$847 >> 2] = $$3$i$i3827;
 dest = $23354;
 src = 2211386;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3827 + 84 | 0;
 src = 2211418;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3827 + 116 | 0;
 src = 2211450;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3827 + 148 | 0;
 src = 2211482;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3827 + 180 | 0;
 src = 2211514;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3827 + 212 | 0;
 src = 2211546;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3827 + 244 | 0;
 src = 2211578;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3827 + 276 | 0;
 src = 2211610;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3827 + 308 | 0;
 src = 2211642;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3827 + 340 | 0;
 src = 2211674;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3827 + 372 | 0;
 src = 2211706;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3827 + 404 | 0;
 src = 2211738;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3827 + 436 | 0;
 src = 2211770;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3827 + 468 | 0;
 src = 2211802;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3827 + 500 | 0;
 src = 2211834;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3827 + 532 | 0;
 src = 2211866;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $847);
 if ($$3$i$i3827 | 0) {
  $23380 = $$3$i$i3827 + 5 | 0;
  $23382 = (HEAP8[$23380 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$23380 >> 0] = $23382;
  if (!($23382 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3827);
  HEAP32[$847 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 972;
 HEAP16[$5245 >> 1] = 2;
 HEAP16[$5246 >> 1] = 1003;
 HEAP16[$5247 >> 1] = 15;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 948) label = 3316; else {
  $23386 = HEAP32[915090] | 0;
  if (($23386 | 0) == (HEAP32[915088] | 0)) label = 3316; else {
   $$lcssa$i$i3838 = 3660360;
   $$lcssa8$i$i3837 = $23386;
   label = 3317;
  }
 }
 do if ((label | 0) == 3316) {
  if ((HEAP32[915097] | 0) >>> 0 >= 948) {
   $23393 = HEAP32[915096] | 0;
   if (($23393 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3838 = 3660384;
    $$lcssa8$i$i3837 = $23393;
    label = 3317;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 948) {
   $23398 = HEAP32[915102] | 0;
   if (($23398 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3838 = 3660408;
    $$lcssa8$i$i3837 = $23398;
    label = 3317;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 948) {
   $23403 = HEAP32[915108] | 0;
   if (($23403 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3838 = 3660432;
    $$lcssa8$i$i3837 = $23403;
    label = 3317;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 948) {
   $23408 = HEAP32[915114] | 0;
   if (($23408 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3838 = 3660456;
    $$lcssa8$i$i3837 = $23408;
    label = 3317;
    break;
   }
  }
  $$3$i$i3839 = __Znwj(948) | 0;
 } while (0);
 if ((label | 0) == 3317) {
  $23391 = $$lcssa8$i$i3837 + -4 | 0;
  HEAP32[$$lcssa$i$i3838 >> 2] = $23391;
  $$3$i$i3839 = HEAP32[$23391 >> 2] | 0;
 }
 $23412 = $$3$i$i3839 + 52 | 0;
 HEAP16[$$3$i$i3839 >> 1] = 32;
 HEAP16[$$3$i$i3839 + 2 >> 1] = 14;
 HEAP8[$$3$i$i3839 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3839 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3839 + 8 >> 2] = 64;
 HEAP32[$$3$i$i3839 + 12 >> 2] = 896;
 HEAP32[$$3$i$i3839 + 16 >> 2] = $23412;
 HEAP32[$$3$i$i3839 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3839 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3839 + 48 >> 0] = 0;
 HEAP32[$848 >> 2] = $$3$i$i3839;
 dest = $23412;
 src = 2211898;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3839 + 116 | 0;
 src = 2211962;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3839 + 180 | 0;
 src = 2212026;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3839 + 244 | 0;
 src = 2212090;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3839 + 308 | 0;
 src = 2212154;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3839 + 372 | 0;
 src = 2212218;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3839 + 436 | 0;
 src = 2212282;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3839 + 500 | 0;
 src = 2212346;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3839 + 564 | 0;
 src = 2212410;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3839 + 628 | 0;
 src = 2212474;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3839 + 692 | 0;
 src = 2212538;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3839 + 756 | 0;
 src = 2212602;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3839 + 820 | 0;
 src = 2212666;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3839 + 884 | 0;
 src = 2212730;
 stop = dest + 64 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $848);
 if ($$3$i$i3839 | 0) {
  $23436 = $$3$i$i3839 + 5 | 0;
  $23438 = (HEAP8[$23436 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$23436 >> 0] = $23438;
  if (!($23438 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3839);
  HEAP32[$848 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 1006;
 HEAP16[$5248 >> 1] = 2;
 HEAP16[$5249 >> 1] = 1021;
 HEAP16[$5250 >> 1] = 15;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 500) label = 3332; else {
  $23442 = HEAP32[915090] | 0;
  if (($23442 | 0) == (HEAP32[915088] | 0)) label = 3332; else {
   $$lcssa$i$i3850 = 3660360;
   $$lcssa8$i$i3849 = $23442;
   label = 3333;
  }
 }
 do if ((label | 0) == 3332) {
  if ((HEAP32[915097] | 0) >>> 0 >= 500) {
   $23449 = HEAP32[915096] | 0;
   if (($23449 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3850 = 3660384;
    $$lcssa8$i$i3849 = $23449;
    label = 3333;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 500) {
   $23454 = HEAP32[915102] | 0;
   if (($23454 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3850 = 3660408;
    $$lcssa8$i$i3849 = $23454;
    label = 3333;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 500) {
   $23459 = HEAP32[915108] | 0;
   if (($23459 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3850 = 3660432;
    $$lcssa8$i$i3849 = $23459;
    label = 3333;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 500) {
   $23464 = HEAP32[915114] | 0;
   if (($23464 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3850 = 3660456;
    $$lcssa8$i$i3849 = $23464;
    label = 3333;
    break;
   }
  }
  $$3$i$i3851 = __Znwj(500) | 0;
 } while (0);
 if ((label | 0) == 3333) {
  $23447 = $$lcssa8$i$i3849 + -4 | 0;
  HEAP32[$$lcssa$i$i3850 >> 2] = $23447;
  $$3$i$i3851 = HEAP32[$23447 >> 2] | 0;
 }
 $23468 = $$3$i$i3851 + 52 | 0;
 HEAP16[$$3$i$i3851 >> 1] = 16;
 HEAP16[$$3$i$i3851 + 2 >> 1] = 14;
 HEAP8[$$3$i$i3851 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3851 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3851 + 8 >> 2] = 32;
 HEAP32[$$3$i$i3851 + 12 >> 2] = 448;
 HEAP32[$$3$i$i3851 + 16 >> 2] = $23468;
 HEAP32[$$3$i$i3851 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3851 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3851 + 48 >> 0] = 0;
 HEAP32[$849 >> 2] = $$3$i$i3851;
 dest = $23468;
 src = 2212794;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3851 + 84 | 0;
 src = 2212826;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3851 + 116 | 0;
 src = 2212858;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3851 + 148 | 0;
 src = 2212890;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3851 + 180 | 0;
 src = 2212922;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3851 + 212 | 0;
 src = 2212954;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3851 + 244 | 0;
 src = 2212986;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3851 + 276 | 0;
 src = 2213018;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3851 + 308 | 0;
 src = 2213050;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3851 + 340 | 0;
 src = 2213082;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3851 + 372 | 0;
 src = 2213114;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3851 + 404 | 0;
 src = 2213146;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3851 + 436 | 0;
 src = 2213178;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3851 + 468 | 0;
 src = 2213210;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $849);
 if ($$3$i$i3851 | 0) {
  $23492 = $$3$i$i3851 + 5 | 0;
  $23494 = (HEAP8[$23492 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$23492 >> 0] = $23494;
  if (!($23494 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3851);
  HEAP32[$849 >> 2] = 0;
 }
 $23496 = $850;
 HEAP32[$23496 >> 2] = 2949122;
 HEAP32[$23496 + 4 >> 2] = 1442812;
 HEAP32[$5251 >> 2] = 54937;
 HEAP16[$851 >> 1] = 2;
 HEAP16[$5252 >> 1] = 45;
 HEAP16[$5253 >> 1] = 1020;
 HEAP16[$5254 >> 1] = 22;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $850, $851);
 $23500 = $852;
 HEAP32[$23500 >> 2] = 4653252;
 HEAP32[$23500 + 4 >> 2] = 41484291;
 HEAP32[$5255 >> 2] = 65535;
 HEAP16[$853 >> 1] = 196;
 HEAP16[$5256 >> 1] = 71;
 HEAP16[$5257 >> 1] = 3;
 HEAP16[$5258 >> 1] = 633;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $852, $853);
 $23504 = $854;
 HEAP32[$23504 >> 2] = 4653252;
 HEAP32[$23504 + 4 >> 2] = 41484291;
 HEAP32[$5259 >> 2] = 54937;
 HEAP16[$855 >> 1] = 196;
 HEAP16[$5260 >> 1] = 71;
 HEAP16[$5261 >> 1] = 3;
 HEAP16[$5262 >> 1] = 633;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $854, $855);
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 2;
 HEAP16[$5263 >> 1] = 45;
 HEAP16[$5264 >> 1] = 1021;
 HEAP16[$5265 >> 1] = 59;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30652) label = 3348; else {
  $23510 = HEAP32[915090] | 0;
  if (($23510 | 0) == (HEAP32[915088] | 0)) label = 3348; else {
   $$lcssa$i$i3862 = 3660360;
   $$lcssa8$i$i3861 = $23510;
   label = 3349;
  }
 }
 do if ((label | 0) == 3348) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30652) {
   $23517 = HEAP32[915096] | 0;
   if (($23517 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3862 = 3660384;
    $$lcssa8$i$i3861 = $23517;
    label = 3349;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30652) {
   $23522 = HEAP32[915102] | 0;
   if (($23522 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3862 = 3660408;
    $$lcssa8$i$i3861 = $23522;
    label = 3349;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30652) {
   $23527 = HEAP32[915108] | 0;
   if (($23527 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3862 = 3660432;
    $$lcssa8$i$i3861 = $23527;
    label = 3349;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30652) {
   $23532 = HEAP32[915114] | 0;
   if (($23532 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3862 = 3660456;
    $$lcssa8$i$i3861 = $23532;
    label = 3349;
    break;
   }
  }
  $$3$i$i3863 = __Znwj(30652) | 0;
 } while (0);
 if ((label | 0) == 3349) {
  $23515 = $$lcssa8$i$i3861 + -4 | 0;
  HEAP32[$$lcssa$i$i3862 >> 2] = $23515;
  $$3$i$i3863 = HEAP32[$23515 >> 2] | 0;
 }
 $23536 = $$3$i$i3863 + 52 | 0;
 HEAP16[$$3$i$i3863 >> 1] = 1020;
 HEAP16[$$3$i$i3863 + 2 >> 1] = 15;
 HEAP8[$$3$i$i3863 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3863 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3863 + 8 >> 2] = 2040;
 HEAP32[$$3$i$i3863 + 12 >> 2] = 30600;
 HEAP32[$$3$i$i3863 + 16 >> 2] = $23536;
 HEAP32[$$3$i$i3863 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3863 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3863 + 48 >> 0] = 0;
 HEAP32[$856 >> 2] = $$3$i$i3863;
 _memcpy($23536 | 0, 2213242, 2040) | 0;
 _memcpy($$3$i$i3863 + 2092 | 0, 2215282, 2040) | 0;
 _memcpy($$3$i$i3863 + 4132 | 0, 2217322, 2040) | 0;
 _memcpy($$3$i$i3863 + 6172 | 0, 2219362, 2040) | 0;
 _memcpy($$3$i$i3863 + 8212 | 0, 2221402, 2040) | 0;
 _memcpy($$3$i$i3863 + 10252 | 0, 2223442, 2040) | 0;
 _memcpy($$3$i$i3863 + 12292 | 0, 2225482, 2040) | 0;
 _memcpy($$3$i$i3863 + 14332 | 0, 2227522, 2040) | 0;
 _memcpy($$3$i$i3863 + 16372 | 0, 2229562, 2040) | 0;
 _memcpy($$3$i$i3863 + 18412 | 0, 2231602, 2040) | 0;
 _memcpy($$3$i$i3863 + 20452 | 0, 2233642, 2040) | 0;
 _memcpy($$3$i$i3863 + 22492 | 0, 2235682, 2040) | 0;
 _memcpy($$3$i$i3863 + 24532 | 0, 2237722, 2040) | 0;
 _memcpy($$3$i$i3863 + 26572 | 0, 2239762, 2040) | 0;
 _memcpy($$3$i$i3863 + 28612 | 0, 2241802, 2040) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $856);
 if ($$3$i$i3863 | 0) {
  $23561 = $$3$i$i3863 + 5 | 0;
  $23563 = (HEAP8[$23561 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$23561 >> 0] = $23563;
  if (!($23563 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3863);
  HEAP32[$856 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 2;
 HEAP16[$5266 >> 1] = 60;
 HEAP16[$5267 >> 1] = 1021;
 HEAP16[$5268 >> 1] = 66;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 14332) label = 3364; else {
  $23567 = HEAP32[915090] | 0;
  if (($23567 | 0) == (HEAP32[915088] | 0)) label = 3364; else {
   $$lcssa$i$i3874 = 3660360;
   $$lcssa8$i$i3873 = $23567;
   label = 3365;
  }
 }
 do if ((label | 0) == 3364) {
  if ((HEAP32[915097] | 0) >>> 0 >= 14332) {
   $23574 = HEAP32[915096] | 0;
   if (($23574 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3874 = 3660384;
    $$lcssa8$i$i3873 = $23574;
    label = 3365;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 14332) {
   $23579 = HEAP32[915102] | 0;
   if (($23579 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3874 = 3660408;
    $$lcssa8$i$i3873 = $23579;
    label = 3365;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 14332) {
   $23584 = HEAP32[915108] | 0;
   if (($23584 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3874 = 3660432;
    $$lcssa8$i$i3873 = $23584;
    label = 3365;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 14332) {
   $23589 = HEAP32[915114] | 0;
   if (($23589 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3874 = 3660456;
    $$lcssa8$i$i3873 = $23589;
    label = 3365;
    break;
   }
  }
  $$3$i$i3875 = __Znwj(14332) | 0;
 } while (0);
 if ((label | 0) == 3365) {
  $23572 = $$lcssa8$i$i3873 + -4 | 0;
  HEAP32[$$lcssa$i$i3874 >> 2] = $23572;
  $$3$i$i3875 = HEAP32[$23572 >> 2] | 0;
 }
 $23593 = $$3$i$i3875 + 52 | 0;
 HEAP16[$$3$i$i3875 >> 1] = 1020;
 HEAP16[$$3$i$i3875 + 2 >> 1] = 7;
 HEAP8[$$3$i$i3875 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3875 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3875 + 8 >> 2] = 2040;
 HEAP32[$$3$i$i3875 + 12 >> 2] = 14280;
 HEAP32[$$3$i$i3875 + 16 >> 2] = $23593;
 HEAP32[$$3$i$i3875 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3875 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3875 + 48 >> 0] = 0;
 HEAP32[$857 >> 2] = $$3$i$i3875;
 _memcpy($23593 | 0, 2243842, 2040) | 0;
 _memcpy($$3$i$i3875 + 2092 | 0, 2245882, 2040) | 0;
 _memcpy($$3$i$i3875 + 4132 | 0, 2247922, 2040) | 0;
 _memcpy($$3$i$i3875 + 6172 | 0, 2249962, 2040) | 0;
 _memcpy($$3$i$i3875 + 8212 | 0, 2252002, 2040) | 0;
 _memcpy($$3$i$i3875 + 10252 | 0, 2254042, 2040) | 0;
 _memcpy($$3$i$i3875 + 12292 | 0, 2256082, 2040) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $857);
 if ($$3$i$i3875 | 0) {
  $23610 = $$3$i$i3875 + 5 | 0;
  $23612 = (HEAP8[$23610 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$23610 >> 0] = $23612;
  if (!($23612 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3875);
  HEAP32[$857 >> 2] = 0;
 }
 $23614 = $858;
 HEAP32[$23614 >> 2] = 6357193;
 HEAP32[$23614 + 4 >> 2] = 39650101;
 HEAP32[$5269 >> 2] = 54937;
 HEAP16[$859 >> 1] = 201;
 HEAP16[$5270 >> 1] = 97;
 HEAP16[$5271 >> 1] = 821;
 HEAP16[$5272 >> 1] = 605;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $858, $859);
 $23618 = $860;
 HEAP32[$23618 >> 2] = 12125158;
 HEAP32[$23618 + 4 >> 2] = 1572880;
 HEAP8[$5273 >> 0] = -16;
 HEAP32[$5274 >> 2] = 65535;
 HEAP32[$5275 >> 2] = 54937;
 HEAP8[$5276 >> 0] = 1;
 HEAP8[$5277 >> 0] = 1;
 HEAP8[$5278 >> 0] = 3;
 HEAP8[$5279 >> 0] = -86;
 HEAP32[$5280 >> 2] = 0;
 HEAP16[$5280 + 4 >> 1] = 0;
 HEAP8[$5280 + 6 >> 0] = 0;
 HEAP16[$861 >> 1] = 998;
 HEAP16[$5281 >> 1] = 185;
 HEAP16[$5282 >> 1] = 16;
 HEAP16[$5283 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK9RDPPatBltRK4Rect($front, $860, $861);
 $23622 = $862;
 HEAP32[$23622 >> 2] = 11600885;
 HEAP32[$23622 + 4 >> 2] = 524289;
 HEAP32[$5284 >> 2] = 16904;
 HEAP16[$863 >> 1] = 1013;
 HEAP16[$5285 >> 1] = 177;
 HEAP16[$5286 >> 1] = 1;
 HEAP16[$5287 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $862, $863);
 $23626 = $864;
 HEAP32[$23626 >> 2] = 12059622;
 HEAP32[$23626 + 4 >> 2] = 65551;
 HEAP32[$5288 >> 2] = 16904;
 HEAP16[$865 >> 1] = 998;
 HEAP16[$5289 >> 1] = 184;
 HEAP16[$5290 >> 1] = 15;
 HEAP16[$5291 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $864, $865);
 $23630 = $866;
 HEAP32[$23630 >> 2] = 11600870;
 HEAP32[$23630 + 4 >> 2] = 458753;
 HEAP32[$5292 >> 2] = 54937;
 HEAP16[$867 >> 1] = 998;
 HEAP16[$5293 >> 1] = 177;
 HEAP16[$5294 >> 1] = 1;
 HEAP16[$5295 >> 1] = 7;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $866, $867);
 $23634 = $868;
 HEAP32[$23634 >> 2] = 11600871;
 HEAP32[$23634 + 4 >> 2] = 65550;
 HEAP32[$5296 >> 2] = 54937;
 HEAP16[$869 >> 1] = 999;
 HEAP16[$5297 >> 1] = 177;
 HEAP16[$5298 >> 1] = 14;
 HEAP16[$5299 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $868, $869);
 $23638 = $870;
 HEAP32[$23638 >> 2] = 11666420;
 HEAP32[$23638 + 4 >> 2] = 393217;
 HEAP32[$5300 >> 2] = 33808;
 HEAP16[$871 >> 1] = 1012;
 HEAP16[$5301 >> 1] = 178;
 HEAP16[$5302 >> 1] = 1;
 HEAP16[$5303 >> 1] = 6;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $870, $871);
 $23642 = $872;
 HEAP32[$23642 >> 2] = 11994087;
 HEAP32[$23642 + 4 >> 2] = 65549;
 HEAP32[$5304 >> 2] = 33808;
 HEAP16[$873 >> 1] = 999;
 HEAP16[$5305 >> 1] = 183;
 HEAP16[$5306 >> 1] = 13;
 HEAP16[$5307 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $872, $873);
 $23646 = $874;
 HEAP32[$23646 >> 2] = 11666407;
 HEAP32[$23646 + 4 >> 2] = 327681;
 HEAP32[$5308 >> 2] = 65535;
 HEAP16[$875 >> 1] = 999;
 HEAP16[$5309 >> 1] = 178;
 HEAP16[$5310 >> 1] = 1;
 HEAP16[$5311 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $874, $875);
 $23650 = $876;
 HEAP32[$23650 >> 2] = 11666408;
 HEAP32[$23650 + 4 >> 2] = 65548;
 HEAP32[$5312 >> 2] = 65535;
 HEAP16[$877 >> 1] = 1e3;
 HEAP16[$5313 >> 1] = 178;
 HEAP16[$5314 >> 1] = 12;
 HEAP16[$5315 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $876, $877);
 $23654 = $878;
 HEAP32[$23654 >> 2] = 11731944;
 HEAP32[$23654 + 4 >> 2] = 262156;
 HEAP32[$5316 >> 2] = 54937;
 HEAP16[$879 >> 1] = 1e3;
 HEAP16[$5317 >> 1] = 179;
 HEAP16[$5318 >> 1] = 12;
 HEAP16[$5319 >> 1] = 4;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $878, $879);
 $23658 = $880;
 HEAP32[$23658 >> 2] = 10551497;
 HEAP32[$23658 + 4 >> 2] = 4195101;
 HEAP32[$5320 >> 2] = 65535;
 HEAP16[$881 >> 1] = 201;
 HEAP16[$5321 >> 1] = 161;
 HEAP16[$5322 >> 1] = 797;
 HEAP16[$5323 >> 1] = 10;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $880, $881);
 $23662 = $882;
 HEAP32[$23662 >> 2] = 10551497;
 HEAP32[$23662 + 4 >> 2] = 4195101;
 HEAP32[$5324 >> 2] = 65535;
 HEAP16[$883 >> 1] = 201;
 HEAP16[$5325 >> 1] = 171;
 HEAP16[$5326 >> 1] = 10;
 HEAP16[$5327 >> 1] = 54;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $882, $883);
 $23666 = $884;
 HEAP32[$23666 >> 2] = 10551497;
 HEAP32[$23666 + 4 >> 2] = 4195101;
 HEAP32[$5328 >> 2] = 65535;
 HEAP16[$885 >> 1] = 988;
 HEAP16[$5329 >> 1] = 171;
 HEAP16[$5330 >> 1] = 10;
 HEAP16[$5331 >> 1] = 54;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $884, $885);
 $23670 = $886;
 HEAP32[$23670 >> 2] = 12910803;
 HEAP32[$23670 + 4 >> 2] = 1835785;
 HEAP32[$5332 >> 2] = 54938;
 HEAP16[$887 >> 1] = 211;
 HEAP16[$5333 >> 1] = 197;
 HEAP16[$5334 >> 1] = 1;
 HEAP16[$5335 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $886, $887);
 $23674 = $888;
 HEAP32[$23674 >> 2] = 12910803;
 HEAP32[$23674 + 4 >> 2] = 1835785;
 HEAP32[$5336 >> 2] = 54938;
 HEAP16[$889 >> 1] = 987;
 HEAP16[$5337 >> 1] = 197;
 HEAP16[$5338 >> 1] = 1;
 HEAP16[$5339 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $888, $889);
 $23678 = $890;
 HEAP32[$23678 >> 2] = 11206867;
 HEAP32[$23678 + 4 >> 2] = 1704713;
 HEAP32[$5340 >> 2] = 54938;
 HEAP16[$891 >> 1] = 211;
 HEAP16[$5341 >> 1] = 171;
 HEAP16[$5342 >> 1] = 777;
 HEAP16[$5343 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $890, $891);
 $23682 = $892;
 HEAP32[$23682 >> 2] = 11206867;
 HEAP32[$23682 + 4 >> 2] = 1704713;
 HEAP32[$5344 >> 2] = 54938;
 HEAP16[$893 >> 1] = 211;
 HEAP16[$5345 >> 1] = 172;
 HEAP16[$5346 >> 1] = 1;
 HEAP16[$5347 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $892, $893);
 $23686 = $894;
 HEAP32[$23686 >> 2] = 11206867;
 HEAP32[$23686 + 4 >> 2] = 1704713;
 HEAP32[$5348 >> 2] = 54938;
 HEAP16[$895 >> 1] = 987;
 HEAP16[$5349 >> 1] = 172;
 HEAP16[$5350 >> 1] = 1;
 HEAP16[$5351 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $894, $895);
 $23690 = $896;
 HEAP32[$23690 >> 2] = 11206867;
 HEAP32[$23690 + 4 >> 2] = 1704713;
 HEAP32[$5352 >> 2] = 54938;
 HEAP16[$897 >> 1] = 211;
 HEAP16[$5353 >> 1] = 196;
 HEAP16[$5354 >> 1] = 777;
 HEAP16[$5355 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $896, $897);
 $23694 = $898;
 HEAP32[$23694 >> 2] = 6357193;
 HEAP32[$23694 + 4 >> 2] = 39650101;
 HEAP32[$5356 >> 2] = 54937;
 HEAP16[$899 >> 1] = 1014;
 HEAP16[$5357 >> 1] = 97;
 HEAP16[$5358 >> 1] = 8;
 HEAP16[$5359 >> 1] = 150;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $898, $899);
 $23698 = $900;
 HEAP32[$23698 >> 2] = 6357193;
 HEAP32[$23698 + 4 >> 2] = 39650101;
 HEAP32[$5360 >> 2] = 54937;
 HEAP16[$901 >> 1] = 201;
 HEAP16[$5361 >> 1] = 247;
 HEAP16[$5362 >> 1] = 821;
 HEAP16[$5363 >> 1] = 455;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $900, $901);
 $23702 = $902;
 HEAP32[$23702 >> 2] = 6357193;
 HEAP32[$23702 + 4 >> 2] = 38208309;
 HEAP32[$5364 >> 2] = 54937;
 HEAP16[$903 >> 1] = 1014;
 HEAP16[$5365 >> 1] = 97;
 HEAP16[$5366 >> 1] = 8;
 HEAP16[$5367 >> 1] = 128;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $902, $903);
 $23706 = $904;
 HEAP32[$23706 >> 2] = 6357193;
 HEAP32[$23706 + 4 >> 2] = 38208309;
 HEAP32[$5368 >> 2] = 54937;
 HEAP16[$905 >> 1] = 201;
 HEAP16[$5369 >> 1] = 225;
 HEAP16[$5370 >> 1] = 821;
 HEAP16[$5371 >> 1] = 455;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $904, $905);
 $23710 = $906;
 HEAP32[$23710 >> 2] = 13698030;
 HEAP32[$23710 + 4 >> 2] = 29818896;
 HEAP8[$5372 >> 0] = -16;
 HEAP32[$5373 >> 2] = 65535;
 HEAP32[$5374 >> 2] = 54937;
 HEAP8[$5375 >> 0] = 1;
 HEAP8[$5376 >> 0] = 1;
 HEAP8[$5377 >> 0] = 3;
 HEAP8[$5378 >> 0] = -86;
 HEAP32[$5379 >> 2] = 0;
 HEAP16[$5379 + 4 >> 1] = 0;
 HEAP8[$5379 + 6 >> 0] = 0;
 HEAP16[$907 >> 1] = 1006;
 HEAP16[$5380 >> 1] = 209;
 HEAP16[$5381 >> 1] = 16;
 HEAP16[$5382 >> 1] = 455;
 __ZN14Front_JS_Natif4drawERK9RDPPatBltRK4Rect($front, $906, $907);
 $23714 = $908;
 HEAP32[$23714 >> 2] = 11600893;
 HEAP32[$23714 + 4 >> 2] = 2097153;
 HEAP32[$5383 >> 2] = 16904;
 HEAP16[$909 >> 1] = 1021;
 HEAP16[$5384 >> 1] = 177;
 HEAP16[$5385 >> 1] = 1;
 HEAP16[$5386 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $908, $909);
 $23718 = $910;
 HEAP32[$23718 >> 2] = 13632494;
 HEAP32[$23718 + 4 >> 2] = 65551;
 HEAP32[$5387 >> 2] = 16904;
 HEAP16[$911 >> 1] = 1006;
 HEAP16[$5388 >> 1] = 208;
 HEAP16[$5389 >> 1] = 15;
 HEAP16[$5390 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $910, $911);
 $23722 = $912;
 HEAP32[$23722 >> 2] = 11600878;
 HEAP32[$23722 + 4 >> 2] = 2031617;
 HEAP32[$5391 >> 2] = 54937;
 HEAP16[$913 >> 1] = 1006;
 HEAP16[$5392 >> 1] = 177;
 HEAP16[$5393 >> 1] = 1;
 HEAP16[$5394 >> 1] = 31;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $912, $913);
 $23726 = $914;
 HEAP32[$23726 >> 2] = 11600879;
 HEAP32[$23726 + 4 >> 2] = 65550;
 HEAP32[$5395 >> 2] = 54937;
 HEAP16[$915 >> 1] = 1007;
 HEAP16[$5396 >> 1] = 177;
 HEAP16[$5397 >> 1] = 14;
 HEAP16[$5398 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $914, $915);
 $23730 = $916;
 HEAP32[$23730 >> 2] = 11666428;
 HEAP32[$23730 + 4 >> 2] = 1966081;
 HEAP32[$5399 >> 2] = 33808;
 HEAP16[$917 >> 1] = 1020;
 HEAP16[$5400 >> 1] = 178;
 HEAP16[$5401 >> 1] = 1;
 HEAP16[$5402 >> 1] = 30;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $916, $917);
 $23734 = $918;
 HEAP32[$23734 >> 2] = 13566959;
 HEAP32[$23734 + 4 >> 2] = 65549;
 HEAP32[$5403 >> 2] = 33808;
 HEAP16[$919 >> 1] = 1007;
 HEAP16[$5404 >> 1] = 207;
 HEAP16[$5405 >> 1] = 13;
 HEAP16[$5406 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $918, $919);
 $23738 = $920;
 HEAP32[$23738 >> 2] = 11666415;
 HEAP32[$23738 + 4 >> 2] = 1900545;
 HEAP32[$5407 >> 2] = 65535;
 HEAP16[$921 >> 1] = 1007;
 HEAP16[$5408 >> 1] = 178;
 HEAP16[$5409 >> 1] = 1;
 HEAP16[$5410 >> 1] = 29;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $920, $921);
 $23742 = $922;
 HEAP32[$23742 >> 2] = 11666416;
 HEAP32[$23742 + 4 >> 2] = 65548;
 HEAP32[$5411 >> 2] = 65535;
 HEAP16[$923 >> 1] = 1008;
 HEAP16[$5412 >> 1] = 178;
 HEAP16[$5413 >> 1] = 12;
 HEAP16[$5414 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $922, $923);
 $23746 = $924;
 HEAP32[$23746 >> 2] = 11731952;
 HEAP32[$23746 + 4 >> 2] = 1835020;
 HEAP32[$5415 >> 2] = 54937;
 HEAP16[$925 >> 1] = 1008;
 HEAP16[$5416 >> 1] = 179;
 HEAP16[$5417 >> 1] = 12;
 HEAP16[$5418 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $924, $925);
 $23750 = $926;
 HEAP32[$23750 >> 2] = 10551497;
 HEAP32[$23750 + 4 >> 2] = 34013989;
 HEAP32[$5419 >> 2] = 65535;
 HEAP16[$927 >> 1] = 201;
 HEAP16[$5420 >> 1] = 161;
 HEAP16[$5421 >> 1] = 805;
 HEAP16[$5422 >> 1] = 10;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $926, $927);
 $23754 = $928;
 HEAP32[$23754 >> 2] = 10551497;
 HEAP32[$23754 + 4 >> 2] = 34013989;
 HEAP32[$5423 >> 2] = 65535;
 HEAP16[$929 >> 1] = 201;
 HEAP16[$5424 >> 1] = 171;
 HEAP16[$5425 >> 1] = 10;
 HEAP16[$5426 >> 1] = 509;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $928, $929);
 $23758 = $930;
 HEAP32[$23758 >> 2] = 10551497;
 HEAP32[$23758 + 4 >> 2] = 34013989;
 HEAP32[$5427 >> 2] = 65535;
 HEAP16[$931 >> 1] = 988;
 HEAP16[$5428 >> 1] = 171;
 HEAP16[$5429 >> 1] = 18;
 HEAP16[$5430 >> 1] = 509;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $930, $931);
 $23762 = $932;
 HEAP32[$23762 >> 2] = 42991827;
 HEAP32[$23762 + 4 >> 2] = 1573641;
 HEAP32[$5431 >> 2] = 54938;
 HEAP16[$933 >> 1] = 211;
 HEAP16[$5432 >> 1] = 656;
 HEAP16[$5433 >> 1] = 1;
 HEAP16[$5434 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $932, $933);
 $23766 = $934;
 HEAP32[$23766 >> 2] = 42991827;
 HEAP32[$23766 + 4 >> 2] = 1573641;
 HEAP32[$5435 >> 2] = 54938;
 HEAP16[$935 >> 1] = 987;
 HEAP16[$5436 >> 1] = 656;
 HEAP16[$5437 >> 1] = 1;
 HEAP16[$5438 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $934, $935);
 $23770 = $936;
 HEAP32[$23770 >> 2] = 43713274;
 HEAP32[$23770 + 4 >> 2] = 852182;
 HEAP32[$5439 >> 2] = 63422;
 HEAP16[$937 >> 1] = 762;
 HEAP16[$5440 >> 1] = 667;
 HEAP16[$5441 >> 1] = 214;
 HEAP16[$5442 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $936, $937);
 $23774 = $938;
 HEAP32[$23774 >> 2] = 43713274;
 HEAP32[$23774 + 4 >> 2] = 852182;
 HEAP32[$5443 >> 2] = 63422;
 HEAP16[$939 >> 1] = 762;
 HEAP16[$5444 >> 1] = 672;
 HEAP16[$5445 >> 1] = 5;
 HEAP16[$5446 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $938, $939);
 $23778 = $940;
 HEAP32[$23778 >> 2] = 43713274;
 HEAP32[$23778 + 4 >> 2] = 852182;
 HEAP32[$5447 >> 2] = 63422;
 HEAP16[$941 >> 1] = 971;
 HEAP16[$5448 >> 1] = 672;
 HEAP16[$5449 >> 1] = 5;
 HEAP16[$5450 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $940, $941);
 $23782 = $942;
 HEAP32[$23782 >> 2] = 41287891;
 HEAP32[$23782 + 4 >> 2] = 1704713;
 HEAP32[$5451 >> 2] = 54938;
 HEAP16[$943 >> 1] = 211;
 HEAP16[$5452 >> 1] = 630;
 HEAP16[$5453 >> 1] = 777;
 HEAP16[$5454 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $942, $943);
 $23786 = $944;
 HEAP32[$23786 >> 2] = 41287891;
 HEAP32[$23786 + 4 >> 2] = 1704713;
 HEAP32[$5455 >> 2] = 54938;
 HEAP16[$945 >> 1] = 211;
 HEAP16[$5456 >> 1] = 631;
 HEAP16[$5457 >> 1] = 1;
 HEAP16[$5458 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $944, $945);
 $23790 = $946;
 HEAP32[$23790 >> 2] = 41287891;
 HEAP32[$23790 + 4 >> 2] = 1704713;
 HEAP32[$5459 >> 2] = 54938;
 HEAP16[$947 >> 1] = 987;
 HEAP16[$5460 >> 1] = 631;
 HEAP16[$5461 >> 1] = 1;
 HEAP16[$5462 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $946, $947);
 $23794 = $948;
 HEAP32[$23794 >> 2] = 41287891;
 HEAP32[$23794 + 4 >> 2] = 1704713;
 HEAP32[$5463 >> 2] = 54938;
 HEAP16[$949 >> 1] = 211;
 HEAP16[$5464 >> 1] = 655;
 HEAP16[$5465 >> 1] = 777;
 HEAP16[$5466 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $948, $949);
 $23798 = $950;
 HEAP32[$23798 >> 2] = 40632531;
 HEAP32[$23798 + 4 >> 2] = 656137;
 HEAP32[$5467 >> 2] = 65535;
 HEAP16[$951 >> 1] = 211;
 HEAP16[$5468 >> 1] = 620;
 HEAP16[$5469 >> 1] = 777;
 HEAP16[$5470 >> 1] = 10;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $950, $951);
 $23802 = $952;
 HEAP32[$23802 >> 2] = 12910803;
 HEAP32[$23802 + 4 >> 2] = 27722505;
 HEAP32[$5471 >> 2] = 54938;
 HEAP16[$953 >> 1] = 211;
 HEAP16[$5472 >> 1] = 197;
 HEAP16[$5473 >> 1] = 1;
 HEAP16[$5474 >> 1] = 422;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $952, $953);
 $23806 = $954;
 HEAP32[$23806 >> 2] = 12910803;
 HEAP32[$23806 + 4 >> 2] = 27722505;
 HEAP32[$5475 >> 2] = 54938;
 HEAP16[$955 >> 1] = 987;
 HEAP16[$5476 >> 1] = 197;
 HEAP16[$5477 >> 1] = 1;
 HEAP16[$5478 >> 1] = 422;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $954, $955);
 $23810 = $956;
 HEAP32[$23810 >> 2] = 12910803;
 HEAP32[$23810 + 4 >> 2] = 27722505;
 HEAP32[$5479 >> 2] = 54938;
 HEAP16[$957 >> 1] = 211;
 HEAP16[$5480 >> 1] = 619;
 HEAP16[$5481 >> 1] = 777;
 HEAP16[$5482 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $956, $957);
 $23814 = $958;
 HEAP32[$23814 >> 2] = 39977172;
 HEAP32[$23814 + 4 >> 2] = 590599;
 HEAP32[$5483 >> 2] = 63422;
 HEAP16[$959 >> 1] = 212;
 HEAP16[$5484 >> 1] = 610;
 HEAP16[$5485 >> 1] = 775;
 HEAP16[$5486 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $958, $959);
 $23818 = $960;
 HEAP32[$23818 >> 2] = 29950174;
 HEAP32[$23818 + 4 >> 2] = 10027547;
 HEAP32[$5487 >> 2] = 63422;
 HEAP16[$961 >> 1] = 222;
 HEAP16[$5488 >> 1] = 457;
 HEAP16[$5489 >> 1] = 3;
 HEAP16[$5490 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $960, $961);
 $23822 = $962;
 HEAP32[$23822 >> 2] = 29950174;
 HEAP32[$23822 + 4 >> 2] = 10027547;
 HEAP32[$5491 >> 2] = 63422;
 HEAP16[$963 >> 1] = 434;
 HEAP16[$5492 >> 1] = 457;
 HEAP16[$5493 >> 1] = 6;
 HEAP16[$5494 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $962, $963);
 $23826 = $964;
 HEAP32[$23826 >> 2] = 29950174;
 HEAP32[$23826 + 4 >> 2] = 10027547;
 HEAP32[$5495 >> 2] = 63422;
 HEAP16[$965 >> 1] = 758;
 HEAP16[$5496 >> 1] = 457;
 HEAP16[$5497 >> 1] = 3;
 HEAP16[$5498 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $964, $965);
 $23830 = $966;
 HEAP32[$23830 >> 2] = 29950174;
 HEAP32[$23830 + 4 >> 2] = 10027547;
 HEAP32[$5499 >> 2] = 63422;
 HEAP16[$967 >> 1] = 222;
 HEAP16[$5500 >> 1] = 591;
 HEAP16[$5501 >> 1] = 3;
 HEAP16[$5502 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $966, $967);
 $23834 = $968;
 HEAP32[$23834 >> 2] = 29950174;
 HEAP32[$23834 + 4 >> 2] = 10027547;
 HEAP32[$5503 >> 2] = 63422;
 HEAP16[$969 >> 1] = 434;
 HEAP16[$5504 >> 1] = 591;
 HEAP16[$5505 >> 1] = 327;
 HEAP16[$5506 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $968, $969);
 $23838 = $970;
 HEAP32[$23838 >> 2] = 28181242;
 HEAP32[$23838 + 4 >> 2] = 9371862;
 HEAP32[$5507 >> 2] = 63422;
 HEAP16[$971 >> 1] = 762;
 HEAP16[$5508 >> 1] = 430;
 HEAP16[$5509 >> 1] = 214;
 HEAP16[$5510 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $970, $971);
 $23842 = $972;
 HEAP32[$23842 >> 2] = 28181242;
 HEAP32[$23842 + 4 >> 2] = 9371862;
 HEAP32[$5511 >> 2] = 63422;
 HEAP16[$973 >> 1] = 762;
 HEAP16[$5512 >> 1] = 435;
 HEAP16[$5513 >> 1] = 5;
 HEAP16[$5514 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $972, $973);
 $23846 = $974;
 HEAP32[$23846 >> 2] = 28181242;
 HEAP32[$23846 + 4 >> 2] = 9371862;
 HEAP32[$5515 >> 2] = 63422;
 HEAP16[$975 >> 1] = 971;
 HEAP16[$5516 >> 1] = 435;
 HEAP16[$5517 >> 1] = 5;
 HEAP16[$5518 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $974, $975);
 $23850 = $976;
 HEAP32[$23850 >> 2] = 28181242;
 HEAP32[$23850 + 4 >> 2] = 9371862;
 HEAP32[$5519 >> 2] = 63422;
 HEAP16[$977 >> 1] = 762;
 HEAP16[$5520 >> 1] = 451;
 HEAP16[$5521 >> 1] = 214;
 HEAP16[$5522 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $976, $977);
 $23854 = $978;
 HEAP32[$23854 >> 2] = 28181242;
 HEAP32[$23854 + 4 >> 2] = 9371862;
 HEAP32[$5523 >> 2] = 63422;
 HEAP16[$979 >> 1] = 762;
 HEAP16[$5524 >> 1] = 456;
 HEAP16[$5525 >> 1] = 5;
 HEAP16[$5526 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $978, $979);
 $23858 = $980;
 HEAP32[$23858 >> 2] = 28181242;
 HEAP32[$23858 + 4 >> 2] = 9371862;
 HEAP32[$5527 >> 2] = 63422;
 HEAP16[$981 >> 1] = 971;
 HEAP16[$5528 >> 1] = 456;
 HEAP16[$5529 >> 1] = 5;
 HEAP16[$5530 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $980, $981);
 $23862 = $982;
 HEAP32[$23862 >> 2] = 28181242;
 HEAP32[$23862 + 4 >> 2] = 9371862;
 HEAP32[$5531 >> 2] = 63422;
 HEAP16[$983 >> 1] = 762;
 HEAP16[$5532 >> 1] = 472;
 HEAP16[$5533 >> 1] = 214;
 HEAP16[$5534 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $982, $983);
 $23866 = $984;
 HEAP32[$23866 >> 2] = 28181242;
 HEAP32[$23866 + 4 >> 2] = 9371862;
 HEAP32[$5535 >> 2] = 63422;
 HEAP16[$985 >> 1] = 762;
 HEAP16[$5536 >> 1] = 477;
 HEAP16[$5537 >> 1] = 5;
 HEAP16[$5538 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $984, $985);
 $23870 = $986;
 HEAP32[$23870 >> 2] = 28181242;
 HEAP32[$23870 + 4 >> 2] = 9371862;
 HEAP32[$5539 >> 2] = 63422;
 HEAP16[$987 >> 1] = 971;
 HEAP16[$5540 >> 1] = 477;
 HEAP16[$5541 >> 1] = 5;
 HEAP16[$5542 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $986, $987);
 $23874 = $988;
 HEAP32[$23874 >> 2] = 28181242;
 HEAP32[$23874 + 4 >> 2] = 9371862;
 HEAP32[$5543 >> 2] = 63422;
 HEAP16[$989 >> 1] = 762;
 HEAP16[$5544 >> 1] = 493;
 HEAP16[$5545 >> 1] = 214;
 HEAP16[$5546 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $988, $989);
 $23878 = $990;
 HEAP32[$23878 >> 2] = 28181242;
 HEAP32[$23878 + 4 >> 2] = 9371862;
 HEAP32[$5547 >> 2] = 63422;
 HEAP16[$991 >> 1] = 762;
 HEAP16[$5548 >> 1] = 498;
 HEAP16[$5549 >> 1] = 5;
 HEAP16[$5550 >> 1] = 26;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $990, $991);
 $23882 = $992;
 HEAP32[$23882 >> 2] = 28181242;
 HEAP32[$23882 + 4 >> 2] = 9371862;
 HEAP32[$5551 >> 2] = 63422;
 HEAP16[$993 >> 1] = 971;
 HEAP16[$5552 >> 1] = 498;
 HEAP16[$5553 >> 1] = 5;
 HEAP16[$5554 >> 1] = 26;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $992, $993);
 $23886 = $994;
 HEAP32[$23886 >> 2] = 28181242;
 HEAP32[$23886 + 4 >> 2] = 9371862;
 HEAP32[$5555 >> 2] = 63422;
 HEAP16[$995 >> 1] = 762;
 HEAP16[$5556 >> 1] = 524;
 HEAP16[$5557 >> 1] = 214;
 HEAP16[$5558 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $994, $995);
 $23890 = $996;
 HEAP32[$23890 >> 2] = 28181242;
 HEAP32[$23890 + 4 >> 2] = 9371862;
 HEAP32[$5559 >> 2] = 63422;
 HEAP16[$997 >> 1] = 762;
 HEAP16[$5560 >> 1] = 529;
 HEAP16[$5561 >> 1] = 5;
 HEAP16[$5562 >> 1] = 39;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $996, $997);
 $23894 = $998;
 HEAP32[$23894 >> 2] = 28181242;
 HEAP32[$23894 + 4 >> 2] = 9371862;
 HEAP32[$5563 >> 2] = 63422;
 HEAP16[$999 >> 1] = 971;
 HEAP16[$5564 >> 1] = 529;
 HEAP16[$5565 >> 1] = 5;
 HEAP16[$5566 >> 1] = 39;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $998, $999);
 $23898 = $1000;
 HEAP32[$23898 >> 2] = 28181242;
 HEAP32[$23898 + 4 >> 2] = 9371862;
 HEAP32[$5567 >> 2] = 63422;
 HEAP16[$1001 >> 1] = 762;
 HEAP16[$5568 >> 1] = 568;
 HEAP16[$5569 >> 1] = 214;
 HEAP16[$5570 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1000, $1001);
 $23902 = $1002;
 HEAP32[$23902 >> 2] = 14942430;
 HEAP32[$23902 + 4 >> 2] = 12517915;
 HEAP32[$5571 >> 2] = 63422;
 HEAP16[$1003 >> 1] = 222;
 HEAP16[$5572 >> 1] = 228;
 HEAP16[$5573 >> 1] = 3;
 HEAP16[$5574 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1002, $1003);
 $23906 = $1004;
 HEAP32[$23906 >> 2] = 14942430;
 HEAP32[$23906 + 4 >> 2] = 12517915;
 HEAP32[$5575 >> 2] = 63422;
 HEAP16[$1005 >> 1] = 434;
 HEAP16[$5576 >> 1] = 228;
 HEAP16[$5577 >> 1] = 6;
 HEAP16[$5578 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1004, $1005);
 $23910 = $1006;
 HEAP32[$23910 >> 2] = 14942430;
 HEAP32[$23910 + 4 >> 2] = 12517915;
 HEAP32[$5579 >> 2] = 63422;
 HEAP16[$1007 >> 1] = 758;
 HEAP16[$5580 >> 1] = 228;
 HEAP16[$5581 >> 1] = 3;
 HEAP16[$5582 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1006, $1007);
 $23914 = $1008;
 HEAP32[$23914 >> 2] = 14942430;
 HEAP32[$23914 + 4 >> 2] = 12517915;
 HEAP32[$5583 >> 2] = 63422;
 HEAP16[$1009 >> 1] = 222;
 HEAP16[$5584 >> 1] = 381;
 HEAP16[$5585 >> 1] = 539;
 HEAP16[$5586 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1008, $1009);
 $23918 = $1010;
 HEAP32[$23918 >> 2] = 14942430;
 HEAP32[$23918 + 4 >> 2] = 12517915;
 HEAP32[$5587 >> 2] = 63422;
 HEAP16[$1011 >> 1] = 222;
 HEAP16[$5588 >> 1] = 384;
 HEAP16[$5589 >> 1] = 3;
 HEAP16[$5590 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1010, $1011);
 $23922 = $1012;
 HEAP32[$23922 >> 2] = 14942430;
 HEAP32[$23922 + 4 >> 2] = 12517915;
 HEAP32[$5591 >> 2] = 63422;
 HEAP16[$1013 >> 1] = 531;
 HEAP16[$5592 >> 1] = 384;
 HEAP16[$5593 >> 1] = 230;
 HEAP16[$5594 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1012, $1013);
 $23926 = $1014;
 HEAP32[$23926 >> 2] = 14942430;
 HEAP32[$23926 + 4 >> 2] = 12517915;
 HEAP32[$5595 >> 2] = 63422;
 HEAP16[$1015 >> 1] = 222;
 HEAP16[$5596 >> 1] = 416;
 HEAP16[$5597 >> 1] = 539;
 HEAP16[$5598 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1014, $1015);
 $23930 = $1016;
 HEAP32[$23930 >> 2] = 11206867;
 HEAP32[$23930 + 4 >> 2] = 1704713;
 HEAP32[$5599 >> 2] = 54938;
 HEAP16[$1017 >> 1] = 211;
 HEAP16[$5600 >> 1] = 171;
 HEAP16[$5601 >> 1] = 777;
 HEAP16[$5602 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1016, $1017);
 $23934 = $1018;
 HEAP32[$23934 >> 2] = 11206867;
 HEAP32[$23934 + 4 >> 2] = 1704713;
 HEAP32[$5603 >> 2] = 54938;
 HEAP16[$1019 >> 1] = 211;
 HEAP16[$5604 >> 1] = 172;
 HEAP16[$5605 >> 1] = 1;
 HEAP16[$5606 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1018, $1019);
 $23938 = $1020;
 HEAP32[$23938 >> 2] = 11206867;
 HEAP32[$23938 + 4 >> 2] = 1704713;
 HEAP32[$5607 >> 2] = 54938;
 HEAP16[$1021 >> 1] = 987;
 HEAP16[$5608 >> 1] = 172;
 HEAP16[$5609 >> 1] = 1;
 HEAP16[$5610 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1020, $1021);
 $23942 = $1022;
 HEAP32[$23942 >> 2] = 11206867;
 HEAP32[$23942 + 4 >> 2] = 1704713;
 HEAP32[$5611 >> 2] = 54938;
 HEAP16[$1023 >> 1] = 211;
 HEAP16[$5612 >> 1] = 196;
 HEAP16[$5613 >> 1] = 777;
 HEAP16[$5614 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1022, $1023);
 $23946 = $1024;
 HEAP32[$23946 >> 2] = 12910803;
 HEAP32[$23946 + 4 >> 2] = 27722505;
 HEAP32[$5615 >> 2] = 54938;
 HEAP16[$1025 >> 1] = 211;
 HEAP16[$5616 >> 1] = 197;
 HEAP16[$5617 >> 1] = 1;
 HEAP16[$5618 >> 1] = 422;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1024, $1025);
 $23950 = $1026;
 HEAP32[$23950 >> 2] = 12910803;
 HEAP32[$23950 + 4 >> 2] = 27722505;
 HEAP32[$5619 >> 2] = 54938;
 HEAP16[$1027 >> 1] = 987;
 HEAP16[$5620 >> 1] = 197;
 HEAP16[$5621 >> 1] = 1;
 HEAP16[$5622 >> 1] = 422;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1026, $1027);
 $23954 = $1028;
 HEAP32[$23954 >> 2] = 12910803;
 HEAP32[$23954 + 4 >> 2] = 27722505;
 HEAP32[$5623 >> 2] = 54938;
 HEAP16[$1029 >> 1] = 211;
 HEAP16[$5624 >> 1] = 619;
 HEAP16[$5625 >> 1] = 777;
 HEAP16[$5626 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1028, $1029);
 $23958 = $1030;
 HEAP32[$23958 >> 2] = 39977172;
 HEAP32[$23958 + 4 >> 2] = 590599;
 HEAP32[$5627 >> 2] = 63422;
 HEAP16[$1031 >> 1] = 212;
 HEAP16[$5628 >> 1] = 610;
 HEAP16[$5629 >> 1] = 775;
 HEAP16[$5630 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1030, $1031);
 $23962 = $1032;
 HEAP32[$23962 >> 2] = 29950174;
 HEAP32[$23962 + 4 >> 2] = 10027547;
 HEAP32[$5631 >> 2] = 63422;
 HEAP16[$1033 >> 1] = 222;
 HEAP16[$5632 >> 1] = 457;
 HEAP16[$5633 >> 1] = 3;
 HEAP16[$5634 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1032, $1033);
 $23966 = $1034;
 HEAP32[$23966 >> 2] = 29950174;
 HEAP32[$23966 + 4 >> 2] = 10027547;
 HEAP32[$5635 >> 2] = 63422;
 HEAP16[$1035 >> 1] = 434;
 HEAP16[$5636 >> 1] = 457;
 HEAP16[$5637 >> 1] = 6;
 HEAP16[$5638 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1034, $1035);
 $23970 = $1036;
 HEAP32[$23970 >> 2] = 29950174;
 HEAP32[$23970 + 4 >> 2] = 10027547;
 HEAP32[$5639 >> 2] = 63422;
 HEAP16[$1037 >> 1] = 758;
 HEAP16[$5640 >> 1] = 457;
 HEAP16[$5641 >> 1] = 3;
 HEAP16[$5642 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1036, $1037);
 $23974 = $1038;
 HEAP32[$23974 >> 2] = 29950174;
 HEAP32[$23974 + 4 >> 2] = 10027547;
 HEAP32[$5643 >> 2] = 63422;
 HEAP16[$1039 >> 1] = 222;
 HEAP16[$5644 >> 1] = 591;
 HEAP16[$5645 >> 1] = 3;
 HEAP16[$5646 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1038, $1039);
 $23978 = $1040;
 HEAP32[$23978 >> 2] = 29950174;
 HEAP32[$23978 + 4 >> 2] = 10027547;
 HEAP32[$5647 >> 2] = 63422;
 HEAP16[$1041 >> 1] = 434;
 HEAP16[$5648 >> 1] = 591;
 HEAP16[$5649 >> 1] = 327;
 HEAP16[$5650 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1040, $1041);
 $23982 = $1042;
 HEAP32[$23982 >> 2] = 28181242;
 HEAP32[$23982 + 4 >> 2] = 9371862;
 HEAP32[$5651 >> 2] = 63422;
 HEAP16[$1043 >> 1] = 762;
 HEAP16[$5652 >> 1] = 430;
 HEAP16[$5653 >> 1] = 214;
 HEAP16[$5654 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1042, $1043);
 $23986 = $1044;
 HEAP32[$23986 >> 2] = 28181242;
 HEAP32[$23986 + 4 >> 2] = 9371862;
 HEAP32[$5655 >> 2] = 63422;
 HEAP16[$1045 >> 1] = 762;
 HEAP16[$5656 >> 1] = 435;
 HEAP16[$5657 >> 1] = 5;
 HEAP16[$5658 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1044, $1045);
 $23990 = $1046;
 HEAP32[$23990 >> 2] = 28181242;
 HEAP32[$23990 + 4 >> 2] = 9371862;
 HEAP32[$5659 >> 2] = 63422;
 HEAP16[$1047 >> 1] = 971;
 HEAP16[$5660 >> 1] = 435;
 HEAP16[$5661 >> 1] = 5;
 HEAP16[$5662 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1046, $1047);
 $23994 = $1048;
 HEAP32[$23994 >> 2] = 28181242;
 HEAP32[$23994 + 4 >> 2] = 9371862;
 HEAP32[$5663 >> 2] = 63422;
 HEAP16[$1049 >> 1] = 762;
 HEAP16[$5664 >> 1] = 451;
 HEAP16[$5665 >> 1] = 214;
 HEAP16[$5666 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1048, $1049);
 $23998 = $1050;
 HEAP32[$23998 >> 2] = 28181242;
 HEAP32[$23998 + 4 >> 2] = 9371862;
 HEAP32[$5667 >> 2] = 63422;
 HEAP16[$1051 >> 1] = 762;
 HEAP16[$5668 >> 1] = 456;
 HEAP16[$5669 >> 1] = 5;
 HEAP16[$5670 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1050, $1051);
 $24002 = $1052;
 HEAP32[$24002 >> 2] = 28181242;
 HEAP32[$24002 + 4 >> 2] = 9371862;
 HEAP32[$5671 >> 2] = 63422;
 HEAP16[$1053 >> 1] = 971;
 HEAP16[$5672 >> 1] = 456;
 HEAP16[$5673 >> 1] = 5;
 HEAP16[$5674 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1052, $1053);
 $24006 = $1054;
 HEAP32[$24006 >> 2] = 28181242;
 HEAP32[$24006 + 4 >> 2] = 9371862;
 HEAP32[$5675 >> 2] = 63422;
 HEAP16[$1055 >> 1] = 762;
 HEAP16[$5676 >> 1] = 472;
 HEAP16[$5677 >> 1] = 214;
 HEAP16[$5678 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1054, $1055);
 $24010 = $1056;
 HEAP32[$24010 >> 2] = 28181242;
 HEAP32[$24010 + 4 >> 2] = 9371862;
 HEAP32[$5679 >> 2] = 63422;
 HEAP16[$1057 >> 1] = 762;
 HEAP16[$5680 >> 1] = 477;
 HEAP16[$5681 >> 1] = 5;
 HEAP16[$5682 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1056, $1057);
 $24014 = $1058;
 HEAP32[$24014 >> 2] = 28181242;
 HEAP32[$24014 + 4 >> 2] = 9371862;
 HEAP32[$5683 >> 2] = 63422;
 HEAP16[$1059 >> 1] = 971;
 HEAP16[$5684 >> 1] = 477;
 HEAP16[$5685 >> 1] = 5;
 HEAP16[$5686 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1058, $1059);
 $24018 = $1060;
 HEAP32[$24018 >> 2] = 28181242;
 HEAP32[$24018 + 4 >> 2] = 9371862;
 HEAP32[$5687 >> 2] = 63422;
 HEAP16[$1061 >> 1] = 762;
 HEAP16[$5688 >> 1] = 493;
 HEAP16[$5689 >> 1] = 214;
 HEAP16[$5690 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1060, $1061);
 $24022 = $1062;
 HEAP32[$24022 >> 2] = 28181242;
 HEAP32[$24022 + 4 >> 2] = 9371862;
 HEAP32[$5691 >> 2] = 63422;
 HEAP16[$1063 >> 1] = 762;
 HEAP16[$5692 >> 1] = 498;
 HEAP16[$5693 >> 1] = 5;
 HEAP16[$5694 >> 1] = 26;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1062, $1063);
 $24026 = $1064;
 HEAP32[$24026 >> 2] = 28181242;
 HEAP32[$24026 + 4 >> 2] = 9371862;
 HEAP32[$5695 >> 2] = 63422;
 HEAP16[$1065 >> 1] = 971;
 HEAP16[$5696 >> 1] = 498;
 HEAP16[$5697 >> 1] = 5;
 HEAP16[$5698 >> 1] = 26;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1064, $1065);
 $24030 = $1066;
 HEAP32[$24030 >> 2] = 28181242;
 HEAP32[$24030 + 4 >> 2] = 9371862;
 HEAP32[$5699 >> 2] = 63422;
 HEAP16[$1067 >> 1] = 762;
 HEAP16[$5700 >> 1] = 524;
 HEAP16[$5701 >> 1] = 214;
 HEAP16[$5702 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1066, $1067);
 $24034 = $1068;
 HEAP32[$24034 >> 2] = 28181242;
 HEAP32[$24034 + 4 >> 2] = 9371862;
 HEAP32[$5703 >> 2] = 63422;
 HEAP16[$1069 >> 1] = 762;
 HEAP16[$5704 >> 1] = 529;
 HEAP16[$5705 >> 1] = 5;
 HEAP16[$5706 >> 1] = 39;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1068, $1069);
 $24038 = $1070;
 HEAP32[$24038 >> 2] = 28181242;
 HEAP32[$24038 + 4 >> 2] = 9371862;
 HEAP32[$5707 >> 2] = 63422;
 HEAP16[$1071 >> 1] = 971;
 HEAP16[$5708 >> 1] = 529;
 HEAP16[$5709 >> 1] = 5;
 HEAP16[$5710 >> 1] = 39;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1070, $1071);
 $24042 = $1072;
 HEAP32[$24042 >> 2] = 28181242;
 HEAP32[$24042 + 4 >> 2] = 9371862;
 HEAP32[$5711 >> 2] = 63422;
 HEAP16[$1073 >> 1] = 762;
 HEAP16[$5712 >> 1] = 568;
 HEAP16[$5713 >> 1] = 214;
 HEAP16[$5714 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1072, $1073);
 $24046 = $1074;
 HEAP32[$24046 >> 2] = 14942430;
 HEAP32[$24046 + 4 >> 2] = 12517915;
 HEAP32[$5715 >> 2] = 63422;
 HEAP16[$1075 >> 1] = 222;
 HEAP16[$5716 >> 1] = 228;
 HEAP16[$5717 >> 1] = 3;
 HEAP16[$5718 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1074, $1075);
 $24050 = $1076;
 HEAP32[$24050 >> 2] = 14942430;
 HEAP32[$24050 + 4 >> 2] = 12517915;
 HEAP32[$5719 >> 2] = 63422;
 HEAP16[$1077 >> 1] = 434;
 HEAP16[$5720 >> 1] = 228;
 HEAP16[$5721 >> 1] = 6;
 HEAP16[$5722 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1076, $1077);
 $24054 = $1078;
 HEAP32[$24054 >> 2] = 14942430;
 HEAP32[$24054 + 4 >> 2] = 12517915;
 HEAP32[$5723 >> 2] = 63422;
 HEAP16[$1079 >> 1] = 758;
 HEAP16[$5724 >> 1] = 228;
 HEAP16[$5725 >> 1] = 3;
 HEAP16[$5726 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1078, $1079);
 $24058 = $1080;
 HEAP32[$24058 >> 2] = 14942430;
 HEAP32[$24058 + 4 >> 2] = 12517915;
 HEAP32[$5727 >> 2] = 63422;
 HEAP16[$1081 >> 1] = 222;
 HEAP16[$5728 >> 1] = 381;
 HEAP16[$5729 >> 1] = 539;
 HEAP16[$5730 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1080, $1081);
 $24062 = $1082;
 HEAP32[$24062 >> 2] = 14942430;
 HEAP32[$24062 + 4 >> 2] = 12517915;
 HEAP32[$5731 >> 2] = 63422;
 HEAP16[$1083 >> 1] = 222;
 HEAP16[$5732 >> 1] = 384;
 HEAP16[$5733 >> 1] = 3;
 HEAP16[$5734 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1082, $1083);
 $24066 = $1084;
 HEAP32[$24066 >> 2] = 14942430;
 HEAP32[$24066 + 4 >> 2] = 12517915;
 HEAP32[$5735 >> 2] = 63422;
 HEAP16[$1085 >> 1] = 531;
 HEAP16[$5736 >> 1] = 384;
 HEAP16[$5737 >> 1] = 230;
 HEAP16[$5738 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1084, $1085);
 $24070 = $1086;
 HEAP32[$24070 >> 2] = 14942430;
 HEAP32[$24070 + 4 >> 2] = 12517915;
 HEAP32[$5739 >> 2] = 63422;
 HEAP16[$1087 >> 1] = 222;
 HEAP16[$5740 >> 1] = 416;
 HEAP16[$5741 >> 1] = 539;
 HEAP16[$5742 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1086, $1087);
 $24074 = $1088;
 HEAP32[$24074 >> 2] = 11206867;
 HEAP32[$24074 + 4 >> 2] = 1704713;
 HEAP32[$5743 >> 2] = 54938;
 HEAP16[$1089 >> 1] = 211;
 HEAP16[$5744 >> 1] = 171;
 HEAP16[$5745 >> 1] = 777;
 HEAP16[$5746 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1088, $1089);
 $24078 = $1090;
 HEAP32[$24078 >> 2] = 11206867;
 HEAP32[$24078 + 4 >> 2] = 1704713;
 HEAP32[$5747 >> 2] = 54938;
 HEAP16[$1091 >> 1] = 211;
 HEAP16[$5748 >> 1] = 172;
 HEAP16[$5749 >> 1] = 1;
 HEAP16[$5750 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1090, $1091);
 $24082 = $1092;
 HEAP32[$24082 >> 2] = 11206867;
 HEAP32[$24082 + 4 >> 2] = 1704713;
 HEAP32[$5751 >> 2] = 54938;
 HEAP16[$1093 >> 1] = 987;
 HEAP16[$5752 >> 1] = 172;
 HEAP16[$5753 >> 1] = 1;
 HEAP16[$5754 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1092, $1093);
 $24086 = $1094;
 HEAP32[$24086 >> 2] = 11206867;
 HEAP32[$24086 + 4 >> 2] = 1704713;
 HEAP32[$5755 >> 2] = 54938;
 HEAP16[$1095 >> 1] = 211;
 HEAP16[$5756 >> 1] = 196;
 HEAP16[$5757 >> 1] = 777;
 HEAP16[$5758 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1094, $1095);
 $24090 = $1096;
 HEAP32[$24090 >> 2] = 11206867;
 HEAP32[$24090 + 4 >> 2] = 1704721;
 HEAP32[$5759 >> 2] = 54938;
 HEAP16[$1097 >> 1] = 211;
 HEAP16[$5760 >> 1] = 171;
 HEAP16[$5761 >> 1] = 785;
 HEAP16[$5762 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1096, $1097);
 $24094 = $1098;
 HEAP32[$24094 >> 2] = 11206867;
 HEAP32[$24094 + 4 >> 2] = 1704721;
 HEAP32[$5763 >> 2] = 54938;
 HEAP16[$1099 >> 1] = 211;
 HEAP16[$5764 >> 1] = 172;
 HEAP16[$5765 >> 1] = 1;
 HEAP16[$5766 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1098, $1099);
 $24098 = $1100;
 HEAP32[$24098 >> 2] = 11206867;
 HEAP32[$24098 + 4 >> 2] = 1704721;
 HEAP32[$5767 >> 2] = 54938;
 HEAP16[$1101 >> 1] = 987;
 HEAP16[$5768 >> 1] = 172;
 HEAP16[$5769 >> 1] = 9;
 HEAP16[$5770 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1100, $1101);
 $24102 = $1102;
 HEAP32[$24102 >> 2] = 11206867;
 HEAP32[$24102 + 4 >> 2] = 1704721;
 HEAP32[$5771 >> 2] = 54938;
 HEAP16[$1103 >> 1] = 211;
 HEAP16[$5772 >> 1] = 196;
 HEAP16[$5773 >> 1] = 785;
 HEAP16[$5774 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1102, $1103);
 $24106 = $1104;
 HEAP32[$24106 >> 2] = 12910803;
 HEAP32[$24106 + 4 >> 2] = 27722513;
 HEAP32[$5775 >> 2] = 54938;
 HEAP16[$1105 >> 1] = 211;
 HEAP16[$5776 >> 1] = 197;
 HEAP16[$5777 >> 1] = 1;
 HEAP16[$5778 >> 1] = 422;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1104, $1105);
 $24110 = $1106;
 HEAP32[$24110 >> 2] = 12910803;
 HEAP32[$24110 + 4 >> 2] = 27722513;
 HEAP32[$5779 >> 2] = 54938;
 HEAP16[$1107 >> 1] = 987;
 HEAP16[$5780 >> 1] = 197;
 HEAP16[$5781 >> 1] = 9;
 HEAP16[$5782 >> 1] = 422;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1106, $1107);
 $24114 = $1108;
 HEAP32[$24114 >> 2] = 12910803;
 HEAP32[$24114 + 4 >> 2] = 27722513;
 HEAP32[$5783 >> 2] = 54938;
 HEAP16[$1109 >> 1] = 211;
 HEAP16[$5784 >> 1] = 619;
 HEAP16[$5785 >> 1] = 785;
 HEAP16[$5786 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1108, $1109);
 $24118 = $1110;
 HEAP32[$24118 >> 2] = 39977172;
 HEAP32[$24118 + 4 >> 2] = 590599;
 HEAP32[$5787 >> 2] = 63422;
 HEAP16[$1111 >> 1] = 212;
 HEAP16[$5788 >> 1] = 610;
 HEAP16[$5789 >> 1] = 775;
 HEAP16[$5790 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1110, $1111);
 $24122 = $1112;
 HEAP32[$24122 >> 2] = 29950174;
 HEAP32[$24122 + 4 >> 2] = 10027547;
 HEAP32[$5791 >> 2] = 63422;
 HEAP16[$1113 >> 1] = 222;
 HEAP16[$5792 >> 1] = 457;
 HEAP16[$5793 >> 1] = 3;
 HEAP16[$5794 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1112, $1113);
 $24126 = $1114;
 HEAP32[$24126 >> 2] = 29950174;
 HEAP32[$24126 + 4 >> 2] = 10027547;
 HEAP32[$5795 >> 2] = 63422;
 HEAP16[$1115 >> 1] = 434;
 HEAP16[$5796 >> 1] = 457;
 HEAP16[$5797 >> 1] = 6;
 HEAP16[$5798 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1114, $1115);
 $24130 = $1116;
 HEAP32[$24130 >> 2] = 29950174;
 HEAP32[$24130 + 4 >> 2] = 10027547;
 HEAP32[$5799 >> 2] = 63422;
 HEAP16[$1117 >> 1] = 758;
 HEAP16[$5800 >> 1] = 457;
 HEAP16[$5801 >> 1] = 3;
 HEAP16[$5802 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1116, $1117);
 $24134 = $1118;
 HEAP32[$24134 >> 2] = 29950174;
 HEAP32[$24134 + 4 >> 2] = 10027547;
 HEAP32[$5803 >> 2] = 63422;
 HEAP16[$1119 >> 1] = 222;
 HEAP16[$5804 >> 1] = 591;
 HEAP16[$5805 >> 1] = 3;
 HEAP16[$5806 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1118, $1119);
 $24138 = $1120;
 HEAP32[$24138 >> 2] = 29950174;
 HEAP32[$24138 + 4 >> 2] = 10027547;
 HEAP32[$5807 >> 2] = 63422;
 HEAP16[$1121 >> 1] = 434;
 HEAP16[$5808 >> 1] = 591;
 HEAP16[$5809 >> 1] = 327;
 HEAP16[$5810 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1120, $1121);
 $24142 = $1122;
 HEAP32[$24142 >> 2] = 28181242;
 HEAP32[$24142 + 4 >> 2] = 9371862;
 HEAP32[$5811 >> 2] = 63422;
 HEAP16[$1123 >> 1] = 762;
 HEAP16[$5812 >> 1] = 430;
 HEAP16[$5813 >> 1] = 214;
 HEAP16[$5814 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1122, $1123);
 $24146 = $1124;
 HEAP32[$24146 >> 2] = 28181242;
 HEAP32[$24146 + 4 >> 2] = 9371862;
 HEAP32[$5815 >> 2] = 63422;
 HEAP16[$1125 >> 1] = 762;
 HEAP16[$5816 >> 1] = 435;
 HEAP16[$5817 >> 1] = 5;
 HEAP16[$5818 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1124, $1125);
 $24150 = $1126;
 HEAP32[$24150 >> 2] = 28181242;
 HEAP32[$24150 + 4 >> 2] = 9371862;
 HEAP32[$5819 >> 2] = 63422;
 HEAP16[$1127 >> 1] = 971;
 HEAP16[$5820 >> 1] = 435;
 HEAP16[$5821 >> 1] = 5;
 HEAP16[$5822 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1126, $1127);
 $24154 = $1128;
 HEAP32[$24154 >> 2] = 28181242;
 HEAP32[$24154 + 4 >> 2] = 9371862;
 HEAP32[$5823 >> 2] = 63422;
 HEAP16[$1129 >> 1] = 762;
 HEAP16[$5824 >> 1] = 451;
 HEAP16[$5825 >> 1] = 214;
 HEAP16[$5826 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1128, $1129);
 $24158 = $1130;
 HEAP32[$24158 >> 2] = 28181242;
 HEAP32[$24158 + 4 >> 2] = 9371862;
 HEAP32[$5827 >> 2] = 63422;
 HEAP16[$1131 >> 1] = 762;
 HEAP16[$5828 >> 1] = 456;
 HEAP16[$5829 >> 1] = 5;
 HEAP16[$5830 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1130, $1131);
 $24162 = $1132;
 HEAP32[$24162 >> 2] = 28181242;
 HEAP32[$24162 + 4 >> 2] = 9371862;
 HEAP32[$5831 >> 2] = 63422;
 HEAP16[$1133 >> 1] = 971;
 HEAP16[$5832 >> 1] = 456;
 HEAP16[$5833 >> 1] = 5;
 HEAP16[$5834 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1132, $1133);
 $24166 = $1134;
 HEAP32[$24166 >> 2] = 28181242;
 HEAP32[$24166 + 4 >> 2] = 9371862;
 HEAP32[$5835 >> 2] = 63422;
 HEAP16[$1135 >> 1] = 762;
 HEAP16[$5836 >> 1] = 472;
 HEAP16[$5837 >> 1] = 214;
 HEAP16[$5838 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1134, $1135);
 $24170 = $1136;
 HEAP32[$24170 >> 2] = 28181242;
 HEAP32[$24170 + 4 >> 2] = 9371862;
 HEAP32[$5839 >> 2] = 63422;
 HEAP16[$1137 >> 1] = 762;
 HEAP16[$5840 >> 1] = 477;
 HEAP16[$5841 >> 1] = 5;
 HEAP16[$5842 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1136, $1137);
 $24174 = $1138;
 HEAP32[$24174 >> 2] = 28181242;
 HEAP32[$24174 + 4 >> 2] = 9371862;
 HEAP32[$5843 >> 2] = 63422;
 HEAP16[$1139 >> 1] = 971;
 HEAP16[$5844 >> 1] = 477;
 HEAP16[$5845 >> 1] = 5;
 HEAP16[$5846 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1138, $1139);
 $24178 = $1140;
 HEAP32[$24178 >> 2] = 28181242;
 HEAP32[$24178 + 4 >> 2] = 9371862;
 HEAP32[$5847 >> 2] = 63422;
 HEAP16[$1141 >> 1] = 762;
 HEAP16[$5848 >> 1] = 493;
 HEAP16[$5849 >> 1] = 214;
 HEAP16[$5850 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1140, $1141);
 $24182 = $1142;
 HEAP32[$24182 >> 2] = 28181242;
 HEAP32[$24182 + 4 >> 2] = 9371862;
 HEAP32[$5851 >> 2] = 63422;
 HEAP16[$1143 >> 1] = 762;
 HEAP16[$5852 >> 1] = 498;
 HEAP16[$5853 >> 1] = 5;
 HEAP16[$5854 >> 1] = 26;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1142, $1143);
 $24186 = $1144;
 HEAP32[$24186 >> 2] = 28181242;
 HEAP32[$24186 + 4 >> 2] = 9371862;
 HEAP32[$5855 >> 2] = 63422;
 HEAP16[$1145 >> 1] = 971;
 HEAP16[$5856 >> 1] = 498;
 HEAP16[$5857 >> 1] = 5;
 HEAP16[$5858 >> 1] = 26;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1144, $1145);
 $24190 = $1146;
 HEAP32[$24190 >> 2] = 28181242;
 HEAP32[$24190 + 4 >> 2] = 9371862;
 HEAP32[$5859 >> 2] = 63422;
 HEAP16[$1147 >> 1] = 762;
 HEAP16[$5860 >> 1] = 524;
 HEAP16[$5861 >> 1] = 214;
 HEAP16[$5862 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1146, $1147);
 $24194 = $1148;
 HEAP32[$24194 >> 2] = 28181242;
 HEAP32[$24194 + 4 >> 2] = 9371862;
 HEAP32[$5863 >> 2] = 63422;
 HEAP16[$1149 >> 1] = 762;
 HEAP16[$5864 >> 1] = 529;
 HEAP16[$5865 >> 1] = 5;
 HEAP16[$5866 >> 1] = 39;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1148, $1149);
 $24198 = $1150;
 HEAP32[$24198 >> 2] = 28181242;
 HEAP32[$24198 + 4 >> 2] = 9371862;
 HEAP32[$5867 >> 2] = 63422;
 HEAP16[$1151 >> 1] = 971;
 HEAP16[$5868 >> 1] = 529;
 HEAP16[$5869 >> 1] = 5;
 HEAP16[$5870 >> 1] = 39;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1150, $1151);
 $24202 = $1152;
 HEAP32[$24202 >> 2] = 28181242;
 HEAP32[$24202 + 4 >> 2] = 9371862;
 HEAP32[$5871 >> 2] = 63422;
 HEAP16[$1153 >> 1] = 762;
 HEAP16[$5872 >> 1] = 568;
 HEAP16[$5873 >> 1] = 214;
 HEAP16[$5874 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1152, $1153);
 $24206 = $1154;
 HEAP32[$24206 >> 2] = 14942430;
 HEAP32[$24206 + 4 >> 2] = 12517915;
 HEAP32[$5875 >> 2] = 63422;
 HEAP16[$1155 >> 1] = 222;
 HEAP16[$5876 >> 1] = 228;
 HEAP16[$5877 >> 1] = 3;
 HEAP16[$5878 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1154, $1155);
 $24210 = $1156;
 HEAP32[$24210 >> 2] = 14942430;
 HEAP32[$24210 + 4 >> 2] = 12517915;
 HEAP32[$5879 >> 2] = 63422;
 HEAP16[$1157 >> 1] = 434;
 HEAP16[$5880 >> 1] = 228;
 HEAP16[$5881 >> 1] = 6;
 HEAP16[$5882 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1156, $1157);
 $24214 = $1158;
 HEAP32[$24214 >> 2] = 14942430;
 HEAP32[$24214 + 4 >> 2] = 12517915;
 HEAP32[$5883 >> 2] = 63422;
 HEAP16[$1159 >> 1] = 758;
 HEAP16[$5884 >> 1] = 228;
 HEAP16[$5885 >> 1] = 3;
 HEAP16[$5886 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1158, $1159);
 $24218 = $1160;
 HEAP32[$24218 >> 2] = 14942430;
 HEAP32[$24218 + 4 >> 2] = 12517915;
 HEAP32[$5887 >> 2] = 63422;
 HEAP16[$1161 >> 1] = 222;
 HEAP16[$5888 >> 1] = 381;
 HEAP16[$5889 >> 1] = 539;
 HEAP16[$5890 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1160, $1161);
 $24222 = $1162;
 HEAP32[$24222 >> 2] = 14942430;
 HEAP32[$24222 + 4 >> 2] = 12517915;
 HEAP32[$5891 >> 2] = 63422;
 HEAP16[$1163 >> 1] = 222;
 HEAP16[$5892 >> 1] = 384;
 HEAP16[$5893 >> 1] = 3;
 HEAP16[$5894 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1162, $1163);
 $24226 = $1164;
 HEAP32[$24226 >> 2] = 14942430;
 HEAP32[$24226 + 4 >> 2] = 12517915;
 HEAP32[$5895 >> 2] = 63422;
 HEAP16[$1165 >> 1] = 531;
 HEAP16[$5896 >> 1] = 384;
 HEAP16[$5897 >> 1] = 230;
 HEAP16[$5898 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1164, $1165);
 $24230 = $1166;
 HEAP32[$24230 >> 2] = 14942430;
 HEAP32[$24230 + 4 >> 2] = 12517915;
 HEAP32[$5899 >> 2] = 63422;
 HEAP16[$1167 >> 1] = 222;
 HEAP16[$5900 >> 1] = 416;
 HEAP16[$5901 >> 1] = 539;
 HEAP16[$5902 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1166, $1167);
 $24234 = $1168;
 HEAP32[$24234 >> 2] = 12910804;
 HEAP32[$24234 + 4 >> 2] = 27656975;
 HEAP32[$5903 >> 2] = 63422;
 HEAP16[$1169 >> 1] = 987;
 HEAP16[$5904 >> 1] = 197;
 HEAP16[$5905 >> 1] = 8;
 HEAP16[$5906 >> 1] = 413;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1168, $1169);
 $24238 = $1170;
 HEAP32[$24238 >> 2] = 12910804;
 HEAP32[$24238 + 4 >> 2] = 27656975;
 HEAP32[$5907 >> 2] = 63422;
 HEAP16[$1171 >> 1] = 212;
 HEAP16[$5908 >> 1] = 610;
 HEAP16[$5909 >> 1] = 783;
 HEAP16[$5910 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1170, $1171);
 $24242 = $1172;
 HEAP32[$24242 >> 2] = 29950174;
 HEAP32[$24242 + 4 >> 2] = 10027547;
 HEAP32[$5911 >> 2] = 63422;
 HEAP16[$1173 >> 1] = 222;
 HEAP16[$5912 >> 1] = 457;
 HEAP16[$5913 >> 1] = 3;
 HEAP16[$5914 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1172, $1173);
 $24246 = $1174;
 HEAP32[$24246 >> 2] = 29950174;
 HEAP32[$24246 + 4 >> 2] = 10027547;
 HEAP32[$5915 >> 2] = 63422;
 HEAP16[$1175 >> 1] = 434;
 HEAP16[$5916 >> 1] = 457;
 HEAP16[$5917 >> 1] = 6;
 HEAP16[$5918 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1174, $1175);
 $24250 = $1176;
 HEAP32[$24250 >> 2] = 29950174;
 HEAP32[$24250 + 4 >> 2] = 10027547;
 HEAP32[$5919 >> 2] = 63422;
 HEAP16[$1177 >> 1] = 758;
 HEAP16[$5920 >> 1] = 457;
 HEAP16[$5921 >> 1] = 3;
 HEAP16[$5922 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1176, $1177);
 $24254 = $1178;
 HEAP32[$24254 >> 2] = 29950174;
 HEAP32[$24254 + 4 >> 2] = 10027547;
 HEAP32[$5923 >> 2] = 63422;
 HEAP16[$1179 >> 1] = 222;
 HEAP16[$5924 >> 1] = 591;
 HEAP16[$5925 >> 1] = 3;
 HEAP16[$5926 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1178, $1179);
 $24258 = $1180;
 HEAP32[$24258 >> 2] = 29950174;
 HEAP32[$24258 + 4 >> 2] = 10027547;
 HEAP32[$5927 >> 2] = 63422;
 HEAP16[$1181 >> 1] = 434;
 HEAP16[$5928 >> 1] = 591;
 HEAP16[$5929 >> 1] = 327;
 HEAP16[$5930 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1180, $1181);
 $24262 = $1182;
 HEAP32[$24262 >> 2] = 28181242;
 HEAP32[$24262 + 4 >> 2] = 9371862;
 HEAP32[$5931 >> 2] = 63422;
 HEAP16[$1183 >> 1] = 762;
 HEAP16[$5932 >> 1] = 430;
 HEAP16[$5933 >> 1] = 214;
 HEAP16[$5934 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1182, $1183);
 $24266 = $1184;
 HEAP32[$24266 >> 2] = 28181242;
 HEAP32[$24266 + 4 >> 2] = 9371862;
 HEAP32[$5935 >> 2] = 63422;
 HEAP16[$1185 >> 1] = 762;
 HEAP16[$5936 >> 1] = 435;
 HEAP16[$5937 >> 1] = 5;
 HEAP16[$5938 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1184, $1185);
 $24270 = $1186;
 HEAP32[$24270 >> 2] = 28181242;
 HEAP32[$24270 + 4 >> 2] = 9371862;
 HEAP32[$5939 >> 2] = 63422;
 HEAP16[$1187 >> 1] = 971;
 HEAP16[$5940 >> 1] = 435;
 HEAP16[$5941 >> 1] = 5;
 HEAP16[$5942 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1186, $1187);
 $24274 = $1188;
 HEAP32[$24274 >> 2] = 28181242;
 HEAP32[$24274 + 4 >> 2] = 9371862;
 HEAP32[$5943 >> 2] = 63422;
 HEAP16[$1189 >> 1] = 762;
 HEAP16[$5944 >> 1] = 451;
 HEAP16[$5945 >> 1] = 214;
 HEAP16[$5946 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1188, $1189);
 $24278 = $1190;
 HEAP32[$24278 >> 2] = 28181242;
 HEAP32[$24278 + 4 >> 2] = 9371862;
 HEAP32[$5947 >> 2] = 63422;
 HEAP16[$1191 >> 1] = 762;
 HEAP16[$5948 >> 1] = 456;
 HEAP16[$5949 >> 1] = 5;
 HEAP16[$5950 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1190, $1191);
 $24282 = $1192;
 HEAP32[$24282 >> 2] = 28181242;
 HEAP32[$24282 + 4 >> 2] = 9371862;
 HEAP32[$5951 >> 2] = 63422;
 HEAP16[$1193 >> 1] = 971;
 HEAP16[$5952 >> 1] = 456;
 HEAP16[$5953 >> 1] = 5;
 HEAP16[$5954 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1192, $1193);
 $24286 = $1194;
 HEAP32[$24286 >> 2] = 28181242;
 HEAP32[$24286 + 4 >> 2] = 9371862;
 HEAP32[$5955 >> 2] = 63422;
 HEAP16[$1195 >> 1] = 762;
 HEAP16[$5956 >> 1] = 472;
 HEAP16[$5957 >> 1] = 214;
 HEAP16[$5958 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1194, $1195);
 $24290 = $1196;
 HEAP32[$24290 >> 2] = 28181242;
 HEAP32[$24290 + 4 >> 2] = 9371862;
 HEAP32[$5959 >> 2] = 63422;
 HEAP16[$1197 >> 1] = 762;
 HEAP16[$5960 >> 1] = 477;
 HEAP16[$5961 >> 1] = 5;
 HEAP16[$5962 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1196, $1197);
 $24294 = $1198;
 HEAP32[$24294 >> 2] = 28181242;
 HEAP32[$24294 + 4 >> 2] = 9371862;
 HEAP32[$5963 >> 2] = 63422;
 HEAP16[$1199 >> 1] = 971;
 HEAP16[$5964 >> 1] = 477;
 HEAP16[$5965 >> 1] = 5;
 HEAP16[$5966 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1198, $1199);
 $24298 = $1200;
 HEAP32[$24298 >> 2] = 28181242;
 HEAP32[$24298 + 4 >> 2] = 9371862;
 HEAP32[$5967 >> 2] = 63422;
 HEAP16[$1201 >> 1] = 762;
 HEAP16[$5968 >> 1] = 493;
 HEAP16[$5969 >> 1] = 214;
 HEAP16[$5970 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1200, $1201);
 $24302 = $1202;
 HEAP32[$24302 >> 2] = 28181242;
 HEAP32[$24302 + 4 >> 2] = 9371862;
 HEAP32[$5971 >> 2] = 63422;
 HEAP16[$1203 >> 1] = 762;
 HEAP16[$5972 >> 1] = 498;
 HEAP16[$5973 >> 1] = 5;
 HEAP16[$5974 >> 1] = 26;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1202, $1203);
 $24306 = $1204;
 HEAP32[$24306 >> 2] = 28181242;
 HEAP32[$24306 + 4 >> 2] = 9371862;
 HEAP32[$5975 >> 2] = 63422;
 HEAP16[$1205 >> 1] = 971;
 HEAP16[$5976 >> 1] = 498;
 HEAP16[$5977 >> 1] = 5;
 HEAP16[$5978 >> 1] = 26;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1204, $1205);
 $24310 = $1206;
 HEAP32[$24310 >> 2] = 28181242;
 HEAP32[$24310 + 4 >> 2] = 9371862;
 HEAP32[$5979 >> 2] = 63422;
 HEAP16[$1207 >> 1] = 762;
 HEAP16[$5980 >> 1] = 524;
 HEAP16[$5981 >> 1] = 214;
 HEAP16[$5982 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1206, $1207);
 $24314 = $1208;
 HEAP32[$24314 >> 2] = 28181242;
 HEAP32[$24314 + 4 >> 2] = 9371862;
 HEAP32[$5983 >> 2] = 63422;
 HEAP16[$1209 >> 1] = 762;
 HEAP16[$5984 >> 1] = 529;
 HEAP16[$5985 >> 1] = 5;
 HEAP16[$5986 >> 1] = 39;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1208, $1209);
 $24318 = $1210;
 HEAP32[$24318 >> 2] = 28181242;
 HEAP32[$24318 + 4 >> 2] = 9371862;
 HEAP32[$5987 >> 2] = 63422;
 HEAP16[$1211 >> 1] = 971;
 HEAP16[$5988 >> 1] = 529;
 HEAP16[$5989 >> 1] = 5;
 HEAP16[$5990 >> 1] = 39;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1210, $1211);
 $24322 = $1212;
 HEAP32[$24322 >> 2] = 28181242;
 HEAP32[$24322 + 4 >> 2] = 9371862;
 HEAP32[$5991 >> 2] = 63422;
 HEAP16[$1213 >> 1] = 762;
 HEAP16[$5992 >> 1] = 568;
 HEAP16[$5993 >> 1] = 214;
 HEAP16[$5994 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1212, $1213);
 $24326 = $1214;
 HEAP32[$24326 >> 2] = 14942430;
 HEAP32[$24326 + 4 >> 2] = 12517915;
 HEAP32[$5995 >> 2] = 63422;
 HEAP16[$1215 >> 1] = 222;
 HEAP16[$5996 >> 1] = 228;
 HEAP16[$5997 >> 1] = 3;
 HEAP16[$5998 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1214, $1215);
 $24330 = $1216;
 HEAP32[$24330 >> 2] = 14942430;
 HEAP32[$24330 + 4 >> 2] = 12517915;
 HEAP32[$5999 >> 2] = 63422;
 HEAP16[$1217 >> 1] = 434;
 HEAP16[$6000 >> 1] = 228;
 HEAP16[$6001 >> 1] = 6;
 HEAP16[$6002 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1216, $1217);
 $24334 = $1218;
 HEAP32[$24334 >> 2] = 14942430;
 HEAP32[$24334 + 4 >> 2] = 12517915;
 HEAP32[$6003 >> 2] = 63422;
 HEAP16[$1219 >> 1] = 758;
 HEAP16[$6004 >> 1] = 228;
 HEAP16[$6005 >> 1] = 3;
 HEAP16[$6006 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1218, $1219);
 $24338 = $1220;
 HEAP32[$24338 >> 2] = 14942430;
 HEAP32[$24338 + 4 >> 2] = 12517915;
 HEAP32[$6007 >> 2] = 63422;
 HEAP16[$1221 >> 1] = 222;
 HEAP16[$6008 >> 1] = 381;
 HEAP16[$6009 >> 1] = 539;
 HEAP16[$6010 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1220, $1221);
 $24342 = $1222;
 HEAP32[$24342 >> 2] = 14942430;
 HEAP32[$24342 + 4 >> 2] = 12517915;
 HEAP32[$6011 >> 2] = 63422;
 HEAP16[$1223 >> 1] = 222;
 HEAP16[$6012 >> 1] = 384;
 HEAP16[$6013 >> 1] = 3;
 HEAP16[$6014 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1222, $1223);
 $24346 = $1224;
 HEAP32[$24346 >> 2] = 14942430;
 HEAP32[$24346 + 4 >> 2] = 12517915;
 HEAP32[$6015 >> 2] = 63422;
 HEAP16[$1225 >> 1] = 531;
 HEAP16[$6016 >> 1] = 384;
 HEAP16[$6017 >> 1] = 230;
 HEAP16[$6018 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1224, $1225);
 $24350 = $1226;
 HEAP32[$24350 >> 2] = 14942430;
 HEAP32[$24350 + 4 >> 2] = 12517915;
 HEAP32[$6019 >> 2] = 63422;
 HEAP16[$1227 >> 1] = 222;
 HEAP16[$6020 >> 1] = 416;
 HEAP16[$6021 >> 1] = 539;
 HEAP16[$6022 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1226, $1227);
 $24354 = $1228;
 HEAP32[$24354 >> 2] = 14942430;
 HEAP32[$24354 + 4 >> 2] = 12517915;
 HEAP32[$6023 >> 2] = 63422;
 HEAP16[$1229 >> 1] = 222;
 HEAP16[$6024 >> 1] = 228;
 HEAP16[$6025 >> 1] = 3;
 HEAP16[$6026 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1228, $1229);
 $24358 = $1230;
 HEAP32[$24358 >> 2] = 14942430;
 HEAP32[$24358 + 4 >> 2] = 12517915;
 HEAP32[$6027 >> 2] = 63422;
 HEAP16[$1231 >> 1] = 434;
 HEAP16[$6028 >> 1] = 228;
 HEAP16[$6029 >> 1] = 6;
 HEAP16[$6030 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1230, $1231);
 $24362 = $1232;
 HEAP32[$24362 >> 2] = 14942430;
 HEAP32[$24362 + 4 >> 2] = 12517915;
 HEAP32[$6031 >> 2] = 63422;
 HEAP16[$1233 >> 1] = 758;
 HEAP16[$6032 >> 1] = 228;
 HEAP16[$6033 >> 1] = 3;
 HEAP16[$6034 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1232, $1233);
 $24366 = $1234;
 HEAP32[$24366 >> 2] = 14942430;
 HEAP32[$24366 + 4 >> 2] = 12517915;
 HEAP32[$6035 >> 2] = 63422;
 HEAP16[$1235 >> 1] = 222;
 HEAP16[$6036 >> 1] = 381;
 HEAP16[$6037 >> 1] = 539;
 HEAP16[$6038 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1234, $1235);
 $24370 = $1236;
 HEAP32[$24370 >> 2] = 14942430;
 HEAP32[$24370 + 4 >> 2] = 12517915;
 HEAP32[$6039 >> 2] = 63422;
 HEAP16[$1237 >> 1] = 222;
 HEAP16[$6040 >> 1] = 384;
 HEAP16[$6041 >> 1] = 3;
 HEAP16[$6042 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1236, $1237);
 $24374 = $1238;
 HEAP32[$24374 >> 2] = 14942430;
 HEAP32[$24374 + 4 >> 2] = 12517915;
 HEAP32[$6043 >> 2] = 63422;
 HEAP16[$1239 >> 1] = 531;
 HEAP16[$6044 >> 1] = 384;
 HEAP16[$6045 >> 1] = 230;
 HEAP16[$6046 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1238, $1239);
 $24378 = $1240;
 HEAP32[$24378 >> 2] = 14942430;
 HEAP32[$24378 + 4 >> 2] = 12517915;
 HEAP32[$6047 >> 2] = 63422;
 HEAP16[$1241 >> 1] = 222;
 HEAP16[$6048 >> 1] = 416;
 HEAP16[$6049 >> 1] = 539;
 HEAP16[$6050 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1240, $1241);
 $24382 = $1242;
 HEAP32[$24382 >> 2] = 14942430;
 HEAP32[$24382 + 4 >> 2] = 12517923;
 HEAP32[$6051 >> 2] = 63422;
 HEAP16[$1243 >> 1] = 222;
 HEAP16[$6052 >> 1] = 228;
 HEAP16[$6053 >> 1] = 3;
 HEAP16[$6054 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1242, $1243);
 $24386 = $1244;
 HEAP32[$24386 >> 2] = 14942430;
 HEAP32[$24386 + 4 >> 2] = 12517923;
 HEAP32[$6055 >> 2] = 63422;
 HEAP16[$1245 >> 1] = 434;
 HEAP16[$6056 >> 1] = 228;
 HEAP16[$6057 >> 1] = 6;
 HEAP16[$6058 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1244, $1245);
 $24390 = $1246;
 HEAP32[$24390 >> 2] = 14942430;
 HEAP32[$24390 + 4 >> 2] = 12517923;
 HEAP32[$6059 >> 2] = 63422;
 HEAP16[$1247 >> 1] = 758;
 HEAP16[$6060 >> 1] = 228;
 HEAP16[$6061 >> 1] = 11;
 HEAP16[$6062 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1246, $1247);
 $24394 = $1248;
 HEAP32[$24394 >> 2] = 14942430;
 HEAP32[$24394 + 4 >> 2] = 12517923;
 HEAP32[$6063 >> 2] = 63422;
 HEAP16[$1249 >> 1] = 222;
 HEAP16[$6064 >> 1] = 381;
 HEAP16[$6065 >> 1] = 547;
 HEAP16[$6066 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1248, $1249);
 $24398 = $1250;
 HEAP32[$24398 >> 2] = 14942430;
 HEAP32[$24398 + 4 >> 2] = 12517923;
 HEAP32[$6067 >> 2] = 63422;
 HEAP16[$1251 >> 1] = 222;
 HEAP16[$6068 >> 1] = 384;
 HEAP16[$6069 >> 1] = 3;
 HEAP16[$6070 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1250, $1251);
 $24402 = $1252;
 HEAP32[$24402 >> 2] = 14942430;
 HEAP32[$24402 + 4 >> 2] = 12517923;
 HEAP32[$6071 >> 2] = 63422;
 HEAP16[$1253 >> 1] = 531;
 HEAP16[$6072 >> 1] = 384;
 HEAP16[$6073 >> 1] = 238;
 HEAP16[$6074 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1252, $1253);
 $24406 = $1254;
 HEAP32[$24406 >> 2] = 14942430;
 HEAP32[$24406 + 4 >> 2] = 12517923;
 HEAP32[$6075 >> 2] = 63422;
 HEAP16[$1255 >> 1] = 222;
 HEAP16[$6076 >> 1] = 416;
 HEAP16[$6077 >> 1] = 547;
 HEAP16[$6078 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1254, $1255);
 $24410 = $1256;
 HEAP32[$24410 >> 2] = 14942430;
 HEAP32[$24410 + 4 >> 2] = 12517923;
 HEAP32[$6079 >> 2] = 63422;
 HEAP16[$1257 >> 1] = 222;
 HEAP16[$6080 >> 1] = 228;
 HEAP16[$6081 >> 1] = 3;
 HEAP16[$6082 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1256, $1257);
 $24414 = $1258;
 HEAP32[$24414 >> 2] = 14942430;
 HEAP32[$24414 + 4 >> 2] = 12517923;
 HEAP32[$6083 >> 2] = 63422;
 HEAP16[$1259 >> 1] = 437;
 HEAP16[$6084 >> 1] = 228;
 HEAP16[$6085 >> 1] = 6;
 HEAP16[$6086 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1258, $1259);
 $24418 = $1260;
 HEAP32[$24418 >> 2] = 14942430;
 HEAP32[$24418 + 4 >> 2] = 12517923;
 HEAP32[$6087 >> 2] = 63422;
 HEAP16[$1261 >> 1] = 766;
 HEAP16[$6088 >> 1] = 228;
 HEAP16[$6089 >> 1] = 3;
 HEAP16[$6090 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1260, $1261);
 $24422 = $1262;
 HEAP32[$24422 >> 2] = 14942430;
 HEAP32[$24422 + 4 >> 2] = 12517923;
 HEAP32[$6091 >> 2] = 63422;
 HEAP16[$1263 >> 1] = 222;
 HEAP16[$6092 >> 1] = 256;
 HEAP16[$6093 >> 1] = 3;
 HEAP16[$6094 >> 1] = 125;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1262, $1263);
 $24426 = $1264;
 HEAP32[$24426 >> 2] = 14942430;
 HEAP32[$24426 + 4 >> 2] = 12517923;
 HEAP32[$6095 >> 2] = 63422;
 HEAP16[$1265 >> 1] = 434;
 HEAP16[$6096 >> 1] = 256;
 HEAP16[$6097 >> 1] = 6;
 HEAP16[$6098 >> 1] = 125;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1264, $1265);
 $24430 = $1266;
 HEAP32[$24430 >> 2] = 14942430;
 HEAP32[$24430 + 4 >> 2] = 12517923;
 HEAP32[$6099 >> 2] = 63422;
 HEAP16[$1267 >> 1] = 758;
 HEAP16[$6100 >> 1] = 256;
 HEAP16[$6101 >> 1] = 11;
 HEAP16[$6102 >> 1] = 125;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1266, $1267);
 $24434 = $1268;
 HEAP32[$24434 >> 2] = 14942430;
 HEAP32[$24434 + 4 >> 2] = 12517923;
 HEAP32[$6103 >> 2] = 63422;
 HEAP16[$1269 >> 1] = 222;
 HEAP16[$6104 >> 1] = 381;
 HEAP16[$6105 >> 1] = 547;
 HEAP16[$6106 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1268, $1269);
 $24438 = $1270;
 HEAP32[$24438 >> 2] = 14942430;
 HEAP32[$24438 + 4 >> 2] = 12517923;
 HEAP32[$6107 >> 2] = 63422;
 HEAP16[$1271 >> 1] = 222;
 HEAP16[$6108 >> 1] = 384;
 HEAP16[$6109 >> 1] = 3;
 HEAP16[$6110 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1270, $1271);
 $24442 = $1272;
 HEAP32[$24442 >> 2] = 14942430;
 HEAP32[$24442 + 4 >> 2] = 12517923;
 HEAP32[$6111 >> 2] = 63422;
 HEAP16[$1273 >> 1] = 531;
 HEAP16[$6112 >> 1] = 384;
 HEAP16[$6113 >> 1] = 238;
 HEAP16[$6114 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1272, $1273);
 $24446 = $1274;
 HEAP32[$24446 >> 2] = 14942430;
 HEAP32[$24446 + 4 >> 2] = 12517923;
 HEAP32[$6115 >> 2] = 63422;
 HEAP16[$1275 >> 1] = 222;
 HEAP16[$6116 >> 1] = 416;
 HEAP16[$6117 >> 1] = 547;
 HEAP16[$6118 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1274, $1275);
 $24450 = $1276;
 HEAP32[$24450 >> 2] = 14942430;
 HEAP32[$24450 + 4 >> 2] = 12517923;
 HEAP32[$6119 >> 2] = 63422;
 HEAP16[$1277 >> 1] = 222;
 HEAP16[$6120 >> 1] = 228;
 HEAP16[$6121 >> 1] = 3;
 HEAP16[$6122 >> 1] = 56;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1276, $1277);
 $24454 = $1278;
 HEAP32[$24454 >> 2] = 14942430;
 HEAP32[$24454 + 4 >> 2] = 12517923;
 HEAP32[$6123 >> 2] = 63422;
 HEAP16[$1279 >> 1] = 437;
 HEAP16[$6124 >> 1] = 228;
 HEAP16[$6125 >> 1] = 6;
 HEAP16[$6126 >> 1] = 56;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1278, $1279);
 $24458 = $1280;
 HEAP32[$24458 >> 2] = 14942430;
 HEAP32[$24458 + 4 >> 2] = 12517923;
 HEAP32[$6127 >> 2] = 63422;
 HEAP16[$1281 >> 1] = 766;
 HEAP16[$6128 >> 1] = 228;
 HEAP16[$6129 >> 1] = 3;
 HEAP16[$6130 >> 1] = 56;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1280, $1281);
 $24462 = $1282;
 HEAP32[$24462 >> 2] = 14942430;
 HEAP32[$24462 + 4 >> 2] = 12517923;
 HEAP32[$6131 >> 2] = 63422;
 HEAP16[$1283 >> 1] = 222;
 HEAP16[$6132 >> 1] = 284;
 HEAP16[$6133 >> 1] = 3;
 HEAP16[$6134 >> 1] = 97;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1282, $1283);
 $24466 = $1284;
 HEAP32[$24466 >> 2] = 14942430;
 HEAP32[$24466 + 4 >> 2] = 12517923;
 HEAP32[$6135 >> 2] = 63422;
 HEAP16[$1285 >> 1] = 434;
 HEAP16[$6136 >> 1] = 284;
 HEAP16[$6137 >> 1] = 6;
 HEAP16[$6138 >> 1] = 97;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1284, $1285);
 $24470 = $1286;
 HEAP32[$24470 >> 2] = 14942430;
 HEAP32[$24470 + 4 >> 2] = 12517923;
 HEAP32[$6139 >> 2] = 63422;
 HEAP16[$1287 >> 1] = 758;
 HEAP16[$6140 >> 1] = 284;
 HEAP16[$6141 >> 1] = 11;
 HEAP16[$6142 >> 1] = 97;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1286, $1287);
 $24474 = $1288;
 HEAP32[$24474 >> 2] = 14942430;
 HEAP32[$24474 + 4 >> 2] = 12517923;
 HEAP32[$6143 >> 2] = 63422;
 HEAP16[$1289 >> 1] = 222;
 HEAP16[$6144 >> 1] = 381;
 HEAP16[$6145 >> 1] = 547;
 HEAP16[$6146 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1288, $1289);
 $24478 = $1290;
 HEAP32[$24478 >> 2] = 14942430;
 HEAP32[$24478 + 4 >> 2] = 12517923;
 HEAP32[$6147 >> 2] = 63422;
 HEAP16[$1291 >> 1] = 222;
 HEAP16[$6148 >> 1] = 384;
 HEAP16[$6149 >> 1] = 3;
 HEAP16[$6150 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1290, $1291);
 $24482 = $1292;
 HEAP32[$24482 >> 2] = 14942430;
 HEAP32[$24482 + 4 >> 2] = 12517923;
 HEAP32[$6151 >> 2] = 63422;
 HEAP16[$1293 >> 1] = 531;
 HEAP16[$6152 >> 1] = 384;
 HEAP16[$6153 >> 1] = 238;
 HEAP16[$6154 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1292, $1293);
 $24486 = $1294;
 HEAP32[$24486 >> 2] = 14942430;
 HEAP32[$24486 + 4 >> 2] = 12517923;
 HEAP32[$6155 >> 2] = 63422;
 HEAP16[$1295 >> 1] = 222;
 HEAP16[$6156 >> 1] = 416;
 HEAP16[$6157 >> 1] = 547;
 HEAP16[$6158 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1294, $1295);
 $24490 = $1296;
 HEAP32[$24490 >> 2] = 14942430;
 HEAP32[$24490 + 4 >> 2] = 12517923;
 HEAP32[$6159 >> 2] = 63422;
 HEAP16[$1297 >> 1] = 222;
 HEAP16[$6160 >> 1] = 228;
 HEAP16[$6161 >> 1] = 3;
 HEAP16[$6162 >> 1] = 84;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1296, $1297);
 $24494 = $1298;
 HEAP32[$24494 >> 2] = 14942430;
 HEAP32[$24494 + 4 >> 2] = 12517923;
 HEAP32[$6163 >> 2] = 63422;
 HEAP16[$1299 >> 1] = 437;
 HEAP16[$6164 >> 1] = 228;
 HEAP16[$6165 >> 1] = 6;
 HEAP16[$6166 >> 1] = 84;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1298, $1299);
 $24498 = $1300;
 HEAP32[$24498 >> 2] = 14942430;
 HEAP32[$24498 + 4 >> 2] = 12517923;
 HEAP32[$6167 >> 2] = 63422;
 HEAP16[$1301 >> 1] = 766;
 HEAP16[$6168 >> 1] = 228;
 HEAP16[$6169 >> 1] = 3;
 HEAP16[$6170 >> 1] = 84;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1300, $1301);
 $24502 = $1302;
 HEAP32[$24502 >> 2] = 14942430;
 HEAP32[$24502 + 4 >> 2] = 12517923;
 HEAP32[$6171 >> 2] = 63422;
 HEAP16[$1303 >> 1] = 222;
 HEAP16[$6172 >> 1] = 312;
 HEAP16[$6173 >> 1] = 3;
 HEAP16[$6174 >> 1] = 69;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1302, $1303);
 $24506 = $1304;
 HEAP32[$24506 >> 2] = 14942430;
 HEAP32[$24506 + 4 >> 2] = 12517923;
 HEAP32[$6175 >> 2] = 63422;
 HEAP16[$1305 >> 1] = 434;
 HEAP16[$6176 >> 1] = 312;
 HEAP16[$6177 >> 1] = 6;
 HEAP16[$6178 >> 1] = 69;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1304, $1305);
 $24510 = $1306;
 HEAP32[$24510 >> 2] = 14942430;
 HEAP32[$24510 + 4 >> 2] = 12517923;
 HEAP32[$6179 >> 2] = 63422;
 HEAP16[$1307 >> 1] = 758;
 HEAP16[$6180 >> 1] = 312;
 HEAP16[$6181 >> 1] = 11;
 HEAP16[$6182 >> 1] = 69;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1306, $1307);
 $24514 = $1308;
 HEAP32[$24514 >> 2] = 14942430;
 HEAP32[$24514 + 4 >> 2] = 12517923;
 HEAP32[$6183 >> 2] = 63422;
 HEAP16[$1309 >> 1] = 222;
 HEAP16[$6184 >> 1] = 381;
 HEAP16[$6185 >> 1] = 547;
 HEAP16[$6186 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1308, $1309);
 $24518 = $1310;
 HEAP32[$24518 >> 2] = 14942430;
 HEAP32[$24518 + 4 >> 2] = 12517923;
 HEAP32[$6187 >> 2] = 63422;
 HEAP16[$1311 >> 1] = 222;
 HEAP16[$6188 >> 1] = 384;
 HEAP16[$6189 >> 1] = 3;
 HEAP16[$6190 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1310, $1311);
 $24522 = $1312;
 HEAP32[$24522 >> 2] = 14942430;
 HEAP32[$24522 + 4 >> 2] = 12517923;
 HEAP32[$6191 >> 2] = 63422;
 HEAP16[$1313 >> 1] = 531;
 HEAP16[$6192 >> 1] = 384;
 HEAP16[$6193 >> 1] = 238;
 HEAP16[$6194 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1312, $1313);
 $24526 = $1314;
 HEAP32[$24526 >> 2] = 14942430;
 HEAP32[$24526 + 4 >> 2] = 12517923;
 HEAP32[$6195 >> 2] = 63422;
 HEAP16[$1315 >> 1] = 222;
 HEAP16[$6196 >> 1] = 416;
 HEAP16[$6197 >> 1] = 547;
 HEAP16[$6198 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1314, $1315);
 $24530 = $1316;
 HEAP32[$24530 >> 2] = 14942430;
 HEAP32[$24530 + 4 >> 2] = 12517923;
 HEAP32[$6199 >> 2] = 63422;
 HEAP16[$1317 >> 1] = 222;
 HEAP16[$6200 >> 1] = 228;
 HEAP16[$6201 >> 1] = 3;
 HEAP16[$6202 >> 1] = 125;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1316, $1317);
 $24534 = $1318;
 HEAP32[$24534 >> 2] = 14942430;
 HEAP32[$24534 + 4 >> 2] = 12517923;
 HEAP32[$6203 >> 2] = 63422;
 HEAP16[$1319 >> 1] = 437;
 HEAP16[$6204 >> 1] = 228;
 HEAP16[$6205 >> 1] = 6;
 HEAP16[$6206 >> 1] = 125;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1318, $1319);
 $24538 = $1320;
 HEAP32[$24538 >> 2] = 14942430;
 HEAP32[$24538 + 4 >> 2] = 12517923;
 HEAP32[$6207 >> 2] = 63422;
 HEAP16[$1321 >> 1] = 766;
 HEAP16[$6208 >> 1] = 228;
 HEAP16[$6209 >> 1] = 3;
 HEAP16[$6210 >> 1] = 125;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1320, $1321);
 $24542 = $1322;
 HEAP32[$24542 >> 2] = 14942430;
 HEAP32[$24542 + 4 >> 2] = 12517923;
 HEAP32[$6211 >> 2] = 63422;
 HEAP16[$1323 >> 1] = 222;
 HEAP16[$6212 >> 1] = 353;
 HEAP16[$6213 >> 1] = 3;
 HEAP16[$6214 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1322, $1323);
 $24546 = $1324;
 HEAP32[$24546 >> 2] = 14942430;
 HEAP32[$24546 + 4 >> 2] = 12517923;
 HEAP32[$6215 >> 2] = 63422;
 HEAP16[$1325 >> 1] = 434;
 HEAP16[$6216 >> 1] = 353;
 HEAP16[$6217 >> 1] = 6;
 HEAP16[$6218 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1324, $1325);
 $24550 = $1326;
 HEAP32[$24550 >> 2] = 14942430;
 HEAP32[$24550 + 4 >> 2] = 12517923;
 HEAP32[$6219 >> 2] = 63422;
 HEAP16[$1327 >> 1] = 758;
 HEAP16[$6220 >> 1] = 353;
 HEAP16[$6221 >> 1] = 11;
 HEAP16[$6222 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1326, $1327);
 $24554 = $1328;
 HEAP32[$24554 >> 2] = 14942430;
 HEAP32[$24554 + 4 >> 2] = 12517923;
 HEAP32[$6223 >> 2] = 63422;
 HEAP16[$1329 >> 1] = 222;
 HEAP16[$6224 >> 1] = 381;
 HEAP16[$6225 >> 1] = 547;
 HEAP16[$6226 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1328, $1329);
 $24558 = $1330;
 HEAP32[$24558 >> 2] = 14942430;
 HEAP32[$24558 + 4 >> 2] = 12517923;
 HEAP32[$6227 >> 2] = 63422;
 HEAP16[$1331 >> 1] = 222;
 HEAP16[$6228 >> 1] = 384;
 HEAP16[$6229 >> 1] = 3;
 HEAP16[$6230 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1330, $1331);
 $24562 = $1332;
 HEAP32[$24562 >> 2] = 14942430;
 HEAP32[$24562 + 4 >> 2] = 12517923;
 HEAP32[$6231 >> 2] = 63422;
 HEAP16[$1333 >> 1] = 531;
 HEAP16[$6232 >> 1] = 384;
 HEAP16[$6233 >> 1] = 238;
 HEAP16[$6234 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1332, $1333);
 $24566 = $1334;
 HEAP32[$24566 >> 2] = 14942430;
 HEAP32[$24566 + 4 >> 2] = 12517923;
 HEAP32[$6235 >> 2] = 63422;
 HEAP16[$1335 >> 1] = 222;
 HEAP16[$6236 >> 1] = 416;
 HEAP16[$6237 >> 1] = 547;
 HEAP16[$6238 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1334, $1335);
 $24570 = $1336;
 HEAP32[$24570 >> 2] = 14942430;
 HEAP32[$24570 + 4 >> 2] = 12517923;
 HEAP32[$6239 >> 2] = 63422;
 HEAP16[$1337 >> 1] = 222;
 HEAP16[$6240 >> 1] = 228;
 HEAP16[$6241 >> 1] = 3;
 HEAP16[$6242 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1336, $1337);
 $24574 = $1338;
 HEAP32[$24574 >> 2] = 14942430;
 HEAP32[$24574 + 4 >> 2] = 12517923;
 HEAP32[$6243 >> 2] = 63422;
 HEAP16[$1339 >> 1] = 437;
 HEAP16[$6244 >> 1] = 228;
 HEAP16[$6245 >> 1] = 6;
 HEAP16[$6246 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1338, $1339);
 $24578 = $1340;
 HEAP32[$24578 >> 2] = 14942430;
 HEAP32[$24578 + 4 >> 2] = 12517923;
 HEAP32[$6247 >> 2] = 63422;
 HEAP16[$1341 >> 1] = 766;
 HEAP16[$6248 >> 1] = 228;
 HEAP16[$6249 >> 1] = 3;
 HEAP16[$6250 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1340, $1341);
 $24582 = $1342;
 HEAP32[$24582 >> 2] = 14942430;
 HEAP32[$24582 + 4 >> 2] = 12517923;
 HEAP32[$6251 >> 2] = 63422;
 HEAP16[$1343 >> 1] = 222;
 HEAP16[$6252 >> 1] = 381;
 HEAP16[$6253 >> 1] = 547;
 HEAP16[$6254 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1342, $1343);
 $24586 = $1344;
 HEAP32[$24586 >> 2] = 14942430;
 HEAP32[$24586 + 4 >> 2] = 12517923;
 HEAP32[$6255 >> 2] = 63422;
 HEAP16[$1345 >> 1] = 222;
 HEAP16[$6256 >> 1] = 384;
 HEAP16[$6257 >> 1] = 3;
 HEAP16[$6258 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1344, $1345);
 $24590 = $1346;
 HEAP32[$24590 >> 2] = 14942430;
 HEAP32[$24590 + 4 >> 2] = 12517923;
 HEAP32[$6259 >> 2] = 63422;
 HEAP16[$1347 >> 1] = 531;
 HEAP16[$6260 >> 1] = 384;
 HEAP16[$6261 >> 1] = 238;
 HEAP16[$6262 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1346, $1347);
 $24594 = $1348;
 HEAP32[$24594 >> 2] = 14942430;
 HEAP32[$24594 + 4 >> 2] = 12517923;
 HEAP32[$6263 >> 2] = 63422;
 HEAP16[$1349 >> 1] = 222;
 HEAP16[$6264 >> 1] = 416;
 HEAP16[$6265 >> 1] = 547;
 HEAP16[$6266 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1348, $1349);
 $24598 = $1350;
 HEAP32[$24598 >> 2] = 29950174;
 HEAP32[$24598 + 4 >> 2] = 10027547;
 HEAP32[$6267 >> 2] = 63422;
 HEAP16[$1351 >> 1] = 222;
 HEAP16[$6268 >> 1] = 457;
 HEAP16[$6269 >> 1] = 3;
 HEAP16[$6270 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1350, $1351);
 $24602 = $1352;
 HEAP32[$24602 >> 2] = 29950174;
 HEAP32[$24602 + 4 >> 2] = 10027547;
 HEAP32[$6271 >> 2] = 63422;
 HEAP16[$1353 >> 1] = 434;
 HEAP16[$6272 >> 1] = 457;
 HEAP16[$6273 >> 1] = 6;
 HEAP16[$6274 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1352, $1353);
 $24606 = $1354;
 HEAP32[$24606 >> 2] = 29950174;
 HEAP32[$24606 + 4 >> 2] = 10027547;
 HEAP32[$6275 >> 2] = 63422;
 HEAP16[$1355 >> 1] = 758;
 HEAP16[$6276 >> 1] = 457;
 HEAP16[$6277 >> 1] = 3;
 HEAP16[$6278 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1354, $1355);
 $24610 = $1356;
 HEAP32[$24610 >> 2] = 29950174;
 HEAP32[$24610 + 4 >> 2] = 10027547;
 HEAP32[$6279 >> 2] = 63422;
 HEAP16[$1357 >> 1] = 222;
 HEAP16[$6280 >> 1] = 591;
 HEAP16[$6281 >> 1] = 3;
 HEAP16[$6282 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1356, $1357);
 $24614 = $1358;
 HEAP32[$24614 >> 2] = 29950174;
 HEAP32[$24614 + 4 >> 2] = 10027547;
 HEAP32[$6283 >> 2] = 63422;
 HEAP16[$1359 >> 1] = 434;
 HEAP16[$6284 >> 1] = 591;
 HEAP16[$6285 >> 1] = 327;
 HEAP16[$6286 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1358, $1359);
 $24618 = $1360;
 HEAP32[$24618 >> 2] = 28181242;
 HEAP32[$24618 + 4 >> 2] = 9371862;
 HEAP32[$6287 >> 2] = 63422;
 HEAP16[$1361 >> 1] = 762;
 HEAP16[$6288 >> 1] = 430;
 HEAP16[$6289 >> 1] = 214;
 HEAP16[$6290 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1360, $1361);
 $24622 = $1362;
 HEAP32[$24622 >> 2] = 28181242;
 HEAP32[$24622 + 4 >> 2] = 9371862;
 HEAP32[$6291 >> 2] = 63422;
 HEAP16[$1363 >> 1] = 762;
 HEAP16[$6292 >> 1] = 435;
 HEAP16[$6293 >> 1] = 5;
 HEAP16[$6294 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1362, $1363);
 $24626 = $1364;
 HEAP32[$24626 >> 2] = 28181242;
 HEAP32[$24626 + 4 >> 2] = 9371862;
 HEAP32[$6295 >> 2] = 63422;
 HEAP16[$1365 >> 1] = 971;
 HEAP16[$6296 >> 1] = 435;
 HEAP16[$6297 >> 1] = 5;
 HEAP16[$6298 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1364, $1365);
 $24630 = $1366;
 HEAP32[$24630 >> 2] = 28181242;
 HEAP32[$24630 + 4 >> 2] = 9371862;
 HEAP32[$6299 >> 2] = 63422;
 HEAP16[$1367 >> 1] = 762;
 HEAP16[$6300 >> 1] = 451;
 HEAP16[$6301 >> 1] = 214;
 HEAP16[$6302 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1366, $1367);
 $24634 = $1368;
 HEAP32[$24634 >> 2] = 28181242;
 HEAP32[$24634 + 4 >> 2] = 9371862;
 HEAP32[$6303 >> 2] = 63422;
 HEAP16[$1369 >> 1] = 762;
 HEAP16[$6304 >> 1] = 456;
 HEAP16[$6305 >> 1] = 5;
 HEAP16[$6306 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1368, $1369);
 $24638 = $1370;
 HEAP32[$24638 >> 2] = 28181242;
 HEAP32[$24638 + 4 >> 2] = 9371862;
 HEAP32[$6307 >> 2] = 63422;
 HEAP16[$1371 >> 1] = 971;
 HEAP16[$6308 >> 1] = 456;
 HEAP16[$6309 >> 1] = 5;
 HEAP16[$6310 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1370, $1371);
 $24642 = $1372;
 HEAP32[$24642 >> 2] = 28181242;
 HEAP32[$24642 + 4 >> 2] = 9371862;
 HEAP32[$6311 >> 2] = 63422;
 HEAP16[$1373 >> 1] = 762;
 HEAP16[$6312 >> 1] = 472;
 HEAP16[$6313 >> 1] = 214;
 HEAP16[$6314 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1372, $1373);
 $24646 = $1374;
 HEAP32[$24646 >> 2] = 28181242;
 HEAP32[$24646 + 4 >> 2] = 9371862;
 HEAP32[$6315 >> 2] = 63422;
 HEAP16[$1375 >> 1] = 762;
 HEAP16[$6316 >> 1] = 477;
 HEAP16[$6317 >> 1] = 5;
 HEAP16[$6318 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1374, $1375);
 $24650 = $1376;
 HEAP32[$24650 >> 2] = 28181242;
 HEAP32[$24650 + 4 >> 2] = 9371862;
 HEAP32[$6319 >> 2] = 63422;
 HEAP16[$1377 >> 1] = 971;
 HEAP16[$6320 >> 1] = 477;
 HEAP16[$6321 >> 1] = 5;
 HEAP16[$6322 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1376, $1377);
 $24654 = $1378;
 HEAP32[$24654 >> 2] = 28181242;
 HEAP32[$24654 + 4 >> 2] = 9371862;
 HEAP32[$6323 >> 2] = 63422;
 HEAP16[$1379 >> 1] = 762;
 HEAP16[$6324 >> 1] = 493;
 HEAP16[$6325 >> 1] = 214;
 HEAP16[$6326 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1378, $1379);
 $24658 = $1380;
 HEAP32[$24658 >> 2] = 28181242;
 HEAP32[$24658 + 4 >> 2] = 9371862;
 HEAP32[$6327 >> 2] = 63422;
 HEAP16[$1381 >> 1] = 762;
 HEAP16[$6328 >> 1] = 498;
 HEAP16[$6329 >> 1] = 5;
 HEAP16[$6330 >> 1] = 26;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1380, $1381);
 $24662 = $1382;
 HEAP32[$24662 >> 2] = 28181242;
 HEAP32[$24662 + 4 >> 2] = 9371862;
 HEAP32[$6331 >> 2] = 63422;
 HEAP16[$1383 >> 1] = 971;
 HEAP16[$6332 >> 1] = 498;
 HEAP16[$6333 >> 1] = 5;
 HEAP16[$6334 >> 1] = 26;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1382, $1383);
 $24666 = $1384;
 HEAP32[$24666 >> 2] = 28181242;
 HEAP32[$24666 + 4 >> 2] = 9371862;
 HEAP32[$6335 >> 2] = 63422;
 HEAP16[$1385 >> 1] = 762;
 HEAP16[$6336 >> 1] = 524;
 HEAP16[$6337 >> 1] = 214;
 HEAP16[$6338 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1384, $1385);
 $24670 = $1386;
 HEAP32[$24670 >> 2] = 28181242;
 HEAP32[$24670 + 4 >> 2] = 9371862;
 HEAP32[$6339 >> 2] = 63422;
 HEAP16[$1387 >> 1] = 762;
 HEAP16[$6340 >> 1] = 529;
 HEAP16[$6341 >> 1] = 5;
 HEAP16[$6342 >> 1] = 39;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1386, $1387);
 $24674 = $1388;
 HEAP32[$24674 >> 2] = 28181242;
 HEAP32[$24674 + 4 >> 2] = 9371862;
 HEAP32[$6343 >> 2] = 63422;
 HEAP16[$1389 >> 1] = 971;
 HEAP16[$6344 >> 1] = 529;
 HEAP16[$6345 >> 1] = 5;
 HEAP16[$6346 >> 1] = 39;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1388, $1389);
 $24678 = $1390;
 HEAP32[$24678 >> 2] = 28181242;
 HEAP32[$24678 + 4 >> 2] = 9371862;
 HEAP32[$6347 >> 2] = 63422;
 HEAP16[$1391 >> 1] = 762;
 HEAP16[$6348 >> 1] = 568;
 HEAP16[$6349 >> 1] = 214;
 HEAP16[$6350 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1390, $1391);
 $24682 = $1392;
 HEAP32[$24682 >> 2] = 14942430;
 HEAP32[$24682 + 4 >> 2] = 12517923;
 HEAP32[$6351 >> 2] = 63422;
 HEAP16[$1393 >> 1] = 222;
 HEAP16[$6352 >> 1] = 228;
 HEAP16[$6353 >> 1] = 3;
 HEAP16[$6354 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1392, $1393);
 $24686 = $1394;
 HEAP32[$24686 >> 2] = 14942430;
 HEAP32[$24686 + 4 >> 2] = 12517923;
 HEAP32[$6355 >> 2] = 63422;
 HEAP16[$1395 >> 1] = 437;
 HEAP16[$6356 >> 1] = 228;
 HEAP16[$6357 >> 1] = 6;
 HEAP16[$6358 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1394, $1395);
 $24690 = $1396;
 HEAP32[$24690 >> 2] = 14942430;
 HEAP32[$24690 + 4 >> 2] = 12517923;
 HEAP32[$6359 >> 2] = 63422;
 HEAP16[$1397 >> 1] = 766;
 HEAP16[$6360 >> 1] = 228;
 HEAP16[$6361 >> 1] = 3;
 HEAP16[$6362 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1396, $1397);
 $24694 = $1398;
 HEAP32[$24694 >> 2] = 14942430;
 HEAP32[$24694 + 4 >> 2] = 12517923;
 HEAP32[$6363 >> 2] = 63422;
 HEAP16[$1399 >> 1] = 222;
 HEAP16[$6364 >> 1] = 381;
 HEAP16[$6365 >> 1] = 547;
 HEAP16[$6366 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1398, $1399);
 $24698 = $1400;
 HEAP32[$24698 >> 2] = 14942430;
 HEAP32[$24698 + 4 >> 2] = 12517923;
 HEAP32[$6367 >> 2] = 63422;
 HEAP16[$1401 >> 1] = 222;
 HEAP16[$6368 >> 1] = 384;
 HEAP16[$6369 >> 1] = 3;
 HEAP16[$6370 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1400, $1401);
 $24702 = $1402;
 HEAP32[$24702 >> 2] = 14942430;
 HEAP32[$24702 + 4 >> 2] = 12517923;
 HEAP32[$6371 >> 2] = 63422;
 HEAP16[$1403 >> 1] = 531;
 HEAP16[$6372 >> 1] = 384;
 HEAP16[$6373 >> 1] = 238;
 HEAP16[$6374 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1402, $1403);
 $24706 = $1404;
 HEAP32[$24706 >> 2] = 14942430;
 HEAP32[$24706 + 4 >> 2] = 12517923;
 HEAP32[$6375 >> 2] = 63422;
 HEAP16[$1405 >> 1] = 222;
 HEAP16[$6376 >> 1] = 416;
 HEAP16[$6377 >> 1] = 547;
 HEAP16[$6378 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1404, $1405);
 $24710 = $1406;
 HEAP32[$24710 >> 2] = 28181250;
 HEAP32[$24710 + 4 >> 2] = 9371862;
 HEAP32[$6379 >> 2] = 63422;
 HEAP16[$1407 >> 1] = 770;
 HEAP16[$6380 >> 1] = 430;
 HEAP16[$6381 >> 1] = 214;
 HEAP16[$6382 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1406, $1407);
 $24714 = $1408;
 HEAP32[$24714 >> 2] = 28181250;
 HEAP32[$24714 + 4 >> 2] = 9371862;
 HEAP32[$6383 >> 2] = 63422;
 HEAP16[$1409 >> 1] = 770;
 HEAP16[$6384 >> 1] = 435;
 HEAP16[$6385 >> 1] = 5;
 HEAP16[$6386 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1408, $1409);
 $24718 = $1410;
 HEAP32[$24718 >> 2] = 28181250;
 HEAP32[$24718 + 4 >> 2] = 9371862;
 HEAP32[$6387 >> 2] = 63422;
 HEAP16[$1411 >> 1] = 979;
 HEAP16[$6388 >> 1] = 435;
 HEAP16[$6389 >> 1] = 5;
 HEAP16[$6390 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1410, $1411);
 $24722 = $1412;
 HEAP32[$24722 >> 2] = 28181250;
 HEAP32[$24722 + 4 >> 2] = 9371862;
 HEAP32[$6391 >> 2] = 63422;
 HEAP16[$1413 >> 1] = 770;
 HEAP16[$6392 >> 1] = 451;
 HEAP16[$6393 >> 1] = 214;
 HEAP16[$6394 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1412, $1413);
 $24726 = $1414;
 HEAP32[$24726 >> 2] = 28181250;
 HEAP32[$24726 + 4 >> 2] = 9371862;
 HEAP32[$6395 >> 2] = 63422;
 HEAP16[$1415 >> 1] = 770;
 HEAP16[$6396 >> 1] = 456;
 HEAP16[$6397 >> 1] = 5;
 HEAP16[$6398 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1414, $1415);
 $24730 = $1416;
 HEAP32[$24730 >> 2] = 28181250;
 HEAP32[$24730 + 4 >> 2] = 9371862;
 HEAP32[$6399 >> 2] = 63422;
 HEAP16[$1417 >> 1] = 979;
 HEAP16[$6400 >> 1] = 456;
 HEAP16[$6401 >> 1] = 5;
 HEAP16[$6402 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1416, $1417);
 $24734 = $1418;
 HEAP32[$24734 >> 2] = 28181250;
 HEAP32[$24734 + 4 >> 2] = 9371862;
 HEAP32[$6403 >> 2] = 63422;
 HEAP16[$1419 >> 1] = 770;
 HEAP16[$6404 >> 1] = 472;
 HEAP16[$6405 >> 1] = 214;
 HEAP16[$6406 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1418, $1419);
 $24738 = $1420;
 HEAP32[$24738 >> 2] = 28181250;
 HEAP32[$24738 + 4 >> 2] = 9371862;
 HEAP32[$6407 >> 2] = 63422;
 HEAP16[$1421 >> 1] = 770;
 HEAP16[$6408 >> 1] = 477;
 HEAP16[$6409 >> 1] = 5;
 HEAP16[$6410 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1420, $1421);
 $24742 = $1422;
 HEAP32[$24742 >> 2] = 28181250;
 HEAP32[$24742 + 4 >> 2] = 9371862;
 HEAP32[$6411 >> 2] = 63422;
 HEAP16[$1423 >> 1] = 979;
 HEAP16[$6412 >> 1] = 477;
 HEAP16[$6413 >> 1] = 5;
 HEAP16[$6414 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1422, $1423);
 $24746 = $1424;
 HEAP32[$24746 >> 2] = 28181250;
 HEAP32[$24746 + 4 >> 2] = 9371862;
 HEAP32[$6415 >> 2] = 63422;
 HEAP16[$1425 >> 1] = 770;
 HEAP16[$6416 >> 1] = 493;
 HEAP16[$6417 >> 1] = 214;
 HEAP16[$6418 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1424, $1425);
 $24750 = $1426;
 HEAP32[$24750 >> 2] = 28181250;
 HEAP32[$24750 + 4 >> 2] = 9371862;
 HEAP32[$6419 >> 2] = 63422;
 HEAP16[$1427 >> 1] = 770;
 HEAP16[$6420 >> 1] = 498;
 HEAP16[$6421 >> 1] = 5;
 HEAP16[$6422 >> 1] = 26;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1426, $1427);
 $24754 = $1428;
 HEAP32[$24754 >> 2] = 28181250;
 HEAP32[$24754 + 4 >> 2] = 9371862;
 HEAP32[$6423 >> 2] = 63422;
 HEAP16[$1429 >> 1] = 979;
 HEAP16[$6424 >> 1] = 498;
 HEAP16[$6425 >> 1] = 5;
 HEAP16[$6426 >> 1] = 26;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1428, $1429);
 $24758 = $1430;
 HEAP32[$24758 >> 2] = 28181250;
 HEAP32[$24758 + 4 >> 2] = 9371862;
 HEAP32[$6427 >> 2] = 63422;
 HEAP16[$1431 >> 1] = 770;
 HEAP16[$6428 >> 1] = 524;
 HEAP16[$6429 >> 1] = 214;
 HEAP16[$6430 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1430, $1431);
 $24762 = $1432;
 HEAP32[$24762 >> 2] = 28181250;
 HEAP32[$24762 + 4 >> 2] = 9371862;
 HEAP32[$6431 >> 2] = 63422;
 HEAP16[$1433 >> 1] = 770;
 HEAP16[$6432 >> 1] = 529;
 HEAP16[$6433 >> 1] = 5;
 HEAP16[$6434 >> 1] = 39;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1432, $1433);
 $24766 = $1434;
 HEAP32[$24766 >> 2] = 28181250;
 HEAP32[$24766 + 4 >> 2] = 9371862;
 HEAP32[$6435 >> 2] = 63422;
 HEAP16[$1435 >> 1] = 979;
 HEAP16[$6436 >> 1] = 529;
 HEAP16[$6437 >> 1] = 5;
 HEAP16[$6438 >> 1] = 39;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1434, $1435);
 $24770 = $1436;
 HEAP32[$24770 >> 2] = 28181250;
 HEAP32[$24770 + 4 >> 2] = 9371862;
 HEAP32[$6439 >> 2] = 63422;
 HEAP16[$1437 >> 1] = 770;
 HEAP16[$6440 >> 1] = 568;
 HEAP16[$6441 >> 1] = 214;
 HEAP16[$6442 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1436, $1437);
 $24774 = $1438;
 HEAP32[$24774 >> 2] = 29950174;
 HEAP32[$24774 + 4 >> 2] = 10027555;
 HEAP32[$6443 >> 2] = 63422;
 HEAP16[$1439 >> 1] = 222;
 HEAP16[$6444 >> 1] = 457;
 HEAP16[$6445 >> 1] = 3;
 HEAP16[$6446 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1438, $1439);
 $24778 = $1440;
 HEAP32[$24778 >> 2] = 29950174;
 HEAP32[$24778 + 4 >> 2] = 10027555;
 HEAP32[$6447 >> 2] = 63422;
 HEAP16[$1441 >> 1] = 434;
 HEAP16[$6448 >> 1] = 457;
 HEAP16[$6449 >> 1] = 6;
 HEAP16[$6450 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1440, $1441);
 $24782 = $1442;
 HEAP32[$24782 >> 2] = 29950174;
 HEAP32[$24782 + 4 >> 2] = 10027555;
 HEAP32[$6451 >> 2] = 63422;
 HEAP16[$1443 >> 1] = 758;
 HEAP16[$6452 >> 1] = 457;
 HEAP16[$6453 >> 1] = 11;
 HEAP16[$6454 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1442, $1443);
 $24786 = $1444;
 HEAP32[$24786 >> 2] = 29950174;
 HEAP32[$24786 + 4 >> 2] = 10027555;
 HEAP32[$6455 >> 2] = 63422;
 HEAP16[$1445 >> 1] = 222;
 HEAP16[$6456 >> 1] = 591;
 HEAP16[$6457 >> 1] = 3;
 HEAP16[$6458 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1444, $1445);
 $24790 = $1446;
 HEAP32[$24790 >> 2] = 29950174;
 HEAP32[$24790 + 4 >> 2] = 10027555;
 HEAP32[$6459 >> 2] = 63422;
 HEAP16[$1447 >> 1] = 434;
 HEAP16[$6460 >> 1] = 591;
 HEAP16[$6461 >> 1] = 335;
 HEAP16[$6462 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1446, $1447);
 $24794 = $1448;
 HEAP32[$24794 >> 2] = 29950174;
 HEAP32[$24794 + 4 >> 2] = 10027555;
 HEAP32[$6463 >> 2] = 63422;
 HEAP16[$1449 >> 1] = 222;
 HEAP16[$6464 >> 1] = 457;
 HEAP16[$6465 >> 1] = 3;
 HEAP16[$6466 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1448, $1449);
 $24798 = $1450;
 HEAP32[$24798 >> 2] = 29950174;
 HEAP32[$24798 + 4 >> 2] = 10027555;
 HEAP32[$6467 >> 2] = 63422;
 HEAP16[$1451 >> 1] = 437;
 HEAP16[$6468 >> 1] = 457;
 HEAP16[$6469 >> 1] = 6;
 HEAP16[$6470 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1450, $1451);
 $24802 = $1452;
 HEAP32[$24802 >> 2] = 29950174;
 HEAP32[$24802 + 4 >> 2] = 10027555;
 HEAP32[$6471 >> 2] = 63422;
 HEAP16[$1453 >> 1] = 766;
 HEAP16[$6472 >> 1] = 457;
 HEAP16[$6473 >> 1] = 3;
 HEAP16[$6474 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1452, $1453);
 $24806 = $1454;
 HEAP32[$24806 >> 2] = 29950174;
 HEAP32[$24806 + 4 >> 2] = 10027555;
 HEAP32[$6475 >> 2] = 63422;
 HEAP16[$1455 >> 1] = 222;
 HEAP16[$6476 >> 1] = 485;
 HEAP16[$6477 >> 1] = 3;
 HEAP16[$6478 >> 1] = 106;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1454, $1455);
 $24810 = $1456;
 HEAP32[$24810 >> 2] = 29950174;
 HEAP32[$24810 + 4 >> 2] = 10027555;
 HEAP32[$6479 >> 2] = 63422;
 HEAP16[$1457 >> 1] = 434;
 HEAP16[$6480 >> 1] = 485;
 HEAP16[$6481 >> 1] = 6;
 HEAP16[$6482 >> 1] = 106;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1456, $1457);
 $24814 = $1458;
 HEAP32[$24814 >> 2] = 29950174;
 HEAP32[$24814 + 4 >> 2] = 10027555;
 HEAP32[$6483 >> 2] = 63422;
 HEAP16[$1459 >> 1] = 758;
 HEAP16[$6484 >> 1] = 485;
 HEAP16[$6485 >> 1] = 11;
 HEAP16[$6486 >> 1] = 106;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1458, $1459);
 $24818 = $1460;
 HEAP32[$24818 >> 2] = 29950174;
 HEAP32[$24818 + 4 >> 2] = 10027555;
 HEAP32[$6487 >> 2] = 63422;
 HEAP16[$1461 >> 1] = 222;
 HEAP16[$6488 >> 1] = 591;
 HEAP16[$6489 >> 1] = 3;
 HEAP16[$6490 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1460, $1461);
 $24822 = $1462;
 HEAP32[$24822 >> 2] = 29950174;
 HEAP32[$24822 + 4 >> 2] = 10027555;
 HEAP32[$6491 >> 2] = 63422;
 HEAP16[$1463 >> 1] = 434;
 HEAP16[$6492 >> 1] = 591;
 HEAP16[$6493 >> 1] = 335;
 HEAP16[$6494 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1462, $1463);
 $24826 = $1464;
 HEAP32[$24826 >> 2] = 29950174;
 HEAP32[$24826 + 4 >> 2] = 10027555;
 HEAP32[$6495 >> 2] = 63422;
 HEAP16[$1465 >> 1] = 222;
 HEAP16[$6496 >> 1] = 457;
 HEAP16[$6497 >> 1] = 3;
 HEAP16[$6498 >> 1] = 56;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1464, $1465);
 $24830 = $1466;
 HEAP32[$24830 >> 2] = 29950174;
 HEAP32[$24830 + 4 >> 2] = 10027555;
 HEAP32[$6499 >> 2] = 63422;
 HEAP16[$1467 >> 1] = 437;
 HEAP16[$6500 >> 1] = 457;
 HEAP16[$6501 >> 1] = 6;
 HEAP16[$6502 >> 1] = 56;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1466, $1467);
 $24834 = $1468;
 HEAP32[$24834 >> 2] = 29950174;
 HEAP32[$24834 + 4 >> 2] = 10027555;
 HEAP32[$6503 >> 2] = 63422;
 HEAP16[$1469 >> 1] = 766;
 HEAP16[$6504 >> 1] = 457;
 HEAP16[$6505 >> 1] = 3;
 HEAP16[$6506 >> 1] = 56;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1468, $1469);
 $24838 = $1470;
 HEAP32[$24838 >> 2] = 29950174;
 HEAP32[$24838 + 4 >> 2] = 10027555;
 HEAP32[$6507 >> 2] = 63422;
 HEAP16[$1471 >> 1] = 222;
 HEAP16[$6508 >> 1] = 513;
 HEAP16[$6509 >> 1] = 3;
 HEAP16[$6510 >> 1] = 78;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1470, $1471);
 $24842 = $1472;
 HEAP32[$24842 >> 2] = 29950174;
 HEAP32[$24842 + 4 >> 2] = 10027555;
 HEAP32[$6511 >> 2] = 63422;
 HEAP16[$1473 >> 1] = 434;
 HEAP16[$6512 >> 1] = 513;
 HEAP16[$6513 >> 1] = 6;
 HEAP16[$6514 >> 1] = 78;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1472, $1473);
 $24846 = $1474;
 HEAP32[$24846 >> 2] = 29950174;
 HEAP32[$24846 + 4 >> 2] = 10027555;
 HEAP32[$6515 >> 2] = 63422;
 HEAP16[$1475 >> 1] = 758;
 HEAP16[$6516 >> 1] = 513;
 HEAP16[$6517 >> 1] = 11;
 HEAP16[$6518 >> 1] = 78;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1474, $1475);
 $24850 = $1476;
 HEAP32[$24850 >> 2] = 29950174;
 HEAP32[$24850 + 4 >> 2] = 10027555;
 HEAP32[$6519 >> 2] = 63422;
 HEAP16[$1477 >> 1] = 222;
 HEAP16[$6520 >> 1] = 591;
 HEAP16[$6521 >> 1] = 3;
 HEAP16[$6522 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1476, $1477);
 $24854 = $1478;
 HEAP32[$24854 >> 2] = 29950174;
 HEAP32[$24854 + 4 >> 2] = 10027555;
 HEAP32[$6523 >> 2] = 63422;
 HEAP16[$1479 >> 1] = 434;
 HEAP16[$6524 >> 1] = 591;
 HEAP16[$6525 >> 1] = 335;
 HEAP16[$6526 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1478, $1479);
 $24858 = $1480;
 HEAP32[$24858 >> 2] = 29950174;
 HEAP32[$24858 + 4 >> 2] = 10027555;
 HEAP32[$6527 >> 2] = 63422;
 HEAP16[$1481 >> 1] = 222;
 HEAP16[$6528 >> 1] = 457;
 HEAP16[$6529 >> 1] = 3;
 HEAP16[$6530 >> 1] = 84;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1480, $1481);
 $24862 = $1482;
 HEAP32[$24862 >> 2] = 29950174;
 HEAP32[$24862 + 4 >> 2] = 10027555;
 HEAP32[$6531 >> 2] = 63422;
 HEAP16[$1483 >> 1] = 437;
 HEAP16[$6532 >> 1] = 457;
 HEAP16[$6533 >> 1] = 6;
 HEAP16[$6534 >> 1] = 84;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1482, $1483);
 $24866 = $1484;
 HEAP32[$24866 >> 2] = 29950174;
 HEAP32[$24866 + 4 >> 2] = 10027555;
 HEAP32[$6535 >> 2] = 63422;
 HEAP16[$1485 >> 1] = 766;
 HEAP16[$6536 >> 1] = 457;
 HEAP16[$6537 >> 1] = 3;
 HEAP16[$6538 >> 1] = 84;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1484, $1485);
 $24870 = $1486;
 HEAP32[$24870 >> 2] = 29950174;
 HEAP32[$24870 + 4 >> 2] = 10027555;
 HEAP32[$6539 >> 2] = 63422;
 HEAP16[$1487 >> 1] = 222;
 HEAP16[$6540 >> 1] = 541;
 HEAP16[$6541 >> 1] = 3;
 HEAP16[$6542 >> 1] = 50;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1486, $1487);
 $24874 = $1488;
 HEAP32[$24874 >> 2] = 29950174;
 HEAP32[$24874 + 4 >> 2] = 10027555;
 HEAP32[$6543 >> 2] = 63422;
 HEAP16[$1489 >> 1] = 434;
 HEAP16[$6544 >> 1] = 541;
 HEAP16[$6545 >> 1] = 6;
 HEAP16[$6546 >> 1] = 50;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1488, $1489);
 $24878 = $1490;
 HEAP32[$24878 >> 2] = 29950174;
 HEAP32[$24878 + 4 >> 2] = 10027555;
 HEAP32[$6547 >> 2] = 63422;
 HEAP16[$1491 >> 1] = 758;
 HEAP16[$6548 >> 1] = 541;
 HEAP16[$6549 >> 1] = 11;
 HEAP16[$6550 >> 1] = 50;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1490, $1491);
 $24882 = $1492;
 HEAP32[$24882 >> 2] = 29950174;
 HEAP32[$24882 + 4 >> 2] = 10027555;
 HEAP32[$6551 >> 2] = 63422;
 HEAP16[$1493 >> 1] = 222;
 HEAP16[$6552 >> 1] = 591;
 HEAP16[$6553 >> 1] = 3;
 HEAP16[$6554 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1492, $1493);
 $24886 = $1494;
 HEAP32[$24886 >> 2] = 29950174;
 HEAP32[$24886 + 4 >> 2] = 10027555;
 HEAP32[$6555 >> 2] = 63422;
 HEAP16[$1495 >> 1] = 434;
 HEAP16[$6556 >> 1] = 591;
 HEAP16[$6557 >> 1] = 335;
 HEAP16[$6558 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1494, $1495);
 $24890 = $1496;
 HEAP32[$24890 >> 2] = 29950174;
 HEAP32[$24890 + 4 >> 2] = 10027555;
 HEAP32[$6559 >> 2] = 63422;
 HEAP16[$1497 >> 1] = 222;
 HEAP16[$6560 >> 1] = 457;
 HEAP16[$6561 >> 1] = 3;
 HEAP16[$6562 >> 1] = 112;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1496, $1497);
 $24894 = $1498;
 HEAP32[$24894 >> 2] = 29950174;
 HEAP32[$24894 + 4 >> 2] = 10027555;
 HEAP32[$6563 >> 2] = 63422;
 HEAP16[$1499 >> 1] = 437;
 HEAP16[$6564 >> 1] = 457;
 HEAP16[$6565 >> 1] = 6;
 HEAP16[$6566 >> 1] = 112;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1498, $1499);
 $24898 = $1500;
 HEAP32[$24898 >> 2] = 29950174;
 HEAP32[$24898 + 4 >> 2] = 10027555;
 HEAP32[$6567 >> 2] = 63422;
 HEAP16[$1501 >> 1] = 766;
 HEAP16[$6568 >> 1] = 457;
 HEAP16[$6569 >> 1] = 3;
 HEAP16[$6570 >> 1] = 112;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1500, $1501);
 $24902 = $1502;
 HEAP32[$24902 >> 2] = 29950174;
 HEAP32[$24902 + 4 >> 2] = 10027555;
 HEAP32[$6571 >> 2] = 63422;
 HEAP16[$1503 >> 1] = 222;
 HEAP16[$6572 >> 1] = 569;
 HEAP16[$6573 >> 1] = 3;
 HEAP16[$6574 >> 1] = 22;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1502, $1503);
 $24906 = $1504;
 HEAP32[$24906 >> 2] = 29950174;
 HEAP32[$24906 + 4 >> 2] = 10027555;
 HEAP32[$6575 >> 2] = 63422;
 HEAP16[$1505 >> 1] = 434;
 HEAP16[$6576 >> 1] = 569;
 HEAP16[$6577 >> 1] = 6;
 HEAP16[$6578 >> 1] = 22;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1504, $1505);
 $24910 = $1506;
 HEAP32[$24910 >> 2] = 29950174;
 HEAP32[$24910 + 4 >> 2] = 10027555;
 HEAP32[$6579 >> 2] = 63422;
 HEAP16[$1507 >> 1] = 758;
 HEAP16[$6580 >> 1] = 569;
 HEAP16[$6581 >> 1] = 11;
 HEAP16[$6582 >> 1] = 22;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1506, $1507);
 $24914 = $1508;
 HEAP32[$24914 >> 2] = 29950174;
 HEAP32[$24914 + 4 >> 2] = 10027555;
 HEAP32[$6583 >> 2] = 63422;
 HEAP16[$1509 >> 1] = 222;
 HEAP16[$6584 >> 1] = 591;
 HEAP16[$6585 >> 1] = 3;
 HEAP16[$6586 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1508, $1509);
 $24918 = $1510;
 HEAP32[$24918 >> 2] = 29950174;
 HEAP32[$24918 + 4 >> 2] = 10027555;
 HEAP32[$6587 >> 2] = 63422;
 HEAP16[$1511 >> 1] = 434;
 HEAP16[$6588 >> 1] = 591;
 HEAP16[$6589 >> 1] = 335;
 HEAP16[$6590 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1510, $1511);
 $24922 = $1512;
 HEAP32[$24922 >> 2] = 29950174;
 HEAP32[$24922 + 4 >> 2] = 10027555;
 HEAP32[$6591 >> 2] = 63422;
 HEAP16[$1513 >> 1] = 222;
 HEAP16[$6592 >> 1] = 457;
 HEAP16[$6593 >> 1] = 3;
 HEAP16[$6594 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1512, $1513);
 $24926 = $1514;
 HEAP32[$24926 >> 2] = 29950174;
 HEAP32[$24926 + 4 >> 2] = 10027555;
 HEAP32[$6595 >> 2] = 63422;
 HEAP16[$1515 >> 1] = 437;
 HEAP16[$6596 >> 1] = 457;
 HEAP16[$6597 >> 1] = 6;
 HEAP16[$6598 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1514, $1515);
 $24930 = $1516;
 HEAP32[$24930 >> 2] = 29950174;
 HEAP32[$24930 + 4 >> 2] = 10027555;
 HEAP32[$6599 >> 2] = 63422;
 HEAP16[$1517 >> 1] = 766;
 HEAP16[$6600 >> 1] = 457;
 HEAP16[$6601 >> 1] = 3;
 HEAP16[$6602 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1516, $1517);
 $24934 = $1518;
 HEAP32[$24934 >> 2] = 29950174;
 HEAP32[$24934 + 4 >> 2] = 10027555;
 HEAP32[$6603 >> 2] = 63422;
 HEAP16[$1519 >> 1] = 222;
 HEAP16[$6604 >> 1] = 591;
 HEAP16[$6605 >> 1] = 3;
 HEAP16[$6606 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1518, $1519);
 $24938 = $1520;
 HEAP32[$24938 >> 2] = 29950174;
 HEAP32[$24938 + 4 >> 2] = 10027555;
 HEAP32[$6607 >> 2] = 63422;
 HEAP16[$1521 >> 1] = 437;
 HEAP16[$6608 >> 1] = 591;
 HEAP16[$6609 >> 1] = 332;
 HEAP16[$6610 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1520, $1521);
 $24942 = $1522;
 HEAP32[$24942 >> 2] = 40632531;
 HEAP32[$24942 + 4 >> 2] = 656145;
 HEAP32[$6611 >> 2] = 65535;
 HEAP16[$1523 >> 1] = 211;
 HEAP16[$6612 >> 1] = 620;
 HEAP16[$6613 >> 1] = 785;
 HEAP16[$6614 >> 1] = 10;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1522, $1523);
 $24946 = $1524;
 HEAP32[$24946 >> 2] = 29950174;
 HEAP32[$24946 + 4 >> 2] = 10027555;
 HEAP32[$6615 >> 2] = 63422;
 HEAP16[$1525 >> 1] = 222;
 HEAP16[$6616 >> 1] = 457;
 HEAP16[$6617 >> 1] = 3;
 HEAP16[$6618 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1524, $1525);
 $24950 = $1526;
 HEAP32[$24950 >> 2] = 29950174;
 HEAP32[$24950 + 4 >> 2] = 10027555;
 HEAP32[$6619 >> 2] = 63422;
 HEAP16[$1527 >> 1] = 437;
 HEAP16[$6620 >> 1] = 457;
 HEAP16[$6621 >> 1] = 6;
 HEAP16[$6622 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1526, $1527);
 $24954 = $1528;
 HEAP32[$24954 >> 2] = 29950174;
 HEAP32[$24954 + 4 >> 2] = 10027555;
 HEAP32[$6623 >> 2] = 63422;
 HEAP16[$1529 >> 1] = 766;
 HEAP16[$6624 >> 1] = 457;
 HEAP16[$6625 >> 1] = 3;
 HEAP16[$6626 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1528, $1529);
 $24958 = $1530;
 HEAP32[$24958 >> 2] = 29950174;
 HEAP32[$24958 + 4 >> 2] = 10027555;
 HEAP32[$6627 >> 2] = 63422;
 HEAP16[$1531 >> 1] = 222;
 HEAP16[$6628 >> 1] = 591;
 HEAP16[$6629 >> 1] = 3;
 HEAP16[$6630 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1530, $1531);
 $24962 = $1532;
 HEAP32[$24962 >> 2] = 29950174;
 HEAP32[$24962 + 4 >> 2] = 10027555;
 HEAP32[$6631 >> 2] = 63422;
 HEAP16[$1533 >> 1] = 437;
 HEAP16[$6632 >> 1] = 591;
 HEAP16[$6633 >> 1] = 332;
 HEAP16[$6634 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1532, $1533);
 $24966 = $1534;
 HEAP32[$24966 >> 2] = 42991827;
 HEAP32[$24966 + 4 >> 2] = 1573641;
 HEAP32[$6635 >> 2] = 54938;
 HEAP16[$1535 >> 1] = 211;
 HEAP16[$6636 >> 1] = 656;
 HEAP16[$6637 >> 1] = 1;
 HEAP16[$6638 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1534, $1535);
 $24970 = $1536;
 HEAP32[$24970 >> 2] = 42991827;
 HEAP32[$24970 + 4 >> 2] = 1573641;
 HEAP32[$6639 >> 2] = 54938;
 HEAP16[$1537 >> 1] = 987;
 HEAP16[$6640 >> 1] = 656;
 HEAP16[$6641 >> 1] = 1;
 HEAP16[$6642 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1536, $1537);
 $24974 = $1538;
 HEAP32[$24974 >> 2] = 43713274;
 HEAP32[$24974 + 4 >> 2] = 852182;
 HEAP32[$6643 >> 2] = 63422;
 HEAP16[$1539 >> 1] = 762;
 HEAP16[$6644 >> 1] = 667;
 HEAP16[$6645 >> 1] = 214;
 HEAP16[$6646 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1538, $1539);
 $24978 = $1540;
 HEAP32[$24978 >> 2] = 43713274;
 HEAP32[$24978 + 4 >> 2] = 852182;
 HEAP32[$6647 >> 2] = 63422;
 HEAP16[$1541 >> 1] = 762;
 HEAP16[$6648 >> 1] = 672;
 HEAP16[$6649 >> 1] = 5;
 HEAP16[$6650 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1540, $1541);
 $24982 = $1542;
 HEAP32[$24982 >> 2] = 43713274;
 HEAP32[$24982 + 4 >> 2] = 852182;
 HEAP32[$6651 >> 2] = 63422;
 HEAP16[$1543 >> 1] = 971;
 HEAP16[$6652 >> 1] = 672;
 HEAP16[$6653 >> 1] = 5;
 HEAP16[$6654 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1542, $1543);
 $24986 = $1544;
 HEAP32[$24986 >> 2] = 41287891;
 HEAP32[$24986 + 4 >> 2] = 1704713;
 HEAP32[$6655 >> 2] = 54938;
 HEAP16[$1545 >> 1] = 211;
 HEAP16[$6656 >> 1] = 630;
 HEAP16[$6657 >> 1] = 777;
 HEAP16[$6658 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1544, $1545);
 $24990 = $1546;
 HEAP32[$24990 >> 2] = 41287891;
 HEAP32[$24990 + 4 >> 2] = 1704713;
 HEAP32[$6659 >> 2] = 54938;
 HEAP16[$1547 >> 1] = 211;
 HEAP16[$6660 >> 1] = 631;
 HEAP16[$6661 >> 1] = 1;
 HEAP16[$6662 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1546, $1547);
 $24994 = $1548;
 HEAP32[$24994 >> 2] = 41287891;
 HEAP32[$24994 + 4 >> 2] = 1704713;
 HEAP32[$6663 >> 2] = 54938;
 HEAP16[$1549 >> 1] = 987;
 HEAP16[$6664 >> 1] = 631;
 HEAP16[$6665 >> 1] = 1;
 HEAP16[$6666 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1548, $1549);
 $24998 = $1550;
 HEAP32[$24998 >> 2] = 41287891;
 HEAP32[$24998 + 4 >> 2] = 1704713;
 HEAP32[$6667 >> 2] = 54938;
 HEAP16[$1551 >> 1] = 211;
 HEAP16[$6668 >> 1] = 655;
 HEAP16[$6669 >> 1] = 777;
 HEAP16[$6670 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1550, $1551);
 $25002 = $1552;
 HEAP32[$25002 >> 2] = 41287891;
 HEAP32[$25002 + 4 >> 2] = 1704721;
 HEAP32[$6671 >> 2] = 54938;
 HEAP16[$1553 >> 1] = 211;
 HEAP16[$6672 >> 1] = 630;
 HEAP16[$6673 >> 1] = 785;
 HEAP16[$6674 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1552, $1553);
 $25006 = $1554;
 HEAP32[$25006 >> 2] = 41287891;
 HEAP32[$25006 + 4 >> 2] = 1704721;
 HEAP32[$6675 >> 2] = 54938;
 HEAP16[$1555 >> 1] = 211;
 HEAP16[$6676 >> 1] = 631;
 HEAP16[$6677 >> 1] = 1;
 HEAP16[$6678 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1554, $1555);
 $25010 = $1556;
 HEAP32[$25010 >> 2] = 41287891;
 HEAP32[$25010 + 4 >> 2] = 1704721;
 HEAP32[$6679 >> 2] = 54938;
 HEAP16[$1557 >> 1] = 987;
 HEAP16[$6680 >> 1] = 631;
 HEAP16[$6681 >> 1] = 9;
 HEAP16[$6682 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1556, $1557);
 $25014 = $1558;
 HEAP32[$25014 >> 2] = 41287891;
 HEAP32[$25014 + 4 >> 2] = 1704721;
 HEAP32[$6683 >> 2] = 54938;
 HEAP16[$1559 >> 1] = 211;
 HEAP16[$6684 >> 1] = 655;
 HEAP16[$6685 >> 1] = 785;
 HEAP16[$6686 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1558, $1559);
 $25018 = $1560;
 HEAP32[$25018 >> 2] = 42991827;
 HEAP32[$25018 + 4 >> 2] = 1573649;
 HEAP32[$6687 >> 2] = 54938;
 HEAP16[$1561 >> 1] = 211;
 HEAP16[$6688 >> 1] = 656;
 HEAP16[$6689 >> 1] = 1;
 HEAP16[$6690 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1560, $1561);
 $25022 = $1562;
 HEAP32[$25022 >> 2] = 42991827;
 HEAP32[$25022 + 4 >> 2] = 1573649;
 HEAP32[$6691 >> 2] = 54938;
 HEAP16[$1563 >> 1] = 987;
 HEAP16[$6692 >> 1] = 656;
 HEAP16[$6693 >> 1] = 9;
 HEAP16[$6694 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1562, $1563);
 $25026 = $1564;
 HEAP32[$25026 >> 2] = 43713274;
 HEAP32[$25026 + 4 >> 2] = 852182;
 HEAP32[$6695 >> 2] = 63422;
 HEAP16[$1565 >> 1] = 762;
 HEAP16[$6696 >> 1] = 667;
 HEAP16[$6697 >> 1] = 214;
 HEAP16[$6698 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1564, $1565);
 $25030 = $1566;
 HEAP32[$25030 >> 2] = 43713274;
 HEAP32[$25030 + 4 >> 2] = 852182;
 HEAP32[$6699 >> 2] = 63422;
 HEAP16[$1567 >> 1] = 762;
 HEAP16[$6700 >> 1] = 672;
 HEAP16[$6701 >> 1] = 5;
 HEAP16[$6702 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1566, $1567);
 $25034 = $1568;
 HEAP32[$25034 >> 2] = 43713274;
 HEAP32[$25034 + 4 >> 2] = 852182;
 HEAP32[$6703 >> 2] = 63422;
 HEAP16[$1569 >> 1] = 971;
 HEAP16[$6704 >> 1] = 672;
 HEAP16[$6705 >> 1] = 5;
 HEAP16[$6706 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1568, $1569);
 $25038 = $1570;
 HEAP32[$25038 >> 2] = 42992603;
 HEAP32[$25038 + 4 >> 2] = 1572872;
 HEAP32[$6707 >> 2] = 63422;
 HEAP16[$1571 >> 1] = 987;
 HEAP16[$6708 >> 1] = 656;
 HEAP16[$6709 >> 1] = 8;
 HEAP16[$6710 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1570, $1571);
 $25042 = $1572;
 HEAP32[$25042 >> 2] = 43713274;
 HEAP32[$25042 + 4 >> 2] = 852182;
 HEAP32[$6711 >> 2] = 63422;
 HEAP16[$1573 >> 1] = 762;
 HEAP16[$6712 >> 1] = 667;
 HEAP16[$6713 >> 1] = 214;
 HEAP16[$6714 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1572, $1573);
 $25046 = $1574;
 HEAP32[$25046 >> 2] = 43713274;
 HEAP32[$25046 + 4 >> 2] = 852182;
 HEAP32[$6715 >> 2] = 63422;
 HEAP16[$1575 >> 1] = 762;
 HEAP16[$6716 >> 1] = 672;
 HEAP16[$6717 >> 1] = 5;
 HEAP16[$6718 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1574, $1575);
 $25050 = $1576;
 HEAP32[$25050 >> 2] = 43713274;
 HEAP32[$25050 + 4 >> 2] = 852182;
 HEAP32[$6719 >> 2] = 63422;
 HEAP16[$1577 >> 1] = 971;
 HEAP16[$6720 >> 1] = 672;
 HEAP16[$6721 >> 1] = 5;
 HEAP16[$6722 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1576, $1577);
 $25054 = $1578;
 HEAP32[$25054 >> 2] = 43713274;
 HEAP32[$25054 + 4 >> 2] = 852182;
 HEAP32[$6723 >> 2] = 63422;
 HEAP16[$1579 >> 1] = 762;
 HEAP16[$6724 >> 1] = 667;
 HEAP16[$6725 >> 1] = 214;
 HEAP16[$6726 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1578, $1579);
 $25058 = $1580;
 HEAP32[$25058 >> 2] = 43713274;
 HEAP32[$25058 + 4 >> 2] = 852182;
 HEAP32[$6727 >> 2] = 63422;
 HEAP16[$1581 >> 1] = 762;
 HEAP16[$6728 >> 1] = 672;
 HEAP16[$6729 >> 1] = 5;
 HEAP16[$6730 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1580, $1581);
 $25062 = $1582;
 HEAP32[$25062 >> 2] = 43713274;
 HEAP32[$25062 + 4 >> 2] = 852182;
 HEAP32[$6731 >> 2] = 63422;
 HEAP16[$1583 >> 1] = 971;
 HEAP16[$6732 >> 1] = 672;
 HEAP16[$6733 >> 1] = 5;
 HEAP16[$6734 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1582, $1583);
 $25066 = $1584;
 HEAP32[$25066 >> 2] = 43713282;
 HEAP32[$25066 + 4 >> 2] = 852182;
 HEAP32[$6735 >> 2] = 63422;
 HEAP16[$1585 >> 1] = 770;
 HEAP16[$6736 >> 1] = 667;
 HEAP16[$6737 >> 1] = 214;
 HEAP16[$6738 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1584, $1585);
 $25070 = $1586;
 HEAP32[$25070 >> 2] = 43713282;
 HEAP32[$25070 + 4 >> 2] = 852182;
 HEAP32[$6739 >> 2] = 63422;
 HEAP16[$1587 >> 1] = 770;
 HEAP16[$6740 >> 1] = 672;
 HEAP16[$6741 >> 1] = 5;
 HEAP16[$6742 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1586, $1587);
 $25074 = $1588;
 HEAP32[$25074 >> 2] = 43713282;
 HEAP32[$25074 + 4 >> 2] = 852182;
 HEAP32[$6743 >> 2] = 63422;
 HEAP16[$1589 >> 1] = 979;
 HEAP16[$6744 >> 1] = 672;
 HEAP16[$6745 >> 1] = 5;
 HEAP16[$6746 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1588, $1589);
 $25078 = $1590;
 HEAP32[$25078 >> 2] = 28509166;
 HEAP32[$25078 + 4 >> 2] = 15007760;
 HEAP8[$6747 >> 0] = -16;
 HEAP32[$6748 >> 2] = 65535;
 HEAP32[$6749 >> 2] = 54937;
 HEAP8[$6750 >> 0] = 1;
 HEAP8[$6751 >> 0] = 1;
 HEAP8[$6752 >> 0] = 3;
 HEAP8[$6753 >> 0] = -86;
 HEAP32[$6754 >> 2] = 0;
 HEAP16[$6754 + 4 >> 1] = 0;
 HEAP8[$6754 + 6 >> 0] = 0;
 HEAP16[$1591 >> 1] = 1006;
 HEAP16[$6755 >> 1] = 435;
 HEAP16[$6756 >> 1] = 16;
 HEAP16[$6757 >> 1] = 229;
 __ZN14Front_JS_Natif4drawERK9RDPPatBltRK4Rect($front, $1590, $1591);
 $25082 = $1592;
 HEAP32[$25082 >> 2] = 11600893;
 HEAP32[$25082 + 4 >> 2] = 16908289;
 HEAP32[$6758 >> 2] = 16904;
 HEAP16[$1593 >> 1] = 1021;
 HEAP16[$6759 >> 1] = 177;
 HEAP16[$6760 >> 1] = 1;
 HEAP16[$6761 >> 1] = 258;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1592, $1593);
 $25086 = $1594;
 HEAP32[$25086 >> 2] = 28443630;
 HEAP32[$25086 + 4 >> 2] = 65551;
 HEAP32[$6762 >> 2] = 16904;
 HEAP16[$1595 >> 1] = 1006;
 HEAP16[$6763 >> 1] = 434;
 HEAP16[$6764 >> 1] = 15;
 HEAP16[$6765 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1594, $1595);
 $25090 = $1596;
 HEAP32[$25090 >> 2] = 11600878;
 HEAP32[$25090 + 4 >> 2] = 16842753;
 HEAP32[$6766 >> 2] = 54937;
 HEAP16[$1597 >> 1] = 1006;
 HEAP16[$6767 >> 1] = 177;
 HEAP16[$6768 >> 1] = 1;
 HEAP16[$6769 >> 1] = 257;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1596, $1597);
 $25094 = $1598;
 HEAP32[$25094 >> 2] = 11600879;
 HEAP32[$25094 + 4 >> 2] = 65550;
 HEAP32[$6770 >> 2] = 54937;
 HEAP16[$1599 >> 1] = 1007;
 HEAP16[$6771 >> 1] = 177;
 HEAP16[$6772 >> 1] = 14;
 HEAP16[$6773 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1598, $1599);
 $25098 = $1600;
 HEAP32[$25098 >> 2] = 11666428;
 HEAP32[$25098 + 4 >> 2] = 16777217;
 HEAP32[$6774 >> 2] = 33808;
 HEAP16[$1601 >> 1] = 1020;
 HEAP16[$6775 >> 1] = 178;
 HEAP16[$6776 >> 1] = 1;
 HEAP16[$6777 >> 1] = 256;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1600, $1601);
 $25102 = $1602;
 HEAP32[$25102 >> 2] = 28378095;
 HEAP32[$25102 + 4 >> 2] = 65549;
 HEAP32[$6778 >> 2] = 33808;
 HEAP16[$1603 >> 1] = 1007;
 HEAP16[$6779 >> 1] = 433;
 HEAP16[$6780 >> 1] = 13;
 HEAP16[$6781 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1602, $1603);
 $25106 = $1604;
 HEAP32[$25106 >> 2] = 11666415;
 HEAP32[$25106 + 4 >> 2] = 16711681;
 HEAP32[$6782 >> 2] = 65535;
 HEAP16[$1605 >> 1] = 1007;
 HEAP16[$6783 >> 1] = 178;
 HEAP16[$6784 >> 1] = 1;
 HEAP16[$6785 >> 1] = 255;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1604, $1605);
 $25110 = $1606;
 HEAP32[$25110 >> 2] = 11666416;
 HEAP32[$25110 + 4 >> 2] = 65548;
 HEAP32[$6786 >> 2] = 65535;
 HEAP16[$1607 >> 1] = 1008;
 HEAP16[$6787 >> 1] = 178;
 HEAP16[$6788 >> 1] = 12;
 HEAP16[$6789 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1606, $1607);
 $25114 = $1608;
 HEAP32[$25114 >> 2] = 11731952;
 HEAP32[$25114 + 4 >> 2] = 16646156;
 HEAP32[$6790 >> 2] = 54937;
 HEAP16[$1609 >> 1] = 1008;
 HEAP16[$6791 >> 1] = 179;
 HEAP16[$6792 >> 1] = 12;
 HEAP16[$6793 >> 1] = 254;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1608, $1609);
 $25118 = $1610;
 HEAP32[$25118 >> 2] = 44040967;
 HEAP32[$25118 + 4 >> 2] = 524492;
 HEAP32[$6794 >> 2] = 63422;
 HEAP16[$1611 >> 1] = 775;
 HEAP16[$6795 >> 1] = 672;
 HEAP16[$6796 >> 1] = 1;
 HEAP16[$6797 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1610, $1611);
 $25122 = $1612;
 HEAP32[$25122 >> 2] = 44040967;
 HEAP32[$25122 + 4 >> 2] = 524492;
 HEAP32[$6798 >> 2] = 63422;
 HEAP16[$1613 >> 1] = 792;
 HEAP16[$6799 >> 1] = 672;
 HEAP16[$6800 >> 1] = 187;
 HEAP16[$6801 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1612, $1613);
 $25126 = $1614;
 HEAP32[$25126 >> 2] = 44040967;
 HEAP32[$25126 + 4 >> 2] = 524492;
 HEAP32[$6802 >> 2] = 63422;
 HEAP16[$1615 >> 1] = 775;
 HEAP16[$6803 >> 1] = 674;
 HEAP16[$6804 >> 1] = 1;
 HEAP16[$6805 >> 1] = 6;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1614, $1615);
 $25130 = $1616;
 HEAP32[$25130 >> 2] = 44040967;
 HEAP32[$25130 + 4 >> 2] = 524492;
 HEAP32[$6806 >> 2] = 63422;
 HEAP16[$1617 >> 1] = 792;
 HEAP16[$6807 >> 1] = 674;
 HEAP16[$6808 >> 1] = 3;
 HEAP16[$6809 >> 1] = 6;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1616, $1617);
 $25134 = $1618;
 HEAP32[$25134 >> 2] = 44040967;
 HEAP32[$25134 + 4 >> 2] = 524492;
 HEAP32[$6810 >> 2] = 63422;
 HEAP16[$1619 >> 1] = 888;
 HEAP16[$6811 >> 1] = 674;
 HEAP16[$6812 >> 1] = 91;
 HEAP16[$6813 >> 1] = 6;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1618, $1619);
 $25138 = $1620;
 HEAP32[$25138 >> 2] = 41616135;
 HEAP32[$25138 + 4 >> 2] = 1048792;
 HEAP32[$6814 >> 2] = 54938;
 HEAP16[$1621 >> 1] = 775;
 HEAP16[$6815 >> 1] = 635;
 HEAP16[$6816 >> 1] = 1;
 HEAP16[$6817 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1620, $1621);
 $25142 = $1622;
 HEAP32[$25142 >> 2] = 41616135;
 HEAP32[$25142 + 4 >> 2] = 1048792;
 HEAP32[$6818 >> 2] = 54938;
 HEAP16[$1623 >> 1] = 792;
 HEAP16[$6819 >> 1] = 635;
 HEAP16[$6820 >> 1] = 199;
 HEAP16[$6821 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1622, $1623);
 $25146 = $1624;
 HEAP32[$25146 >> 2] = 41616135;
 HEAP32[$25146 + 4 >> 2] = 1048792;
 HEAP32[$6822 >> 2] = 54938;
 HEAP16[$1625 >> 1] = 775;
 HEAP16[$6823 >> 1] = 637;
 HEAP16[$6824 >> 1] = 1;
 HEAP16[$6825 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1624, $1625);
 $25150 = $1626;
 HEAP32[$25150 >> 2] = 41616135;
 HEAP32[$25150 + 4 >> 2] = 1048792;
 HEAP32[$6826 >> 2] = 54938;
 HEAP16[$1627 >> 1] = 792;
 HEAP16[$6827 >> 1] = 637;
 HEAP16[$6828 >> 1] = 3;
 HEAP16[$6829 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1626, $1627);
 $25154 = $1628;
 HEAP32[$25154 >> 2] = 41616135;
 HEAP32[$25154 + 4 >> 2] = 1048792;
 HEAP32[$6830 >> 2] = 54938;
 HEAP16[$1629 >> 1] = 928;
 HEAP16[$6831 >> 1] = 637;
 HEAP16[$6832 >> 1] = 63;
 HEAP16[$6833 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1628, $1629);
 $25158 = $1630;
 HEAP32[$25158 >> 2] = 41616135;
 HEAP32[$25158 + 4 >> 2] = 1048792;
 HEAP32[$6834 >> 2] = 54938;
 HEAP16[$1631 >> 1] = 775;
 HEAP16[$6835 >> 1] = 650;
 HEAP16[$6836 >> 1] = 1;
 HEAP16[$6837 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1630, $1631);
 $25162 = $1632;
 HEAP32[$25162 >> 2] = 41616135;
 HEAP32[$25162 + 4 >> 2] = 1048792;
 HEAP32[$6838 >> 2] = 54938;
 HEAP16[$1633 >> 1] = 792;
 HEAP16[$6839 >> 1] = 650;
 HEAP16[$6840 >> 1] = 199;
 HEAP16[$6841 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1632, $1633);
 $25166 = $1634;
 HEAP32[$25166 >> 2] = 41616135;
 HEAP32[$25166 + 4 >> 2] = 65752;
 HEAP32[$6842 >> 2] = 65470;
 HEAP16[$1635 >> 1] = 775;
 HEAP16[$6843 >> 1] = 635;
 HEAP16[$6844 >> 1] = 1;
 HEAP16[$6845 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1634, $1635);
 $25170 = $1636;
 HEAP32[$25170 >> 2] = 41616135;
 HEAP32[$25170 + 4 >> 2] = 65752;
 HEAP32[$6846 >> 2] = 65470;
 HEAP16[$1637 >> 1] = 792;
 HEAP16[$6847 >> 1] = 635;
 HEAP16[$6848 >> 1] = 199;
 HEAP16[$6849 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1636, $1637);
 $25174 = $1638;
 HEAP32[$25174 >> 2] = 41681671;
 HEAP32[$25174 + 4 >> 2] = 65752;
 HEAP32[$6850 >> 2] = 63422;
 HEAP16[$1639 >> 1] = 775;
 HEAP16[$6851 >> 1] = 636;
 HEAP16[$6852 >> 1] = 1;
 HEAP16[$6853 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1638, $1639);
 $25178 = $1640;
 HEAP32[$25178 >> 2] = 41681671;
 HEAP32[$25178 + 4 >> 2] = 65752;
 HEAP32[$6854 >> 2] = 63422;
 HEAP16[$1641 >> 1] = 792;
 HEAP16[$6855 >> 1] = 636;
 HEAP16[$6856 >> 1] = 199;
 HEAP16[$6857 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1640, $1641);
 $25182 = $1642;
 HEAP32[$25182 >> 2] = 41747207;
 HEAP32[$25182 + 4 >> 2] = 65752;
 HEAP32[$6858 >> 2] = 63390;
 HEAP16[$1643 >> 1] = 775;
 HEAP16[$6859 >> 1] = 637;
 HEAP16[$6860 >> 1] = 1;
 HEAP16[$6861 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1642, $1643);
 $25186 = $1644;
 HEAP32[$25186 >> 2] = 41747207;
 HEAP32[$25186 + 4 >> 2] = 65752;
 HEAP32[$6862 >> 2] = 63390;
 HEAP16[$1645 >> 1] = 792;
 HEAP16[$6863 >> 1] = 637;
 HEAP16[$6864 >> 1] = 3;
 HEAP16[$6865 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1644, $1645);
 $25190 = $1646;
 HEAP32[$25190 >> 2] = 41747207;
 HEAP32[$25190 + 4 >> 2] = 65752;
 HEAP32[$6866 >> 2] = 63390;
 HEAP16[$1647 >> 1] = 928;
 HEAP16[$6867 >> 1] = 637;
 HEAP16[$6868 >> 1] = 63;
 HEAP16[$6869 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1646, $1647);
 $25194 = $1648;
 HEAP32[$25194 >> 2] = 41812743;
 HEAP32[$25194 + 4 >> 2] = 65752;
 HEAP32[$6870 >> 2] = 63389;
 HEAP16[$1649 >> 1] = 775;
 HEAP16[$6871 >> 1] = 638;
 HEAP16[$6872 >> 1] = 1;
 HEAP16[$6873 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1648, $1649);
 $25198 = $1650;
 HEAP32[$25198 >> 2] = 41812743;
 HEAP32[$25198 + 4 >> 2] = 65752;
 HEAP32[$6874 >> 2] = 63389;
 HEAP16[$1651 >> 1] = 792;
 HEAP16[$6875 >> 1] = 638;
 HEAP16[$6876 >> 1] = 3;
 HEAP16[$6877 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1650, $1651);
 $25202 = $1652;
 HEAP32[$25202 >> 2] = 41812743;
 HEAP32[$25202 + 4 >> 2] = 65752;
 HEAP32[$6878 >> 2] = 63389;
 HEAP16[$1653 >> 1] = 928;
 HEAP16[$6879 >> 1] = 638;
 HEAP16[$6880 >> 1] = 63;
 HEAP16[$6881 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1652, $1653);
 $25206 = $1654;
 HEAP32[$25206 >> 2] = 41878279;
 HEAP32[$25206 + 4 >> 2] = 65752;
 HEAP32[$6882 >> 2] = 63357;
 HEAP16[$1655 >> 1] = 775;
 HEAP16[$6883 >> 1] = 639;
 HEAP16[$6884 >> 1] = 1;
 HEAP16[$6885 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1654, $1655);
 $25210 = $1656;
 HEAP32[$25210 >> 2] = 41878279;
 HEAP32[$25210 + 4 >> 2] = 65752;
 HEAP32[$6886 >> 2] = 63357;
 HEAP16[$1657 >> 1] = 792;
 HEAP16[$6887 >> 1] = 639;
 HEAP16[$6888 >> 1] = 3;
 HEAP16[$6889 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1656, $1657);
 $25214 = $1658;
 HEAP32[$25214 >> 2] = 41878279;
 HEAP32[$25214 + 4 >> 2] = 65752;
 HEAP32[$6890 >> 2] = 63357;
 HEAP16[$1659 >> 1] = 928;
 HEAP16[$6891 >> 1] = 639;
 HEAP16[$6892 >> 1] = 63;
 HEAP16[$6893 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1658, $1659);
 $25218 = $1660;
 HEAP32[$25218 >> 2] = 41943815;
 HEAP32[$25218 + 4 >> 2] = 65752;
 HEAP32[$6894 >> 2] = 61309;
 HEAP16[$1661 >> 1] = 775;
 HEAP16[$6895 >> 1] = 640;
 HEAP16[$6896 >> 1] = 1;
 HEAP16[$6897 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1660, $1661);
 $25222 = $1662;
 HEAP32[$25222 >> 2] = 41943815;
 HEAP32[$25222 + 4 >> 2] = 65752;
 HEAP32[$6898 >> 2] = 61309;
 HEAP16[$1663 >> 1] = 792;
 HEAP16[$6899 >> 1] = 640;
 HEAP16[$6900 >> 1] = 3;
 HEAP16[$6901 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1662, $1663);
 $25226 = $1664;
 HEAP32[$25226 >> 2] = 41943815;
 HEAP32[$25226 + 4 >> 2] = 65752;
 HEAP32[$6902 >> 2] = 61309;
 HEAP16[$1665 >> 1] = 928;
 HEAP16[$6903 >> 1] = 640;
 HEAP16[$6904 >> 1] = 63;
 HEAP16[$6905 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1664, $1665);
 $25230 = $1666;
 HEAP32[$25230 >> 2] = 42009351;
 HEAP32[$25230 + 4 >> 2] = 65752;
 HEAP32[$6906 >> 2] = 61277;
 HEAP16[$1667 >> 1] = 775;
 HEAP16[$6907 >> 1] = 641;
 HEAP16[$6908 >> 1] = 1;
 HEAP16[$6909 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1666, $1667);
 $25234 = $1668;
 HEAP32[$25234 >> 2] = 42009351;
 HEAP32[$25234 + 4 >> 2] = 65752;
 HEAP32[$6910 >> 2] = 61277;
 HEAP16[$1669 >> 1] = 792;
 HEAP16[$6911 >> 1] = 641;
 HEAP16[$6912 >> 1] = 3;
 HEAP16[$6913 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1668, $1669);
 $25238 = $1670;
 HEAP32[$25238 >> 2] = 42009351;
 HEAP32[$25238 + 4 >> 2] = 65752;
 HEAP32[$6914 >> 2] = 61277;
 HEAP16[$1671 >> 1] = 928;
 HEAP16[$6915 >> 1] = 641;
 HEAP16[$6916 >> 1] = 63;
 HEAP16[$6917 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1670, $1671);
 $25242 = $1672;
 HEAP32[$25242 >> 2] = 42074887;
 HEAP32[$25242 + 4 >> 2] = 65752;
 HEAP32[$6918 >> 2] = 61276;
 HEAP16[$1673 >> 1] = 775;
 HEAP16[$6919 >> 1] = 642;
 HEAP16[$6920 >> 1] = 1;
 HEAP16[$6921 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1672, $1673);
 $25246 = $1674;
 HEAP32[$25246 >> 2] = 42074887;
 HEAP32[$25246 + 4 >> 2] = 65752;
 HEAP32[$6922 >> 2] = 61276;
 HEAP16[$1675 >> 1] = 792;
 HEAP16[$6923 >> 1] = 642;
 HEAP16[$6924 >> 1] = 3;
 HEAP16[$6925 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1674, $1675);
 $25250 = $1676;
 HEAP32[$25250 >> 2] = 42074887;
 HEAP32[$25250 + 4 >> 2] = 65752;
 HEAP32[$6926 >> 2] = 61276;
 HEAP16[$1677 >> 1] = 928;
 HEAP16[$6927 >> 1] = 642;
 HEAP16[$6928 >> 1] = 63;
 HEAP16[$6929 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1676, $1677);
 $25254 = $1678;
 HEAP32[$25254 >> 2] = 42140423;
 HEAP32[$25254 + 4 >> 2] = 65752;
 HEAP32[$6930 >> 2] = 61276;
 HEAP16[$1679 >> 1] = 775;
 HEAP16[$6931 >> 1] = 643;
 HEAP16[$6932 >> 1] = 1;
 HEAP16[$6933 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1678, $1679);
 $25258 = $1680;
 HEAP32[$25258 >> 2] = 42140423;
 HEAP32[$25258 + 4 >> 2] = 65752;
 HEAP32[$6934 >> 2] = 61276;
 HEAP16[$1681 >> 1] = 792;
 HEAP16[$6935 >> 1] = 643;
 HEAP16[$6936 >> 1] = 3;
 HEAP16[$6937 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1680, $1681);
 $25262 = $1682;
 HEAP32[$25262 >> 2] = 42140423;
 HEAP32[$25262 + 4 >> 2] = 65752;
 HEAP32[$6938 >> 2] = 61276;
 HEAP16[$1683 >> 1] = 928;
 HEAP16[$6939 >> 1] = 643;
 HEAP16[$6940 >> 1] = 63;
 HEAP16[$6941 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1682, $1683);
 $25266 = $1684;
 HEAP32[$25266 >> 2] = 42205959;
 HEAP32[$25266 + 4 >> 2] = 65752;
 HEAP32[$6942 >> 2] = 61244;
 HEAP16[$1685 >> 1] = 775;
 HEAP16[$6943 >> 1] = 644;
 HEAP16[$6944 >> 1] = 1;
 HEAP16[$6945 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1684, $1685);
 $25270 = $1686;
 HEAP32[$25270 >> 2] = 42205959;
 HEAP32[$25270 + 4 >> 2] = 65752;
 HEAP32[$6946 >> 2] = 61244;
 HEAP16[$1687 >> 1] = 792;
 HEAP16[$6947 >> 1] = 644;
 HEAP16[$6948 >> 1] = 3;
 HEAP16[$6949 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1686, $1687);
 $25274 = $1688;
 HEAP32[$25274 >> 2] = 42205959;
 HEAP32[$25274 + 4 >> 2] = 65752;
 HEAP32[$6950 >> 2] = 61244;
 HEAP16[$1689 >> 1] = 928;
 HEAP16[$6951 >> 1] = 644;
 HEAP16[$6952 >> 1] = 63;
 HEAP16[$6953 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1688, $1689);
 $25278 = $1690;
 HEAP32[$25278 >> 2] = 42271495;
 HEAP32[$25278 + 4 >> 2] = 65752;
 HEAP32[$6954 >> 2] = 59195;
 HEAP16[$1691 >> 1] = 775;
 HEAP16[$6955 >> 1] = 645;
 HEAP16[$6956 >> 1] = 1;
 HEAP16[$6957 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1690, $1691);
 $25282 = $1692;
 HEAP32[$25282 >> 2] = 42271495;
 HEAP32[$25282 + 4 >> 2] = 65752;
 HEAP32[$6958 >> 2] = 59195;
 HEAP16[$1693 >> 1] = 792;
 HEAP16[$6959 >> 1] = 645;
 HEAP16[$6960 >> 1] = 3;
 HEAP16[$6961 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1692, $1693);
 $25286 = $1694;
 HEAP32[$25286 >> 2] = 42271495;
 HEAP32[$25286 + 4 >> 2] = 65752;
 HEAP32[$6962 >> 2] = 59195;
 HEAP16[$1695 >> 1] = 928;
 HEAP16[$6963 >> 1] = 645;
 HEAP16[$6964 >> 1] = 63;
 HEAP16[$6965 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1694, $1695);
 $25290 = $1696;
 HEAP32[$25290 >> 2] = 42337031;
 HEAP32[$25290 + 4 >> 2] = 65752;
 HEAP32[$6966 >> 2] = 59163;
 HEAP16[$1697 >> 1] = 775;
 HEAP16[$6967 >> 1] = 646;
 HEAP16[$6968 >> 1] = 1;
 HEAP16[$6969 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1696, $1697);
 $25294 = $1698;
 HEAP32[$25294 >> 2] = 42337031;
 HEAP32[$25294 + 4 >> 2] = 65752;
 HEAP32[$6970 >> 2] = 59163;
 HEAP16[$1699 >> 1] = 792;
 HEAP16[$6971 >> 1] = 646;
 HEAP16[$6972 >> 1] = 3;
 HEAP16[$6973 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1698, $1699);
 $25298 = $1700;
 HEAP32[$25298 >> 2] = 42337031;
 HEAP32[$25298 + 4 >> 2] = 65752;
 HEAP32[$6974 >> 2] = 59163;
 HEAP16[$1701 >> 1] = 928;
 HEAP16[$6975 >> 1] = 646;
 HEAP16[$6976 >> 1] = 63;
 HEAP16[$6977 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1700, $1701);
 $25302 = $1702;
 HEAP32[$25302 >> 2] = 42402567;
 HEAP32[$25302 + 4 >> 2] = 65752;
 HEAP32[$6978 >> 2] = 59163;
 HEAP16[$1703 >> 1] = 775;
 HEAP16[$6979 >> 1] = 647;
 HEAP16[$6980 >> 1] = 1;
 HEAP16[$6981 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1702, $1703);
 $25306 = $1704;
 HEAP32[$25306 >> 2] = 42402567;
 HEAP32[$25306 + 4 >> 2] = 65752;
 HEAP32[$6982 >> 2] = 59163;
 HEAP16[$1705 >> 1] = 792;
 HEAP16[$6983 >> 1] = 647;
 HEAP16[$6984 >> 1] = 3;
 HEAP16[$6985 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1704, $1705);
 $25310 = $1706;
 HEAP32[$25310 >> 2] = 42402567;
 HEAP32[$25310 + 4 >> 2] = 65752;
 HEAP32[$6986 >> 2] = 59163;
 HEAP16[$1707 >> 1] = 928;
 HEAP16[$6987 >> 1] = 647;
 HEAP16[$6988 >> 1] = 63;
 HEAP16[$6989 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1706, $1707);
 $25314 = $1708;
 HEAP32[$25314 >> 2] = 42468103;
 HEAP32[$25314 + 4 >> 2] = 65752;
 HEAP32[$6990 >> 2] = 59131;
 HEAP16[$1709 >> 1] = 775;
 HEAP16[$6991 >> 1] = 648;
 HEAP16[$6992 >> 1] = 1;
 HEAP16[$6993 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1708, $1709);
 $25318 = $1710;
 HEAP32[$25318 >> 2] = 42468103;
 HEAP32[$25318 + 4 >> 2] = 65752;
 HEAP32[$6994 >> 2] = 59131;
 HEAP16[$1711 >> 1] = 792;
 HEAP16[$6995 >> 1] = 648;
 HEAP16[$6996 >> 1] = 3;
 HEAP16[$6997 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1710, $1711);
 $25322 = $1712;
 HEAP32[$25322 >> 2] = 42468103;
 HEAP32[$25322 + 4 >> 2] = 65752;
 HEAP32[$6998 >> 2] = 59131;
 HEAP16[$1713 >> 1] = 928;
 HEAP16[$6999 >> 1] = 648;
 HEAP16[$7000 >> 1] = 63;
 HEAP16[$7001 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1712, $1713);
 $25326 = $1714;
 HEAP32[$25326 >> 2] = 42533639;
 HEAP32[$25326 + 4 >> 2] = 65752;
 HEAP32[$7002 >> 2] = 57082;
 HEAP16[$1715 >> 1] = 775;
 HEAP16[$7003 >> 1] = 649;
 HEAP16[$7004 >> 1] = 1;
 HEAP16[$7005 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1714, $1715);
 $25330 = $1716;
 HEAP32[$25330 >> 2] = 42533639;
 HEAP32[$25330 + 4 >> 2] = 65752;
 HEAP32[$7006 >> 2] = 57082;
 HEAP16[$1717 >> 1] = 792;
 HEAP16[$7007 >> 1] = 649;
 HEAP16[$7008 >> 1] = 3;
 HEAP16[$7009 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1716, $1717);
 $25334 = $1718;
 HEAP32[$25334 >> 2] = 42533639;
 HEAP32[$25334 + 4 >> 2] = 65752;
 HEAP32[$7010 >> 2] = 57082;
 HEAP16[$1719 >> 1] = 928;
 HEAP16[$7011 >> 1] = 649;
 HEAP16[$7012 >> 1] = 63;
 HEAP16[$7013 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1718, $1719);
 $25338 = $1720;
 HEAP32[$25338 >> 2] = 42599175;
 HEAP32[$25338 + 4 >> 2] = 65752;
 HEAP32[$7014 >> 2] = 57050;
 HEAP16[$1721 >> 1] = 775;
 HEAP16[$7015 >> 1] = 650;
 HEAP16[$7016 >> 1] = 1;
 HEAP16[$7017 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1720, $1721);
 $25342 = $1722;
 HEAP32[$25342 >> 2] = 42599175;
 HEAP32[$25342 + 4 >> 2] = 65752;
 HEAP32[$7018 >> 2] = 57050;
 HEAP16[$1723 >> 1] = 792;
 HEAP16[$7019 >> 1] = 650;
 HEAP16[$7020 >> 1] = 199;
 HEAP16[$7021 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1722, $1723);
 $25346 = $1724;
 HEAP32[$25346 >> 2] = 28508935;
 HEAP32[$25346 + 4 >> 2] = 1048780;
 HEAP32[$7022 >> 2] = 63422;
 HEAP16[$1725 >> 1] = 775;
 HEAP16[$7023 >> 1] = 435;
 HEAP16[$7024 >> 1] = 1;
 HEAP16[$7025 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1724, $1725);
 $25350 = $1726;
 HEAP32[$25350 >> 2] = 28508935;
 HEAP32[$25350 + 4 >> 2] = 1048780;
 HEAP32[$7026 >> 2] = 63422;
 HEAP16[$1727 >> 1] = 792;
 HEAP16[$7027 >> 1] = 435;
 HEAP16[$7028 >> 1] = 187;
 HEAP16[$7029 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1726, $1727);
 $25354 = $1728;
 HEAP32[$25354 >> 2] = 28508935;
 HEAP32[$25354 + 4 >> 2] = 1048780;
 HEAP32[$7030 >> 2] = 63422;
 HEAP16[$1729 >> 1] = 775;
 HEAP16[$7031 >> 1] = 437;
 HEAP16[$7032 >> 1] = 1;
 HEAP16[$7033 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1728, $1729);
 $25358 = $1730;
 HEAP32[$25358 >> 2] = 28508935;
 HEAP32[$25358 + 4 >> 2] = 1048780;
 HEAP32[$7034 >> 2] = 63422;
 HEAP16[$1731 >> 1] = 792;
 HEAP16[$7035 >> 1] = 437;
 HEAP16[$7036 >> 1] = 3;
 HEAP16[$7037 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1730, $1731);
 $25362 = $1732;
 HEAP32[$25362 >> 2] = 28508935;
 HEAP32[$25362 + 4 >> 2] = 1048780;
 HEAP32[$7038 >> 2] = 63422;
 HEAP16[$1733 >> 1] = 947;
 HEAP16[$7039 >> 1] = 437;
 HEAP16[$7040 >> 1] = 32;
 HEAP16[$7041 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1732, $1733);
 $25366 = $1734;
 HEAP32[$25366 >> 2] = 28508935;
 HEAP32[$25366 + 4 >> 2] = 1048780;
 HEAP32[$7042 >> 2] = 63422;
 HEAP16[$1735 >> 1] = 775;
 HEAP16[$7043 >> 1] = 450;
 HEAP16[$7044 >> 1] = 1;
 HEAP16[$7045 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1734, $1735);
 $25370 = $1736;
 HEAP32[$25370 >> 2] = 28508935;
 HEAP32[$25370 + 4 >> 2] = 1048780;
 HEAP32[$7046 >> 2] = 63422;
 HEAP16[$1737 >> 1] = 792;
 HEAP16[$7047 >> 1] = 450;
 HEAP16[$7048 >> 1] = 187;
 HEAP16[$7049 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1736, $1737);
 $25374 = $1738;
 HEAP32[$25374 >> 2] = 29885191;
 HEAP32[$25374 + 4 >> 2] = 1048780;
 HEAP32[$7050 >> 2] = 63422;
 HEAP16[$1739 >> 1] = 775;
 HEAP16[$7051 >> 1] = 456;
 HEAP16[$7052 >> 1] = 1;
 HEAP16[$7053 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1738, $1739);
 $25378 = $1740;
 HEAP32[$25378 >> 2] = 29885191;
 HEAP32[$25378 + 4 >> 2] = 1048780;
 HEAP32[$7054 >> 2] = 63422;
 HEAP16[$1741 >> 1] = 792;
 HEAP16[$7055 >> 1] = 456;
 HEAP16[$7056 >> 1] = 187;
 HEAP16[$7057 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1740, $1741);
 $25382 = $1742;
 HEAP32[$25382 >> 2] = 29885191;
 HEAP32[$25382 + 4 >> 2] = 1048780;
 HEAP32[$7058 >> 2] = 63422;
 HEAP16[$1743 >> 1] = 775;
 HEAP16[$7059 >> 1] = 458;
 HEAP16[$7060 >> 1] = 1;
 HEAP16[$7061 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1742, $1743);
 $25386 = $1744;
 HEAP32[$25386 >> 2] = 29885191;
 HEAP32[$25386 + 4 >> 2] = 1048780;
 HEAP32[$7062 >> 2] = 63422;
 HEAP16[$1745 >> 1] = 792;
 HEAP16[$7063 >> 1] = 458;
 HEAP16[$7064 >> 1] = 3;
 HEAP16[$7065 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1744, $1745);
 $25390 = $1746;
 HEAP32[$25390 >> 2] = 29885191;
 HEAP32[$25390 + 4 >> 2] = 1048780;
 HEAP32[$7066 >> 2] = 63422;
 HEAP16[$1747 >> 1] = 929;
 HEAP16[$7067 >> 1] = 458;
 HEAP16[$7068 >> 1] = 50;
 HEAP16[$7069 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1746, $1747);
 $25394 = $1748;
 HEAP32[$25394 >> 2] = 29885191;
 HEAP32[$25394 + 4 >> 2] = 1048780;
 HEAP32[$7070 >> 2] = 63422;
 HEAP16[$1749 >> 1] = 775;
 HEAP16[$7071 >> 1] = 471;
 HEAP16[$7072 >> 1] = 1;
 HEAP16[$7073 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1748, $1749);
 $25398 = $1750;
 HEAP32[$25398 >> 2] = 29885191;
 HEAP32[$25398 + 4 >> 2] = 1048780;
 HEAP32[$7074 >> 2] = 63422;
 HEAP16[$1751 >> 1] = 792;
 HEAP16[$7075 >> 1] = 471;
 HEAP16[$7076 >> 1] = 187;
 HEAP16[$7077 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1750, $1751);
 $25402 = $1752;
 HEAP32[$25402 >> 2] = 31261447;
 HEAP32[$25402 + 4 >> 2] = 1048780;
 HEAP32[$7078 >> 2] = 63422;
 HEAP16[$1753 >> 1] = 775;
 HEAP16[$7079 >> 1] = 477;
 HEAP16[$7080 >> 1] = 1;
 HEAP16[$7081 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1752, $1753);
 $25406 = $1754;
 HEAP32[$25406 >> 2] = 31261447;
 HEAP32[$25406 + 4 >> 2] = 1048780;
 HEAP32[$7082 >> 2] = 63422;
 HEAP16[$1755 >> 1] = 792;
 HEAP16[$7083 >> 1] = 477;
 HEAP16[$7084 >> 1] = 187;
 HEAP16[$7085 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1754, $1755);
 $25410 = $1756;
 HEAP32[$25410 >> 2] = 31261447;
 HEAP32[$25410 + 4 >> 2] = 1048780;
 HEAP32[$7086 >> 2] = 63422;
 HEAP16[$1757 >> 1] = 775;
 HEAP16[$7087 >> 1] = 479;
 HEAP16[$7088 >> 1] = 1;
 HEAP16[$7089 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1756, $1757);
 $25414 = $1758;
 HEAP32[$25414 >> 2] = 31261447;
 HEAP32[$25414 + 4 >> 2] = 1048780;
 HEAP32[$7090 >> 2] = 63422;
 HEAP16[$1759 >> 1] = 792;
 HEAP16[$7091 >> 1] = 479;
 HEAP16[$7092 >> 1] = 3;
 HEAP16[$7093 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1758, $1759);
 $25418 = $1760;
 HEAP32[$25418 >> 2] = 31261447;
 HEAP32[$25418 + 4 >> 2] = 1048780;
 HEAP32[$7094 >> 2] = 63422;
 HEAP16[$1761 >> 1] = 949;
 HEAP16[$7095 >> 1] = 479;
 HEAP16[$7096 >> 1] = 30;
 HEAP16[$7097 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1760, $1761);
 $25422 = $1762;
 HEAP32[$25422 >> 2] = 31261447;
 HEAP32[$25422 + 4 >> 2] = 1048780;
 HEAP32[$7098 >> 2] = 63422;
 HEAP16[$1763 >> 1] = 775;
 HEAP16[$7099 >> 1] = 492;
 HEAP16[$7100 >> 1] = 1;
 HEAP16[$7101 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1762, $1763);
 $25426 = $1764;
 HEAP32[$25426 >> 2] = 31261447;
 HEAP32[$25426 + 4 >> 2] = 1048780;
 HEAP32[$7102 >> 2] = 63422;
 HEAP16[$1765 >> 1] = 792;
 HEAP16[$7103 >> 1] = 492;
 HEAP16[$7104 >> 1] = 187;
 HEAP16[$7105 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1764, $1765);
 $25430 = $1766;
 HEAP32[$25430 >> 2] = 32637703;
 HEAP32[$25430 + 4 >> 2] = 1704140;
 HEAP32[$7106 >> 2] = 63422;
 HEAP16[$1767 >> 1] = 775;
 HEAP16[$7107 >> 1] = 498;
 HEAP16[$7108 >> 1] = 1;
 HEAP16[$7109 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1766, $1767);
 $25434 = $1768;
 HEAP32[$25434 >> 2] = 32637703;
 HEAP32[$25434 + 4 >> 2] = 1704140;
 HEAP32[$7110 >> 2] = 63422;
 HEAP16[$1769 >> 1] = 792;
 HEAP16[$7111 >> 1] = 498;
 HEAP16[$7112 >> 1] = 3;
 HEAP16[$7113 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1768, $1769);
 $25438 = $1770;
 HEAP32[$25438 >> 2] = 32637703;
 HEAP32[$25438 + 4 >> 2] = 1704140;
 HEAP32[$7114 >> 2] = 63422;
 HEAP16[$1771 >> 1] = 967;
 HEAP16[$7115 >> 1] = 498;
 HEAP16[$7116 >> 1] = 12;
 HEAP16[$7117 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1770, $1771);
 $25442 = $1772;
 HEAP32[$25442 >> 2] = 32637703;
 HEAP32[$25442 + 4 >> 2] = 1704140;
 HEAP32[$7118 >> 2] = 63422;
 HEAP16[$1773 >> 1] = 775;
 HEAP16[$7119 >> 1] = 514;
 HEAP16[$7120 >> 1] = 20;
 HEAP16[$7121 >> 1] = 10;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1772, $1773);
 $25446 = $1774;
 HEAP32[$25446 >> 2] = 32637703;
 HEAP32[$25446 + 4 >> 2] = 1704140;
 HEAP32[$7122 >> 2] = 63422;
 HEAP16[$1775 >> 1] = 967;
 HEAP16[$7123 >> 1] = 514;
 HEAP16[$7124 >> 1] = 12;
 HEAP16[$7125 >> 1] = 10;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1774, $1775);
 $25450 = $1776;
 HEAP32[$25450 >> 2] = 34669319;
 HEAP32[$25450 + 4 >> 2] = 2556108;
 HEAP32[$7126 >> 2] = 63422;
 HEAP16[$1777 >> 1] = 775;
 HEAP16[$7127 >> 1] = 529;
 HEAP16[$7128 >> 1] = 1;
 HEAP16[$7129 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1776, $1777);
 $25454 = $1778;
 HEAP32[$25454 >> 2] = 34669319;
 HEAP32[$25454 + 4 >> 2] = 2556108;
 HEAP32[$7130 >> 2] = 63422;
 HEAP16[$1779 >> 1] = 792;
 HEAP16[$7131 >> 1] = 529;
 HEAP16[$7132 >> 1] = 3;
 HEAP16[$7133 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1778, $1779);
 $25458 = $1780;
 HEAP32[$25458 >> 2] = 34669319;
 HEAP32[$25458 + 4 >> 2] = 2556108;
 HEAP32[$7134 >> 2] = 63422;
 HEAP16[$1781 >> 1] = 953;
 HEAP16[$7135 >> 1] = 529;
 HEAP16[$7136 >> 1] = 26;
 HEAP16[$7137 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1780, $1781);
 $25462 = $1782;
 HEAP32[$25462 >> 2] = 34669319;
 HEAP32[$25462 + 4 >> 2] = 2556108;
 HEAP32[$7138 >> 2] = 63422;
 HEAP16[$1783 >> 1] = 775;
 HEAP16[$7139 >> 1] = 545;
 HEAP16[$7140 >> 1] = 20;
 HEAP16[$7141 >> 1] = 23;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1782, $1783);
 $25466 = $1784;
 HEAP32[$25466 >> 2] = 34669319;
 HEAP32[$25466 + 4 >> 2] = 2556108;
 HEAP32[$7142 >> 2] = 63422;
 HEAP16[$1785 >> 1] = 953;
 HEAP16[$7143 >> 1] = 545;
 HEAP16[$7144 >> 1] = 26;
 HEAP16[$7145 >> 1] = 23;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1784, $1785);
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 795;
 HEAP16[$7146 >> 1] = 529;
 HEAP16[$7147 >> 1] = 952;
 HEAP16[$7148 >> 1] = 567;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 12532) label = 3380; else {
  $25472 = HEAP32[915090] | 0;
  if (($25472 | 0) == (HEAP32[915088] | 0)) label = 3380; else {
   $$lcssa$i$i4355 = 3660360;
   $$lcssa8$i$i4354 = $25472;
   label = 3381;
  }
 }
 do if ((label | 0) == 3380) {
  if ((HEAP32[915097] | 0) >>> 0 >= 12532) {
   $25479 = HEAP32[915096] | 0;
   if (($25479 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4355 = 3660384;
    $$lcssa8$i$i4354 = $25479;
    label = 3381;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 12532) {
   $25484 = HEAP32[915102] | 0;
   if (($25484 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4355 = 3660408;
    $$lcssa8$i$i4354 = $25484;
    label = 3381;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 12532) {
   $25489 = HEAP32[915108] | 0;
   if (($25489 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4355 = 3660432;
    $$lcssa8$i$i4354 = $25489;
    label = 3381;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 12532) {
   $25494 = HEAP32[915114] | 0;
   if (($25494 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4355 = 3660456;
    $$lcssa8$i$i4354 = $25494;
    label = 3381;
    break;
   }
  }
  $$3$i$i4356 = __Znwj(12532) | 0;
 } while (0);
 if ((label | 0) == 3381) {
  $25477 = $$lcssa8$i$i4354 + -4 | 0;
  HEAP32[$$lcssa$i$i4355 >> 2] = $25477;
  $$3$i$i4356 = HEAP32[$25477 >> 2] | 0;
 }
 $25498 = $$3$i$i4356 + 52 | 0;
 HEAP16[$$3$i$i4356 >> 1] = 160;
 HEAP16[$$3$i$i4356 + 2 >> 1] = 39;
 HEAP8[$$3$i$i4356 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4356 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4356 + 8 >> 2] = 320;
 HEAP32[$$3$i$i4356 + 12 >> 2] = 12480;
 HEAP32[$$3$i$i4356 + 16 >> 2] = $25498;
 HEAP32[$$3$i$i4356 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4356 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4356 + 48 >> 0] = 0;
 HEAP32[$1786 >> 2] = $$3$i$i4356;
 _memcpy($25498 | 0, 2258122, 320) | 0;
 _memcpy($$3$i$i4356 + 372 | 0, 2258442, 320) | 0;
 _memcpy($$3$i$i4356 + 692 | 0, 2258762, 320) | 0;
 _memcpy($$3$i$i4356 + 1012 | 0, 2259082, 320) | 0;
 _memcpy($$3$i$i4356 + 1332 | 0, 2259402, 320) | 0;
 _memcpy($$3$i$i4356 + 1652 | 0, 2259722, 320) | 0;
 _memcpy($$3$i$i4356 + 1972 | 0, 2260042, 320) | 0;
 _memcpy($$3$i$i4356 + 2292 | 0, 2260362, 320) | 0;
 _memcpy($$3$i$i4356 + 2612 | 0, 2260682, 320) | 0;
 _memcpy($$3$i$i4356 + 2932 | 0, 2261002, 320) | 0;
 _memcpy($$3$i$i4356 + 3252 | 0, 2261322, 320) | 0;
 _memcpy($$3$i$i4356 + 3572 | 0, 2261642, 320) | 0;
 _memcpy($$3$i$i4356 + 3892 | 0, 2261962, 320) | 0;
 _memcpy($$3$i$i4356 + 4212 | 0, 2262282, 320) | 0;
 _memcpy($$3$i$i4356 + 4532 | 0, 2262602, 320) | 0;
 _memcpy($$3$i$i4356 + 4852 | 0, 2262922, 320) | 0;
 _memcpy($$3$i$i4356 + 5172 | 0, 2263242, 320) | 0;
 _memcpy($$3$i$i4356 + 5492 | 0, 2263562, 320) | 0;
 _memcpy($$3$i$i4356 + 5812 | 0, 2263882, 320) | 0;
 _memcpy($$3$i$i4356 + 6132 | 0, 2264202, 320) | 0;
 _memcpy($$3$i$i4356 + 6452 | 0, 2264522, 320) | 0;
 _memcpy($$3$i$i4356 + 6772 | 0, 2264842, 320) | 0;
 _memcpy($$3$i$i4356 + 7092 | 0, 2265162, 320) | 0;
 _memcpy($$3$i$i4356 + 7412 | 0, 2265482, 320) | 0;
 _memcpy($$3$i$i4356 + 7732 | 0, 2265802, 320) | 0;
 _memcpy($$3$i$i4356 + 8052 | 0, 2266122, 320) | 0;
 _memcpy($$3$i$i4356 + 8372 | 0, 2266442, 320) | 0;
 _memcpy($$3$i$i4356 + 8692 | 0, 2266762, 320) | 0;
 _memcpy($$3$i$i4356 + 9012 | 0, 2267082, 320) | 0;
 _memcpy($$3$i$i4356 + 9332 | 0, 2267402, 320) | 0;
 _memcpy($$3$i$i4356 + 9652 | 0, 2267722, 320) | 0;
 _memcpy($$3$i$i4356 + 9972 | 0, 2268042, 320) | 0;
 _memcpy($$3$i$i4356 + 10292 | 0, 2268362, 320) | 0;
 _memcpy($$3$i$i4356 + 10612 | 0, 2268682, 320) | 0;
 _memcpy($$3$i$i4356 + 10932 | 0, 2269002, 320) | 0;
 _memcpy($$3$i$i4356 + 11252 | 0, 2269322, 320) | 0;
 _memcpy($$3$i$i4356 + 11572 | 0, 2269642, 320) | 0;
 _memcpy($$3$i$i4356 + 11892 | 0, 2269962, 320) | 0;
 _memcpy($$3$i$i4356 + 12212 | 0, 2270282, 320) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1786);
 if ($$3$i$i4356 | 0) {
  $25547 = $$3$i$i4356 + 5 | 0;
  $25549 = (HEAP8[$25547 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$25547 >> 0] = $25549;
  if (!($25549 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4356);
  HEAP32[$1786 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 776;
 HEAP16[$7149 >> 1] = 498;
 HEAP16[$7150 >> 1] = 966;
 HEAP16[$7151 >> 1] = 523;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 10036) label = 3396; else {
  $25553 = HEAP32[915090] | 0;
  if (($25553 | 0) == (HEAP32[915088] | 0)) label = 3396; else {
   $$lcssa$i$i4343 = 3660360;
   $$lcssa8$i$i4342 = $25553;
   label = 3397;
  }
 }
 do if ((label | 0) == 3396) {
  if ((HEAP32[915097] | 0) >>> 0 >= 10036) {
   $25560 = HEAP32[915096] | 0;
   if (($25560 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4343 = 3660384;
    $$lcssa8$i$i4342 = $25560;
    label = 3397;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 10036) {
   $25565 = HEAP32[915102] | 0;
   if (($25565 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4343 = 3660408;
    $$lcssa8$i$i4342 = $25565;
    label = 3397;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 10036) {
   $25570 = HEAP32[915108] | 0;
   if (($25570 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4343 = 3660432;
    $$lcssa8$i$i4342 = $25570;
    label = 3397;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 10036) {
   $25575 = HEAP32[915114] | 0;
   if (($25575 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4343 = 3660456;
    $$lcssa8$i$i4342 = $25575;
    label = 3397;
    break;
   }
  }
  $$3$i$i4344 = __Znwj(10036) | 0;
 } while (0);
 if ((label | 0) == 3397) {
  $25558 = $$lcssa8$i$i4342 + -4 | 0;
  HEAP32[$$lcssa$i$i4343 >> 2] = $25558;
  $$3$i$i4344 = HEAP32[$25558 >> 2] | 0;
 }
 $25579 = $$3$i$i4344 + 52 | 0;
 HEAP16[$$3$i$i4344 >> 1] = 192;
 HEAP16[$$3$i$i4344 + 2 >> 1] = 26;
 HEAP8[$$3$i$i4344 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4344 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4344 + 8 >> 2] = 384;
 HEAP32[$$3$i$i4344 + 12 >> 2] = 9984;
 HEAP32[$$3$i$i4344 + 16 >> 2] = $25579;
 HEAP32[$$3$i$i4344 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4344 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4344 + 48 >> 0] = 0;
 HEAP32[$1787 >> 2] = $$3$i$i4344;
 _memcpy($25579 | 0, 2270602, 384) | 0;
 _memcpy($$3$i$i4344 + 436 | 0, 2270986, 384) | 0;
 _memcpy($$3$i$i4344 + 820 | 0, 2271370, 384) | 0;
 _memcpy($$3$i$i4344 + 1204 | 0, 2271754, 384) | 0;
 _memcpy($$3$i$i4344 + 1588 | 0, 2272138, 384) | 0;
 _memcpy($$3$i$i4344 + 1972 | 0, 2272522, 384) | 0;
 _memcpy($$3$i$i4344 + 2356 | 0, 2272906, 384) | 0;
 _memcpy($$3$i$i4344 + 2740 | 0, 2273290, 384) | 0;
 _memcpy($$3$i$i4344 + 3124 | 0, 2273674, 384) | 0;
 _memcpy($$3$i$i4344 + 3508 | 0, 2274058, 384) | 0;
 _memcpy($$3$i$i4344 + 3892 | 0, 2274442, 384) | 0;
 _memcpy($$3$i$i4344 + 4276 | 0, 2274826, 384) | 0;
 _memcpy($$3$i$i4344 + 4660 | 0, 2275210, 384) | 0;
 _memcpy($$3$i$i4344 + 5044 | 0, 2275594, 384) | 0;
 _memcpy($$3$i$i4344 + 5428 | 0, 2275978, 384) | 0;
 _memcpy($$3$i$i4344 + 5812 | 0, 2276362, 384) | 0;
 _memcpy($$3$i$i4344 + 6196 | 0, 2276746, 384) | 0;
 _memcpy($$3$i$i4344 + 6580 | 0, 2277130, 384) | 0;
 _memcpy($$3$i$i4344 + 6964 | 0, 2277514, 384) | 0;
 _memcpy($$3$i$i4344 + 7348 | 0, 2277898, 384) | 0;
 _memcpy($$3$i$i4344 + 7732 | 0, 2278282, 384) | 0;
 _memcpy($$3$i$i4344 + 8116 | 0, 2278666, 384) | 0;
 _memcpy($$3$i$i4344 + 8500 | 0, 2279050, 384) | 0;
 _memcpy($$3$i$i4344 + 8884 | 0, 2279434, 384) | 0;
 _memcpy($$3$i$i4344 + 9268 | 0, 2279818, 384) | 0;
 _memcpy($$3$i$i4344 + 9652 | 0, 2280202, 384) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1787);
 if ($$3$i$i4344 | 0) {
  $25615 = $$3$i$i4344 + 5 | 0;
  $25617 = (HEAP8[$25615 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$25615 >> 0] = $25617;
  if (!($25617 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4344);
  HEAP32[$1787 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 776;
 HEAP16[$7152 >> 1] = 477;
 HEAP16[$7153 >> 1] = 948;
 HEAP16[$7154 >> 1] = 492;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 5684) label = 3412; else {
  $25621 = HEAP32[915090] | 0;
  if (($25621 | 0) == (HEAP32[915088] | 0)) label = 3412; else {
   $$lcssa$i$i4331 = 3660360;
   $$lcssa8$i$i4330 = $25621;
   label = 3413;
  }
 }
 do if ((label | 0) == 3412) {
  if ((HEAP32[915097] | 0) >>> 0 >= 5684) {
   $25628 = HEAP32[915096] | 0;
   if (($25628 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4331 = 3660384;
    $$lcssa8$i$i4330 = $25628;
    label = 3413;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 5684) {
   $25633 = HEAP32[915102] | 0;
   if (($25633 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4331 = 3660408;
    $$lcssa8$i$i4330 = $25633;
    label = 3413;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 5684) {
   $25638 = HEAP32[915108] | 0;
   if (($25638 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4331 = 3660432;
    $$lcssa8$i$i4330 = $25638;
    label = 3413;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 5684) {
   $25643 = HEAP32[915114] | 0;
   if (($25643 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4331 = 3660456;
    $$lcssa8$i$i4330 = $25643;
    label = 3413;
    break;
   }
  }
  $$3$i$i4332 = __Znwj(5684) | 0;
 } while (0);
 if ((label | 0) == 3413) {
  $25626 = $$lcssa8$i$i4330 + -4 | 0;
  HEAP32[$$lcssa$i$i4331 >> 2] = $25626;
  $$3$i$i4332 = HEAP32[$25626 >> 2] | 0;
 }
 $25647 = $$3$i$i4332 + 52 | 0;
 HEAP16[$$3$i$i4332 >> 1] = 176;
 HEAP16[$$3$i$i4332 + 2 >> 1] = 16;
 HEAP8[$$3$i$i4332 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4332 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4332 + 8 >> 2] = 352;
 HEAP32[$$3$i$i4332 + 12 >> 2] = 5632;
 HEAP32[$$3$i$i4332 + 16 >> 2] = $25647;
 HEAP32[$$3$i$i4332 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4332 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4332 + 48 >> 0] = 0;
 HEAP32[$1788 >> 2] = $$3$i$i4332;
 _memcpy($25647 | 0, 2280586, 352) | 0;
 _memcpy($$3$i$i4332 + 404 | 0, 2280938, 352) | 0;
 _memcpy($$3$i$i4332 + 756 | 0, 2281290, 352) | 0;
 _memcpy($$3$i$i4332 + 1108 | 0, 2281642, 352) | 0;
 _memcpy($$3$i$i4332 + 1460 | 0, 2281994, 352) | 0;
 _memcpy($$3$i$i4332 + 1812 | 0, 2282346, 352) | 0;
 _memcpy($$3$i$i4332 + 2164 | 0, 2282698, 352) | 0;
 _memcpy($$3$i$i4332 + 2516 | 0, 2283050, 352) | 0;
 _memcpy($$3$i$i4332 + 2868 | 0, 2283402, 352) | 0;
 _memcpy($$3$i$i4332 + 3220 | 0, 2283754, 352) | 0;
 _memcpy($$3$i$i4332 + 3572 | 0, 2284106, 352) | 0;
 _memcpy($$3$i$i4332 + 3924 | 0, 2284458, 352) | 0;
 _memcpy($$3$i$i4332 + 4276 | 0, 2284810, 352) | 0;
 _memcpy($$3$i$i4332 + 4628 | 0, 2285162, 352) | 0;
 _memcpy($$3$i$i4332 + 4980 | 0, 2285514, 352) | 0;
 _memcpy($$3$i$i4332 + 5332 | 0, 2285866, 352) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1788);
 if ($$3$i$i4332 | 0) {
  $25673 = $$3$i$i4332 + 5 | 0;
  $25675 = (HEAP8[$25673 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$25673 >> 0] = $25675;
  if (!($25675 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4332);
  HEAP32[$1788 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 776;
 HEAP16[$7155 >> 1] = 457;
 HEAP16[$7156 >> 1] = 928;
 HEAP16[$7157 >> 1] = 471;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4732) label = 3428; else {
  $25679 = HEAP32[915090] | 0;
  if (($25679 | 0) == (HEAP32[915088] | 0)) label = 3428; else {
   $$lcssa$i$i4319 = 3660360;
   $$lcssa8$i$i4318 = $25679;
   label = 3429;
  }
 }
 do if ((label | 0) == 3428) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4732) {
   $25686 = HEAP32[915096] | 0;
   if (($25686 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4319 = 3660384;
    $$lcssa8$i$i4318 = $25686;
    label = 3429;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4732) {
   $25691 = HEAP32[915102] | 0;
   if (($25691 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4319 = 3660408;
    $$lcssa8$i$i4318 = $25691;
    label = 3429;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4732) {
   $25696 = HEAP32[915108] | 0;
   if (($25696 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4319 = 3660432;
    $$lcssa8$i$i4318 = $25696;
    label = 3429;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4732) {
   $25701 = HEAP32[915114] | 0;
   if (($25701 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4319 = 3660456;
    $$lcssa8$i$i4318 = $25701;
    label = 3429;
    break;
   }
  }
  $$3$i$i4320 = __Znwj(4732) | 0;
 } while (0);
 if ((label | 0) == 3429) {
  $25684 = $$lcssa8$i$i4318 + -4 | 0;
  HEAP32[$$lcssa$i$i4319 >> 2] = $25684;
  $$3$i$i4320 = HEAP32[$25684 >> 2] | 0;
 }
 $25705 = $$3$i$i4320 + 52 | 0;
 HEAP16[$$3$i$i4320 >> 1] = 156;
 HEAP16[$$3$i$i4320 + 2 >> 1] = 15;
 HEAP8[$$3$i$i4320 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4320 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4320 + 8 >> 2] = 312;
 HEAP32[$$3$i$i4320 + 12 >> 2] = 4680;
 HEAP32[$$3$i$i4320 + 16 >> 2] = $25705;
 HEAP32[$$3$i$i4320 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4320 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4320 + 48 >> 0] = 0;
 HEAP32[$1789 >> 2] = $$3$i$i4320;
 _memcpy($25705 | 0, 2286218, 312) | 0;
 _memcpy($$3$i$i4320 + 364 | 0, 2286530, 312) | 0;
 _memcpy($$3$i$i4320 + 676 | 0, 2286842, 312) | 0;
 _memcpy($$3$i$i4320 + 988 | 0, 2287154, 312) | 0;
 _memcpy($$3$i$i4320 + 1300 | 0, 2287466, 312) | 0;
 _memcpy($$3$i$i4320 + 1612 | 0, 2287778, 312) | 0;
 _memcpy($$3$i$i4320 + 1924 | 0, 2288090, 312) | 0;
 _memcpy($$3$i$i4320 + 2236 | 0, 2288402, 312) | 0;
 _memcpy($$3$i$i4320 + 2548 | 0, 2288714, 312) | 0;
 _memcpy($$3$i$i4320 + 2860 | 0, 2289026, 312) | 0;
 _memcpy($$3$i$i4320 + 3172 | 0, 2289338, 312) | 0;
 _memcpy($$3$i$i4320 + 3484 | 0, 2289650, 312) | 0;
 _memcpy($$3$i$i4320 + 3796 | 0, 2289962, 312) | 0;
 _memcpy($$3$i$i4320 + 4108 | 0, 2290274, 312) | 0;
 _memcpy($$3$i$i4320 + 4420 | 0, 2290586, 312) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1789);
 if ($$3$i$i4320 | 0) {
  $25730 = $$3$i$i4320 + 5 | 0;
  $25732 = (HEAP8[$25730 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$25730 >> 0] = $25732;
  if (!($25732 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4320);
  HEAP32[$1789 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 222;
 HEAP16[$7158 >> 1] = 430;
 HEAP16[$7159 >> 1] = 791;
 HEAP16[$7160 >> 1] = 452;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 26364) label = 3444; else {
  $25736 = HEAP32[915090] | 0;
  if (($25736 | 0) == (HEAP32[915088] | 0)) label = 3444; else {
   $$lcssa$i$i4307 = 3660360;
   $$lcssa8$i$i4306 = $25736;
   label = 3445;
  }
 }
 do if ((label | 0) == 3444) {
  if ((HEAP32[915097] | 0) >>> 0 >= 26364) {
   $25743 = HEAP32[915096] | 0;
   if (($25743 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4307 = 3660384;
    $$lcssa8$i$i4306 = $25743;
    label = 3445;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 26364) {
   $25748 = HEAP32[915102] | 0;
   if (($25748 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4307 = 3660408;
    $$lcssa8$i$i4306 = $25748;
    label = 3445;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 26364) {
   $25753 = HEAP32[915108] | 0;
   if (($25753 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4307 = 3660432;
    $$lcssa8$i$i4306 = $25753;
    label = 3445;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 26364) {
   $25758 = HEAP32[915114] | 0;
   if (($25758 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4307 = 3660456;
    $$lcssa8$i$i4306 = $25758;
    label = 3445;
    break;
   }
  }
  $$3$i$i4308 = __Znwj(26364) | 0;
 } while (0);
 if ((label | 0) == 3445) {
  $25741 = $$lcssa8$i$i4306 + -4 | 0;
  HEAP32[$$lcssa$i$i4307 >> 2] = $25741;
  $$3$i$i4308 = HEAP32[$25741 >> 2] | 0;
 }
 $25762 = $$3$i$i4308 + 52 | 0;
 HEAP16[$$3$i$i4308 >> 1] = 572;
 HEAP16[$$3$i$i4308 + 2 >> 1] = 23;
 HEAP8[$$3$i$i4308 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4308 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4308 + 8 >> 2] = 1144;
 HEAP32[$$3$i$i4308 + 12 >> 2] = 26312;
 HEAP32[$$3$i$i4308 + 16 >> 2] = $25762;
 HEAP32[$$3$i$i4308 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4308 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4308 + 48 >> 0] = 0;
 HEAP32[$1790 >> 2] = $$3$i$i4308;
 _memcpy($25762 | 0, 2290898, 1144) | 0;
 _memcpy($$3$i$i4308 + 1196 | 0, 2292042, 1144) | 0;
 _memcpy($$3$i$i4308 + 2340 | 0, 2293186, 1144) | 0;
 _memcpy($$3$i$i4308 + 3484 | 0, 2294330, 1144) | 0;
 _memcpy($$3$i$i4308 + 4628 | 0, 2295474, 1144) | 0;
 _memcpy($$3$i$i4308 + 5772 | 0, 2296618, 1144) | 0;
 _memcpy($$3$i$i4308 + 6916 | 0, 2297762, 1144) | 0;
 _memcpy($$3$i$i4308 + 8060 | 0, 2298906, 1144) | 0;
 _memcpy($$3$i$i4308 + 9204 | 0, 2300050, 1144) | 0;
 _memcpy($$3$i$i4308 + 10348 | 0, 2301194, 1144) | 0;
 _memcpy($$3$i$i4308 + 11492 | 0, 2302338, 1144) | 0;
 _memcpy($$3$i$i4308 + 12636 | 0, 2303482, 1144) | 0;
 _memcpy($$3$i$i4308 + 13780 | 0, 2304626, 1144) | 0;
 _memcpy($$3$i$i4308 + 14924 | 0, 2305770, 1144) | 0;
 _memcpy($$3$i$i4308 + 16068 | 0, 2306914, 1144) | 0;
 _memcpy($$3$i$i4308 + 17212 | 0, 2308058, 1144) | 0;
 _memcpy($$3$i$i4308 + 18356 | 0, 2309202, 1144) | 0;
 _memcpy($$3$i$i4308 + 19500 | 0, 2310346, 1144) | 0;
 _memcpy($$3$i$i4308 + 20644 | 0, 2311490, 1144) | 0;
 _memcpy($$3$i$i4308 + 21788 | 0, 2312634, 1144) | 0;
 _memcpy($$3$i$i4308 + 22932 | 0, 2313778, 1144) | 0;
 _memcpy($$3$i$i4308 + 24076 | 0, 2314922, 1144) | 0;
 _memcpy($$3$i$i4308 + 25220 | 0, 2316066, 1144) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1790);
 if ($$3$i$i4308 | 0) {
  $25795 = $$3$i$i4308 + 5 | 0;
  $25797 = (HEAP8[$25795 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$25795 >> 0] = $25797;
  if (!($25797 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4308);
  HEAP32[$1790 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 222;
 HEAP16[$7161 >> 1] = 453;
 HEAP16[$7162 >> 1] = 791;
 HEAP16[$7163 >> 1] = 456;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4628) label = 3460; else {
  $25801 = HEAP32[915090] | 0;
  if (($25801 | 0) == (HEAP32[915088] | 0)) label = 3460; else {
   $$lcssa$i$i4295 = 3660360;
   $$lcssa8$i$i4294 = $25801;
   label = 3461;
  }
 }
 do if ((label | 0) == 3460) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4628) {
   $25808 = HEAP32[915096] | 0;
   if (($25808 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4295 = 3660384;
    $$lcssa8$i$i4294 = $25808;
    label = 3461;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4628) {
   $25813 = HEAP32[915102] | 0;
   if (($25813 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4295 = 3660408;
    $$lcssa8$i$i4294 = $25813;
    label = 3461;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4628) {
   $25818 = HEAP32[915108] | 0;
   if (($25818 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4295 = 3660432;
    $$lcssa8$i$i4294 = $25818;
    label = 3461;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4628) {
   $25823 = HEAP32[915114] | 0;
   if (($25823 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4295 = 3660456;
    $$lcssa8$i$i4294 = $25823;
    label = 3461;
    break;
   }
  }
  $$3$i$i4296 = __Znwj(4628) | 0;
 } while (0);
 if ((label | 0) == 3461) {
  $25806 = $$lcssa8$i$i4294 + -4 | 0;
  HEAP32[$$lcssa$i$i4295 >> 2] = $25806;
  $$3$i$i4296 = HEAP32[$25806 >> 2] | 0;
 }
 $25827 = $$3$i$i4296 + 52 | 0;
 HEAP16[$$3$i$i4296 >> 1] = 572;
 HEAP16[$$3$i$i4296 + 2 >> 1] = 4;
 HEAP8[$$3$i$i4296 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4296 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4296 + 8 >> 2] = 1144;
 HEAP32[$$3$i$i4296 + 12 >> 2] = 4576;
 HEAP32[$$3$i$i4296 + 16 >> 2] = $25827;
 HEAP32[$$3$i$i4296 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4296 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4296 + 48 >> 0] = 0;
 HEAP32[$1791 >> 2] = $$3$i$i4296;
 _memcpy($25827 | 0, 2317210, 1144) | 0;
 _memcpy($$3$i$i4296 + 1196 | 0, 2318354, 1144) | 0;
 _memcpy($$3$i$i4296 + 2340 | 0, 2319498, 1144) | 0;
 _memcpy($$3$i$i4296 + 3484 | 0, 2320642, 1144) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1791);
 if ($$3$i$i4296 | 0) {
  $25841 = $$3$i$i4296 + 5 | 0;
  $25843 = (HEAP8[$25841 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$25841 >> 0] = $25843;
  if (!($25843 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4296);
  HEAP32[$1791 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 795;
 HEAP16[$7164 >> 1] = 437;
 HEAP16[$7165 >> 1] = 946;
 HEAP16[$7166 >> 1] = 449;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4004) label = 3476; else {
  $25847 = HEAP32[915090] | 0;
  if (($25847 | 0) == (HEAP32[915088] | 0)) label = 3476; else {
   $$lcssa$i$i4283 = 3660360;
   $$lcssa8$i$i4282 = $25847;
   label = 3477;
  }
 }
 do if ((label | 0) == 3476) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4004) {
   $25854 = HEAP32[915096] | 0;
   if (($25854 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4283 = 3660384;
    $$lcssa8$i$i4282 = $25854;
    label = 3477;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4004) {
   $25859 = HEAP32[915102] | 0;
   if (($25859 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4283 = 3660408;
    $$lcssa8$i$i4282 = $25859;
    label = 3477;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4004) {
   $25864 = HEAP32[915108] | 0;
   if (($25864 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4283 = 3660432;
    $$lcssa8$i$i4282 = $25864;
    label = 3477;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4004) {
   $25869 = HEAP32[915114] | 0;
   if (($25869 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4283 = 3660456;
    $$lcssa8$i$i4282 = $25869;
    label = 3477;
    break;
   }
  }
  $$3$i$i4284 = __Znwj(4004) | 0;
 } while (0);
 if ((label | 0) == 3477) {
  $25852 = $$lcssa8$i$i4282 + -4 | 0;
  HEAP32[$$lcssa$i$i4283 >> 2] = $25852;
  $$3$i$i4284 = HEAP32[$25852 >> 2] | 0;
 }
 $25873 = $$3$i$i4284 + 52 | 0;
 HEAP16[$$3$i$i4284 >> 1] = 152;
 HEAP16[$$3$i$i4284 + 2 >> 1] = 13;
 HEAP8[$$3$i$i4284 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4284 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4284 + 8 >> 2] = 304;
 HEAP32[$$3$i$i4284 + 12 >> 2] = 3952;
 HEAP32[$$3$i$i4284 + 16 >> 2] = $25873;
 HEAP32[$$3$i$i4284 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4284 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4284 + 48 >> 0] = 0;
 HEAP32[$1792 >> 2] = $$3$i$i4284;
 _memcpy($25873 | 0, 2321786, 304) | 0;
 _memcpy($$3$i$i4284 + 356 | 0, 2322090, 304) | 0;
 _memcpy($$3$i$i4284 + 660 | 0, 2322394, 304) | 0;
 _memcpy($$3$i$i4284 + 964 | 0, 2322698, 304) | 0;
 _memcpy($$3$i$i4284 + 1268 | 0, 2323002, 304) | 0;
 _memcpy($$3$i$i4284 + 1572 | 0, 2323306, 304) | 0;
 _memcpy($$3$i$i4284 + 1876 | 0, 2323610, 304) | 0;
 _memcpy($$3$i$i4284 + 2180 | 0, 2323914, 304) | 0;
 _memcpy($$3$i$i4284 + 2484 | 0, 2324218, 304) | 0;
 _memcpy($$3$i$i4284 + 2788 | 0, 2324522, 304) | 0;
 _memcpy($$3$i$i4284 + 3092 | 0, 2324826, 304) | 0;
 _memcpy($$3$i$i4284 + 3396 | 0, 2325130, 304) | 0;
 _memcpy($$3$i$i4284 + 3700 | 0, 2325434, 304) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1792);
 if ($$3$i$i4284 | 0) {
  $25896 = $$3$i$i4284 + 5 | 0;
  $25898 = (HEAP8[$25896 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$25896 >> 0] = $25898;
  if (!($25898 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4284);
  HEAP32[$1792 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 769;
 HEAP16[$7167 >> 1] = 573;
 HEAP16[$7168 >> 1] = 994;
 HEAP16[$7169 >> 1] = 595;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 10540) label = 3492; else {
  $25902 = HEAP32[915090] | 0;
  if (($25902 | 0) == (HEAP32[915088] | 0)) label = 3492; else {
   $$lcssa$i$i4271 = 3660360;
   $$lcssa8$i$i4270 = $25902;
   label = 3493;
  }
 }
 do if ((label | 0) == 3492) {
  if ((HEAP32[915097] | 0) >>> 0 >= 10540) {
   $25909 = HEAP32[915096] | 0;
   if (($25909 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4271 = 3660384;
    $$lcssa8$i$i4270 = $25909;
    label = 3493;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 10540) {
   $25914 = HEAP32[915102] | 0;
   if (($25914 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4271 = 3660408;
    $$lcssa8$i$i4270 = $25914;
    label = 3493;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 10540) {
   $25919 = HEAP32[915108] | 0;
   if (($25919 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4271 = 3660432;
    $$lcssa8$i$i4270 = $25919;
    label = 3493;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 10540) {
   $25924 = HEAP32[915114] | 0;
   if (($25924 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4271 = 3660456;
    $$lcssa8$i$i4270 = $25924;
    label = 3493;
    break;
   }
  }
  $$3$i$i4272 = __Znwj(10540) | 0;
 } while (0);
 if ((label | 0) == 3493) {
  $25907 = $$lcssa8$i$i4270 + -4 | 0;
  HEAP32[$$lcssa$i$i4271 >> 2] = $25907;
  $$3$i$i4272 = HEAP32[$25907 >> 2] | 0;
 }
 $25928 = $$3$i$i4272 + 52 | 0;
 HEAP16[$$3$i$i4272 >> 1] = 228;
 HEAP16[$$3$i$i4272 + 2 >> 1] = 23;
 HEAP8[$$3$i$i4272 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4272 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4272 + 8 >> 2] = 456;
 HEAP32[$$3$i$i4272 + 12 >> 2] = 10488;
 HEAP32[$$3$i$i4272 + 16 >> 2] = $25928;
 HEAP32[$$3$i$i4272 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4272 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4272 + 48 >> 0] = 0;
 HEAP32[$1793 >> 2] = $$3$i$i4272;
 _memcpy($25928 | 0, 2325738, 456) | 0;
 _memcpy($$3$i$i4272 + 508 | 0, 2326194, 456) | 0;
 _memcpy($$3$i$i4272 + 964 | 0, 2326650, 456) | 0;
 _memcpy($$3$i$i4272 + 1420 | 0, 2327106, 456) | 0;
 _memcpy($$3$i$i4272 + 1876 | 0, 2327562, 456) | 0;
 _memcpy($$3$i$i4272 + 2332 | 0, 2328018, 456) | 0;
 _memcpy($$3$i$i4272 + 2788 | 0, 2328474, 456) | 0;
 _memcpy($$3$i$i4272 + 3244 | 0, 2328930, 456) | 0;
 _memcpy($$3$i$i4272 + 3700 | 0, 2329386, 456) | 0;
 _memcpy($$3$i$i4272 + 4156 | 0, 2329842, 456) | 0;
 _memcpy($$3$i$i4272 + 4612 | 0, 2330298, 456) | 0;
 _memcpy($$3$i$i4272 + 5068 | 0, 2330754, 456) | 0;
 _memcpy($$3$i$i4272 + 5524 | 0, 2331210, 456) | 0;
 _memcpy($$3$i$i4272 + 5980 | 0, 2331666, 456) | 0;
 _memcpy($$3$i$i4272 + 6436 | 0, 2332122, 456) | 0;
 _memcpy($$3$i$i4272 + 6892 | 0, 2332578, 456) | 0;
 _memcpy($$3$i$i4272 + 7348 | 0, 2333034, 456) | 0;
 _memcpy($$3$i$i4272 + 7804 | 0, 2333490, 456) | 0;
 _memcpy($$3$i$i4272 + 8260 | 0, 2333946, 456) | 0;
 _memcpy($$3$i$i4272 + 8716 | 0, 2334402, 456) | 0;
 _memcpy($$3$i$i4272 + 9172 | 0, 2334858, 456) | 0;
 _memcpy($$3$i$i4272 + 9628 | 0, 2335314, 456) | 0;
 _memcpy($$3$i$i4272 + 10084 | 0, 2335770, 456) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1793);
 if ($$3$i$i4272 | 0) {
  $25961 = $$3$i$i4272 + 5 | 0;
  $25963 = (HEAP8[$25961 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$25961 >> 0] = $25963;
  if (!($25963 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4272);
  HEAP32[$1793 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 769;
 HEAP16[$7170 >> 1] = 596;
 HEAP16[$7171 >> 1] = 994;
 HEAP16[$7172 >> 1] = 609;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6436) label = 3508; else {
  $25967 = HEAP32[915090] | 0;
  if (($25967 | 0) == (HEAP32[915088] | 0)) label = 3508; else {
   $$lcssa$i$i4259 = 3660360;
   $$lcssa8$i$i4258 = $25967;
   label = 3509;
  }
 }
 do if ((label | 0) == 3508) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6436) {
   $25974 = HEAP32[915096] | 0;
   if (($25974 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4259 = 3660384;
    $$lcssa8$i$i4258 = $25974;
    label = 3509;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6436) {
   $25979 = HEAP32[915102] | 0;
   if (($25979 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4259 = 3660408;
    $$lcssa8$i$i4258 = $25979;
    label = 3509;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6436) {
   $25984 = HEAP32[915108] | 0;
   if (($25984 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4259 = 3660432;
    $$lcssa8$i$i4258 = $25984;
    label = 3509;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6436) {
   $25989 = HEAP32[915114] | 0;
   if (($25989 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4259 = 3660456;
    $$lcssa8$i$i4258 = $25989;
    label = 3509;
    break;
   }
  }
  $$3$i$i4260 = __Znwj(6436) | 0;
 } while (0);
 if ((label | 0) == 3509) {
  $25972 = $$lcssa8$i$i4258 + -4 | 0;
  HEAP32[$$lcssa$i$i4259 >> 2] = $25972;
  $$3$i$i4260 = HEAP32[$25972 >> 2] | 0;
 }
 $25993 = $$3$i$i4260 + 52 | 0;
 HEAP16[$$3$i$i4260 >> 1] = 228;
 HEAP16[$$3$i$i4260 + 2 >> 1] = 14;
 HEAP8[$$3$i$i4260 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4260 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4260 + 8 >> 2] = 456;
 HEAP32[$$3$i$i4260 + 12 >> 2] = 6384;
 HEAP32[$$3$i$i4260 + 16 >> 2] = $25993;
 HEAP32[$$3$i$i4260 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4260 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4260 + 48 >> 0] = 0;
 HEAP32[$1794 >> 2] = $$3$i$i4260;
 _memcpy($25993 | 0, 2336226, 456) | 0;
 _memcpy($$3$i$i4260 + 508 | 0, 2336682, 456) | 0;
 _memcpy($$3$i$i4260 + 964 | 0, 2337138, 456) | 0;
 _memcpy($$3$i$i4260 + 1420 | 0, 2337594, 456) | 0;
 _memcpy($$3$i$i4260 + 1876 | 0, 2338050, 456) | 0;
 _memcpy($$3$i$i4260 + 2332 | 0, 2338506, 456) | 0;
 _memcpy($$3$i$i4260 + 2788 | 0, 2338962, 456) | 0;
 _memcpy($$3$i$i4260 + 3244 | 0, 2339418, 456) | 0;
 _memcpy($$3$i$i4260 + 3700 | 0, 2339874, 456) | 0;
 _memcpy($$3$i$i4260 + 4156 | 0, 2340330, 456) | 0;
 _memcpy($$3$i$i4260 + 4612 | 0, 2340786, 456) | 0;
 _memcpy($$3$i$i4260 + 5068 | 0, 2341242, 456) | 0;
 _memcpy($$3$i$i4260 + 5524 | 0, 2341698, 456) | 0;
 _memcpy($$3$i$i4260 + 5980 | 0, 2342154, 456) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1794);
 if ($$3$i$i4260 | 0) {
  $26017 = $$3$i$i4260 + 5 | 0;
  $26019 = (HEAP8[$26017 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26017 >> 0] = $26019;
  if (!($26019 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4260);
  HEAP32[$1794 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 984;
 HEAP16[$7173 >> 1] = 430;
 HEAP16[$7174 >> 1] = 994;
 HEAP16[$7175 >> 1] = 572;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 3484) label = 3524; else {
  $26023 = HEAP32[915090] | 0;
  if (($26023 | 0) == (HEAP32[915088] | 0)) label = 3524; else {
   $$lcssa$i$i4247 = 3660360;
   $$lcssa8$i$i4246 = $26023;
   label = 3525;
  }
 }
 do if ((label | 0) == 3524) {
  if ((HEAP32[915097] | 0) >>> 0 >= 3484) {
   $26030 = HEAP32[915096] | 0;
   if (($26030 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4247 = 3660384;
    $$lcssa8$i$i4246 = $26030;
    label = 3525;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 3484) {
   $26035 = HEAP32[915102] | 0;
   if (($26035 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4247 = 3660408;
    $$lcssa8$i$i4246 = $26035;
    label = 3525;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 3484) {
   $26040 = HEAP32[915108] | 0;
   if (($26040 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4247 = 3660432;
    $$lcssa8$i$i4246 = $26040;
    label = 3525;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 3484) {
   $26045 = HEAP32[915114] | 0;
   if (($26045 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4247 = 3660456;
    $$lcssa8$i$i4246 = $26045;
    label = 3525;
    break;
   }
  }
  $$3$i$i4248 = __Znwj(3484) | 0;
 } while (0);
 if ((label | 0) == 3525) {
  $26028 = $$lcssa8$i$i4246 + -4 | 0;
  HEAP32[$$lcssa$i$i4247 >> 2] = $26028;
  $$3$i$i4248 = HEAP32[$26028 >> 2] | 0;
 }
 $26049 = $$3$i$i4248 + 52 | 0;
 HEAP16[$$3$i$i4248 >> 1] = 12;
 HEAP16[$$3$i$i4248 + 2 >> 1] = 143;
 HEAP8[$$3$i$i4248 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4248 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4248 + 8 >> 2] = 24;
 HEAP32[$$3$i$i4248 + 12 >> 2] = 3432;
 HEAP32[$$3$i$i4248 + 16 >> 2] = $26049;
 HEAP32[$$3$i$i4248 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4248 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4248 + 48 >> 0] = 0;
 HEAP32[$1795 >> 2] = $$3$i$i4248;
 $dest$02$i4242 = $26049;
 $i$03$i4241 = 0;
 $src$01$i4243 = 2342610;
 while (1) {
  dest = $dest$02$i4242;
  src = $src$01$i4243;
  stop = dest + 24 | 0;
  do {
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
  } while ((dest | 0) < (stop | 0));
  $i$03$i4241 = $i$03$i4241 + 1 << 16 >> 16;
  if (($i$03$i4241 & 65535) >= 143) break; else {
   $dest$02$i4242 = $dest$02$i4242 + 24 | 0;
   $src$01$i4243 = $src$01$i4243 + 24 | 0;
  }
 }
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1795);
 if ($$3$i$i4248 | 0) {
  $26064 = $$3$i$i4248 + 5 | 0;
  $26066 = (HEAP8[$26064 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26064 >> 0] = $26066;
  if (!($26066 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4248);
  HEAP32[$1795 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 443;
 HEAP16[$7176 >> 1] = 457;
 HEAP16[$7177 >> 1] = 769;
 HEAP16[$7178 >> 1] = 467;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 7268) label = 3542; else {
  $26070 = HEAP32[915090] | 0;
  if (($26070 | 0) == (HEAP32[915088] | 0)) label = 3542; else {
   $$lcssa$i$i4235 = 3660360;
   $$lcssa8$i$i4234 = $26070;
   label = 3543;
  }
 }
 do if ((label | 0) == 3542) {
  if ((HEAP32[915097] | 0) >>> 0 >= 7268) {
   $26077 = HEAP32[915096] | 0;
   if (($26077 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4235 = 3660384;
    $$lcssa8$i$i4234 = $26077;
    label = 3543;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 7268) {
   $26082 = HEAP32[915102] | 0;
   if (($26082 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4235 = 3660408;
    $$lcssa8$i$i4234 = $26082;
    label = 3543;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 7268) {
   $26087 = HEAP32[915108] | 0;
   if (($26087 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4235 = 3660432;
    $$lcssa8$i$i4234 = $26087;
    label = 3543;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 7268) {
   $26092 = HEAP32[915114] | 0;
   if (($26092 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4235 = 3660456;
    $$lcssa8$i$i4234 = $26092;
    label = 3543;
    break;
   }
  }
  $$3$i$i4236 = __Znwj(7268) | 0;
 } while (0);
 if ((label | 0) == 3543) {
  $26075 = $$lcssa8$i$i4234 + -4 | 0;
  HEAP32[$$lcssa$i$i4235 >> 2] = $26075;
  $$3$i$i4236 = HEAP32[$26075 >> 2] | 0;
 }
 $26096 = $$3$i$i4236 + 52 | 0;
 HEAP16[$$3$i$i4236 >> 1] = 328;
 HEAP16[$$3$i$i4236 + 2 >> 1] = 11;
 HEAP8[$$3$i$i4236 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4236 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4236 + 8 >> 2] = 656;
 HEAP32[$$3$i$i4236 + 12 >> 2] = 7216;
 HEAP32[$$3$i$i4236 + 16 >> 2] = $26096;
 HEAP32[$$3$i$i4236 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4236 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4236 + 48 >> 0] = 0;
 HEAP32[$1796 >> 2] = $$3$i$i4236;
 _memcpy($26096 | 0, 2346042, 656) | 0;
 _memcpy($$3$i$i4236 + 708 | 0, 2346698, 656) | 0;
 _memcpy($$3$i$i4236 + 1364 | 0, 2347354, 656) | 0;
 _memcpy($$3$i$i4236 + 2020 | 0, 2348010, 656) | 0;
 _memcpy($$3$i$i4236 + 2676 | 0, 2348666, 656) | 0;
 _memcpy($$3$i$i4236 + 3332 | 0, 2349322, 656) | 0;
 _memcpy($$3$i$i4236 + 3988 | 0, 2349978, 656) | 0;
 _memcpy($$3$i$i4236 + 4644 | 0, 2350634, 656) | 0;
 _memcpy($$3$i$i4236 + 5300 | 0, 2351290, 656) | 0;
 _memcpy($$3$i$i4236 + 5956 | 0, 2351946, 656) | 0;
 _memcpy($$3$i$i4236 + 6612 | 0, 2352602, 656) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1796);
 if ($$3$i$i4236 | 0) {
  $26117 = $$3$i$i4236 + 5 | 0;
  $26119 = (HEAP8[$26117 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26117 >> 0] = $26119;
  if (!($26119 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4236);
  HEAP32[$1796 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 443;
 HEAP16[$7179 >> 1] = 468;
 HEAP16[$7180 >> 1] = 769;
 HEAP16[$7181 >> 1] = 478;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 7268) label = 3558; else {
  $26123 = HEAP32[915090] | 0;
  if (($26123 | 0) == (HEAP32[915088] | 0)) label = 3558; else {
   $$lcssa$i$i4223 = 3660360;
   $$lcssa8$i$i4222 = $26123;
   label = 3559;
  }
 }
 do if ((label | 0) == 3558) {
  if ((HEAP32[915097] | 0) >>> 0 >= 7268) {
   $26130 = HEAP32[915096] | 0;
   if (($26130 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4223 = 3660384;
    $$lcssa8$i$i4222 = $26130;
    label = 3559;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 7268) {
   $26135 = HEAP32[915102] | 0;
   if (($26135 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4223 = 3660408;
    $$lcssa8$i$i4222 = $26135;
    label = 3559;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 7268) {
   $26140 = HEAP32[915108] | 0;
   if (($26140 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4223 = 3660432;
    $$lcssa8$i$i4222 = $26140;
    label = 3559;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 7268) {
   $26145 = HEAP32[915114] | 0;
   if (($26145 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4223 = 3660456;
    $$lcssa8$i$i4222 = $26145;
    label = 3559;
    break;
   }
  }
  $$3$i$i4224 = __Znwj(7268) | 0;
 } while (0);
 if ((label | 0) == 3559) {
  $26128 = $$lcssa8$i$i4222 + -4 | 0;
  HEAP32[$$lcssa$i$i4223 >> 2] = $26128;
  $$3$i$i4224 = HEAP32[$26128 >> 2] | 0;
 }
 $26149 = $$3$i$i4224 + 52 | 0;
 HEAP16[$$3$i$i4224 >> 1] = 328;
 HEAP16[$$3$i$i4224 + 2 >> 1] = 11;
 HEAP8[$$3$i$i4224 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4224 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4224 + 8 >> 2] = 656;
 HEAP32[$$3$i$i4224 + 12 >> 2] = 7216;
 HEAP32[$$3$i$i4224 + 16 >> 2] = $26149;
 HEAP32[$$3$i$i4224 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4224 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4224 + 48 >> 0] = 0;
 HEAP32[$1797 >> 2] = $$3$i$i4224;
 _memcpy($26149 | 0, 2353258, 656) | 0;
 _memcpy($$3$i$i4224 + 708 | 0, 2353914, 656) | 0;
 _memcpy($$3$i$i4224 + 1364 | 0, 2354570, 656) | 0;
 _memcpy($$3$i$i4224 + 2020 | 0, 2355226, 656) | 0;
 _memcpy($$3$i$i4224 + 2676 | 0, 2355882, 656) | 0;
 _memcpy($$3$i$i4224 + 3332 | 0, 2356538, 656) | 0;
 _memcpy($$3$i$i4224 + 3988 | 0, 2357194, 656) | 0;
 _memcpy($$3$i$i4224 + 4644 | 0, 2357850, 656) | 0;
 _memcpy($$3$i$i4224 + 5300 | 0, 2358506, 656) | 0;
 _memcpy($$3$i$i4224 + 5956 | 0, 2359162, 656) | 0;
 _memcpy($$3$i$i4224 + 6612 | 0, 2359818, 656) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1797);
 if ($$3$i$i4224 | 0) {
  $26170 = $$3$i$i4224 + 5 | 0;
  $26172 = (HEAP8[$26170 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26170 >> 0] = $26172;
  if (!($26172 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4224);
  HEAP32[$1797 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 443;
 HEAP16[$7182 >> 1] = 479;
 HEAP16[$7183 >> 1] = 769;
 HEAP16[$7184 >> 1] = 489;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 7268) label = 3574; else {
  $26176 = HEAP32[915090] | 0;
  if (($26176 | 0) == (HEAP32[915088] | 0)) label = 3574; else {
   $$lcssa$i$i4211 = 3660360;
   $$lcssa8$i$i4210 = $26176;
   label = 3575;
  }
 }
 do if ((label | 0) == 3574) {
  if ((HEAP32[915097] | 0) >>> 0 >= 7268) {
   $26183 = HEAP32[915096] | 0;
   if (($26183 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4211 = 3660384;
    $$lcssa8$i$i4210 = $26183;
    label = 3575;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 7268) {
   $26188 = HEAP32[915102] | 0;
   if (($26188 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4211 = 3660408;
    $$lcssa8$i$i4210 = $26188;
    label = 3575;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 7268) {
   $26193 = HEAP32[915108] | 0;
   if (($26193 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4211 = 3660432;
    $$lcssa8$i$i4210 = $26193;
    label = 3575;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 7268) {
   $26198 = HEAP32[915114] | 0;
   if (($26198 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4211 = 3660456;
    $$lcssa8$i$i4210 = $26198;
    label = 3575;
    break;
   }
  }
  $$3$i$i4212 = __Znwj(7268) | 0;
 } while (0);
 if ((label | 0) == 3575) {
  $26181 = $$lcssa8$i$i4210 + -4 | 0;
  HEAP32[$$lcssa$i$i4211 >> 2] = $26181;
  $$3$i$i4212 = HEAP32[$26181 >> 2] | 0;
 }
 $26202 = $$3$i$i4212 + 52 | 0;
 HEAP16[$$3$i$i4212 >> 1] = 328;
 HEAP16[$$3$i$i4212 + 2 >> 1] = 11;
 HEAP8[$$3$i$i4212 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4212 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4212 + 8 >> 2] = 656;
 HEAP32[$$3$i$i4212 + 12 >> 2] = 7216;
 HEAP32[$$3$i$i4212 + 16 >> 2] = $26202;
 HEAP32[$$3$i$i4212 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4212 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4212 + 48 >> 0] = 0;
 HEAP32[$1798 >> 2] = $$3$i$i4212;
 _memcpy($26202 | 0, 2360474, 656) | 0;
 _memcpy($$3$i$i4212 + 708 | 0, 2361130, 656) | 0;
 _memcpy($$3$i$i4212 + 1364 | 0, 2361786, 656) | 0;
 _memcpy($$3$i$i4212 + 2020 | 0, 2362442, 656) | 0;
 _memcpy($$3$i$i4212 + 2676 | 0, 2363098, 656) | 0;
 _memcpy($$3$i$i4212 + 3332 | 0, 2363754, 656) | 0;
 _memcpy($$3$i$i4212 + 3988 | 0, 2364410, 656) | 0;
 _memcpy($$3$i$i4212 + 4644 | 0, 2365066, 656) | 0;
 _memcpy($$3$i$i4212 + 5300 | 0, 2365722, 656) | 0;
 _memcpy($$3$i$i4212 + 5956 | 0, 2366378, 656) | 0;
 _memcpy($$3$i$i4212 + 6612 | 0, 2367034, 656) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1798);
 if ($$3$i$i4212 | 0) {
  $26223 = $$3$i$i4212 + 5 | 0;
  $26225 = (HEAP8[$26223 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26223 >> 0] = $26225;
  if (!($26225 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4212);
  HEAP32[$1798 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 443;
 HEAP16[$7185 >> 1] = 490;
 HEAP16[$7186 >> 1] = 769;
 HEAP16[$7187 >> 1] = 529;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 26292) label = 3590; else {
  $26229 = HEAP32[915090] | 0;
  if (($26229 | 0) == (HEAP32[915088] | 0)) label = 3590; else {
   $$lcssa$i$i4199 = 3660360;
   $$lcssa8$i$i4198 = $26229;
   label = 3591;
  }
 }
 do if ((label | 0) == 3590) {
  if ((HEAP32[915097] | 0) >>> 0 >= 26292) {
   $26236 = HEAP32[915096] | 0;
   if (($26236 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4199 = 3660384;
    $$lcssa8$i$i4198 = $26236;
    label = 3591;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 26292) {
   $26241 = HEAP32[915102] | 0;
   if (($26241 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4199 = 3660408;
    $$lcssa8$i$i4198 = $26241;
    label = 3591;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 26292) {
   $26246 = HEAP32[915108] | 0;
   if (($26246 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4199 = 3660432;
    $$lcssa8$i$i4198 = $26246;
    label = 3591;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 26292) {
   $26251 = HEAP32[915114] | 0;
   if (($26251 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4199 = 3660456;
    $$lcssa8$i$i4198 = $26251;
    label = 3591;
    break;
   }
  }
  $$3$i$i4200 = __Znwj(26292) | 0;
 } while (0);
 if ((label | 0) == 3591) {
  $26234 = $$lcssa8$i$i4198 + -4 | 0;
  HEAP32[$$lcssa$i$i4199 >> 2] = $26234;
  $$3$i$i4200 = HEAP32[$26234 >> 2] | 0;
 }
 $26255 = $$3$i$i4200 + 52 | 0;
 HEAP16[$$3$i$i4200 >> 1] = 328;
 HEAP16[$$3$i$i4200 + 2 >> 1] = 40;
 HEAP8[$$3$i$i4200 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4200 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4200 + 8 >> 2] = 656;
 HEAP32[$$3$i$i4200 + 12 >> 2] = 26240;
 HEAP32[$$3$i$i4200 + 16 >> 2] = $26255;
 HEAP32[$$3$i$i4200 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4200 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4200 + 48 >> 0] = 0;
 HEAP32[$1799 >> 2] = $$3$i$i4200;
 _memcpy($26255 | 0, 2367690, 656) | 0;
 _memcpy($$3$i$i4200 + 708 | 0, 2368346, 656) | 0;
 _memcpy($$3$i$i4200 + 1364 | 0, 2369002, 656) | 0;
 _memcpy($$3$i$i4200 + 2020 | 0, 2369658, 656) | 0;
 _memcpy($$3$i$i4200 + 2676 | 0, 2370314, 656) | 0;
 _memcpy($$3$i$i4200 + 3332 | 0, 2370970, 656) | 0;
 _memcpy($$3$i$i4200 + 3988 | 0, 2371626, 656) | 0;
 _memcpy($$3$i$i4200 + 4644 | 0, 2372282, 656) | 0;
 _memcpy($$3$i$i4200 + 5300 | 0, 2372938, 656) | 0;
 _memcpy($$3$i$i4200 + 5956 | 0, 2373594, 656) | 0;
 _memcpy($$3$i$i4200 + 6612 | 0, 2374250, 656) | 0;
 _memcpy($$3$i$i4200 + 7268 | 0, 2374906, 656) | 0;
 _memcpy($$3$i$i4200 + 7924 | 0, 2375562, 656) | 0;
 _memcpy($$3$i$i4200 + 8580 | 0, 2376218, 656) | 0;
 _memcpy($$3$i$i4200 + 9236 | 0, 2376874, 656) | 0;
 _memcpy($$3$i$i4200 + 9892 | 0, 2377530, 656) | 0;
 _memcpy($$3$i$i4200 + 10548 | 0, 2378186, 656) | 0;
 _memcpy($$3$i$i4200 + 11204 | 0, 2378842, 656) | 0;
 _memcpy($$3$i$i4200 + 11860 | 0, 2379498, 656) | 0;
 _memcpy($$3$i$i4200 + 12516 | 0, 2380154, 656) | 0;
 _memcpy($$3$i$i4200 + 13172 | 0, 2380810, 656) | 0;
 _memcpy($$3$i$i4200 + 13828 | 0, 2381466, 656) | 0;
 _memcpy($$3$i$i4200 + 14484 | 0, 2382122, 656) | 0;
 _memcpy($$3$i$i4200 + 15140 | 0, 2382778, 656) | 0;
 _memcpy($$3$i$i4200 + 15796 | 0, 2383434, 656) | 0;
 _memcpy($$3$i$i4200 + 16452 | 0, 2384090, 656) | 0;
 _memcpy($$3$i$i4200 + 17108 | 0, 2384746, 656) | 0;
 _memcpy($$3$i$i4200 + 17764 | 0, 2385402, 656) | 0;
 _memcpy($$3$i$i4200 + 18420 | 0, 2386058, 656) | 0;
 _memcpy($$3$i$i4200 + 19076 | 0, 2386714, 656) | 0;
 _memcpy($$3$i$i4200 + 19732 | 0, 2387370, 656) | 0;
 _memcpy($$3$i$i4200 + 20388 | 0, 2388026, 656) | 0;
 _memcpy($$3$i$i4200 + 21044 | 0, 2388682, 656) | 0;
 _memcpy($$3$i$i4200 + 21700 | 0, 2389338, 656) | 0;
 _memcpy($$3$i$i4200 + 22356 | 0, 2389994, 656) | 0;
 _memcpy($$3$i$i4200 + 23012 | 0, 2390650, 656) | 0;
 _memcpy($$3$i$i4200 + 23668 | 0, 2391306, 656) | 0;
 _memcpy($$3$i$i4200 + 24324 | 0, 2391962, 656) | 0;
 _memcpy($$3$i$i4200 + 24980 | 0, 2392618, 656) | 0;
 _memcpy($$3$i$i4200 + 25636 | 0, 2393274, 656) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1799);
 if ($$3$i$i4200 | 0) {
  $26305 = $$3$i$i4200 + 5 | 0;
  $26307 = (HEAP8[$26305 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26305 >> 0] = $26307;
  if (!($26307 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4200);
  HEAP32[$1799 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 443;
 HEAP16[$7188 >> 1] = 530;
 HEAP16[$7189 >> 1] = 769;
 HEAP16[$7190 >> 1] = 569;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 26292) label = 3606; else {
  $26311 = HEAP32[915090] | 0;
  if (($26311 | 0) == (HEAP32[915088] | 0)) label = 3606; else {
   $$lcssa$i$i4187 = 3660360;
   $$lcssa8$i$i4186 = $26311;
   label = 3607;
  }
 }
 do if ((label | 0) == 3606) {
  if ((HEAP32[915097] | 0) >>> 0 >= 26292) {
   $26318 = HEAP32[915096] | 0;
   if (($26318 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4187 = 3660384;
    $$lcssa8$i$i4186 = $26318;
    label = 3607;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 26292) {
   $26323 = HEAP32[915102] | 0;
   if (($26323 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4187 = 3660408;
    $$lcssa8$i$i4186 = $26323;
    label = 3607;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 26292) {
   $26328 = HEAP32[915108] | 0;
   if (($26328 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4187 = 3660432;
    $$lcssa8$i$i4186 = $26328;
    label = 3607;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 26292) {
   $26333 = HEAP32[915114] | 0;
   if (($26333 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4187 = 3660456;
    $$lcssa8$i$i4186 = $26333;
    label = 3607;
    break;
   }
  }
  $$3$i$i4188 = __Znwj(26292) | 0;
 } while (0);
 if ((label | 0) == 3607) {
  $26316 = $$lcssa8$i$i4186 + -4 | 0;
  HEAP32[$$lcssa$i$i4187 >> 2] = $26316;
  $$3$i$i4188 = HEAP32[$26316 >> 2] | 0;
 }
 $26337 = $$3$i$i4188 + 52 | 0;
 HEAP16[$$3$i$i4188 >> 1] = 328;
 HEAP16[$$3$i$i4188 + 2 >> 1] = 40;
 HEAP8[$$3$i$i4188 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4188 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4188 + 8 >> 2] = 656;
 HEAP32[$$3$i$i4188 + 12 >> 2] = 26240;
 HEAP32[$$3$i$i4188 + 16 >> 2] = $26337;
 HEAP32[$$3$i$i4188 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4188 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4188 + 48 >> 0] = 0;
 HEAP32[$1800 >> 2] = $$3$i$i4188;
 _memcpy($26337 | 0, 2393930, 656) | 0;
 _memcpy($$3$i$i4188 + 708 | 0, 2394586, 656) | 0;
 _memcpy($$3$i$i4188 + 1364 | 0, 2395242, 656) | 0;
 _memcpy($$3$i$i4188 + 2020 | 0, 2395898, 656) | 0;
 _memcpy($$3$i$i4188 + 2676 | 0, 2396554, 656) | 0;
 _memcpy($$3$i$i4188 + 3332 | 0, 2397210, 656) | 0;
 _memcpy($$3$i$i4188 + 3988 | 0, 2397866, 656) | 0;
 _memcpy($$3$i$i4188 + 4644 | 0, 2398522, 656) | 0;
 _memcpy($$3$i$i4188 + 5300 | 0, 2399178, 656) | 0;
 _memcpy($$3$i$i4188 + 5956 | 0, 2399834, 656) | 0;
 _memcpy($$3$i$i4188 + 6612 | 0, 2400490, 656) | 0;
 _memcpy($$3$i$i4188 + 7268 | 0, 2401146, 656) | 0;
 _memcpy($$3$i$i4188 + 7924 | 0, 2401802, 656) | 0;
 _memcpy($$3$i$i4188 + 8580 | 0, 2402458, 656) | 0;
 _memcpy($$3$i$i4188 + 9236 | 0, 2403114, 656) | 0;
 _memcpy($$3$i$i4188 + 9892 | 0, 2403770, 656) | 0;
 _memcpy($$3$i$i4188 + 10548 | 0, 2404426, 656) | 0;
 _memcpy($$3$i$i4188 + 11204 | 0, 2405082, 656) | 0;
 _memcpy($$3$i$i4188 + 11860 | 0, 2405738, 656) | 0;
 _memcpy($$3$i$i4188 + 12516 | 0, 2406394, 656) | 0;
 _memcpy($$3$i$i4188 + 13172 | 0, 2407050, 656) | 0;
 _memcpy($$3$i$i4188 + 13828 | 0, 2407706, 656) | 0;
 _memcpy($$3$i$i4188 + 14484 | 0, 2408362, 656) | 0;
 _memcpy($$3$i$i4188 + 15140 | 0, 2409018, 656) | 0;
 _memcpy($$3$i$i4188 + 15796 | 0, 2409674, 656) | 0;
 _memcpy($$3$i$i4188 + 16452 | 0, 2410330, 656) | 0;
 _memcpy($$3$i$i4188 + 17108 | 0, 2410986, 656) | 0;
 _memcpy($$3$i$i4188 + 17764 | 0, 2411642, 656) | 0;
 _memcpy($$3$i$i4188 + 18420 | 0, 2412298, 656) | 0;
 _memcpy($$3$i$i4188 + 19076 | 0, 2412954, 656) | 0;
 _memcpy($$3$i$i4188 + 19732 | 0, 2413610, 656) | 0;
 _memcpy($$3$i$i4188 + 20388 | 0, 2414266, 656) | 0;
 _memcpy($$3$i$i4188 + 21044 | 0, 2414922, 656) | 0;
 _memcpy($$3$i$i4188 + 21700 | 0, 2415578, 656) | 0;
 _memcpy($$3$i$i4188 + 22356 | 0, 2416234, 656) | 0;
 _memcpy($$3$i$i4188 + 23012 | 0, 2416890, 656) | 0;
 _memcpy($$3$i$i4188 + 23668 | 0, 2417546, 656) | 0;
 _memcpy($$3$i$i4188 + 24324 | 0, 2418202, 656) | 0;
 _memcpy($$3$i$i4188 + 24980 | 0, 2418858, 656) | 0;
 _memcpy($$3$i$i4188 + 25636 | 0, 2419514, 656) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1800);
 if ($$3$i$i4188 | 0) {
  $26387 = $$3$i$i4188 + 5 | 0;
  $26389 = (HEAP8[$26387 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26387 >> 0] = $26389;
  if (!($26389 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4188);
  HEAP32[$1800 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 443;
 HEAP16[$7191 >> 1] = 570;
 HEAP16[$7192 >> 1] = 769;
 HEAP16[$7193 >> 1] = 590;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 13828) label = 3622; else {
  $26393 = HEAP32[915090] | 0;
  if (($26393 | 0) == (HEAP32[915088] | 0)) label = 3622; else {
   $$lcssa$i$i4175 = 3660360;
   $$lcssa8$i$i4174 = $26393;
   label = 3623;
  }
 }
 do if ((label | 0) == 3622) {
  if ((HEAP32[915097] | 0) >>> 0 >= 13828) {
   $26400 = HEAP32[915096] | 0;
   if (($26400 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4175 = 3660384;
    $$lcssa8$i$i4174 = $26400;
    label = 3623;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 13828) {
   $26405 = HEAP32[915102] | 0;
   if (($26405 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4175 = 3660408;
    $$lcssa8$i$i4174 = $26405;
    label = 3623;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 13828) {
   $26410 = HEAP32[915108] | 0;
   if (($26410 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4175 = 3660432;
    $$lcssa8$i$i4174 = $26410;
    label = 3623;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 13828) {
   $26415 = HEAP32[915114] | 0;
   if (($26415 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4175 = 3660456;
    $$lcssa8$i$i4174 = $26415;
    label = 3623;
    break;
   }
  }
  $$3$i$i4176 = __Znwj(13828) | 0;
 } while (0);
 if ((label | 0) == 3623) {
  $26398 = $$lcssa8$i$i4174 + -4 | 0;
  HEAP32[$$lcssa$i$i4175 >> 2] = $26398;
  $$3$i$i4176 = HEAP32[$26398 >> 2] | 0;
 }
 $26419 = $$3$i$i4176 + 52 | 0;
 HEAP16[$$3$i$i4176 >> 1] = 328;
 HEAP16[$$3$i$i4176 + 2 >> 1] = 21;
 HEAP8[$$3$i$i4176 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4176 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4176 + 8 >> 2] = 656;
 HEAP32[$$3$i$i4176 + 12 >> 2] = 13776;
 HEAP32[$$3$i$i4176 + 16 >> 2] = $26419;
 HEAP32[$$3$i$i4176 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4176 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4176 + 48 >> 0] = 0;
 HEAP32[$1801 >> 2] = $$3$i$i4176;
 _memcpy($26419 | 0, 2420170, 656) | 0;
 _memcpy($$3$i$i4176 + 708 | 0, 2420826, 656) | 0;
 _memcpy($$3$i$i4176 + 1364 | 0, 2421482, 656) | 0;
 _memcpy($$3$i$i4176 + 2020 | 0, 2422138, 656) | 0;
 _memcpy($$3$i$i4176 + 2676 | 0, 2422794, 656) | 0;
 _memcpy($$3$i$i4176 + 3332 | 0, 2423450, 656) | 0;
 _memcpy($$3$i$i4176 + 3988 | 0, 2424106, 656) | 0;
 _memcpy($$3$i$i4176 + 4644 | 0, 2424762, 656) | 0;
 _memcpy($$3$i$i4176 + 5300 | 0, 2425418, 656) | 0;
 _memcpy($$3$i$i4176 + 5956 | 0, 2426074, 656) | 0;
 _memcpy($$3$i$i4176 + 6612 | 0, 2426730, 656) | 0;
 _memcpy($$3$i$i4176 + 7268 | 0, 2427386, 656) | 0;
 _memcpy($$3$i$i4176 + 7924 | 0, 2428042, 656) | 0;
 _memcpy($$3$i$i4176 + 8580 | 0, 2428698, 656) | 0;
 _memcpy($$3$i$i4176 + 9236 | 0, 2429354, 656) | 0;
 _memcpy($$3$i$i4176 + 9892 | 0, 2430010, 656) | 0;
 _memcpy($$3$i$i4176 + 10548 | 0, 2430666, 656) | 0;
 _memcpy($$3$i$i4176 + 11204 | 0, 2431322, 656) | 0;
 _memcpy($$3$i$i4176 + 11860 | 0, 2431978, 656) | 0;
 _memcpy($$3$i$i4176 + 12516 | 0, 2432634, 656) | 0;
 _memcpy($$3$i$i4176 + 13172 | 0, 2433290, 656) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1801);
 if ($$3$i$i4176 | 0) {
  $26450 = $$3$i$i4176 + 5 | 0;
  $26452 = (HEAP8[$26450 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26450 >> 0] = $26452;
  if (!($26452 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4176);
  HEAP32[$1801 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7194 >> 1] = 419;
 HEAP16[$7195 >> 1] = 994;
 HEAP16[$7196 >> 1] = 429;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 17300) label = 3638; else {
  $26456 = HEAP32[915090] | 0;
  if (($26456 | 0) == (HEAP32[915088] | 0)) label = 3638; else {
   $$lcssa$i$i4163 = 3660360;
   $$lcssa8$i$i4162 = $26456;
   label = 3639;
  }
 }
 do if ((label | 0) == 3638) {
  if ((HEAP32[915097] | 0) >>> 0 >= 17300) {
   $26463 = HEAP32[915096] | 0;
   if (($26463 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4163 = 3660384;
    $$lcssa8$i$i4162 = $26463;
    label = 3639;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 17300) {
   $26468 = HEAP32[915102] | 0;
   if (($26468 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4163 = 3660408;
    $$lcssa8$i$i4162 = $26468;
    label = 3639;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 17300) {
   $26473 = HEAP32[915108] | 0;
   if (($26473 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4163 = 3660432;
    $$lcssa8$i$i4162 = $26473;
    label = 3639;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 17300) {
   $26478 = HEAP32[915114] | 0;
   if (($26478 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4163 = 3660456;
    $$lcssa8$i$i4162 = $26478;
    label = 3639;
    break;
   }
  }
  $$3$i$i4164 = __Znwj(17300) | 0;
 } while (0);
 if ((label | 0) == 3639) {
  $26461 = $$lcssa8$i$i4162 + -4 | 0;
  HEAP32[$$lcssa$i$i4163 >> 2] = $26461;
  $$3$i$i4164 = HEAP32[$26461 >> 2] | 0;
 }
 $26482 = $$3$i$i4164 + 52 | 0;
 HEAP16[$$3$i$i4164 >> 1] = 784;
 HEAP16[$$3$i$i4164 + 2 >> 1] = 11;
 HEAP8[$$3$i$i4164 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4164 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4164 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i4164 + 12 >> 2] = 17248;
 HEAP32[$$3$i$i4164 + 16 >> 2] = $26482;
 HEAP32[$$3$i$i4164 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4164 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4164 + 48 >> 0] = 0;
 HEAP32[$1802 >> 2] = $$3$i$i4164;
 _memcpy($26482 | 0, 2433946, 1568) | 0;
 _memcpy($$3$i$i4164 + 1620 | 0, 2435514, 1568) | 0;
 _memcpy($$3$i$i4164 + 3188 | 0, 2437082, 1568) | 0;
 _memcpy($$3$i$i4164 + 4756 | 0, 2438650, 1568) | 0;
 _memcpy($$3$i$i4164 + 6324 | 0, 2440218, 1568) | 0;
 _memcpy($$3$i$i4164 + 7892 | 0, 2441786, 1568) | 0;
 _memcpy($$3$i$i4164 + 9460 | 0, 2443354, 1568) | 0;
 _memcpy($$3$i$i4164 + 11028 | 0, 2444922, 1568) | 0;
 _memcpy($$3$i$i4164 + 12596 | 0, 2446490, 1568) | 0;
 _memcpy($$3$i$i4164 + 14164 | 0, 2448058, 1568) | 0;
 _memcpy($$3$i$i4164 + 15732 | 0, 2449626, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1802);
 if ($$3$i$i4164 | 0) {
  $26503 = $$3$i$i4164 + 5 | 0;
  $26505 = (HEAP8[$26503 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26503 >> 0] = $26505;
  if (!($26505 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4164);
  HEAP32[$1802 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 225;
 HEAP16[$7197 >> 1] = 457;
 HEAP16[$7198 >> 1] = 436;
 HEAP16[$7199 >> 1] = 531;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31852) label = 3654; else {
  $26509 = HEAP32[915090] | 0;
  if (($26509 | 0) == (HEAP32[915088] | 0)) label = 3654; else {
   $$lcssa$i$i4151 = 3660360;
   $$lcssa8$i$i4150 = $26509;
   label = 3655;
  }
 }
 do if ((label | 0) == 3654) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31852) {
   $26516 = HEAP32[915096] | 0;
   if (($26516 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4151 = 3660384;
    $$lcssa8$i$i4150 = $26516;
    label = 3655;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31852) {
   $26521 = HEAP32[915102] | 0;
   if (($26521 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4151 = 3660408;
    $$lcssa8$i$i4150 = $26521;
    label = 3655;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31852) {
   $26526 = HEAP32[915108] | 0;
   if (($26526 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4151 = 3660432;
    $$lcssa8$i$i4150 = $26526;
    label = 3655;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31852) {
   $26531 = HEAP32[915114] | 0;
   if (($26531 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4151 = 3660456;
    $$lcssa8$i$i4150 = $26531;
    label = 3655;
    break;
   }
  }
  $$3$i$i4152 = __Znwj(31852) | 0;
 } while (0);
 if ((label | 0) == 3655) {
  $26514 = $$lcssa8$i$i4150 + -4 | 0;
  HEAP32[$$lcssa$i$i4151 >> 2] = $26514;
  $$3$i$i4152 = HEAP32[$26514 >> 2] | 0;
 }
 $26535 = $$3$i$i4152 + 52 | 0;
 HEAP16[$$3$i$i4152 >> 1] = 212;
 HEAP16[$$3$i$i4152 + 2 >> 1] = 75;
 HEAP8[$$3$i$i4152 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4152 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4152 + 8 >> 2] = 424;
 HEAP32[$$3$i$i4152 + 12 >> 2] = 31800;
 HEAP32[$$3$i$i4152 + 16 >> 2] = $26535;
 HEAP32[$$3$i$i4152 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4152 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4152 + 48 >> 0] = 0;
 HEAP32[$1803 >> 2] = $$3$i$i4152;
 $dest$02$i4146 = $26535;
 $i$03$i4145 = 0;
 $src$01$i4147 = 2451194;
 while (1) {
  _memcpy($dest$02$i4146 | 0, $src$01$i4147 | 0, 424) | 0;
  $i$03$i4145 = $i$03$i4145 + 1 << 16 >> 16;
  if (($i$03$i4145 & 65535) >= 75) break; else {
   $dest$02$i4146 = $dest$02$i4146 + 424 | 0;
   $src$01$i4147 = $src$01$i4147 + 424 | 0;
  }
 }
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1803);
 if ($$3$i$i4152 | 0) {
  $26550 = $$3$i$i4152 + 5 | 0;
  $26552 = (HEAP8[$26550 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26550 >> 0] = $26552;
  if (!($26552 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4152);
  HEAP32[$1803 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 225;
 HEAP16[$7200 >> 1] = 532;
 HEAP16[$7201 >> 1] = 436;
 HEAP16[$7202 >> 1] = 606;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31852) label = 3672; else {
  $26556 = HEAP32[915090] | 0;
  if (($26556 | 0) == (HEAP32[915088] | 0)) label = 3672; else {
   $$lcssa$i$i4139 = 3660360;
   $$lcssa8$i$i4138 = $26556;
   label = 3673;
  }
 }
 do if ((label | 0) == 3672) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31852) {
   $26563 = HEAP32[915096] | 0;
   if (($26563 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4139 = 3660384;
    $$lcssa8$i$i4138 = $26563;
    label = 3673;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31852) {
   $26568 = HEAP32[915102] | 0;
   if (($26568 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4139 = 3660408;
    $$lcssa8$i$i4138 = $26568;
    label = 3673;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31852) {
   $26573 = HEAP32[915108] | 0;
   if (($26573 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4139 = 3660432;
    $$lcssa8$i$i4138 = $26573;
    label = 3673;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31852) {
   $26578 = HEAP32[915114] | 0;
   if (($26578 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4139 = 3660456;
    $$lcssa8$i$i4138 = $26578;
    label = 3673;
    break;
   }
  }
  $$3$i$i4140 = __Znwj(31852) | 0;
 } while (0);
 if ((label | 0) == 3673) {
  $26561 = $$lcssa8$i$i4138 + -4 | 0;
  HEAP32[$$lcssa$i$i4139 >> 2] = $26561;
  $$3$i$i4140 = HEAP32[$26561 >> 2] | 0;
 }
 $26582 = $$3$i$i4140 + 52 | 0;
 HEAP16[$$3$i$i4140 >> 1] = 212;
 HEAP16[$$3$i$i4140 + 2 >> 1] = 75;
 HEAP8[$$3$i$i4140 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4140 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4140 + 8 >> 2] = 424;
 HEAP32[$$3$i$i4140 + 12 >> 2] = 31800;
 HEAP32[$$3$i$i4140 + 16 >> 2] = $26582;
 HEAP32[$$3$i$i4140 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4140 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4140 + 48 >> 0] = 0;
 HEAP32[$1804 >> 2] = $$3$i$i4140;
 $dest$02$i4134 = $26582;
 $i$03$i4133 = 0;
 $src$01$i4135 = 2482994;
 while (1) {
  _memcpy($dest$02$i4134 | 0, $src$01$i4135 | 0, 424) | 0;
  $i$03$i4133 = $i$03$i4133 + 1 << 16 >> 16;
  if (($i$03$i4133 & 65535) >= 75) break; else {
   $dest$02$i4134 = $dest$02$i4134 + 424 | 0;
   $src$01$i4135 = $src$01$i4135 + 424 | 0;
  }
 }
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1804);
 if ($$3$i$i4140 | 0) {
  $26597 = $$3$i$i4140 + 5 | 0;
  $26599 = (HEAP8[$26597 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26597 >> 0] = $26599;
  if (!($26599 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4140);
  HEAP32[$1804 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 225;
 HEAP16[$7203 >> 1] = 607;
 HEAP16[$7204 >> 1] = 436;
 HEAP16[$7205 >> 1] = 609;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1324) label = 3690; else {
  $26603 = HEAP32[915090] | 0;
  if (($26603 | 0) == (HEAP32[915088] | 0)) label = 3690; else {
   $$lcssa$i$i4127 = 3660360;
   $$lcssa8$i$i4126 = $26603;
   label = 3691;
  }
 }
 do if ((label | 0) == 3690) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1324) {
   $26610 = HEAP32[915096] | 0;
   if (($26610 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4127 = 3660384;
    $$lcssa8$i$i4126 = $26610;
    label = 3691;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1324) {
   $26615 = HEAP32[915102] | 0;
   if (($26615 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4127 = 3660408;
    $$lcssa8$i$i4126 = $26615;
    label = 3691;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1324) {
   $26620 = HEAP32[915108] | 0;
   if (($26620 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4127 = 3660432;
    $$lcssa8$i$i4126 = $26620;
    label = 3691;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1324) {
   $26625 = HEAP32[915114] | 0;
   if (($26625 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4127 = 3660456;
    $$lcssa8$i$i4126 = $26625;
    label = 3691;
    break;
   }
  }
  $$3$i$i4128 = __Znwj(1324) | 0;
 } while (0);
 if ((label | 0) == 3691) {
  $26608 = $$lcssa8$i$i4126 + -4 | 0;
  HEAP32[$$lcssa$i$i4127 >> 2] = $26608;
  $$3$i$i4128 = HEAP32[$26608 >> 2] | 0;
 }
 $26629 = $$3$i$i4128 + 52 | 0;
 HEAP16[$$3$i$i4128 >> 1] = 212;
 HEAP16[$$3$i$i4128 + 2 >> 1] = 3;
 HEAP8[$$3$i$i4128 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4128 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4128 + 8 >> 2] = 424;
 HEAP32[$$3$i$i4128 + 12 >> 2] = 1272;
 HEAP32[$$3$i$i4128 + 16 >> 2] = $26629;
 HEAP32[$$3$i$i4128 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4128 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4128 + 48 >> 0] = 0;
 HEAP32[$1805 >> 2] = $$3$i$i4128;
 _memcpy($26629 | 0, 2514794, 424) | 0;
 _memcpy($$3$i$i4128 + 476 | 0, 2515218, 424) | 0;
 _memcpy($$3$i$i4128 + 900 | 0, 2515642, 424) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1805);
 if ($$3$i$i4128 | 0) {
  $26642 = $$3$i$i4128 + 5 | 0;
  $26644 = (HEAP8[$26642 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26642 >> 0] = $26644;
  if (!($26644 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4128);
  HEAP32[$1805 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7206 >> 1] = 430;
 HEAP16[$7207 >> 1] = 221;
 HEAP16[$7208 >> 1] = 609;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4372) label = 3706; else {
  $26648 = HEAP32[915090] | 0;
  if (($26648 | 0) == (HEAP32[915088] | 0)) label = 3706; else {
   $$lcssa$i$i4115 = 3660360;
   $$lcssa8$i$i4114 = $26648;
   label = 3707;
  }
 }
 do if ((label | 0) == 3706) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4372) {
   $26655 = HEAP32[915096] | 0;
   if (($26655 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4115 = 3660384;
    $$lcssa8$i$i4114 = $26655;
    label = 3707;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4372) {
   $26660 = HEAP32[915102] | 0;
   if (($26660 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4115 = 3660408;
    $$lcssa8$i$i4114 = $26660;
    label = 3707;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4372) {
   $26665 = HEAP32[915108] | 0;
   if (($26665 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4115 = 3660432;
    $$lcssa8$i$i4114 = $26665;
    label = 3707;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4372) {
   $26670 = HEAP32[915114] | 0;
   if (($26670 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4115 = 3660456;
    $$lcssa8$i$i4114 = $26670;
    label = 3707;
    break;
   }
  }
  $$3$i$i4116 = __Znwj(4372) | 0;
 } while (0);
 if ((label | 0) == 3707) {
  $26653 = $$lcssa8$i$i4114 + -4 | 0;
  HEAP32[$$lcssa$i$i4115 >> 2] = $26653;
  $$3$i$i4116 = HEAP32[$26653 >> 2] | 0;
 }
 $26674 = $$3$i$i4116 + 52 | 0;
 HEAP16[$$3$i$i4116 >> 1] = 12;
 HEAP16[$$3$i$i4116 + 2 >> 1] = 180;
 HEAP8[$$3$i$i4116 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4116 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4116 + 8 >> 2] = 24;
 HEAP32[$$3$i$i4116 + 12 >> 2] = 4320;
 HEAP32[$$3$i$i4116 + 16 >> 2] = $26674;
 HEAP32[$$3$i$i4116 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4116 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4116 + 48 >> 0] = 0;
 HEAP32[$1806 >> 2] = $$3$i$i4116;
 $dest$02$i4110 = $26674;
 $i$03$i4109 = 0;
 $src$01$i4111 = 2516066;
 while (1) {
  dest = $dest$02$i4110;
  src = $src$01$i4111;
  stop = dest + 24 | 0;
  do {
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
  } while ((dest | 0) < (stop | 0));
  $i$03$i4109 = $i$03$i4109 + 1 << 16 >> 16;
  if (($i$03$i4109 & 65535) >= 180) break; else {
   $dest$02$i4110 = $dest$02$i4110 + 24 | 0;
   $src$01$i4111 = $src$01$i4111 + 24 | 0;
  }
 }
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1806);
 if ($$3$i$i4116 | 0) {
  $26689 = $$3$i$i4116 + 5 | 0;
  $26691 = (HEAP8[$26689 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26689 >> 0] = $26691;
  if (!($26691 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4116);
  HEAP32[$1806 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7209 >> 1] = 635;
 HEAP16[$7210 >> 1] = 927;
 HEAP16[$7211 >> 1] = 635;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1484) label = 3724; else {
  $26695 = HEAP32[915090] | 0;
  if (($26695 | 0) == (HEAP32[915088] | 0)) label = 3724; else {
   $$lcssa$i$i4103 = 3660360;
   $$lcssa8$i$i4102 = $26695;
   label = 3725;
  }
 }
 do if ((label | 0) == 3724) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1484) {
   $26702 = HEAP32[915096] | 0;
   if (($26702 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4103 = 3660384;
    $$lcssa8$i$i4102 = $26702;
    label = 3725;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1484) {
   $26707 = HEAP32[915102] | 0;
   if (($26707 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4103 = 3660408;
    $$lcssa8$i$i4102 = $26707;
    label = 3725;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1484) {
   $26712 = HEAP32[915108] | 0;
   if (($26712 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4103 = 3660432;
    $$lcssa8$i$i4102 = $26712;
    label = 3725;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1484) {
   $26717 = HEAP32[915114] | 0;
   if (($26717 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4103 = 3660456;
    $$lcssa8$i$i4102 = $26717;
    label = 3725;
    break;
   }
  }
  $$3$i$i4104 = __Znwj(1484) | 0;
 } while (0);
 if ((label | 0) == 3725) {
  $26700 = $$lcssa8$i$i4102 + -4 | 0;
  HEAP32[$$lcssa$i$i4103 >> 2] = $26700;
  $$3$i$i4104 = HEAP32[$26700 >> 2] | 0;
 }
 $26721 = $$3$i$i4104 + 52 | 0;
 HEAP16[$$3$i$i4104 >> 1] = 716;
 HEAP16[$$3$i$i4104 + 2 >> 1] = 1;
 HEAP8[$$3$i$i4104 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4104 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4104 + 8 >> 2] = 1432;
 HEAP32[$$3$i$i4104 + 12 >> 2] = 1432;
 HEAP32[$$3$i$i4104 + 16 >> 2] = $26721;
 HEAP32[$$3$i$i4104 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4104 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4104 + 48 >> 0] = 0;
 HEAP32[$1807 >> 2] = $$3$i$i4104;
 _memcpy($26721 | 0, 2520386, 1432) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1807);
 if ($$3$i$i4104 | 0) {
  $26732 = $$3$i$i4104 + 5 | 0;
  $26734 = (HEAP8[$26732 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26732 >> 0] = $26734;
  if (!($26734 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4104);
  HEAP32[$1807 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7212 >> 1] = 636;
 HEAP16[$7213 >> 1] = 927;
 HEAP16[$7214 >> 1] = 636;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1484) label = 3740; else {
  $26738 = HEAP32[915090] | 0;
  if (($26738 | 0) == (HEAP32[915088] | 0)) label = 3740; else {
   $$lcssa$i$i4091 = 3660360;
   $$lcssa8$i$i4090 = $26738;
   label = 3741;
  }
 }
 do if ((label | 0) == 3740) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1484) {
   $26745 = HEAP32[915096] | 0;
   if (($26745 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4091 = 3660384;
    $$lcssa8$i$i4090 = $26745;
    label = 3741;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1484) {
   $26750 = HEAP32[915102] | 0;
   if (($26750 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4091 = 3660408;
    $$lcssa8$i$i4090 = $26750;
    label = 3741;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1484) {
   $26755 = HEAP32[915108] | 0;
   if (($26755 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4091 = 3660432;
    $$lcssa8$i$i4090 = $26755;
    label = 3741;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1484) {
   $26760 = HEAP32[915114] | 0;
   if (($26760 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4091 = 3660456;
    $$lcssa8$i$i4090 = $26760;
    label = 3741;
    break;
   }
  }
  $$3$i$i4092 = __Znwj(1484) | 0;
 } while (0);
 if ((label | 0) == 3741) {
  $26743 = $$lcssa8$i$i4090 + -4 | 0;
  HEAP32[$$lcssa$i$i4091 >> 2] = $26743;
  $$3$i$i4092 = HEAP32[$26743 >> 2] | 0;
 }
 $26764 = $$3$i$i4092 + 52 | 0;
 HEAP16[$$3$i$i4092 >> 1] = 716;
 HEAP16[$$3$i$i4092 + 2 >> 1] = 1;
 HEAP8[$$3$i$i4092 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4092 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4092 + 8 >> 2] = 1432;
 HEAP32[$$3$i$i4092 + 12 >> 2] = 1432;
 HEAP32[$$3$i$i4092 + 16 >> 2] = $26764;
 HEAP32[$$3$i$i4092 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4092 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4092 + 48 >> 0] = 0;
 HEAP32[$1808 >> 2] = $$3$i$i4092;
 _memcpy($26764 | 0, 2521818, 1432) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1808);
 if ($$3$i$i4092 | 0) {
  $26775 = $$3$i$i4092 + 5 | 0;
  $26777 = (HEAP8[$26775 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26775 >> 0] = $26777;
  if (!($26777 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4092);
  HEAP32[$1808 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7215 >> 1] = 637;
 HEAP16[$7216 >> 1] = 927;
 HEAP16[$7217 >> 1] = 637;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1484) label = 3756; else {
  $26781 = HEAP32[915090] | 0;
  if (($26781 | 0) == (HEAP32[915088] | 0)) label = 3756; else {
   $$lcssa$i$i4079 = 3660360;
   $$lcssa8$i$i4078 = $26781;
   label = 3757;
  }
 }
 do if ((label | 0) == 3756) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1484) {
   $26788 = HEAP32[915096] | 0;
   if (($26788 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4079 = 3660384;
    $$lcssa8$i$i4078 = $26788;
    label = 3757;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1484) {
   $26793 = HEAP32[915102] | 0;
   if (($26793 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4079 = 3660408;
    $$lcssa8$i$i4078 = $26793;
    label = 3757;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1484) {
   $26798 = HEAP32[915108] | 0;
   if (($26798 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4079 = 3660432;
    $$lcssa8$i$i4078 = $26798;
    label = 3757;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1484) {
   $26803 = HEAP32[915114] | 0;
   if (($26803 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4079 = 3660456;
    $$lcssa8$i$i4078 = $26803;
    label = 3757;
    break;
   }
  }
  $$3$i$i4080 = __Znwj(1484) | 0;
 } while (0);
 if ((label | 0) == 3757) {
  $26786 = $$lcssa8$i$i4078 + -4 | 0;
  HEAP32[$$lcssa$i$i4079 >> 2] = $26786;
  $$3$i$i4080 = HEAP32[$26786 >> 2] | 0;
 }
 $26807 = $$3$i$i4080 + 52 | 0;
 HEAP16[$$3$i$i4080 >> 1] = 716;
 HEAP16[$$3$i$i4080 + 2 >> 1] = 1;
 HEAP8[$$3$i$i4080 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4080 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4080 + 8 >> 2] = 1432;
 HEAP32[$$3$i$i4080 + 12 >> 2] = 1432;
 HEAP32[$$3$i$i4080 + 16 >> 2] = $26807;
 HEAP32[$$3$i$i4080 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4080 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4080 + 48 >> 0] = 0;
 HEAP32[$1809 >> 2] = $$3$i$i4080;
 _memcpy($26807 | 0, 2523250, 1432) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1809);
 if ($$3$i$i4080 | 0) {
  $26818 = $$3$i$i4080 + 5 | 0;
  $26820 = (HEAP8[$26818 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26818 >> 0] = $26820;
  if (!($26820 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4080);
  HEAP32[$1809 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7218 >> 1] = 638;
 HEAP16[$7219 >> 1] = 927;
 HEAP16[$7220 >> 1] = 638;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1484) label = 3772; else {
  $26824 = HEAP32[915090] | 0;
  if (($26824 | 0) == (HEAP32[915088] | 0)) label = 3772; else {
   $$lcssa$i$i4067 = 3660360;
   $$lcssa8$i$i4066 = $26824;
   label = 3773;
  }
 }
 do if ((label | 0) == 3772) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1484) {
   $26831 = HEAP32[915096] | 0;
   if (($26831 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4067 = 3660384;
    $$lcssa8$i$i4066 = $26831;
    label = 3773;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1484) {
   $26836 = HEAP32[915102] | 0;
   if (($26836 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4067 = 3660408;
    $$lcssa8$i$i4066 = $26836;
    label = 3773;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1484) {
   $26841 = HEAP32[915108] | 0;
   if (($26841 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4067 = 3660432;
    $$lcssa8$i$i4066 = $26841;
    label = 3773;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1484) {
   $26846 = HEAP32[915114] | 0;
   if (($26846 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4067 = 3660456;
    $$lcssa8$i$i4066 = $26846;
    label = 3773;
    break;
   }
  }
  $$3$i$i4068 = __Znwj(1484) | 0;
 } while (0);
 if ((label | 0) == 3773) {
  $26829 = $$lcssa8$i$i4066 + -4 | 0;
  HEAP32[$$lcssa$i$i4067 >> 2] = $26829;
  $$3$i$i4068 = HEAP32[$26829 >> 2] | 0;
 }
 $26850 = $$3$i$i4068 + 52 | 0;
 HEAP16[$$3$i$i4068 >> 1] = 716;
 HEAP16[$$3$i$i4068 + 2 >> 1] = 1;
 HEAP8[$$3$i$i4068 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4068 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4068 + 8 >> 2] = 1432;
 HEAP32[$$3$i$i4068 + 12 >> 2] = 1432;
 HEAP32[$$3$i$i4068 + 16 >> 2] = $26850;
 HEAP32[$$3$i$i4068 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4068 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4068 + 48 >> 0] = 0;
 HEAP32[$1810 >> 2] = $$3$i$i4068;
 _memcpy($26850 | 0, 2524682, 1432) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1810);
 if ($$3$i$i4068 | 0) {
  $26861 = $$3$i$i4068 + 5 | 0;
  $26863 = (HEAP8[$26861 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26861 >> 0] = $26863;
  if (!($26863 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4068);
  HEAP32[$1810 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7221 >> 1] = 639;
 HEAP16[$7222 >> 1] = 927;
 HEAP16[$7223 >> 1] = 639;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1484) label = 3788; else {
  $26867 = HEAP32[915090] | 0;
  if (($26867 | 0) == (HEAP32[915088] | 0)) label = 3788; else {
   $$lcssa$i$i4055 = 3660360;
   $$lcssa8$i$i4054 = $26867;
   label = 3789;
  }
 }
 do if ((label | 0) == 3788) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1484) {
   $26874 = HEAP32[915096] | 0;
   if (($26874 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4055 = 3660384;
    $$lcssa8$i$i4054 = $26874;
    label = 3789;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1484) {
   $26879 = HEAP32[915102] | 0;
   if (($26879 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4055 = 3660408;
    $$lcssa8$i$i4054 = $26879;
    label = 3789;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1484) {
   $26884 = HEAP32[915108] | 0;
   if (($26884 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4055 = 3660432;
    $$lcssa8$i$i4054 = $26884;
    label = 3789;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1484) {
   $26889 = HEAP32[915114] | 0;
   if (($26889 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4055 = 3660456;
    $$lcssa8$i$i4054 = $26889;
    label = 3789;
    break;
   }
  }
  $$3$i$i4056 = __Znwj(1484) | 0;
 } while (0);
 if ((label | 0) == 3789) {
  $26872 = $$lcssa8$i$i4054 + -4 | 0;
  HEAP32[$$lcssa$i$i4055 >> 2] = $26872;
  $$3$i$i4056 = HEAP32[$26872 >> 2] | 0;
 }
 $26893 = $$3$i$i4056 + 52 | 0;
 HEAP16[$$3$i$i4056 >> 1] = 716;
 HEAP16[$$3$i$i4056 + 2 >> 1] = 1;
 HEAP8[$$3$i$i4056 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4056 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4056 + 8 >> 2] = 1432;
 HEAP32[$$3$i$i4056 + 12 >> 2] = 1432;
 HEAP32[$$3$i$i4056 + 16 >> 2] = $26893;
 HEAP32[$$3$i$i4056 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4056 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4056 + 48 >> 0] = 0;
 HEAP32[$1811 >> 2] = $$3$i$i4056;
 _memcpy($26893 | 0, 2526114, 1432) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1811);
 if ($$3$i$i4056 | 0) {
  $26904 = $$3$i$i4056 + 5 | 0;
  $26906 = (HEAP8[$26904 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26904 >> 0] = $26906;
  if (!($26906 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4056);
  HEAP32[$1811 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7224 >> 1] = 640;
 HEAP16[$7225 >> 1] = 927;
 HEAP16[$7226 >> 1] = 640;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1484) label = 3804; else {
  $26910 = HEAP32[915090] | 0;
  if (($26910 | 0) == (HEAP32[915088] | 0)) label = 3804; else {
   $$lcssa$i$i4043 = 3660360;
   $$lcssa8$i$i4042 = $26910;
   label = 3805;
  }
 }
 do if ((label | 0) == 3804) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1484) {
   $26917 = HEAP32[915096] | 0;
   if (($26917 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4043 = 3660384;
    $$lcssa8$i$i4042 = $26917;
    label = 3805;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1484) {
   $26922 = HEAP32[915102] | 0;
   if (($26922 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4043 = 3660408;
    $$lcssa8$i$i4042 = $26922;
    label = 3805;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1484) {
   $26927 = HEAP32[915108] | 0;
   if (($26927 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4043 = 3660432;
    $$lcssa8$i$i4042 = $26927;
    label = 3805;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1484) {
   $26932 = HEAP32[915114] | 0;
   if (($26932 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4043 = 3660456;
    $$lcssa8$i$i4042 = $26932;
    label = 3805;
    break;
   }
  }
  $$3$i$i4044 = __Znwj(1484) | 0;
 } while (0);
 if ((label | 0) == 3805) {
  $26915 = $$lcssa8$i$i4042 + -4 | 0;
  HEAP32[$$lcssa$i$i4043 >> 2] = $26915;
  $$3$i$i4044 = HEAP32[$26915 >> 2] | 0;
 }
 $26936 = $$3$i$i4044 + 52 | 0;
 HEAP16[$$3$i$i4044 >> 1] = 716;
 HEAP16[$$3$i$i4044 + 2 >> 1] = 1;
 HEAP8[$$3$i$i4044 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4044 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4044 + 8 >> 2] = 1432;
 HEAP32[$$3$i$i4044 + 12 >> 2] = 1432;
 HEAP32[$$3$i$i4044 + 16 >> 2] = $26936;
 HEAP32[$$3$i$i4044 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4044 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4044 + 48 >> 0] = 0;
 HEAP32[$1812 >> 2] = $$3$i$i4044;
 _memcpy($26936 | 0, 2527546, 1432) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1812);
 if ($$3$i$i4044 | 0) {
  $26947 = $$3$i$i4044 + 5 | 0;
  $26949 = (HEAP8[$26947 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26947 >> 0] = $26949;
  if (!($26949 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4044);
  HEAP32[$1812 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7227 >> 1] = 641;
 HEAP16[$7228 >> 1] = 927;
 HEAP16[$7229 >> 1] = 641;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1484) label = 3820; else {
  $26953 = HEAP32[915090] | 0;
  if (($26953 | 0) == (HEAP32[915088] | 0)) label = 3820; else {
   $$lcssa$i$i4031 = 3660360;
   $$lcssa8$i$i4030 = $26953;
   label = 3821;
  }
 }
 do if ((label | 0) == 3820) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1484) {
   $26960 = HEAP32[915096] | 0;
   if (($26960 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4031 = 3660384;
    $$lcssa8$i$i4030 = $26960;
    label = 3821;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1484) {
   $26965 = HEAP32[915102] | 0;
   if (($26965 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4031 = 3660408;
    $$lcssa8$i$i4030 = $26965;
    label = 3821;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1484) {
   $26970 = HEAP32[915108] | 0;
   if (($26970 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4031 = 3660432;
    $$lcssa8$i$i4030 = $26970;
    label = 3821;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1484) {
   $26975 = HEAP32[915114] | 0;
   if (($26975 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4031 = 3660456;
    $$lcssa8$i$i4030 = $26975;
    label = 3821;
    break;
   }
  }
  $$3$i$i4032 = __Znwj(1484) | 0;
 } while (0);
 if ((label | 0) == 3821) {
  $26958 = $$lcssa8$i$i4030 + -4 | 0;
  HEAP32[$$lcssa$i$i4031 >> 2] = $26958;
  $$3$i$i4032 = HEAP32[$26958 >> 2] | 0;
 }
 $26979 = $$3$i$i4032 + 52 | 0;
 HEAP16[$$3$i$i4032 >> 1] = 716;
 HEAP16[$$3$i$i4032 + 2 >> 1] = 1;
 HEAP8[$$3$i$i4032 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4032 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4032 + 8 >> 2] = 1432;
 HEAP32[$$3$i$i4032 + 12 >> 2] = 1432;
 HEAP32[$$3$i$i4032 + 16 >> 2] = $26979;
 HEAP32[$$3$i$i4032 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4032 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4032 + 48 >> 0] = 0;
 HEAP32[$1813 >> 2] = $$3$i$i4032;
 _memcpy($26979 | 0, 2528978, 1432) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1813);
 if ($$3$i$i4032 | 0) {
  $26990 = $$3$i$i4032 + 5 | 0;
  $26992 = (HEAP8[$26990 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$26990 >> 0] = $26992;
  if (!($26992 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4032);
  HEAP32[$1813 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7230 >> 1] = 642;
 HEAP16[$7231 >> 1] = 927;
 HEAP16[$7232 >> 1] = 646;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 7212) label = 3836; else {
  $26996 = HEAP32[915090] | 0;
  if (($26996 | 0) == (HEAP32[915088] | 0)) label = 3836; else {
   $$lcssa$i$i4019 = 3660360;
   $$lcssa8$i$i4018 = $26996;
   label = 3837;
  }
 }
 do if ((label | 0) == 3836) {
  if ((HEAP32[915097] | 0) >>> 0 >= 7212) {
   $27003 = HEAP32[915096] | 0;
   if (($27003 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4019 = 3660384;
    $$lcssa8$i$i4018 = $27003;
    label = 3837;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 7212) {
   $27008 = HEAP32[915102] | 0;
   if (($27008 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4019 = 3660408;
    $$lcssa8$i$i4018 = $27008;
    label = 3837;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 7212) {
   $27013 = HEAP32[915108] | 0;
   if (($27013 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4019 = 3660432;
    $$lcssa8$i$i4018 = $27013;
    label = 3837;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 7212) {
   $27018 = HEAP32[915114] | 0;
   if (($27018 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4019 = 3660456;
    $$lcssa8$i$i4018 = $27018;
    label = 3837;
    break;
   }
  }
  $$3$i$i4020 = __Znwj(7212) | 0;
 } while (0);
 if ((label | 0) == 3837) {
  $27001 = $$lcssa8$i$i4018 + -4 | 0;
  HEAP32[$$lcssa$i$i4019 >> 2] = $27001;
  $$3$i$i4020 = HEAP32[$27001 >> 2] | 0;
 }
 $27022 = $$3$i$i4020 + 52 | 0;
 HEAP16[$$3$i$i4020 >> 1] = 716;
 HEAP16[$$3$i$i4020 + 2 >> 1] = 5;
 HEAP8[$$3$i$i4020 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4020 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4020 + 8 >> 2] = 1432;
 HEAP32[$$3$i$i4020 + 12 >> 2] = 7160;
 HEAP32[$$3$i$i4020 + 16 >> 2] = $27022;
 HEAP32[$$3$i$i4020 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4020 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4020 + 48 >> 0] = 0;
 HEAP32[$1814 >> 2] = $$3$i$i4020;
 _memcpy($27022 | 0, 2530410, 1432) | 0;
 _memcpy($$3$i$i4020 + 1484 | 0, 2531842, 1432) | 0;
 _memcpy($$3$i$i4020 + 2916 | 0, 2533274, 1432) | 0;
 _memcpy($$3$i$i4020 + 4348 | 0, 2534706, 1432) | 0;
 _memcpy($$3$i$i4020 + 5780 | 0, 2536138, 1432) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1814);
 if ($$3$i$i4020 | 0) {
  $27037 = $$3$i$i4020 + 5 | 0;
  $27039 = (HEAP8[$27037 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$27037 >> 0] = $27039;
  if (!($27039 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4020);
  HEAP32[$1814 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7233 >> 1] = 647;
 HEAP16[$7234 >> 1] = 927;
 HEAP16[$7235 >> 1] = 647;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1484) label = 3852; else {
  $27043 = HEAP32[915090] | 0;
  if (($27043 | 0) == (HEAP32[915088] | 0)) label = 3852; else {
   $$lcssa$i$i4007 = 3660360;
   $$lcssa8$i$i4006 = $27043;
   label = 3853;
  }
 }
 do if ((label | 0) == 3852) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1484) {
   $27050 = HEAP32[915096] | 0;
   if (($27050 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i4007 = 3660384;
    $$lcssa8$i$i4006 = $27050;
    label = 3853;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1484) {
   $27055 = HEAP32[915102] | 0;
   if (($27055 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i4007 = 3660408;
    $$lcssa8$i$i4006 = $27055;
    label = 3853;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1484) {
   $27060 = HEAP32[915108] | 0;
   if (($27060 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i4007 = 3660432;
    $$lcssa8$i$i4006 = $27060;
    label = 3853;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1484) {
   $27065 = HEAP32[915114] | 0;
   if (($27065 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i4007 = 3660456;
    $$lcssa8$i$i4006 = $27065;
    label = 3853;
    break;
   }
  }
  $$3$i$i4008 = __Znwj(1484) | 0;
 } while (0);
 if ((label | 0) == 3853) {
  $27048 = $$lcssa8$i$i4006 + -4 | 0;
  HEAP32[$$lcssa$i$i4007 >> 2] = $27048;
  $$3$i$i4008 = HEAP32[$27048 >> 2] | 0;
 }
 $27069 = $$3$i$i4008 + 52 | 0;
 HEAP16[$$3$i$i4008 >> 1] = 716;
 HEAP16[$$3$i$i4008 + 2 >> 1] = 1;
 HEAP8[$$3$i$i4008 + 4 >> 0] = 16;
 HEAP8[$$3$i$i4008 + 5 >> 0] = 1;
 HEAP32[$$3$i$i4008 + 8 >> 2] = 1432;
 HEAP32[$$3$i$i4008 + 12 >> 2] = 1432;
 HEAP32[$$3$i$i4008 + 16 >> 2] = $27069;
 HEAP32[$$3$i$i4008 + 20 >> 2] = 0;
 HEAP32[$$3$i$i4008 + 24 >> 2] = 0;
 HEAP8[$$3$i$i4008 + 48 >> 0] = 0;
 HEAP32[$1815 >> 2] = $$3$i$i4008;
 _memcpy($27069 | 0, 2537570, 1432) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1815);
 if ($$3$i$i4008 | 0) {
  $27080 = $$3$i$i4008 + 5 | 0;
  $27082 = (HEAP8[$27080 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$27080 >> 0] = $27082;
  if (!($27082 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i4008);
  HEAP32[$1815 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7236 >> 1] = 648;
 HEAP16[$7237 >> 1] = 927;
 HEAP16[$7238 >> 1] = 648;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1484) label = 3868; else {
  $27086 = HEAP32[915090] | 0;
  if (($27086 | 0) == (HEAP32[915088] | 0)) label = 3868; else {
   $$lcssa$i$i3995 = 3660360;
   $$lcssa8$i$i3994 = $27086;
   label = 3869;
  }
 }
 do if ((label | 0) == 3868) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1484) {
   $27093 = HEAP32[915096] | 0;
   if (($27093 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3995 = 3660384;
    $$lcssa8$i$i3994 = $27093;
    label = 3869;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1484) {
   $27098 = HEAP32[915102] | 0;
   if (($27098 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3995 = 3660408;
    $$lcssa8$i$i3994 = $27098;
    label = 3869;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1484) {
   $27103 = HEAP32[915108] | 0;
   if (($27103 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3995 = 3660432;
    $$lcssa8$i$i3994 = $27103;
    label = 3869;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1484) {
   $27108 = HEAP32[915114] | 0;
   if (($27108 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3995 = 3660456;
    $$lcssa8$i$i3994 = $27108;
    label = 3869;
    break;
   }
  }
  $$3$i$i3996 = __Znwj(1484) | 0;
 } while (0);
 if ((label | 0) == 3869) {
  $27091 = $$lcssa8$i$i3994 + -4 | 0;
  HEAP32[$$lcssa$i$i3995 >> 2] = $27091;
  $$3$i$i3996 = HEAP32[$27091 >> 2] | 0;
 }
 $27112 = $$3$i$i3996 + 52 | 0;
 HEAP16[$$3$i$i3996 >> 1] = 716;
 HEAP16[$$3$i$i3996 + 2 >> 1] = 1;
 HEAP8[$$3$i$i3996 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3996 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3996 + 8 >> 2] = 1432;
 HEAP32[$$3$i$i3996 + 12 >> 2] = 1432;
 HEAP32[$$3$i$i3996 + 16 >> 2] = $27112;
 HEAP32[$$3$i$i3996 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3996 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3996 + 48 >> 0] = 0;
 HEAP32[$1816 >> 2] = $$3$i$i3996;
 _memcpy($27112 | 0, 2539002, 1432) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1816);
 if ($$3$i$i3996 | 0) {
  $27123 = $$3$i$i3996 + 5 | 0;
  $27125 = (HEAP8[$27123 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$27123 >> 0] = $27125;
  if (!($27125 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3996);
  HEAP32[$1816 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7239 >> 1] = 649;
 HEAP16[$7240 >> 1] = 927;
 HEAP16[$7241 >> 1] = 650;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2916) label = 3884; else {
  $27129 = HEAP32[915090] | 0;
  if (($27129 | 0) == (HEAP32[915088] | 0)) label = 3884; else {
   $$lcssa$i$i3983 = 3660360;
   $$lcssa8$i$i3982 = $27129;
   label = 3885;
  }
 }
 do if ((label | 0) == 3884) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2916) {
   $27136 = HEAP32[915096] | 0;
   if (($27136 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3983 = 3660384;
    $$lcssa8$i$i3982 = $27136;
    label = 3885;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2916) {
   $27141 = HEAP32[915102] | 0;
   if (($27141 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3983 = 3660408;
    $$lcssa8$i$i3982 = $27141;
    label = 3885;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2916) {
   $27146 = HEAP32[915108] | 0;
   if (($27146 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3983 = 3660432;
    $$lcssa8$i$i3982 = $27146;
    label = 3885;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2916) {
   $27151 = HEAP32[915114] | 0;
   if (($27151 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3983 = 3660456;
    $$lcssa8$i$i3982 = $27151;
    label = 3885;
    break;
   }
  }
  $$3$i$i3984 = __Znwj(2916) | 0;
 } while (0);
 if ((label | 0) == 3885) {
  $27134 = $$lcssa8$i$i3982 + -4 | 0;
  HEAP32[$$lcssa$i$i3983 >> 2] = $27134;
  $$3$i$i3984 = HEAP32[$27134 >> 2] | 0;
 }
 $27155 = $$3$i$i3984 + 52 | 0;
 HEAP16[$$3$i$i3984 >> 1] = 716;
 HEAP16[$$3$i$i3984 + 2 >> 1] = 2;
 HEAP8[$$3$i$i3984 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3984 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3984 + 8 >> 2] = 1432;
 HEAP32[$$3$i$i3984 + 12 >> 2] = 2864;
 HEAP32[$$3$i$i3984 + 16 >> 2] = $27155;
 HEAP32[$$3$i$i3984 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3984 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3984 + 48 >> 0] = 0;
 HEAP32[$1817 >> 2] = $$3$i$i3984;
 _memcpy($27155 | 0, 2540434, 1432) | 0;
 _memcpy($$3$i$i3984 + 1484 | 0, 2541866, 1432) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1817);
 if ($$3$i$i3984 | 0) {
  $27167 = $$3$i$i3984 + 5 | 0;
  $27169 = (HEAP8[$27167 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$27167 >> 0] = $27169;
  if (!($27169 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3984);
  HEAP32[$1817 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7242 >> 1] = 651;
 HEAP16[$7243 >> 1] = 994;
 HEAP16[$7244 >> 1] = 662;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 18868) label = 3900; else {
  $27173 = HEAP32[915090] | 0;
  if (($27173 | 0) == (HEAP32[915088] | 0)) label = 3900; else {
   $$lcssa$i$i3971 = 3660360;
   $$lcssa8$i$i3970 = $27173;
   label = 3901;
  }
 }
 do if ((label | 0) == 3900) {
  if ((HEAP32[915097] | 0) >>> 0 >= 18868) {
   $27180 = HEAP32[915096] | 0;
   if (($27180 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3971 = 3660384;
    $$lcssa8$i$i3970 = $27180;
    label = 3901;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 18868) {
   $27185 = HEAP32[915102] | 0;
   if (($27185 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3971 = 3660408;
    $$lcssa8$i$i3970 = $27185;
    label = 3901;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 18868) {
   $27190 = HEAP32[915108] | 0;
   if (($27190 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3971 = 3660432;
    $$lcssa8$i$i3970 = $27190;
    label = 3901;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 18868) {
   $27195 = HEAP32[915114] | 0;
   if (($27195 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3971 = 3660456;
    $$lcssa8$i$i3970 = $27195;
    label = 3901;
    break;
   }
  }
  $$3$i$i3972 = __Znwj(18868) | 0;
 } while (0);
 if ((label | 0) == 3901) {
  $27178 = $$lcssa8$i$i3970 + -4 | 0;
  HEAP32[$$lcssa$i$i3971 >> 2] = $27178;
  $$3$i$i3972 = HEAP32[$27178 >> 2] | 0;
 }
 $27199 = $$3$i$i3972 + 52 | 0;
 HEAP16[$$3$i$i3972 >> 1] = 784;
 HEAP16[$$3$i$i3972 + 2 >> 1] = 12;
 HEAP8[$$3$i$i3972 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3972 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3972 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i3972 + 12 >> 2] = 18816;
 HEAP32[$$3$i$i3972 + 16 >> 2] = $27199;
 HEAP32[$$3$i$i3972 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3972 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3972 + 48 >> 0] = 0;
 HEAP32[$1818 >> 2] = $$3$i$i3972;
 _memcpy($27199 | 0, 2543298, 1568) | 0;
 _memcpy($$3$i$i3972 + 1620 | 0, 2544866, 1568) | 0;
 _memcpy($$3$i$i3972 + 3188 | 0, 2546434, 1568) | 0;
 _memcpy($$3$i$i3972 + 4756 | 0, 2548002, 1568) | 0;
 _memcpy($$3$i$i3972 + 6324 | 0, 2549570, 1568) | 0;
 _memcpy($$3$i$i3972 + 7892 | 0, 2551138, 1568) | 0;
 _memcpy($$3$i$i3972 + 9460 | 0, 2552706, 1568) | 0;
 _memcpy($$3$i$i3972 + 11028 | 0, 2554274, 1568) | 0;
 _memcpy($$3$i$i3972 + 12596 | 0, 2555842, 1568) | 0;
 _memcpy($$3$i$i3972 + 14164 | 0, 2557410, 1568) | 0;
 _memcpy($$3$i$i3972 + 15732 | 0, 2558978, 1568) | 0;
 _memcpy($$3$i$i3972 + 17300 | 0, 2560546, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1818);
 if ($$3$i$i3972 | 0) {
  $27221 = $$3$i$i3972 + 5 | 0;
  $27223 = (HEAP8[$27221 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$27221 >> 0] = $27223;
  if (!($27223 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3972);
  HEAP32[$1818 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7245 >> 1] = 663;
 HEAP16[$7246 >> 1] = 994;
 HEAP16[$7247 >> 1] = 666;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6324) label = 3916; else {
  $27227 = HEAP32[915090] | 0;
  if (($27227 | 0) == (HEAP32[915088] | 0)) label = 3916; else {
   $$lcssa$i$i3959 = 3660360;
   $$lcssa8$i$i3958 = $27227;
   label = 3917;
  }
 }
 do if ((label | 0) == 3916) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6324) {
   $27234 = HEAP32[915096] | 0;
   if (($27234 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3959 = 3660384;
    $$lcssa8$i$i3958 = $27234;
    label = 3917;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6324) {
   $27239 = HEAP32[915102] | 0;
   if (($27239 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3959 = 3660408;
    $$lcssa8$i$i3958 = $27239;
    label = 3917;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6324) {
   $27244 = HEAP32[915108] | 0;
   if (($27244 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3959 = 3660432;
    $$lcssa8$i$i3958 = $27244;
    label = 3917;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6324) {
   $27249 = HEAP32[915114] | 0;
   if (($27249 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3959 = 3660456;
    $$lcssa8$i$i3958 = $27249;
    label = 3917;
    break;
   }
  }
  $$3$i$i3960 = __Znwj(6324) | 0;
 } while (0);
 if ((label | 0) == 3917) {
  $27232 = $$lcssa8$i$i3958 + -4 | 0;
  HEAP32[$$lcssa$i$i3959 >> 2] = $27232;
  $$3$i$i3960 = HEAP32[$27232 >> 2] | 0;
 }
 $27253 = $$3$i$i3960 + 52 | 0;
 HEAP16[$$3$i$i3960 >> 1] = 784;
 HEAP16[$$3$i$i3960 + 2 >> 1] = 4;
 HEAP8[$$3$i$i3960 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3960 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3960 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i3960 + 12 >> 2] = 6272;
 HEAP32[$$3$i$i3960 + 16 >> 2] = $27253;
 HEAP32[$$3$i$i3960 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3960 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3960 + 48 >> 0] = 0;
 HEAP32[$1819 >> 2] = $$3$i$i3960;
 _memcpy($27253 | 0, 2562114, 1568) | 0;
 _memcpy($$3$i$i3960 + 1620 | 0, 2563682, 1568) | 0;
 _memcpy($$3$i$i3960 + 3188 | 0, 2565250, 1568) | 0;
 _memcpy($$3$i$i3960 + 4756 | 0, 2566818, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1819);
 if ($$3$i$i3960 | 0) {
  $27267 = $$3$i$i3960 + 5 | 0;
  $27269 = (HEAP8[$27267 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$27267 >> 0] = $27269;
  if (!($27269 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3960);
  HEAP32[$1819 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 991;
 HEAP16[$7248 >> 1] = 635;
 HEAP16[$7249 >> 1] = 994;
 HEAP16[$7250 >> 1] = 650;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 180) label = 3932; else {
  $27273 = HEAP32[915090] | 0;
  if (($27273 | 0) == (HEAP32[915088] | 0)) label = 3932; else {
   $$lcssa$i$i3947 = 3660360;
   $$lcssa8$i$i3946 = $27273;
   label = 3933;
  }
 }
 do if ((label | 0) == 3932) {
  if ((HEAP32[915097] | 0) >>> 0 >= 180) {
   $27280 = HEAP32[915096] | 0;
   if (($27280 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3947 = 3660384;
    $$lcssa8$i$i3946 = $27280;
    label = 3933;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 180) {
   $27285 = HEAP32[915102] | 0;
   if (($27285 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3947 = 3660408;
    $$lcssa8$i$i3946 = $27285;
    label = 3933;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 180) {
   $27290 = HEAP32[915108] | 0;
   if (($27290 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3947 = 3660432;
    $$lcssa8$i$i3946 = $27290;
    label = 3933;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 180) {
   $27295 = HEAP32[915114] | 0;
   if (($27295 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3947 = 3660456;
    $$lcssa8$i$i3946 = $27295;
    label = 3933;
    break;
   }
  }
  $$3$i$i3948 = __Znwj(180) | 0;
 } while (0);
 if ((label | 0) == 3933) {
  $27278 = $$lcssa8$i$i3946 + -4 | 0;
  HEAP32[$$lcssa$i$i3947 >> 2] = $27278;
  $$3$i$i3948 = HEAP32[$27278 >> 2] | 0;
 }
 $27299 = $$3$i$i3948 + 52 | 0;
 HEAP16[$$3$i$i3948 >> 1] = 4;
 HEAP16[$$3$i$i3948 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3948 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3948 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3948 + 8 >> 2] = 8;
 HEAP32[$$3$i$i3948 + 12 >> 2] = 128;
 HEAP32[$$3$i$i3948 + 16 >> 2] = $27299;
 HEAP32[$$3$i$i3948 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3948 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3948 + 48 >> 0] = 0;
 HEAP32[$1820 >> 2] = $$3$i$i3948;
 $27309 = $27299;
 $27310 = $27309;
 HEAP8[$27310 >> 0] = -419701030;
 HEAP8[$27310 + 1 >> 0] = -419701030 >> 8;
 HEAP8[$27310 + 2 >> 0] = -419701030 >> 16;
 HEAP8[$27310 + 3 >> 0] = -419701030 >> 24;
 $27312 = $27309 + 4 | 0;
 HEAP8[$27312 >> 0] = -419698982;
 HEAP8[$27312 + 1 >> 0] = -419698982 >> 8;
 HEAP8[$27312 + 2 >> 0] = -419698982 >> 16;
 HEAP8[$27312 + 3 >> 0] = -419698982 >> 24;
 $27314 = $$3$i$i3948 + 60 | 0;
 $27315 = $27314;
 HEAP8[$27315 >> 0] = -419764485;
 HEAP8[$27315 + 1 >> 0] = -419764485 >> 8;
 HEAP8[$27315 + 2 >> 0] = -419764485 >> 16;
 HEAP8[$27315 + 3 >> 0] = -419764485 >> 24;
 $27317 = $27314 + 4 | 0;
 HEAP8[$27317 >> 0] = -553982213;
 HEAP8[$27317 + 1 >> 0] = -553982213 >> 8;
 HEAP8[$27317 + 2 >> 0] = -553982213 >> 16;
 HEAP8[$27317 + 3 >> 0] = -553982213 >> 24;
 $27319 = $$3$i$i3948 + 68 | 0;
 $27320 = $27319;
 HEAP8[$27320 >> 0] = -417601797;
 HEAP8[$27320 + 1 >> 0] = -417601797 >> 8;
 HEAP8[$27320 + 2 >> 0] = -417601797 >> 16;
 HEAP8[$27320 + 3 >> 0] = -417601797 >> 24;
 $27322 = $27319 + 4 | 0;
 HEAP8[$27322 >> 0] = -417601797;
 HEAP8[$27322 + 1 >> 0] = -417601797 >> 8;
 HEAP8[$27322 + 2 >> 0] = -417601797 >> 16;
 HEAP8[$27322 + 3 >> 0] = -417601797 >> 24;
 $27324 = $$3$i$i3948 + 76 | 0;
 $27325 = $27324;
 HEAP8[$27325 >> 0] = -417601765;
 HEAP8[$27325 + 1 >> 0] = -417601765 >> 8;
 HEAP8[$27325 + 2 >> 0] = -417601765 >> 16;
 HEAP8[$27325 + 3 >> 0] = -417601765 >> 24;
 $27327 = $27324 + 4 | 0;
 HEAP8[$27327 >> 0] = -417601765;
 HEAP8[$27327 + 1 >> 0] = -417601765 >> 8;
 HEAP8[$27327 + 2 >> 0] = -417601765 >> 16;
 HEAP8[$27327 + 3 >> 0] = -417601765 >> 24;
 $27329 = $$3$i$i3948 + 84 | 0;
 $27330 = $27329;
 HEAP8[$27330 >> 0] = -281221349;
 HEAP8[$27330 + 1 >> 0] = -281221349 >> 8;
 HEAP8[$27330 + 2 >> 0] = -281221349 >> 16;
 HEAP8[$27330 + 3 >> 0] = -281221349 >> 24;
 $27332 = $27329 + 4 | 0;
 HEAP8[$27332 >> 0] = -281221348;
 HEAP8[$27332 + 1 >> 0] = -281221348 >> 8;
 HEAP8[$27332 + 2 >> 0] = -281221348 >> 16;
 HEAP8[$27332 + 3 >> 0] = -281221348 >> 24;
 $27334 = $$3$i$i3948 + 92 | 0;
 $27335 = $27334;
 HEAP8[$27335 >> 0] = -415436996;
 HEAP8[$27335 + 1 >> 0] = -415436996 >> 8;
 HEAP8[$27335 + 2 >> 0] = -415436996 >> 16;
 HEAP8[$27335 + 3 >> 0] = -415436996 >> 24;
 $27337 = $27334 + 4 | 0;
 HEAP8[$27337 >> 0] = -415502532;
 HEAP8[$27337 + 1 >> 0] = -415502532 >> 8;
 HEAP8[$27337 + 2 >> 0] = -415502532 >> 16;
 HEAP8[$27337 + 3 >> 0] = -415502532 >> 24;
 $27339 = $$3$i$i3948 + 100 | 0;
 $27340 = $27339;
 HEAP8[$27340 >> 0] = -279122116;
 HEAP8[$27340 + 1 >> 0] = -279122116 >> 8;
 HEAP8[$27340 + 2 >> 0] = -279122116 >> 16;
 HEAP8[$27340 + 3 >> 0] = -279122116 >> 24;
 $27342 = $27339 + 4 | 0;
 HEAP8[$27342 >> 0] = -279056580;
 HEAP8[$27342 + 1 >> 0] = -279056580 >> 8;
 HEAP8[$27342 + 2 >> 0] = -279056580 >> 16;
 HEAP8[$27342 + 3 >> 0] = -279056580 >> 24;
 $27344 = $$3$i$i3948 + 108 | 0;
 $27345 = $27344;
 HEAP8[$27345 >> 0] = -279122083;
 HEAP8[$27345 + 1 >> 0] = -279122083 >> 8;
 HEAP8[$27345 + 2 >> 0] = -279122083 >> 16;
 HEAP8[$27345 + 3 >> 0] = -279122083 >> 24;
 $27347 = $27344 + 4 | 0;
 HEAP8[$27347 >> 0] = -279122083;
 HEAP8[$27347 + 1 >> 0] = -279122083 >> 8;
 HEAP8[$27347 + 2 >> 0] = -279122083 >> 16;
 HEAP8[$27347 + 3 >> 0] = -279122083 >> 24;
 $27349 = $$3$i$i3948 + 116 | 0;
 $27350 = $27349;
 HEAP8[$27350 >> 0] = -142741667;
 HEAP8[$27350 + 1 >> 0] = -142741667 >> 8;
 HEAP8[$27350 + 2 >> 0] = -142741667 >> 16;
 HEAP8[$27350 + 3 >> 0] = -142741667 >> 24;
 $27352 = $27349 + 4 | 0;
 HEAP8[$27352 >> 0] = -142741667;
 HEAP8[$27352 + 1 >> 0] = -142741667 >> 8;
 HEAP8[$27352 + 2 >> 0] = -142741667 >> 16;
 HEAP8[$27352 + 3 >> 0] = -142741667 >> 24;
 $27354 = $$3$i$i3948 + 124 | 0;
 $27355 = $27354;
 HEAP8[$27355 >> 0] = -279054467;
 HEAP8[$27355 + 1 >> 0] = -279054467 >> 8;
 HEAP8[$27355 + 2 >> 0] = -279054467 >> 16;
 HEAP8[$27355 + 3 >> 0] = -279054467 >> 24;
 $27357 = $27354 + 4 | 0;
 HEAP8[$27357 >> 0] = -279054467;
 HEAP8[$27357 + 1 >> 0] = -279054467 >> 8;
 HEAP8[$27357 + 2 >> 0] = -279054467 >> 16;
 HEAP8[$27357 + 3 >> 0] = -279054467 >> 24;
 $27359 = $$3$i$i3948 + 132 | 0;
 $27360 = $27359;
 HEAP8[$27360 >> 0] = -140576899;
 HEAP8[$27360 + 1 >> 0] = -140576899 >> 8;
 HEAP8[$27360 + 2 >> 0] = -140576899 >> 16;
 HEAP8[$27360 + 3 >> 0] = -140576899 >> 24;
 $27362 = $27359 + 4 | 0;
 HEAP8[$27362 >> 0] = -140576899;
 HEAP8[$27362 + 1 >> 0] = -140576899 >> 8;
 HEAP8[$27362 + 2 >> 0] = -140576899 >> 16;
 HEAP8[$27362 + 3 >> 0] = -140576899 >> 24;
 $27364 = $$3$i$i3948 + 140 | 0;
 $27365 = $27364;
 HEAP8[$27365 >> 0] = -142739554;
 HEAP8[$27365 + 1 >> 0] = -142739554 >> 8;
 HEAP8[$27365 + 2 >> 0] = -142739554 >> 16;
 HEAP8[$27365 + 3 >> 0] = -142739554 >> 24;
 $27367 = $27364 + 4 | 0;
 HEAP8[$27367 >> 0] = -142739554;
 HEAP8[$27367 + 1 >> 0] = -142739554 >> 8;
 HEAP8[$27367 + 2 >> 0] = -142739554 >> 16;
 HEAP8[$27367 + 3 >> 0] = -142739554 >> 24;
 $27369 = $$3$i$i3948 + 148 | 0;
 $27370 = $27369;
 HEAP8[$27370 >> 0] = -4261986;
 HEAP8[$27370 + 1 >> 0] = -4261986 >> 8;
 HEAP8[$27370 + 2 >> 0] = -4261986 >> 16;
 HEAP8[$27370 + 3 >> 0] = -4261986 >> 24;
 $27372 = $27369 + 4 | 0;
 HEAP8[$27372 >> 0] = -4261986;
 HEAP8[$27372 + 1 >> 0] = -4261986 >> 8;
 HEAP8[$27372 + 2 >> 0] = -4261986 >> 16;
 HEAP8[$27372 + 3 >> 0] = -4261986 >> 24;
 $27374 = $$3$i$i3948 + 156 | 0;
 $27375 = $27374;
 HEAP8[$27375 >> 0] = -140574786;
 HEAP8[$27375 + 1 >> 0] = -140574786 >> 8;
 HEAP8[$27375 + 2 >> 0] = -140574786 >> 16;
 HEAP8[$27375 + 3 >> 0] = -140574786 >> 24;
 $27377 = $27374 + 4 | 0;
 HEAP8[$27377 >> 0] = -140574786;
 HEAP8[$27377 + 1 >> 0] = -140574786 >> 8;
 HEAP8[$27377 + 2 >> 0] = -140574786 >> 16;
 HEAP8[$27377 + 3 >> 0] = -140574786 >> 24;
 $27379 = $$3$i$i3948 + 164 | 0;
 $27380 = $27379;
 HEAP8[$27380 >> 0] = -2097218;
 HEAP8[$27380 + 1 >> 0] = -2097218 >> 8;
 HEAP8[$27380 + 2 >> 0] = -2097218 >> 16;
 HEAP8[$27380 + 3 >> 0] = -2097218 >> 24;
 $27382 = $27379 + 4 | 0;
 HEAP8[$27382 >> 0] = -2097218;
 HEAP8[$27382 + 1 >> 0] = -2097218 >> 8;
 HEAP8[$27382 + 2 >> 0] = -2097218 >> 16;
 HEAP8[$27382 + 3 >> 0] = -2097218 >> 24;
 $27384 = $$3$i$i3948 + 172 | 0;
 $27385 = $27384;
 HEAP8[$27385 >> 0] = -4259873;
 HEAP8[$27385 + 1 >> 0] = -4259873 >> 8;
 HEAP8[$27385 + 2 >> 0] = -4259873 >> 16;
 HEAP8[$27385 + 3 >> 0] = -4259873 >> 24;
 $27387 = $27384 + 4 | 0;
 HEAP8[$27387 >> 0] = -4259873;
 HEAP8[$27387 + 1 >> 0] = -4259873 >> 8;
 HEAP8[$27387 + 2 >> 0] = -4259873 >> 16;
 HEAP8[$27387 + 3 >> 0] = -4259873 >> 24;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1820);
 if ($$3$i$i3948 | 0) {
  $27389 = $$3$i$i3948 + 5 | 0;
  $27391 = (HEAP8[$27389 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$27389 >> 0] = $27391;
  if (!($27391 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3948);
  HEAP32[$1820 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7251 >> 1] = 631;
 HEAP16[$7252 >> 1] = 994;
 HEAP16[$7253 >> 1] = 634;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6324) label = 3948; else {
  $27395 = HEAP32[915090] | 0;
  if (($27395 | 0) == (HEAP32[915088] | 0)) label = 3948; else {
   $$lcssa$i$i3935 = 3660360;
   $$lcssa8$i$i3934 = $27395;
   label = 3949;
  }
 }
 do if ((label | 0) == 3948) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6324) {
   $27402 = HEAP32[915096] | 0;
   if (($27402 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3935 = 3660384;
    $$lcssa8$i$i3934 = $27402;
    label = 3949;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6324) {
   $27407 = HEAP32[915102] | 0;
   if (($27407 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3935 = 3660408;
    $$lcssa8$i$i3934 = $27407;
    label = 3949;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6324) {
   $27412 = HEAP32[915108] | 0;
   if (($27412 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3935 = 3660432;
    $$lcssa8$i$i3934 = $27412;
    label = 3949;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6324) {
   $27417 = HEAP32[915114] | 0;
   if (($27417 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3935 = 3660456;
    $$lcssa8$i$i3934 = $27417;
    label = 3949;
    break;
   }
  }
  $$3$i$i3936 = __Znwj(6324) | 0;
 } while (0);
 if ((label | 0) == 3949) {
  $27400 = $$lcssa8$i$i3934 + -4 | 0;
  HEAP32[$$lcssa$i$i3935 >> 2] = $27400;
  $$3$i$i3936 = HEAP32[$27400 >> 2] | 0;
 }
 $27421 = $$3$i$i3936 + 52 | 0;
 HEAP16[$$3$i$i3936 >> 1] = 784;
 HEAP16[$$3$i$i3936 + 2 >> 1] = 4;
 HEAP8[$$3$i$i3936 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3936 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3936 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i3936 + 12 >> 2] = 6272;
 HEAP32[$$3$i$i3936 + 16 >> 2] = $27421;
 HEAP32[$$3$i$i3936 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3936 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3936 + 48 >> 0] = 0;
 HEAP32[$1821 >> 2] = $$3$i$i3936;
 _memcpy($27421 | 0, 2568386, 1568) | 0;
 _memcpy($$3$i$i3936 + 1620 | 0, 2569954, 1568) | 0;
 _memcpy($$3$i$i3936 + 3188 | 0, 2571522, 1568) | 0;
 _memcpy($$3$i$i3936 + 4756 | 0, 2573090, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1821);
 if ($$3$i$i3936 | 0) {
  $27435 = $$3$i$i3936 + 5 | 0;
  $27437 = (HEAP8[$27435 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$27435 >> 0] = $27437;
  if (!($27437 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3936);
  HEAP32[$1821 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7254 >> 1] = 667;
 HEAP16[$7255 >> 1] = 887;
 HEAP16[$7256 >> 1] = 679;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 17628) label = 3964; else {
  $27441 = HEAP32[915090] | 0;
  if (($27441 | 0) == (HEAP32[915088] | 0)) label = 3964; else {
   $$lcssa$i$i3923 = 3660360;
   $$lcssa8$i$i3922 = $27441;
   label = 3965;
  }
 }
 do if ((label | 0) == 3964) {
  if ((HEAP32[915097] | 0) >>> 0 >= 17628) {
   $27448 = HEAP32[915096] | 0;
   if (($27448 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3923 = 3660384;
    $$lcssa8$i$i3922 = $27448;
    label = 3965;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 17628) {
   $27453 = HEAP32[915102] | 0;
   if (($27453 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3923 = 3660408;
    $$lcssa8$i$i3922 = $27453;
    label = 3965;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 17628) {
   $27458 = HEAP32[915108] | 0;
   if (($27458 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3923 = 3660432;
    $$lcssa8$i$i3922 = $27458;
    label = 3965;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 17628) {
   $27463 = HEAP32[915114] | 0;
   if (($27463 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3923 = 3660456;
    $$lcssa8$i$i3922 = $27463;
    label = 3965;
    break;
   }
  }
  $$3$i$i3924 = __Znwj(17628) | 0;
 } while (0);
 if ((label | 0) == 3965) {
  $27446 = $$lcssa8$i$i3922 + -4 | 0;
  HEAP32[$$lcssa$i$i3923 >> 2] = $27446;
  $$3$i$i3924 = HEAP32[$27446 >> 2] | 0;
 }
 $27467 = $$3$i$i3924 + 52 | 0;
 HEAP16[$$3$i$i3924 >> 1] = 676;
 HEAP16[$$3$i$i3924 + 2 >> 1] = 13;
 HEAP8[$$3$i$i3924 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3924 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3924 + 8 >> 2] = 1352;
 HEAP32[$$3$i$i3924 + 12 >> 2] = 17576;
 HEAP32[$$3$i$i3924 + 16 >> 2] = $27467;
 HEAP32[$$3$i$i3924 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3924 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3924 + 48 >> 0] = 0;
 HEAP32[$1822 >> 2] = $$3$i$i3924;
 _memcpy($27467 | 0, 2574658, 1352) | 0;
 _memcpy($$3$i$i3924 + 1404 | 0, 2576010, 1352) | 0;
 _memcpy($$3$i$i3924 + 2756 | 0, 2577362, 1352) | 0;
 _memcpy($$3$i$i3924 + 4108 | 0, 2578714, 1352) | 0;
 _memcpy($$3$i$i3924 + 5460 | 0, 2580066, 1352) | 0;
 _memcpy($$3$i$i3924 + 6812 | 0, 2581418, 1352) | 0;
 _memcpy($$3$i$i3924 + 8164 | 0, 2582770, 1352) | 0;
 _memcpy($$3$i$i3924 + 9516 | 0, 2584122, 1352) | 0;
 _memcpy($$3$i$i3924 + 10868 | 0, 2585474, 1352) | 0;
 _memcpy($$3$i$i3924 + 12220 | 0, 2586826, 1352) | 0;
 _memcpy($$3$i$i3924 + 13572 | 0, 2588178, 1352) | 0;
 _memcpy($$3$i$i3924 + 14924 | 0, 2589530, 1352) | 0;
 _memcpy($$3$i$i3924 + 16276 | 0, 2590882, 1352) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1822);
 if ($$3$i$i3924 | 0) {
  $27490 = $$3$i$i3924 + 5 | 0;
  $27492 = (HEAP8[$27490 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$27490 >> 0] = $27492;
  if (!($27492 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3924);
  HEAP32[$1822 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 984;
 HEAP16[$7257 >> 1] = 664;
 HEAP16[$7258 >> 1] = 1021;
 HEAP16[$7259 >> 1] = 679;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1332) label = 3980; else {
  $27496 = HEAP32[915090] | 0;
  if (($27496 | 0) == (HEAP32[915088] | 0)) label = 3980; else {
   $$lcssa$i$i3911 = 3660360;
   $$lcssa8$i$i3910 = $27496;
   label = 3981;
  }
 }
 do if ((label | 0) == 3980) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1332) {
   $27503 = HEAP32[915096] | 0;
   if (($27503 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3911 = 3660384;
    $$lcssa8$i$i3910 = $27503;
    label = 3981;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1332) {
   $27508 = HEAP32[915102] | 0;
   if (($27508 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3911 = 3660408;
    $$lcssa8$i$i3910 = $27508;
    label = 3981;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1332) {
   $27513 = HEAP32[915108] | 0;
   if (($27513 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3911 = 3660432;
    $$lcssa8$i$i3910 = $27513;
    label = 3981;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1332) {
   $27518 = HEAP32[915114] | 0;
   if (($27518 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3911 = 3660456;
    $$lcssa8$i$i3910 = $27518;
    label = 3981;
    break;
   }
  }
  $$3$i$i3912 = __Znwj(1332) | 0;
 } while (0);
 if ((label | 0) == 3981) {
  $27501 = $$lcssa8$i$i3910 + -4 | 0;
  HEAP32[$$lcssa$i$i3911 >> 2] = $27501;
  $$3$i$i3912 = HEAP32[$27501 >> 2] | 0;
 }
 $27522 = $$3$i$i3912 + 52 | 0;
 HEAP16[$$3$i$i3912 >> 1] = 40;
 HEAP16[$$3$i$i3912 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3912 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3912 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3912 + 8 >> 2] = 80;
 HEAP32[$$3$i$i3912 + 12 >> 2] = 1280;
 HEAP32[$$3$i$i3912 + 16 >> 2] = $27522;
 HEAP32[$$3$i$i3912 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3912 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3912 + 48 >> 0] = 0;
 HEAP32[$1823 >> 2] = $$3$i$i3912;
 dest = $27522;
 src = 2592234;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3912 + 132 | 0;
 src = 2592314;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3912 + 212 | 0;
 src = 2592394;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3912 + 292 | 0;
 src = 2592474;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3912 + 372 | 0;
 src = 2592554;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3912 + 452 | 0;
 src = 2592634;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3912 + 532 | 0;
 src = 2592714;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3912 + 612 | 0;
 src = 2592794;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3912 + 692 | 0;
 src = 2592874;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3912 + 772 | 0;
 src = 2592954;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3912 + 852 | 0;
 src = 2593034;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3912 + 932 | 0;
 src = 2593114;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3912 + 1012 | 0;
 src = 2593194;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3912 + 1092 | 0;
 src = 2593274;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3912 + 1172 | 0;
 src = 2593354;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3912 + 1252 | 0;
 src = 2593434;
 stop = dest + 80 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1823);
 if ($$3$i$i3912 | 0) {
  $27548 = $$3$i$i3912 + 5 | 0;
  $27550 = (HEAP8[$27548 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$27548 >> 0] = $27550;
  if (!($27550 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3912);
  HEAP32[$1823 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 998;
 HEAP16[$7260 >> 1] = 209;
 HEAP16[$7261 >> 1] = 1013;
 HEAP16[$7262 >> 1] = 224;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 564) label = 3996; else {
  $27554 = HEAP32[915090] | 0;
  if (($27554 | 0) == (HEAP32[915088] | 0)) label = 3996; else {
   $$lcssa$i$i3899 = 3660360;
   $$lcssa8$i$i3898 = $27554;
   label = 3997;
  }
 }
 do if ((label | 0) == 3996) {
  if ((HEAP32[915097] | 0) >>> 0 >= 564) {
   $27561 = HEAP32[915096] | 0;
   if (($27561 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3899 = 3660384;
    $$lcssa8$i$i3898 = $27561;
    label = 3997;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 564) {
   $27566 = HEAP32[915102] | 0;
   if (($27566 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3899 = 3660408;
    $$lcssa8$i$i3898 = $27566;
    label = 3997;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 564) {
   $27571 = HEAP32[915108] | 0;
   if (($27571 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3899 = 3660432;
    $$lcssa8$i$i3898 = $27571;
    label = 3997;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 564) {
   $27576 = HEAP32[915114] | 0;
   if (($27576 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3899 = 3660456;
    $$lcssa8$i$i3898 = $27576;
    label = 3997;
    break;
   }
  }
  $$3$i$i3900 = __Znwj(564) | 0;
 } while (0);
 if ((label | 0) == 3997) {
  $27559 = $$lcssa8$i$i3898 + -4 | 0;
  HEAP32[$$lcssa$i$i3899 >> 2] = $27559;
  $$3$i$i3900 = HEAP32[$27559 >> 2] | 0;
 }
 $27580 = $$3$i$i3900 + 52 | 0;
 HEAP16[$$3$i$i3900 >> 1] = 16;
 HEAP16[$$3$i$i3900 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3900 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3900 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3900 + 8 >> 2] = 32;
 HEAP32[$$3$i$i3900 + 12 >> 2] = 512;
 HEAP32[$$3$i$i3900 + 16 >> 2] = $27580;
 HEAP32[$$3$i$i3900 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3900 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3900 + 48 >> 0] = 0;
 HEAP32[$1824 >> 2] = $$3$i$i3900;
 dest = $27580;
 src = 2593514;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3900 + 84 | 0;
 src = 2593546;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3900 + 116 | 0;
 src = 2593578;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3900 + 148 | 0;
 src = 2593610;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3900 + 180 | 0;
 src = 2593642;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3900 + 212 | 0;
 src = 2593674;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3900 + 244 | 0;
 src = 2593706;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3900 + 276 | 0;
 src = 2593738;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3900 + 308 | 0;
 src = 2593770;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3900 + 340 | 0;
 src = 2593802;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3900 + 372 | 0;
 src = 2593834;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3900 + 404 | 0;
 src = 2593866;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3900 + 436 | 0;
 src = 2593898;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3900 + 468 | 0;
 src = 2593930;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3900 + 500 | 0;
 src = 2593962;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3900 + 532 | 0;
 src = 2593994;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1824);
 if ($$3$i$i3900 | 0) {
  $27606 = $$3$i$i3900 + 5 | 0;
  $27608 = (HEAP8[$27606 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$27606 >> 0] = $27608;
  if (!($27608 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3900);
  HEAP32[$1824 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 998;
 HEAP16[$7263 >> 1] = 161;
 HEAP16[$7264 >> 1] = 1021;
 HEAP16[$7265 >> 1] = 176;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 820) label = 4012; else {
  $27612 = HEAP32[915090] | 0;
  if (($27612 | 0) == (HEAP32[915088] | 0)) label = 4012; else {
   $$lcssa$i$i3887 = 3660360;
   $$lcssa8$i$i3886 = $27612;
   label = 4013;
  }
 }
 do if ((label | 0) == 4012) {
  if ((HEAP32[915097] | 0) >>> 0 >= 820) {
   $27619 = HEAP32[915096] | 0;
   if (($27619 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3887 = 3660384;
    $$lcssa8$i$i3886 = $27619;
    label = 4013;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 820) {
   $27624 = HEAP32[915102] | 0;
   if (($27624 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3887 = 3660408;
    $$lcssa8$i$i3886 = $27624;
    label = 4013;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 820) {
   $27629 = HEAP32[915108] | 0;
   if (($27629 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3887 = 3660432;
    $$lcssa8$i$i3886 = $27629;
    label = 4013;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 820) {
   $27634 = HEAP32[915114] | 0;
   if (($27634 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3887 = 3660456;
    $$lcssa8$i$i3886 = $27634;
    label = 4013;
    break;
   }
  }
  $$3$i$i3888 = __Znwj(820) | 0;
 } while (0);
 if ((label | 0) == 4013) {
  $27617 = $$lcssa8$i$i3886 + -4 | 0;
  HEAP32[$$lcssa$i$i3887 >> 2] = $27617;
  $$3$i$i3888 = HEAP32[$27617 >> 2] | 0;
 }
 $27638 = $$3$i$i3888 + 52 | 0;
 HEAP16[$$3$i$i3888 >> 1] = 24;
 HEAP16[$$3$i$i3888 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3888 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3888 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3888 + 8 >> 2] = 48;
 HEAP32[$$3$i$i3888 + 12 >> 2] = 768;
 HEAP32[$$3$i$i3888 + 16 >> 2] = $27638;
 HEAP32[$$3$i$i3888 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3888 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3888 + 48 >> 0] = 0;
 HEAP32[$1825 >> 2] = $$3$i$i3888;
 dest = $27638;
 src = 2594026;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3888 + 100 | 0;
 src = 2594074;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3888 + 148 | 0;
 src = 2594122;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3888 + 196 | 0;
 src = 2594170;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3888 + 244 | 0;
 src = 2594218;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3888 + 292 | 0;
 src = 2594266;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3888 + 340 | 0;
 src = 2594314;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3888 + 388 | 0;
 src = 2594362;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3888 + 436 | 0;
 src = 2594410;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3888 + 484 | 0;
 src = 2594458;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3888 + 532 | 0;
 src = 2594506;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3888 + 580 | 0;
 src = 2594554;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3888 + 628 | 0;
 src = 2594602;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3888 + 676 | 0;
 src = 2594650;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3888 + 724 | 0;
 src = 2594698;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3888 + 772 | 0;
 src = 2594746;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $1825);
 if ($$3$i$i3888 | 0) {
  $27664 = $$3$i$i3888 + 5 | 0;
  $27666 = (HEAP8[$27664 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$27664 >> 0] = $27666;
  if (!($27666 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3888);
  HEAP32[$1825 >> 2] = 0;
 }
 $27668 = $1826;
 HEAP32[$27668 >> 2] = 11535111;
 HEAP32[$27668 + 4 >> 2] = 1048792;
 HEAP32[$7266 >> 2] = 54938;
 HEAP16[$1827 >> 1] = 775;
 HEAP16[$7267 >> 1] = 176;
 HEAP16[$7268 >> 1] = 1;
 HEAP16[$7269 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1826, $1827);
 $27672 = $1828;
 HEAP32[$27672 >> 2] = 11535111;
 HEAP32[$27672 + 4 >> 2] = 1048792;
 HEAP32[$7270 >> 2] = 54938;
 HEAP16[$1829 >> 1] = 792;
 HEAP16[$7271 >> 1] = 176;
 HEAP16[$7272 >> 1] = 199;
 HEAP16[$7273 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1828, $1829);
 $27676 = $1830;
 HEAP32[$27676 >> 2] = 11535111;
 HEAP32[$27676 + 4 >> 2] = 1048792;
 HEAP32[$7274 >> 2] = 54938;
 HEAP16[$1831 >> 1] = 775;
 HEAP16[$7275 >> 1] = 178;
 HEAP16[$7276 >> 1] = 1;
 HEAP16[$7277 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1830, $1831);
 $27680 = $1832;
 HEAP32[$27680 >> 2] = 11535111;
 HEAP32[$27680 + 4 >> 2] = 1048792;
 HEAP32[$7278 >> 2] = 54938;
 HEAP16[$1833 >> 1] = 792;
 HEAP16[$7279 >> 1] = 178;
 HEAP16[$7280 >> 1] = 3;
 HEAP16[$7281 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1832, $1833);
 $27684 = $1834;
 HEAP32[$27684 >> 2] = 11535111;
 HEAP32[$27684 + 4 >> 2] = 1048792;
 HEAP32[$7282 >> 2] = 54938;
 HEAP16[$1835 >> 1] = 960;
 HEAP16[$7283 >> 1] = 178;
 HEAP16[$7284 >> 1] = 31;
 HEAP16[$7285 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1834, $1835);
 $27688 = $1836;
 HEAP32[$27688 >> 2] = 11535111;
 HEAP32[$27688 + 4 >> 2] = 1048792;
 HEAP32[$7286 >> 2] = 54938;
 HEAP16[$1837 >> 1] = 775;
 HEAP16[$7287 >> 1] = 191;
 HEAP16[$7288 >> 1] = 1;
 HEAP16[$7289 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1836, $1837);
 $27692 = $1838;
 HEAP32[$27692 >> 2] = 11535111;
 HEAP32[$27692 + 4 >> 2] = 1048792;
 HEAP32[$7290 >> 2] = 54938;
 HEAP16[$1839 >> 1] = 792;
 HEAP16[$7291 >> 1] = 191;
 HEAP16[$7292 >> 1] = 199;
 HEAP16[$7293 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1838, $1839);
 $27696 = $1840;
 HEAP32[$27696 >> 2] = 11535111;
 HEAP32[$27696 + 4 >> 2] = 65752;
 HEAP32[$7294 >> 2] = 65470;
 HEAP16[$1841 >> 1] = 775;
 HEAP16[$7295 >> 1] = 176;
 HEAP16[$7296 >> 1] = 1;
 HEAP16[$7297 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1840, $1841);
 $27700 = $1842;
 HEAP32[$27700 >> 2] = 11535111;
 HEAP32[$27700 + 4 >> 2] = 65752;
 HEAP32[$7298 >> 2] = 65470;
 HEAP16[$1843 >> 1] = 792;
 HEAP16[$7299 >> 1] = 176;
 HEAP16[$7300 >> 1] = 199;
 HEAP16[$7301 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1842, $1843);
 $27704 = $1844;
 HEAP32[$27704 >> 2] = 11600647;
 HEAP32[$27704 + 4 >> 2] = 65752;
 HEAP32[$7302 >> 2] = 63422;
 HEAP16[$1845 >> 1] = 775;
 HEAP16[$7303 >> 1] = 177;
 HEAP16[$7304 >> 1] = 1;
 HEAP16[$7305 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1844, $1845);
 $27708 = $1846;
 HEAP32[$27708 >> 2] = 11600647;
 HEAP32[$27708 + 4 >> 2] = 65752;
 HEAP32[$7306 >> 2] = 63422;
 HEAP16[$1847 >> 1] = 792;
 HEAP16[$7307 >> 1] = 177;
 HEAP16[$7308 >> 1] = 199;
 HEAP16[$7309 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1846, $1847);
 $27712 = $1848;
 HEAP32[$27712 >> 2] = 11666183;
 HEAP32[$27712 + 4 >> 2] = 65752;
 HEAP32[$7310 >> 2] = 63390;
 HEAP16[$1849 >> 1] = 775;
 HEAP16[$7311 >> 1] = 178;
 HEAP16[$7312 >> 1] = 1;
 HEAP16[$7313 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1848, $1849);
 $27716 = $1850;
 HEAP32[$27716 >> 2] = 11666183;
 HEAP32[$27716 + 4 >> 2] = 65752;
 HEAP32[$7314 >> 2] = 63390;
 HEAP16[$1851 >> 1] = 792;
 HEAP16[$7315 >> 1] = 178;
 HEAP16[$7316 >> 1] = 3;
 HEAP16[$7317 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1850, $1851);
 $27720 = $1852;
 HEAP32[$27720 >> 2] = 11666183;
 HEAP32[$27720 + 4 >> 2] = 65752;
 HEAP32[$7318 >> 2] = 63390;
 HEAP16[$1853 >> 1] = 960;
 HEAP16[$7319 >> 1] = 178;
 HEAP16[$7320 >> 1] = 31;
 HEAP16[$7321 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1852, $1853);
 $27724 = $1854;
 HEAP32[$27724 >> 2] = 11731719;
 HEAP32[$27724 + 4 >> 2] = 65752;
 HEAP32[$7322 >> 2] = 63389;
 HEAP16[$1855 >> 1] = 775;
 HEAP16[$7323 >> 1] = 179;
 HEAP16[$7324 >> 1] = 1;
 HEAP16[$7325 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1854, $1855);
 $27728 = $1856;
 HEAP32[$27728 >> 2] = 11731719;
 HEAP32[$27728 + 4 >> 2] = 65752;
 HEAP32[$7326 >> 2] = 63389;
 HEAP16[$1857 >> 1] = 792;
 HEAP16[$7327 >> 1] = 179;
 HEAP16[$7328 >> 1] = 3;
 HEAP16[$7329 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1856, $1857);
 $27732 = $1858;
 HEAP32[$27732 >> 2] = 11731719;
 HEAP32[$27732 + 4 >> 2] = 65752;
 HEAP32[$7330 >> 2] = 63389;
 HEAP16[$1859 >> 1] = 960;
 HEAP16[$7331 >> 1] = 179;
 HEAP16[$7332 >> 1] = 31;
 HEAP16[$7333 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1858, $1859);
 $27736 = $1860;
 HEAP32[$27736 >> 2] = 11797255;
 HEAP32[$27736 + 4 >> 2] = 65752;
 HEAP32[$7334 >> 2] = 63357;
 HEAP16[$1861 >> 1] = 775;
 HEAP16[$7335 >> 1] = 180;
 HEAP16[$7336 >> 1] = 1;
 HEAP16[$7337 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1860, $1861);
 $27740 = $1862;
 HEAP32[$27740 >> 2] = 11797255;
 HEAP32[$27740 + 4 >> 2] = 65752;
 HEAP32[$7338 >> 2] = 63357;
 HEAP16[$1863 >> 1] = 792;
 HEAP16[$7339 >> 1] = 180;
 HEAP16[$7340 >> 1] = 3;
 HEAP16[$7341 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1862, $1863);
 $27744 = $1864;
 HEAP32[$27744 >> 2] = 11797255;
 HEAP32[$27744 + 4 >> 2] = 65752;
 HEAP32[$7342 >> 2] = 63357;
 HEAP16[$1865 >> 1] = 960;
 HEAP16[$7343 >> 1] = 180;
 HEAP16[$7344 >> 1] = 31;
 HEAP16[$7345 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1864, $1865);
 $27748 = $1866;
 HEAP32[$27748 >> 2] = 11862791;
 HEAP32[$27748 + 4 >> 2] = 65752;
 HEAP32[$7346 >> 2] = 61309;
 HEAP16[$1867 >> 1] = 775;
 HEAP16[$7347 >> 1] = 181;
 HEAP16[$7348 >> 1] = 1;
 HEAP16[$7349 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1866, $1867);
 $27752 = $1868;
 HEAP32[$27752 >> 2] = 11862791;
 HEAP32[$27752 + 4 >> 2] = 65752;
 HEAP32[$7350 >> 2] = 61309;
 HEAP16[$1869 >> 1] = 792;
 HEAP16[$7351 >> 1] = 181;
 HEAP16[$7352 >> 1] = 3;
 HEAP16[$7353 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1868, $1869);
 $27756 = $1870;
 HEAP32[$27756 >> 2] = 11862791;
 HEAP32[$27756 + 4 >> 2] = 65752;
 HEAP32[$7354 >> 2] = 61309;
 HEAP16[$1871 >> 1] = 960;
 HEAP16[$7355 >> 1] = 181;
 HEAP16[$7356 >> 1] = 31;
 HEAP16[$7357 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1870, $1871);
 $27760 = $1872;
 HEAP32[$27760 >> 2] = 11928327;
 HEAP32[$27760 + 4 >> 2] = 65752;
 HEAP32[$7358 >> 2] = 61277;
 HEAP16[$1873 >> 1] = 775;
 HEAP16[$7359 >> 1] = 182;
 HEAP16[$7360 >> 1] = 1;
 HEAP16[$7361 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1872, $1873);
 $27764 = $1874;
 HEAP32[$27764 >> 2] = 11928327;
 HEAP32[$27764 + 4 >> 2] = 65752;
 HEAP32[$7362 >> 2] = 61277;
 HEAP16[$1875 >> 1] = 792;
 HEAP16[$7363 >> 1] = 182;
 HEAP16[$7364 >> 1] = 3;
 HEAP16[$7365 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1874, $1875);
 $27768 = $1876;
 HEAP32[$27768 >> 2] = 11928327;
 HEAP32[$27768 + 4 >> 2] = 65752;
 HEAP32[$7366 >> 2] = 61277;
 HEAP16[$1877 >> 1] = 960;
 HEAP16[$7367 >> 1] = 182;
 HEAP16[$7368 >> 1] = 31;
 HEAP16[$7369 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1876, $1877);
 $27772 = $1878;
 HEAP32[$27772 >> 2] = 11993863;
 HEAP32[$27772 + 4 >> 2] = 65752;
 HEAP32[$7370 >> 2] = 61276;
 HEAP16[$1879 >> 1] = 775;
 HEAP16[$7371 >> 1] = 183;
 HEAP16[$7372 >> 1] = 1;
 HEAP16[$7373 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1878, $1879);
 $27776 = $1880;
 HEAP32[$27776 >> 2] = 11993863;
 HEAP32[$27776 + 4 >> 2] = 65752;
 HEAP32[$7374 >> 2] = 61276;
 HEAP16[$1881 >> 1] = 792;
 HEAP16[$7375 >> 1] = 183;
 HEAP16[$7376 >> 1] = 3;
 HEAP16[$7377 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1880, $1881);
 $27780 = $1882;
 HEAP32[$27780 >> 2] = 11993863;
 HEAP32[$27780 + 4 >> 2] = 65752;
 HEAP32[$7378 >> 2] = 61276;
 HEAP16[$1883 >> 1] = 960;
 HEAP16[$7379 >> 1] = 183;
 HEAP16[$7380 >> 1] = 31;
 HEAP16[$7381 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1882, $1883);
 $27784 = $1884;
 HEAP32[$27784 >> 2] = 12059399;
 HEAP32[$27784 + 4 >> 2] = 65752;
 HEAP32[$7382 >> 2] = 61276;
 HEAP16[$1885 >> 1] = 775;
 HEAP16[$7383 >> 1] = 184;
 HEAP16[$7384 >> 1] = 1;
 HEAP16[$7385 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1884, $1885);
 $27788 = $1886;
 HEAP32[$27788 >> 2] = 12059399;
 HEAP32[$27788 + 4 >> 2] = 65752;
 HEAP32[$7386 >> 2] = 61276;
 HEAP16[$1887 >> 1] = 792;
 HEAP16[$7387 >> 1] = 184;
 HEAP16[$7388 >> 1] = 3;
 HEAP16[$7389 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1886, $1887);
 $27792 = $1888;
 HEAP32[$27792 >> 2] = 12059399;
 HEAP32[$27792 + 4 >> 2] = 65752;
 HEAP32[$7390 >> 2] = 61276;
 HEAP16[$1889 >> 1] = 960;
 HEAP16[$7391 >> 1] = 184;
 HEAP16[$7392 >> 1] = 31;
 HEAP16[$7393 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1888, $1889);
 $27796 = $1890;
 HEAP32[$27796 >> 2] = 12124935;
 HEAP32[$27796 + 4 >> 2] = 65752;
 HEAP32[$7394 >> 2] = 61244;
 HEAP16[$1891 >> 1] = 775;
 HEAP16[$7395 >> 1] = 185;
 HEAP16[$7396 >> 1] = 1;
 HEAP16[$7397 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1890, $1891);
 $27800 = $1892;
 HEAP32[$27800 >> 2] = 12124935;
 HEAP32[$27800 + 4 >> 2] = 65752;
 HEAP32[$7398 >> 2] = 61244;
 HEAP16[$1893 >> 1] = 792;
 HEAP16[$7399 >> 1] = 185;
 HEAP16[$7400 >> 1] = 3;
 HEAP16[$7401 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1892, $1893);
 $27804 = $1894;
 HEAP32[$27804 >> 2] = 12124935;
 HEAP32[$27804 + 4 >> 2] = 65752;
 HEAP32[$7402 >> 2] = 61244;
 HEAP16[$1895 >> 1] = 960;
 HEAP16[$7403 >> 1] = 185;
 HEAP16[$7404 >> 1] = 31;
 HEAP16[$7405 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1894, $1895);
 $27808 = $1896;
 HEAP32[$27808 >> 2] = 12190471;
 HEAP32[$27808 + 4 >> 2] = 65752;
 HEAP32[$7406 >> 2] = 59195;
 HEAP16[$1897 >> 1] = 775;
 HEAP16[$7407 >> 1] = 186;
 HEAP16[$7408 >> 1] = 1;
 HEAP16[$7409 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1896, $1897);
 $27812 = $1898;
 HEAP32[$27812 >> 2] = 12190471;
 HEAP32[$27812 + 4 >> 2] = 65752;
 HEAP32[$7410 >> 2] = 59195;
 HEAP16[$1899 >> 1] = 792;
 HEAP16[$7411 >> 1] = 186;
 HEAP16[$7412 >> 1] = 3;
 HEAP16[$7413 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1898, $1899);
 $27816 = $1900;
 HEAP32[$27816 >> 2] = 12190471;
 HEAP32[$27816 + 4 >> 2] = 65752;
 HEAP32[$7414 >> 2] = 59195;
 HEAP16[$1901 >> 1] = 960;
 HEAP16[$7415 >> 1] = 186;
 HEAP16[$7416 >> 1] = 31;
 HEAP16[$7417 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1900, $1901);
 $27820 = $1902;
 HEAP32[$27820 >> 2] = 12256007;
 HEAP32[$27820 + 4 >> 2] = 65752;
 HEAP32[$7418 >> 2] = 59163;
 HEAP16[$1903 >> 1] = 775;
 HEAP16[$7419 >> 1] = 187;
 HEAP16[$7420 >> 1] = 1;
 HEAP16[$7421 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1902, $1903);
 $27824 = $1904;
 HEAP32[$27824 >> 2] = 12256007;
 HEAP32[$27824 + 4 >> 2] = 65752;
 HEAP32[$7422 >> 2] = 59163;
 HEAP16[$1905 >> 1] = 792;
 HEAP16[$7423 >> 1] = 187;
 HEAP16[$7424 >> 1] = 3;
 HEAP16[$7425 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1904, $1905);
 $27828 = $1906;
 HEAP32[$27828 >> 2] = 12256007;
 HEAP32[$27828 + 4 >> 2] = 65752;
 HEAP32[$7426 >> 2] = 59163;
 HEAP16[$1907 >> 1] = 960;
 HEAP16[$7427 >> 1] = 187;
 HEAP16[$7428 >> 1] = 31;
 HEAP16[$7429 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1906, $1907);
 $27832 = $1908;
 HEAP32[$27832 >> 2] = 12321543;
 HEAP32[$27832 + 4 >> 2] = 65752;
 HEAP32[$7430 >> 2] = 59163;
 HEAP16[$1909 >> 1] = 775;
 HEAP16[$7431 >> 1] = 188;
 HEAP16[$7432 >> 1] = 1;
 HEAP16[$7433 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1908, $1909);
 $27836 = $1910;
 HEAP32[$27836 >> 2] = 12321543;
 HEAP32[$27836 + 4 >> 2] = 65752;
 HEAP32[$7434 >> 2] = 59163;
 HEAP16[$1911 >> 1] = 792;
 HEAP16[$7435 >> 1] = 188;
 HEAP16[$7436 >> 1] = 3;
 HEAP16[$7437 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1910, $1911);
 $27840 = $1912;
 HEAP32[$27840 >> 2] = 12321543;
 HEAP32[$27840 + 4 >> 2] = 65752;
 HEAP32[$7438 >> 2] = 59163;
 HEAP16[$1913 >> 1] = 960;
 HEAP16[$7439 >> 1] = 188;
 HEAP16[$7440 >> 1] = 31;
 HEAP16[$7441 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1912, $1913);
 $27844 = $1914;
 HEAP32[$27844 >> 2] = 12387079;
 HEAP32[$27844 + 4 >> 2] = 65752;
 HEAP32[$7442 >> 2] = 59131;
 HEAP16[$1915 >> 1] = 775;
 HEAP16[$7443 >> 1] = 189;
 HEAP16[$7444 >> 1] = 1;
 HEAP16[$7445 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1914, $1915);
 $27848 = $1916;
 HEAP32[$27848 >> 2] = 12387079;
 HEAP32[$27848 + 4 >> 2] = 65752;
 HEAP32[$7446 >> 2] = 59131;
 HEAP16[$1917 >> 1] = 792;
 HEAP16[$7447 >> 1] = 189;
 HEAP16[$7448 >> 1] = 3;
 HEAP16[$7449 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1916, $1917);
 $27852 = $1918;
 HEAP32[$27852 >> 2] = 12387079;
 HEAP32[$27852 + 4 >> 2] = 65752;
 HEAP32[$7450 >> 2] = 59131;
 HEAP16[$1919 >> 1] = 960;
 HEAP16[$7451 >> 1] = 189;
 HEAP16[$7452 >> 1] = 31;
 HEAP16[$7453 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1918, $1919);
 $27856 = $1920;
 HEAP32[$27856 >> 2] = 12452615;
 HEAP32[$27856 + 4 >> 2] = 65752;
 HEAP32[$7454 >> 2] = 57082;
 HEAP16[$1921 >> 1] = 775;
 HEAP16[$7455 >> 1] = 190;
 HEAP16[$7456 >> 1] = 1;
 HEAP16[$7457 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1920, $1921);
 $27860 = $1922;
 HEAP32[$27860 >> 2] = 12452615;
 HEAP32[$27860 + 4 >> 2] = 65752;
 HEAP32[$7458 >> 2] = 57082;
 HEAP16[$1923 >> 1] = 792;
 HEAP16[$7459 >> 1] = 190;
 HEAP16[$7460 >> 1] = 3;
 HEAP16[$7461 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1922, $1923);
 $27864 = $1924;
 HEAP32[$27864 >> 2] = 12452615;
 HEAP32[$27864 + 4 >> 2] = 65752;
 HEAP32[$7462 >> 2] = 57082;
 HEAP16[$1925 >> 1] = 960;
 HEAP16[$7463 >> 1] = 190;
 HEAP16[$7464 >> 1] = 31;
 HEAP16[$7465 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1924, $1925);
 $27868 = $1926;
 HEAP32[$27868 >> 2] = 12518151;
 HEAP32[$27868 + 4 >> 2] = 65752;
 HEAP32[$7466 >> 2] = 57050;
 HEAP16[$1927 >> 1] = 775;
 HEAP16[$7467 >> 1] = 191;
 HEAP16[$7468 >> 1] = 1;
 HEAP16[$7469 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1926, $1927);
 $27872 = $1928;
 HEAP32[$27872 >> 2] = 12518151;
 HEAP32[$27872 + 4 >> 2] = 65752;
 HEAP32[$7470 >> 2] = 57050;
 HEAP16[$1929 >> 1] = 792;
 HEAP16[$7471 >> 1] = 191;
 HEAP16[$7472 >> 1] = 199;
 HEAP16[$7473 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1928, $1929);
 $27876 = $1930;
 HEAP32[$27876 >> 2] = 6357193;
 HEAP32[$27876 + 4 >> 2] = 4195125;
 HEAP32[$7474 >> 2] = 63422;
 HEAP16[$1931 >> 1] = 201;
 HEAP16[$7475 >> 1] = 97;
 HEAP16[$7476 >> 1] = 821;
 HEAP16[$7477 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1930, $1931);
 $27880 = $1932;
 HEAP32[$27880 >> 2] = 6357193;
 HEAP32[$27880 + 4 >> 2] = 4195125;
 HEAP32[$7478 >> 2] = 63422;
 HEAP16[$1933 >> 1] = 201;
 HEAP16[$7479 >> 1] = 105;
 HEAP16[$7480 >> 1] = 12;
 HEAP16[$7481 >> 1] = 11;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1932, $1933);
 $27884 = $1934;
 HEAP32[$27884 >> 2] = 6357193;
 HEAP32[$27884 + 4 >> 2] = 4195125;
 HEAP32[$7482 >> 2] = 63422;
 HEAP16[$1935 >> 1] = 261;
 HEAP16[$7483 >> 1] = 105;
 HEAP16[$7484 >> 1] = 761;
 HEAP16[$7485 >> 1] = 11;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1934, $1935);
 $27888 = $1936;
 HEAP32[$27888 >> 2] = 6357193;
 HEAP32[$27888 + 4 >> 2] = 4195125;
 HEAP32[$7486 >> 2] = 63422;
 HEAP16[$1937 >> 1] = 201;
 HEAP16[$7487 >> 1] = 116;
 HEAP16[$7488 >> 1] = 12;
 HEAP16[$7489 >> 1] = 26;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1936, $1937);
 $27892 = $1938;
 HEAP32[$27892 >> 2] = 6357193;
 HEAP32[$27892 + 4 >> 2] = 4195125;
 HEAP32[$7490 >> 2] = 63422;
 HEAP16[$1939 >> 1] = 261;
 HEAP16[$7491 >> 1] = 116;
 HEAP16[$7492 >> 1] = 9;
 HEAP16[$7493 >> 1] = 26;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1938, $1939);
 $27896 = $1940;
 HEAP32[$27896 >> 2] = 6357193;
 HEAP32[$27896 + 4 >> 2] = 4195125;
 HEAP32[$7494 >> 2] = 63422;
 HEAP16[$1941 >> 1] = 959;
 HEAP16[$7495 >> 1] = 116;
 HEAP16[$7496 >> 1] = 63;
 HEAP16[$7497 >> 1] = 26;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1940, $1941);
 $27900 = $1942;
 HEAP32[$27900 >> 2] = 6357193;
 HEAP32[$27900 + 4 >> 2] = 4195125;
 HEAP32[$7498 >> 2] = 63422;
 HEAP16[$1943 >> 1] = 201;
 HEAP16[$7499 >> 1] = 142;
 HEAP16[$7500 >> 1] = 12;
 HEAP16[$7501 >> 1] = 11;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1942, $1943);
 $27904 = $1944;
 HEAP32[$27904 >> 2] = 6357193;
 HEAP32[$27904 + 4 >> 2] = 4195125;
 HEAP32[$7502 >> 2] = 63422;
 HEAP16[$1945 >> 1] = 261;
 HEAP16[$7503 >> 1] = 142;
 HEAP16[$7504 >> 1] = 761;
 HEAP16[$7505 >> 1] = 11;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1944, $1945);
 $27908 = $1946;
 HEAP32[$27908 >> 2] = 6357193;
 HEAP32[$27908 + 4 >> 2] = 4195125;
 HEAP32[$7506 >> 2] = 63422;
 HEAP16[$1947 >> 1] = 201;
 HEAP16[$7507 >> 1] = 153;
 HEAP16[$7508 >> 1] = 821;
 HEAP16[$7509 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1946, $1947);
 HEAP8[$1948 >> 0] = 1;
 HEAP16[$7510 >> 1] = 1021;
 HEAP16[$7511 >> 1] = 160;
 HEAP16[$7512 >> 1] = 1022;
 HEAP16[$7513 >> 1] = 160;
 HEAP32[$7514 >> 2] = 0;
 HEAP8[$7515 >> 0] = 13;
 $27912 = $7516;
 HEAP32[$27912 >> 2] = 256;
 HEAP32[$27912 + 4 >> 2] = 54938;
 HEAP16[$1949 >> 1] = 1021;
 HEAP16[$7517 >> 1] = 160;
 HEAP16[$7518 >> 1] = 1;
 HEAP16[$7519 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK9RDPLineToRK4Rect($front, $1948, $1949);
 $27916 = $1950;
 HEAP32[$27916 >> 2] = 44564681;
 HEAP32[$27916 + 4 >> 2] = 1442613;
 HEAP32[$7520 >> 2] = 63422;
 HEAP16[$1951 >> 1] = 201;
 HEAP16[$7521 >> 1] = 680;
 HEAP16[$7522 >> 1] = 821;
 HEAP16[$7523 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1950, $1951);
 $27920 = $1952;
 HEAP32[$27920 >> 2] = 44564681;
 HEAP32[$27920 + 4 >> 2] = 1442613;
 HEAP32[$7524 >> 2] = 63422;
 HEAP16[$1953 >> 1] = 201;
 HEAP16[$7525 >> 1] = 683;
 HEAP16[$7526 >> 1] = 3;
 HEAP16[$7527 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1952, $1953);
 $27924 = $1954;
 HEAP32[$27924 >> 2] = 44564681;
 HEAP32[$27924 + 4 >> 2] = 1442613;
 HEAP32[$7528 >> 2] = 63422;
 HEAP16[$1955 >> 1] = 220;
 HEAP16[$7529 >> 1] = 683;
 HEAP16[$7530 >> 1] = 802;
 HEAP16[$7531 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1954, $1955);
 $27928 = $1956;
 HEAP32[$27928 >> 2] = 44564681;
 HEAP32[$27928 + 4 >> 2] = 1442613;
 HEAP32[$7532 >> 2] = 63422;
 HEAP16[$1957 >> 1] = 201;
 HEAP16[$7533 >> 1] = 685;
 HEAP16[$7534 >> 1] = 3;
 HEAP16[$7535 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1956, $1957);
 $27932 = $1958;
 HEAP32[$27932 >> 2] = 44564681;
 HEAP32[$27932 + 4 >> 2] = 1442613;
 HEAP32[$7536 >> 2] = 63422;
 HEAP16[$1959 >> 1] = 220;
 HEAP16[$7537 >> 1] = 685;
 HEAP16[$7538 >> 1] = 3;
 HEAP16[$7539 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1958, $1959);
 $27936 = $1960;
 HEAP32[$27936 >> 2] = 44564681;
 HEAP32[$27936 + 4 >> 2] = 1442613;
 HEAP32[$7540 >> 2] = 63422;
 HEAP16[$1961 >> 1] = 388;
 HEAP16[$7541 >> 1] = 685;
 HEAP16[$7542 >> 1] = 634;
 HEAP16[$7543 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1960, $1961);
 $27940 = $1962;
 HEAP32[$27940 >> 2] = 44564681;
 HEAP32[$27940 + 4 >> 2] = 1442613;
 HEAP32[$7544 >> 2] = 63422;
 HEAP16[$1963 >> 1] = 201;
 HEAP16[$7545 >> 1] = 698;
 HEAP16[$7546 >> 1] = 3;
 HEAP16[$7547 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1962, $1963);
 $27944 = $1964;
 HEAP32[$27944 >> 2] = 44564681;
 HEAP32[$27944 + 4 >> 2] = 1442613;
 HEAP32[$7548 >> 2] = 63422;
 HEAP16[$1965 >> 1] = 220;
 HEAP16[$7549 >> 1] = 698;
 HEAP16[$7550 >> 1] = 802;
 HEAP16[$7551 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1964, $1965);
 $27948 = $1966;
 HEAP32[$27948 >> 2] = 44564681;
 HEAP32[$27948 + 4 >> 2] = 1442613;
 HEAP32[$7552 >> 2] = 63422;
 HEAP16[$1967 >> 1] = 201;
 HEAP16[$7553 >> 1] = 699;
 HEAP16[$7554 >> 1] = 821;
 HEAP16[$7555 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1966, $1967);
 HEAP8[$1968 >> 0] = 1;
 HEAP16[$7556 >> 1] = 1021;
 HEAP16[$7557 >> 1] = 680;
 HEAP16[$7558 >> 1] = 1022;
 HEAP16[$7559 >> 1] = 680;
 HEAP32[$7560 >> 2] = 0;
 HEAP8[$7561 >> 0] = 13;
 $27952 = $7562;
 HEAP32[$27952 >> 2] = 256;
 HEAP32[$27952 + 4 >> 2] = 54938;
 HEAP16[$1969 >> 1] = 1021;
 HEAP16[$7563 >> 1] = 680;
 HEAP16[$7564 >> 1] = 1;
 HEAP16[$7565 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK9RDPLineToRK4Rect($front, $1968, $1969);
 $27956 = $1970;
 HEAP32[$27956 >> 2] = 29950174;
 HEAP32[$27956 + 4 >> 2] = 10027555;
 HEAP32[$7566 >> 2] = 63422;
 HEAP16[$1971 >> 1] = 222;
 HEAP16[$7567 >> 1] = 457;
 HEAP16[$7568 >> 1] = 3;
 HEAP16[$7569 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1970, $1971);
 $27960 = $1972;
 HEAP32[$27960 >> 2] = 29950174;
 HEAP32[$27960 + 4 >> 2] = 10027555;
 HEAP32[$7570 >> 2] = 63422;
 HEAP16[$1973 >> 1] = 437;
 HEAP16[$7571 >> 1] = 457;
 HEAP16[$7572 >> 1] = 6;
 HEAP16[$7573 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1972, $1973);
 $27964 = $1974;
 HEAP32[$27964 >> 2] = 29950174;
 HEAP32[$27964 + 4 >> 2] = 10027555;
 HEAP32[$7574 >> 2] = 63422;
 HEAP16[$1975 >> 1] = 766;
 HEAP16[$7575 >> 1] = 457;
 HEAP16[$7576 >> 1] = 3;
 HEAP16[$7577 >> 1] = 134;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1974, $1975);
 $27968 = $1976;
 HEAP32[$27968 >> 2] = 29950174;
 HEAP32[$27968 + 4 >> 2] = 10027555;
 HEAP32[$7578 >> 2] = 63422;
 HEAP16[$1977 >> 1] = 222;
 HEAP16[$7579 >> 1] = 591;
 HEAP16[$7580 >> 1] = 3;
 HEAP16[$7581 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1976, $1977);
 $27972 = $1978;
 HEAP32[$27972 >> 2] = 29950174;
 HEAP32[$27972 + 4 >> 2] = 10027555;
 HEAP32[$7582 >> 2] = 63422;
 HEAP16[$1979 >> 1] = 437;
 HEAP16[$7583 >> 1] = 591;
 HEAP16[$7584 >> 1] = 332;
 HEAP16[$7585 >> 1] = 19;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1978, $1979);
 $27976 = $1980;
 HEAP32[$27976 >> 2] = 35324129;
 HEAP32[$27976 + 4 >> 2] = 983252;
 HEAP8[$7586 >> 0] = -52;
 HEAP16[$7587 >> 1] = 225;
 HEAP16[$7588 >> 1] = 526;
 HEAP16[$1981 >> 1] = 0;
 HEAP16[$7589 >> 1] = 0;
 HEAP16[$7590 >> 1] = 1024;
 HEAP16[$7591 >> 1] = 768;
 __ZN14Front_JS_Natif4drawERK9RDPScrBltRK4Rect($front, $1980, $1981);
 $27980 = $1982;
 HEAP32[$27980 >> 2] = 35324347;
 HEAP32[$27980 + 4 >> 2] = 983363;
 HEAP8[$7592 >> 0] = -52;
 HEAP16[$7593 >> 1] = 443;
 HEAP16[$7594 >> 1] = 526;
 HEAP16[$1983 >> 1] = 0;
 HEAP16[$7595 >> 1] = 0;
 HEAP16[$7596 >> 1] = 1024;
 HEAP16[$7597 >> 1] = 768;
 __ZN14Front_JS_Natif4drawERK9RDPScrBltRK4Rect($front, $1982, $1983);
 $27984 = $1984;
 HEAP32[$27984 >> 2] = 37159137;
 HEAP32[$27984 + 4 >> 2] = 983252;
 HEAP8[$7598 >> 0] = -52;
 HEAP16[$7599 >> 1] = 225;
 HEAP16[$7600 >> 1] = 554;
 HEAP16[$1985 >> 1] = 0;
 HEAP16[$7601 >> 1] = 0;
 HEAP16[$7602 >> 1] = 1024;
 HEAP16[$7603 >> 1] = 768;
 __ZN14Front_JS_Natif4drawERK9RDPScrBltRK4Rect($front, $1984, $1985);
 $27988 = $1986;
 HEAP32[$27988 >> 2] = 37159355;
 HEAP32[$27988 + 4 >> 2] = 983363;
 HEAP8[$7604 >> 0] = -52;
 HEAP16[$7605 >> 1] = 443;
 HEAP16[$7606 >> 1] = 554;
 HEAP16[$1987 >> 1] = 0;
 HEAP16[$7607 >> 1] = 0;
 HEAP16[$7608 >> 1] = 1024;
 HEAP16[$7609 >> 1] = 768;
 __ZN14Front_JS_Natif4drawERK9RDPScrBltRK4Rect($front, $1986, $1987);
 $27992 = $1988;
 HEAP32[$27992 >> 2] = 38994145;
 HEAP32[$27992 + 4 >> 2] = 983252;
 HEAP8[$7610 >> 0] = -52;
 HEAP16[$7611 >> 1] = 225;
 HEAP16[$7612 >> 1] = 582;
 HEAP16[$1989 >> 1] = 0;
 HEAP16[$7613 >> 1] = 0;
 HEAP16[$7614 >> 1] = 1024;
 HEAP16[$7615 >> 1] = 768;
 __ZN14Front_JS_Natif4drawERK9RDPScrBltRK4Rect($front, $1988, $1989);
 $27996 = $1990;
 HEAP32[$27996 >> 2] = 38994363;
 HEAP32[$27996 + 4 >> 2] = 590147;
 HEAP8[$7616 >> 0] = -52;
 HEAP16[$7617 >> 1] = 443;
 HEAP16[$7618 >> 1] = 582;
 HEAP16[$1991 >> 1] = 0;
 HEAP16[$7619 >> 1] = 0;
 HEAP16[$7620 >> 1] = 1024;
 HEAP16[$7621 >> 1] = 768;
 __ZN14Front_JS_Natif4drawERK9RDPScrBltRK4Rect($front, $1990, $1991);
 $28000 = $1992;
 HEAP32[$28000 >> 2] = 29950174;
 HEAP32[$28000 + 4 >> 2] = 10027555;
 HEAP32[$7622 >> 2] = 63422;
 HEAP16[$1993 >> 1] = 437;
 HEAP16[$7623 >> 1] = 457;
 HEAP16[$7624 >> 1] = 6;
 HEAP16[$7625 >> 1] = 23;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1992, $1993);
 $28004 = $1994;
 HEAP32[$28004 >> 2] = 29950174;
 HEAP32[$28004 + 4 >> 2] = 10027555;
 HEAP32[$7626 >> 2] = 63422;
 HEAP16[$1995 >> 1] = 766;
 HEAP16[$7627 >> 1] = 457;
 HEAP16[$7628 >> 1] = 3;
 HEAP16[$7629 >> 1] = 23;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1994, $1995);
 $28008 = $1996;
 HEAP32[$28008 >> 2] = 29950174;
 HEAP32[$28008 + 4 >> 2] = 10027555;
 HEAP32[$7630 >> 2] = 63422;
 HEAP16[$1997 >> 1] = 222;
 HEAP16[$7631 >> 1] = 480;
 HEAP16[$7632 >> 1] = 3;
 HEAP16[$7633 >> 1] = 124;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1996, $1997);
 $28012 = $1998;
 HEAP32[$28012 >> 2] = 29950174;
 HEAP32[$28012 + 4 >> 2] = 10027555;
 HEAP32[$7634 >> 2] = 63422;
 HEAP16[$1999 >> 1] = 437;
 HEAP16[$7635 >> 1] = 480;
 HEAP16[$7636 >> 1] = 6;
 HEAP16[$7637 >> 1] = 124;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $1998, $1999);
 $28016 = $2000;
 HEAP32[$28016 >> 2] = 29950174;
 HEAP32[$28016 + 4 >> 2] = 10027555;
 HEAP32[$7638 >> 2] = 63422;
 HEAP16[$2001 >> 1] = 766;
 HEAP16[$7639 >> 1] = 480;
 HEAP16[$7640 >> 1] = 3;
 HEAP16[$7641 >> 1] = 124;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2000, $2001);
 $28020 = $2002;
 HEAP32[$28020 >> 2] = 29950174;
 HEAP32[$28020 + 4 >> 2] = 10027555;
 HEAP32[$7642 >> 2] = 63422;
 HEAP16[$2003 >> 1] = 222;
 HEAP16[$7643 >> 1] = 604;
 HEAP16[$7644 >> 1] = 3;
 HEAP16[$7645 >> 1] = 6;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2002, $2003);
 $28024 = $2004;
 HEAP32[$28024 >> 2] = 29950174;
 HEAP32[$28024 + 4 >> 2] = 10027555;
 HEAP32[$7646 >> 2] = 63422;
 HEAP16[$2005 >> 1] = 437;
 HEAP16[$7647 >> 1] = 604;
 HEAP16[$7648 >> 1] = 332;
 HEAP16[$7649 >> 1] = 6;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2004, $2005);
 $28028 = $2006;
 HEAP32[$28028 >> 2] = 29950174;
 HEAP32[$28028 + 4 >> 2] = 10027555;
 HEAP32[$7650 >> 2] = 63422;
 HEAP16[$2007 >> 1] = 222;
 HEAP16[$7651 >> 1] = 457;
 HEAP16[$7652 >> 1] = 3;
 HEAP16[$7653 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2006, $2007);
 $28032 = $2008;
 HEAP32[$28032 >> 2] = 29950174;
 HEAP32[$28032 + 4 >> 2] = 10027555;
 HEAP32[$7654 >> 2] = 63422;
 HEAP16[$2009 >> 1] = 437;
 HEAP16[$7655 >> 1] = 457;
 HEAP16[$7656 >> 1] = 6;
 HEAP16[$7657 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2008, $2009);
 $28036 = $2010;
 HEAP32[$28036 >> 2] = 29950174;
 HEAP32[$28036 + 4 >> 2] = 10027555;
 HEAP32[$7658 >> 2] = 63422;
 HEAP16[$2011 >> 1] = 766;
 HEAP16[$7659 >> 1] = 457;
 HEAP16[$7660 >> 1] = 3;
 HEAP16[$7661 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2010, $2011);
 $28040 = $2012;
 HEAP32[$28040 >> 2] = 12910804;
 HEAP32[$28040 + 4 >> 2] = 6553800;
 HEAP32[$7662 >> 2] = 63422;
 HEAP16[$2013 >> 1] = 212;
 HEAP16[$7663 >> 1] = 197;
 HEAP16[$7664 >> 1] = 3;
 HEAP16[$7665 >> 1] = 100;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2012, $2013);
 $28044 = $2014;
 HEAP32[$28044 >> 2] = 12910804;
 HEAP32[$28044 + 4 >> 2] = 6553800;
 HEAP32[$7666 >> 2] = 63422;
 HEAP16[$2015 >> 1] = 289;
 HEAP16[$7667 >> 1] = 197;
 HEAP16[$7668 >> 1] = 6;
 HEAP16[$7669 >> 1] = 100;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2014, $2015);
 $28048 = $2016;
 HEAP32[$28048 >> 2] = 12910804;
 HEAP32[$28048 + 4 >> 2] = 6553800;
 HEAP32[$7670 >> 2] = 63422;
 HEAP16[$2017 >> 1] = 409;
 HEAP16[$7671 >> 1] = 197;
 HEAP16[$7672 >> 1] = 3;
 HEAP16[$7673 >> 1] = 100;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2016, $2017);
 $28052 = $2018;
 HEAP32[$28052 >> 2] = 12910804;
 HEAP32[$28052 + 4 >> 2] = 6553800;
 HEAP32[$7674 >> 2] = 63422;
 HEAP16[$2019 >> 1] = 212;
 HEAP16[$7675 >> 1] = 197;
 HEAP16[$7676 >> 1] = 3;
 HEAP16[$7677 >> 1] = 10;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2018, $2019);
 $28056 = $2020;
 HEAP32[$28056 >> 2] = 12910804;
 HEAP32[$28056 + 4 >> 2] = 6553800;
 HEAP32[$7678 >> 2] = 63422;
 HEAP16[$2021 >> 1] = 289;
 HEAP16[$7679 >> 1] = 197;
 HEAP16[$7680 >> 1] = 6;
 HEAP16[$7681 >> 1] = 10;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2020, $2021);
 $28060 = $2022;
 HEAP32[$28060 >> 2] = 12910804;
 HEAP32[$28060 + 4 >> 2] = 6553800;
 HEAP32[$7682 >> 2] = 63422;
 HEAP16[$2023 >> 1] = 409;
 HEAP16[$7683 >> 1] = 197;
 HEAP16[$7684 >> 1] = 3;
 HEAP16[$7685 >> 1] = 10;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2022, $2023);
 $28064 = $2024;
 HEAP32[$28064 >> 2] = 12910804;
 HEAP32[$28064 + 4 >> 2] = 6553800;
 HEAP32[$7686 >> 2] = 63422;
 HEAP16[$2025 >> 1] = 212;
 HEAP16[$7687 >> 1] = 207;
 HEAP16[$7688 >> 1] = 3;
 HEAP16[$7689 >> 1] = 21;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2024, $2025);
 $28068 = $2026;
 HEAP32[$28068 >> 2] = 12910804;
 HEAP32[$28068 + 4 >> 2] = 6553800;
 HEAP32[$7690 >> 2] = 63422;
 HEAP16[$2027 >> 1] = 212;
 HEAP16[$7691 >> 1] = 228;
 HEAP16[$7692 >> 1] = 3;
 HEAP16[$7693 >> 1] = 69;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2026, $2027);
 $28072 = $2028;
 HEAP32[$28072 >> 2] = 12910804;
 HEAP32[$28072 + 4 >> 2] = 6553800;
 HEAP32[$7694 >> 2] = 63422;
 HEAP16[$2029 >> 1] = 289;
 HEAP16[$7695 >> 1] = 228;
 HEAP16[$7696 >> 1] = 6;
 HEAP16[$7697 >> 1] = 69;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2028, $2029);
 $28076 = $2030;
 HEAP32[$28076 >> 2] = 12910804;
 HEAP32[$28076 + 4 >> 2] = 6553800;
 HEAP32[$7698 >> 2] = 63422;
 HEAP16[$2031 >> 1] = 409;
 HEAP16[$7699 >> 1] = 228;
 HEAP16[$7700 >> 1] = 3;
 HEAP16[$7701 >> 1] = 69;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2030, $2031);
 $28080 = $2032;
 HEAP32[$28080 >> 2] = 12910804;
 HEAP32[$28080 + 4 >> 2] = 6553800;
 HEAP32[$7702 >> 2] = 63422;
 HEAP16[$2033 >> 1] = 212;
 HEAP16[$7703 >> 1] = 197;
 HEAP16[$7704 >> 1] = 3;
 HEAP16[$7705 >> 1] = 100;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2032, $2033);
 $28084 = $2034;
 HEAP32[$28084 >> 2] = 12910804;
 HEAP32[$28084 + 4 >> 2] = 6553800;
 HEAP32[$7706 >> 2] = 63422;
 HEAP16[$2035 >> 1] = 289;
 HEAP16[$7707 >> 1] = 197;
 HEAP16[$7708 >> 1] = 6;
 HEAP16[$7709 >> 1] = 100;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2034, $2035);
 $28088 = $2036;
 HEAP32[$28088 >> 2] = 12910804;
 HEAP32[$28088 + 4 >> 2] = 6553800;
 HEAP32[$7710 >> 2] = 63422;
 HEAP16[$2037 >> 1] = 409;
 HEAP16[$7711 >> 1] = 197;
 HEAP16[$7712 >> 1] = 3;
 HEAP16[$7713 >> 1] = 100;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2036, $2037);
 $28092 = $2038;
 HEAP32[$28092 >> 2] = 14942430;
 HEAP32[$28092 + 4 >> 2] = 12517923;
 HEAP32[$7714 >> 2] = 63422;
 HEAP16[$2039 >> 1] = 222;
 HEAP16[$7715 >> 1] = 228;
 HEAP16[$7716 >> 1] = 3;
 HEAP16[$7717 >> 1] = 191;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2038, $2039);
 $28096 = $2040;
 HEAP32[$28096 >> 2] = 14942430;
 HEAP32[$28096 + 4 >> 2] = 12517923;
 HEAP32[$7718 >> 2] = 63422;
 HEAP16[$2041 >> 1] = 299;
 HEAP16[$7719 >> 1] = 228;
 HEAP16[$7720 >> 1] = 6;
 HEAP16[$7721 >> 1] = 191;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2040, $2041);
 $28100 = $2042;
 HEAP32[$28100 >> 2] = 14942430;
 HEAP32[$28100 + 4 >> 2] = 12517923;
 HEAP32[$7722 >> 2] = 63422;
 HEAP16[$2043 >> 1] = 419;
 HEAP16[$7723 >> 1] = 228;
 HEAP16[$7724 >> 1] = 350;
 HEAP16[$7725 >> 1] = 191;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2042, $2043);
 $28104 = $2044;
 HEAP32[$28104 >> 2] = 14942430;
 HEAP32[$28104 + 4 >> 2] = 12517923;
 HEAP32[$7726 >> 2] = 63422;
 HEAP16[$2045 >> 1] = 222;
 HEAP16[$7727 >> 1] = 228;
 HEAP16[$7728 >> 1] = 3;
 HEAP16[$7729 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2044, $2045);
 $28108 = $2046;
 HEAP32[$28108 >> 2] = 14942430;
 HEAP32[$28108 + 4 >> 2] = 12517923;
 HEAP32[$7730 >> 2] = 63422;
 HEAP16[$2047 >> 1] = 437;
 HEAP16[$7731 >> 1] = 228;
 HEAP16[$7732 >> 1] = 332;
 HEAP16[$7733 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2046, $2047);
 $28112 = $2048;
 HEAP32[$28112 >> 2] = 14942430;
 HEAP32[$28112 + 4 >> 2] = 12517923;
 HEAP32[$7734 >> 2] = 63422;
 HEAP16[$2049 >> 1] = 222;
 HEAP16[$7735 >> 1] = 256;
 HEAP16[$7736 >> 1] = 83;
 HEAP16[$7737 >> 1] = 52;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2048, $2049);
 $28116 = $2050;
 HEAP32[$28116 >> 2] = 14942430;
 HEAP32[$28116 + 4 >> 2] = 12517923;
 HEAP32[$7738 >> 2] = 63422;
 HEAP16[$2051 >> 1] = 419;
 HEAP16[$7739 >> 1] = 256;
 HEAP16[$7740 >> 1] = 350;
 HEAP16[$7741 >> 1] = 52;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2050, $2051);
 $28120 = $2052;
 HEAP32[$28120 >> 2] = 14942430;
 HEAP32[$28120 + 4 >> 2] = 12517923;
 HEAP32[$7742 >> 2] = 63422;
 HEAP16[$2053 >> 1] = 222;
 HEAP16[$7743 >> 1] = 308;
 HEAP16[$7744 >> 1] = 3;
 HEAP16[$7745 >> 1] = 111;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2052, $2053);
 $28124 = $2054;
 HEAP32[$28124 >> 2] = 14942430;
 HEAP32[$28124 + 4 >> 2] = 12517923;
 HEAP32[$7746 >> 2] = 63422;
 HEAP16[$2055 >> 1] = 299;
 HEAP16[$7747 >> 1] = 308;
 HEAP16[$7748 >> 1] = 6;
 HEAP16[$7749 >> 1] = 111;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2054, $2055);
 $28128 = $2056;
 HEAP32[$28128 >> 2] = 14942430;
 HEAP32[$28128 + 4 >> 2] = 12517923;
 HEAP32[$7750 >> 2] = 63422;
 HEAP16[$2057 >> 1] = 419;
 HEAP16[$7751 >> 1] = 308;
 HEAP16[$7752 >> 1] = 350;
 HEAP16[$7753 >> 1] = 111;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2056, $2057);
 $28132 = $2058;
 HEAP32[$28132 >> 2] = 14942430;
 HEAP32[$28132 + 4 >> 2] = 12517923;
 HEAP32[$7754 >> 2] = 63422;
 HEAP16[$2059 >> 1] = 222;
 HEAP16[$7755 >> 1] = 228;
 HEAP16[$7756 >> 1] = 3;
 HEAP16[$7757 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2058, $2059);
 $28136 = $2060;
 HEAP32[$28136 >> 2] = 14942430;
 HEAP32[$28136 + 4 >> 2] = 12517923;
 HEAP32[$7758 >> 2] = 63422;
 HEAP16[$2061 >> 1] = 437;
 HEAP16[$7759 >> 1] = 228;
 HEAP16[$7760 >> 1] = 6;
 HEAP16[$7761 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2060, $2061);
 $28140 = $2062;
 HEAP32[$28140 >> 2] = 14942430;
 HEAP32[$28140 + 4 >> 2] = 12517923;
 HEAP32[$7762 >> 2] = 63422;
 HEAP16[$2063 >> 1] = 766;
 HEAP16[$7763 >> 1] = 228;
 HEAP16[$7764 >> 1] = 3;
 HEAP16[$7765 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2062, $2063);
 $28144 = $2064;
 HEAP32[$28144 >> 2] = 14942430;
 HEAP32[$28144 + 4 >> 2] = 12517923;
 HEAP32[$7766 >> 2] = 63422;
 HEAP16[$2065 >> 1] = 222;
 HEAP16[$7767 >> 1] = 256;
 HEAP16[$7768 >> 1] = 547;
 HEAP16[$7769 >> 1] = 52;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2064, $2065);
 $28148 = $2066;
 HEAP32[$28148 >> 2] = 14942430;
 HEAP32[$28148 + 4 >> 2] = 12517923;
 HEAP32[$7770 >> 2] = 63422;
 HEAP16[$2067 >> 1] = 222;
 HEAP16[$7771 >> 1] = 308;
 HEAP16[$7772 >> 1] = 3;
 HEAP16[$7773 >> 1] = 111;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2066, $2067);
 $28152 = $2068;
 HEAP32[$28152 >> 2] = 14942430;
 HEAP32[$28152 + 4 >> 2] = 12517923;
 HEAP32[$7774 >> 2] = 63422;
 HEAP16[$2069 >> 1] = 299;
 HEAP16[$7775 >> 1] = 308;
 HEAP16[$7776 >> 1] = 6;
 HEAP16[$7777 >> 1] = 111;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2068, $2069);
 $28156 = $2070;
 HEAP32[$28156 >> 2] = 14942430;
 HEAP32[$28156 + 4 >> 2] = 12517923;
 HEAP32[$7778 >> 2] = 63422;
 HEAP16[$2071 >> 1] = 419;
 HEAP16[$7779 >> 1] = 308;
 HEAP16[$7780 >> 1] = 350;
 HEAP16[$7781 >> 1] = 111;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2070, $2071);
 $28160 = $2072;
 HEAP32[$28160 >> 2] = 14942430;
 HEAP32[$28160 + 4 >> 2] = 12517923;
 HEAP32[$7782 >> 2] = 63422;
 HEAP16[$2073 >> 1] = 222;
 HEAP16[$7783 >> 1] = 228;
 HEAP16[$7784 >> 1] = 3;
 HEAP16[$7785 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2072, $2073);
 $28164 = $2074;
 HEAP32[$28164 >> 2] = 14942430;
 HEAP32[$28164 + 4 >> 2] = 12517923;
 HEAP32[$7786 >> 2] = 63422;
 HEAP16[$2075 >> 1] = 437;
 HEAP16[$7787 >> 1] = 228;
 HEAP16[$7788 >> 1] = 6;
 HEAP16[$7789 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2074, $2075);
 $28168 = $2076;
 HEAP32[$28168 >> 2] = 14942430;
 HEAP32[$28168 + 4 >> 2] = 12517923;
 HEAP32[$7790 >> 2] = 63422;
 HEAP16[$2077 >> 1] = 766;
 HEAP16[$7791 >> 1] = 228;
 HEAP16[$7792 >> 1] = 3;
 HEAP16[$7793 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2076, $2077);
 $28172 = $2078;
 HEAP32[$28172 >> 2] = 14942430;
 HEAP32[$28172 + 4 >> 2] = 12517923;
 HEAP32[$7794 >> 2] = 63422;
 HEAP16[$2079 >> 1] = 222;
 HEAP16[$7795 >> 1] = 256;
 HEAP16[$7796 >> 1] = 3;
 HEAP16[$7797 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2078, $2079);
 $28176 = $2080;
 HEAP32[$28176 >> 2] = 14942430;
 HEAP32[$28176 + 4 >> 2] = 12517923;
 HEAP32[$7798 >> 2] = 63422;
 HEAP16[$2081 >> 1] = 437;
 HEAP16[$7799 >> 1] = 256;
 HEAP16[$7800 >> 1] = 332;
 HEAP16[$7801 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2080, $2081);
 $28180 = $2082;
 HEAP32[$28180 >> 2] = 14942430;
 HEAP32[$28180 + 4 >> 2] = 12517923;
 HEAP32[$7802 >> 2] = 63422;
 HEAP16[$2083 >> 1] = 222;
 HEAP16[$7803 >> 1] = 284;
 HEAP16[$7804 >> 1] = 547;
 HEAP16[$7805 >> 1] = 24;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2082, $2083);
 $28184 = $2084;
 HEAP32[$28184 >> 2] = 14942430;
 HEAP32[$28184 + 4 >> 2] = 12517923;
 HEAP32[$7806 >> 2] = 63422;
 HEAP16[$2085 >> 1] = 222;
 HEAP16[$7807 >> 1] = 308;
 HEAP16[$7808 >> 1] = 83;
 HEAP16[$7809 >> 1] = 54;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2084, $2085);
 $28188 = $2086;
 HEAP32[$28188 >> 2] = 14942430;
 HEAP32[$28188 + 4 >> 2] = 12517923;
 HEAP32[$7810 >> 2] = 63422;
 HEAP16[$2087 >> 1] = 419;
 HEAP16[$7811 >> 1] = 308;
 HEAP16[$7812 >> 1] = 350;
 HEAP16[$7813 >> 1] = 54;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2086, $2087);
 $28192 = $2088;
 HEAP32[$28192 >> 2] = 14942430;
 HEAP32[$28192 + 4 >> 2] = 12517923;
 HEAP32[$7814 >> 2] = 63422;
 HEAP16[$2089 >> 1] = 222;
 HEAP16[$7815 >> 1] = 362;
 HEAP16[$7816 >> 1] = 3;
 HEAP16[$7817 >> 1] = 57;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2088, $2089);
 $28196 = $2090;
 HEAP32[$28196 >> 2] = 14942430;
 HEAP32[$28196 + 4 >> 2] = 12517923;
 HEAP32[$7818 >> 2] = 63422;
 HEAP16[$2091 >> 1] = 299;
 HEAP16[$7819 >> 1] = 362;
 HEAP16[$7820 >> 1] = 6;
 HEAP16[$7821 >> 1] = 57;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2090, $2091);
 $28200 = $2092;
 HEAP32[$28200 >> 2] = 14942430;
 HEAP32[$28200 + 4 >> 2] = 12517923;
 HEAP32[$7822 >> 2] = 63422;
 HEAP16[$2093 >> 1] = 419;
 HEAP16[$7823 >> 1] = 362;
 HEAP16[$7824 >> 1] = 350;
 HEAP16[$7825 >> 1] = 57;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2092, $2093);
 $28204 = $2094;
 HEAP32[$28204 >> 2] = 14942430;
 HEAP32[$28204 + 4 >> 2] = 12517923;
 HEAP32[$7826 >> 2] = 63422;
 HEAP16[$2095 >> 1] = 222;
 HEAP16[$7827 >> 1] = 228;
 HEAP16[$7828 >> 1] = 3;
 HEAP16[$7829 >> 1] = 56;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2094, $2095);
 $28208 = $2096;
 HEAP32[$28208 >> 2] = 14942430;
 HEAP32[$28208 + 4 >> 2] = 12517923;
 HEAP32[$7830 >> 2] = 63422;
 HEAP16[$2097 >> 1] = 437;
 HEAP16[$7831 >> 1] = 228;
 HEAP16[$7832 >> 1] = 6;
 HEAP16[$7833 >> 1] = 56;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2096, $2097);
 $28212 = $2098;
 HEAP32[$28212 >> 2] = 14942430;
 HEAP32[$28212 + 4 >> 2] = 12517923;
 HEAP32[$7834 >> 2] = 63422;
 HEAP16[$2099 >> 1] = 766;
 HEAP16[$7835 >> 1] = 228;
 HEAP16[$7836 >> 1] = 3;
 HEAP16[$7837 >> 1] = 56;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2098, $2099);
 $28216 = $2100;
 HEAP32[$28216 >> 2] = 14942430;
 HEAP32[$28216 + 4 >> 2] = 12517923;
 HEAP32[$7838 >> 2] = 63422;
 HEAP16[$2101 >> 1] = 222;
 HEAP16[$7839 >> 1] = 284;
 HEAP16[$7840 >> 1] = 547;
 HEAP16[$7841 >> 1] = 78;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2100, $2101);
 $28220 = $2102;
 HEAP32[$28220 >> 2] = 14942430;
 HEAP32[$28220 + 4 >> 2] = 12517923;
 HEAP32[$7842 >> 2] = 63422;
 HEAP16[$2103 >> 1] = 222;
 HEAP16[$7843 >> 1] = 362;
 HEAP16[$7844 >> 1] = 3;
 HEAP16[$7845 >> 1] = 57;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2102, $2103);
 $28224 = $2104;
 HEAP32[$28224 >> 2] = 14942430;
 HEAP32[$28224 + 4 >> 2] = 12517923;
 HEAP32[$7846 >> 2] = 63422;
 HEAP16[$2105 >> 1] = 299;
 HEAP16[$7847 >> 1] = 362;
 HEAP16[$7848 >> 1] = 6;
 HEAP16[$7849 >> 1] = 57;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2104, $2105);
 $28228 = $2106;
 HEAP32[$28228 >> 2] = 14942430;
 HEAP32[$28228 + 4 >> 2] = 12517923;
 HEAP32[$7850 >> 2] = 63422;
 HEAP16[$2107 >> 1] = 419;
 HEAP16[$7851 >> 1] = 362;
 HEAP16[$7852 >> 1] = 350;
 HEAP16[$7853 >> 1] = 57;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2106, $2107);
 $28232 = $2108;
 HEAP32[$28232 >> 2] = 14942430;
 HEAP32[$28232 + 4 >> 2] = 12517923;
 HEAP32[$7854 >> 2] = 63422;
 HEAP16[$2109 >> 1] = 222;
 HEAP16[$7855 >> 1] = 228;
 HEAP16[$7856 >> 1] = 3;
 HEAP16[$7857 >> 1] = 56;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2108, $2109);
 $28236 = $2110;
 HEAP32[$28236 >> 2] = 14942430;
 HEAP32[$28236 + 4 >> 2] = 12517923;
 HEAP32[$7858 >> 2] = 63422;
 HEAP16[$2111 >> 1] = 437;
 HEAP16[$7859 >> 1] = 228;
 HEAP16[$7860 >> 1] = 6;
 HEAP16[$7861 >> 1] = 56;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2110, $2111);
 $28240 = $2112;
 HEAP32[$28240 >> 2] = 14942430;
 HEAP32[$28240 + 4 >> 2] = 12517923;
 HEAP32[$7862 >> 2] = 63422;
 HEAP16[$2113 >> 1] = 766;
 HEAP16[$7863 >> 1] = 228;
 HEAP16[$7864 >> 1] = 3;
 HEAP16[$7865 >> 1] = 56;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2112, $2113);
 $28244 = $2114;
 HEAP32[$28244 >> 2] = 14942430;
 HEAP32[$28244 + 4 >> 2] = 12517923;
 HEAP32[$7866 >> 2] = 63422;
 HEAP16[$2115 >> 1] = 222;
 HEAP16[$7867 >> 1] = 284;
 HEAP16[$7868 >> 1] = 3;
 HEAP16[$7869 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2114, $2115);
 $28248 = $2116;
 HEAP32[$28248 >> 2] = 14942430;
 HEAP32[$28248 + 4 >> 2] = 12517923;
 HEAP32[$7870 >> 2] = 63422;
 HEAP16[$2117 >> 1] = 437;
 HEAP16[$7871 >> 1] = 284;
 HEAP16[$7872 >> 1] = 332;
 HEAP16[$7873 >> 1] = 28;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2116, $2117);
 $28252 = $2118;
 HEAP32[$28252 >> 2] = 14942430;
 HEAP32[$28252 + 4 >> 2] = 12517923;
 HEAP32[$7874 >> 2] = 63422;
 HEAP16[$2119 >> 1] = 222;
 HEAP16[$7875 >> 1] = 312;
 HEAP16[$7876 >> 1] = 547;
 HEAP16[$7877 >> 1] = 50;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2118, $2119);
 $28256 = $2120;
 HEAP32[$28256 >> 2] = 14942430;
 HEAP32[$28256 + 4 >> 2] = 12517923;
 HEAP32[$7878 >> 2] = 63422;
 HEAP16[$2121 >> 1] = 222;
 HEAP16[$7879 >> 1] = 362;
 HEAP16[$7880 >> 1] = 83;
 HEAP16[$7881 >> 1] = 57;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2120, $2121);
 $28260 = $2122;
 HEAP32[$28260 >> 2] = 14942430;
 HEAP32[$28260 + 4 >> 2] = 12517923;
 HEAP32[$7882 >> 2] = 63422;
 HEAP16[$2123 >> 1] = 419;
 HEAP16[$7883 >> 1] = 362;
 HEAP16[$7884 >> 1] = 350;
 HEAP16[$7885 >> 1] = 57;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2122, $2123);
 $28264 = $2124;
 HEAP32[$28264 >> 2] = 14942430;
 HEAP32[$28264 + 4 >> 2] = 12517923;
 HEAP32[$7886 >> 2] = 63422;
 HEAP16[$2125 >> 1] = 222;
 HEAP16[$7887 >> 1] = 228;
 HEAP16[$7888 >> 1] = 3;
 HEAP16[$7889 >> 1] = 84;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2124, $2125);
 $28268 = $2126;
 HEAP32[$28268 >> 2] = 14942430;
 HEAP32[$28268 + 4 >> 2] = 12517923;
 HEAP32[$7890 >> 2] = 63422;
 HEAP16[$2127 >> 1] = 437;
 HEAP16[$7891 >> 1] = 228;
 HEAP16[$7892 >> 1] = 6;
 HEAP16[$7893 >> 1] = 84;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2126, $2127);
 $28272 = $2128;
 HEAP32[$28272 >> 2] = 14942430;
 HEAP32[$28272 + 4 >> 2] = 12517923;
 HEAP32[$7894 >> 2] = 63422;
 HEAP16[$2129 >> 1] = 766;
 HEAP16[$7895 >> 1] = 228;
 HEAP16[$7896 >> 1] = 3;
 HEAP16[$7897 >> 1] = 84;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2128, $2129);
 $28276 = $2130;
 HEAP32[$28276 >> 2] = 14942430;
 HEAP32[$28276 + 4 >> 2] = 12517923;
 HEAP32[$7898 >> 2] = 63422;
 HEAP16[$2131 >> 1] = 222;
 HEAP16[$7899 >> 1] = 312;
 HEAP16[$7900 >> 1] = 547;
 HEAP16[$7901 >> 1] = 107;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2130, $2131);
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 223;
 HEAP16[$7902 >> 1] = 685;
 HEAP16[$7903 >> 1] = 387;
 HEAP16[$7904 >> 1] = 697;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4420) label = 4028; else {
  $28282 = HEAP32[915090] | 0;
  if (($28282 | 0) == (HEAP32[915088] | 0)) label = 4028; else {
   $$lcssa$i$i3647 = 3660360;
   $$lcssa8$i$i3646 = $28282;
   label = 4029;
  }
 }
 do if ((label | 0) == 4028) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4420) {
   $28289 = HEAP32[915096] | 0;
   if (($28289 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3647 = 3660384;
    $$lcssa8$i$i3646 = $28289;
    label = 4029;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4420) {
   $28294 = HEAP32[915102] | 0;
   if (($28294 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3647 = 3660408;
    $$lcssa8$i$i3646 = $28294;
    label = 4029;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4420) {
   $28299 = HEAP32[915108] | 0;
   if (($28299 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3647 = 3660432;
    $$lcssa8$i$i3646 = $28299;
    label = 4029;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4420) {
   $28304 = HEAP32[915114] | 0;
   if (($28304 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3647 = 3660456;
    $$lcssa8$i$i3646 = $28304;
    label = 4029;
    break;
   }
  }
  $$3$i$i3648 = __Znwj(4420) | 0;
 } while (0);
 if ((label | 0) == 4029) {
  $28287 = $$lcssa8$i$i3646 + -4 | 0;
  HEAP32[$$lcssa$i$i3647 >> 2] = $28287;
  $$3$i$i3648 = HEAP32[$28287 >> 2] | 0;
 }
 $28308 = $$3$i$i3648 + 52 | 0;
 HEAP16[$$3$i$i3648 >> 1] = 168;
 HEAP16[$$3$i$i3648 + 2 >> 1] = 13;
 HEAP8[$$3$i$i3648 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3648 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3648 + 8 >> 2] = 336;
 HEAP32[$$3$i$i3648 + 12 >> 2] = 4368;
 HEAP32[$$3$i$i3648 + 16 >> 2] = $28308;
 HEAP32[$$3$i$i3648 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3648 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3648 + 48 >> 0] = 0;
 HEAP32[$2132 >> 2] = $$3$i$i3648;
 _memcpy($28308 | 0, 2594794, 336) | 0;
 _memcpy($$3$i$i3648 + 388 | 0, 2595130, 336) | 0;
 _memcpy($$3$i$i3648 + 724 | 0, 2595466, 336) | 0;
 _memcpy($$3$i$i3648 + 1060 | 0, 2595802, 336) | 0;
 _memcpy($$3$i$i3648 + 1396 | 0, 2596138, 336) | 0;
 _memcpy($$3$i$i3648 + 1732 | 0, 2596474, 336) | 0;
 _memcpy($$3$i$i3648 + 2068 | 0, 2596810, 336) | 0;
 _memcpy($$3$i$i3648 + 2404 | 0, 2597146, 336) | 0;
 _memcpy($$3$i$i3648 + 2740 | 0, 2597482, 336) | 0;
 _memcpy($$3$i$i3648 + 3076 | 0, 2597818, 336) | 0;
 _memcpy($$3$i$i3648 + 3412 | 0, 2598154, 336) | 0;
 _memcpy($$3$i$i3648 + 3748 | 0, 2598490, 336) | 0;
 _memcpy($$3$i$i3648 + 4084 | 0, 2598826, 336) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2132);
 if ($$3$i$i3648 | 0) {
  $28331 = $$3$i$i3648 + 5 | 0;
  $28333 = (HEAP8[$28331 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$28331 >> 0] = $28333;
  if (!($28333 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3648);
  HEAP32[$2132 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 204;
 HEAP16[$7905 >> 1] = 683;
 HEAP16[$7906 >> 1] = 219;
 HEAP16[$7907 >> 1] = 698;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 564) label = 4044; else {
  $28337 = HEAP32[915090] | 0;
  if (($28337 | 0) == (HEAP32[915088] | 0)) label = 4044; else {
   $$lcssa$i$i3587 = 3660360;
   $$lcssa8$i$i3586 = $28337;
   label = 4045;
  }
 }
 do if ((label | 0) == 4044) {
  if ((HEAP32[915097] | 0) >>> 0 >= 564) {
   $28344 = HEAP32[915096] | 0;
   if (($28344 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3587 = 3660384;
    $$lcssa8$i$i3586 = $28344;
    label = 4045;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 564) {
   $28349 = HEAP32[915102] | 0;
   if (($28349 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3587 = 3660408;
    $$lcssa8$i$i3586 = $28349;
    label = 4045;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 564) {
   $28354 = HEAP32[915108] | 0;
   if (($28354 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3587 = 3660432;
    $$lcssa8$i$i3586 = $28354;
    label = 4045;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 564) {
   $28359 = HEAP32[915114] | 0;
   if (($28359 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3587 = 3660456;
    $$lcssa8$i$i3586 = $28359;
    label = 4045;
    break;
   }
  }
  $$3$i$i3588 = __Znwj(564) | 0;
 } while (0);
 if ((label | 0) == 4045) {
  $28342 = $$lcssa8$i$i3586 + -4 | 0;
  HEAP32[$$lcssa$i$i3587 >> 2] = $28342;
  $$3$i$i3588 = HEAP32[$28342 >> 2] | 0;
 }
 $28363 = $$3$i$i3588 + 52 | 0;
 HEAP16[$$3$i$i3588 >> 1] = 16;
 HEAP16[$$3$i$i3588 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3588 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3588 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3588 + 8 >> 2] = 32;
 HEAP32[$$3$i$i3588 + 12 >> 2] = 512;
 HEAP32[$$3$i$i3588 + 16 >> 2] = $28363;
 HEAP32[$$3$i$i3588 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3588 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3588 + 48 >> 0] = 0;
 HEAP32[$2133 >> 2] = $$3$i$i3588;
 dest = $28363;
 src = 2599162;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3588 + 84 | 0;
 src = 2599194;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3588 + 116 | 0;
 src = 2599226;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3588 + 148 | 0;
 src = 2599258;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3588 + 180 | 0;
 src = 2599290;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3588 + 212 | 0;
 src = 2599322;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3588 + 244 | 0;
 src = 2599354;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3588 + 276 | 0;
 src = 2599386;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3588 + 308 | 0;
 src = 2599418;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3588 + 340 | 0;
 src = 2599450;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3588 + 372 | 0;
 src = 2599482;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3588 + 404 | 0;
 src = 2599514;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3588 + 436 | 0;
 src = 2599546;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3588 + 468 | 0;
 src = 2599578;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3588 + 500 | 0;
 src = 2599610;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3588 + 532 | 0;
 src = 2599642;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2133);
 if ($$3$i$i3588 | 0) {
  $28389 = $$3$i$i3588 + 5 | 0;
  $28391 = (HEAP8[$28389 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$28389 >> 0] = $28391;
  if (!($28391 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3588);
  HEAP32[$2133 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 201;
 HEAP16[$7908 >> 1] = 680;
 HEAP16[$7909 >> 1] = 1021;
 HEAP16[$7910 >> 1] = 680;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1700) label = 4060; else {
  $28395 = HEAP32[915090] | 0;
  if (($28395 | 0) == (HEAP32[915088] | 0)) label = 4060; else {
   $$lcssa$i$i3551 = 3660360;
   $$lcssa8$i$i3550 = $28395;
   label = 4061;
  }
 }
 do if ((label | 0) == 4060) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1700) {
   $28402 = HEAP32[915096] | 0;
   if (($28402 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3551 = 3660384;
    $$lcssa8$i$i3550 = $28402;
    label = 4061;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1700) {
   $28407 = HEAP32[915102] | 0;
   if (($28407 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3551 = 3660408;
    $$lcssa8$i$i3550 = $28407;
    label = 4061;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1700) {
   $28412 = HEAP32[915108] | 0;
   if (($28412 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3551 = 3660432;
    $$lcssa8$i$i3550 = $28412;
    label = 4061;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1700) {
   $28417 = HEAP32[915114] | 0;
   if (($28417 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3551 = 3660456;
    $$lcssa8$i$i3550 = $28417;
    label = 4061;
    break;
   }
  }
  $$3$i$i3552 = __Znwj(1700) | 0;
 } while (0);
 if ((label | 0) == 4061) {
  $28400 = $$lcssa8$i$i3550 + -4 | 0;
  HEAP32[$$lcssa$i$i3551 >> 2] = $28400;
  $$3$i$i3552 = HEAP32[$28400 >> 2] | 0;
 }
 $28421 = $$3$i$i3552 + 52 | 0;
 HEAP16[$$3$i$i3552 >> 1] = 824;
 HEAP16[$$3$i$i3552 + 2 >> 1] = 1;
 HEAP8[$$3$i$i3552 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3552 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3552 + 8 >> 2] = 1648;
 HEAP32[$$3$i$i3552 + 12 >> 2] = 1648;
 HEAP32[$$3$i$i3552 + 16 >> 2] = $28421;
 HEAP32[$$3$i$i3552 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3552 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3552 + 48 >> 0] = 0;
 HEAP32[$2134 >> 2] = $$3$i$i3552;
 _memcpy($28421 | 0, 2599674, 1648) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2134);
 if ($$3$i$i3552 | 0) {
  $28432 = $$3$i$i3552 + 5 | 0;
  $28434 = (HEAP8[$28432 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$28432 >> 0] = $28434;
  if (!($28434 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3552);
  HEAP32[$2134 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 270;
 HEAP16[$7911 >> 1] = 116;
 HEAP16[$7912 >> 1] = 958;
 HEAP16[$7913 >> 1] = 134;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 26348) label = 4076; else {
  $28438 = HEAP32[915090] | 0;
  if (($28438 | 0) == (HEAP32[915088] | 0)) label = 4076; else {
   $$lcssa$i$i3539 = 3660360;
   $$lcssa8$i$i3538 = $28438;
   label = 4077;
  }
 }
 do if ((label | 0) == 4076) {
  if ((HEAP32[915097] | 0) >>> 0 >= 26348) {
   $28445 = HEAP32[915096] | 0;
   if (($28445 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3539 = 3660384;
    $$lcssa8$i$i3538 = $28445;
    label = 4077;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 26348) {
   $28450 = HEAP32[915102] | 0;
   if (($28450 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3539 = 3660408;
    $$lcssa8$i$i3538 = $28450;
    label = 4077;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 26348) {
   $28455 = HEAP32[915108] | 0;
   if (($28455 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3539 = 3660432;
    $$lcssa8$i$i3538 = $28455;
    label = 4077;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 26348) {
   $28460 = HEAP32[915114] | 0;
   if (($28460 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3539 = 3660456;
    $$lcssa8$i$i3538 = $28460;
    label = 4077;
    break;
   }
  }
  $$3$i$i3540 = __Znwj(26348) | 0;
 } while (0);
 if ((label | 0) == 4077) {
  $28443 = $$lcssa8$i$i3538 + -4 | 0;
  HEAP32[$$lcssa$i$i3539 >> 2] = $28443;
  $$3$i$i3540 = HEAP32[$28443 >> 2] | 0;
 }
 $28464 = $$3$i$i3540 + 52 | 0;
 HEAP16[$$3$i$i3540 >> 1] = 692;
 HEAP16[$$3$i$i3540 + 2 >> 1] = 19;
 HEAP8[$$3$i$i3540 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3540 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3540 + 8 >> 2] = 1384;
 HEAP32[$$3$i$i3540 + 12 >> 2] = 26296;
 HEAP32[$$3$i$i3540 + 16 >> 2] = $28464;
 HEAP32[$$3$i$i3540 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3540 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3540 + 48 >> 0] = 0;
 HEAP32[$2135 >> 2] = $$3$i$i3540;
 _memcpy($28464 | 0, 2601322, 1384) | 0;
 _memcpy($$3$i$i3540 + 1436 | 0, 2602706, 1384) | 0;
 _memcpy($$3$i$i3540 + 2820 | 0, 2604090, 1384) | 0;
 _memcpy($$3$i$i3540 + 4204 | 0, 2605474, 1384) | 0;
 _memcpy($$3$i$i3540 + 5588 | 0, 2606858, 1384) | 0;
 _memcpy($$3$i$i3540 + 6972 | 0, 2608242, 1384) | 0;
 _memcpy($$3$i$i3540 + 8356 | 0, 2609626, 1384) | 0;
 _memcpy($$3$i$i3540 + 9740 | 0, 2611010, 1384) | 0;
 _memcpy($$3$i$i3540 + 11124 | 0, 2612394, 1384) | 0;
 _memcpy($$3$i$i3540 + 12508 | 0, 2613778, 1384) | 0;
 _memcpy($$3$i$i3540 + 13892 | 0, 2615162, 1384) | 0;
 _memcpy($$3$i$i3540 + 15276 | 0, 2616546, 1384) | 0;
 _memcpy($$3$i$i3540 + 16660 | 0, 2617930, 1384) | 0;
 _memcpy($$3$i$i3540 + 18044 | 0, 2619314, 1384) | 0;
 _memcpy($$3$i$i3540 + 19428 | 0, 2620698, 1384) | 0;
 _memcpy($$3$i$i3540 + 20812 | 0, 2622082, 1384) | 0;
 _memcpy($$3$i$i3540 + 22196 | 0, 2623466, 1384) | 0;
 _memcpy($$3$i$i3540 + 23580 | 0, 2624850, 1384) | 0;
 _memcpy($$3$i$i3540 + 24964 | 0, 2626234, 1384) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2135);
 if ($$3$i$i3540 | 0) {
  $28493 = $$3$i$i3540 + 5 | 0;
  $28495 = (HEAP8[$28493 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$28493 >> 0] = $28495;
  if (!($28495 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3540);
  HEAP32[$2135 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 270;
 HEAP16[$7914 >> 1] = 135;
 HEAP16[$7915 >> 1] = 958;
 HEAP16[$7916 >> 1] = 141;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 9740) label = 4092; else {
  $28499 = HEAP32[915090] | 0;
  if (($28499 | 0) == (HEAP32[915088] | 0)) label = 4092; else {
   $$lcssa$i$i3527 = 3660360;
   $$lcssa8$i$i3526 = $28499;
   label = 4093;
  }
 }
 do if ((label | 0) == 4092) {
  if ((HEAP32[915097] | 0) >>> 0 >= 9740) {
   $28506 = HEAP32[915096] | 0;
   if (($28506 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3527 = 3660384;
    $$lcssa8$i$i3526 = $28506;
    label = 4093;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 9740) {
   $28511 = HEAP32[915102] | 0;
   if (($28511 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3527 = 3660408;
    $$lcssa8$i$i3526 = $28511;
    label = 4093;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 9740) {
   $28516 = HEAP32[915108] | 0;
   if (($28516 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3527 = 3660432;
    $$lcssa8$i$i3526 = $28516;
    label = 4093;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 9740) {
   $28521 = HEAP32[915114] | 0;
   if (($28521 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3527 = 3660456;
    $$lcssa8$i$i3526 = $28521;
    label = 4093;
    break;
   }
  }
  $$3$i$i3528 = __Znwj(9740) | 0;
 } while (0);
 if ((label | 0) == 4093) {
  $28504 = $$lcssa8$i$i3526 + -4 | 0;
  HEAP32[$$lcssa$i$i3527 >> 2] = $28504;
  $$3$i$i3528 = HEAP32[$28504 >> 2] | 0;
 }
 $28525 = $$3$i$i3528 + 52 | 0;
 HEAP16[$$3$i$i3528 >> 1] = 692;
 HEAP16[$$3$i$i3528 + 2 >> 1] = 7;
 HEAP8[$$3$i$i3528 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3528 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3528 + 8 >> 2] = 1384;
 HEAP32[$$3$i$i3528 + 12 >> 2] = 9688;
 HEAP32[$$3$i$i3528 + 16 >> 2] = $28525;
 HEAP32[$$3$i$i3528 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3528 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3528 + 48 >> 0] = 0;
 HEAP32[$2136 >> 2] = $$3$i$i3528;
 _memcpy($28525 | 0, 2627618, 1384) | 0;
 _memcpy($$3$i$i3528 + 1436 | 0, 2629002, 1384) | 0;
 _memcpy($$3$i$i3528 + 2820 | 0, 2630386, 1384) | 0;
 _memcpy($$3$i$i3528 + 4204 | 0, 2631770, 1384) | 0;
 _memcpy($$3$i$i3528 + 5588 | 0, 2633154, 1384) | 0;
 _memcpy($$3$i$i3528 + 6972 | 0, 2634538, 1384) | 0;
 _memcpy($$3$i$i3528 + 8356 | 0, 2635922, 1384) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2136);
 if ($$3$i$i3528 | 0) {
  $28542 = $$3$i$i3528 + 5 | 0;
  $28544 = (HEAP8[$28542 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$28542 >> 0] = $28544;
  if (!($28544 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3528);
  HEAP32[$2136 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 213;
 HEAP16[$7917 >> 1] = 105;
 HEAP16[$7918 >> 1] = 260;
 HEAP16[$7919 >> 1] = 132;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2740) label = 4108; else {
  $28548 = HEAP32[915090] | 0;
  if (($28548 | 0) == (HEAP32[915088] | 0)) label = 4108; else {
   $$lcssa$i$i3515 = 3660360;
   $$lcssa8$i$i3514 = $28548;
   label = 4109;
  }
 }
 do if ((label | 0) == 4108) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2740) {
   $28555 = HEAP32[915096] | 0;
   if (($28555 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3515 = 3660384;
    $$lcssa8$i$i3514 = $28555;
    label = 4109;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2740) {
   $28560 = HEAP32[915102] | 0;
   if (($28560 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3515 = 3660408;
    $$lcssa8$i$i3514 = $28560;
    label = 4109;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2740) {
   $28565 = HEAP32[915108] | 0;
   if (($28565 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3515 = 3660432;
    $$lcssa8$i$i3514 = $28565;
    label = 4109;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2740) {
   $28570 = HEAP32[915114] | 0;
   if (($28570 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3515 = 3660456;
    $$lcssa8$i$i3514 = $28570;
    label = 4109;
    break;
   }
  }
  $$3$i$i3516 = __Znwj(2740) | 0;
 } while (0);
 if ((label | 0) == 4109) {
  $28553 = $$lcssa8$i$i3514 + -4 | 0;
  HEAP32[$$lcssa$i$i3515 >> 2] = $28553;
  $$3$i$i3516 = HEAP32[$28553 >> 2] | 0;
 }
 $28574 = $$3$i$i3516 + 52 | 0;
 HEAP16[$$3$i$i3516 >> 1] = 48;
 HEAP16[$$3$i$i3516 + 2 >> 1] = 28;
 HEAP8[$$3$i$i3516 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3516 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3516 + 8 >> 2] = 96;
 HEAP32[$$3$i$i3516 + 12 >> 2] = 2688;
 HEAP32[$$3$i$i3516 + 16 >> 2] = $28574;
 HEAP32[$$3$i$i3516 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3516 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3516 + 48 >> 0] = 0;
 HEAP32[$2137 >> 2] = $$3$i$i3516;
 dest = $28574;
 src = 2637306;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 148 | 0;
 src = 2637402;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 244 | 0;
 src = 2637498;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 340 | 0;
 src = 2637594;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 436 | 0;
 src = 2637690;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 532 | 0;
 src = 2637786;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 628 | 0;
 src = 2637882;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 724 | 0;
 src = 2637978;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 820 | 0;
 src = 2638074;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 916 | 0;
 src = 2638170;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 1012 | 0;
 src = 2638266;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 1108 | 0;
 src = 2638362;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 1204 | 0;
 src = 2638458;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 1300 | 0;
 src = 2638554;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 1396 | 0;
 src = 2638650;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 1492 | 0;
 src = 2638746;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 1588 | 0;
 src = 2638842;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 1684 | 0;
 src = 2638938;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 1780 | 0;
 src = 2639034;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 1876 | 0;
 src = 2639130;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 1972 | 0;
 src = 2639226;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 2068 | 0;
 src = 2639322;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 2164 | 0;
 src = 2639418;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 2260 | 0;
 src = 2639514;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 2356 | 0;
 src = 2639610;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 2452 | 0;
 src = 2639706;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 2548 | 0;
 src = 2639802;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3516 + 2644 | 0;
 src = 2639898;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2137);
 if ($$3$i$i3516 | 0) {
  $28612 = $$3$i$i3516 + 5 | 0;
  $28614 = (HEAP8[$28612 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$28612 >> 0] = $28614;
  if (!($28614 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3516);
  HEAP32[$2137 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 213;
 HEAP16[$7920 >> 1] = 133;
 HEAP16[$7921 >> 1] = 260;
 HEAP16[$7922 >> 1] = 142;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1012) label = 4124; else {
  $28618 = HEAP32[915090] | 0;
  if (($28618 | 0) == (HEAP32[915088] | 0)) label = 4124; else {
   $$lcssa$i$i3503 = 3660360;
   $$lcssa8$i$i3502 = $28618;
   label = 4125;
  }
 }
 do if ((label | 0) == 4124) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1012) {
   $28625 = HEAP32[915096] | 0;
   if (($28625 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3503 = 3660384;
    $$lcssa8$i$i3502 = $28625;
    label = 4125;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1012) {
   $28630 = HEAP32[915102] | 0;
   if (($28630 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3503 = 3660408;
    $$lcssa8$i$i3502 = $28630;
    label = 4125;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1012) {
   $28635 = HEAP32[915108] | 0;
   if (($28635 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3503 = 3660432;
    $$lcssa8$i$i3502 = $28635;
    label = 4125;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1012) {
   $28640 = HEAP32[915114] | 0;
   if (($28640 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3503 = 3660456;
    $$lcssa8$i$i3502 = $28640;
    label = 4125;
    break;
   }
  }
  $$3$i$i3504 = __Znwj(1012) | 0;
 } while (0);
 if ((label | 0) == 4125) {
  $28623 = $$lcssa8$i$i3502 + -4 | 0;
  HEAP32[$$lcssa$i$i3503 >> 2] = $28623;
  $$3$i$i3504 = HEAP32[$28623 >> 2] | 0;
 }
 $28644 = $$3$i$i3504 + 52 | 0;
 HEAP16[$$3$i$i3504 >> 1] = 48;
 HEAP16[$$3$i$i3504 + 2 >> 1] = 10;
 HEAP8[$$3$i$i3504 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3504 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3504 + 8 >> 2] = 96;
 HEAP32[$$3$i$i3504 + 12 >> 2] = 960;
 HEAP32[$$3$i$i3504 + 16 >> 2] = $28644;
 HEAP32[$$3$i$i3504 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3504 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3504 + 48 >> 0] = 0;
 HEAP32[$2138 >> 2] = $$3$i$i3504;
 dest = $28644;
 src = 2639994;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3504 + 148 | 0;
 src = 2640090;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3504 + 244 | 0;
 src = 2640186;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3504 + 340 | 0;
 src = 2640282;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3504 + 436 | 0;
 src = 2640378;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3504 + 532 | 0;
 src = 2640474;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3504 + 628 | 0;
 src = 2640570;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3504 + 724 | 0;
 src = 2640666;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3504 + 820 | 0;
 src = 2640762;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3504 + 916 | 0;
 src = 2640858;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2138);
 if ($$3$i$i3504 | 0) {
  $28664 = $$3$i$i3504 + 5 | 0;
  $28666 = (HEAP8[$28664 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$28664 >> 0] = $28666;
  if (!($28666 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3504);
  HEAP32[$2138 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 213;
 HEAP16[$7923 >> 1] = 143;
 HEAP16[$7924 >> 1] = 260;
 HEAP16[$7925 >> 1] = 143;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 148) label = 4140; else {
  $28670 = HEAP32[915090] | 0;
  if (($28670 | 0) == (HEAP32[915088] | 0)) label = 4140; else {
   $$lcssa$i$i3491 = 3660360;
   $$lcssa8$i$i3490 = $28670;
   label = 4141;
  }
 }
 do if ((label | 0) == 4140) {
  if ((HEAP32[915097] | 0) >>> 0 >= 148) {
   $28677 = HEAP32[915096] | 0;
   if (($28677 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3491 = 3660384;
    $$lcssa8$i$i3490 = $28677;
    label = 4141;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 148) {
   $28682 = HEAP32[915102] | 0;
   if (($28682 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3491 = 3660408;
    $$lcssa8$i$i3490 = $28682;
    label = 4141;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 148) {
   $28687 = HEAP32[915108] | 0;
   if (($28687 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3491 = 3660432;
    $$lcssa8$i$i3490 = $28687;
    label = 4141;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 148) {
   $28692 = HEAP32[915114] | 0;
   if (($28692 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3491 = 3660456;
    $$lcssa8$i$i3490 = $28692;
    label = 4141;
    break;
   }
  }
  $$3$i$i3492 = __Znwj(148) | 0;
 } while (0);
 if ((label | 0) == 4141) {
  $28675 = $$lcssa8$i$i3490 + -4 | 0;
  HEAP32[$$lcssa$i$i3491 >> 2] = $28675;
  $$3$i$i3492 = HEAP32[$28675 >> 2] | 0;
 }
 $28696 = $$3$i$i3492 + 52 | 0;
 HEAP16[$$3$i$i3492 >> 1] = 48;
 HEAP16[$$3$i$i3492 + 2 >> 1] = 1;
 HEAP8[$$3$i$i3492 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3492 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3492 + 8 >> 2] = 96;
 HEAP32[$$3$i$i3492 + 12 >> 2] = 96;
 HEAP32[$$3$i$i3492 + 16 >> 2] = $28696;
 HEAP32[$$3$i$i3492 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3492 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3492 + 48 >> 0] = 0;
 HEAP32[$2139 >> 2] = $$3$i$i3492;
 dest = $28696;
 src = 2640954;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2139);
 if ($$3$i$i3492 | 0) {
  $28707 = $$3$i$i3492 + 5 | 0;
  $28709 = (HEAP8[$28707 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$28707 >> 0] = $28709;
  if (!($28709 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3492);
  HEAP32[$2139 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 213;
 HEAP16[$7926 >> 1] = 144;
 HEAP16[$7927 >> 1] = 260;
 HEAP16[$7928 >> 1] = 152;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 916) label = 4156; else {
  $28713 = HEAP32[915090] | 0;
  if (($28713 | 0) == (HEAP32[915088] | 0)) label = 4156; else {
   $$lcssa$i$i3479 = 3660360;
   $$lcssa8$i$i3478 = $28713;
   label = 4157;
  }
 }
 do if ((label | 0) == 4156) {
  if ((HEAP32[915097] | 0) >>> 0 >= 916) {
   $28720 = HEAP32[915096] | 0;
   if (($28720 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3479 = 3660384;
    $$lcssa8$i$i3478 = $28720;
    label = 4157;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 916) {
   $28725 = HEAP32[915102] | 0;
   if (($28725 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3479 = 3660408;
    $$lcssa8$i$i3478 = $28725;
    label = 4157;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 916) {
   $28730 = HEAP32[915108] | 0;
   if (($28730 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3479 = 3660432;
    $$lcssa8$i$i3478 = $28730;
    label = 4157;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 916) {
   $28735 = HEAP32[915114] | 0;
   if (($28735 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3479 = 3660456;
    $$lcssa8$i$i3478 = $28735;
    label = 4157;
    break;
   }
  }
  $$3$i$i3480 = __Znwj(916) | 0;
 } while (0);
 if ((label | 0) == 4157) {
  $28718 = $$lcssa8$i$i3478 + -4 | 0;
  HEAP32[$$lcssa$i$i3479 >> 2] = $28718;
  $$3$i$i3480 = HEAP32[$28718 >> 2] | 0;
 }
 $28739 = $$3$i$i3480 + 52 | 0;
 HEAP16[$$3$i$i3480 >> 1] = 48;
 HEAP16[$$3$i$i3480 + 2 >> 1] = 9;
 HEAP8[$$3$i$i3480 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3480 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3480 + 8 >> 2] = 96;
 HEAP32[$$3$i$i3480 + 12 >> 2] = 864;
 HEAP32[$$3$i$i3480 + 16 >> 2] = $28739;
 HEAP32[$$3$i$i3480 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3480 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3480 + 48 >> 0] = 0;
 HEAP32[$2140 >> 2] = $$3$i$i3480;
 dest = $28739;
 src = 2641050;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3480 + 148 | 0;
 src = 2641146;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3480 + 244 | 0;
 src = 2641242;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3480 + 340 | 0;
 src = 2641338;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3480 + 436 | 0;
 src = 2641434;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3480 + 532 | 0;
 src = 2641530;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3480 + 628 | 0;
 src = 2641626;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3480 + 724 | 0;
 src = 2641722;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3480 + 820 | 0;
 src = 2641818;
 stop = dest + 96 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2140);
 if ($$3$i$i3480 | 0) {
  $28758 = $$3$i$i3480 + 5 | 0;
  $28760 = (HEAP8[$28758 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$28758 >> 0] = $28760;
  if (!($28760 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3480);
  HEAP32[$2140 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 201;
 HEAP16[$7929 >> 1] = 160;
 HEAP16[$7930 >> 1] = 1021;
 HEAP16[$7931 >> 1] = 160;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1700) label = 4172; else {
  $28764 = HEAP32[915090] | 0;
  if (($28764 | 0) == (HEAP32[915088] | 0)) label = 4172; else {
   $$lcssa$i$i3467 = 3660360;
   $$lcssa8$i$i3466 = $28764;
   label = 4173;
  }
 }
 do if ((label | 0) == 4172) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1700) {
   $28771 = HEAP32[915096] | 0;
   if (($28771 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3467 = 3660384;
    $$lcssa8$i$i3466 = $28771;
    label = 4173;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1700) {
   $28776 = HEAP32[915102] | 0;
   if (($28776 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3467 = 3660408;
    $$lcssa8$i$i3466 = $28776;
    label = 4173;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1700) {
   $28781 = HEAP32[915108] | 0;
   if (($28781 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3467 = 3660432;
    $$lcssa8$i$i3466 = $28781;
    label = 4173;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1700) {
   $28786 = HEAP32[915114] | 0;
   if (($28786 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3467 = 3660456;
    $$lcssa8$i$i3466 = $28786;
    label = 4173;
    break;
   }
  }
  $$3$i$i3468 = __Znwj(1700) | 0;
 } while (0);
 if ((label | 0) == 4173) {
  $28769 = $$lcssa8$i$i3466 + -4 | 0;
  HEAP32[$$lcssa$i$i3467 >> 2] = $28769;
  $$3$i$i3468 = HEAP32[$28769 >> 2] | 0;
 }
 $28790 = $$3$i$i3468 + 52 | 0;
 HEAP16[$$3$i$i3468 >> 1] = 824;
 HEAP16[$$3$i$i3468 + 2 >> 1] = 1;
 HEAP8[$$3$i$i3468 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3468 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3468 + 8 >> 2] = 1648;
 HEAP32[$$3$i$i3468 + 12 >> 2] = 1648;
 HEAP32[$$3$i$i3468 + 16 >> 2] = $28790;
 HEAP32[$$3$i$i3468 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3468 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3468 + 48 >> 0] = 0;
 HEAP32[$2141 >> 2] = $$3$i$i3468;
 _memcpy($28790 | 0, 2641914, 1648) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2141);
 if ($$3$i$i3468 | 0) {
  $28801 = $$3$i$i3468 + 5 | 0;
  $28803 = (HEAP8[$28801 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$28801 >> 0] = $28803;
  if (!($28803 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3468);
  HEAP32[$2141 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 776;
 HEAP16[$7932 >> 1] = 176;
 HEAP16[$7933 >> 1] = 791;
 HEAP16[$7934 >> 1] = 191;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 564) label = 4188; else {
  $28807 = HEAP32[915090] | 0;
  if (($28807 | 0) == (HEAP32[915088] | 0)) label = 4188; else {
   $$lcssa$i$i3455 = 3660360;
   $$lcssa8$i$i3454 = $28807;
   label = 4189;
  }
 }
 do if ((label | 0) == 4188) {
  if ((HEAP32[915097] | 0) >>> 0 >= 564) {
   $28814 = HEAP32[915096] | 0;
   if (($28814 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3455 = 3660384;
    $$lcssa8$i$i3454 = $28814;
    label = 4189;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 564) {
   $28819 = HEAP32[915102] | 0;
   if (($28819 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3455 = 3660408;
    $$lcssa8$i$i3454 = $28819;
    label = 4189;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 564) {
   $28824 = HEAP32[915108] | 0;
   if (($28824 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3455 = 3660432;
    $$lcssa8$i$i3454 = $28824;
    label = 4189;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 564) {
   $28829 = HEAP32[915114] | 0;
   if (($28829 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3455 = 3660456;
    $$lcssa8$i$i3454 = $28829;
    label = 4189;
    break;
   }
  }
  $$3$i$i3456 = __Znwj(564) | 0;
 } while (0);
 if ((label | 0) == 4189) {
  $28812 = $$lcssa8$i$i3454 + -4 | 0;
  HEAP32[$$lcssa$i$i3455 >> 2] = $28812;
  $$3$i$i3456 = HEAP32[$28812 >> 2] | 0;
 }
 $28833 = $$3$i$i3456 + 52 | 0;
 HEAP16[$$3$i$i3456 >> 1] = 16;
 HEAP16[$$3$i$i3456 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3456 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3456 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3456 + 8 >> 2] = 32;
 HEAP32[$$3$i$i3456 + 12 >> 2] = 512;
 HEAP32[$$3$i$i3456 + 16 >> 2] = $28833;
 HEAP32[$$3$i$i3456 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3456 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3456 + 48 >> 0] = 0;
 HEAP32[$2142 >> 2] = $$3$i$i3456;
 dest = $28833;
 src = 2643562;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3456 + 84 | 0;
 src = 2643594;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3456 + 116 | 0;
 src = 2643626;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3456 + 148 | 0;
 src = 2643658;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3456 + 180 | 0;
 src = 2643690;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3456 + 212 | 0;
 src = 2643722;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3456 + 244 | 0;
 src = 2643754;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3456 + 276 | 0;
 src = 2643786;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3456 + 308 | 0;
 src = 2643818;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3456 + 340 | 0;
 src = 2643850;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3456 + 372 | 0;
 src = 2643882;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3456 + 404 | 0;
 src = 2643914;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3456 + 436 | 0;
 src = 2643946;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3456 + 468 | 0;
 src = 2643978;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3456 + 500 | 0;
 src = 2644010;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3456 + 532 | 0;
 src = 2644042;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2142);
 if ($$3$i$i3456 | 0) {
  $28859 = $$3$i$i3456 + 5 | 0;
  $28861 = (HEAP8[$28859 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$28859 >> 0] = $28861;
  if (!($28861 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3456);
  HEAP32[$2142 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 795;
 HEAP16[$7935 >> 1] = 178;
 HEAP16[$7936 >> 1] = 959;
 HEAP16[$7937 >> 1] = 190;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4420) label = 4204; else {
  $28865 = HEAP32[915090] | 0;
  if (($28865 | 0) == (HEAP32[915088] | 0)) label = 4204; else {
   $$lcssa$i$i3443 = 3660360;
   $$lcssa8$i$i3442 = $28865;
   label = 4205;
  }
 }
 do if ((label | 0) == 4204) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4420) {
   $28872 = HEAP32[915096] | 0;
   if (($28872 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3443 = 3660384;
    $$lcssa8$i$i3442 = $28872;
    label = 4205;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4420) {
   $28877 = HEAP32[915102] | 0;
   if (($28877 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3443 = 3660408;
    $$lcssa8$i$i3442 = $28877;
    label = 4205;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4420) {
   $28882 = HEAP32[915108] | 0;
   if (($28882 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3443 = 3660432;
    $$lcssa8$i$i3442 = $28882;
    label = 4205;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4420) {
   $28887 = HEAP32[915114] | 0;
   if (($28887 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3443 = 3660456;
    $$lcssa8$i$i3442 = $28887;
    label = 4205;
    break;
   }
  }
  $$3$i$i3444 = __Znwj(4420) | 0;
 } while (0);
 if ((label | 0) == 4205) {
  $28870 = $$lcssa8$i$i3442 + -4 | 0;
  HEAP32[$$lcssa$i$i3443 >> 2] = $28870;
  $$3$i$i3444 = HEAP32[$28870 >> 2] | 0;
 }
 $28891 = $$3$i$i3444 + 52 | 0;
 HEAP16[$$3$i$i3444 >> 1] = 168;
 HEAP16[$$3$i$i3444 + 2 >> 1] = 13;
 HEAP8[$$3$i$i3444 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3444 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3444 + 8 >> 2] = 336;
 HEAP32[$$3$i$i3444 + 12 >> 2] = 4368;
 HEAP32[$$3$i$i3444 + 16 >> 2] = $28891;
 HEAP32[$$3$i$i3444 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3444 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3444 + 48 >> 0] = 0;
 HEAP32[$2143 >> 2] = $$3$i$i3444;
 _memcpy($28891 | 0, 2644074, 336) | 0;
 _memcpy($$3$i$i3444 + 388 | 0, 2644410, 336) | 0;
 _memcpy($$3$i$i3444 + 724 | 0, 2644746, 336) | 0;
 _memcpy($$3$i$i3444 + 1060 | 0, 2645082, 336) | 0;
 _memcpy($$3$i$i3444 + 1396 | 0, 2645418, 336) | 0;
 _memcpy($$3$i$i3444 + 1732 | 0, 2645754, 336) | 0;
 _memcpy($$3$i$i3444 + 2068 | 0, 2646090, 336) | 0;
 _memcpy($$3$i$i3444 + 2404 | 0, 2646426, 336) | 0;
 _memcpy($$3$i$i3444 + 2740 | 0, 2646762, 336) | 0;
 _memcpy($$3$i$i3444 + 3076 | 0, 2647098, 336) | 0;
 _memcpy($$3$i$i3444 + 3412 | 0, 2647434, 336) | 0;
 _memcpy($$3$i$i3444 + 3748 | 0, 2647770, 336) | 0;
 _memcpy($$3$i$i3444 + 4084 | 0, 2648106, 336) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2143);
 if ($$3$i$i3444 | 0) {
  $28914 = $$3$i$i3444 + 5 | 0;
  $28916 = (HEAP8[$28914 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$28914 >> 0] = $28916;
  if (!($28916 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3444);
  HEAP32[$2143 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7938 >> 1] = 192;
 HEAP16[$7939 >> 1] = 994;
 HEAP16[$7940 >> 1] = 195;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6324) label = 4220; else {
  $28920 = HEAP32[915090] | 0;
  if (($28920 | 0) == (HEAP32[915088] | 0)) label = 4220; else {
   $$lcssa$i$i3431 = 3660360;
   $$lcssa8$i$i3430 = $28920;
   label = 4221;
  }
 }
 do if ((label | 0) == 4220) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6324) {
   $28927 = HEAP32[915096] | 0;
   if (($28927 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3431 = 3660384;
    $$lcssa8$i$i3430 = $28927;
    label = 4221;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6324) {
   $28932 = HEAP32[915102] | 0;
   if (($28932 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3431 = 3660408;
    $$lcssa8$i$i3430 = $28932;
    label = 4221;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6324) {
   $28937 = HEAP32[915108] | 0;
   if (($28937 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3431 = 3660432;
    $$lcssa8$i$i3430 = $28937;
    label = 4221;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6324) {
   $28942 = HEAP32[915114] | 0;
   if (($28942 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3431 = 3660456;
    $$lcssa8$i$i3430 = $28942;
    label = 4221;
    break;
   }
  }
  $$3$i$i3432 = __Znwj(6324) | 0;
 } while (0);
 if ((label | 0) == 4221) {
  $28925 = $$lcssa8$i$i3430 + -4 | 0;
  HEAP32[$$lcssa$i$i3431 >> 2] = $28925;
  $$3$i$i3432 = HEAP32[$28925 >> 2] | 0;
 }
 $28946 = $$3$i$i3432 + 52 | 0;
 HEAP16[$$3$i$i3432 >> 1] = 784;
 HEAP16[$$3$i$i3432 + 2 >> 1] = 4;
 HEAP8[$$3$i$i3432 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3432 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3432 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i3432 + 12 >> 2] = 6272;
 HEAP32[$$3$i$i3432 + 16 >> 2] = $28946;
 HEAP32[$$3$i$i3432 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3432 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3432 + 48 >> 0] = 0;
 HEAP32[$2144 >> 2] = $$3$i$i3432;
 _memcpy($28946 | 0, 2648442, 1568) | 0;
 _memcpy($$3$i$i3432 + 1620 | 0, 2650010, 1568) | 0;
 _memcpy($$3$i$i3432 + 3188 | 0, 2651578, 1568) | 0;
 _memcpy($$3$i$i3432 + 4756 | 0, 2653146, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2144);
 if ($$3$i$i3432 | 0) {
  $28960 = $$3$i$i3432 + 5 | 0;
  $28962 = (HEAP8[$28960 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$28960 >> 0] = $28962;
  if (!($28962 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3432);
  HEAP32[$2144 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7941 >> 1] = 176;
 HEAP16[$7942 >> 1] = 774;
 HEAP16[$7943 >> 1] = 191;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 18100) label = 4236; else {
  $28966 = HEAP32[915090] | 0;
  if (($28966 | 0) == (HEAP32[915088] | 0)) label = 4236; else {
   $$lcssa$i$i3419 = 3660360;
   $$lcssa8$i$i3418 = $28966;
   label = 4237;
  }
 }
 do if ((label | 0) == 4236) {
  if ((HEAP32[915097] | 0) >>> 0 >= 18100) {
   $28973 = HEAP32[915096] | 0;
   if (($28973 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3419 = 3660384;
    $$lcssa8$i$i3418 = $28973;
    label = 4237;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 18100) {
   $28978 = HEAP32[915102] | 0;
   if (($28978 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3419 = 3660408;
    $$lcssa8$i$i3418 = $28978;
    label = 4237;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 18100) {
   $28983 = HEAP32[915108] | 0;
   if (($28983 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3419 = 3660432;
    $$lcssa8$i$i3418 = $28983;
    label = 4237;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 18100) {
   $28988 = HEAP32[915114] | 0;
   if (($28988 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3419 = 3660456;
    $$lcssa8$i$i3418 = $28988;
    label = 4237;
    break;
   }
  }
  $$3$i$i3420 = __Znwj(18100) | 0;
 } while (0);
 if ((label | 0) == 4237) {
  $28971 = $$lcssa8$i$i3418 + -4 | 0;
  HEAP32[$$lcssa$i$i3419 >> 2] = $28971;
  $$3$i$i3420 = HEAP32[$28971 >> 2] | 0;
 }
 $28992 = $$3$i$i3420 + 52 | 0;
 HEAP16[$$3$i$i3420 >> 1] = 564;
 HEAP16[$$3$i$i3420 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3420 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3420 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3420 + 8 >> 2] = 1128;
 HEAP32[$$3$i$i3420 + 12 >> 2] = 18048;
 HEAP32[$$3$i$i3420 + 16 >> 2] = $28992;
 HEAP32[$$3$i$i3420 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3420 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3420 + 48 >> 0] = 0;
 HEAP32[$2145 >> 2] = $$3$i$i3420;
 _memcpy($28992 | 0, 2654714, 1128) | 0;
 _memcpy($$3$i$i3420 + 1180 | 0, 2655842, 1128) | 0;
 _memcpy($$3$i$i3420 + 2308 | 0, 2656970, 1128) | 0;
 _memcpy($$3$i$i3420 + 3436 | 0, 2658098, 1128) | 0;
 _memcpy($$3$i$i3420 + 4564 | 0, 2659226, 1128) | 0;
 _memcpy($$3$i$i3420 + 5692 | 0, 2660354, 1128) | 0;
 _memcpy($$3$i$i3420 + 6820 | 0, 2661482, 1128) | 0;
 _memcpy($$3$i$i3420 + 7948 | 0, 2662610, 1128) | 0;
 _memcpy($$3$i$i3420 + 9076 | 0, 2663738, 1128) | 0;
 _memcpy($$3$i$i3420 + 10204 | 0, 2664866, 1128) | 0;
 _memcpy($$3$i$i3420 + 11332 | 0, 2665994, 1128) | 0;
 _memcpy($$3$i$i3420 + 12460 | 0, 2667122, 1128) | 0;
 _memcpy($$3$i$i3420 + 13588 | 0, 2668250, 1128) | 0;
 _memcpy($$3$i$i3420 + 14716 | 0, 2669378, 1128) | 0;
 _memcpy($$3$i$i3420 + 15844 | 0, 2670506, 1128) | 0;
 _memcpy($$3$i$i3420 + 16972 | 0, 2671634, 1128) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2145);
 if ($$3$i$i3420 | 0) {
  $29018 = $$3$i$i3420 + 5 | 0;
  $29020 = (HEAP8[$29018 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$29018 >> 0] = $29020;
  if (!($29020 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3420);
  HEAP32[$2145 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 991;
 HEAP16[$7944 >> 1] = 176;
 HEAP16[$7945 >> 1] = 994;
 HEAP16[$7946 >> 1] = 191;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 180) label = 4252; else {
  $29024 = HEAP32[915090] | 0;
  if (($29024 | 0) == (HEAP32[915088] | 0)) label = 4252; else {
   $$lcssa$i$i3407 = 3660360;
   $$lcssa8$i$i3406 = $29024;
   label = 4253;
  }
 }
 do if ((label | 0) == 4252) {
  if ((HEAP32[915097] | 0) >>> 0 >= 180) {
   $29031 = HEAP32[915096] | 0;
   if (($29031 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3407 = 3660384;
    $$lcssa8$i$i3406 = $29031;
    label = 4253;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 180) {
   $29036 = HEAP32[915102] | 0;
   if (($29036 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3407 = 3660408;
    $$lcssa8$i$i3406 = $29036;
    label = 4253;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 180) {
   $29041 = HEAP32[915108] | 0;
   if (($29041 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3407 = 3660432;
    $$lcssa8$i$i3406 = $29041;
    label = 4253;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 180) {
   $29046 = HEAP32[915114] | 0;
   if (($29046 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3407 = 3660456;
    $$lcssa8$i$i3406 = $29046;
    label = 4253;
    break;
   }
  }
  $$3$i$i3408 = __Znwj(180) | 0;
 } while (0);
 if ((label | 0) == 4253) {
  $29029 = $$lcssa8$i$i3406 + -4 | 0;
  HEAP32[$$lcssa$i$i3407 >> 2] = $29029;
  $$3$i$i3408 = HEAP32[$29029 >> 2] | 0;
 }
 $29050 = $$3$i$i3408 + 52 | 0;
 HEAP16[$$3$i$i3408 >> 1] = 4;
 HEAP16[$$3$i$i3408 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3408 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3408 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3408 + 8 >> 2] = 8;
 HEAP32[$$3$i$i3408 + 12 >> 2] = 128;
 HEAP32[$$3$i$i3408 + 16 >> 2] = $29050;
 HEAP32[$$3$i$i3408 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3408 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3408 + 48 >> 0] = 0;
 HEAP32[$2146 >> 2] = $$3$i$i3408;
 $29060 = $29050;
 $29061 = $29060;
 HEAP8[$29061 >> 0] = -419701030;
 HEAP8[$29061 + 1 >> 0] = -419701030 >> 8;
 HEAP8[$29061 + 2 >> 0] = -419701030 >> 16;
 HEAP8[$29061 + 3 >> 0] = -419701030 >> 24;
 $29063 = $29060 + 4 | 0;
 HEAP8[$29063 >> 0] = -419698982;
 HEAP8[$29063 + 1 >> 0] = -419698982 >> 8;
 HEAP8[$29063 + 2 >> 0] = -419698982 >> 16;
 HEAP8[$29063 + 3 >> 0] = -419698982 >> 24;
 $29065 = $$3$i$i3408 + 60 | 0;
 $29066 = $29065;
 HEAP8[$29066 >> 0] = -419764485;
 HEAP8[$29066 + 1 >> 0] = -419764485 >> 8;
 HEAP8[$29066 + 2 >> 0] = -419764485 >> 16;
 HEAP8[$29066 + 3 >> 0] = -419764485 >> 24;
 $29068 = $29065 + 4 | 0;
 HEAP8[$29068 >> 0] = -553982213;
 HEAP8[$29068 + 1 >> 0] = -553982213 >> 8;
 HEAP8[$29068 + 2 >> 0] = -553982213 >> 16;
 HEAP8[$29068 + 3 >> 0] = -553982213 >> 24;
 $29070 = $$3$i$i3408 + 68 | 0;
 $29071 = $29070;
 HEAP8[$29071 >> 0] = -417601797;
 HEAP8[$29071 + 1 >> 0] = -417601797 >> 8;
 HEAP8[$29071 + 2 >> 0] = -417601797 >> 16;
 HEAP8[$29071 + 3 >> 0] = -417601797 >> 24;
 $29073 = $29070 + 4 | 0;
 HEAP8[$29073 >> 0] = -417601797;
 HEAP8[$29073 + 1 >> 0] = -417601797 >> 8;
 HEAP8[$29073 + 2 >> 0] = -417601797 >> 16;
 HEAP8[$29073 + 3 >> 0] = -417601797 >> 24;
 $29075 = $$3$i$i3408 + 76 | 0;
 $29076 = $29075;
 HEAP8[$29076 >> 0] = -417601765;
 HEAP8[$29076 + 1 >> 0] = -417601765 >> 8;
 HEAP8[$29076 + 2 >> 0] = -417601765 >> 16;
 HEAP8[$29076 + 3 >> 0] = -417601765 >> 24;
 $29078 = $29075 + 4 | 0;
 HEAP8[$29078 >> 0] = -417601765;
 HEAP8[$29078 + 1 >> 0] = -417601765 >> 8;
 HEAP8[$29078 + 2 >> 0] = -417601765 >> 16;
 HEAP8[$29078 + 3 >> 0] = -417601765 >> 24;
 $29080 = $$3$i$i3408 + 84 | 0;
 $29081 = $29080;
 HEAP8[$29081 >> 0] = -281221349;
 HEAP8[$29081 + 1 >> 0] = -281221349 >> 8;
 HEAP8[$29081 + 2 >> 0] = -281221349 >> 16;
 HEAP8[$29081 + 3 >> 0] = -281221349 >> 24;
 $29083 = $29080 + 4 | 0;
 HEAP8[$29083 >> 0] = -281221348;
 HEAP8[$29083 + 1 >> 0] = -281221348 >> 8;
 HEAP8[$29083 + 2 >> 0] = -281221348 >> 16;
 HEAP8[$29083 + 3 >> 0] = -281221348 >> 24;
 $29085 = $$3$i$i3408 + 92 | 0;
 $29086 = $29085;
 HEAP8[$29086 >> 0] = -415436996;
 HEAP8[$29086 + 1 >> 0] = -415436996 >> 8;
 HEAP8[$29086 + 2 >> 0] = -415436996 >> 16;
 HEAP8[$29086 + 3 >> 0] = -415436996 >> 24;
 $29088 = $29085 + 4 | 0;
 HEAP8[$29088 >> 0] = -415502532;
 HEAP8[$29088 + 1 >> 0] = -415502532 >> 8;
 HEAP8[$29088 + 2 >> 0] = -415502532 >> 16;
 HEAP8[$29088 + 3 >> 0] = -415502532 >> 24;
 $29090 = $$3$i$i3408 + 100 | 0;
 $29091 = $29090;
 HEAP8[$29091 >> 0] = -279122116;
 HEAP8[$29091 + 1 >> 0] = -279122116 >> 8;
 HEAP8[$29091 + 2 >> 0] = -279122116 >> 16;
 HEAP8[$29091 + 3 >> 0] = -279122116 >> 24;
 $29093 = $29090 + 4 | 0;
 HEAP8[$29093 >> 0] = -279056580;
 HEAP8[$29093 + 1 >> 0] = -279056580 >> 8;
 HEAP8[$29093 + 2 >> 0] = -279056580 >> 16;
 HEAP8[$29093 + 3 >> 0] = -279056580 >> 24;
 $29095 = $$3$i$i3408 + 108 | 0;
 $29096 = $29095;
 HEAP8[$29096 >> 0] = -279122083;
 HEAP8[$29096 + 1 >> 0] = -279122083 >> 8;
 HEAP8[$29096 + 2 >> 0] = -279122083 >> 16;
 HEAP8[$29096 + 3 >> 0] = -279122083 >> 24;
 $29098 = $29095 + 4 | 0;
 HEAP8[$29098 >> 0] = -279122083;
 HEAP8[$29098 + 1 >> 0] = -279122083 >> 8;
 HEAP8[$29098 + 2 >> 0] = -279122083 >> 16;
 HEAP8[$29098 + 3 >> 0] = -279122083 >> 24;
 $29100 = $$3$i$i3408 + 116 | 0;
 $29101 = $29100;
 HEAP8[$29101 >> 0] = -142741667;
 HEAP8[$29101 + 1 >> 0] = -142741667 >> 8;
 HEAP8[$29101 + 2 >> 0] = -142741667 >> 16;
 HEAP8[$29101 + 3 >> 0] = -142741667 >> 24;
 $29103 = $29100 + 4 | 0;
 HEAP8[$29103 >> 0] = -142741667;
 HEAP8[$29103 + 1 >> 0] = -142741667 >> 8;
 HEAP8[$29103 + 2 >> 0] = -142741667 >> 16;
 HEAP8[$29103 + 3 >> 0] = -142741667 >> 24;
 $29105 = $$3$i$i3408 + 124 | 0;
 $29106 = $29105;
 HEAP8[$29106 >> 0] = -279054467;
 HEAP8[$29106 + 1 >> 0] = -279054467 >> 8;
 HEAP8[$29106 + 2 >> 0] = -279054467 >> 16;
 HEAP8[$29106 + 3 >> 0] = -279054467 >> 24;
 $29108 = $29105 + 4 | 0;
 HEAP8[$29108 >> 0] = -279054467;
 HEAP8[$29108 + 1 >> 0] = -279054467 >> 8;
 HEAP8[$29108 + 2 >> 0] = -279054467 >> 16;
 HEAP8[$29108 + 3 >> 0] = -279054467 >> 24;
 $29110 = $$3$i$i3408 + 132 | 0;
 $29111 = $29110;
 HEAP8[$29111 >> 0] = -140576899;
 HEAP8[$29111 + 1 >> 0] = -140576899 >> 8;
 HEAP8[$29111 + 2 >> 0] = -140576899 >> 16;
 HEAP8[$29111 + 3 >> 0] = -140576899 >> 24;
 $29113 = $29110 + 4 | 0;
 HEAP8[$29113 >> 0] = -140576899;
 HEAP8[$29113 + 1 >> 0] = -140576899 >> 8;
 HEAP8[$29113 + 2 >> 0] = -140576899 >> 16;
 HEAP8[$29113 + 3 >> 0] = -140576899 >> 24;
 $29115 = $$3$i$i3408 + 140 | 0;
 $29116 = $29115;
 HEAP8[$29116 >> 0] = -142739554;
 HEAP8[$29116 + 1 >> 0] = -142739554 >> 8;
 HEAP8[$29116 + 2 >> 0] = -142739554 >> 16;
 HEAP8[$29116 + 3 >> 0] = -142739554 >> 24;
 $29118 = $29115 + 4 | 0;
 HEAP8[$29118 >> 0] = -142739554;
 HEAP8[$29118 + 1 >> 0] = -142739554 >> 8;
 HEAP8[$29118 + 2 >> 0] = -142739554 >> 16;
 HEAP8[$29118 + 3 >> 0] = -142739554 >> 24;
 $29120 = $$3$i$i3408 + 148 | 0;
 $29121 = $29120;
 HEAP8[$29121 >> 0] = -4261986;
 HEAP8[$29121 + 1 >> 0] = -4261986 >> 8;
 HEAP8[$29121 + 2 >> 0] = -4261986 >> 16;
 HEAP8[$29121 + 3 >> 0] = -4261986 >> 24;
 $29123 = $29120 + 4 | 0;
 HEAP8[$29123 >> 0] = -4261986;
 HEAP8[$29123 + 1 >> 0] = -4261986 >> 8;
 HEAP8[$29123 + 2 >> 0] = -4261986 >> 16;
 HEAP8[$29123 + 3 >> 0] = -4261986 >> 24;
 $29125 = $$3$i$i3408 + 156 | 0;
 $29126 = $29125;
 HEAP8[$29126 >> 0] = -140574786;
 HEAP8[$29126 + 1 >> 0] = -140574786 >> 8;
 HEAP8[$29126 + 2 >> 0] = -140574786 >> 16;
 HEAP8[$29126 + 3 >> 0] = -140574786 >> 24;
 $29128 = $29125 + 4 | 0;
 HEAP8[$29128 >> 0] = -140574786;
 HEAP8[$29128 + 1 >> 0] = -140574786 >> 8;
 HEAP8[$29128 + 2 >> 0] = -140574786 >> 16;
 HEAP8[$29128 + 3 >> 0] = -140574786 >> 24;
 $29130 = $$3$i$i3408 + 164 | 0;
 $29131 = $29130;
 HEAP8[$29131 >> 0] = -2097218;
 HEAP8[$29131 + 1 >> 0] = -2097218 >> 8;
 HEAP8[$29131 + 2 >> 0] = -2097218 >> 16;
 HEAP8[$29131 + 3 >> 0] = -2097218 >> 24;
 $29133 = $29130 + 4 | 0;
 HEAP8[$29133 >> 0] = -2097218;
 HEAP8[$29133 + 1 >> 0] = -2097218 >> 8;
 HEAP8[$29133 + 2 >> 0] = -2097218 >> 16;
 HEAP8[$29133 + 3 >> 0] = -2097218 >> 24;
 $29135 = $$3$i$i3408 + 172 | 0;
 $29136 = $29135;
 HEAP8[$29136 >> 0] = -4259873;
 HEAP8[$29136 + 1 >> 0] = -4259873 >> 8;
 HEAP8[$29136 + 2 >> 0] = -4259873 >> 16;
 HEAP8[$29136 + 3 >> 0] = -4259873 >> 24;
 $29138 = $29135 + 4 | 0;
 HEAP8[$29138 >> 0] = -4259873;
 HEAP8[$29138 + 1 >> 0] = -4259873 >> 8;
 HEAP8[$29138 + 2 >> 0] = -4259873 >> 16;
 HEAP8[$29138 + 3 >> 0] = -4259873 >> 24;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2146);
 if ($$3$i$i3408 | 0) {
  $29140 = $$3$i$i3408 + 5 | 0;
  $29142 = (HEAP8[$29140 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$29140 >> 0] = $29142;
  if (!($29142 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3408);
  HEAP32[$2146 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7947 >> 1] = 172;
 HEAP16[$7948 >> 1] = 994;
 HEAP16[$7949 >> 1] = 175;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6324) label = 4268; else {
  $29146 = HEAP32[915090] | 0;
  if (($29146 | 0) == (HEAP32[915088] | 0)) label = 4268; else {
   $$lcssa$i$i3395 = 3660360;
   $$lcssa8$i$i3394 = $29146;
   label = 4269;
  }
 }
 do if ((label | 0) == 4268) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6324) {
   $29153 = HEAP32[915096] | 0;
   if (($29153 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3395 = 3660384;
    $$lcssa8$i$i3394 = $29153;
    label = 4269;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6324) {
   $29158 = HEAP32[915102] | 0;
   if (($29158 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3395 = 3660408;
    $$lcssa8$i$i3394 = $29158;
    label = 4269;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6324) {
   $29163 = HEAP32[915108] | 0;
   if (($29163 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3395 = 3660432;
    $$lcssa8$i$i3394 = $29163;
    label = 4269;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6324) {
   $29168 = HEAP32[915114] | 0;
   if (($29168 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3395 = 3660456;
    $$lcssa8$i$i3394 = $29168;
    label = 4269;
    break;
   }
  }
  $$3$i$i3396 = __Znwj(6324) | 0;
 } while (0);
 if ((label | 0) == 4269) {
  $29151 = $$lcssa8$i$i3394 + -4 | 0;
  HEAP32[$$lcssa$i$i3395 >> 2] = $29151;
  $$3$i$i3396 = HEAP32[$29151 >> 2] | 0;
 }
 $29172 = $$3$i$i3396 + 52 | 0;
 HEAP16[$$3$i$i3396 >> 1] = 784;
 HEAP16[$$3$i$i3396 + 2 >> 1] = 4;
 HEAP8[$$3$i$i3396 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3396 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3396 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i3396 + 12 >> 2] = 6272;
 HEAP32[$$3$i$i3396 + 16 >> 2] = $29172;
 HEAP32[$$3$i$i3396 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3396 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3396 + 48 >> 0] = 0;
 HEAP32[$2147 >> 2] = $$3$i$i3396;
 _memcpy($29172 | 0, 2672762, 1568) | 0;
 _memcpy($$3$i$i3396 + 1620 | 0, 2674330, 1568) | 0;
 _memcpy($$3$i$i3396 + 3188 | 0, 2675898, 1568) | 0;
 _memcpy($$3$i$i3396 + 4756 | 0, 2677466, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2147);
 if ($$3$i$i3396 | 0) {
  $29186 = $$3$i$i3396 + 5 | 0;
  $29188 = (HEAP8[$29186 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$29186 >> 0] = $29188;
  if (!($29188 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3396);
  HEAP32[$2147 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 222;
 HEAP16[$7950 >> 1] = 207;
 HEAP16[$7951 >> 1] = 768;
 HEAP16[$7952 >> 1] = 227;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 23068) label = 4284; else {
  $29192 = HEAP32[915090] | 0;
  if (($29192 | 0) == (HEAP32[915088] | 0)) label = 4284; else {
   $$lcssa$i$i3383 = 3660360;
   $$lcssa8$i$i3382 = $29192;
   label = 4285;
  }
 }
 do if ((label | 0) == 4284) {
  if ((HEAP32[915097] | 0) >>> 0 >= 23068) {
   $29199 = HEAP32[915096] | 0;
   if (($29199 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3383 = 3660384;
    $$lcssa8$i$i3382 = $29199;
    label = 4285;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 23068) {
   $29204 = HEAP32[915102] | 0;
   if (($29204 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3383 = 3660408;
    $$lcssa8$i$i3382 = $29204;
    label = 4285;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 23068) {
   $29209 = HEAP32[915108] | 0;
   if (($29209 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3383 = 3660432;
    $$lcssa8$i$i3382 = $29209;
    label = 4285;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 23068) {
   $29214 = HEAP32[915114] | 0;
   if (($29214 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3383 = 3660456;
    $$lcssa8$i$i3382 = $29214;
    label = 4285;
    break;
   }
  }
  $$3$i$i3384 = __Znwj(23068) | 0;
 } while (0);
 if ((label | 0) == 4285) {
  $29197 = $$lcssa8$i$i3382 + -4 | 0;
  HEAP32[$$lcssa$i$i3383 >> 2] = $29197;
  $$3$i$i3384 = HEAP32[$29197 >> 2] | 0;
 }
 $29218 = $$3$i$i3384 + 52 | 0;
 HEAP16[$$3$i$i3384 >> 1] = 548;
 HEAP16[$$3$i$i3384 + 2 >> 1] = 21;
 HEAP8[$$3$i$i3384 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3384 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3384 + 8 >> 2] = 1096;
 HEAP32[$$3$i$i3384 + 12 >> 2] = 23016;
 HEAP32[$$3$i$i3384 + 16 >> 2] = $29218;
 HEAP32[$$3$i$i3384 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3384 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3384 + 48 >> 0] = 0;
 HEAP32[$2148 >> 2] = $$3$i$i3384;
 _memcpy($29218 | 0, 2679034, 1096) | 0;
 _memcpy($$3$i$i3384 + 1148 | 0, 2680130, 1096) | 0;
 _memcpy($$3$i$i3384 + 2244 | 0, 2681226, 1096) | 0;
 _memcpy($$3$i$i3384 + 3340 | 0, 2682322, 1096) | 0;
 _memcpy($$3$i$i3384 + 4436 | 0, 2683418, 1096) | 0;
 _memcpy($$3$i$i3384 + 5532 | 0, 2684514, 1096) | 0;
 _memcpy($$3$i$i3384 + 6628 | 0, 2685610, 1096) | 0;
 _memcpy($$3$i$i3384 + 7724 | 0, 2686706, 1096) | 0;
 _memcpy($$3$i$i3384 + 8820 | 0, 2687802, 1096) | 0;
 _memcpy($$3$i$i3384 + 9916 | 0, 2688898, 1096) | 0;
 _memcpy($$3$i$i3384 + 11012 | 0, 2689994, 1096) | 0;
 _memcpy($$3$i$i3384 + 12108 | 0, 2691090, 1096) | 0;
 _memcpy($$3$i$i3384 + 13204 | 0, 2692186, 1096) | 0;
 _memcpy($$3$i$i3384 + 14300 | 0, 2693282, 1096) | 0;
 _memcpy($$3$i$i3384 + 15396 | 0, 2694378, 1096) | 0;
 _memcpy($$3$i$i3384 + 16492 | 0, 2695474, 1096) | 0;
 _memcpy($$3$i$i3384 + 17588 | 0, 2696570, 1096) | 0;
 _memcpy($$3$i$i3384 + 18684 | 0, 2697666, 1096) | 0;
 _memcpy($$3$i$i3384 + 19780 | 0, 2698762, 1096) | 0;
 _memcpy($$3$i$i3384 + 20876 | 0, 2699858, 1096) | 0;
 _memcpy($$3$i$i3384 + 21972 | 0, 2700954, 1096) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2148);
 if ($$3$i$i3384 | 0) {
  $29249 = $$3$i$i3384 + 5 | 0;
  $29251 = (HEAP8[$29249 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$29249 >> 0] = $29251;
  if (!($29251 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3384);
  HEAP32[$2148 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 225;
 HEAP16[$7953 >> 1] = 384;
 HEAP16[$7954 >> 1] = 530;
 HEAP16[$7955 >> 1] = 409;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 16068) label = 4300; else {
  $29255 = HEAP32[915090] | 0;
  if (($29255 | 0) == (HEAP32[915088] | 0)) label = 4300; else {
   $$lcssa$i$i3371 = 3660360;
   $$lcssa8$i$i3370 = $29255;
   label = 4301;
  }
 }
 do if ((label | 0) == 4300) {
  if ((HEAP32[915097] | 0) >>> 0 >= 16068) {
   $29262 = HEAP32[915096] | 0;
   if (($29262 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3371 = 3660384;
    $$lcssa8$i$i3370 = $29262;
    label = 4301;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 16068) {
   $29267 = HEAP32[915102] | 0;
   if (($29267 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3371 = 3660408;
    $$lcssa8$i$i3370 = $29267;
    label = 4301;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 16068) {
   $29272 = HEAP32[915108] | 0;
   if (($29272 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3371 = 3660432;
    $$lcssa8$i$i3370 = $29272;
    label = 4301;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 16068) {
   $29277 = HEAP32[915114] | 0;
   if (($29277 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3371 = 3660456;
    $$lcssa8$i$i3370 = $29277;
    label = 4301;
    break;
   }
  }
  $$3$i$i3372 = __Znwj(16068) | 0;
 } while (0);
 if ((label | 0) == 4301) {
  $29260 = $$lcssa8$i$i3370 + -4 | 0;
  HEAP32[$$lcssa$i$i3371 >> 2] = $29260;
  $$3$i$i3372 = HEAP32[$29260 >> 2] | 0;
 }
 $29281 = $$3$i$i3372 + 52 | 0;
 HEAP16[$$3$i$i3372 >> 1] = 308;
 HEAP16[$$3$i$i3372 + 2 >> 1] = 26;
 HEAP8[$$3$i$i3372 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3372 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3372 + 8 >> 2] = 616;
 HEAP32[$$3$i$i3372 + 12 >> 2] = 16016;
 HEAP32[$$3$i$i3372 + 16 >> 2] = $29281;
 HEAP32[$$3$i$i3372 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3372 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3372 + 48 >> 0] = 0;
 HEAP32[$2149 >> 2] = $$3$i$i3372;
 _memcpy($29281 | 0, 2702050, 616) | 0;
 _memcpy($$3$i$i3372 + 668 | 0, 2702666, 616) | 0;
 _memcpy($$3$i$i3372 + 1284 | 0, 2703282, 616) | 0;
 _memcpy($$3$i$i3372 + 1900 | 0, 2703898, 616) | 0;
 _memcpy($$3$i$i3372 + 2516 | 0, 2704514, 616) | 0;
 _memcpy($$3$i$i3372 + 3132 | 0, 2705130, 616) | 0;
 _memcpy($$3$i$i3372 + 3748 | 0, 2705746, 616) | 0;
 _memcpy($$3$i$i3372 + 4364 | 0, 2706362, 616) | 0;
 _memcpy($$3$i$i3372 + 4980 | 0, 2706978, 616) | 0;
 _memcpy($$3$i$i3372 + 5596 | 0, 2707594, 616) | 0;
 _memcpy($$3$i$i3372 + 6212 | 0, 2708210, 616) | 0;
 _memcpy($$3$i$i3372 + 6828 | 0, 2708826, 616) | 0;
 _memcpy($$3$i$i3372 + 7444 | 0, 2709442, 616) | 0;
 _memcpy($$3$i$i3372 + 8060 | 0, 2710058, 616) | 0;
 _memcpy($$3$i$i3372 + 8676 | 0, 2710674, 616) | 0;
 _memcpy($$3$i$i3372 + 9292 | 0, 2711290, 616) | 0;
 _memcpy($$3$i$i3372 + 9908 | 0, 2711906, 616) | 0;
 _memcpy($$3$i$i3372 + 10524 | 0, 2712522, 616) | 0;
 _memcpy($$3$i$i3372 + 11140 | 0, 2713138, 616) | 0;
 _memcpy($$3$i$i3372 + 11756 | 0, 2713754, 616) | 0;
 _memcpy($$3$i$i3372 + 12372 | 0, 2714370, 616) | 0;
 _memcpy($$3$i$i3372 + 12988 | 0, 2714986, 616) | 0;
 _memcpy($$3$i$i3372 + 13604 | 0, 2715602, 616) | 0;
 _memcpy($$3$i$i3372 + 14220 | 0, 2716218, 616) | 0;
 _memcpy($$3$i$i3372 + 14836 | 0, 2716834, 616) | 0;
 _memcpy($$3$i$i3372 + 15452 | 0, 2717450, 616) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2149);
 if ($$3$i$i3372 | 0) {
  $29317 = $$3$i$i3372 + 5 | 0;
  $29319 = (HEAP8[$29317 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$29317 >> 0] = $29319;
  if (!($29319 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3372);
  HEAP32[$2149 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 225;
 HEAP16[$7956 >> 1] = 410;
 HEAP16[$7957 >> 1] = 530;
 HEAP16[$7958 >> 1] = 415;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 3748) label = 4316; else {
  $29323 = HEAP32[915090] | 0;
  if (($29323 | 0) == (HEAP32[915088] | 0)) label = 4316; else {
   $$lcssa$i$i3359 = 3660360;
   $$lcssa8$i$i3358 = $29323;
   label = 4317;
  }
 }
 do if ((label | 0) == 4316) {
  if ((HEAP32[915097] | 0) >>> 0 >= 3748) {
   $29330 = HEAP32[915096] | 0;
   if (($29330 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3359 = 3660384;
    $$lcssa8$i$i3358 = $29330;
    label = 4317;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 3748) {
   $29335 = HEAP32[915102] | 0;
   if (($29335 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3359 = 3660408;
    $$lcssa8$i$i3358 = $29335;
    label = 4317;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 3748) {
   $29340 = HEAP32[915108] | 0;
   if (($29340 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3359 = 3660432;
    $$lcssa8$i$i3358 = $29340;
    label = 4317;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 3748) {
   $29345 = HEAP32[915114] | 0;
   if (($29345 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3359 = 3660456;
    $$lcssa8$i$i3358 = $29345;
    label = 4317;
    break;
   }
  }
  $$3$i$i3360 = __Znwj(3748) | 0;
 } while (0);
 if ((label | 0) == 4317) {
  $29328 = $$lcssa8$i$i3358 + -4 | 0;
  HEAP32[$$lcssa$i$i3359 >> 2] = $29328;
  $$3$i$i3360 = HEAP32[$29328 >> 2] | 0;
 }
 $29349 = $$3$i$i3360 + 52 | 0;
 HEAP16[$$3$i$i3360 >> 1] = 308;
 HEAP16[$$3$i$i3360 + 2 >> 1] = 6;
 HEAP8[$$3$i$i3360 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3360 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3360 + 8 >> 2] = 616;
 HEAP32[$$3$i$i3360 + 12 >> 2] = 3696;
 HEAP32[$$3$i$i3360 + 16 >> 2] = $29349;
 HEAP32[$$3$i$i3360 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3360 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3360 + 48 >> 0] = 0;
 HEAP32[$2150 >> 2] = $$3$i$i3360;
 _memcpy($29349 | 0, 2718066, 616) | 0;
 _memcpy($$3$i$i3360 + 668 | 0, 2718682, 616) | 0;
 _memcpy($$3$i$i3360 + 1284 | 0, 2719298, 616) | 0;
 _memcpy($$3$i$i3360 + 1900 | 0, 2719914, 616) | 0;
 _memcpy($$3$i$i3360 + 2516 | 0, 2720530, 616) | 0;
 _memcpy($$3$i$i3360 + 3132 | 0, 2721146, 616) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2150);
 if ($$3$i$i3360 | 0) {
  $29365 = $$3$i$i3360 + 5 | 0;
  $29367 = (HEAP8[$29365 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$29365 >> 0] = $29367;
  if (!($29367 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3360);
  HEAP32[$2150 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 443;
 HEAP16[$7959 >> 1] = 228;
 HEAP16[$7960 >> 1] = 765;
 HEAP16[$7961 >> 1] = 253;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 16900) label = 4332; else {
  $29371 = HEAP32[915090] | 0;
  if (($29371 | 0) == (HEAP32[915088] | 0)) label = 4332; else {
   $$lcssa$i$i3347 = 3660360;
   $$lcssa8$i$i3346 = $29371;
   label = 4333;
  }
 }
 do if ((label | 0) == 4332) {
  if ((HEAP32[915097] | 0) >>> 0 >= 16900) {
   $29378 = HEAP32[915096] | 0;
   if (($29378 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3347 = 3660384;
    $$lcssa8$i$i3346 = $29378;
    label = 4333;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 16900) {
   $29383 = HEAP32[915102] | 0;
   if (($29383 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3347 = 3660408;
    $$lcssa8$i$i3346 = $29383;
    label = 4333;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 16900) {
   $29388 = HEAP32[915108] | 0;
   if (($29388 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3347 = 3660432;
    $$lcssa8$i$i3346 = $29388;
    label = 4333;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 16900) {
   $29393 = HEAP32[915114] | 0;
   if (($29393 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3347 = 3660456;
    $$lcssa8$i$i3346 = $29393;
    label = 4333;
    break;
   }
  }
  $$3$i$i3348 = __Znwj(16900) | 0;
 } while (0);
 if ((label | 0) == 4333) {
  $29376 = $$lcssa8$i$i3346 + -4 | 0;
  HEAP32[$$lcssa$i$i3347 >> 2] = $29376;
  $$3$i$i3348 = HEAP32[$29376 >> 2] | 0;
 }
 $29397 = $$3$i$i3348 + 52 | 0;
 HEAP16[$$3$i$i3348 >> 1] = 324;
 HEAP16[$$3$i$i3348 + 2 >> 1] = 26;
 HEAP8[$$3$i$i3348 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3348 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3348 + 8 >> 2] = 648;
 HEAP32[$$3$i$i3348 + 12 >> 2] = 16848;
 HEAP32[$$3$i$i3348 + 16 >> 2] = $29397;
 HEAP32[$$3$i$i3348 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3348 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3348 + 48 >> 0] = 0;
 HEAP32[$2151 >> 2] = $$3$i$i3348;
 _memcpy($29397 | 0, 2721762, 648) | 0;
 _memcpy($$3$i$i3348 + 700 | 0, 2722410, 648) | 0;
 _memcpy($$3$i$i3348 + 1348 | 0, 2723058, 648) | 0;
 _memcpy($$3$i$i3348 + 1996 | 0, 2723706, 648) | 0;
 _memcpy($$3$i$i3348 + 2644 | 0, 2724354, 648) | 0;
 _memcpy($$3$i$i3348 + 3292 | 0, 2725002, 648) | 0;
 _memcpy($$3$i$i3348 + 3940 | 0, 2725650, 648) | 0;
 _memcpy($$3$i$i3348 + 4588 | 0, 2726298, 648) | 0;
 _memcpy($$3$i$i3348 + 5236 | 0, 2726946, 648) | 0;
 _memcpy($$3$i$i3348 + 5884 | 0, 2727594, 648) | 0;
 _memcpy($$3$i$i3348 + 6532 | 0, 2728242, 648) | 0;
 _memcpy($$3$i$i3348 + 7180 | 0, 2728890, 648) | 0;
 _memcpy($$3$i$i3348 + 7828 | 0, 2729538, 648) | 0;
 _memcpy($$3$i$i3348 + 8476 | 0, 2730186, 648) | 0;
 _memcpy($$3$i$i3348 + 9124 | 0, 2730834, 648) | 0;
 _memcpy($$3$i$i3348 + 9772 | 0, 2731482, 648) | 0;
 _memcpy($$3$i$i3348 + 10420 | 0, 2732130, 648) | 0;
 _memcpy($$3$i$i3348 + 11068 | 0, 2732778, 648) | 0;
 _memcpy($$3$i$i3348 + 11716 | 0, 2733426, 648) | 0;
 _memcpy($$3$i$i3348 + 12364 | 0, 2734074, 648) | 0;
 _memcpy($$3$i$i3348 + 13012 | 0, 2734722, 648) | 0;
 _memcpy($$3$i$i3348 + 13660 | 0, 2735370, 648) | 0;
 _memcpy($$3$i$i3348 + 14308 | 0, 2736018, 648) | 0;
 _memcpy($$3$i$i3348 + 14956 | 0, 2736666, 648) | 0;
 _memcpy($$3$i$i3348 + 15604 | 0, 2737314, 648) | 0;
 _memcpy($$3$i$i3348 + 16252 | 0, 2737962, 648) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2151);
 if ($$3$i$i3348 | 0) {
  $29433 = $$3$i$i3348 + 5 | 0;
  $29435 = (HEAP8[$29433 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$29433 >> 0] = $29435;
  if (!($29435 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3348);
  HEAP32[$2151 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 443;
 HEAP16[$7962 >> 1] = 254;
 HEAP16[$7963 >> 1] = 765;
 HEAP16[$7964 >> 1] = 279;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 16900) label = 4348; else {
  $29439 = HEAP32[915090] | 0;
  if (($29439 | 0) == (HEAP32[915088] | 0)) label = 4348; else {
   $$lcssa$i$i3335 = 3660360;
   $$lcssa8$i$i3334 = $29439;
   label = 4349;
  }
 }
 do if ((label | 0) == 4348) {
  if ((HEAP32[915097] | 0) >>> 0 >= 16900) {
   $29446 = HEAP32[915096] | 0;
   if (($29446 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3335 = 3660384;
    $$lcssa8$i$i3334 = $29446;
    label = 4349;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 16900) {
   $29451 = HEAP32[915102] | 0;
   if (($29451 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3335 = 3660408;
    $$lcssa8$i$i3334 = $29451;
    label = 4349;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 16900) {
   $29456 = HEAP32[915108] | 0;
   if (($29456 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3335 = 3660432;
    $$lcssa8$i$i3334 = $29456;
    label = 4349;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 16900) {
   $29461 = HEAP32[915114] | 0;
   if (($29461 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3335 = 3660456;
    $$lcssa8$i$i3334 = $29461;
    label = 4349;
    break;
   }
  }
  $$3$i$i3336 = __Znwj(16900) | 0;
 } while (0);
 if ((label | 0) == 4349) {
  $29444 = $$lcssa8$i$i3334 + -4 | 0;
  HEAP32[$$lcssa$i$i3335 >> 2] = $29444;
  $$3$i$i3336 = HEAP32[$29444 >> 2] | 0;
 }
 $29465 = $$3$i$i3336 + 52 | 0;
 HEAP16[$$3$i$i3336 >> 1] = 324;
 HEAP16[$$3$i$i3336 + 2 >> 1] = 26;
 HEAP8[$$3$i$i3336 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3336 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3336 + 8 >> 2] = 648;
 HEAP32[$$3$i$i3336 + 12 >> 2] = 16848;
 HEAP32[$$3$i$i3336 + 16 >> 2] = $29465;
 HEAP32[$$3$i$i3336 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3336 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3336 + 48 >> 0] = 0;
 HEAP32[$2152 >> 2] = $$3$i$i3336;
 _memcpy($29465 | 0, 2738610, 648) | 0;
 _memcpy($$3$i$i3336 + 700 | 0, 2739258, 648) | 0;
 _memcpy($$3$i$i3336 + 1348 | 0, 2739906, 648) | 0;
 _memcpy($$3$i$i3336 + 1996 | 0, 2740554, 648) | 0;
 _memcpy($$3$i$i3336 + 2644 | 0, 2741202, 648) | 0;
 _memcpy($$3$i$i3336 + 3292 | 0, 2741850, 648) | 0;
 _memcpy($$3$i$i3336 + 3940 | 0, 2742498, 648) | 0;
 _memcpy($$3$i$i3336 + 4588 | 0, 2743146, 648) | 0;
 _memcpy($$3$i$i3336 + 5236 | 0, 2743794, 648) | 0;
 _memcpy($$3$i$i3336 + 5884 | 0, 2744442, 648) | 0;
 _memcpy($$3$i$i3336 + 6532 | 0, 2745090, 648) | 0;
 _memcpy($$3$i$i3336 + 7180 | 0, 2745738, 648) | 0;
 _memcpy($$3$i$i3336 + 7828 | 0, 2746386, 648) | 0;
 _memcpy($$3$i$i3336 + 8476 | 0, 2747034, 648) | 0;
 _memcpy($$3$i$i3336 + 9124 | 0, 2747682, 648) | 0;
 _memcpy($$3$i$i3336 + 9772 | 0, 2748330, 648) | 0;
 _memcpy($$3$i$i3336 + 10420 | 0, 2748978, 648) | 0;
 _memcpy($$3$i$i3336 + 11068 | 0, 2749626, 648) | 0;
 _memcpy($$3$i$i3336 + 11716 | 0, 2750274, 648) | 0;
 _memcpy($$3$i$i3336 + 12364 | 0, 2750922, 648) | 0;
 _memcpy($$3$i$i3336 + 13012 | 0, 2751570, 648) | 0;
 _memcpy($$3$i$i3336 + 13660 | 0, 2752218, 648) | 0;
 _memcpy($$3$i$i3336 + 14308 | 0, 2752866, 648) | 0;
 _memcpy($$3$i$i3336 + 14956 | 0, 2753514, 648) | 0;
 _memcpy($$3$i$i3336 + 15604 | 0, 2754162, 648) | 0;
 _memcpy($$3$i$i3336 + 16252 | 0, 2754810, 648) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2152);
 if ($$3$i$i3336 | 0) {
  $29501 = $$3$i$i3336 + 5 | 0;
  $29503 = (HEAP8[$29501 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$29501 >> 0] = $29503;
  if (!($29503 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3336);
  HEAP32[$2152 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 443;
 HEAP16[$7965 >> 1] = 280;
 HEAP16[$7966 >> 1] = 765;
 HEAP16[$7967 >> 1] = 328;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31804) label = 4364; else {
  $29507 = HEAP32[915090] | 0;
  if (($29507 | 0) == (HEAP32[915088] | 0)) label = 4364; else {
   $$lcssa$i$i3323 = 3660360;
   $$lcssa8$i$i3322 = $29507;
   label = 4365;
  }
 }
 do if ((label | 0) == 4364) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31804) {
   $29514 = HEAP32[915096] | 0;
   if (($29514 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3323 = 3660384;
    $$lcssa8$i$i3322 = $29514;
    label = 4365;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31804) {
   $29519 = HEAP32[915102] | 0;
   if (($29519 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3323 = 3660408;
    $$lcssa8$i$i3322 = $29519;
    label = 4365;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31804) {
   $29524 = HEAP32[915108] | 0;
   if (($29524 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3323 = 3660432;
    $$lcssa8$i$i3322 = $29524;
    label = 4365;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31804) {
   $29529 = HEAP32[915114] | 0;
   if (($29529 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3323 = 3660456;
    $$lcssa8$i$i3322 = $29529;
    label = 4365;
    break;
   }
  }
  $$3$i$i3324 = __Znwj(31804) | 0;
 } while (0);
 if ((label | 0) == 4365) {
  $29512 = $$lcssa8$i$i3322 + -4 | 0;
  HEAP32[$$lcssa$i$i3323 >> 2] = $29512;
  $$3$i$i3324 = HEAP32[$29512 >> 2] | 0;
 }
 $29533 = $$3$i$i3324 + 52 | 0;
 HEAP16[$$3$i$i3324 >> 1] = 324;
 HEAP16[$$3$i$i3324 + 2 >> 1] = 49;
 HEAP8[$$3$i$i3324 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3324 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3324 + 8 >> 2] = 648;
 HEAP32[$$3$i$i3324 + 12 >> 2] = 31752;
 HEAP32[$$3$i$i3324 + 16 >> 2] = $29533;
 HEAP32[$$3$i$i3324 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3324 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3324 + 48 >> 0] = 0;
 HEAP32[$2153 >> 2] = $$3$i$i3324;
 _memcpy($29533 | 0, 2755458, 648) | 0;
 _memcpy($$3$i$i3324 + 700 | 0, 2756106, 648) | 0;
 _memcpy($$3$i$i3324 + 1348 | 0, 2756754, 648) | 0;
 _memcpy($$3$i$i3324 + 1996 | 0, 2757402, 648) | 0;
 _memcpy($$3$i$i3324 + 2644 | 0, 2758050, 648) | 0;
 _memcpy($$3$i$i3324 + 3292 | 0, 2758698, 648) | 0;
 _memcpy($$3$i$i3324 + 3940 | 0, 2759346, 648) | 0;
 _memcpy($$3$i$i3324 + 4588 | 0, 2759994, 648) | 0;
 _memcpy($$3$i$i3324 + 5236 | 0, 2760642, 648) | 0;
 _memcpy($$3$i$i3324 + 5884 | 0, 2761290, 648) | 0;
 _memcpy($$3$i$i3324 + 6532 | 0, 2761938, 648) | 0;
 _memcpy($$3$i$i3324 + 7180 | 0, 2762586, 648) | 0;
 _memcpy($$3$i$i3324 + 7828 | 0, 2763234, 648) | 0;
 _memcpy($$3$i$i3324 + 8476 | 0, 2763882, 648) | 0;
 _memcpy($$3$i$i3324 + 9124 | 0, 2764530, 648) | 0;
 _memcpy($$3$i$i3324 + 9772 | 0, 2765178, 648) | 0;
 _memcpy($$3$i$i3324 + 10420 | 0, 2765826, 648) | 0;
 _memcpy($$3$i$i3324 + 11068 | 0, 2766474, 648) | 0;
 _memcpy($$3$i$i3324 + 11716 | 0, 2767122, 648) | 0;
 _memcpy($$3$i$i3324 + 12364 | 0, 2767770, 648) | 0;
 _memcpy($$3$i$i3324 + 13012 | 0, 2768418, 648) | 0;
 _memcpy($$3$i$i3324 + 13660 | 0, 2769066, 648) | 0;
 _memcpy($$3$i$i3324 + 14308 | 0, 2769714, 648) | 0;
 _memcpy($$3$i$i3324 + 14956 | 0, 2770362, 648) | 0;
 _memcpy($$3$i$i3324 + 15604 | 0, 2771010, 648) | 0;
 _memcpy($$3$i$i3324 + 16252 | 0, 2771658, 648) | 0;
 _memcpy($$3$i$i3324 + 16900 | 0, 2772306, 648) | 0;
 _memcpy($$3$i$i3324 + 17548 | 0, 2772954, 648) | 0;
 _memcpy($$3$i$i3324 + 18196 | 0, 2773602, 648) | 0;
 _memcpy($$3$i$i3324 + 18844 | 0, 2774250, 648) | 0;
 _memcpy($$3$i$i3324 + 19492 | 0, 2774898, 648) | 0;
 _memcpy($$3$i$i3324 + 20140 | 0, 2775546, 648) | 0;
 _memcpy($$3$i$i3324 + 20788 | 0, 2776194, 648) | 0;
 _memcpy($$3$i$i3324 + 21436 | 0, 2776842, 648) | 0;
 _memcpy($$3$i$i3324 + 22084 | 0, 2777490, 648) | 0;
 _memcpy($$3$i$i3324 + 22732 | 0, 2778138, 648) | 0;
 _memcpy($$3$i$i3324 + 23380 | 0, 2778786, 648) | 0;
 _memcpy($$3$i$i3324 + 24028 | 0, 2779434, 648) | 0;
 _memcpy($$3$i$i3324 + 24676 | 0, 2780082, 648) | 0;
 _memcpy($$3$i$i3324 + 25324 | 0, 2780730, 648) | 0;
 _memcpy($$3$i$i3324 + 25972 | 0, 2781378, 648) | 0;
 _memcpy($$3$i$i3324 + 26620 | 0, 2782026, 648) | 0;
 _memcpy($$3$i$i3324 + 27268 | 0, 2782674, 648) | 0;
 _memcpy($$3$i$i3324 + 27916 | 0, 2783322, 648) | 0;
 _memcpy($$3$i$i3324 + 28564 | 0, 2783970, 648) | 0;
 _memcpy($$3$i$i3324 + 29212 | 0, 2784618, 648) | 0;
 _memcpy($$3$i$i3324 + 29860 | 0, 2785266, 648) | 0;
 _memcpy($$3$i$i3324 + 30508 | 0, 2785914, 648) | 0;
 _memcpy($$3$i$i3324 + 31156 | 0, 2786562, 648) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2153);
 if ($$3$i$i3324 | 0) {
  $29592 = $$3$i$i3324 + 5 | 0;
  $29594 = (HEAP8[$29592 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$29592 >> 0] = $29594;
  if (!($29594 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3324);
  HEAP32[$2153 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 443;
 HEAP16[$7968 >> 1] = 329;
 HEAP16[$7969 >> 1] = 765;
 HEAP16[$7970 >> 1] = 377;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31804) label = 4380; else {
  $29598 = HEAP32[915090] | 0;
  if (($29598 | 0) == (HEAP32[915088] | 0)) label = 4380; else {
   $$lcssa$i$i3311 = 3660360;
   $$lcssa8$i$i3310 = $29598;
   label = 4381;
  }
 }
 do if ((label | 0) == 4380) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31804) {
   $29605 = HEAP32[915096] | 0;
   if (($29605 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3311 = 3660384;
    $$lcssa8$i$i3310 = $29605;
    label = 4381;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31804) {
   $29610 = HEAP32[915102] | 0;
   if (($29610 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3311 = 3660408;
    $$lcssa8$i$i3310 = $29610;
    label = 4381;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31804) {
   $29615 = HEAP32[915108] | 0;
   if (($29615 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3311 = 3660432;
    $$lcssa8$i$i3310 = $29615;
    label = 4381;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31804) {
   $29620 = HEAP32[915114] | 0;
   if (($29620 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3311 = 3660456;
    $$lcssa8$i$i3310 = $29620;
    label = 4381;
    break;
   }
  }
  $$3$i$i3312 = __Znwj(31804) | 0;
 } while (0);
 if ((label | 0) == 4381) {
  $29603 = $$lcssa8$i$i3310 + -4 | 0;
  HEAP32[$$lcssa$i$i3311 >> 2] = $29603;
  $$3$i$i3312 = HEAP32[$29603 >> 2] | 0;
 }
 $29624 = $$3$i$i3312 + 52 | 0;
 HEAP16[$$3$i$i3312 >> 1] = 324;
 HEAP16[$$3$i$i3312 + 2 >> 1] = 49;
 HEAP8[$$3$i$i3312 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3312 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3312 + 8 >> 2] = 648;
 HEAP32[$$3$i$i3312 + 12 >> 2] = 31752;
 HEAP32[$$3$i$i3312 + 16 >> 2] = $29624;
 HEAP32[$$3$i$i3312 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3312 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3312 + 48 >> 0] = 0;
 HEAP32[$2154 >> 2] = $$3$i$i3312;
 _memcpy($29624 | 0, 2787210, 648) | 0;
 _memcpy($$3$i$i3312 + 700 | 0, 2787858, 648) | 0;
 _memcpy($$3$i$i3312 + 1348 | 0, 2788506, 648) | 0;
 _memcpy($$3$i$i3312 + 1996 | 0, 2789154, 648) | 0;
 _memcpy($$3$i$i3312 + 2644 | 0, 2789802, 648) | 0;
 _memcpy($$3$i$i3312 + 3292 | 0, 2790450, 648) | 0;
 _memcpy($$3$i$i3312 + 3940 | 0, 2791098, 648) | 0;
 _memcpy($$3$i$i3312 + 4588 | 0, 2791746, 648) | 0;
 _memcpy($$3$i$i3312 + 5236 | 0, 2792394, 648) | 0;
 _memcpy($$3$i$i3312 + 5884 | 0, 2793042, 648) | 0;
 _memcpy($$3$i$i3312 + 6532 | 0, 2793690, 648) | 0;
 _memcpy($$3$i$i3312 + 7180 | 0, 2794338, 648) | 0;
 _memcpy($$3$i$i3312 + 7828 | 0, 2794986, 648) | 0;
 _memcpy($$3$i$i3312 + 8476 | 0, 2795634, 648) | 0;
 _memcpy($$3$i$i3312 + 9124 | 0, 2796282, 648) | 0;
 _memcpy($$3$i$i3312 + 9772 | 0, 2796930, 648) | 0;
 _memcpy($$3$i$i3312 + 10420 | 0, 2797578, 648) | 0;
 _memcpy($$3$i$i3312 + 11068 | 0, 2798226, 648) | 0;
 _memcpy($$3$i$i3312 + 11716 | 0, 2798874, 648) | 0;
 _memcpy($$3$i$i3312 + 12364 | 0, 2799522, 648) | 0;
 _memcpy($$3$i$i3312 + 13012 | 0, 2800170, 648) | 0;
 _memcpy($$3$i$i3312 + 13660 | 0, 2800818, 648) | 0;
 _memcpy($$3$i$i3312 + 14308 | 0, 2801466, 648) | 0;
 _memcpy($$3$i$i3312 + 14956 | 0, 2802114, 648) | 0;
 _memcpy($$3$i$i3312 + 15604 | 0, 2802762, 648) | 0;
 _memcpy($$3$i$i3312 + 16252 | 0, 2803410, 648) | 0;
 _memcpy($$3$i$i3312 + 16900 | 0, 2804058, 648) | 0;
 _memcpy($$3$i$i3312 + 17548 | 0, 2804706, 648) | 0;
 _memcpy($$3$i$i3312 + 18196 | 0, 2805354, 648) | 0;
 _memcpy($$3$i$i3312 + 18844 | 0, 2806002, 648) | 0;
 _memcpy($$3$i$i3312 + 19492 | 0, 2806650, 648) | 0;
 _memcpy($$3$i$i3312 + 20140 | 0, 2807298, 648) | 0;
 _memcpy($$3$i$i3312 + 20788 | 0, 2807946, 648) | 0;
 _memcpy($$3$i$i3312 + 21436 | 0, 2808594, 648) | 0;
 _memcpy($$3$i$i3312 + 22084 | 0, 2809242, 648) | 0;
 _memcpy($$3$i$i3312 + 22732 | 0, 2809890, 648) | 0;
 _memcpy($$3$i$i3312 + 23380 | 0, 2810538, 648) | 0;
 _memcpy($$3$i$i3312 + 24028 | 0, 2811186, 648) | 0;
 _memcpy($$3$i$i3312 + 24676 | 0, 2811834, 648) | 0;
 _memcpy($$3$i$i3312 + 25324 | 0, 2812482, 648) | 0;
 _memcpy($$3$i$i3312 + 25972 | 0, 2813130, 648) | 0;
 _memcpy($$3$i$i3312 + 26620 | 0, 2813778, 648) | 0;
 _memcpy($$3$i$i3312 + 27268 | 0, 2814426, 648) | 0;
 _memcpy($$3$i$i3312 + 27916 | 0, 2815074, 648) | 0;
 _memcpy($$3$i$i3312 + 28564 | 0, 2815722, 648) | 0;
 _memcpy($$3$i$i3312 + 29212 | 0, 2816370, 648) | 0;
 _memcpy($$3$i$i3312 + 29860 | 0, 2817018, 648) | 0;
 _memcpy($$3$i$i3312 + 30508 | 0, 2817666, 648) | 0;
 _memcpy($$3$i$i3312 + 31156 | 0, 2818314, 648) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2154);
 if ($$3$i$i3312 | 0) {
  $29683 = $$3$i$i3312 + 5 | 0;
  $29685 = (HEAP8[$29683 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$29683 >> 0] = $29685;
  if (!($29685 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3312);
  HEAP32[$2154 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 443;
 HEAP16[$7971 >> 1] = 378;
 HEAP16[$7972 >> 1] = 765;
 HEAP16[$7973 >> 1] = 380;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1996) label = 4396; else {
  $29689 = HEAP32[915090] | 0;
  if (($29689 | 0) == (HEAP32[915088] | 0)) label = 4396; else {
   $$lcssa$i$i3299 = 3660360;
   $$lcssa8$i$i3298 = $29689;
   label = 4397;
  }
 }
 do if ((label | 0) == 4396) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1996) {
   $29696 = HEAP32[915096] | 0;
   if (($29696 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3299 = 3660384;
    $$lcssa8$i$i3298 = $29696;
    label = 4397;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1996) {
   $29701 = HEAP32[915102] | 0;
   if (($29701 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3299 = 3660408;
    $$lcssa8$i$i3298 = $29701;
    label = 4397;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1996) {
   $29706 = HEAP32[915108] | 0;
   if (($29706 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3299 = 3660432;
    $$lcssa8$i$i3298 = $29706;
    label = 4397;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1996) {
   $29711 = HEAP32[915114] | 0;
   if (($29711 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3299 = 3660456;
    $$lcssa8$i$i3298 = $29711;
    label = 4397;
    break;
   }
  }
  $$3$i$i3300 = __Znwj(1996) | 0;
 } while (0);
 if ((label | 0) == 4397) {
  $29694 = $$lcssa8$i$i3298 + -4 | 0;
  HEAP32[$$lcssa$i$i3299 >> 2] = $29694;
  $$3$i$i3300 = HEAP32[$29694 >> 2] | 0;
 }
 $29715 = $$3$i$i3300 + 52 | 0;
 HEAP16[$$3$i$i3300 >> 1] = 324;
 HEAP16[$$3$i$i3300 + 2 >> 1] = 3;
 HEAP8[$$3$i$i3300 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3300 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3300 + 8 >> 2] = 648;
 HEAP32[$$3$i$i3300 + 12 >> 2] = 1944;
 HEAP32[$$3$i$i3300 + 16 >> 2] = $29715;
 HEAP32[$$3$i$i3300 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3300 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3300 + 48 >> 0] = 0;
 HEAP32[$2155 >> 2] = $$3$i$i3300;
 _memcpy($29715 | 0, 2818962, 648) | 0;
 _memcpy($$3$i$i3300 + 700 | 0, 2819610, 648) | 0;
 _memcpy($$3$i$i3300 + 1348 | 0, 2820258, 648) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2155);
 if ($$3$i$i3300 | 0) {
  $29728 = $$3$i$i3300 + 5 | 0;
  $29730 = (HEAP8[$29728 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$29728 >> 0] = $29730;
  if (!($29730 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3300);
  HEAP32[$2155 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 225;
 HEAP16[$7974 >> 1] = 228;
 HEAP16[$7975 >> 1] = 436;
 HEAP16[$7976 >> 1] = 302;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31852) label = 4412; else {
  $29734 = HEAP32[915090] | 0;
  if (($29734 | 0) == (HEAP32[915088] | 0)) label = 4412; else {
   $$lcssa$i$i3287 = 3660360;
   $$lcssa8$i$i3286 = $29734;
   label = 4413;
  }
 }
 do if ((label | 0) == 4412) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31852) {
   $29741 = HEAP32[915096] | 0;
   if (($29741 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3287 = 3660384;
    $$lcssa8$i$i3286 = $29741;
    label = 4413;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31852) {
   $29746 = HEAP32[915102] | 0;
   if (($29746 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3287 = 3660408;
    $$lcssa8$i$i3286 = $29746;
    label = 4413;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31852) {
   $29751 = HEAP32[915108] | 0;
   if (($29751 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3287 = 3660432;
    $$lcssa8$i$i3286 = $29751;
    label = 4413;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31852) {
   $29756 = HEAP32[915114] | 0;
   if (($29756 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3287 = 3660456;
    $$lcssa8$i$i3286 = $29756;
    label = 4413;
    break;
   }
  }
  $$3$i$i3288 = __Znwj(31852) | 0;
 } while (0);
 if ((label | 0) == 4413) {
  $29739 = $$lcssa8$i$i3286 + -4 | 0;
  HEAP32[$$lcssa$i$i3287 >> 2] = $29739;
  $$3$i$i3288 = HEAP32[$29739 >> 2] | 0;
 }
 $29760 = $$3$i$i3288 + 52 | 0;
 HEAP16[$$3$i$i3288 >> 1] = 212;
 HEAP16[$$3$i$i3288 + 2 >> 1] = 75;
 HEAP8[$$3$i$i3288 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3288 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3288 + 8 >> 2] = 424;
 HEAP32[$$3$i$i3288 + 12 >> 2] = 31800;
 HEAP32[$$3$i$i3288 + 16 >> 2] = $29760;
 HEAP32[$$3$i$i3288 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3288 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3288 + 48 >> 0] = 0;
 HEAP32[$2156 >> 2] = $$3$i$i3288;
 $dest$02$i3282 = $29760;
 $i$03$i3281 = 0;
 $src$01$i3283 = 2820906;
 while (1) {
  _memcpy($dest$02$i3282 | 0, $src$01$i3283 | 0, 424) | 0;
  $i$03$i3281 = $i$03$i3281 + 1 << 16 >> 16;
  if (($i$03$i3281 & 65535) >= 75) break; else {
   $dest$02$i3282 = $dest$02$i3282 + 424 | 0;
   $src$01$i3283 = $src$01$i3283 + 424 | 0;
  }
 }
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2156);
 if ($$3$i$i3288 | 0) {
  $29775 = $$3$i$i3288 + 5 | 0;
  $29777 = (HEAP8[$29775 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$29775 >> 0] = $29777;
  if (!($29777 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3288);
  HEAP32[$2156 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 225;
 HEAP16[$7977 >> 1] = 303;
 HEAP16[$7978 >> 1] = 436;
 HEAP16[$7979 >> 1] = 377;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31852) label = 4430; else {
  $29781 = HEAP32[915090] | 0;
  if (($29781 | 0) == (HEAP32[915088] | 0)) label = 4430; else {
   $$lcssa$i$i3275 = 3660360;
   $$lcssa8$i$i3274 = $29781;
   label = 4431;
  }
 }
 do if ((label | 0) == 4430) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31852) {
   $29788 = HEAP32[915096] | 0;
   if (($29788 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3275 = 3660384;
    $$lcssa8$i$i3274 = $29788;
    label = 4431;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31852) {
   $29793 = HEAP32[915102] | 0;
   if (($29793 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3275 = 3660408;
    $$lcssa8$i$i3274 = $29793;
    label = 4431;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31852) {
   $29798 = HEAP32[915108] | 0;
   if (($29798 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3275 = 3660432;
    $$lcssa8$i$i3274 = $29798;
    label = 4431;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31852) {
   $29803 = HEAP32[915114] | 0;
   if (($29803 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3275 = 3660456;
    $$lcssa8$i$i3274 = $29803;
    label = 4431;
    break;
   }
  }
  $$3$i$i3276 = __Znwj(31852) | 0;
 } while (0);
 if ((label | 0) == 4431) {
  $29786 = $$lcssa8$i$i3274 + -4 | 0;
  HEAP32[$$lcssa$i$i3275 >> 2] = $29786;
  $$3$i$i3276 = HEAP32[$29786 >> 2] | 0;
 }
 $29807 = $$3$i$i3276 + 52 | 0;
 HEAP16[$$3$i$i3276 >> 1] = 212;
 HEAP16[$$3$i$i3276 + 2 >> 1] = 75;
 HEAP8[$$3$i$i3276 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3276 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3276 + 8 >> 2] = 424;
 HEAP32[$$3$i$i3276 + 12 >> 2] = 31800;
 HEAP32[$$3$i$i3276 + 16 >> 2] = $29807;
 HEAP32[$$3$i$i3276 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3276 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3276 + 48 >> 0] = 0;
 HEAP32[$2157 >> 2] = $$3$i$i3276;
 $dest$02$i3270 = $29807;
 $i$03$i3269 = 0;
 $src$01$i3271 = 2852706;
 while (1) {
  _memcpy($dest$02$i3270 | 0, $src$01$i3271 | 0, 424) | 0;
  $i$03$i3269 = $i$03$i3269 + 1 << 16 >> 16;
  if (($i$03$i3269 & 65535) >= 75) break; else {
   $dest$02$i3270 = $dest$02$i3270 + 424 | 0;
   $src$01$i3271 = $src$01$i3271 + 424 | 0;
  }
 }
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2157);
 if ($$3$i$i3276 | 0) {
  $29822 = $$3$i$i3276 + 5 | 0;
  $29824 = (HEAP8[$29822 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$29822 >> 0] = $29824;
  if (!($29824 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3276);
  HEAP32[$2157 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 225;
 HEAP16[$7980 >> 1] = 378;
 HEAP16[$7981 >> 1] = 436;
 HEAP16[$7982 >> 1] = 380;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1324) label = 4448; else {
  $29828 = HEAP32[915090] | 0;
  if (($29828 | 0) == (HEAP32[915088] | 0)) label = 4448; else {
   $$lcssa$i$i3263 = 3660360;
   $$lcssa8$i$i3262 = $29828;
   label = 4449;
  }
 }
 do if ((label | 0) == 4448) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1324) {
   $29835 = HEAP32[915096] | 0;
   if (($29835 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3263 = 3660384;
    $$lcssa8$i$i3262 = $29835;
    label = 4449;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1324) {
   $29840 = HEAP32[915102] | 0;
   if (($29840 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3263 = 3660408;
    $$lcssa8$i$i3262 = $29840;
    label = 4449;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1324) {
   $29845 = HEAP32[915108] | 0;
   if (($29845 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3263 = 3660432;
    $$lcssa8$i$i3262 = $29845;
    label = 4449;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1324) {
   $29850 = HEAP32[915114] | 0;
   if (($29850 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3263 = 3660456;
    $$lcssa8$i$i3262 = $29850;
    label = 4449;
    break;
   }
  }
  $$3$i$i3264 = __Znwj(1324) | 0;
 } while (0);
 if ((label | 0) == 4449) {
  $29833 = $$lcssa8$i$i3262 + -4 | 0;
  HEAP32[$$lcssa$i$i3263 >> 2] = $29833;
  $$3$i$i3264 = HEAP32[$29833 >> 2] | 0;
 }
 $29854 = $$3$i$i3264 + 52 | 0;
 HEAP16[$$3$i$i3264 >> 1] = 212;
 HEAP16[$$3$i$i3264 + 2 >> 1] = 3;
 HEAP8[$$3$i$i3264 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3264 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3264 + 8 >> 2] = 424;
 HEAP32[$$3$i$i3264 + 12 >> 2] = 1272;
 HEAP32[$$3$i$i3264 + 16 >> 2] = $29854;
 HEAP32[$$3$i$i3264 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3264 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3264 + 48 >> 0] = 0;
 HEAP32[$2158 >> 2] = $$3$i$i3264;
 _memcpy($29854 | 0, 2884506, 424) | 0;
 _memcpy($$3$i$i3264 + 476 | 0, 2884930, 424) | 0;
 _memcpy($$3$i$i3264 + 900 | 0, 2885354, 424) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2158);
 if ($$3$i$i3264 | 0) {
  $29867 = $$3$i$i3264 + 5 | 0;
  $29869 = (HEAP8[$29867 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$29867 >> 0] = $29869;
  if (!($29869 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3264);
  HEAP32[$2158 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 769;
 HEAP16[$7983 >> 1] = 207;
 HEAP16[$7984 >> 1] = 994;
 HEAP16[$7985 >> 1] = 276;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31972) label = 4464; else {
  $29873 = HEAP32[915090] | 0;
  if (($29873 | 0) == (HEAP32[915088] | 0)) label = 4464; else {
   $$lcssa$i$i3251 = 3660360;
   $$lcssa8$i$i3250 = $29873;
   label = 4465;
  }
 }
 do if ((label | 0) == 4464) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31972) {
   $29880 = HEAP32[915096] | 0;
   if (($29880 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3251 = 3660384;
    $$lcssa8$i$i3250 = $29880;
    label = 4465;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31972) {
   $29885 = HEAP32[915102] | 0;
   if (($29885 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3251 = 3660408;
    $$lcssa8$i$i3250 = $29885;
    label = 4465;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31972) {
   $29890 = HEAP32[915108] | 0;
   if (($29890 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3251 = 3660432;
    $$lcssa8$i$i3250 = $29890;
    label = 4465;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31972) {
   $29895 = HEAP32[915114] | 0;
   if (($29895 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3251 = 3660456;
    $$lcssa8$i$i3250 = $29895;
    label = 4465;
    break;
   }
  }
  $$3$i$i3252 = __Znwj(31972) | 0;
 } while (0);
 if ((label | 0) == 4465) {
  $29878 = $$lcssa8$i$i3250 + -4 | 0;
  HEAP32[$$lcssa$i$i3251 >> 2] = $29878;
  $$3$i$i3252 = HEAP32[$29878 >> 2] | 0;
 }
 $29899 = $$3$i$i3252 + 52 | 0;
 HEAP16[$$3$i$i3252 >> 1] = 228;
 HEAP16[$$3$i$i3252 + 2 >> 1] = 70;
 HEAP8[$$3$i$i3252 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3252 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3252 + 8 >> 2] = 456;
 HEAP32[$$3$i$i3252 + 12 >> 2] = 31920;
 HEAP32[$$3$i$i3252 + 16 >> 2] = $29899;
 HEAP32[$$3$i$i3252 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3252 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3252 + 48 >> 0] = 0;
 HEAP32[$2159 >> 2] = $$3$i$i3252;
 _memcpy($29899 | 0, 2885778, 456) | 0;
 _memcpy($$3$i$i3252 + 508 | 0, 2886234, 456) | 0;
 _memcpy($$3$i$i3252 + 964 | 0, 2886690, 456) | 0;
 _memcpy($$3$i$i3252 + 1420 | 0, 2887146, 456) | 0;
 _memcpy($$3$i$i3252 + 1876 | 0, 2887602, 456) | 0;
 _memcpy($$3$i$i3252 + 2332 | 0, 2888058, 456) | 0;
 _memcpy($$3$i$i3252 + 2788 | 0, 2888514, 456) | 0;
 _memcpy($$3$i$i3252 + 3244 | 0, 2888970, 456) | 0;
 _memcpy($$3$i$i3252 + 3700 | 0, 2889426, 456) | 0;
 _memcpy($$3$i$i3252 + 4156 | 0, 2889882, 456) | 0;
 _memcpy($$3$i$i3252 + 4612 | 0, 2890338, 456) | 0;
 _memcpy($$3$i$i3252 + 5068 | 0, 2890794, 456) | 0;
 _memcpy($$3$i$i3252 + 5524 | 0, 2891250, 456) | 0;
 _memcpy($$3$i$i3252 + 5980 | 0, 2891706, 456) | 0;
 _memcpy($$3$i$i3252 + 6436 | 0, 2892162, 456) | 0;
 _memcpy($$3$i$i3252 + 6892 | 0, 2892618, 456) | 0;
 _memcpy($$3$i$i3252 + 7348 | 0, 2893074, 456) | 0;
 _memcpy($$3$i$i3252 + 7804 | 0, 2893530, 456) | 0;
 _memcpy($$3$i$i3252 + 8260 | 0, 2893986, 456) | 0;
 _memcpy($$3$i$i3252 + 8716 | 0, 2894442, 456) | 0;
 _memcpy($$3$i$i3252 + 9172 | 0, 2894898, 456) | 0;
 _memcpy($$3$i$i3252 + 9628 | 0, 2895354, 456) | 0;
 _memcpy($$3$i$i3252 + 10084 | 0, 2895810, 456) | 0;
 _memcpy($$3$i$i3252 + 10540 | 0, 2896266, 456) | 0;
 _memcpy($$3$i$i3252 + 10996 | 0, 2896722, 456) | 0;
 _memcpy($$3$i$i3252 + 11452 | 0, 2897178, 456) | 0;
 _memcpy($$3$i$i3252 + 11908 | 0, 2897634, 456) | 0;
 _memcpy($$3$i$i3252 + 12364 | 0, 2898090, 456) | 0;
 _memcpy($$3$i$i3252 + 12820 | 0, 2898546, 456) | 0;
 _memcpy($$3$i$i3252 + 13276 | 0, 2899002, 456) | 0;
 _memcpy($$3$i$i3252 + 13732 | 0, 2899458, 456) | 0;
 _memcpy($$3$i$i3252 + 14188 | 0, 2899914, 456) | 0;
 _memcpy($$3$i$i3252 + 14644 | 0, 2900370, 456) | 0;
 _memcpy($$3$i$i3252 + 15100 | 0, 2900826, 456) | 0;
 _memcpy($$3$i$i3252 + 15556 | 0, 2901282, 456) | 0;
 _memcpy($$3$i$i3252 + 16012 | 0, 2901738, 456) | 0;
 _memcpy($$3$i$i3252 + 16468 | 0, 2902194, 456) | 0;
 _memcpy($$3$i$i3252 + 16924 | 0, 2902650, 456) | 0;
 _memcpy($$3$i$i3252 + 17380 | 0, 2903106, 456) | 0;
 _memcpy($$3$i$i3252 + 17836 | 0, 2903562, 456) | 0;
 _memcpy($$3$i$i3252 + 18292 | 0, 2904018, 456) | 0;
 _memcpy($$3$i$i3252 + 18748 | 0, 2904474, 456) | 0;
 _memcpy($$3$i$i3252 + 19204 | 0, 2904930, 456) | 0;
 _memcpy($$3$i$i3252 + 19660 | 0, 2905386, 456) | 0;
 _memcpy($$3$i$i3252 + 20116 | 0, 2905842, 456) | 0;
 _memcpy($$3$i$i3252 + 20572 | 0, 2906298, 456) | 0;
 _memcpy($$3$i$i3252 + 21028 | 0, 2906754, 456) | 0;
 _memcpy($$3$i$i3252 + 21484 | 0, 2907210, 456) | 0;
 _memcpy($$3$i$i3252 + 21940 | 0, 2907666, 456) | 0;
 _memcpy($$3$i$i3252 + 22396 | 0, 2908122, 456) | 0;
 _memcpy($$3$i$i3252 + 22852 | 0, 2908578, 456) | 0;
 _memcpy($$3$i$i3252 + 23308 | 0, 2909034, 456) | 0;
 _memcpy($$3$i$i3252 + 23764 | 0, 2909490, 456) | 0;
 _memcpy($$3$i$i3252 + 24220 | 0, 2909946, 456) | 0;
 _memcpy($$3$i$i3252 + 24676 | 0, 2910402, 456) | 0;
 _memcpy($$3$i$i3252 + 25132 | 0, 2910858, 456) | 0;
 _memcpy($$3$i$i3252 + 25588 | 0, 2911314, 456) | 0;
 _memcpy($$3$i$i3252 + 26044 | 0, 2911770, 456) | 0;
 _memcpy($$3$i$i3252 + 26500 | 0, 2912226, 456) | 0;
 _memcpy($$3$i$i3252 + 26956 | 0, 2912682, 456) | 0;
 _memcpy($$3$i$i3252 + 27412 | 0, 2913138, 456) | 0;
 _memcpy($$3$i$i3252 + 27868 | 0, 2913594, 456) | 0;
 _memcpy($$3$i$i3252 + 28324 | 0, 2914050, 456) | 0;
 _memcpy($$3$i$i3252 + 28780 | 0, 2914506, 456) | 0;
 _memcpy($$3$i$i3252 + 29236 | 0, 2914962, 456) | 0;
 _memcpy($$3$i$i3252 + 29692 | 0, 2915418, 456) | 0;
 _memcpy($$3$i$i3252 + 30148 | 0, 2915874, 456) | 0;
 _memcpy($$3$i$i3252 + 30604 | 0, 2916330, 456) | 0;
 _memcpy($$3$i$i3252 + 31060 | 0, 2916786, 456) | 0;
 _memcpy($$3$i$i3252 + 31516 | 0, 2917242, 456) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2159);
 if ($$3$i$i3252 | 0) {
  $29979 = $$3$i$i3252 + 5 | 0;
  $29981 = (HEAP8[$29979 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$29979 >> 0] = $29981;
  if (!($29981 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3252);
  HEAP32[$2159 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 769;
 HEAP16[$7986 >> 1] = 277;
 HEAP16[$7987 >> 1] = 994;
 HEAP16[$7988 >> 1] = 346;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31972) label = 4480; else {
  $29985 = HEAP32[915090] | 0;
  if (($29985 | 0) == (HEAP32[915088] | 0)) label = 4480; else {
   $$lcssa$i$i3239 = 3660360;
   $$lcssa8$i$i3238 = $29985;
   label = 4481;
  }
 }
 do if ((label | 0) == 4480) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31972) {
   $29992 = HEAP32[915096] | 0;
   if (($29992 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3239 = 3660384;
    $$lcssa8$i$i3238 = $29992;
    label = 4481;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31972) {
   $29997 = HEAP32[915102] | 0;
   if (($29997 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3239 = 3660408;
    $$lcssa8$i$i3238 = $29997;
    label = 4481;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31972) {
   $30002 = HEAP32[915108] | 0;
   if (($30002 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3239 = 3660432;
    $$lcssa8$i$i3238 = $30002;
    label = 4481;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31972) {
   $30007 = HEAP32[915114] | 0;
   if (($30007 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3239 = 3660456;
    $$lcssa8$i$i3238 = $30007;
    label = 4481;
    break;
   }
  }
  $$3$i$i3240 = __Znwj(31972) | 0;
 } while (0);
 if ((label | 0) == 4481) {
  $29990 = $$lcssa8$i$i3238 + -4 | 0;
  HEAP32[$$lcssa$i$i3239 >> 2] = $29990;
  $$3$i$i3240 = HEAP32[$29990 >> 2] | 0;
 }
 $30011 = $$3$i$i3240 + 52 | 0;
 HEAP16[$$3$i$i3240 >> 1] = 228;
 HEAP16[$$3$i$i3240 + 2 >> 1] = 70;
 HEAP8[$$3$i$i3240 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3240 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3240 + 8 >> 2] = 456;
 HEAP32[$$3$i$i3240 + 12 >> 2] = 31920;
 HEAP32[$$3$i$i3240 + 16 >> 2] = $30011;
 HEAP32[$$3$i$i3240 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3240 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3240 + 48 >> 0] = 0;
 HEAP32[$2160 >> 2] = $$3$i$i3240;
 _memcpy($30011 | 0, 2917698, 456) | 0;
 _memcpy($$3$i$i3240 + 508 | 0, 2918154, 456) | 0;
 _memcpy($$3$i$i3240 + 964 | 0, 2918610, 456) | 0;
 _memcpy($$3$i$i3240 + 1420 | 0, 2919066, 456) | 0;
 _memcpy($$3$i$i3240 + 1876 | 0, 2919522, 456) | 0;
 _memcpy($$3$i$i3240 + 2332 | 0, 2919978, 456) | 0;
 _memcpy($$3$i$i3240 + 2788 | 0, 2920434, 456) | 0;
 _memcpy($$3$i$i3240 + 3244 | 0, 2920890, 456) | 0;
 _memcpy($$3$i$i3240 + 3700 | 0, 2921346, 456) | 0;
 _memcpy($$3$i$i3240 + 4156 | 0, 2921802, 456) | 0;
 _memcpy($$3$i$i3240 + 4612 | 0, 2922258, 456) | 0;
 _memcpy($$3$i$i3240 + 5068 | 0, 2922714, 456) | 0;
 _memcpy($$3$i$i3240 + 5524 | 0, 2923170, 456) | 0;
 _memcpy($$3$i$i3240 + 5980 | 0, 2923626, 456) | 0;
 _memcpy($$3$i$i3240 + 6436 | 0, 2924082, 456) | 0;
 _memcpy($$3$i$i3240 + 6892 | 0, 2924538, 456) | 0;
 _memcpy($$3$i$i3240 + 7348 | 0, 2924994, 456) | 0;
 _memcpy($$3$i$i3240 + 7804 | 0, 2925450, 456) | 0;
 _memcpy($$3$i$i3240 + 8260 | 0, 2925906, 456) | 0;
 _memcpy($$3$i$i3240 + 8716 | 0, 2926362, 456) | 0;
 _memcpy($$3$i$i3240 + 9172 | 0, 2926818, 456) | 0;
 _memcpy($$3$i$i3240 + 9628 | 0, 2927274, 456) | 0;
 _memcpy($$3$i$i3240 + 10084 | 0, 2927730, 456) | 0;
 _memcpy($$3$i$i3240 + 10540 | 0, 2928186, 456) | 0;
 _memcpy($$3$i$i3240 + 10996 | 0, 2928642, 456) | 0;
 _memcpy($$3$i$i3240 + 11452 | 0, 2929098, 456) | 0;
 _memcpy($$3$i$i3240 + 11908 | 0, 2929554, 456) | 0;
 _memcpy($$3$i$i3240 + 12364 | 0, 2930010, 456) | 0;
 _memcpy($$3$i$i3240 + 12820 | 0, 2930466, 456) | 0;
 _memcpy($$3$i$i3240 + 13276 | 0, 2930922, 456) | 0;
 _memcpy($$3$i$i3240 + 13732 | 0, 2931378, 456) | 0;
 _memcpy($$3$i$i3240 + 14188 | 0, 2931834, 456) | 0;
 _memcpy($$3$i$i3240 + 14644 | 0, 2932290, 456) | 0;
 _memcpy($$3$i$i3240 + 15100 | 0, 2932746, 456) | 0;
 _memcpy($$3$i$i3240 + 15556 | 0, 2933202, 456) | 0;
 _memcpy($$3$i$i3240 + 16012 | 0, 2933658, 456) | 0;
 _memcpy($$3$i$i3240 + 16468 | 0, 2934114, 456) | 0;
 _memcpy($$3$i$i3240 + 16924 | 0, 2934570, 456) | 0;
 _memcpy($$3$i$i3240 + 17380 | 0, 2935026, 456) | 0;
 _memcpy($$3$i$i3240 + 17836 | 0, 2935482, 456) | 0;
 _memcpy($$3$i$i3240 + 18292 | 0, 2935938, 456) | 0;
 _memcpy($$3$i$i3240 + 18748 | 0, 2936394, 456) | 0;
 _memcpy($$3$i$i3240 + 19204 | 0, 2936850, 456) | 0;
 _memcpy($$3$i$i3240 + 19660 | 0, 2937306, 456) | 0;
 _memcpy($$3$i$i3240 + 20116 | 0, 2937762, 456) | 0;
 _memcpy($$3$i$i3240 + 20572 | 0, 2938218, 456) | 0;
 _memcpy($$3$i$i3240 + 21028 | 0, 2938674, 456) | 0;
 _memcpy($$3$i$i3240 + 21484 | 0, 2939130, 456) | 0;
 _memcpy($$3$i$i3240 + 21940 | 0, 2939586, 456) | 0;
 _memcpy($$3$i$i3240 + 22396 | 0, 2940042, 456) | 0;
 _memcpy($$3$i$i3240 + 22852 | 0, 2940498, 456) | 0;
 _memcpy($$3$i$i3240 + 23308 | 0, 2940954, 456) | 0;
 _memcpy($$3$i$i3240 + 23764 | 0, 2941410, 456) | 0;
 _memcpy($$3$i$i3240 + 24220 | 0, 2941866, 456) | 0;
 _memcpy($$3$i$i3240 + 24676 | 0, 2942322, 456) | 0;
 _memcpy($$3$i$i3240 + 25132 | 0, 2942778, 456) | 0;
 _memcpy($$3$i$i3240 + 25588 | 0, 2943234, 456) | 0;
 _memcpy($$3$i$i3240 + 26044 | 0, 2943690, 456) | 0;
 _memcpy($$3$i$i3240 + 26500 | 0, 2944146, 456) | 0;
 _memcpy($$3$i$i3240 + 26956 | 0, 2944602, 456) | 0;
 _memcpy($$3$i$i3240 + 27412 | 0, 2945058, 456) | 0;
 _memcpy($$3$i$i3240 + 27868 | 0, 2945514, 456) | 0;
 _memcpy($$3$i$i3240 + 28324 | 0, 2945970, 456) | 0;
 _memcpy($$3$i$i3240 + 28780 | 0, 2946426, 456) | 0;
 _memcpy($$3$i$i3240 + 29236 | 0, 2946882, 456) | 0;
 _memcpy($$3$i$i3240 + 29692 | 0, 2947338, 456) | 0;
 _memcpy($$3$i$i3240 + 30148 | 0, 2947794, 456) | 0;
 _memcpy($$3$i$i3240 + 30604 | 0, 2948250, 456) | 0;
 _memcpy($$3$i$i3240 + 31060 | 0, 2948706, 456) | 0;
 _memcpy($$3$i$i3240 + 31516 | 0, 2949162, 456) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2160);
 if ($$3$i$i3240 | 0) {
  $30091 = $$3$i$i3240 + 5 | 0;
  $30093 = (HEAP8[$30091 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$30091 >> 0] = $30093;
  if (!($30093 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3240);
  HEAP32[$2160 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 769;
 HEAP16[$7989 >> 1] = 347;
 HEAP16[$7990 >> 1] = 994;
 HEAP16[$7991 >> 1] = 416;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31972) label = 4496; else {
  $30097 = HEAP32[915090] | 0;
  if (($30097 | 0) == (HEAP32[915088] | 0)) label = 4496; else {
   $$lcssa$i$i3227 = 3660360;
   $$lcssa8$i$i3226 = $30097;
   label = 4497;
  }
 }
 do if ((label | 0) == 4496) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31972) {
   $30104 = HEAP32[915096] | 0;
   if (($30104 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3227 = 3660384;
    $$lcssa8$i$i3226 = $30104;
    label = 4497;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31972) {
   $30109 = HEAP32[915102] | 0;
   if (($30109 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3227 = 3660408;
    $$lcssa8$i$i3226 = $30109;
    label = 4497;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31972) {
   $30114 = HEAP32[915108] | 0;
   if (($30114 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3227 = 3660432;
    $$lcssa8$i$i3226 = $30114;
    label = 4497;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31972) {
   $30119 = HEAP32[915114] | 0;
   if (($30119 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3227 = 3660456;
    $$lcssa8$i$i3226 = $30119;
    label = 4497;
    break;
   }
  }
  $$3$i$i3228 = __Znwj(31972) | 0;
 } while (0);
 if ((label | 0) == 4497) {
  $30102 = $$lcssa8$i$i3226 + -4 | 0;
  HEAP32[$$lcssa$i$i3227 >> 2] = $30102;
  $$3$i$i3228 = HEAP32[$30102 >> 2] | 0;
 }
 $30123 = $$3$i$i3228 + 52 | 0;
 HEAP16[$$3$i$i3228 >> 1] = 228;
 HEAP16[$$3$i$i3228 + 2 >> 1] = 70;
 HEAP8[$$3$i$i3228 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3228 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3228 + 8 >> 2] = 456;
 HEAP32[$$3$i$i3228 + 12 >> 2] = 31920;
 HEAP32[$$3$i$i3228 + 16 >> 2] = $30123;
 HEAP32[$$3$i$i3228 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3228 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3228 + 48 >> 0] = 0;
 HEAP32[$2161 >> 2] = $$3$i$i3228;
 _memcpy($30123 | 0, 2949618, 456) | 0;
 _memcpy($$3$i$i3228 + 508 | 0, 2950074, 456) | 0;
 _memcpy($$3$i$i3228 + 964 | 0, 2950530, 456) | 0;
 _memcpy($$3$i$i3228 + 1420 | 0, 2950986, 456) | 0;
 _memcpy($$3$i$i3228 + 1876 | 0, 2951442, 456) | 0;
 _memcpy($$3$i$i3228 + 2332 | 0, 2951898, 456) | 0;
 _memcpy($$3$i$i3228 + 2788 | 0, 2952354, 456) | 0;
 _memcpy($$3$i$i3228 + 3244 | 0, 2952810, 456) | 0;
 _memcpy($$3$i$i3228 + 3700 | 0, 2953266, 456) | 0;
 _memcpy($$3$i$i3228 + 4156 | 0, 2953722, 456) | 0;
 _memcpy($$3$i$i3228 + 4612 | 0, 2954178, 456) | 0;
 _memcpy($$3$i$i3228 + 5068 | 0, 2954634, 456) | 0;
 _memcpy($$3$i$i3228 + 5524 | 0, 2955090, 456) | 0;
 _memcpy($$3$i$i3228 + 5980 | 0, 2955546, 456) | 0;
 _memcpy($$3$i$i3228 + 6436 | 0, 2956002, 456) | 0;
 _memcpy($$3$i$i3228 + 6892 | 0, 2956458, 456) | 0;
 _memcpy($$3$i$i3228 + 7348 | 0, 2956914, 456) | 0;
 _memcpy($$3$i$i3228 + 7804 | 0, 2957370, 456) | 0;
 _memcpy($$3$i$i3228 + 8260 | 0, 2957826, 456) | 0;
 _memcpy($$3$i$i3228 + 8716 | 0, 2958282, 456) | 0;
 _memcpy($$3$i$i3228 + 9172 | 0, 2958738, 456) | 0;
 _memcpy($$3$i$i3228 + 9628 | 0, 2959194, 456) | 0;
 _memcpy($$3$i$i3228 + 10084 | 0, 2959650, 456) | 0;
 _memcpy($$3$i$i3228 + 10540 | 0, 2960106, 456) | 0;
 _memcpy($$3$i$i3228 + 10996 | 0, 2960562, 456) | 0;
 _memcpy($$3$i$i3228 + 11452 | 0, 2961018, 456) | 0;
 _memcpy($$3$i$i3228 + 11908 | 0, 2961474, 456) | 0;
 _memcpy($$3$i$i3228 + 12364 | 0, 2961930, 456) | 0;
 _memcpy($$3$i$i3228 + 12820 | 0, 2962386, 456) | 0;
 _memcpy($$3$i$i3228 + 13276 | 0, 2962842, 456) | 0;
 _memcpy($$3$i$i3228 + 13732 | 0, 2963298, 456) | 0;
 _memcpy($$3$i$i3228 + 14188 | 0, 2963754, 456) | 0;
 _memcpy($$3$i$i3228 + 14644 | 0, 2964210, 456) | 0;
 _memcpy($$3$i$i3228 + 15100 | 0, 2964666, 456) | 0;
 _memcpy($$3$i$i3228 + 15556 | 0, 2965122, 456) | 0;
 _memcpy($$3$i$i3228 + 16012 | 0, 2965578, 456) | 0;
 _memcpy($$3$i$i3228 + 16468 | 0, 2966034, 456) | 0;
 _memcpy($$3$i$i3228 + 16924 | 0, 2966490, 456) | 0;
 _memcpy($$3$i$i3228 + 17380 | 0, 2966946, 456) | 0;
 _memcpy($$3$i$i3228 + 17836 | 0, 2967402, 456) | 0;
 _memcpy($$3$i$i3228 + 18292 | 0, 2967858, 456) | 0;
 _memcpy($$3$i$i3228 + 18748 | 0, 2968314, 456) | 0;
 _memcpy($$3$i$i3228 + 19204 | 0, 2968770, 456) | 0;
 _memcpy($$3$i$i3228 + 19660 | 0, 2969226, 456) | 0;
 _memcpy($$3$i$i3228 + 20116 | 0, 2969682, 456) | 0;
 _memcpy($$3$i$i3228 + 20572 | 0, 2970138, 456) | 0;
 _memcpy($$3$i$i3228 + 21028 | 0, 2970594, 456) | 0;
 _memcpy($$3$i$i3228 + 21484 | 0, 2971050, 456) | 0;
 _memcpy($$3$i$i3228 + 21940 | 0, 2971506, 456) | 0;
 _memcpy($$3$i$i3228 + 22396 | 0, 2971962, 456) | 0;
 _memcpy($$3$i$i3228 + 22852 | 0, 2972418, 456) | 0;
 _memcpy($$3$i$i3228 + 23308 | 0, 2972874, 456) | 0;
 _memcpy($$3$i$i3228 + 23764 | 0, 2973330, 456) | 0;
 _memcpy($$3$i$i3228 + 24220 | 0, 2973786, 456) | 0;
 _memcpy($$3$i$i3228 + 24676 | 0, 2974242, 456) | 0;
 _memcpy($$3$i$i3228 + 25132 | 0, 2974698, 456) | 0;
 _memcpy($$3$i$i3228 + 25588 | 0, 2975154, 456) | 0;
 _memcpy($$3$i$i3228 + 26044 | 0, 2975610, 456) | 0;
 _memcpy($$3$i$i3228 + 26500 | 0, 2976066, 456) | 0;
 _memcpy($$3$i$i3228 + 26956 | 0, 2976522, 456) | 0;
 _memcpy($$3$i$i3228 + 27412 | 0, 2976978, 456) | 0;
 _memcpy($$3$i$i3228 + 27868 | 0, 2977434, 456) | 0;
 _memcpy($$3$i$i3228 + 28324 | 0, 2977890, 456) | 0;
 _memcpy($$3$i$i3228 + 28780 | 0, 2978346, 456) | 0;
 _memcpy($$3$i$i3228 + 29236 | 0, 2978802, 456) | 0;
 _memcpy($$3$i$i3228 + 29692 | 0, 2979258, 456) | 0;
 _memcpy($$3$i$i3228 + 30148 | 0, 2979714, 456) | 0;
 _memcpy($$3$i$i3228 + 30604 | 0, 2980170, 456) | 0;
 _memcpy($$3$i$i3228 + 31060 | 0, 2980626, 456) | 0;
 _memcpy($$3$i$i3228 + 31516 | 0, 2981082, 456) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2161);
 if ($$3$i$i3228 | 0) {
  $30203 = $$3$i$i3228 + 5 | 0;
  $30205 = (HEAP8[$30203 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$30203 >> 0] = $30205;
  if (!($30205 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3228);
  HEAP32[$2161 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 769;
 HEAP16[$7992 >> 1] = 417;
 HEAP16[$7993 >> 1] = 994;
 HEAP16[$7994 >> 1] = 418;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 964) label = 4512; else {
  $30209 = HEAP32[915090] | 0;
  if (($30209 | 0) == (HEAP32[915088] | 0)) label = 4512; else {
   $$lcssa$i$i3215 = 3660360;
   $$lcssa8$i$i3214 = $30209;
   label = 4513;
  }
 }
 do if ((label | 0) == 4512) {
  if ((HEAP32[915097] | 0) >>> 0 >= 964) {
   $30216 = HEAP32[915096] | 0;
   if (($30216 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3215 = 3660384;
    $$lcssa8$i$i3214 = $30216;
    label = 4513;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 964) {
   $30221 = HEAP32[915102] | 0;
   if (($30221 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3215 = 3660408;
    $$lcssa8$i$i3214 = $30221;
    label = 4513;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 964) {
   $30226 = HEAP32[915108] | 0;
   if (($30226 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3215 = 3660432;
    $$lcssa8$i$i3214 = $30226;
    label = 4513;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 964) {
   $30231 = HEAP32[915114] | 0;
   if (($30231 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3215 = 3660456;
    $$lcssa8$i$i3214 = $30231;
    label = 4513;
    break;
   }
  }
  $$3$i$i3216 = __Znwj(964) | 0;
 } while (0);
 if ((label | 0) == 4513) {
  $30214 = $$lcssa8$i$i3214 + -4 | 0;
  HEAP32[$$lcssa$i$i3215 >> 2] = $30214;
  $$3$i$i3216 = HEAP32[$30214 >> 2] | 0;
 }
 $30235 = $$3$i$i3216 + 52 | 0;
 HEAP16[$$3$i$i3216 >> 1] = 228;
 HEAP16[$$3$i$i3216 + 2 >> 1] = 2;
 HEAP8[$$3$i$i3216 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3216 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3216 + 8 >> 2] = 456;
 HEAP32[$$3$i$i3216 + 12 >> 2] = 912;
 HEAP32[$$3$i$i3216 + 16 >> 2] = $30235;
 HEAP32[$$3$i$i3216 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3216 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3216 + 48 >> 0] = 0;
 HEAP32[$2162 >> 2] = $$3$i$i3216;
 _memcpy($30235 | 0, 2981538, 456) | 0;
 _memcpy($$3$i$i3216 + 508 | 0, 2981994, 456) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2162);
 if ($$3$i$i3216 | 0) {
  $30247 = $$3$i$i3216 + 5 | 0;
  $30249 = (HEAP8[$30247 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$30247 >> 0] = $30249;
  if (!($30249 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3216);
  HEAP32[$2162 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7995 >> 1] = 207;
 HEAP16[$7996 >> 1] = 221;
 HEAP16[$7997 >> 1] = 418;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 5140) label = 4528; else {
  $30253 = HEAP32[915090] | 0;
  if (($30253 | 0) == (HEAP32[915088] | 0)) label = 4528; else {
   $$lcssa$i$i3203 = 3660360;
   $$lcssa8$i$i3202 = $30253;
   label = 4529;
  }
 }
 do if ((label | 0) == 4528) {
  if ((HEAP32[915097] | 0) >>> 0 >= 5140) {
   $30260 = HEAP32[915096] | 0;
   if (($30260 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3203 = 3660384;
    $$lcssa8$i$i3202 = $30260;
    label = 4529;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 5140) {
   $30265 = HEAP32[915102] | 0;
   if (($30265 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3203 = 3660408;
    $$lcssa8$i$i3202 = $30265;
    label = 4529;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 5140) {
   $30270 = HEAP32[915108] | 0;
   if (($30270 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3203 = 3660432;
    $$lcssa8$i$i3202 = $30270;
    label = 4529;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 5140) {
   $30275 = HEAP32[915114] | 0;
   if (($30275 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3203 = 3660456;
    $$lcssa8$i$i3202 = $30275;
    label = 4529;
    break;
   }
  }
  $$3$i$i3204 = __Znwj(5140) | 0;
 } while (0);
 if ((label | 0) == 4529) {
  $30258 = $$lcssa8$i$i3202 + -4 | 0;
  HEAP32[$$lcssa$i$i3203 >> 2] = $30258;
  $$3$i$i3204 = HEAP32[$30258 >> 2] | 0;
 }
 $30279 = $$3$i$i3204 + 52 | 0;
 HEAP16[$$3$i$i3204 >> 1] = 12;
 HEAP16[$$3$i$i3204 + 2 >> 1] = 212;
 HEAP8[$$3$i$i3204 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3204 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3204 + 8 >> 2] = 24;
 HEAP32[$$3$i$i3204 + 12 >> 2] = 5088;
 HEAP32[$$3$i$i3204 + 16 >> 2] = $30279;
 HEAP32[$$3$i$i3204 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3204 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3204 + 48 >> 0] = 0;
 HEAP32[$2163 >> 2] = $$3$i$i3204;
 $dest$02$i3198 = $30279;
 $i$03$i3197 = 0;
 $src$01$i3199 = 2982450;
 while (1) {
  dest = $dest$02$i3198;
  src = $src$01$i3199;
  stop = dest + 24 | 0;
  do {
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
  } while ((dest | 0) < (stop | 0));
  $i$03$i3197 = $i$03$i3197 + 1 << 16 >> 16;
  if (($i$03$i3197 & 65535) >= 212) break; else {
   $dest$02$i3198 = $dest$02$i3198 + 24 | 0;
   $src$01$i3199 = $src$01$i3199 + 24 | 0;
  }
 }
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2163);
 if ($$3$i$i3204 | 0) {
  $30294 = $$3$i$i3204 + 5 | 0;
  $30296 = (HEAP8[$30294 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$30294 >> 0] = $30296;
  if (!($30296 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3204);
  HEAP32[$2163 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$7998 >> 1] = 197;
 HEAP16[$7999 >> 1] = 994;
 HEAP16[$8000 >> 1] = 206;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 15732) label = 4546; else {
  $30300 = HEAP32[915090] | 0;
  if (($30300 | 0) == (HEAP32[915088] | 0)) label = 4546; else {
   $$lcssa$i$i3191 = 3660360;
   $$lcssa8$i$i3190 = $30300;
   label = 4547;
  }
 }
 do if ((label | 0) == 4546) {
  if ((HEAP32[915097] | 0) >>> 0 >= 15732) {
   $30307 = HEAP32[915096] | 0;
   if (($30307 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3191 = 3660384;
    $$lcssa8$i$i3190 = $30307;
    label = 4547;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 15732) {
   $30312 = HEAP32[915102] | 0;
   if (($30312 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3191 = 3660408;
    $$lcssa8$i$i3190 = $30312;
    label = 4547;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 15732) {
   $30317 = HEAP32[915108] | 0;
   if (($30317 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3191 = 3660432;
    $$lcssa8$i$i3190 = $30317;
    label = 4547;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 15732) {
   $30322 = HEAP32[915114] | 0;
   if (($30322 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3191 = 3660456;
    $$lcssa8$i$i3190 = $30322;
    label = 4547;
    break;
   }
  }
  $$3$i$i3192 = __Znwj(15732) | 0;
 } while (0);
 if ((label | 0) == 4547) {
  $30305 = $$lcssa8$i$i3190 + -4 | 0;
  HEAP32[$$lcssa$i$i3191 >> 2] = $30305;
  $$3$i$i3192 = HEAP32[$30305 >> 2] | 0;
 }
 $30326 = $$3$i$i3192 + 52 | 0;
 HEAP16[$$3$i$i3192 >> 1] = 784;
 HEAP16[$$3$i$i3192 + 2 >> 1] = 10;
 HEAP8[$$3$i$i3192 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3192 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3192 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i3192 + 12 >> 2] = 15680;
 HEAP32[$$3$i$i3192 + 16 >> 2] = $30326;
 HEAP32[$$3$i$i3192 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3192 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3192 + 48 >> 0] = 0;
 HEAP32[$2164 >> 2] = $$3$i$i3192;
 _memcpy($30326 | 0, 2987538, 1568) | 0;
 _memcpy($$3$i$i3192 + 1620 | 0, 2989106, 1568) | 0;
 _memcpy($$3$i$i3192 + 3188 | 0, 2990674, 1568) | 0;
 _memcpy($$3$i$i3192 + 4756 | 0, 2992242, 1568) | 0;
 _memcpy($$3$i$i3192 + 6324 | 0, 2993810, 1568) | 0;
 _memcpy($$3$i$i3192 + 7892 | 0, 2995378, 1568) | 0;
 _memcpy($$3$i$i3192 + 9460 | 0, 2996946, 1568) | 0;
 _memcpy($$3$i$i3192 + 11028 | 0, 2998514, 1568) | 0;
 _memcpy($$3$i$i3192 + 12596 | 0, 3000082, 1568) | 0;
 _memcpy($$3$i$i3192 + 14164 | 0, 3001650, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2164);
 if ($$3$i$i3192 | 0) {
  $30346 = $$3$i$i3192 + 5 | 0;
  $30348 = (HEAP8[$30346 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$30346 >> 0] = $30348;
  if (!($30348 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3192);
  HEAP32[$2164 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 776;
 HEAP16[$8001 >> 1] = 529;
 HEAP16[$8002 >> 1] = 791;
 HEAP16[$8003 >> 1] = 544;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 564) label = 4562; else {
  $30352 = HEAP32[915090] | 0;
  if (($30352 | 0) == (HEAP32[915088] | 0)) label = 4562; else {
   $$lcssa$i$i3179 = 3660360;
   $$lcssa8$i$i3178 = $30352;
   label = 4563;
  }
 }
 do if ((label | 0) == 4562) {
  if ((HEAP32[915097] | 0) >>> 0 >= 564) {
   $30359 = HEAP32[915096] | 0;
   if (($30359 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3179 = 3660384;
    $$lcssa8$i$i3178 = $30359;
    label = 4563;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 564) {
   $30364 = HEAP32[915102] | 0;
   if (($30364 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3179 = 3660408;
    $$lcssa8$i$i3178 = $30364;
    label = 4563;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 564) {
   $30369 = HEAP32[915108] | 0;
   if (($30369 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3179 = 3660432;
    $$lcssa8$i$i3178 = $30369;
    label = 4563;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 564) {
   $30374 = HEAP32[915114] | 0;
   if (($30374 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3179 = 3660456;
    $$lcssa8$i$i3178 = $30374;
    label = 4563;
    break;
   }
  }
  $$3$i$i3180 = __Znwj(564) | 0;
 } while (0);
 if ((label | 0) == 4563) {
  $30357 = $$lcssa8$i$i3178 + -4 | 0;
  HEAP32[$$lcssa$i$i3179 >> 2] = $30357;
  $$3$i$i3180 = HEAP32[$30357 >> 2] | 0;
 }
 $30378 = $$3$i$i3180 + 52 | 0;
 HEAP16[$$3$i$i3180 >> 1] = 16;
 HEAP16[$$3$i$i3180 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3180 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3180 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3180 + 8 >> 2] = 32;
 HEAP32[$$3$i$i3180 + 12 >> 2] = 512;
 HEAP32[$$3$i$i3180 + 16 >> 2] = $30378;
 HEAP32[$$3$i$i3180 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3180 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3180 + 48 >> 0] = 0;
 HEAP32[$2165 >> 2] = $$3$i$i3180;
 dest = $30378;
 src = 3003218;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3180 + 84 | 0;
 src = 3003250;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3180 + 116 | 0;
 src = 3003282;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3180 + 148 | 0;
 src = 3003314;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3180 + 180 | 0;
 src = 3003346;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3180 + 212 | 0;
 src = 3003378;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3180 + 244 | 0;
 src = 3003410;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3180 + 276 | 0;
 src = 3003442;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3180 + 308 | 0;
 src = 3003474;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3180 + 340 | 0;
 src = 3003506;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3180 + 372 | 0;
 src = 3003538;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3180 + 404 | 0;
 src = 3003570;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3180 + 436 | 0;
 src = 3003602;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3180 + 468 | 0;
 src = 3003634;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3180 + 500 | 0;
 src = 3003666;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3180 + 532 | 0;
 src = 3003698;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $2165);
 if ($$3$i$i3180 | 0) {
  $30404 = $$3$i$i3180 + 5 | 0;
  $30406 = (HEAP8[$30404 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$30404 >> 0] = $30406;
  if (!($30406 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3180);
  HEAP32[$2165 >> 2] = 0;
 }
 $30408 = $2166;
 HEAP32[$30408 >> 2] = 14942430;
 HEAP32[$30408 + 4 >> 2] = 12517923;
 HEAP32[$8004 >> 2] = 63422;
 HEAP16[$2167 >> 1] = 222;
 HEAP16[$8005 >> 1] = 228;
 HEAP16[$8006 >> 1] = 3;
 HEAP16[$8007 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2166, $2167);
 $30412 = $2168;
 HEAP32[$30412 >> 2] = 14942430;
 HEAP32[$30412 + 4 >> 2] = 12517923;
 HEAP32[$8008 >> 2] = 63422;
 HEAP16[$2169 >> 1] = 437;
 HEAP16[$8009 >> 1] = 228;
 HEAP16[$8010 >> 1] = 6;
 HEAP16[$8011 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2168, $2169);
 $30416 = $2170;
 HEAP32[$30416 >> 2] = 14942430;
 HEAP32[$30416 + 4 >> 2] = 12517923;
 HEAP32[$8012 >> 2] = 63422;
 HEAP16[$2171 >> 1] = 766;
 HEAP16[$8013 >> 1] = 228;
 HEAP16[$8014 >> 1] = 3;
 HEAP16[$8015 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2170, $2171);
 $30420 = $2172;
 HEAP32[$30420 >> 2] = 14942430;
 HEAP32[$30420 + 4 >> 2] = 12517923;
 HEAP32[$8016 >> 2] = 63422;
 HEAP16[$2173 >> 1] = 222;
 HEAP16[$8017 >> 1] = 409;
 HEAP16[$8018 >> 1] = 547;
 HEAP16[$8019 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2172, $2173);
 $30424 = $2174;
 HEAP32[$30424 >> 2] = 14942430;
 HEAP32[$30424 + 4 >> 2] = 12517923;
 HEAP32[$8020 >> 2] = 63422;
 HEAP16[$2175 >> 1] = 222;
 HEAP16[$8021 >> 1] = 412;
 HEAP16[$8022 >> 1] = 3;
 HEAP16[$8023 >> 1] = 7;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2174, $2175);
 $30428 = $2176;
 HEAP32[$30428 >> 2] = 14942430;
 HEAP32[$30428 + 4 >> 2] = 12517923;
 HEAP32[$8024 >> 2] = 63422;
 HEAP16[$2177 >> 1] = 531;
 HEAP16[$8025 >> 1] = 412;
 HEAP16[$8026 >> 1] = 238;
 HEAP16[$8027 >> 1] = 7;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2176, $2177);
 $30432 = $2178;
 HEAP32[$30432 >> 2] = 13632258;
 HEAP32[$30432 + 4 >> 2] = 1704150;
 HEAP32[$8028 >> 2] = 63422;
 HEAP16[$2179 >> 1] = 770;
 HEAP16[$8029 >> 1] = 208;
 HEAP16[$8030 >> 1] = 214;
 HEAP16[$8031 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2178, $2179);
 $30436 = $2180;
 HEAP32[$30436 >> 2] = 13632258;
 HEAP32[$30436 + 4 >> 2] = 1704150;
 HEAP32[$8032 >> 2] = 63422;
 HEAP16[$2181 >> 1] = 770;
 HEAP16[$8033 >> 1] = 213;
 HEAP16[$8034 >> 1] = 5;
 HEAP16[$8035 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2180, $2181);
 $30440 = $2182;
 HEAP32[$30440 >> 2] = 13632258;
 HEAP32[$30440 + 4 >> 2] = 1704150;
 HEAP32[$8036 >> 2] = 63422;
 HEAP16[$2183 >> 1] = 979;
 HEAP16[$8037 >> 1] = 213;
 HEAP16[$8038 >> 1] = 5;
 HEAP16[$8039 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2182, $2183);
 $30444 = $2184;
 HEAP32[$30444 >> 2] = 13632258;
 HEAP32[$30444 + 4 >> 2] = 1704150;
 HEAP32[$8040 >> 2] = 63422;
 HEAP16[$2185 >> 1] = 770;
 HEAP16[$8041 >> 1] = 229;
 HEAP16[$8042 >> 1] = 214;
 HEAP16[$8043 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2184, $2185);
 $30448 = $2186;
 HEAP32[$30448 >> 2] = 14090652;
 HEAP32[$30448 + 4 >> 2] = 851970;
 HEAP8[$8044 >> 0] = -52;
 HEAP16[$8045 >> 1] = 412;
 HEAP16[$8046 >> 1] = 211;
 HEAP16[$2187 >> 1] = 0;
 HEAP16[$8047 >> 1] = 0;
 HEAP16[$8048 >> 1] = 1024;
 HEAP16[$8049 >> 1] = 768;
 __ZN14Front_JS_Natif4drawERK9RDPScrBltRK4Rect($front, $2186, $2187);
 $30452 = $2188;
 HEAP32[$30452 >> 2] = 15401182;
 HEAP32[$30452 + 4 >> 2] = 12059171;
 HEAP32[$8050 >> 2] = 63422;
 HEAP16[$2189 >> 1] = 222;
 HEAP16[$8051 >> 1] = 235;
 HEAP16[$8052 >> 1] = 3;
 HEAP16[$8053 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2188, $2189);
 $30456 = $2190;
 HEAP32[$30456 >> 2] = 15401182;
 HEAP32[$30456 + 4 >> 2] = 12059171;
 HEAP32[$8054 >> 2] = 63422;
 HEAP16[$2191 >> 1] = 437;
 HEAP16[$8055 >> 1] = 235;
 HEAP16[$8056 >> 1] = 6;
 HEAP16[$8057 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2190, $2191);
 $30460 = $2192;
 HEAP32[$30460 >> 2] = 15401182;
 HEAP32[$30460 + 4 >> 2] = 12059171;
 HEAP32[$8058 >> 2] = 63422;
 HEAP16[$2193 >> 1] = 766;
 HEAP16[$8059 >> 1] = 235;
 HEAP16[$8060 >> 1] = 3;
 HEAP16[$8061 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2192, $2193);
 $30464 = $2194;
 HEAP32[$30464 >> 2] = 15401182;
 HEAP32[$30464 + 4 >> 2] = 12059171;
 HEAP32[$8062 >> 2] = 63422;
 HEAP16[$2195 >> 1] = 222;
 HEAP16[$8063 >> 1] = 416;
 HEAP16[$8064 >> 1] = 547;
 HEAP16[$8065 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2194, $2195);
 $30468 = $2196;
 HEAP32[$30468 >> 2] = 15401182;
 HEAP32[$30468 + 4 >> 2] = 12059171;
 HEAP32[$8066 >> 2] = 63422;
 HEAP16[$2197 >> 1] = 222;
 HEAP16[$8067 >> 1] = 235;
 HEAP16[$8068 >> 1] = 3;
 HEAP16[$8069 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2196, $2197);
 $30472 = $2198;
 HEAP32[$30472 >> 2] = 15401182;
 HEAP32[$30472 + 4 >> 2] = 12059171;
 HEAP32[$8070 >> 2] = 63422;
 HEAP16[$2199 >> 1] = 437;
 HEAP16[$8071 >> 1] = 235;
 HEAP16[$8072 >> 1] = 6;
 HEAP16[$8073 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2198, $2199);
 $30476 = $2200;
 HEAP32[$30476 >> 2] = 15401182;
 HEAP32[$30476 + 4 >> 2] = 12059171;
 HEAP32[$8074 >> 2] = 63422;
 HEAP16[$2201 >> 1] = 766;
 HEAP16[$8075 >> 1] = 235;
 HEAP16[$8076 >> 1] = 3;
 HEAP16[$8077 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2200, $2201);
 $30480 = $2202;
 HEAP32[$30480 >> 2] = 15401182;
 HEAP32[$30480 + 4 >> 2] = 12059171;
 HEAP32[$8078 >> 2] = 63422;
 HEAP16[$2203 >> 1] = 222;
 HEAP16[$8079 >> 1] = 416;
 HEAP16[$8080 >> 1] = 547;
 HEAP16[$8081 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2202, $2203);
 $30484 = $2204;
 HEAP32[$30484 >> 2] = 13632258;
 HEAP32[$30484 + 4 >> 2] = 1704150;
 HEAP32[$8082 >> 2] = 63422;
 HEAP16[$2205 >> 1] = 770;
 HEAP16[$8083 >> 1] = 208;
 HEAP16[$8084 >> 1] = 214;
 HEAP16[$8085 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2204, $2205);
 $30488 = $2206;
 HEAP32[$30488 >> 2] = 13632258;
 HEAP32[$30488 + 4 >> 2] = 1704150;
 HEAP32[$8086 >> 2] = 63422;
 HEAP16[$2207 >> 1] = 770;
 HEAP16[$8087 >> 1] = 213;
 HEAP16[$8088 >> 1] = 5;
 HEAP16[$8089 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2206, $2207);
 $30492 = $2208;
 HEAP32[$30492 >> 2] = 13632258;
 HEAP32[$30492 + 4 >> 2] = 1704150;
 HEAP32[$8090 >> 2] = 63422;
 HEAP16[$2209 >> 1] = 979;
 HEAP16[$8091 >> 1] = 213;
 HEAP16[$8092 >> 1] = 5;
 HEAP16[$8093 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2208, $2209);
 $30496 = $2210;
 HEAP32[$30496 >> 2] = 13632258;
 HEAP32[$30496 + 4 >> 2] = 1704150;
 HEAP32[$8094 >> 2] = 63422;
 HEAP16[$2211 >> 1] = 770;
 HEAP16[$8095 >> 1] = 229;
 HEAP16[$8096 >> 1] = 214;
 HEAP16[$8097 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2210, $2211);
 $30500 = $2212;
 HEAP32[$30500 >> 2] = 13632258;
 HEAP32[$30500 + 4 >> 2] = 3080406;
 HEAP32[$8098 >> 2] = 63422;
 HEAP16[$2213 >> 1] = 770;
 HEAP16[$8099 >> 1] = 208;
 HEAP16[$8100 >> 1] = 214;
 HEAP16[$8101 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2212, $2213);
 $30504 = $2214;
 HEAP32[$30504 >> 2] = 13632258;
 HEAP32[$30504 + 4 >> 2] = 3080406;
 HEAP32[$8102 >> 2] = 63422;
 HEAP16[$2215 >> 1] = 770;
 HEAP16[$8103 >> 1] = 213;
 HEAP16[$8104 >> 1] = 5;
 HEAP16[$8105 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2214, $2215);
 $30508 = $2216;
 HEAP32[$30508 >> 2] = 13632258;
 HEAP32[$30508 + 4 >> 2] = 3080406;
 HEAP32[$8106 >> 2] = 63422;
 HEAP16[$2217 >> 1] = 979;
 HEAP16[$8107 >> 1] = 213;
 HEAP16[$8108 >> 1] = 5;
 HEAP16[$8109 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2216, $2217);
 $30512 = $2218;
 HEAP32[$30512 >> 2] = 13632258;
 HEAP32[$30512 + 4 >> 2] = 3080406;
 HEAP32[$8110 >> 2] = 63422;
 HEAP16[$2219 >> 1] = 770;
 HEAP16[$8111 >> 1] = 229;
 HEAP16[$8112 >> 1] = 214;
 HEAP16[$8113 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2218, $2219);
 $30516 = $2220;
 HEAP32[$30516 >> 2] = 13632258;
 HEAP32[$30516 + 4 >> 2] = 3080406;
 HEAP32[$8114 >> 2] = 63422;
 HEAP16[$2221 >> 1] = 770;
 HEAP16[$8115 >> 1] = 234;
 HEAP16[$8116 >> 1] = 5;
 HEAP16[$8117 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2220, $2221);
 $30520 = $2222;
 HEAP32[$30520 >> 2] = 13632258;
 HEAP32[$30520 + 4 >> 2] = 3080406;
 HEAP32[$8118 >> 2] = 63422;
 HEAP16[$2223 >> 1] = 979;
 HEAP16[$8119 >> 1] = 234;
 HEAP16[$8120 >> 1] = 5;
 HEAP16[$8121 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2222, $2223);
 $30524 = $2224;
 HEAP32[$30524 >> 2] = 13632258;
 HEAP32[$30524 + 4 >> 2] = 3080406;
 HEAP32[$8122 >> 2] = 63422;
 HEAP16[$2225 >> 1] = 770;
 HEAP16[$8123 >> 1] = 250;
 HEAP16[$8124 >> 1] = 214;
 HEAP16[$8125 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2224, $2225);
 $30528 = $2226;
 HEAP32[$30528 >> 2] = 13632258;
 HEAP32[$30528 + 4 >> 2] = 3080406;
 HEAP32[$8126 >> 2] = 63422;
 HEAP16[$2227 >> 1] = 770;
 HEAP16[$8127 >> 1] = 208;
 HEAP16[$8128 >> 1] = 214;
 HEAP16[$8129 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2226, $2227);
 $30532 = $2228;
 HEAP32[$30532 >> 2] = 13632258;
 HEAP32[$30532 + 4 >> 2] = 3080406;
 HEAP32[$8130 >> 2] = 63422;
 HEAP16[$2229 >> 1] = 770;
 HEAP16[$8131 >> 1] = 213;
 HEAP16[$8132 >> 1] = 5;
 HEAP16[$8133 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2228, $2229);
 $30536 = $2230;
 HEAP32[$30536 >> 2] = 13632258;
 HEAP32[$30536 + 4 >> 2] = 3080406;
 HEAP32[$8134 >> 2] = 63422;
 HEAP16[$2231 >> 1] = 979;
 HEAP16[$8135 >> 1] = 213;
 HEAP16[$8136 >> 1] = 5;
 HEAP16[$8137 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2230, $2231);
 $30540 = $2232;
 HEAP32[$30540 >> 2] = 13632258;
 HEAP32[$30540 + 4 >> 2] = 3080406;
 HEAP32[$8138 >> 2] = 63422;
 HEAP16[$2233 >> 1] = 770;
 HEAP16[$8139 >> 1] = 229;
 HEAP16[$8140 >> 1] = 214;
 HEAP16[$8141 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2232, $2233);
 $30544 = $2234;
 HEAP32[$30544 >> 2] = 13632258;
 HEAP32[$30544 + 4 >> 2] = 3080406;
 HEAP32[$8142 >> 2] = 63422;
 HEAP16[$2235 >> 1] = 770;
 HEAP16[$8143 >> 1] = 234;
 HEAP16[$8144 >> 1] = 5;
 HEAP16[$8145 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2234, $2235);
 $30548 = $2236;
 HEAP32[$30548 >> 2] = 13632258;
 HEAP32[$30548 + 4 >> 2] = 3080406;
 HEAP32[$8146 >> 2] = 63422;
 HEAP16[$2237 >> 1] = 979;
 HEAP16[$8147 >> 1] = 234;
 HEAP16[$8148 >> 1] = 5;
 HEAP16[$8149 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2236, $2237);
 $30552 = $2238;
 HEAP32[$30552 >> 2] = 13632258;
 HEAP32[$30552 + 4 >> 2] = 3080406;
 HEAP32[$8150 >> 2] = 63422;
 HEAP16[$2239 >> 1] = 770;
 HEAP16[$8151 >> 1] = 250;
 HEAP16[$8152 >> 1] = 214;
 HEAP16[$8153 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2238, $2239);
 $30556 = $2240;
 HEAP32[$30556 >> 2] = 13632258;
 HEAP32[$30556 + 4 >> 2] = 4456662;
 HEAP32[$8154 >> 2] = 63422;
 HEAP16[$2241 >> 1] = 770;
 HEAP16[$8155 >> 1] = 208;
 HEAP16[$8156 >> 1] = 214;
 HEAP16[$8157 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2240, $2241);
 $30560 = $2242;
 HEAP32[$30560 >> 2] = 13632258;
 HEAP32[$30560 + 4 >> 2] = 4456662;
 HEAP32[$8158 >> 2] = 63422;
 HEAP16[$2243 >> 1] = 770;
 HEAP16[$8159 >> 1] = 213;
 HEAP16[$8160 >> 1] = 5;
 HEAP16[$8161 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2242, $2243);
 $30564 = $2244;
 HEAP32[$30564 >> 2] = 13632258;
 HEAP32[$30564 + 4 >> 2] = 4456662;
 HEAP32[$8162 >> 2] = 63422;
 HEAP16[$2245 >> 1] = 979;
 HEAP16[$8163 >> 1] = 213;
 HEAP16[$8164 >> 1] = 5;
 HEAP16[$8165 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2244, $2245);
 $30568 = $2246;
 HEAP32[$30568 >> 2] = 13632258;
 HEAP32[$30568 + 4 >> 2] = 4456662;
 HEAP32[$8166 >> 2] = 63422;
 HEAP16[$2247 >> 1] = 770;
 HEAP16[$8167 >> 1] = 229;
 HEAP16[$8168 >> 1] = 214;
 HEAP16[$8169 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2246, $2247);
 $30572 = $2248;
 HEAP32[$30572 >> 2] = 13632258;
 HEAP32[$30572 + 4 >> 2] = 4456662;
 HEAP32[$8170 >> 2] = 63422;
 HEAP16[$2249 >> 1] = 770;
 HEAP16[$8171 >> 1] = 234;
 HEAP16[$8172 >> 1] = 5;
 HEAP16[$8173 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2248, $2249);
 $30576 = $2250;
 HEAP32[$30576 >> 2] = 13632258;
 HEAP32[$30576 + 4 >> 2] = 4456662;
 HEAP32[$8174 >> 2] = 63422;
 HEAP16[$2251 >> 1] = 979;
 HEAP16[$8175 >> 1] = 234;
 HEAP16[$8176 >> 1] = 5;
 HEAP16[$8177 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2250, $2251);
 $30580 = $2252;
 HEAP32[$30580 >> 2] = 13632258;
 HEAP32[$30580 + 4 >> 2] = 4456662;
 HEAP32[$8178 >> 2] = 63422;
 HEAP16[$2253 >> 1] = 770;
 HEAP16[$8179 >> 1] = 250;
 HEAP16[$8180 >> 1] = 214;
 HEAP16[$8181 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2252, $2253);
 $30584 = $2254;
 HEAP32[$30584 >> 2] = 13632258;
 HEAP32[$30584 + 4 >> 2] = 4456662;
 HEAP32[$8182 >> 2] = 63422;
 HEAP16[$2255 >> 1] = 770;
 HEAP16[$8183 >> 1] = 255;
 HEAP16[$8184 >> 1] = 5;
 HEAP16[$8185 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2254, $2255);
 $30588 = $2256;
 HEAP32[$30588 >> 2] = 13632258;
 HEAP32[$30588 + 4 >> 2] = 4456662;
 HEAP32[$8186 >> 2] = 63422;
 HEAP16[$2257 >> 1] = 979;
 HEAP16[$8187 >> 1] = 255;
 HEAP16[$8188 >> 1] = 5;
 HEAP16[$8189 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2256, $2257);
 $30592 = $2258;
 HEAP32[$30592 >> 2] = 13632258;
 HEAP32[$30592 + 4 >> 2] = 4456662;
 HEAP32[$8190 >> 2] = 63422;
 HEAP16[$2259 >> 1] = 770;
 HEAP16[$8191 >> 1] = 271;
 HEAP16[$8192 >> 1] = 214;
 HEAP16[$8193 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2258, $2259);
 $30596 = $2260;
 HEAP32[$30596 >> 2] = 13632258;
 HEAP32[$30596 + 4 >> 2] = 4456662;
 HEAP32[$8194 >> 2] = 63422;
 HEAP16[$2261 >> 1] = 770;
 HEAP16[$8195 >> 1] = 208;
 HEAP16[$8196 >> 1] = 214;
 HEAP16[$8197 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2260, $2261);
 $30600 = $2262;
 HEAP32[$30600 >> 2] = 13632258;
 HEAP32[$30600 + 4 >> 2] = 4456662;
 HEAP32[$8198 >> 2] = 63422;
 HEAP16[$2263 >> 1] = 770;
 HEAP16[$8199 >> 1] = 213;
 HEAP16[$8200 >> 1] = 5;
 HEAP16[$8201 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2262, $2263);
 $30604 = $2264;
 HEAP32[$30604 >> 2] = 13632258;
 HEAP32[$30604 + 4 >> 2] = 4456662;
 HEAP32[$8202 >> 2] = 63422;
 HEAP16[$2265 >> 1] = 979;
 HEAP16[$8203 >> 1] = 213;
 HEAP16[$8204 >> 1] = 5;
 HEAP16[$8205 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2264, $2265);
 $30608 = $2266;
 HEAP32[$30608 >> 2] = 13632258;
 HEAP32[$30608 + 4 >> 2] = 4456662;
 HEAP32[$8206 >> 2] = 63422;
 HEAP16[$2267 >> 1] = 770;
 HEAP16[$8207 >> 1] = 229;
 HEAP16[$8208 >> 1] = 214;
 HEAP16[$8209 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2266, $2267);
 $30612 = $2268;
 HEAP32[$30612 >> 2] = 13632258;
 HEAP32[$30612 + 4 >> 2] = 4456662;
 HEAP32[$8210 >> 2] = 63422;
 HEAP16[$2269 >> 1] = 770;
 HEAP16[$8211 >> 1] = 234;
 HEAP16[$8212 >> 1] = 5;
 HEAP16[$8213 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2268, $2269);
 $30616 = $2270;
 HEAP32[$30616 >> 2] = 13632258;
 HEAP32[$30616 + 4 >> 2] = 4456662;
 HEAP32[$8214 >> 2] = 63422;
 HEAP16[$2271 >> 1] = 979;
 HEAP16[$8215 >> 1] = 234;
 HEAP16[$8216 >> 1] = 5;
 HEAP16[$8217 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2270, $2271);
 $30620 = $2272;
 HEAP32[$30620 >> 2] = 13632258;
 HEAP32[$30620 + 4 >> 2] = 4456662;
 HEAP32[$8218 >> 2] = 63422;
 HEAP16[$2273 >> 1] = 770;
 HEAP16[$8219 >> 1] = 250;
 HEAP16[$8220 >> 1] = 214;
 HEAP16[$8221 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2272, $2273);
 $30624 = $2274;
 HEAP32[$30624 >> 2] = 13632258;
 HEAP32[$30624 + 4 >> 2] = 4456662;
 HEAP32[$8222 >> 2] = 63422;
 HEAP16[$2275 >> 1] = 770;
 HEAP16[$8223 >> 1] = 255;
 HEAP16[$8224 >> 1] = 5;
 HEAP16[$8225 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2274, $2275);
 $30628 = $2276;
 HEAP32[$30628 >> 2] = 13632258;
 HEAP32[$30628 + 4 >> 2] = 4456662;
 HEAP32[$8226 >> 2] = 63422;
 HEAP16[$2277 >> 1] = 979;
 HEAP16[$8227 >> 1] = 255;
 HEAP16[$8228 >> 1] = 5;
 HEAP16[$8229 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2276, $2277);
 $30632 = $2278;
 HEAP32[$30632 >> 2] = 13632258;
 HEAP32[$30632 + 4 >> 2] = 4456662;
 HEAP32[$8230 >> 2] = 63422;
 HEAP16[$2279 >> 1] = 770;
 HEAP16[$8231 >> 1] = 271;
 HEAP16[$8232 >> 1] = 214;
 HEAP16[$8233 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2278, $2279);
 $30636 = $2280;
 HEAP32[$30636 >> 2] = 13632258;
 HEAP32[$30636 + 4 >> 2] = 5832918;
 HEAP32[$8234 >> 2] = 63422;
 HEAP16[$2281 >> 1] = 770;
 HEAP16[$8235 >> 1] = 208;
 HEAP16[$8236 >> 1] = 214;
 HEAP16[$8237 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2280, $2281);
 $30640 = $2282;
 HEAP32[$30640 >> 2] = 13632258;
 HEAP32[$30640 + 4 >> 2] = 5832918;
 HEAP32[$8238 >> 2] = 63422;
 HEAP16[$2283 >> 1] = 770;
 HEAP16[$8239 >> 1] = 213;
 HEAP16[$8240 >> 1] = 5;
 HEAP16[$8241 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2282, $2283);
 $30644 = $2284;
 HEAP32[$30644 >> 2] = 13632258;
 HEAP32[$30644 + 4 >> 2] = 5832918;
 HEAP32[$8242 >> 2] = 63422;
 HEAP16[$2285 >> 1] = 979;
 HEAP16[$8243 >> 1] = 213;
 HEAP16[$8244 >> 1] = 5;
 HEAP16[$8245 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2284, $2285);
 $30648 = $2286;
 HEAP32[$30648 >> 2] = 13632258;
 HEAP32[$30648 + 4 >> 2] = 5832918;
 HEAP32[$8246 >> 2] = 63422;
 HEAP16[$2287 >> 1] = 770;
 HEAP16[$8247 >> 1] = 229;
 HEAP16[$8248 >> 1] = 214;
 HEAP16[$8249 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2286, $2287);
 $30652 = $2288;
 HEAP32[$30652 >> 2] = 13632258;
 HEAP32[$30652 + 4 >> 2] = 5832918;
 HEAP32[$8250 >> 2] = 63422;
 HEAP16[$2289 >> 1] = 770;
 HEAP16[$8251 >> 1] = 234;
 HEAP16[$8252 >> 1] = 5;
 HEAP16[$8253 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2288, $2289);
 $30656 = $2290;
 HEAP32[$30656 >> 2] = 13632258;
 HEAP32[$30656 + 4 >> 2] = 5832918;
 HEAP32[$8254 >> 2] = 63422;
 HEAP16[$2291 >> 1] = 979;
 HEAP16[$8255 >> 1] = 234;
 HEAP16[$8256 >> 1] = 5;
 HEAP16[$8257 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2290, $2291);
 $30660 = $2292;
 HEAP32[$30660 >> 2] = 13632258;
 HEAP32[$30660 + 4 >> 2] = 5832918;
 HEAP32[$8258 >> 2] = 63422;
 HEAP16[$2293 >> 1] = 770;
 HEAP16[$8259 >> 1] = 250;
 HEAP16[$8260 >> 1] = 214;
 HEAP16[$8261 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2292, $2293);
 $30664 = $2294;
 HEAP32[$30664 >> 2] = 13632258;
 HEAP32[$30664 + 4 >> 2] = 5832918;
 HEAP32[$8262 >> 2] = 63422;
 HEAP16[$2295 >> 1] = 770;
 HEAP16[$8263 >> 1] = 255;
 HEAP16[$8264 >> 1] = 5;
 HEAP16[$8265 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2294, $2295);
 $30668 = $2296;
 HEAP32[$30668 >> 2] = 13632258;
 HEAP32[$30668 + 4 >> 2] = 5832918;
 HEAP32[$8266 >> 2] = 63422;
 HEAP16[$2297 >> 1] = 979;
 HEAP16[$8267 >> 1] = 255;
 HEAP16[$8268 >> 1] = 5;
 HEAP16[$8269 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2296, $2297);
 $30672 = $2298;
 HEAP32[$30672 >> 2] = 13632258;
 HEAP32[$30672 + 4 >> 2] = 5832918;
 HEAP32[$8270 >> 2] = 63422;
 HEAP16[$2299 >> 1] = 770;
 HEAP16[$8271 >> 1] = 271;
 HEAP16[$8272 >> 1] = 214;
 HEAP16[$8273 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2298, $2299);
 $30676 = $2300;
 HEAP32[$30676 >> 2] = 13632258;
 HEAP32[$30676 + 4 >> 2] = 5832918;
 HEAP32[$8274 >> 2] = 63422;
 HEAP16[$2301 >> 1] = 770;
 HEAP16[$8275 >> 1] = 276;
 HEAP16[$8276 >> 1] = 5;
 HEAP16[$8277 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2300, $2301);
 $30680 = $2302;
 HEAP32[$30680 >> 2] = 13632258;
 HEAP32[$30680 + 4 >> 2] = 5832918;
 HEAP32[$8278 >> 2] = 63422;
 HEAP16[$2303 >> 1] = 979;
 HEAP16[$8279 >> 1] = 276;
 HEAP16[$8280 >> 1] = 5;
 HEAP16[$8281 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2302, $2303);
 $30684 = $2304;
 HEAP32[$30684 >> 2] = 13632258;
 HEAP32[$30684 + 4 >> 2] = 5832918;
 HEAP32[$8282 >> 2] = 63422;
 HEAP16[$2305 >> 1] = 770;
 HEAP16[$8283 >> 1] = 292;
 HEAP16[$8284 >> 1] = 214;
 HEAP16[$8285 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2304, $2305);
 $30688 = $2306;
 HEAP32[$30688 >> 2] = 13632258;
 HEAP32[$30688 + 4 >> 2] = 5832918;
 HEAP32[$8286 >> 2] = 63422;
 HEAP16[$2307 >> 1] = 770;
 HEAP16[$8287 >> 1] = 208;
 HEAP16[$8288 >> 1] = 214;
 HEAP16[$8289 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2306, $2307);
 $30692 = $2308;
 HEAP32[$30692 >> 2] = 13632258;
 HEAP32[$30692 + 4 >> 2] = 5832918;
 HEAP32[$8290 >> 2] = 63422;
 HEAP16[$2309 >> 1] = 770;
 HEAP16[$8291 >> 1] = 213;
 HEAP16[$8292 >> 1] = 5;
 HEAP16[$8293 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2308, $2309);
 $30696 = $2310;
 HEAP32[$30696 >> 2] = 13632258;
 HEAP32[$30696 + 4 >> 2] = 5832918;
 HEAP32[$8294 >> 2] = 63422;
 HEAP16[$2311 >> 1] = 979;
 HEAP16[$8295 >> 1] = 213;
 HEAP16[$8296 >> 1] = 5;
 HEAP16[$8297 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2310, $2311);
 $30700 = $2312;
 HEAP32[$30700 >> 2] = 13632258;
 HEAP32[$30700 + 4 >> 2] = 5832918;
 HEAP32[$8298 >> 2] = 63422;
 HEAP16[$2313 >> 1] = 770;
 HEAP16[$8299 >> 1] = 229;
 HEAP16[$8300 >> 1] = 214;
 HEAP16[$8301 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2312, $2313);
 $30704 = $2314;
 HEAP32[$30704 >> 2] = 13632258;
 HEAP32[$30704 + 4 >> 2] = 5832918;
 HEAP32[$8302 >> 2] = 63422;
 HEAP16[$2315 >> 1] = 770;
 HEAP16[$8303 >> 1] = 234;
 HEAP16[$8304 >> 1] = 5;
 HEAP16[$8305 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2314, $2315);
 $30708 = $2316;
 HEAP32[$30708 >> 2] = 13632258;
 HEAP32[$30708 + 4 >> 2] = 5832918;
 HEAP32[$8306 >> 2] = 63422;
 HEAP16[$2317 >> 1] = 979;
 HEAP16[$8307 >> 1] = 234;
 HEAP16[$8308 >> 1] = 5;
 HEAP16[$8309 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2316, $2317);
 $30712 = $2318;
 HEAP32[$30712 >> 2] = 13632258;
 HEAP32[$30712 + 4 >> 2] = 5832918;
 HEAP32[$8310 >> 2] = 63422;
 HEAP16[$2319 >> 1] = 770;
 HEAP16[$8311 >> 1] = 250;
 HEAP16[$8312 >> 1] = 214;
 HEAP16[$8313 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2318, $2319);
 $30716 = $2320;
 HEAP32[$30716 >> 2] = 13632258;
 HEAP32[$30716 + 4 >> 2] = 5832918;
 HEAP32[$8314 >> 2] = 63422;
 HEAP16[$2321 >> 1] = 770;
 HEAP16[$8315 >> 1] = 255;
 HEAP16[$8316 >> 1] = 5;
 HEAP16[$8317 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2320, $2321);
 $30720 = $2322;
 HEAP32[$30720 >> 2] = 13632258;
 HEAP32[$30720 + 4 >> 2] = 5832918;
 HEAP32[$8318 >> 2] = 63422;
 HEAP16[$2323 >> 1] = 979;
 HEAP16[$8319 >> 1] = 255;
 HEAP16[$8320 >> 1] = 5;
 HEAP16[$8321 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2322, $2323);
 $30724 = $2324;
 HEAP32[$30724 >> 2] = 13632258;
 HEAP32[$30724 + 4 >> 2] = 5832918;
 HEAP32[$8322 >> 2] = 63422;
 HEAP16[$2325 >> 1] = 770;
 HEAP16[$8323 >> 1] = 271;
 HEAP16[$8324 >> 1] = 214;
 HEAP16[$8325 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2324, $2325);
 $30728 = $2326;
 HEAP32[$30728 >> 2] = 13632258;
 HEAP32[$30728 + 4 >> 2] = 5832918;
 HEAP32[$8326 >> 2] = 63422;
 HEAP16[$2327 >> 1] = 770;
 HEAP16[$8327 >> 1] = 276;
 HEAP16[$8328 >> 1] = 5;
 HEAP16[$8329 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2326, $2327);
 $30732 = $2328;
 HEAP32[$30732 >> 2] = 13632258;
 HEAP32[$30732 + 4 >> 2] = 5832918;
 HEAP32[$8330 >> 2] = 63422;
 HEAP16[$2329 >> 1] = 979;
 HEAP16[$8331 >> 1] = 276;
 HEAP16[$8332 >> 1] = 5;
 HEAP16[$8333 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2328, $2329);
 $30736 = $2330;
 HEAP32[$30736 >> 2] = 13632258;
 HEAP32[$30736 + 4 >> 2] = 5832918;
 HEAP32[$8334 >> 2] = 63422;
 HEAP16[$2331 >> 1] = 770;
 HEAP16[$8335 >> 1] = 292;
 HEAP16[$8336 >> 1] = 214;
 HEAP16[$8337 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2330, $2331);
 $30740 = $2332;
 HEAP32[$30740 >> 2] = 13632258;
 HEAP32[$30740 + 4 >> 2] = 5832918;
 HEAP32[$8338 >> 2] = 63422;
 HEAP16[$2333 >> 1] = 770;
 HEAP16[$8339 >> 1] = 208;
 HEAP16[$8340 >> 1] = 214;
 HEAP16[$8341 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2332, $2333);
 $30744 = $2334;
 HEAP32[$30744 >> 2] = 13632258;
 HEAP32[$30744 + 4 >> 2] = 5832918;
 HEAP32[$8342 >> 2] = 63422;
 HEAP16[$2335 >> 1] = 770;
 HEAP16[$8343 >> 1] = 213;
 HEAP16[$8344 >> 1] = 5;
 HEAP16[$8345 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2334, $2335);
 $30748 = $2336;
 HEAP32[$30748 >> 2] = 13632258;
 HEAP32[$30748 + 4 >> 2] = 5832918;
 HEAP32[$8346 >> 2] = 63422;
 HEAP16[$2337 >> 1] = 979;
 HEAP16[$8347 >> 1] = 213;
 HEAP16[$8348 >> 1] = 5;
 HEAP16[$8349 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2336, $2337);
 $30752 = $2338;
 HEAP32[$30752 >> 2] = 13632258;
 HEAP32[$30752 + 4 >> 2] = 5832918;
 HEAP32[$8350 >> 2] = 63422;
 HEAP16[$2339 >> 1] = 770;
 HEAP16[$8351 >> 1] = 229;
 HEAP16[$8352 >> 1] = 214;
 HEAP16[$8353 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2338, $2339);
 $30756 = $2340;
 HEAP32[$30756 >> 2] = 13632258;
 HEAP32[$30756 + 4 >> 2] = 5832918;
 HEAP32[$8354 >> 2] = 63422;
 HEAP16[$2341 >> 1] = 770;
 HEAP16[$8355 >> 1] = 234;
 HEAP16[$8356 >> 1] = 5;
 HEAP16[$8357 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2340, $2341);
 $30760 = $2342;
 HEAP32[$30760 >> 2] = 13632258;
 HEAP32[$30760 + 4 >> 2] = 5832918;
 HEAP32[$8358 >> 2] = 63422;
 HEAP16[$2343 >> 1] = 979;
 HEAP16[$8359 >> 1] = 234;
 HEAP16[$8360 >> 1] = 5;
 HEAP16[$8361 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2342, $2343);
 $30764 = $2344;
 HEAP32[$30764 >> 2] = 13632258;
 HEAP32[$30764 + 4 >> 2] = 5832918;
 HEAP32[$8362 >> 2] = 63422;
 HEAP16[$2345 >> 1] = 770;
 HEAP16[$8363 >> 1] = 250;
 HEAP16[$8364 >> 1] = 214;
 HEAP16[$8365 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2344, $2345);
 $30768 = $2346;
 HEAP32[$30768 >> 2] = 13632258;
 HEAP32[$30768 + 4 >> 2] = 5832918;
 HEAP32[$8366 >> 2] = 63422;
 HEAP16[$2347 >> 1] = 770;
 HEAP16[$8367 >> 1] = 255;
 HEAP16[$8368 >> 1] = 5;
 HEAP16[$8369 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2346, $2347);
 $30772 = $2348;
 HEAP32[$30772 >> 2] = 13632258;
 HEAP32[$30772 + 4 >> 2] = 5832918;
 HEAP32[$8370 >> 2] = 63422;
 HEAP16[$2349 >> 1] = 979;
 HEAP16[$8371 >> 1] = 255;
 HEAP16[$8372 >> 1] = 5;
 HEAP16[$8373 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2348, $2349);
 $30776 = $2350;
 HEAP32[$30776 >> 2] = 13632258;
 HEAP32[$30776 + 4 >> 2] = 5832918;
 HEAP32[$8374 >> 2] = 63422;
 HEAP16[$2351 >> 1] = 770;
 HEAP16[$8375 >> 1] = 271;
 HEAP16[$8376 >> 1] = 214;
 HEAP16[$8377 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2350, $2351);
 $30780 = $2352;
 HEAP32[$30780 >> 2] = 13632258;
 HEAP32[$30780 + 4 >> 2] = 5832918;
 HEAP32[$8378 >> 2] = 63422;
 HEAP16[$2353 >> 1] = 770;
 HEAP16[$8379 >> 1] = 276;
 HEAP16[$8380 >> 1] = 5;
 HEAP16[$8381 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2352, $2353);
 $30784 = $2354;
 HEAP32[$30784 >> 2] = 13632258;
 HEAP32[$30784 + 4 >> 2] = 5832918;
 HEAP32[$8382 >> 2] = 63422;
 HEAP16[$2355 >> 1] = 979;
 HEAP16[$8383 >> 1] = 276;
 HEAP16[$8384 >> 1] = 5;
 HEAP16[$8385 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2354, $2355);
 $30788 = $2356;
 HEAP32[$30788 >> 2] = 13632258;
 HEAP32[$30788 + 4 >> 2] = 5832918;
 HEAP32[$8386 >> 2] = 63422;
 HEAP16[$2357 >> 1] = 770;
 HEAP16[$8387 >> 1] = 292;
 HEAP16[$8388 >> 1] = 214;
 HEAP16[$8389 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2356, $2357);
 $30792 = $2358;
 HEAP32[$30792 >> 2] = 13632258;
 HEAP32[$30792 + 4 >> 2] = 7864534;
 HEAP32[$8390 >> 2] = 63422;
 HEAP16[$2359 >> 1] = 770;
 HEAP16[$8391 >> 1] = 208;
 HEAP16[$8392 >> 1] = 214;
 HEAP16[$8393 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2358, $2359);
 $30796 = $2360;
 HEAP32[$30796 >> 2] = 13632258;
 HEAP32[$30796 + 4 >> 2] = 7864534;
 HEAP32[$8394 >> 2] = 63422;
 HEAP16[$2361 >> 1] = 770;
 HEAP16[$8395 >> 1] = 213;
 HEAP16[$8396 >> 1] = 5;
 HEAP16[$8397 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2360, $2361);
 $30800 = $2362;
 HEAP32[$30800 >> 2] = 13632258;
 HEAP32[$30800 + 4 >> 2] = 7864534;
 HEAP32[$8398 >> 2] = 63422;
 HEAP16[$2363 >> 1] = 979;
 HEAP16[$8399 >> 1] = 213;
 HEAP16[$8400 >> 1] = 5;
 HEAP16[$8401 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2362, $2363);
 $30804 = $2364;
 HEAP32[$30804 >> 2] = 13632258;
 HEAP32[$30804 + 4 >> 2] = 7864534;
 HEAP32[$8402 >> 2] = 63422;
 HEAP16[$2365 >> 1] = 770;
 HEAP16[$8403 >> 1] = 229;
 HEAP16[$8404 >> 1] = 214;
 HEAP16[$8405 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2364, $2365);
 $30808 = $2366;
 HEAP32[$30808 >> 2] = 13632258;
 HEAP32[$30808 + 4 >> 2] = 7864534;
 HEAP32[$8406 >> 2] = 63422;
 HEAP16[$2367 >> 1] = 770;
 HEAP16[$8407 >> 1] = 234;
 HEAP16[$8408 >> 1] = 5;
 HEAP16[$8409 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2366, $2367);
 $30812 = $2368;
 HEAP32[$30812 >> 2] = 13632258;
 HEAP32[$30812 + 4 >> 2] = 7864534;
 HEAP32[$8410 >> 2] = 63422;
 HEAP16[$2369 >> 1] = 979;
 HEAP16[$8411 >> 1] = 234;
 HEAP16[$8412 >> 1] = 5;
 HEAP16[$8413 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2368, $2369);
 $30816 = $2370;
 HEAP32[$30816 >> 2] = 13632258;
 HEAP32[$30816 + 4 >> 2] = 7864534;
 HEAP32[$8414 >> 2] = 63422;
 HEAP16[$2371 >> 1] = 770;
 HEAP16[$8415 >> 1] = 250;
 HEAP16[$8416 >> 1] = 214;
 HEAP16[$8417 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2370, $2371);
 $30820 = $2372;
 HEAP32[$30820 >> 2] = 13632258;
 HEAP32[$30820 + 4 >> 2] = 7864534;
 HEAP32[$8418 >> 2] = 63422;
 HEAP16[$2373 >> 1] = 770;
 HEAP16[$8419 >> 1] = 255;
 HEAP16[$8420 >> 1] = 5;
 HEAP16[$8421 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2372, $2373);
 $30824 = $2374;
 HEAP32[$30824 >> 2] = 13632258;
 HEAP32[$30824 + 4 >> 2] = 7864534;
 HEAP32[$8422 >> 2] = 63422;
 HEAP16[$2375 >> 1] = 979;
 HEAP16[$8423 >> 1] = 255;
 HEAP16[$8424 >> 1] = 5;
 HEAP16[$8425 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2374, $2375);
 $30828 = $2376;
 HEAP32[$30828 >> 2] = 13632258;
 HEAP32[$30828 + 4 >> 2] = 7864534;
 HEAP32[$8426 >> 2] = 63422;
 HEAP16[$2377 >> 1] = 770;
 HEAP16[$8427 >> 1] = 271;
 HEAP16[$8428 >> 1] = 214;
 HEAP16[$8429 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2376, $2377);
 $30832 = $2378;
 HEAP32[$30832 >> 2] = 13632258;
 HEAP32[$30832 + 4 >> 2] = 7864534;
 HEAP32[$8430 >> 2] = 63422;
 HEAP16[$2379 >> 1] = 770;
 HEAP16[$8431 >> 1] = 276;
 HEAP16[$8432 >> 1] = 5;
 HEAP16[$8433 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2378, $2379);
 $30836 = $2380;
 HEAP32[$30836 >> 2] = 13632258;
 HEAP32[$30836 + 4 >> 2] = 7864534;
 HEAP32[$8434 >> 2] = 63422;
 HEAP16[$2381 >> 1] = 979;
 HEAP16[$8435 >> 1] = 276;
 HEAP16[$8436 >> 1] = 5;
 HEAP16[$8437 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2380, $2381);
 $30840 = $2382;
 HEAP32[$30840 >> 2] = 13632258;
 HEAP32[$30840 + 4 >> 2] = 7864534;
 HEAP32[$8438 >> 2] = 63422;
 HEAP16[$2383 >> 1] = 770;
 HEAP16[$8439 >> 1] = 292;
 HEAP16[$8440 >> 1] = 214;
 HEAP16[$8441 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2382, $2383);
 $30844 = $2384;
 HEAP32[$30844 >> 2] = 13632258;
 HEAP32[$30844 + 4 >> 2] = 7864534;
 HEAP32[$8442 >> 2] = 63422;
 HEAP16[$2385 >> 1] = 770;
 HEAP16[$8443 >> 1] = 297;
 HEAP16[$8444 >> 1] = 5;
 HEAP16[$8445 >> 1] = 26;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2384, $2385);
 $30848 = $2386;
 HEAP32[$30848 >> 2] = 13632258;
 HEAP32[$30848 + 4 >> 2] = 7864534;
 HEAP32[$8446 >> 2] = 63422;
 HEAP16[$2387 >> 1] = 979;
 HEAP16[$8447 >> 1] = 297;
 HEAP16[$8448 >> 1] = 5;
 HEAP16[$8449 >> 1] = 26;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2386, $2387);
 $30852 = $2388;
 HEAP32[$30852 >> 2] = 13632258;
 HEAP32[$30852 + 4 >> 2] = 7864534;
 HEAP32[$8450 >> 2] = 63422;
 HEAP16[$2389 >> 1] = 770;
 HEAP16[$8451 >> 1] = 323;
 HEAP16[$8452 >> 1] = 214;
 HEAP16[$8453 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2388, $2389);
 $30856 = $2390;
 HEAP32[$30856 >> 2] = 29950174;
 HEAP32[$30856 + 4 >> 2] = 10027555;
 HEAP32[$8454 >> 2] = 63422;
 HEAP16[$2391 >> 1] = 222;
 HEAP16[$8455 >> 1] = 457;
 HEAP16[$8456 >> 1] = 3;
 HEAP16[$8457 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2390, $2391);
 $30860 = $2392;
 HEAP32[$30860 >> 2] = 29950174;
 HEAP32[$30860 + 4 >> 2] = 10027555;
 HEAP32[$8458 >> 2] = 63422;
 HEAP16[$2393 >> 1] = 437;
 HEAP16[$8459 >> 1] = 457;
 HEAP16[$8460 >> 1] = 6;
 HEAP16[$8461 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2392, $2393);
 $30864 = $2394;
 HEAP32[$30864 >> 2] = 29950174;
 HEAP32[$30864 + 4 >> 2] = 10027555;
 HEAP32[$8462 >> 2] = 63422;
 HEAP16[$2395 >> 1] = 766;
 HEAP16[$8463 >> 1] = 457;
 HEAP16[$8464 >> 1] = 3;
 HEAP16[$8465 >> 1] = 153;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2394, $2395);
 $30868 = $2396;
 HEAP32[$30868 >> 2] = 29950174;
 HEAP32[$30868 + 4 >> 2] = 10617379;
 HEAP32[$8466 >> 2] = 63422;
 HEAP16[$2397 >> 1] = 222;
 HEAP16[$8467 >> 1] = 457;
 HEAP16[$8468 >> 1] = 3;
 HEAP16[$8469 >> 1] = 162;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2396, $2397);
 $30872 = $2398;
 HEAP32[$30872 >> 2] = 29950174;
 HEAP32[$30872 + 4 >> 2] = 10617379;
 HEAP32[$8470 >> 2] = 63422;
 HEAP16[$2399 >> 1] = 437;
 HEAP16[$8471 >> 1] = 457;
 HEAP16[$8472 >> 1] = 6;
 HEAP16[$8473 >> 1] = 162;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2398, $2399);
 $30876 = $2400;
 HEAP32[$30876 >> 2] = 29950174;
 HEAP32[$30876 + 4 >> 2] = 10617379;
 HEAP32[$8474 >> 2] = 63422;
 HEAP16[$2401 >> 1] = 766;
 HEAP16[$8475 >> 1] = 457;
 HEAP16[$8476 >> 1] = 3;
 HEAP16[$8477 >> 1] = 162;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2400, $2401);
 $30880 = $2402;
 HEAP32[$30880 >> 2] = 29950174;
 HEAP32[$30880 + 4 >> 2] = 10617379;
 HEAP32[$8478 >> 2] = 63422;
 HEAP16[$2403 >> 1] = 222;
 HEAP16[$8479 >> 1] = 457;
 HEAP16[$8480 >> 1] = 3;
 HEAP16[$8481 >> 1] = 162;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2402, $2403);
 $30884 = $2404;
 HEAP32[$30884 >> 2] = 29950174;
 HEAP32[$30884 + 4 >> 2] = 10617379;
 HEAP32[$8482 >> 2] = 63422;
 HEAP16[$2405 >> 1] = 437;
 HEAP16[$8483 >> 1] = 457;
 HEAP16[$8484 >> 1] = 6;
 HEAP16[$8485 >> 1] = 162;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2404, $2405);
 $30888 = $2406;
 HEAP32[$30888 >> 2] = 29950174;
 HEAP32[$30888 + 4 >> 2] = 10617379;
 HEAP32[$8486 >> 2] = 63422;
 HEAP16[$2407 >> 1] = 766;
 HEAP16[$8487 >> 1] = 457;
 HEAP16[$8488 >> 1] = 3;
 HEAP16[$8489 >> 1] = 162;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2406, $2407);
 $30892 = $2408;
 HEAP32[$30892 >> 2] = 15401182;
 HEAP32[$30892 + 4 >> 2] = 12059171;
 HEAP32[$8490 >> 2] = 63422;
 HEAP16[$2409 >> 1] = 222;
 HEAP16[$8491 >> 1] = 235;
 HEAP16[$8492 >> 1] = 3;
 HEAP16[$8493 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2408, $2409);
 $30896 = $2410;
 HEAP32[$30896 >> 2] = 15401182;
 HEAP32[$30896 + 4 >> 2] = 12059171;
 HEAP32[$8494 >> 2] = 63422;
 HEAP16[$2411 >> 1] = 437;
 HEAP16[$8495 >> 1] = 235;
 HEAP16[$8496 >> 1] = 6;
 HEAP16[$8497 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2410, $2411);
 $30900 = $2412;
 HEAP32[$30900 >> 2] = 15401182;
 HEAP32[$30900 + 4 >> 2] = 12059171;
 HEAP32[$8498 >> 2] = 63422;
 HEAP16[$2413 >> 1] = 766;
 HEAP16[$8499 >> 1] = 235;
 HEAP16[$8500 >> 1] = 3;
 HEAP16[$8501 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2412, $2413);
 $30904 = $2414;
 HEAP32[$30904 >> 2] = 15401182;
 HEAP32[$30904 + 4 >> 2] = 12059171;
 HEAP32[$8502 >> 2] = 63422;
 HEAP16[$2415 >> 1] = 222;
 HEAP16[$8503 >> 1] = 416;
 HEAP16[$8504 >> 1] = 547;
 HEAP16[$8505 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2414, $2415);
 $30908 = $2416;
 HEAP32[$30908 >> 2] = 15401182;
 HEAP32[$30908 + 4 >> 2] = 12059171;
 HEAP32[$8506 >> 2] = 63422;
 HEAP16[$2417 >> 1] = 222;
 HEAP16[$8507 >> 1] = 235;
 HEAP16[$8508 >> 1] = 3;
 HEAP16[$8509 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2416, $2417);
 $30912 = $2418;
 HEAP32[$30912 >> 2] = 15401182;
 HEAP32[$30912 + 4 >> 2] = 12059171;
 HEAP32[$8510 >> 2] = 63422;
 HEAP16[$2419 >> 1] = 437;
 HEAP16[$8511 >> 1] = 235;
 HEAP16[$8512 >> 1] = 6;
 HEAP16[$8513 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2418, $2419);
 $30916 = $2420;
 HEAP32[$30916 >> 2] = 15401182;
 HEAP32[$30916 + 4 >> 2] = 12059171;
 HEAP32[$8514 >> 2] = 63422;
 HEAP16[$2421 >> 1] = 766;
 HEAP16[$8515 >> 1] = 235;
 HEAP16[$8516 >> 1] = 3;
 HEAP16[$8517 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2420, $2421);
 $30920 = $2422;
 HEAP32[$30920 >> 2] = 15401182;
 HEAP32[$30920 + 4 >> 2] = 12059171;
 HEAP32[$8518 >> 2] = 63422;
 HEAP16[$2423 >> 1] = 222;
 HEAP16[$8519 >> 1] = 416;
 HEAP16[$8520 >> 1] = 547;
 HEAP16[$8521 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2422, $2423);
 $30924 = $2424;
 HEAP32[$30924 >> 2] = 29753556;
 HEAP32[$30924 + 4 >> 2] = 10814223;
 HEAP8[$8522 >> 0] = -52;
 HEAP16[$8523 >> 1] = 212;
 HEAP16[$8524 >> 1] = 419;
 HEAP16[$2425 >> 1] = 0;
 HEAP16[$8525 >> 1] = 0;
 HEAP16[$8526 >> 1] = 1024;
 HEAP16[$8527 >> 1] = 768;
 __ZN14Front_JS_Natif4drawERK9RDPScrBltRK4Rect($front, $2424, $2425);
 $30928 = $2426;
 HEAP32[$30928 >> 2] = 15401182;
 HEAP32[$30928 + 4 >> 2] = 14352931;
 HEAP32[$8528 >> 2] = 63422;
 HEAP16[$2427 >> 1] = 222;
 HEAP16[$8529 >> 1] = 235;
 HEAP16[$8530 >> 1] = 3;
 HEAP16[$8531 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2426, $2427);
 $30932 = $2428;
 HEAP32[$30932 >> 2] = 15401182;
 HEAP32[$30932 + 4 >> 2] = 14352931;
 HEAP32[$8532 >> 2] = 63422;
 HEAP16[$2429 >> 1] = 437;
 HEAP16[$8533 >> 1] = 235;
 HEAP16[$8534 >> 1] = 6;
 HEAP16[$8535 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2428, $2429);
 $30936 = $2430;
 HEAP32[$30936 >> 2] = 15401182;
 HEAP32[$30936 + 4 >> 2] = 14352931;
 HEAP32[$8536 >> 2] = 63422;
 HEAP16[$2431 >> 1] = 766;
 HEAP16[$8537 >> 1] = 235;
 HEAP16[$8538 >> 1] = 3;
 HEAP16[$8539 >> 1] = 181;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2430, $2431);
 $30940 = $2432;
 HEAP32[$30940 >> 2] = 15401182;
 HEAP32[$30940 + 4 >> 2] = 14352931;
 HEAP32[$8540 >> 2] = 63422;
 HEAP16[$2433 >> 1] = 222;
 HEAP16[$8541 >> 1] = 416;
 HEAP16[$8542 >> 1] = 547;
 HEAP16[$8543 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2432, $2433);
 $30944 = $2434;
 HEAP32[$30944 >> 2] = 15401182;
 HEAP32[$30944 + 4 >> 2] = 14352931;
 HEAP32[$8544 >> 2] = 63422;
 HEAP16[$2435 >> 1] = 222;
 HEAP16[$8545 >> 1] = 419;
 HEAP16[$8546 >> 1] = 3;
 HEAP16[$8547 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2434, $2435);
 $30948 = $2436;
 HEAP32[$30948 >> 2] = 15401182;
 HEAP32[$30948 + 4 >> 2] = 14352931;
 HEAP32[$8548 >> 2] = 63422;
 HEAP16[$2437 >> 1] = 531;
 HEAP16[$8549 >> 1] = 419;
 HEAP16[$8550 >> 1] = 238;
 HEAP16[$8551 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2436, $2437);
 $30952 = $2438;
 HEAP32[$30952 >> 2] = 15401182;
 HEAP32[$30952 + 4 >> 2] = 14352931;
 HEAP32[$8552 >> 2] = 63422;
 HEAP16[$2439 >> 1] = 222;
 HEAP16[$8553 >> 1] = 451;
 HEAP16[$8554 >> 1] = 547;
 HEAP16[$8555 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2438, $2439);
 $30956 = $2440;
 HEAP32[$30956 >> 2] = 43909331;
 HEAP32[$30956 + 4 >> 2] = 656145;
 HEAP32[$8556 >> 2] = 65535;
 HEAP16[$2441 >> 1] = 211;
 HEAP16[$8557 >> 1] = 670;
 HEAP16[$8558 >> 1] = 785;
 HEAP16[$8559 >> 1] = 10;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2440, $2441);
 $30960 = $2442;
 HEAP32[$30960 >> 2] = 27722734;
 HEAP32[$30960 + 4 >> 2] = 15794192;
 HEAP8[$8560 >> 0] = -16;
 HEAP32[$8561 >> 2] = 65535;
 HEAP32[$8562 >> 2] = 54937;
 HEAP8[$8563 >> 0] = 1;
 HEAP8[$8564 >> 0] = 1;
 HEAP8[$8565 >> 0] = 3;
 HEAP8[$8566 >> 0] = -86;
 HEAP32[$8567 >> 2] = 0;
 HEAP16[$8567 + 4 >> 1] = 0;
 HEAP8[$8567 + 6 >> 0] = 0;
 HEAP16[$2443 >> 1] = 1006;
 HEAP16[$8568 >> 1] = 423;
 HEAP16[$8569 >> 1] = 16;
 HEAP16[$8570 >> 1] = 241;
 __ZN14Front_JS_Natif4drawERK9RDPPatBltRK4Rect($front, $2442, $2443);
 $30964 = $2444;
 HEAP32[$30964 >> 2] = 11600893;
 HEAP32[$30964 + 4 >> 2] = 16121857;
 HEAP32[$8571 >> 2] = 16904;
 HEAP16[$2445 >> 1] = 1021;
 HEAP16[$8572 >> 1] = 177;
 HEAP16[$8573 >> 1] = 1;
 HEAP16[$8574 >> 1] = 246;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2444, $2445);
 $30968 = $2446;
 HEAP32[$30968 >> 2] = 27657198;
 HEAP32[$30968 + 4 >> 2] = 65551;
 HEAP32[$8575 >> 2] = 16904;
 HEAP16[$2447 >> 1] = 1006;
 HEAP16[$8576 >> 1] = 422;
 HEAP16[$8577 >> 1] = 15;
 HEAP16[$8578 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2446, $2447);
 $30972 = $2448;
 HEAP32[$30972 >> 2] = 11600878;
 HEAP32[$30972 + 4 >> 2] = 16056321;
 HEAP32[$8579 >> 2] = 54937;
 HEAP16[$2449 >> 1] = 1006;
 HEAP16[$8580 >> 1] = 177;
 HEAP16[$8581 >> 1] = 1;
 HEAP16[$8582 >> 1] = 245;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2448, $2449);
 $30976 = $2450;
 HEAP32[$30976 >> 2] = 11600879;
 HEAP32[$30976 + 4 >> 2] = 65550;
 HEAP32[$8583 >> 2] = 54937;
 HEAP16[$2451 >> 1] = 1007;
 HEAP16[$8584 >> 1] = 177;
 HEAP16[$8585 >> 1] = 14;
 HEAP16[$8586 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2450, $2451);
 $30980 = $2452;
 HEAP32[$30980 >> 2] = 11666428;
 HEAP32[$30980 + 4 >> 2] = 15990785;
 HEAP32[$8587 >> 2] = 33808;
 HEAP16[$2453 >> 1] = 1020;
 HEAP16[$8588 >> 1] = 178;
 HEAP16[$8589 >> 1] = 1;
 HEAP16[$8590 >> 1] = 244;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2452, $2453);
 $30984 = $2454;
 HEAP32[$30984 >> 2] = 27591663;
 HEAP32[$30984 + 4 >> 2] = 65549;
 HEAP32[$8591 >> 2] = 33808;
 HEAP16[$2455 >> 1] = 1007;
 HEAP16[$8592 >> 1] = 421;
 HEAP16[$8593 >> 1] = 13;
 HEAP16[$8594 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2454, $2455);
 $30988 = $2456;
 HEAP32[$30988 >> 2] = 11666415;
 HEAP32[$30988 + 4 >> 2] = 15925249;
 HEAP32[$8595 >> 2] = 65535;
 HEAP16[$2457 >> 1] = 1007;
 HEAP16[$8596 >> 1] = 178;
 HEAP16[$8597 >> 1] = 1;
 HEAP16[$8598 >> 1] = 243;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2456, $2457);
 $30992 = $2458;
 HEAP32[$30992 >> 2] = 11666416;
 HEAP32[$30992 + 4 >> 2] = 65548;
 HEAP32[$8599 >> 2] = 65535;
 HEAP16[$2459 >> 1] = 1008;
 HEAP16[$8600 >> 1] = 178;
 HEAP16[$8601 >> 1] = 12;
 HEAP16[$8602 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2458, $2459);
 $30996 = $2460;
 HEAP32[$30996 >> 2] = 11731952;
 HEAP32[$30996 + 4 >> 2] = 15859724;
 HEAP32[$8603 >> 2] = 54937;
 HEAP16[$2461 >> 1] = 1008;
 HEAP16[$8604 >> 1] = 179;
 HEAP16[$8605 >> 1] = 12;
 HEAP16[$8606 >> 1] = 242;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2460, $2461);
 $31000 = $2462;
 HEAP32[$31000 >> 2] = 27722734;
 HEAP32[$31000 + 4 >> 2] = 15794192;
 HEAP8[$8607 >> 0] = -16;
 HEAP32[$8608 >> 2] = 65535;
 HEAP32[$8609 >> 2] = 54937;
 HEAP8[$8610 >> 0] = 1;
 HEAP8[$8611 >> 0] = 1;
 HEAP8[$8612 >> 0] = 3;
 HEAP8[$8613 >> 0] = -86;
 HEAP32[$8614 >> 2] = 0;
 HEAP16[$8614 + 4 >> 1] = 0;
 HEAP8[$8614 + 6 >> 0] = 0;
 HEAP16[$2463 >> 1] = 1006;
 HEAP16[$8615 >> 1] = 423;
 HEAP16[$8616 >> 1] = 16;
 HEAP16[$8617 >> 1] = 241;
 __ZN14Front_JS_Natif4drawERK9RDPPatBltRK4Rect($front, $2462, $2463);
 $31004 = $2464;
 HEAP32[$31004 >> 2] = 11600893;
 HEAP32[$31004 + 4 >> 2] = 16121857;
 HEAP32[$8618 >> 2] = 16904;
 HEAP16[$2465 >> 1] = 1021;
 HEAP16[$8619 >> 1] = 177;
 HEAP16[$8620 >> 1] = 1;
 HEAP16[$8621 >> 1] = 246;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2464, $2465);
 $31008 = $2466;
 HEAP32[$31008 >> 2] = 27657198;
 HEAP32[$31008 + 4 >> 2] = 65551;
 HEAP32[$8622 >> 2] = 16904;
 HEAP16[$2467 >> 1] = 1006;
 HEAP16[$8623 >> 1] = 422;
 HEAP16[$8624 >> 1] = 15;
 HEAP16[$8625 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2466, $2467);
 $31012 = $2468;
 HEAP32[$31012 >> 2] = 11600878;
 HEAP32[$31012 + 4 >> 2] = 16056321;
 HEAP32[$8626 >> 2] = 54937;
 HEAP16[$2469 >> 1] = 1006;
 HEAP16[$8627 >> 1] = 177;
 HEAP16[$8628 >> 1] = 1;
 HEAP16[$8629 >> 1] = 245;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2468, $2469);
 $31016 = $2470;
 HEAP32[$31016 >> 2] = 11600879;
 HEAP32[$31016 + 4 >> 2] = 65550;
 HEAP32[$8630 >> 2] = 54937;
 HEAP16[$2471 >> 1] = 1007;
 HEAP16[$8631 >> 1] = 177;
 HEAP16[$8632 >> 1] = 14;
 HEAP16[$8633 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2470, $2471);
 $31020 = $2472;
 HEAP32[$31020 >> 2] = 11666428;
 HEAP32[$31020 + 4 >> 2] = 15990785;
 HEAP32[$8634 >> 2] = 33808;
 HEAP16[$2473 >> 1] = 1020;
 HEAP16[$8635 >> 1] = 178;
 HEAP16[$8636 >> 1] = 1;
 HEAP16[$8637 >> 1] = 244;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2472, $2473);
 $31024 = $2474;
 HEAP32[$31024 >> 2] = 27591663;
 HEAP32[$31024 + 4 >> 2] = 65549;
 HEAP32[$8638 >> 2] = 33808;
 HEAP16[$2475 >> 1] = 1007;
 HEAP16[$8639 >> 1] = 421;
 HEAP16[$8640 >> 1] = 13;
 HEAP16[$8641 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2474, $2475);
 $31028 = $2476;
 HEAP32[$31028 >> 2] = 11666415;
 HEAP32[$31028 + 4 >> 2] = 15925249;
 HEAP32[$8642 >> 2] = 65535;
 HEAP16[$2477 >> 1] = 1007;
 HEAP16[$8643 >> 1] = 178;
 HEAP16[$8644 >> 1] = 1;
 HEAP16[$8645 >> 1] = 243;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2476, $2477);
 $31032 = $2478;
 HEAP32[$31032 >> 2] = 11666416;
 HEAP32[$31032 + 4 >> 2] = 65548;
 HEAP32[$8646 >> 2] = 65535;
 HEAP16[$2479 >> 1] = 1008;
 HEAP16[$8647 >> 1] = 178;
 HEAP16[$8648 >> 1] = 12;
 HEAP16[$8649 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2478, $2479);
 $31036 = $2480;
 HEAP32[$31036 >> 2] = 11731952;
 HEAP32[$31036 + 4 >> 2] = 15859724;
 HEAP32[$8650 >> 2] = 54937;
 HEAP16[$2481 >> 1] = 1008;
 HEAP16[$8651 >> 1] = 179;
 HEAP16[$8652 >> 1] = 12;
 HEAP16[$8653 >> 1] = 242;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2480, $2481);
 $31040 = $2482;
 HEAP32[$31040 >> 2] = 40632531;
 HEAP32[$31040 + 4 >> 2] = 3277585;
 HEAP32[$8654 >> 2] = 54938;
 HEAP16[$2483 >> 1] = 211;
 HEAP16[$8655 >> 1] = 620;
 HEAP16[$8656 >> 1] = 785;
 HEAP16[$8657 >> 1] = 50;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2482, $2483);
 $31044 = $2484;
 HEAP32[$31044 >> 2] = 43253972;
 HEAP32[$31044 + 4 >> 2] = 590607;
 HEAP32[$8658 >> 2] = 63422;
 HEAP16[$2485 >> 1] = 212;
 HEAP16[$8659 >> 1] = 660;
 HEAP16[$8660 >> 1] = 783;
 HEAP16[$8661 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2484, $2485);
 $31048 = $2486;
 HEAP32[$31048 >> 2] = 32243934;
 HEAP32[$31048 + 4 >> 2] = 11010595;
 HEAP32[$8662 >> 2] = 63422;
 HEAP16[$2487 >> 1] = 222;
 HEAP16[$8663 >> 1] = 492;
 HEAP16[$8664 >> 1] = 3;
 HEAP16[$8665 >> 1] = 168;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2486, $2487);
 $31052 = $2488;
 HEAP32[$31052 >> 2] = 32243934;
 HEAP32[$31052 + 4 >> 2] = 11010595;
 HEAP32[$8666 >> 2] = 63422;
 HEAP16[$2489 >> 1] = 437;
 HEAP16[$8667 >> 1] = 492;
 HEAP16[$8668 >> 1] = 6;
 HEAP16[$8669 >> 1] = 168;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2488, $2489);
 $31056 = $2490;
 HEAP32[$31056 >> 2] = 32243934;
 HEAP32[$31056 + 4 >> 2] = 11010595;
 HEAP32[$8670 >> 2] = 63422;
 HEAP16[$2491 >> 1] = 766;
 HEAP16[$8671 >> 1] = 492;
 HEAP16[$8672 >> 1] = 3;
 HEAP16[$8673 >> 1] = 168;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2490, $2491);
 $31060 = $2492;
 HEAP32[$31060 >> 2] = 27395054;
 HEAP32[$31060 + 4 >> 2] = 16121872;
 HEAP8[$8674 >> 0] = -16;
 HEAP32[$8675 >> 2] = 65535;
 HEAP32[$8676 >> 2] = 54937;
 HEAP8[$8677 >> 0] = 1;
 HEAP8[$8678 >> 0] = 1;
 HEAP8[$8679 >> 0] = 3;
 HEAP8[$8680 >> 0] = -86;
 HEAP32[$8681 >> 2] = 0;
 HEAP16[$8681 + 4 >> 1] = 0;
 HEAP8[$8681 + 6 >> 0] = 0;
 HEAP16[$2493 >> 1] = 1006;
 HEAP16[$8682 >> 1] = 418;
 HEAP16[$8683 >> 1] = 16;
 HEAP16[$8684 >> 1] = 246;
 __ZN14Front_JS_Natif4drawERK9RDPPatBltRK4Rect($front, $2492, $2493);
 $31064 = $2494;
 HEAP32[$31064 >> 2] = 11600893;
 HEAP32[$31064 + 4 >> 2] = 15794177;
 HEAP32[$8685 >> 2] = 16904;
 HEAP16[$2495 >> 1] = 1021;
 HEAP16[$8686 >> 1] = 177;
 HEAP16[$8687 >> 1] = 1;
 HEAP16[$8688 >> 1] = 241;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2494, $2495);
 $31068 = $2496;
 HEAP32[$31068 >> 2] = 27329518;
 HEAP32[$31068 + 4 >> 2] = 65551;
 HEAP32[$8689 >> 2] = 16904;
 HEAP16[$2497 >> 1] = 1006;
 HEAP16[$8690 >> 1] = 417;
 HEAP16[$8691 >> 1] = 15;
 HEAP16[$8692 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2496, $2497);
 $31072 = $2498;
 HEAP32[$31072 >> 2] = 11600878;
 HEAP32[$31072 + 4 >> 2] = 15728641;
 HEAP32[$8693 >> 2] = 54937;
 HEAP16[$2499 >> 1] = 1006;
 HEAP16[$8694 >> 1] = 177;
 HEAP16[$8695 >> 1] = 1;
 HEAP16[$8696 >> 1] = 240;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2498, $2499);
 $31076 = $2500;
 HEAP32[$31076 >> 2] = 11600879;
 HEAP32[$31076 + 4 >> 2] = 65550;
 HEAP32[$8697 >> 2] = 54937;
 HEAP16[$2501 >> 1] = 1007;
 HEAP16[$8698 >> 1] = 177;
 HEAP16[$8699 >> 1] = 14;
 HEAP16[$8700 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2500, $2501);
 $31080 = $2502;
 HEAP32[$31080 >> 2] = 11666428;
 HEAP32[$31080 + 4 >> 2] = 15663105;
 HEAP32[$8701 >> 2] = 33808;
 HEAP16[$2503 >> 1] = 1020;
 HEAP16[$8702 >> 1] = 178;
 HEAP16[$8703 >> 1] = 1;
 HEAP16[$8704 >> 1] = 239;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2502, $2503);
 $31084 = $2504;
 HEAP32[$31084 >> 2] = 27263983;
 HEAP32[$31084 + 4 >> 2] = 65549;
 HEAP32[$8705 >> 2] = 33808;
 HEAP16[$2505 >> 1] = 1007;
 HEAP16[$8706 >> 1] = 416;
 HEAP16[$8707 >> 1] = 13;
 HEAP16[$8708 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2504, $2505);
 $31088 = $2506;
 HEAP32[$31088 >> 2] = 11666415;
 HEAP32[$31088 + 4 >> 2] = 15597569;
 HEAP32[$8709 >> 2] = 65535;
 HEAP16[$2507 >> 1] = 1007;
 HEAP16[$8710 >> 1] = 178;
 HEAP16[$8711 >> 1] = 1;
 HEAP16[$8712 >> 1] = 238;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2506, $2507);
 $31092 = $2508;
 HEAP32[$31092 >> 2] = 11666416;
 HEAP32[$31092 + 4 >> 2] = 65548;
 HEAP32[$8713 >> 2] = 65535;
 HEAP16[$2509 >> 1] = 1008;
 HEAP16[$8714 >> 1] = 178;
 HEAP16[$8715 >> 1] = 12;
 HEAP16[$8716 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2508, $2509);
 $31096 = $2510;
 HEAP32[$31096 >> 2] = 11731952;
 HEAP32[$31096 + 4 >> 2] = 15532044;
 HEAP32[$8717 >> 2] = 54937;
 HEAP16[$2511 >> 1] = 1008;
 HEAP16[$8718 >> 1] = 179;
 HEAP16[$8719 >> 1] = 12;
 HEAP16[$8720 >> 1] = 237;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2510, $2511);
 $31100 = $2512;
 HEAP32[$31100 >> 2] = 27395054;
 HEAP32[$31100 + 4 >> 2] = 16121872;
 HEAP8[$8721 >> 0] = -16;
 HEAP32[$8722 >> 2] = 65535;
 HEAP32[$8723 >> 2] = 54937;
 HEAP8[$8724 >> 0] = 1;
 HEAP8[$8725 >> 0] = 1;
 HEAP8[$8726 >> 0] = 3;
 HEAP8[$8727 >> 0] = -86;
 HEAP32[$8728 >> 2] = 0;
 HEAP16[$8728 + 4 >> 1] = 0;
 HEAP8[$8728 + 6 >> 0] = 0;
 HEAP16[$2513 >> 1] = 1006;
 HEAP16[$8729 >> 1] = 418;
 HEAP16[$8730 >> 1] = 16;
 HEAP16[$8731 >> 1] = 246;
 __ZN14Front_JS_Natif4drawERK9RDPPatBltRK4Rect($front, $2512, $2513);
 $31104 = $2514;
 HEAP32[$31104 >> 2] = 11600893;
 HEAP32[$31104 + 4 >> 2] = 15794177;
 HEAP32[$8732 >> 2] = 16904;
 HEAP16[$2515 >> 1] = 1021;
 HEAP16[$8733 >> 1] = 177;
 HEAP16[$8734 >> 1] = 1;
 HEAP16[$8735 >> 1] = 241;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2514, $2515);
 $31108 = $2516;
 HEAP32[$31108 >> 2] = 27329518;
 HEAP32[$31108 + 4 >> 2] = 65551;
 HEAP32[$8736 >> 2] = 16904;
 HEAP16[$2517 >> 1] = 1006;
 HEAP16[$8737 >> 1] = 417;
 HEAP16[$8738 >> 1] = 15;
 HEAP16[$8739 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2516, $2517);
 $31112 = $2518;
 HEAP32[$31112 >> 2] = 11600878;
 HEAP32[$31112 + 4 >> 2] = 15728641;
 HEAP32[$8740 >> 2] = 54937;
 HEAP16[$2519 >> 1] = 1006;
 HEAP16[$8741 >> 1] = 177;
 HEAP16[$8742 >> 1] = 1;
 HEAP16[$8743 >> 1] = 240;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2518, $2519);
 $31116 = $2520;
 HEAP32[$31116 >> 2] = 11600879;
 HEAP32[$31116 + 4 >> 2] = 65550;
 HEAP32[$8744 >> 2] = 54937;
 HEAP16[$2521 >> 1] = 1007;
 HEAP16[$8745 >> 1] = 177;
 HEAP16[$8746 >> 1] = 14;
 HEAP16[$8747 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2520, $2521);
 $31120 = $2522;
 HEAP32[$31120 >> 2] = 11666428;
 HEAP32[$31120 + 4 >> 2] = 15663105;
 HEAP32[$8748 >> 2] = 33808;
 HEAP16[$2523 >> 1] = 1020;
 HEAP16[$8749 >> 1] = 178;
 HEAP16[$8750 >> 1] = 1;
 HEAP16[$8751 >> 1] = 239;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2522, $2523);
 $31124 = $2524;
 HEAP32[$31124 >> 2] = 27263983;
 HEAP32[$31124 + 4 >> 2] = 65549;
 HEAP32[$8752 >> 2] = 33808;
 HEAP16[$2525 >> 1] = 1007;
 HEAP16[$8753 >> 1] = 416;
 HEAP16[$8754 >> 1] = 13;
 HEAP16[$8755 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2524, $2525);
 $31128 = $2526;
 HEAP32[$31128 >> 2] = 11666415;
 HEAP32[$31128 + 4 >> 2] = 15597569;
 HEAP32[$8756 >> 2] = 65535;
 HEAP16[$2527 >> 1] = 1007;
 HEAP16[$8757 >> 1] = 178;
 HEAP16[$8758 >> 1] = 1;
 HEAP16[$8759 >> 1] = 238;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2526, $2527);
 $31132 = $2528;
 HEAP32[$31132 >> 2] = 11666416;
 HEAP32[$31132 + 4 >> 2] = 65548;
 HEAP32[$8760 >> 2] = 65535;
 HEAP16[$2529 >> 1] = 1008;
 HEAP16[$8761 >> 1] = 178;
 HEAP16[$8762 >> 1] = 12;
 HEAP16[$8763 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2528, $2529);
 $31136 = $2530;
 HEAP32[$31136 >> 2] = 11731952;
 HEAP32[$31136 + 4 >> 2] = 15532044;
 HEAP32[$8764 >> 2] = 54937;
 HEAP16[$2531 >> 1] = 1008;
 HEAP16[$8765 >> 1] = 179;
 HEAP16[$8766 >> 1] = 12;
 HEAP16[$8767 >> 1] = 237;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2530, $2531);
 $31140 = $2532;
 HEAP32[$31140 >> 2] = 4784130;
 HEAP32[$31140 + 4 >> 2] = 40173760;
 HEAP32[$8768 >> 2] = 65535;
 HEAP16[$2533 >> 1] = 2;
 HEAP16[$8769 >> 1] = 73;
 HEAP16[$8770 >> 1] = 192;
 HEAP16[$8771 >> 1] = 613;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2532, $2533);
 $31144 = $2534;
 HEAP32[$31144 >> 2] = 4784152;
 HEAP32[$31144 + 4 >> 2] = 1048746;
 HEAP32[$8772 >> 2] = 2349;
 HEAP16[$2535 >> 1] = 24;
 HEAP16[$8773 >> 1] = 73;
 HEAP16[$8774 >> 1] = 170;
 HEAP16[$8775 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2534, $2535);
 $31148 = $2536;
 HEAP32[$31148 >> 2] = 5832747;
 HEAP32[$31148 + 4 >> 2] = 1048606;
 HEAP32[$8776 >> 2] = 65535;
 HEAP16[$2537 >> 1] = 43;
 HEAP16[$8777 >> 1] = 89;
 HEAP16[$8778 >> 1] = 30;
 HEAP16[$8779 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2536, $2537);
 $31152 = $2538;
 HEAP32[$31152 >> 2] = 6094857;
 HEAP32[$31152 + 4 >> 2] = 524296;
 HEAP32[$8780 >> 2] = 65535;
 HEAP16[$2539 >> 1] = 9;
 HEAP16[$8781 >> 1] = 93;
 HEAP16[$8782 >> 1] = 8;
 HEAP16[$8783 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2538, $2539);
 $31156 = $2540;
 HEAP32[$31156 >> 2] = 6357003;
 HEAP32[$31156 + 4 >> 2] = 65541;
 HEAP32[$8784 >> 2] = 0;
 HEAP16[$2541 >> 1] = 11;
 HEAP16[$8785 >> 1] = 97;
 HEAP16[$8786 >> 1] = 5;
 HEAP16[$8787 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2540, $2541);
 $31160 = $2542;
 HEAP32[$31160 >> 2] = 6225933;
 HEAP32[$31160 + 4 >> 2] = 327681;
 HEAP32[$8788 >> 2] = 0;
 HEAP16[$2543 >> 1] = 13;
 HEAP16[$8789 >> 1] = 95;
 HEAP16[$8790 >> 1] = 1;
 HEAP16[$8791 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2542, $2543);
 $31164 = $2544;
 HEAP32[$31164 >> 2] = 6094857;
 HEAP32[$31164 + 4 >> 2] = 65545;
 HEAP32[$8792 >> 2] = 33808;
 HEAP16[$2545 >> 1] = 9;
 HEAP16[$8793 >> 1] = 93;
 HEAP16[$8794 >> 1] = 9;
 HEAP16[$8795 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2544, $2545);
 $31168 = $2546;
 HEAP32[$31168 >> 2] = 6094857;
 HEAP32[$31168 + 4 >> 2] = 589825;
 HEAP32[$8796 >> 2] = 33808;
 HEAP16[$2547 >> 1] = 9;
 HEAP16[$8797 >> 1] = 93;
 HEAP16[$8798 >> 1] = 1;
 HEAP16[$8799 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2546, $2547);
 $31172 = $2548;
 HEAP32[$31172 >> 2] = 6619145;
 HEAP32[$31172 + 4 >> 2] = 65545;
 HEAP32[$8800 >> 2] = 33808;
 HEAP16[$2549 >> 1] = 9;
 HEAP16[$8801 >> 1] = 101;
 HEAP16[$8802 >> 1] = 9;
 HEAP16[$8803 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2548, $2549);
 $31176 = $2550;
 HEAP32[$31176 >> 2] = 6094865;
 HEAP32[$31176 + 4 >> 2] = 589825;
 HEAP32[$8804 >> 2] = 33808;
 HEAP16[$2551 >> 1] = 17;
 HEAP16[$8805 >> 1] = 93;
 HEAP16[$8806 >> 1] = 1;
 HEAP16[$8807 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2550, $2551);
 $31180 = $2552;
 HEAP32[$31180 >> 2] = 6881323;
 HEAP32[$31180 + 4 >> 2] = 1048652;
 HEAP32[$8808 >> 2] = 65535;
 HEAP16[$2553 >> 1] = 43;
 HEAP16[$8809 >> 1] = 105;
 HEAP16[$8810 >> 1] = 76;
 HEAP16[$8811 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2552, $2553);
 $31184 = $2554;
 HEAP32[$31184 >> 2] = 7143433;
 HEAP32[$31184 + 4 >> 2] = 524296;
 HEAP32[$8812 >> 2] = 65535;
 HEAP16[$2555 >> 1] = 9;
 HEAP16[$8813 >> 1] = 109;
 HEAP16[$8814 >> 1] = 8;
 HEAP16[$8815 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2554, $2555);
 $31188 = $2556;
 HEAP32[$31188 >> 2] = 7405579;
 HEAP32[$31188 + 4 >> 2] = 65541;
 HEAP32[$8816 >> 2] = 0;
 HEAP16[$2557 >> 1] = 11;
 HEAP16[$8817 >> 1] = 113;
 HEAP16[$8818 >> 1] = 5;
 HEAP16[$8819 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2556, $2557);
 $31192 = $2558;
 HEAP32[$31192 >> 2] = 7274509;
 HEAP32[$31192 + 4 >> 2] = 327681;
 HEAP32[$8820 >> 2] = 0;
 HEAP16[$2559 >> 1] = 13;
 HEAP16[$8821 >> 1] = 111;
 HEAP16[$8822 >> 1] = 1;
 HEAP16[$8823 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2558, $2559);
 $31196 = $2560;
 HEAP32[$31196 >> 2] = 7143433;
 HEAP32[$31196 + 4 >> 2] = 65545;
 HEAP32[$8824 >> 2] = 33808;
 HEAP16[$2561 >> 1] = 9;
 HEAP16[$8825 >> 1] = 109;
 HEAP16[$8826 >> 1] = 9;
 HEAP16[$8827 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2560, $2561);
 $31200 = $2562;
 HEAP32[$31200 >> 2] = 7143433;
 HEAP32[$31200 + 4 >> 2] = 589825;
 HEAP32[$8828 >> 2] = 33808;
 HEAP16[$2563 >> 1] = 9;
 HEAP16[$8829 >> 1] = 109;
 HEAP16[$8830 >> 1] = 1;
 HEAP16[$8831 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2562, $2563);
 $31204 = $2564;
 HEAP32[$31204 >> 2] = 7667721;
 HEAP32[$31204 + 4 >> 2] = 65545;
 HEAP32[$8832 >> 2] = 33808;
 HEAP16[$2565 >> 1] = 9;
 HEAP16[$8833 >> 1] = 117;
 HEAP16[$8834 >> 1] = 9;
 HEAP16[$8835 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2564, $2565);
 $31208 = $2566;
 HEAP32[$31208 >> 2] = 7143441;
 HEAP32[$31208 + 4 >> 2] = 589825;
 HEAP32[$8836 >> 2] = 33808;
 HEAP16[$2567 >> 1] = 17;
 HEAP16[$8837 >> 1] = 109;
 HEAP16[$8838 >> 1] = 1;
 HEAP16[$8839 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2566, $2567);
 $31212 = $2568;
 HEAP32[$31212 >> 2] = 7929899;
 HEAP32[$31212 + 4 >> 2] = 1048634;
 HEAP32[$8840 >> 2] = 65535;
 HEAP16[$2569 >> 1] = 43;
 HEAP16[$8841 >> 1] = 121;
 HEAP16[$8842 >> 1] = 58;
 HEAP16[$8843 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2568, $2569);
 $31216 = $2570;
 HEAP32[$31216 >> 2] = 8192009;
 HEAP32[$31216 + 4 >> 2] = 524296;
 HEAP32[$8844 >> 2] = 65535;
 HEAP16[$2571 >> 1] = 9;
 HEAP16[$8845 >> 1] = 125;
 HEAP16[$8846 >> 1] = 8;
 HEAP16[$8847 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2570, $2571);
 $31220 = $2572;
 HEAP32[$31220 >> 2] = 8454155;
 HEAP32[$31220 + 4 >> 2] = 65541;
 HEAP32[$8848 >> 2] = 0;
 HEAP16[$2573 >> 1] = 11;
 HEAP16[$8849 >> 1] = 129;
 HEAP16[$8850 >> 1] = 5;
 HEAP16[$8851 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2572, $2573);
 $31224 = $2574;
 HEAP32[$31224 >> 2] = 8323085;
 HEAP32[$31224 + 4 >> 2] = 327681;
 HEAP32[$8852 >> 2] = 0;
 HEAP16[$2575 >> 1] = 13;
 HEAP16[$8853 >> 1] = 127;
 HEAP16[$8854 >> 1] = 1;
 HEAP16[$8855 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2574, $2575);
 $31228 = $2576;
 HEAP32[$31228 >> 2] = 8192009;
 HEAP32[$31228 + 4 >> 2] = 65545;
 HEAP32[$8856 >> 2] = 33808;
 HEAP16[$2577 >> 1] = 9;
 HEAP16[$8857 >> 1] = 125;
 HEAP16[$8858 >> 1] = 9;
 HEAP16[$8859 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2576, $2577);
 $31232 = $2578;
 HEAP32[$31232 >> 2] = 8192009;
 HEAP32[$31232 + 4 >> 2] = 589825;
 HEAP32[$8860 >> 2] = 33808;
 HEAP16[$2579 >> 1] = 9;
 HEAP16[$8861 >> 1] = 125;
 HEAP16[$8862 >> 1] = 1;
 HEAP16[$8863 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2578, $2579);
 $31236 = $2580;
 HEAP32[$31236 >> 2] = 8716297;
 HEAP32[$31236 + 4 >> 2] = 65545;
 HEAP32[$8864 >> 2] = 33808;
 HEAP16[$2581 >> 1] = 9;
 HEAP16[$8865 >> 1] = 133;
 HEAP16[$8866 >> 1] = 9;
 HEAP16[$8867 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2580, $2581);
 $31240 = $2582;
 HEAP32[$31240 >> 2] = 8192017;
 HEAP32[$31240 + 4 >> 2] = 589825;
 HEAP32[$8868 >> 2] = 33808;
 HEAP16[$2583 >> 1] = 17;
 HEAP16[$8869 >> 1] = 125;
 HEAP16[$8870 >> 1] = 1;
 HEAP16[$8871 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2582, $2583);
 $31244 = $2584;
 HEAP32[$31244 >> 2] = 8978475;
 HEAP32[$31244 + 4 >> 2] = 1048645;
 HEAP32[$8872 >> 2] = 65535;
 HEAP16[$2585 >> 1] = 43;
 HEAP16[$8873 >> 1] = 137;
 HEAP16[$8874 >> 1] = 69;
 HEAP16[$8875 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2584, $2585);
 $31248 = $2586;
 HEAP32[$31248 >> 2] = 9240585;
 HEAP32[$31248 + 4 >> 2] = 524296;
 HEAP32[$8876 >> 2] = 65535;
 HEAP16[$2587 >> 1] = 9;
 HEAP16[$8877 >> 1] = 141;
 HEAP16[$8878 >> 1] = 8;
 HEAP16[$8879 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2586, $2587);
 $31252 = $2588;
 HEAP32[$31252 >> 2] = 9502731;
 HEAP32[$31252 + 4 >> 2] = 65541;
 HEAP32[$8880 >> 2] = 0;
 HEAP16[$2589 >> 1] = 11;
 HEAP16[$8881 >> 1] = 145;
 HEAP16[$8882 >> 1] = 5;
 HEAP16[$8883 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2588, $2589);
 $31256 = $2590;
 HEAP32[$31256 >> 2] = 9371661;
 HEAP32[$31256 + 4 >> 2] = 327681;
 HEAP32[$8884 >> 2] = 0;
 HEAP16[$2591 >> 1] = 13;
 HEAP16[$8885 >> 1] = 143;
 HEAP16[$8886 >> 1] = 1;
 HEAP16[$8887 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2590, $2591);
 $31260 = $2592;
 HEAP32[$31260 >> 2] = 9240585;
 HEAP32[$31260 + 4 >> 2] = 65545;
 HEAP32[$8888 >> 2] = 33808;
 HEAP16[$2593 >> 1] = 9;
 HEAP16[$8889 >> 1] = 141;
 HEAP16[$8890 >> 1] = 9;
 HEAP16[$8891 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2592, $2593);
 $31264 = $2594;
 HEAP32[$31264 >> 2] = 9240585;
 HEAP32[$31264 + 4 >> 2] = 589825;
 HEAP32[$8892 >> 2] = 33808;
 HEAP16[$2595 >> 1] = 9;
 HEAP16[$8893 >> 1] = 141;
 HEAP16[$8894 >> 1] = 1;
 HEAP16[$8895 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2594, $2595);
 $31268 = $2596;
 HEAP32[$31268 >> 2] = 9764873;
 HEAP32[$31268 + 4 >> 2] = 65545;
 HEAP32[$8896 >> 2] = 33808;
 HEAP16[$2597 >> 1] = 9;
 HEAP16[$8897 >> 1] = 149;
 HEAP16[$8898 >> 1] = 9;
 HEAP16[$8899 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2596, $2597);
 $31272 = $2598;
 HEAP32[$31272 >> 2] = 9240593;
 HEAP32[$31272 + 4 >> 2] = 589825;
 HEAP32[$8900 >> 2] = 33808;
 HEAP16[$2599 >> 1] = 17;
 HEAP16[$8901 >> 1] = 141;
 HEAP16[$8902 >> 1] = 1;
 HEAP16[$8903 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2598, $2599);
 $31276 = $2600;
 HEAP32[$31276 >> 2] = 10027051;
 HEAP32[$31276 + 4 >> 2] = 1048624;
 HEAP32[$8904 >> 2] = 65535;
 HEAP16[$2601 >> 1] = 43;
 HEAP16[$8905 >> 1] = 153;
 HEAP16[$8906 >> 1] = 48;
 HEAP16[$8907 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2600, $2601);
 $31280 = $2602;
 HEAP32[$31280 >> 2] = 10289161;
 HEAP32[$31280 + 4 >> 2] = 524296;
 HEAP32[$8908 >> 2] = 65535;
 HEAP16[$2603 >> 1] = 9;
 HEAP16[$8909 >> 1] = 157;
 HEAP16[$8910 >> 1] = 8;
 HEAP16[$8911 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2602, $2603);
 $31284 = $2604;
 HEAP32[$31284 >> 2] = 10551307;
 HEAP32[$31284 + 4 >> 2] = 65541;
 HEAP32[$8912 >> 2] = 0;
 HEAP16[$2605 >> 1] = 11;
 HEAP16[$8913 >> 1] = 161;
 HEAP16[$8914 >> 1] = 5;
 HEAP16[$8915 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2604, $2605);
 $31288 = $2606;
 HEAP32[$31288 >> 2] = 10420237;
 HEAP32[$31288 + 4 >> 2] = 327681;
 HEAP32[$8916 >> 2] = 0;
 HEAP16[$2607 >> 1] = 13;
 HEAP16[$8917 >> 1] = 159;
 HEAP16[$8918 >> 1] = 1;
 HEAP16[$8919 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2606, $2607);
 $31292 = $2608;
 HEAP32[$31292 >> 2] = 10289161;
 HEAP32[$31292 + 4 >> 2] = 65545;
 HEAP32[$8920 >> 2] = 33808;
 HEAP16[$2609 >> 1] = 9;
 HEAP16[$8921 >> 1] = 157;
 HEAP16[$8922 >> 1] = 9;
 HEAP16[$8923 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2608, $2609);
 $31296 = $2610;
 HEAP32[$31296 >> 2] = 10289161;
 HEAP32[$31296 + 4 >> 2] = 589825;
 HEAP32[$8924 >> 2] = 33808;
 HEAP16[$2611 >> 1] = 9;
 HEAP16[$8925 >> 1] = 157;
 HEAP16[$8926 >> 1] = 1;
 HEAP16[$8927 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2610, $2611);
 $31300 = $2612;
 HEAP32[$31300 >> 2] = 10813449;
 HEAP32[$31300 + 4 >> 2] = 65545;
 HEAP32[$8928 >> 2] = 33808;
 HEAP16[$2613 >> 1] = 9;
 HEAP16[$8929 >> 1] = 165;
 HEAP16[$8930 >> 1] = 9;
 HEAP16[$8931 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2612, $2613);
 $31304 = $2614;
 HEAP32[$31304 >> 2] = 10289169;
 HEAP32[$31304 + 4 >> 2] = 589825;
 HEAP32[$8932 >> 2] = 33808;
 HEAP16[$2615 >> 1] = 17;
 HEAP16[$8933 >> 1] = 157;
 HEAP16[$8934 >> 1] = 1;
 HEAP16[$8935 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2614, $2615);
 $31308 = $2616;
 HEAP32[$31308 >> 2] = 44957836;
 HEAP32[$31308 + 4 >> 2] = 1048614;
 HEAP8[$8936 >> 0] = -16;
 HEAP32[$8937 >> 2] = 65535;
 HEAP32[$8938 >> 2] = 54937;
 HEAP8[$8939 >> 0] = 0;
 HEAP8[$8940 >> 0] = 7;
 HEAP8[$8941 >> 0] = 3;
 HEAP8[$8942 >> 0] = -86;
 HEAP32[$8943 >> 2] = 0;
 HEAP16[$8943 + 4 >> 1] = 0;
 HEAP8[$8943 + 6 >> 0] = 0;
 HEAP16[$2617 >> 1] = 140;
 HEAP16[$8944 >> 1] = 686;
 HEAP16[$8945 >> 1] = 38;
 HEAP16[$8946 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK9RDPPatBltRK4Rect($front, $2616, $2617);
 $31312 = $2618;
 HEAP32[$31312 >> 2] = 44957835;
 HEAP32[$31312 + 4 >> 2] = 1048577;
 HEAP32[$8947 >> 2] = 16904;
 HEAP16[$2619 >> 1] = 139;
 HEAP16[$8948 >> 1] = 686;
 HEAP16[$8949 >> 1] = 1;
 HEAP16[$8950 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2618, $2619);
 $31316 = $2620;
 HEAP32[$31316 >> 2] = 45940754;
 HEAP32[$31316 + 4 >> 2] = 65657;
 HEAP32[$8951 >> 2] = 16904;
 HEAP16[$2621 >> 1] = 18;
 HEAP16[$8952 >> 1] = 701;
 HEAP16[$8953 >> 1] = 121;
 HEAP16[$8954 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2620, $2621);
 $31320 = $2622;
 HEAP32[$31320 >> 2] = 44957714;
 HEAP32[$31320 + 4 >> 2] = 983041;
 HEAP32[$8955 >> 2] = 54937;
 HEAP16[$2623 >> 1] = 18;
 HEAP16[$8956 >> 1] = 686;
 HEAP16[$8957 >> 1] = 1;
 HEAP16[$8958 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2622, $2623);
 $31324 = $2624;
 HEAP32[$31324 >> 2] = 44957715;
 HEAP32[$31324 + 4 >> 2] = 65656;
 HEAP32[$8959 >> 2] = 54937;
 HEAP16[$2625 >> 1] = 19;
 HEAP16[$8960 >> 1] = 686;
 HEAP16[$8961 >> 1] = 120;
 HEAP16[$8962 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2624, $2625);
 $31328 = $2626;
 HEAP32[$31328 >> 2] = 45023370;
 HEAP32[$31328 + 4 >> 2] = 917505;
 HEAP32[$8963 >> 2] = 33808;
 HEAP16[$2627 >> 1] = 138;
 HEAP16[$8964 >> 1] = 687;
 HEAP16[$8965 >> 1] = 1;
 HEAP16[$8966 >> 1] = 14;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2626, $2627);
 $31332 = $2628;
 HEAP32[$31332 >> 2] = 45875219;
 HEAP32[$31332 + 4 >> 2] = 65655;
 HEAP32[$8967 >> 2] = 33808;
 HEAP16[$2629 >> 1] = 19;
 HEAP16[$8968 >> 1] = 700;
 HEAP16[$8969 >> 1] = 119;
 HEAP16[$8970 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2628, $2629);
 $31336 = $2630;
 HEAP32[$31336 >> 2] = 45023251;
 HEAP32[$31336 + 4 >> 2] = 851969;
 HEAP32[$8971 >> 2] = 65535;
 HEAP16[$2631 >> 1] = 19;
 HEAP16[$8972 >> 1] = 687;
 HEAP16[$8973 >> 1] = 1;
 HEAP16[$8974 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2630, $2631);
 $31340 = $2632;
 HEAP32[$31340 >> 2] = 45023252;
 HEAP32[$31340 + 4 >> 2] = 65654;
 HEAP32[$8975 >> 2] = 65535;
 HEAP16[$2633 >> 1] = 20;
 HEAP16[$8976 >> 1] = 687;
 HEAP16[$8977 >> 1] = 118;
 HEAP16[$8978 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2632, $2633);
 $31344 = $2634;
 HEAP32[$31344 >> 2] = 45088788;
 HEAP32[$31344 + 4 >> 2] = 786550;
 HEAP32[$8979 >> 2] = 54937;
 HEAP16[$2635 >> 1] = 20;
 HEAP16[$8980 >> 1] = 688;
 HEAP16[$8981 >> 1] = 118;
 HEAP16[$8982 >> 1] = 12;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2634, $2635);
 $31348 = $2636;
 HEAP32[$31348 >> 2] = 4784130;
 HEAP32[$31348 + 4 >> 2] = 40173760;
 HEAP32[$8983 >> 2] = 65535;
 HEAP16[$2637 >> 1] = 2;
 HEAP16[$8984 >> 1] = 73;
 HEAP16[$8985 >> 1] = 192;
 HEAP16[$8986 >> 1] = 613;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2636, $2637);
 $31352 = $2638;
 HEAP32[$31352 >> 2] = 4784152;
 HEAP32[$31352 + 4 >> 2] = 1048746;
 HEAP32[$8987 >> 2] = 2349;
 HEAP16[$2639 >> 1] = 24;
 HEAP16[$8988 >> 1] = 73;
 HEAP16[$8989 >> 1] = 170;
 HEAP16[$8990 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2638, $2639);
 $31356 = $2640;
 HEAP32[$31356 >> 2] = 5832747;
 HEAP32[$31356 + 4 >> 2] = 1048606;
 HEAP32[$8991 >> 2] = 65535;
 HEAP16[$2641 >> 1] = 43;
 HEAP16[$8992 >> 1] = 89;
 HEAP16[$8993 >> 1] = 30;
 HEAP16[$8994 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2640, $2641);
 $31360 = $2642;
 HEAP32[$31360 >> 2] = 6094857;
 HEAP32[$31360 + 4 >> 2] = 524296;
 HEAP32[$8995 >> 2] = 65535;
 HEAP16[$2643 >> 1] = 9;
 HEAP16[$8996 >> 1] = 93;
 HEAP16[$8997 >> 1] = 8;
 HEAP16[$8998 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2642, $2643);
 $31364 = $2644;
 HEAP32[$31364 >> 2] = 6357003;
 HEAP32[$31364 + 4 >> 2] = 65541;
 HEAP32[$8999 >> 2] = 0;
 HEAP16[$2645 >> 1] = 11;
 HEAP16[$9000 >> 1] = 97;
 HEAP16[$9001 >> 1] = 5;
 HEAP16[$9002 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2644, $2645);
 $31368 = $2646;
 HEAP32[$31368 >> 2] = 6225933;
 HEAP32[$31368 + 4 >> 2] = 327681;
 HEAP32[$9003 >> 2] = 0;
 HEAP16[$2647 >> 1] = 13;
 HEAP16[$9004 >> 1] = 95;
 HEAP16[$9005 >> 1] = 1;
 HEAP16[$9006 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2646, $2647);
 $31372 = $2648;
 HEAP32[$31372 >> 2] = 6094857;
 HEAP32[$31372 + 4 >> 2] = 65545;
 HEAP32[$9007 >> 2] = 33808;
 HEAP16[$2649 >> 1] = 9;
 HEAP16[$9008 >> 1] = 93;
 HEAP16[$9009 >> 1] = 9;
 HEAP16[$9010 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2648, $2649);
 $31376 = $2650;
 HEAP32[$31376 >> 2] = 6094857;
 HEAP32[$31376 + 4 >> 2] = 589825;
 HEAP32[$9011 >> 2] = 33808;
 HEAP16[$2651 >> 1] = 9;
 HEAP16[$9012 >> 1] = 93;
 HEAP16[$9013 >> 1] = 1;
 HEAP16[$9014 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2650, $2651);
 $31380 = $2652;
 HEAP32[$31380 >> 2] = 6619145;
 HEAP32[$31380 + 4 >> 2] = 65545;
 HEAP32[$9015 >> 2] = 33808;
 HEAP16[$2653 >> 1] = 9;
 HEAP16[$9016 >> 1] = 101;
 HEAP16[$9017 >> 1] = 9;
 HEAP16[$9018 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2652, $2653);
 $31384 = $2654;
 HEAP32[$31384 >> 2] = 6094865;
 HEAP32[$31384 + 4 >> 2] = 589825;
 HEAP32[$9019 >> 2] = 33808;
 HEAP16[$2655 >> 1] = 17;
 HEAP16[$9020 >> 1] = 93;
 HEAP16[$9021 >> 1] = 1;
 HEAP16[$9022 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2654, $2655);
 $31388 = $2656;
 HEAP32[$31388 >> 2] = 6881323;
 HEAP32[$31388 + 4 >> 2] = 1048634;
 HEAP32[$9023 >> 2] = 65535;
 HEAP16[$2657 >> 1] = 43;
 HEAP16[$9024 >> 1] = 105;
 HEAP16[$9025 >> 1] = 58;
 HEAP16[$9026 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2656, $2657);
 $31392 = $2658;
 HEAP32[$31392 >> 2] = 7143433;
 HEAP32[$31392 + 4 >> 2] = 524296;
 HEAP32[$9027 >> 2] = 65535;
 HEAP16[$2659 >> 1] = 9;
 HEAP16[$9028 >> 1] = 109;
 HEAP16[$9029 >> 1] = 8;
 HEAP16[$9030 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2658, $2659);
 $31396 = $2660;
 HEAP32[$31396 >> 2] = 7405579;
 HEAP32[$31396 + 4 >> 2] = 65541;
 HEAP32[$9031 >> 2] = 0;
 HEAP16[$2661 >> 1] = 11;
 HEAP16[$9032 >> 1] = 113;
 HEAP16[$9033 >> 1] = 5;
 HEAP16[$9034 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2660, $2661);
 $31400 = $2662;
 HEAP32[$31400 >> 2] = 7274509;
 HEAP32[$31400 + 4 >> 2] = 327681;
 HEAP32[$9035 >> 2] = 0;
 HEAP16[$2663 >> 1] = 13;
 HEAP16[$9036 >> 1] = 111;
 HEAP16[$9037 >> 1] = 1;
 HEAP16[$9038 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2662, $2663);
 $31404 = $2664;
 HEAP32[$31404 >> 2] = 7143433;
 HEAP32[$31404 + 4 >> 2] = 65545;
 HEAP32[$9039 >> 2] = 33808;
 HEAP16[$2665 >> 1] = 9;
 HEAP16[$9040 >> 1] = 109;
 HEAP16[$9041 >> 1] = 9;
 HEAP16[$9042 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2664, $2665);
 $31408 = $2666;
 HEAP32[$31408 >> 2] = 7143433;
 HEAP32[$31408 + 4 >> 2] = 589825;
 HEAP32[$9043 >> 2] = 33808;
 HEAP16[$2667 >> 1] = 9;
 HEAP16[$9044 >> 1] = 109;
 HEAP16[$9045 >> 1] = 1;
 HEAP16[$9046 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2666, $2667);
 $31412 = $2668;
 HEAP32[$31412 >> 2] = 7667721;
 HEAP32[$31412 + 4 >> 2] = 65545;
 HEAP32[$9047 >> 2] = 33808;
 HEAP16[$2669 >> 1] = 9;
 HEAP16[$9048 >> 1] = 117;
 HEAP16[$9049 >> 1] = 9;
 HEAP16[$9050 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2668, $2669);
 $31416 = $2670;
 HEAP32[$31416 >> 2] = 7143441;
 HEAP32[$31416 + 4 >> 2] = 589825;
 HEAP32[$9051 >> 2] = 33808;
 HEAP16[$2671 >> 1] = 17;
 HEAP16[$9052 >> 1] = 109;
 HEAP16[$9053 >> 1] = 1;
 HEAP16[$9054 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2670, $2671);
 $31420 = $2672;
 HEAP32[$31420 >> 2] = 7929899;
 HEAP32[$31420 + 4 >> 2] = 1048645;
 HEAP32[$9055 >> 2] = 65535;
 HEAP16[$2673 >> 1] = 43;
 HEAP16[$9056 >> 1] = 121;
 HEAP16[$9057 >> 1] = 69;
 HEAP16[$9058 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2672, $2673);
 $31424 = $2674;
 HEAP32[$31424 >> 2] = 8192009;
 HEAP32[$31424 + 4 >> 2] = 524296;
 HEAP32[$9059 >> 2] = 65535;
 HEAP16[$2675 >> 1] = 9;
 HEAP16[$9060 >> 1] = 125;
 HEAP16[$9061 >> 1] = 8;
 HEAP16[$9062 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2674, $2675);
 $31428 = $2676;
 HEAP32[$31428 >> 2] = 8454155;
 HEAP32[$31428 + 4 >> 2] = 65541;
 HEAP32[$9063 >> 2] = 0;
 HEAP16[$2677 >> 1] = 11;
 HEAP16[$9064 >> 1] = 129;
 HEAP16[$9065 >> 1] = 5;
 HEAP16[$9066 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2676, $2677);
 $31432 = $2678;
 HEAP32[$31432 >> 2] = 8323085;
 HEAP32[$31432 + 4 >> 2] = 327681;
 HEAP32[$9067 >> 2] = 0;
 HEAP16[$2679 >> 1] = 13;
 HEAP16[$9068 >> 1] = 127;
 HEAP16[$9069 >> 1] = 1;
 HEAP16[$9070 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2678, $2679);
 $31436 = $2680;
 HEAP32[$31436 >> 2] = 8192009;
 HEAP32[$31436 + 4 >> 2] = 65545;
 HEAP32[$9071 >> 2] = 33808;
 HEAP16[$2681 >> 1] = 9;
 HEAP16[$9072 >> 1] = 125;
 HEAP16[$9073 >> 1] = 9;
 HEAP16[$9074 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2680, $2681);
 $31440 = $2682;
 HEAP32[$31440 >> 2] = 8192009;
 HEAP32[$31440 + 4 >> 2] = 589825;
 HEAP32[$9075 >> 2] = 33808;
 HEAP16[$2683 >> 1] = 9;
 HEAP16[$9076 >> 1] = 125;
 HEAP16[$9077 >> 1] = 1;
 HEAP16[$9078 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2682, $2683);
 $31444 = $2684;
 HEAP32[$31444 >> 2] = 8716297;
 HEAP32[$31444 + 4 >> 2] = 65545;
 HEAP32[$9079 >> 2] = 33808;
 HEAP16[$2685 >> 1] = 9;
 HEAP16[$9080 >> 1] = 133;
 HEAP16[$9081 >> 1] = 9;
 HEAP16[$9082 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2684, $2685);
 $31448 = $2686;
 HEAP32[$31448 >> 2] = 8192017;
 HEAP32[$31448 + 4 >> 2] = 589825;
 HEAP32[$9083 >> 2] = 33808;
 HEAP16[$2687 >> 1] = 17;
 HEAP16[$9084 >> 1] = 125;
 HEAP16[$9085 >> 1] = 1;
 HEAP16[$9086 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2686, $2687);
 $31452 = $2688;
 HEAP32[$31452 >> 2] = 8978475;
 HEAP32[$31452 + 4 >> 2] = 1048624;
 HEAP32[$9087 >> 2] = 65535;
 HEAP16[$2689 >> 1] = 43;
 HEAP16[$9088 >> 1] = 137;
 HEAP16[$9089 >> 1] = 48;
 HEAP16[$9090 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2688, $2689);
 $31456 = $2690;
 HEAP32[$31456 >> 2] = 9240585;
 HEAP32[$31456 + 4 >> 2] = 524296;
 HEAP32[$9091 >> 2] = 65535;
 HEAP16[$2691 >> 1] = 9;
 HEAP16[$9092 >> 1] = 141;
 HEAP16[$9093 >> 1] = 8;
 HEAP16[$9094 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2690, $2691);
 $31460 = $2692;
 HEAP32[$31460 >> 2] = 9502731;
 HEAP32[$31460 + 4 >> 2] = 65541;
 HEAP32[$9095 >> 2] = 0;
 HEAP16[$2693 >> 1] = 11;
 HEAP16[$9096 >> 1] = 145;
 HEAP16[$9097 >> 1] = 5;
 HEAP16[$9098 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2692, $2693);
 $31464 = $2694;
 HEAP32[$31464 >> 2] = 9371661;
 HEAP32[$31464 + 4 >> 2] = 327681;
 HEAP32[$9099 >> 2] = 0;
 HEAP16[$2695 >> 1] = 13;
 HEAP16[$9100 >> 1] = 143;
 HEAP16[$9101 >> 1] = 1;
 HEAP16[$9102 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2694, $2695);
 $31468 = $2696;
 HEAP32[$31468 >> 2] = 9240585;
 HEAP32[$31468 + 4 >> 2] = 65545;
 HEAP32[$9103 >> 2] = 33808;
 HEAP16[$2697 >> 1] = 9;
 HEAP16[$9104 >> 1] = 141;
 HEAP16[$9105 >> 1] = 9;
 HEAP16[$9106 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2696, $2697);
 $31472 = $2698;
 HEAP32[$31472 >> 2] = 9240585;
 HEAP32[$31472 + 4 >> 2] = 589825;
 HEAP32[$9107 >> 2] = 33808;
 HEAP16[$2699 >> 1] = 9;
 HEAP16[$9108 >> 1] = 141;
 HEAP16[$9109 >> 1] = 1;
 HEAP16[$9110 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2698, $2699);
 $31476 = $2700;
 HEAP32[$31476 >> 2] = 9764873;
 HEAP32[$31476 + 4 >> 2] = 65545;
 HEAP32[$9111 >> 2] = 33808;
 HEAP16[$2701 >> 1] = 9;
 HEAP16[$9112 >> 1] = 149;
 HEAP16[$9113 >> 1] = 9;
 HEAP16[$9114 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2700, $2701);
 $31480 = $2702;
 HEAP32[$31480 >> 2] = 9240593;
 HEAP32[$31480 + 4 >> 2] = 589825;
 HEAP32[$9115 >> 2] = 33808;
 HEAP16[$2703 >> 1] = 17;
 HEAP16[$9116 >> 1] = 141;
 HEAP16[$9117 >> 1] = 1;
 HEAP16[$9118 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2702, $2703);
 $31484 = $2704;
 HEAP32[$31484 >> 2] = 44957836;
 HEAP32[$31484 + 4 >> 2] = 1048614;
 HEAP8[$9119 >> 0] = -16;
 HEAP32[$9120 >> 2] = 65535;
 HEAP32[$9121 >> 2] = 54937;
 HEAP8[$9122 >> 0] = 0;
 HEAP8[$9123 >> 0] = 7;
 HEAP8[$9124 >> 0] = 3;
 HEAP8[$9125 >> 0] = -86;
 HEAP32[$9126 >> 2] = 0;
 HEAP16[$9126 + 4 >> 1] = 0;
 HEAP8[$9126 + 6 >> 0] = 0;
 HEAP16[$2705 >> 1] = 140;
 HEAP16[$9127 >> 1] = 686;
 HEAP16[$9128 >> 1] = 38;
 HEAP16[$9129 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK9RDPPatBltRK4Rect($front, $2704, $2705);
 $31488 = $2706;
 HEAP32[$31488 >> 2] = 44957835;
 HEAP32[$31488 + 4 >> 2] = 1048577;
 HEAP32[$9130 >> 2] = 16904;
 HEAP16[$2707 >> 1] = 139;
 HEAP16[$9131 >> 1] = 686;
 HEAP16[$9132 >> 1] = 1;
 HEAP16[$9133 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2706, $2707);
 $31492 = $2708;
 HEAP32[$31492 >> 2] = 45940754;
 HEAP32[$31492 + 4 >> 2] = 65657;
 HEAP32[$9134 >> 2] = 16904;
 HEAP16[$2709 >> 1] = 18;
 HEAP16[$9135 >> 1] = 701;
 HEAP16[$9136 >> 1] = 121;
 HEAP16[$9137 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2708, $2709);
 $31496 = $2710;
 HEAP32[$31496 >> 2] = 44957714;
 HEAP32[$31496 + 4 >> 2] = 983041;
 HEAP32[$9138 >> 2] = 54937;
 HEAP16[$2711 >> 1] = 18;
 HEAP16[$9139 >> 1] = 686;
 HEAP16[$9140 >> 1] = 1;
 HEAP16[$9141 >> 1] = 15;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2710, $2711);
 $31500 = $2712;
 HEAP32[$31500 >> 2] = 44957715;
 HEAP32[$31500 + 4 >> 2] = 65656;
 HEAP32[$9142 >> 2] = 54937;
 HEAP16[$2713 >> 1] = 19;
 HEAP16[$9143 >> 1] = 686;
 HEAP16[$9144 >> 1] = 120;
 HEAP16[$9145 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2712, $2713);
 $31504 = $2714;
 HEAP32[$31504 >> 2] = 45023370;
 HEAP32[$31504 + 4 >> 2] = 917505;
 HEAP32[$9146 >> 2] = 33808;
 HEAP16[$2715 >> 1] = 138;
 HEAP16[$9147 >> 1] = 687;
 HEAP16[$9148 >> 1] = 1;
 HEAP16[$9149 >> 1] = 14;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2714, $2715);
 $31508 = $2716;
 HEAP32[$31508 >> 2] = 45875219;
 HEAP32[$31508 + 4 >> 2] = 65655;
 HEAP32[$9150 >> 2] = 33808;
 HEAP16[$2717 >> 1] = 19;
 HEAP16[$9151 >> 1] = 700;
 HEAP16[$9152 >> 1] = 119;
 HEAP16[$9153 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2716, $2717);
 $31512 = $2718;
 HEAP32[$31512 >> 2] = 45023251;
 HEAP32[$31512 + 4 >> 2] = 851969;
 HEAP32[$9154 >> 2] = 65535;
 HEAP16[$2719 >> 1] = 19;
 HEAP16[$9155 >> 1] = 687;
 HEAP16[$9156 >> 1] = 1;
 HEAP16[$9157 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2718, $2719);
 $31516 = $2720;
 HEAP32[$31516 >> 2] = 45023252;
 HEAP32[$31516 + 4 >> 2] = 65654;
 HEAP32[$9158 >> 2] = 65535;
 HEAP16[$2721 >> 1] = 20;
 HEAP16[$9159 >> 1] = 687;
 HEAP16[$9160 >> 1] = 118;
 HEAP16[$9161 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2720, $2721);
 $31520 = $2722;
 HEAP32[$31520 >> 2] = 45088788;
 HEAP32[$31520 + 4 >> 2] = 786550;
 HEAP32[$9162 >> 2] = 54937;
 HEAP16[$2723 >> 1] = 20;
 HEAP16[$9163 >> 1] = 688;
 HEAP16[$9164 >> 1] = 118;
 HEAP16[$9165 >> 1] = 12;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2722, $2723);
 $31524 = $2724;
 HEAP32[$31524 >> 2] = 8978434;
 HEAP32[$31524 + 4 >> 2] = 35979456;
 HEAP8[$9166 >> 0] = -52;
 HEAP16[$9167 >> 1] = 2;
 HEAP16[$9168 >> 1] = 121;
 HEAP16[$2725 >> 1] = 2;
 HEAP16[$9169 >> 1] = 137;
 HEAP16[$9170 >> 1] = 192;
 HEAP16[$9171 >> 1] = 549;
 __ZN14Front_JS_Natif4drawERK9RDPScrBltRK4Rect($front, $2724, $2725);
 $31528 = $2726;
 HEAP32[$31528 >> 2] = 4784130;
 HEAP32[$31528 + 4 >> 2] = 40173760;
 HEAP32[$9172 >> 2] = 65535;
 HEAP16[$2727 >> 1] = 2;
 HEAP16[$9173 >> 1] = 73;
 HEAP16[$9174 >> 1] = 192;
 HEAP16[$9175 >> 1] = 613;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2726, $2727);
 $31532 = $2728;
 HEAP32[$31532 >> 2] = 4784152;
 HEAP32[$31532 + 4 >> 2] = 1048746;
 HEAP32[$9176 >> 2] = 2349;
 HEAP16[$2729 >> 1] = 24;
 HEAP16[$9177 >> 1] = 73;
 HEAP16[$9178 >> 1] = 170;
 HEAP16[$9179 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2728, $2729);
 $31536 = $2730;
 HEAP32[$31536 >> 2] = 5832747;
 HEAP32[$31536 + 4 >> 2] = 1048606;
 HEAP32[$9180 >> 2] = 65535;
 HEAP16[$2731 >> 1] = 43;
 HEAP16[$9181 >> 1] = 89;
 HEAP16[$9182 >> 1] = 30;
 HEAP16[$9183 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2730, $2731);
 $31540 = $2732;
 HEAP32[$31540 >> 2] = 6094857;
 HEAP32[$31540 + 4 >> 2] = 524296;
 HEAP32[$9184 >> 2] = 65535;
 HEAP16[$2733 >> 1] = 9;
 HEAP16[$9185 >> 1] = 93;
 HEAP16[$9186 >> 1] = 8;
 HEAP16[$9187 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2732, $2733);
 $31544 = $2734;
 HEAP32[$31544 >> 2] = 6357003;
 HEAP32[$31544 + 4 >> 2] = 65541;
 HEAP32[$9188 >> 2] = 0;
 HEAP16[$2735 >> 1] = 11;
 HEAP16[$9189 >> 1] = 97;
 HEAP16[$9190 >> 1] = 5;
 HEAP16[$9191 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2734, $2735);
 $31548 = $2736;
 HEAP32[$31548 >> 2] = 6225933;
 HEAP32[$31548 + 4 >> 2] = 327681;
 HEAP32[$9192 >> 2] = 0;
 HEAP16[$2737 >> 1] = 13;
 HEAP16[$9193 >> 1] = 95;
 HEAP16[$9194 >> 1] = 1;
 HEAP16[$9195 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2736, $2737);
 $31552 = $2738;
 HEAP32[$31552 >> 2] = 6094857;
 HEAP32[$31552 + 4 >> 2] = 65545;
 HEAP32[$9196 >> 2] = 33808;
 HEAP16[$2739 >> 1] = 9;
 HEAP16[$9197 >> 1] = 93;
 HEAP16[$9198 >> 1] = 9;
 HEAP16[$9199 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2738, $2739);
 $31556 = $2740;
 HEAP32[$31556 >> 2] = 6094857;
 HEAP32[$31556 + 4 >> 2] = 589825;
 HEAP32[$9200 >> 2] = 33808;
 HEAP16[$2741 >> 1] = 9;
 HEAP16[$9201 >> 1] = 93;
 HEAP16[$9202 >> 1] = 1;
 HEAP16[$9203 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2740, $2741);
 $31560 = $2742;
 HEAP32[$31560 >> 2] = 6619145;
 HEAP32[$31560 + 4 >> 2] = 65545;
 HEAP32[$9204 >> 2] = 33808;
 HEAP16[$2743 >> 1] = 9;
 HEAP16[$9205 >> 1] = 101;
 HEAP16[$9206 >> 1] = 9;
 HEAP16[$9207 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2742, $2743);
 $31564 = $2744;
 HEAP32[$31564 >> 2] = 6094865;
 HEAP32[$31564 + 4 >> 2] = 589825;
 HEAP32[$9208 >> 2] = 33808;
 HEAP16[$2745 >> 1] = 17;
 HEAP16[$9209 >> 1] = 93;
 HEAP16[$9210 >> 1] = 1;
 HEAP16[$9211 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2744, $2745);
 $31568 = $2746;
 HEAP32[$31568 >> 2] = 6881323;
 HEAP32[$31568 + 4 >> 2] = 1048652;
 HEAP32[$9212 >> 2] = 65535;
 HEAP16[$2747 >> 1] = 43;
 HEAP16[$9213 >> 1] = 105;
 HEAP16[$9214 >> 1] = 76;
 HEAP16[$9215 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2746, $2747);
 $31572 = $2748;
 HEAP32[$31572 >> 2] = 7143433;
 HEAP32[$31572 + 4 >> 2] = 524296;
 HEAP32[$9216 >> 2] = 65535;
 HEAP16[$2749 >> 1] = 9;
 HEAP16[$9217 >> 1] = 109;
 HEAP16[$9218 >> 1] = 8;
 HEAP16[$9219 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2748, $2749);
 $31576 = $2750;
 HEAP32[$31576 >> 2] = 7405579;
 HEAP32[$31576 + 4 >> 2] = 65541;
 HEAP32[$9220 >> 2] = 0;
 HEAP16[$2751 >> 1] = 11;
 HEAP16[$9221 >> 1] = 113;
 HEAP16[$9222 >> 1] = 5;
 HEAP16[$9223 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2750, $2751);
 $31580 = $2752;
 HEAP32[$31580 >> 2] = 7274509;
 HEAP32[$31580 + 4 >> 2] = 327681;
 HEAP32[$9224 >> 2] = 0;
 HEAP16[$2753 >> 1] = 13;
 HEAP16[$9225 >> 1] = 111;
 HEAP16[$9226 >> 1] = 1;
 HEAP16[$9227 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2752, $2753);
 $31584 = $2754;
 HEAP32[$31584 >> 2] = 7143433;
 HEAP32[$31584 + 4 >> 2] = 65545;
 HEAP32[$9228 >> 2] = 33808;
 HEAP16[$2755 >> 1] = 9;
 HEAP16[$9229 >> 1] = 109;
 HEAP16[$9230 >> 1] = 9;
 HEAP16[$9231 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2754, $2755);
 $31588 = $2756;
 HEAP32[$31588 >> 2] = 7143433;
 HEAP32[$31588 + 4 >> 2] = 589825;
 HEAP32[$9232 >> 2] = 33808;
 HEAP16[$2757 >> 1] = 9;
 HEAP16[$9233 >> 1] = 109;
 HEAP16[$9234 >> 1] = 1;
 HEAP16[$9235 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2756, $2757);
 $31592 = $2758;
 HEAP32[$31592 >> 2] = 7667721;
 HEAP32[$31592 + 4 >> 2] = 65545;
 HEAP32[$9236 >> 2] = 33808;
 HEAP16[$2759 >> 1] = 9;
 HEAP16[$9237 >> 1] = 117;
 HEAP16[$9238 >> 1] = 9;
 HEAP16[$9239 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2758, $2759);
 $31596 = $2760;
 HEAP32[$31596 >> 2] = 7143441;
 HEAP32[$31596 + 4 >> 2] = 589825;
 HEAP32[$9240 >> 2] = 33808;
 HEAP16[$2761 >> 1] = 17;
 HEAP16[$9241 >> 1] = 109;
 HEAP16[$9242 >> 1] = 1;
 HEAP16[$9243 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2760, $2761);
 $31600 = $2762;
 HEAP32[$31600 >> 2] = 7929899;
 HEAP32[$31600 + 4 >> 2] = 1048634;
 HEAP32[$9244 >> 2] = 65535;
 HEAP16[$2763 >> 1] = 43;
 HEAP16[$9245 >> 1] = 121;
 HEAP16[$9246 >> 1] = 58;
 HEAP16[$9247 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2762, $2763);
 $31604 = $2764;
 HEAP32[$31604 >> 2] = 8192009;
 HEAP32[$31604 + 4 >> 2] = 524296;
 HEAP32[$9248 >> 2] = 65535;
 HEAP16[$2765 >> 1] = 9;
 HEAP16[$9249 >> 1] = 125;
 HEAP16[$9250 >> 1] = 8;
 HEAP16[$9251 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2764, $2765);
 $31608 = $2766;
 HEAP32[$31608 >> 2] = 8454155;
 HEAP32[$31608 + 4 >> 2] = 65541;
 HEAP32[$9252 >> 2] = 0;
 HEAP16[$2767 >> 1] = 11;
 HEAP16[$9253 >> 1] = 129;
 HEAP16[$9254 >> 1] = 5;
 HEAP16[$9255 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2766, $2767);
 $31612 = $2768;
 HEAP32[$31612 >> 2] = 8323085;
 HEAP32[$31612 + 4 >> 2] = 327681;
 HEAP32[$9256 >> 2] = 0;
 HEAP16[$2769 >> 1] = 13;
 HEAP16[$9257 >> 1] = 127;
 HEAP16[$9258 >> 1] = 1;
 HEAP16[$9259 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2768, $2769);
 $31616 = $2770;
 HEAP32[$31616 >> 2] = 8192009;
 HEAP32[$31616 + 4 >> 2] = 65545;
 HEAP32[$9260 >> 2] = 33808;
 HEAP16[$2771 >> 1] = 9;
 HEAP16[$9261 >> 1] = 125;
 HEAP16[$9262 >> 1] = 9;
 HEAP16[$9263 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2770, $2771);
 $31620 = $2772;
 HEAP32[$31620 >> 2] = 8192009;
 HEAP32[$31620 + 4 >> 2] = 589825;
 HEAP32[$9264 >> 2] = 33808;
 HEAP16[$2773 >> 1] = 9;
 HEAP16[$9265 >> 1] = 125;
 HEAP16[$9266 >> 1] = 1;
 HEAP16[$9267 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2772, $2773);
 $31624 = $2774;
 HEAP32[$31624 >> 2] = 8716297;
 HEAP32[$31624 + 4 >> 2] = 65545;
 HEAP32[$9268 >> 2] = 33808;
 HEAP16[$2775 >> 1] = 9;
 HEAP16[$9269 >> 1] = 133;
 HEAP16[$9270 >> 1] = 9;
 HEAP16[$9271 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2774, $2775);
 $31628 = $2776;
 HEAP32[$31628 >> 2] = 8192017;
 HEAP32[$31628 + 4 >> 2] = 589825;
 HEAP32[$9272 >> 2] = 33808;
 HEAP16[$2777 >> 1] = 17;
 HEAP16[$9273 >> 1] = 125;
 HEAP16[$9274 >> 1] = 1;
 HEAP16[$9275 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2776, $2777);
 $31632 = $2778;
 HEAP32[$31632 >> 2] = 8978475;
 HEAP32[$31632 + 4 >> 2] = 1048645;
 HEAP32[$9276 >> 2] = 65535;
 HEAP16[$2779 >> 1] = 43;
 HEAP16[$9277 >> 1] = 137;
 HEAP16[$9278 >> 1] = 69;
 HEAP16[$9279 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2778, $2779);
 $31636 = $2780;
 HEAP32[$31636 >> 2] = 9240585;
 HEAP32[$31636 + 4 >> 2] = 524296;
 HEAP32[$9280 >> 2] = 65535;
 HEAP16[$2781 >> 1] = 9;
 HEAP16[$9281 >> 1] = 141;
 HEAP16[$9282 >> 1] = 8;
 HEAP16[$9283 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2780, $2781);
 $31640 = $2782;
 HEAP32[$31640 >> 2] = 9502731;
 HEAP32[$31640 + 4 >> 2] = 65541;
 HEAP32[$9284 >> 2] = 0;
 HEAP16[$2783 >> 1] = 11;
 HEAP16[$9285 >> 1] = 145;
 HEAP16[$9286 >> 1] = 5;
 HEAP16[$9287 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2782, $2783);
 $31644 = $2784;
 HEAP32[$31644 >> 2] = 9371661;
 HEAP32[$31644 + 4 >> 2] = 327681;
 HEAP32[$9288 >> 2] = 0;
 HEAP16[$2785 >> 1] = 13;
 HEAP16[$9289 >> 1] = 143;
 HEAP16[$9290 >> 1] = 1;
 HEAP16[$9291 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2784, $2785);
 $31648 = $2786;
 HEAP32[$31648 >> 2] = 9240585;
 HEAP32[$31648 + 4 >> 2] = 65545;
 HEAP32[$9292 >> 2] = 33808;
 HEAP16[$2787 >> 1] = 9;
 HEAP16[$9293 >> 1] = 141;
 HEAP16[$9294 >> 1] = 9;
 HEAP16[$9295 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2786, $2787);
 $31652 = $2788;
 HEAP32[$31652 >> 2] = 9240585;
 HEAP32[$31652 + 4 >> 2] = 589825;
 HEAP32[$9296 >> 2] = 33808;
 HEAP16[$2789 >> 1] = 9;
 HEAP16[$9297 >> 1] = 141;
 HEAP16[$9298 >> 1] = 1;
 HEAP16[$9299 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2788, $2789);
 $31656 = $2790;
 HEAP32[$31656 >> 2] = 9764873;
 HEAP32[$31656 + 4 >> 2] = 65545;
 HEAP32[$9300 >> 2] = 33808;
 HEAP16[$2791 >> 1] = 9;
 HEAP16[$9301 >> 1] = 149;
 HEAP16[$9302 >> 1] = 9;
 HEAP16[$9303 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2790, $2791);
 $31660 = $2792;
 HEAP32[$31660 >> 2] = 9240593;
 HEAP32[$31660 + 4 >> 2] = 589825;
 HEAP32[$9304 >> 2] = 33808;
 HEAP16[$2793 >> 1] = 17;
 HEAP16[$9305 >> 1] = 141;
 HEAP16[$9306 >> 1] = 1;
 HEAP16[$9307 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2792, $2793);
 $31664 = $2794;
 HEAP32[$31664 >> 2] = 10027051;
 HEAP32[$31664 + 4 >> 2] = 1048624;
 HEAP32[$9308 >> 2] = 65535;
 HEAP16[$2795 >> 1] = 43;
 HEAP16[$9309 >> 1] = 153;
 HEAP16[$9310 >> 1] = 48;
 HEAP16[$9311 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2794, $2795);
 $31668 = $2796;
 HEAP32[$31668 >> 2] = 10289161;
 HEAP32[$31668 + 4 >> 2] = 524296;
 HEAP32[$9312 >> 2] = 65535;
 HEAP16[$2797 >> 1] = 9;
 HEAP16[$9313 >> 1] = 157;
 HEAP16[$9314 >> 1] = 8;
 HEAP16[$9315 >> 1] = 8;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2796, $2797);
 $31672 = $2798;
 HEAP32[$31672 >> 2] = 10551307;
 HEAP32[$31672 + 4 >> 2] = 65541;
 HEAP32[$9316 >> 2] = 0;
 HEAP16[$2799 >> 1] = 11;
 HEAP16[$9317 >> 1] = 161;
 HEAP16[$9318 >> 1] = 5;
 HEAP16[$9319 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2798, $2799);
 $31676 = $2800;
 HEAP32[$31676 >> 2] = 10420237;
 HEAP32[$31676 + 4 >> 2] = 327681;
 HEAP32[$9320 >> 2] = 0;
 HEAP16[$2801 >> 1] = 13;
 HEAP16[$9321 >> 1] = 159;
 HEAP16[$9322 >> 1] = 1;
 HEAP16[$9323 >> 1] = 5;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2800, $2801);
 $31680 = $2802;
 HEAP32[$31680 >> 2] = 10289161;
 HEAP32[$31680 + 4 >> 2] = 65545;
 HEAP32[$9324 >> 2] = 33808;
 HEAP16[$2803 >> 1] = 9;
 HEAP16[$9325 >> 1] = 157;
 HEAP16[$9326 >> 1] = 9;
 HEAP16[$9327 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2802, $2803);
 $31684 = $2804;
 HEAP32[$31684 >> 2] = 10289161;
 HEAP32[$31684 + 4 >> 2] = 589825;
 HEAP32[$9328 >> 2] = 33808;
 HEAP16[$2805 >> 1] = 9;
 HEAP16[$9329 >> 1] = 157;
 HEAP16[$9330 >> 1] = 1;
 HEAP16[$9331 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2804, $2805);
 $31688 = $2806;
 HEAP32[$31688 >> 2] = 10813449;
 HEAP32[$31688 + 4 >> 2] = 65545;
 HEAP32[$9332 >> 2] = 33808;
 HEAP16[$2807 >> 1] = 9;
 HEAP16[$9333 >> 1] = 165;
 HEAP16[$9334 >> 1] = 9;
 HEAP16[$9335 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2806, $2807);
 $31692 = $2808;
 HEAP32[$31692 >> 2] = 10289169;
 HEAP32[$31692 + 4 >> 2] = 589825;
 HEAP32[$9336 >> 2] = 33808;
 HEAP16[$2809 >> 1] = 17;
 HEAP16[$9337 >> 1] = 157;
 HEAP16[$9338 >> 1] = 1;
 HEAP16[$9339 >> 1] = 9;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2808, $2809);
 $31696 = $2810;
 HEAP32[$31696 >> 2] = 13959943;
 HEAP32[$31696 + 4 >> 2] = 1048780;
 HEAP32[$9340 >> 2] = 63422;
 HEAP16[$2811 >> 1] = 775;
 HEAP16[$9341 >> 1] = 213;
 HEAP16[$9342 >> 1] = 1;
 HEAP16[$9343 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2810, $2811);
 $31700 = $2812;
 HEAP32[$31700 >> 2] = 13959943;
 HEAP32[$31700 + 4 >> 2] = 1048780;
 HEAP32[$9344 >> 2] = 63422;
 HEAP16[$2813 >> 1] = 792;
 HEAP16[$9345 >> 1] = 213;
 HEAP16[$9346 >> 1] = 187;
 HEAP16[$9347 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2812, $2813);
 $31704 = $2814;
 HEAP32[$31704 >> 2] = 13959943;
 HEAP32[$31704 + 4 >> 2] = 1048780;
 HEAP32[$9348 >> 2] = 63422;
 HEAP16[$2815 >> 1] = 775;
 HEAP16[$9349 >> 1] = 215;
 HEAP16[$9350 >> 1] = 1;
 HEAP16[$9351 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2814, $2815);
 $31708 = $2816;
 HEAP32[$31708 >> 2] = 13959943;
 HEAP32[$31708 + 4 >> 2] = 1048780;
 HEAP32[$9352 >> 2] = 63422;
 HEAP16[$2817 >> 1] = 792;
 HEAP16[$9353 >> 1] = 215;
 HEAP16[$9354 >> 1] = 3;
 HEAP16[$9355 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2816, $2817);
 $31712 = $2818;
 HEAP32[$31712 >> 2] = 13959943;
 HEAP32[$31712 + 4 >> 2] = 1048780;
 HEAP32[$9356 >> 2] = 63422;
 HEAP16[$2819 >> 1] = 882;
 HEAP16[$9357 >> 1] = 215;
 HEAP16[$9358 >> 1] = 97;
 HEAP16[$9359 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2818, $2819);
 $31716 = $2820;
 HEAP32[$31716 >> 2] = 13959943;
 HEAP32[$31716 + 4 >> 2] = 1048780;
 HEAP32[$9360 >> 2] = 63422;
 HEAP16[$2821 >> 1] = 775;
 HEAP16[$9361 >> 1] = 228;
 HEAP16[$9362 >> 1] = 1;
 HEAP16[$9363 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2820, $2821);
 $31720 = $2822;
 HEAP32[$31720 >> 2] = 13959943;
 HEAP32[$31720 + 4 >> 2] = 1048780;
 HEAP32[$9364 >> 2] = 63422;
 HEAP16[$2823 >> 1] = 792;
 HEAP16[$9365 >> 1] = 228;
 HEAP16[$9366 >> 1] = 187;
 HEAP16[$9367 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2822, $2823);
 $31724 = $2824;
 HEAP32[$31724 >> 2] = 15336199;
 HEAP32[$31724 + 4 >> 2] = 1048780;
 HEAP32[$9368 >> 2] = 63422;
 HEAP16[$2825 >> 1] = 775;
 HEAP16[$9369 >> 1] = 234;
 HEAP16[$9370 >> 1] = 1;
 HEAP16[$9371 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2824, $2825);
 $31728 = $2826;
 HEAP32[$31728 >> 2] = 15336199;
 HEAP32[$31728 + 4 >> 2] = 1048780;
 HEAP32[$9372 >> 2] = 63422;
 HEAP16[$2827 >> 1] = 792;
 HEAP16[$9373 >> 1] = 234;
 HEAP16[$9374 >> 1] = 187;
 HEAP16[$9375 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2826, $2827);
 $31732 = $2828;
 HEAP32[$31732 >> 2] = 15336199;
 HEAP32[$31732 + 4 >> 2] = 1048780;
 HEAP32[$9376 >> 2] = 63422;
 HEAP16[$2829 >> 1] = 775;
 HEAP16[$9377 >> 1] = 236;
 HEAP16[$9378 >> 1] = 1;
 HEAP16[$9379 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2828, $2829);
 $31736 = $2830;
 HEAP32[$31736 >> 2] = 15336199;
 HEAP32[$31736 + 4 >> 2] = 1048780;
 HEAP32[$9380 >> 2] = 63422;
 HEAP16[$2831 >> 1] = 792;
 HEAP16[$9381 >> 1] = 236;
 HEAP16[$9382 >> 1] = 3;
 HEAP16[$9383 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2830, $2831);
 $31740 = $2832;
 HEAP32[$31740 >> 2] = 15336199;
 HEAP32[$31740 + 4 >> 2] = 1048780;
 HEAP32[$9384 >> 2] = 63422;
 HEAP16[$2833 >> 1] = 951;
 HEAP16[$9385 >> 1] = 236;
 HEAP16[$9386 >> 1] = 28;
 HEAP16[$9387 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2832, $2833);
 $31744 = $2834;
 HEAP32[$31744 >> 2] = 15336199;
 HEAP32[$31744 + 4 >> 2] = 1048780;
 HEAP32[$9388 >> 2] = 63422;
 HEAP16[$2835 >> 1] = 775;
 HEAP16[$9389 >> 1] = 249;
 HEAP16[$9390 >> 1] = 1;
 HEAP16[$9391 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2834, $2835);
 $31748 = $2836;
 HEAP32[$31748 >> 2] = 15336199;
 HEAP32[$31748 + 4 >> 2] = 1048780;
 HEAP32[$9392 >> 2] = 63422;
 HEAP16[$2837 >> 1] = 792;
 HEAP16[$9393 >> 1] = 249;
 HEAP16[$9394 >> 1] = 187;
 HEAP16[$9395 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2836, $2837);
 $31752 = $2838;
 HEAP32[$31752 >> 2] = 16712455;
 HEAP32[$31752 + 4 >> 2] = 1048780;
 HEAP32[$9396 >> 2] = 63422;
 HEAP16[$2839 >> 1] = 775;
 HEAP16[$9397 >> 1] = 255;
 HEAP16[$9398 >> 1] = 1;
 HEAP16[$9399 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2838, $2839);
 $31756 = $2840;
 HEAP32[$31756 >> 2] = 16712455;
 HEAP32[$31756 + 4 >> 2] = 1048780;
 HEAP32[$9400 >> 2] = 63422;
 HEAP16[$2841 >> 1] = 792;
 HEAP16[$9401 >> 1] = 255;
 HEAP16[$9402 >> 1] = 187;
 HEAP16[$9403 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2840, $2841);
 $31760 = $2842;
 HEAP32[$31760 >> 2] = 16712455;
 HEAP32[$31760 + 4 >> 2] = 1048780;
 HEAP32[$9404 >> 2] = 63422;
 HEAP16[$2843 >> 1] = 775;
 HEAP16[$9405 >> 1] = 257;
 HEAP16[$9406 >> 1] = 1;
 HEAP16[$9407 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2842, $2843);
 $31764 = $2844;
 HEAP32[$31764 >> 2] = 16712455;
 HEAP32[$31764 + 4 >> 2] = 1048780;
 HEAP32[$9408 >> 2] = 63422;
 HEAP16[$2845 >> 1] = 792;
 HEAP16[$9409 >> 1] = 257;
 HEAP16[$9410 >> 1] = 3;
 HEAP16[$9411 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2844, $2845);
 $31768 = $2846;
 HEAP32[$31768 >> 2] = 16712455;
 HEAP32[$31768 + 4 >> 2] = 1048780;
 HEAP32[$9412 >> 2] = 63422;
 HEAP16[$2847 >> 1] = 949;
 HEAP16[$9413 >> 1] = 257;
 HEAP16[$9414 >> 1] = 30;
 HEAP16[$9415 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2846, $2847);
 $31772 = $2848;
 HEAP32[$31772 >> 2] = 16712455;
 HEAP32[$31772 + 4 >> 2] = 1048780;
 HEAP32[$9416 >> 2] = 63422;
 HEAP16[$2849 >> 1] = 775;
 HEAP16[$9417 >> 1] = 270;
 HEAP16[$9418 >> 1] = 1;
 HEAP16[$9419 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2848, $2849);
 $31776 = $2850;
 HEAP32[$31776 >> 2] = 16712455;
 HEAP32[$31776 + 4 >> 2] = 1048780;
 HEAP32[$9420 >> 2] = 63422;
 HEAP16[$2851 >> 1] = 792;
 HEAP16[$9421 >> 1] = 270;
 HEAP16[$9422 >> 1] = 187;
 HEAP16[$9423 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2850, $2851);
 $31780 = $2852;
 HEAP32[$31780 >> 2] = 18088711;
 HEAP32[$31780 + 4 >> 2] = 1048780;
 HEAP32[$9424 >> 2] = 63422;
 HEAP16[$2853 >> 1] = 775;
 HEAP16[$9425 >> 1] = 276;
 HEAP16[$9426 >> 1] = 1;
 HEAP16[$9427 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2852, $2853);
 $31784 = $2854;
 HEAP32[$31784 >> 2] = 18088711;
 HEAP32[$31784 + 4 >> 2] = 1048780;
 HEAP32[$9428 >> 2] = 63422;
 HEAP16[$2855 >> 1] = 792;
 HEAP16[$9429 >> 1] = 276;
 HEAP16[$9430 >> 1] = 187;
 HEAP16[$9431 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2854, $2855);
 $31788 = $2856;
 HEAP32[$31788 >> 2] = 18088711;
 HEAP32[$31788 + 4 >> 2] = 1048780;
 HEAP32[$9432 >> 2] = 63422;
 HEAP16[$2857 >> 1] = 775;
 HEAP16[$9433 >> 1] = 278;
 HEAP16[$9434 >> 1] = 1;
 HEAP16[$9435 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2856, $2857);
 $31792 = $2858;
 HEAP32[$31792 >> 2] = 18088711;
 HEAP32[$31792 + 4 >> 2] = 1048780;
 HEAP32[$9436 >> 2] = 63422;
 HEAP16[$2859 >> 1] = 792;
 HEAP16[$9437 >> 1] = 278;
 HEAP16[$9438 >> 1] = 3;
 HEAP16[$9439 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2858, $2859);
 $31796 = $2860;
 HEAP32[$31796 >> 2] = 18088711;
 HEAP32[$31796 + 4 >> 2] = 1048780;
 HEAP32[$9440 >> 2] = 63422;
 HEAP16[$2861 >> 1] = 953;
 HEAP16[$9441 >> 1] = 278;
 HEAP16[$9442 >> 1] = 26;
 HEAP16[$9443 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2860, $2861);
 $31800 = $2862;
 HEAP32[$31800 >> 2] = 18088711;
 HEAP32[$31800 + 4 >> 2] = 1048780;
 HEAP32[$9444 >> 2] = 63422;
 HEAP16[$2863 >> 1] = 775;
 HEAP16[$9445 >> 1] = 291;
 HEAP16[$9446 >> 1] = 1;
 HEAP16[$9447 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2862, $2863);
 $31804 = $2864;
 HEAP32[$31804 >> 2] = 18088711;
 HEAP32[$31804 + 4 >> 2] = 1048780;
 HEAP32[$9448 >> 2] = 63422;
 HEAP16[$2865 >> 1] = 792;
 HEAP16[$9449 >> 1] = 291;
 HEAP16[$9450 >> 1] = 187;
 HEAP16[$9451 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2864, $2865);
 $31808 = $2866;
 HEAP32[$31808 >> 2] = 19464967;
 HEAP32[$31808 + 4 >> 2] = 1704140;
 HEAP32[$9452 >> 2] = 63422;
 HEAP16[$2867 >> 1] = 775;
 HEAP16[$9453 >> 1] = 297;
 HEAP16[$9454 >> 1] = 1;
 HEAP16[$9455 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2866, $2867);
 $31812 = $2868;
 HEAP32[$31812 >> 2] = 19464967;
 HEAP32[$31812 + 4 >> 2] = 1704140;
 HEAP32[$9456 >> 2] = 63422;
 HEAP16[$2869 >> 1] = 792;
 HEAP16[$9457 >> 1] = 297;
 HEAP16[$9458 >> 1] = 3;
 HEAP16[$9459 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2868, $2869);
 $31816 = $2870;
 HEAP32[$31816 >> 2] = 19464967;
 HEAP32[$31816 + 4 >> 2] = 1704140;
 HEAP32[$9460 >> 2] = 63422;
 HEAP16[$2871 >> 1] = 972;
 HEAP16[$9461 >> 1] = 297;
 HEAP16[$9462 >> 1] = 7;
 HEAP16[$9463 >> 1] = 16;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2870, $2871);
 $31820 = $2872;
 HEAP32[$31820 >> 2] = 19464967;
 HEAP32[$31820 + 4 >> 2] = 1704140;
 HEAP32[$9464 >> 2] = 63422;
 HEAP16[$2873 >> 1] = 775;
 HEAP16[$9465 >> 1] = 313;
 HEAP16[$9466 >> 1] = 20;
 HEAP16[$9467 >> 1] = 10;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2872, $2873);
 $31824 = $2874;
 HEAP32[$31824 >> 2] = 19464967;
 HEAP32[$31824 + 4 >> 2] = 1704140;
 HEAP32[$9468 >> 2] = 63422;
 HEAP16[$2875 >> 1] = 972;
 HEAP16[$9469 >> 1] = 313;
 HEAP16[$9470 >> 1] = 7;
 HEAP16[$9471 >> 1] = 10;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2874, $2875);
 $31828 = $2876;
 HEAP32[$31828 >> 2] = 11535111;
 HEAP32[$31828 + 4 >> 2] = 1048792;
 HEAP32[$9472 >> 2] = 54938;
 HEAP16[$2877 >> 1] = 775;
 HEAP16[$9473 >> 1] = 176;
 HEAP16[$9474 >> 1] = 1;
 HEAP16[$9475 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2876, $2877);
 $31832 = $2878;
 HEAP32[$31832 >> 2] = 11535111;
 HEAP32[$31832 + 4 >> 2] = 1048792;
 HEAP32[$9476 >> 2] = 54938;
 HEAP16[$2879 >> 1] = 792;
 HEAP16[$9477 >> 1] = 176;
 HEAP16[$9478 >> 1] = 199;
 HEAP16[$9479 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2878, $2879);
 $31836 = $2880;
 HEAP32[$31836 >> 2] = 11535111;
 HEAP32[$31836 + 4 >> 2] = 1048792;
 HEAP32[$9480 >> 2] = 54938;
 HEAP16[$2881 >> 1] = 775;
 HEAP16[$9481 >> 1] = 178;
 HEAP16[$9482 >> 1] = 1;
 HEAP16[$9483 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2880, $2881);
 $31840 = $2882;
 HEAP32[$31840 >> 2] = 11535111;
 HEAP32[$31840 + 4 >> 2] = 1048792;
 HEAP32[$9484 >> 2] = 54938;
 HEAP16[$2883 >> 1] = 792;
 HEAP16[$9485 >> 1] = 178;
 HEAP16[$9486 >> 1] = 3;
 HEAP16[$9487 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2882, $2883);
 $31844 = $2884;
 HEAP32[$31844 >> 2] = 11535111;
 HEAP32[$31844 + 4 >> 2] = 1048792;
 HEAP32[$9488 >> 2] = 54938;
 HEAP16[$2885 >> 1] = 960;
 HEAP16[$9489 >> 1] = 178;
 HEAP16[$9490 >> 1] = 31;
 HEAP16[$9491 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2884, $2885);
 $31848 = $2886;
 HEAP32[$31848 >> 2] = 11535111;
 HEAP32[$31848 + 4 >> 2] = 1048792;
 HEAP32[$9492 >> 2] = 54938;
 HEAP16[$2887 >> 1] = 775;
 HEAP16[$9493 >> 1] = 191;
 HEAP16[$9494 >> 1] = 1;
 HEAP16[$9495 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2886, $2887);
 $31852 = $2888;
 HEAP32[$31852 >> 2] = 11535111;
 HEAP32[$31852 + 4 >> 2] = 1048792;
 HEAP32[$9496 >> 2] = 54938;
 HEAP16[$2889 >> 1] = 792;
 HEAP16[$9497 >> 1] = 191;
 HEAP16[$9498 >> 1] = 199;
 HEAP16[$9499 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2888, $2889);
 $31856 = $2890;
 HEAP32[$31856 >> 2] = 11535111;
 HEAP32[$31856 + 4 >> 2] = 65752;
 HEAP32[$9500 >> 2] = 65470;
 HEAP16[$2891 >> 1] = 775;
 HEAP16[$9501 >> 1] = 176;
 HEAP16[$9502 >> 1] = 1;
 HEAP16[$9503 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2890, $2891);
 $31860 = $2892;
 HEAP32[$31860 >> 2] = 11535111;
 HEAP32[$31860 + 4 >> 2] = 65752;
 HEAP32[$9504 >> 2] = 65470;
 HEAP16[$2893 >> 1] = 792;
 HEAP16[$9505 >> 1] = 176;
 HEAP16[$9506 >> 1] = 199;
 HEAP16[$9507 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2892, $2893);
 $31864 = $2894;
 HEAP32[$31864 >> 2] = 11600647;
 HEAP32[$31864 + 4 >> 2] = 65752;
 HEAP32[$9508 >> 2] = 63422;
 HEAP16[$2895 >> 1] = 775;
 HEAP16[$9509 >> 1] = 177;
 HEAP16[$9510 >> 1] = 1;
 HEAP16[$9511 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2894, $2895);
 $31868 = $2896;
 HEAP32[$31868 >> 2] = 11600647;
 HEAP32[$31868 + 4 >> 2] = 65752;
 HEAP32[$9512 >> 2] = 63422;
 HEAP16[$2897 >> 1] = 792;
 HEAP16[$9513 >> 1] = 177;
 HEAP16[$9514 >> 1] = 199;
 HEAP16[$9515 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2896, $2897);
 $31872 = $2898;
 HEAP32[$31872 >> 2] = 11666183;
 HEAP32[$31872 + 4 >> 2] = 65752;
 HEAP32[$9516 >> 2] = 63390;
 HEAP16[$2899 >> 1] = 775;
 HEAP16[$9517 >> 1] = 178;
 HEAP16[$9518 >> 1] = 1;
 HEAP16[$9519 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2898, $2899);
 $31876 = $2900;
 HEAP32[$31876 >> 2] = 11666183;
 HEAP32[$31876 + 4 >> 2] = 65752;
 HEAP32[$9520 >> 2] = 63390;
 HEAP16[$2901 >> 1] = 792;
 HEAP16[$9521 >> 1] = 178;
 HEAP16[$9522 >> 1] = 3;
 HEAP16[$9523 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2900, $2901);
 $31880 = $2902;
 HEAP32[$31880 >> 2] = 11666183;
 HEAP32[$31880 + 4 >> 2] = 65752;
 HEAP32[$9524 >> 2] = 63390;
 HEAP16[$2903 >> 1] = 960;
 HEAP16[$9525 >> 1] = 178;
 HEAP16[$9526 >> 1] = 31;
 HEAP16[$9527 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2902, $2903);
 $31884 = $2904;
 HEAP32[$31884 >> 2] = 11731719;
 HEAP32[$31884 + 4 >> 2] = 65752;
 HEAP32[$9528 >> 2] = 63389;
 HEAP16[$2905 >> 1] = 775;
 HEAP16[$9529 >> 1] = 179;
 HEAP16[$9530 >> 1] = 1;
 HEAP16[$9531 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2904, $2905);
 $31888 = $2906;
 HEAP32[$31888 >> 2] = 11731719;
 HEAP32[$31888 + 4 >> 2] = 65752;
 HEAP32[$9532 >> 2] = 63389;
 HEAP16[$2907 >> 1] = 792;
 HEAP16[$9533 >> 1] = 179;
 HEAP16[$9534 >> 1] = 3;
 HEAP16[$9535 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2906, $2907);
 $31892 = $2908;
 HEAP32[$31892 >> 2] = 11731719;
 HEAP32[$31892 + 4 >> 2] = 65752;
 HEAP32[$9536 >> 2] = 63389;
 HEAP16[$2909 >> 1] = 960;
 HEAP16[$9537 >> 1] = 179;
 HEAP16[$9538 >> 1] = 31;
 HEAP16[$9539 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2908, $2909);
 $31896 = $2910;
 HEAP32[$31896 >> 2] = 11797255;
 HEAP32[$31896 + 4 >> 2] = 65752;
 HEAP32[$9540 >> 2] = 63357;
 HEAP16[$2911 >> 1] = 775;
 HEAP16[$9541 >> 1] = 180;
 HEAP16[$9542 >> 1] = 1;
 HEAP16[$9543 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2910, $2911);
 $31900 = $2912;
 HEAP32[$31900 >> 2] = 11797255;
 HEAP32[$31900 + 4 >> 2] = 65752;
 HEAP32[$9544 >> 2] = 63357;
 HEAP16[$2913 >> 1] = 792;
 HEAP16[$9545 >> 1] = 180;
 HEAP16[$9546 >> 1] = 3;
 HEAP16[$9547 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2912, $2913);
 $31904 = $2914;
 HEAP32[$31904 >> 2] = 11797255;
 HEAP32[$31904 + 4 >> 2] = 65752;
 HEAP32[$9548 >> 2] = 63357;
 HEAP16[$2915 >> 1] = 960;
 HEAP16[$9549 >> 1] = 180;
 HEAP16[$9550 >> 1] = 31;
 HEAP16[$9551 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2914, $2915);
 $31908 = $2916;
 HEAP32[$31908 >> 2] = 11862791;
 HEAP32[$31908 + 4 >> 2] = 65752;
 HEAP32[$9552 >> 2] = 61309;
 HEAP16[$2917 >> 1] = 775;
 HEAP16[$9553 >> 1] = 181;
 HEAP16[$9554 >> 1] = 1;
 HEAP16[$9555 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2916, $2917);
 $31912 = $2918;
 HEAP32[$31912 >> 2] = 11862791;
 HEAP32[$31912 + 4 >> 2] = 65752;
 HEAP32[$9556 >> 2] = 61309;
 HEAP16[$2919 >> 1] = 792;
 HEAP16[$9557 >> 1] = 181;
 HEAP16[$9558 >> 1] = 3;
 HEAP16[$9559 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2918, $2919);
 $31916 = $2920;
 HEAP32[$31916 >> 2] = 11862791;
 HEAP32[$31916 + 4 >> 2] = 65752;
 HEAP32[$9560 >> 2] = 61309;
 HEAP16[$2921 >> 1] = 960;
 HEAP16[$9561 >> 1] = 181;
 HEAP16[$9562 >> 1] = 31;
 HEAP16[$9563 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2920, $2921);
 $31920 = $2922;
 HEAP32[$31920 >> 2] = 11928327;
 HEAP32[$31920 + 4 >> 2] = 65752;
 HEAP32[$9564 >> 2] = 61277;
 HEAP16[$2923 >> 1] = 775;
 HEAP16[$9565 >> 1] = 182;
 HEAP16[$9566 >> 1] = 1;
 HEAP16[$9567 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2922, $2923);
 $31924 = $2924;
 HEAP32[$31924 >> 2] = 11928327;
 HEAP32[$31924 + 4 >> 2] = 65752;
 HEAP32[$9568 >> 2] = 61277;
 HEAP16[$2925 >> 1] = 792;
 HEAP16[$9569 >> 1] = 182;
 HEAP16[$9570 >> 1] = 3;
 HEAP16[$9571 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2924, $2925);
 $31928 = $2926;
 HEAP32[$31928 >> 2] = 11928327;
 HEAP32[$31928 + 4 >> 2] = 65752;
 HEAP32[$9572 >> 2] = 61277;
 HEAP16[$2927 >> 1] = 960;
 HEAP16[$9573 >> 1] = 182;
 HEAP16[$9574 >> 1] = 31;
 HEAP16[$9575 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2926, $2927);
 $31932 = $2928;
 HEAP32[$31932 >> 2] = 11993863;
 HEAP32[$31932 + 4 >> 2] = 65752;
 HEAP32[$9576 >> 2] = 61276;
 HEAP16[$2929 >> 1] = 775;
 HEAP16[$9577 >> 1] = 183;
 HEAP16[$9578 >> 1] = 1;
 HEAP16[$9579 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2928, $2929);
 $31936 = $2930;
 HEAP32[$31936 >> 2] = 11993863;
 HEAP32[$31936 + 4 >> 2] = 65752;
 HEAP32[$9580 >> 2] = 61276;
 HEAP16[$2931 >> 1] = 792;
 HEAP16[$9581 >> 1] = 183;
 HEAP16[$9582 >> 1] = 3;
 HEAP16[$9583 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2930, $2931);
 $31940 = $2932;
 HEAP32[$31940 >> 2] = 11993863;
 HEAP32[$31940 + 4 >> 2] = 65752;
 HEAP32[$9584 >> 2] = 61276;
 HEAP16[$2933 >> 1] = 960;
 HEAP16[$9585 >> 1] = 183;
 HEAP16[$9586 >> 1] = 31;
 HEAP16[$9587 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2932, $2933);
 $31944 = $2934;
 HEAP32[$31944 >> 2] = 12059399;
 HEAP32[$31944 + 4 >> 2] = 65752;
 HEAP32[$9588 >> 2] = 61276;
 HEAP16[$2935 >> 1] = 775;
 HEAP16[$9589 >> 1] = 184;
 HEAP16[$9590 >> 1] = 1;
 HEAP16[$9591 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2934, $2935);
 $31948 = $2936;
 HEAP32[$31948 >> 2] = 12059399;
 HEAP32[$31948 + 4 >> 2] = 65752;
 HEAP32[$9592 >> 2] = 61276;
 HEAP16[$2937 >> 1] = 792;
 HEAP16[$9593 >> 1] = 184;
 HEAP16[$9594 >> 1] = 3;
 HEAP16[$9595 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2936, $2937);
 $31952 = $2938;
 HEAP32[$31952 >> 2] = 12059399;
 HEAP32[$31952 + 4 >> 2] = 65752;
 HEAP32[$9596 >> 2] = 61276;
 HEAP16[$2939 >> 1] = 960;
 HEAP16[$9597 >> 1] = 184;
 HEAP16[$9598 >> 1] = 31;
 HEAP16[$9599 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2938, $2939);
 $31956 = $2940;
 HEAP32[$31956 >> 2] = 12124935;
 HEAP32[$31956 + 4 >> 2] = 65752;
 HEAP32[$9600 >> 2] = 61244;
 HEAP16[$2941 >> 1] = 775;
 HEAP16[$9601 >> 1] = 185;
 HEAP16[$9602 >> 1] = 1;
 HEAP16[$9603 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2940, $2941);
 $31960 = $2942;
 HEAP32[$31960 >> 2] = 12124935;
 HEAP32[$31960 + 4 >> 2] = 65752;
 HEAP32[$9604 >> 2] = 61244;
 HEAP16[$2943 >> 1] = 792;
 HEAP16[$9605 >> 1] = 185;
 HEAP16[$9606 >> 1] = 3;
 HEAP16[$9607 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2942, $2943);
 $31964 = $2944;
 HEAP32[$31964 >> 2] = 12124935;
 HEAP32[$31964 + 4 >> 2] = 65752;
 HEAP32[$9608 >> 2] = 61244;
 HEAP16[$2945 >> 1] = 960;
 HEAP16[$9609 >> 1] = 185;
 HEAP16[$9610 >> 1] = 31;
 HEAP16[$9611 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2944, $2945);
 $31968 = $2946;
 HEAP32[$31968 >> 2] = 12190471;
 HEAP32[$31968 + 4 >> 2] = 65752;
 HEAP32[$9612 >> 2] = 59195;
 HEAP16[$2947 >> 1] = 775;
 HEAP16[$9613 >> 1] = 186;
 HEAP16[$9614 >> 1] = 1;
 HEAP16[$9615 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2946, $2947);
 $31972 = $2948;
 HEAP32[$31972 >> 2] = 12190471;
 HEAP32[$31972 + 4 >> 2] = 65752;
 HEAP32[$9616 >> 2] = 59195;
 HEAP16[$2949 >> 1] = 792;
 HEAP16[$9617 >> 1] = 186;
 HEAP16[$9618 >> 1] = 3;
 HEAP16[$9619 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2948, $2949);
 $31976 = $2950;
 HEAP32[$31976 >> 2] = 12190471;
 HEAP32[$31976 + 4 >> 2] = 65752;
 HEAP32[$9620 >> 2] = 59195;
 HEAP16[$2951 >> 1] = 960;
 HEAP16[$9621 >> 1] = 186;
 HEAP16[$9622 >> 1] = 31;
 HEAP16[$9623 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2950, $2951);
 $31980 = $2952;
 HEAP32[$31980 >> 2] = 12256007;
 HEAP32[$31980 + 4 >> 2] = 65752;
 HEAP32[$9624 >> 2] = 59163;
 HEAP16[$2953 >> 1] = 775;
 HEAP16[$9625 >> 1] = 187;
 HEAP16[$9626 >> 1] = 1;
 HEAP16[$9627 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2952, $2953);
 $31984 = $2954;
 HEAP32[$31984 >> 2] = 12256007;
 HEAP32[$31984 + 4 >> 2] = 65752;
 HEAP32[$9628 >> 2] = 59163;
 HEAP16[$2955 >> 1] = 792;
 HEAP16[$9629 >> 1] = 187;
 HEAP16[$9630 >> 1] = 3;
 HEAP16[$9631 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2954, $2955);
 $31988 = $2956;
 HEAP32[$31988 >> 2] = 12256007;
 HEAP32[$31988 + 4 >> 2] = 65752;
 HEAP32[$9632 >> 2] = 59163;
 HEAP16[$2957 >> 1] = 960;
 HEAP16[$9633 >> 1] = 187;
 HEAP16[$9634 >> 1] = 31;
 HEAP16[$9635 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2956, $2957);
 $31992 = $2958;
 HEAP32[$31992 >> 2] = 12321543;
 HEAP32[$31992 + 4 >> 2] = 65752;
 HEAP32[$9636 >> 2] = 59163;
 HEAP16[$2959 >> 1] = 775;
 HEAP16[$9637 >> 1] = 188;
 HEAP16[$9638 >> 1] = 1;
 HEAP16[$9639 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2958, $2959);
 $31996 = $2960;
 HEAP32[$31996 >> 2] = 12321543;
 HEAP32[$31996 + 4 >> 2] = 65752;
 HEAP32[$9640 >> 2] = 59163;
 HEAP16[$2961 >> 1] = 792;
 HEAP16[$9641 >> 1] = 188;
 HEAP16[$9642 >> 1] = 3;
 HEAP16[$9643 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2960, $2961);
 $32000 = $2962;
 HEAP32[$32000 >> 2] = 12321543;
 HEAP32[$32000 + 4 >> 2] = 65752;
 HEAP32[$9644 >> 2] = 59163;
 HEAP16[$2963 >> 1] = 960;
 HEAP16[$9645 >> 1] = 188;
 HEAP16[$9646 >> 1] = 31;
 HEAP16[$9647 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2962, $2963);
 $32004 = $2964;
 HEAP32[$32004 >> 2] = 12387079;
 HEAP32[$32004 + 4 >> 2] = 65752;
 HEAP32[$9648 >> 2] = 59131;
 HEAP16[$2965 >> 1] = 775;
 HEAP16[$9649 >> 1] = 189;
 HEAP16[$9650 >> 1] = 1;
 HEAP16[$9651 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2964, $2965);
 $32008 = $2966;
 HEAP32[$32008 >> 2] = 12387079;
 HEAP32[$32008 + 4 >> 2] = 65752;
 HEAP32[$9652 >> 2] = 59131;
 HEAP16[$2967 >> 1] = 792;
 HEAP16[$9653 >> 1] = 189;
 HEAP16[$9654 >> 1] = 3;
 HEAP16[$9655 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2966, $2967);
 $32012 = $2968;
 HEAP32[$32012 >> 2] = 12387079;
 HEAP32[$32012 + 4 >> 2] = 65752;
 HEAP32[$9656 >> 2] = 59131;
 HEAP16[$2969 >> 1] = 960;
 HEAP16[$9657 >> 1] = 189;
 HEAP16[$9658 >> 1] = 31;
 HEAP16[$9659 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2968, $2969);
 $32016 = $2970;
 HEAP32[$32016 >> 2] = 12452615;
 HEAP32[$32016 + 4 >> 2] = 65752;
 HEAP32[$9660 >> 2] = 57082;
 HEAP16[$2971 >> 1] = 775;
 HEAP16[$9661 >> 1] = 190;
 HEAP16[$9662 >> 1] = 1;
 HEAP16[$9663 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2970, $2971);
 $32020 = $2972;
 HEAP32[$32020 >> 2] = 12452615;
 HEAP32[$32020 + 4 >> 2] = 65752;
 HEAP32[$9664 >> 2] = 57082;
 HEAP16[$2973 >> 1] = 792;
 HEAP16[$9665 >> 1] = 190;
 HEAP16[$9666 >> 1] = 3;
 HEAP16[$9667 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2972, $2973);
 $32024 = $2974;
 HEAP32[$32024 >> 2] = 12452615;
 HEAP32[$32024 + 4 >> 2] = 65752;
 HEAP32[$9668 >> 2] = 57082;
 HEAP16[$2975 >> 1] = 960;
 HEAP16[$9669 >> 1] = 190;
 HEAP16[$9670 >> 1] = 31;
 HEAP16[$9671 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2974, $2975);
 $32028 = $2976;
 HEAP32[$32028 >> 2] = 12518151;
 HEAP32[$32028 + 4 >> 2] = 65752;
 HEAP32[$9672 >> 2] = 57050;
 HEAP16[$2977 >> 1] = 775;
 HEAP16[$9673 >> 1] = 191;
 HEAP16[$9674 >> 1] = 1;
 HEAP16[$9675 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2976, $2977);
 $32032 = $2978;
 HEAP32[$32032 >> 2] = 12518151;
 HEAP32[$32032 + 4 >> 2] = 65752;
 HEAP32[$9676 >> 2] = 57050;
 HEAP16[$2979 >> 1] = 792;
 HEAP16[$9677 >> 1] = 191;
 HEAP16[$9678 >> 1] = 199;
 HEAP16[$9679 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2978, $2979);
 $32036 = $2980;
 HEAP32[$32036 >> 2] = 25428974;
 HEAP32[$32036 + 4 >> 2] = 18087952;
 HEAP8[$9680 >> 0] = -16;
 HEAP32[$9681 >> 2] = 65535;
 HEAP32[$9682 >> 2] = 54937;
 HEAP8[$9683 >> 0] = 1;
 HEAP8[$9684 >> 0] = 1;
 HEAP8[$9685 >> 0] = 3;
 HEAP8[$9686 >> 0] = -86;
 HEAP32[$9687 >> 2] = 0;
 HEAP16[$9687 + 4 >> 1] = 0;
 HEAP8[$9687 + 6 >> 0] = 0;
 HEAP16[$2981 >> 1] = 1006;
 HEAP16[$9688 >> 1] = 388;
 HEAP16[$9689 >> 1] = 16;
 HEAP16[$9690 >> 1] = 276;
 __ZN14Front_JS_Natif4drawERK9RDPPatBltRK4Rect($front, $2980, $2981);
 $32040 = $2982;
 HEAP32[$32040 >> 2] = 11600893;
 HEAP32[$32040 + 4 >> 2] = 13828097;
 HEAP32[$9691 >> 2] = 16904;
 HEAP16[$2983 >> 1] = 1021;
 HEAP16[$9692 >> 1] = 177;
 HEAP16[$9693 >> 1] = 1;
 HEAP16[$9694 >> 1] = 211;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2982, $2983);
 $32044 = $2984;
 HEAP32[$32044 >> 2] = 25363438;
 HEAP32[$32044 + 4 >> 2] = 65551;
 HEAP32[$9695 >> 2] = 16904;
 HEAP16[$2985 >> 1] = 1006;
 HEAP16[$9696 >> 1] = 387;
 HEAP16[$9697 >> 1] = 15;
 HEAP16[$9698 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2984, $2985);
 $32048 = $2986;
 HEAP32[$32048 >> 2] = 11600878;
 HEAP32[$32048 + 4 >> 2] = 13762561;
 HEAP32[$9699 >> 2] = 54937;
 HEAP16[$2987 >> 1] = 1006;
 HEAP16[$9700 >> 1] = 177;
 HEAP16[$9701 >> 1] = 1;
 HEAP16[$9702 >> 1] = 210;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2986, $2987);
 $32052 = $2988;
 HEAP32[$32052 >> 2] = 11600879;
 HEAP32[$32052 + 4 >> 2] = 65550;
 HEAP32[$9703 >> 2] = 54937;
 HEAP16[$2989 >> 1] = 1007;
 HEAP16[$9704 >> 1] = 177;
 HEAP16[$9705 >> 1] = 14;
 HEAP16[$9706 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2988, $2989);
 $32056 = $2990;
 HEAP32[$32056 >> 2] = 11666428;
 HEAP32[$32056 + 4 >> 2] = 13697025;
 HEAP32[$9707 >> 2] = 33808;
 HEAP16[$2991 >> 1] = 1020;
 HEAP16[$9708 >> 1] = 178;
 HEAP16[$9709 >> 1] = 1;
 HEAP16[$9710 >> 1] = 209;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2990, $2991);
 $32060 = $2992;
 HEAP32[$32060 >> 2] = 25297903;
 HEAP32[$32060 + 4 >> 2] = 65549;
 HEAP32[$9711 >> 2] = 33808;
 HEAP16[$2993 >> 1] = 1007;
 HEAP16[$9712 >> 1] = 386;
 HEAP16[$9713 >> 1] = 13;
 HEAP16[$9714 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2992, $2993);
 $32064 = $2994;
 HEAP32[$32064 >> 2] = 11666415;
 HEAP32[$32064 + 4 >> 2] = 13631489;
 HEAP32[$9715 >> 2] = 65535;
 HEAP16[$2995 >> 1] = 1007;
 HEAP16[$9716 >> 1] = 178;
 HEAP16[$9717 >> 1] = 1;
 HEAP16[$9718 >> 1] = 208;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2994, $2995);
 $32068 = $2996;
 HEAP32[$32068 >> 2] = 11666416;
 HEAP32[$32068 + 4 >> 2] = 65548;
 HEAP32[$9719 >> 2] = 65535;
 HEAP16[$2997 >> 1] = 1008;
 HEAP16[$9720 >> 1] = 178;
 HEAP16[$9721 >> 1] = 12;
 HEAP16[$9722 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2996, $2997);
 $32072 = $2998;
 HEAP32[$32072 >> 2] = 11731952;
 HEAP32[$32072 + 4 >> 2] = 13565964;
 HEAP32[$9723 >> 2] = 54937;
 HEAP16[$2999 >> 1] = 1008;
 HEAP16[$9724 >> 1] = 179;
 HEAP16[$9725 >> 1] = 12;
 HEAP16[$9726 >> 1] = 207;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $2998, $2999);
 $32076 = $3000;
 HEAP32[$32076 >> 2] = 25428974;
 HEAP32[$32076 + 4 >> 2] = 18087952;
 HEAP8[$9727 >> 0] = -16;
 HEAP32[$9728 >> 2] = 65535;
 HEAP32[$9729 >> 2] = 54937;
 HEAP8[$9730 >> 0] = 1;
 HEAP8[$9731 >> 0] = 1;
 HEAP8[$9732 >> 0] = 3;
 HEAP8[$9733 >> 0] = -86;
 HEAP32[$9734 >> 2] = 0;
 HEAP16[$9734 + 4 >> 1] = 0;
 HEAP8[$9734 + 6 >> 0] = 0;
 HEAP16[$3001 >> 1] = 1006;
 HEAP16[$9735 >> 1] = 388;
 HEAP16[$9736 >> 1] = 16;
 HEAP16[$9737 >> 1] = 276;
 __ZN14Front_JS_Natif4drawERK9RDPPatBltRK4Rect($front, $3000, $3001);
 $32080 = $3002;
 HEAP32[$32080 >> 2] = 11600893;
 HEAP32[$32080 + 4 >> 2] = 13828097;
 HEAP32[$9738 >> 2] = 16904;
 HEAP16[$3003 >> 1] = 1021;
 HEAP16[$9739 >> 1] = 177;
 HEAP16[$9740 >> 1] = 1;
 HEAP16[$9741 >> 1] = 211;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3002, $3003);
 $32084 = $3004;
 HEAP32[$32084 >> 2] = 25363438;
 HEAP32[$32084 + 4 >> 2] = 65551;
 HEAP32[$9742 >> 2] = 16904;
 HEAP16[$3005 >> 1] = 1006;
 HEAP16[$9743 >> 1] = 387;
 HEAP16[$9744 >> 1] = 15;
 HEAP16[$9745 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3004, $3005);
 $32088 = $3006;
 HEAP32[$32088 >> 2] = 11600878;
 HEAP32[$32088 + 4 >> 2] = 13762561;
 HEAP32[$9746 >> 2] = 54937;
 HEAP16[$3007 >> 1] = 1006;
 HEAP16[$9747 >> 1] = 177;
 HEAP16[$9748 >> 1] = 1;
 HEAP16[$9749 >> 1] = 210;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3006, $3007);
 $32092 = $3008;
 HEAP32[$32092 >> 2] = 11600879;
 HEAP32[$32092 + 4 >> 2] = 65550;
 HEAP32[$9750 >> 2] = 54937;
 HEAP16[$3009 >> 1] = 1007;
 HEAP16[$9751 >> 1] = 177;
 HEAP16[$9752 >> 1] = 14;
 HEAP16[$9753 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3008, $3009);
 $32096 = $3010;
 HEAP32[$32096 >> 2] = 11666428;
 HEAP32[$32096 + 4 >> 2] = 13697025;
 HEAP32[$9754 >> 2] = 33808;
 HEAP16[$3011 >> 1] = 1020;
 HEAP16[$9755 >> 1] = 178;
 HEAP16[$9756 >> 1] = 1;
 HEAP16[$9757 >> 1] = 209;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3010, $3011);
 $32100 = $3012;
 HEAP32[$32100 >> 2] = 25297903;
 HEAP32[$32100 + 4 >> 2] = 65549;
 HEAP32[$9758 >> 2] = 33808;
 HEAP16[$3013 >> 1] = 1007;
 HEAP16[$9759 >> 1] = 386;
 HEAP16[$9760 >> 1] = 13;
 HEAP16[$9761 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3012, $3013);
 $32104 = $3014;
 HEAP32[$32104 >> 2] = 11666415;
 HEAP32[$32104 + 4 >> 2] = 13631489;
 HEAP32[$9762 >> 2] = 65535;
 HEAP16[$3015 >> 1] = 1007;
 HEAP16[$9763 >> 1] = 178;
 HEAP16[$9764 >> 1] = 1;
 HEAP16[$9765 >> 1] = 208;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3014, $3015);
 $32108 = $3016;
 HEAP32[$32108 >> 2] = 11666416;
 HEAP32[$32108 + 4 >> 2] = 65548;
 HEAP32[$9766 >> 2] = 65535;
 HEAP16[$3017 >> 1] = 1008;
 HEAP16[$9767 >> 1] = 178;
 HEAP16[$9768 >> 1] = 12;
 HEAP16[$9769 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3016, $3017);
 $32112 = $3018;
 HEAP32[$32112 >> 2] = 11731952;
 HEAP32[$32112 + 4 >> 2] = 13565964;
 HEAP32[$9770 >> 2] = 54937;
 HEAP16[$3019 >> 1] = 1008;
 HEAP16[$9771 >> 1] = 179;
 HEAP16[$9772 >> 1] = 12;
 HEAP16[$9773 >> 1] = 207;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3018, $3019);
 $32116 = $3020;
 HEAP32[$32116 >> 2] = 44564681;
 HEAP32[$32116 + 4 >> 2] = 1441892;
 HEAP32[$9774 >> 2] = 63422;
 HEAP16[$3021 >> 1] = 201;
 HEAP16[$9775 >> 1] = 680;
 HEAP16[$9776 >> 1] = 100;
 HEAP16[$9777 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3020, $3021);
 $32120 = $3022;
 HEAP32[$32120 >> 2] = 44564681;
 HEAP32[$32120 + 4 >> 2] = 1441892;
 HEAP32[$9778 >> 2] = 63422;
 HEAP16[$3023 >> 1] = 201;
 HEAP16[$9779 >> 1] = 683;
 HEAP16[$9780 >> 1] = 3;
 HEAP16[$9781 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3022, $3023);
 $32124 = $3024;
 HEAP32[$32124 >> 2] = 44564681;
 HEAP32[$32124 + 4 >> 2] = 1441892;
 HEAP32[$9782 >> 2] = 63422;
 HEAP16[$3025 >> 1] = 220;
 HEAP16[$9783 >> 1] = 683;
 HEAP16[$9784 >> 1] = 81;
 HEAP16[$9785 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3024, $3025);
 $32128 = $3026;
 HEAP32[$32128 >> 2] = 44564681;
 HEAP32[$32128 + 4 >> 2] = 1441892;
 HEAP32[$9786 >> 2] = 63422;
 HEAP16[$3027 >> 1] = 201;
 HEAP16[$9787 >> 1] = 685;
 HEAP16[$9788 >> 1] = 3;
 HEAP16[$9789 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3026, $3027);
 $32132 = $3028;
 HEAP32[$32132 >> 2] = 44564681;
 HEAP32[$32132 + 4 >> 2] = 1441892;
 HEAP32[$9790 >> 2] = 63422;
 HEAP16[$3029 >> 1] = 220;
 HEAP16[$9791 >> 1] = 685;
 HEAP16[$9792 >> 1] = 3;
 HEAP16[$9793 >> 1] = 13;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3028, $3029);
 $32136 = $3030;
 HEAP32[$32136 >> 2] = 44564681;
 HEAP32[$32136 + 4 >> 2] = 1441892;
 HEAP32[$9794 >> 2] = 63422;
 HEAP16[$3031 >> 1] = 201;
 HEAP16[$9795 >> 1] = 698;
 HEAP16[$9796 >> 1] = 3;
 HEAP16[$9797 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3030, $3031);
 $32140 = $3032;
 HEAP32[$32140 >> 2] = 44564681;
 HEAP32[$32140 + 4 >> 2] = 1441892;
 HEAP32[$9798 >> 2] = 63422;
 HEAP16[$3033 >> 1] = 220;
 HEAP16[$9799 >> 1] = 698;
 HEAP16[$9800 >> 1] = 81;
 HEAP16[$9801 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3032, $3033);
 $32144 = $3034;
 HEAP32[$32144 >> 2] = 44564681;
 HEAP32[$32144 + 4 >> 2] = 1441892;
 HEAP32[$9802 >> 2] = 63422;
 HEAP16[$3035 >> 1] = 201;
 HEAP16[$9803 >> 1] = 699;
 HEAP16[$9804 >> 1] = 100;
 HEAP16[$9805 >> 1] = 3;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3034, $3035);
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 223;
 HEAP16[$9806 >> 1] = 685;
 HEAP16[$9807 >> 1] = 565;
 HEAP16[$9808 >> 1] = 697;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 8996) label = 4578; else {
  $32150 = HEAP32[915090] | 0;
  if (($32150 | 0) == (HEAP32[915088] | 0)) label = 4578; else {
   $$lcssa$i$i3095 = 3660360;
   $$lcssa8$i$i3094 = $32150;
   label = 4579;
  }
 }
 do if ((label | 0) == 4578) {
  if ((HEAP32[915097] | 0) >>> 0 >= 8996) {
   $32157 = HEAP32[915096] | 0;
   if (($32157 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3095 = 3660384;
    $$lcssa8$i$i3094 = $32157;
    label = 4579;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 8996) {
   $32162 = HEAP32[915102] | 0;
   if (($32162 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3095 = 3660408;
    $$lcssa8$i$i3094 = $32162;
    label = 4579;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 8996) {
   $32167 = HEAP32[915108] | 0;
   if (($32167 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3095 = 3660432;
    $$lcssa8$i$i3094 = $32167;
    label = 4579;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 8996) {
   $32172 = HEAP32[915114] | 0;
   if (($32172 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3095 = 3660456;
    $$lcssa8$i$i3094 = $32172;
    label = 4579;
    break;
   }
  }
  $$3$i$i3096 = __Znwj(8996) | 0;
 } while (0);
 if ((label | 0) == 4579) {
  $32155 = $$lcssa8$i$i3094 + -4 | 0;
  HEAP32[$$lcssa$i$i3095 >> 2] = $32155;
  $$3$i$i3096 = HEAP32[$32155 >> 2] | 0;
 }
 $32176 = $$3$i$i3096 + 52 | 0;
 HEAP16[$$3$i$i3096 >> 1] = 344;
 HEAP16[$$3$i$i3096 + 2 >> 1] = 13;
 HEAP8[$$3$i$i3096 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3096 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3096 + 8 >> 2] = 688;
 HEAP32[$$3$i$i3096 + 12 >> 2] = 8944;
 HEAP32[$$3$i$i3096 + 16 >> 2] = $32176;
 HEAP32[$$3$i$i3096 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3096 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3096 + 48 >> 0] = 0;
 HEAP32[$3036 >> 2] = $$3$i$i3096;
 _memcpy($32176 | 0, 3003730, 688) | 0;
 _memcpy($$3$i$i3096 + 740 | 0, 3004418, 688) | 0;
 _memcpy($$3$i$i3096 + 1428 | 0, 3005106, 688) | 0;
 _memcpy($$3$i$i3096 + 2116 | 0, 3005794, 688) | 0;
 _memcpy($$3$i$i3096 + 2804 | 0, 3006482, 688) | 0;
 _memcpy($$3$i$i3096 + 3492 | 0, 3007170, 688) | 0;
 _memcpy($$3$i$i3096 + 4180 | 0, 3007858, 688) | 0;
 _memcpy($$3$i$i3096 + 4868 | 0, 3008546, 688) | 0;
 _memcpy($$3$i$i3096 + 5556 | 0, 3009234, 688) | 0;
 _memcpy($$3$i$i3096 + 6244 | 0, 3009922, 688) | 0;
 _memcpy($$3$i$i3096 + 6932 | 0, 3010610, 688) | 0;
 _memcpy($$3$i$i3096 + 7620 | 0, 3011298, 688) | 0;
 _memcpy($$3$i$i3096 + 8308 | 0, 3011986, 688) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3036);
 if ($$3$i$i3096 | 0) {
  $32199 = $$3$i$i3096 + 5 | 0;
  $32201 = (HEAP8[$32199 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$32199 >> 0] = $32201;
  if (!($32201 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3096);
  HEAP32[$3036 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 201;
 HEAP16[$9809 >> 1] = 680;
 HEAP16[$9810 >> 1] = 300;
 HEAP16[$9811 >> 1] = 680;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 252) label = 4594; else {
  $32205 = HEAP32[915090] | 0;
  if (($32205 | 0) == (HEAP32[915088] | 0)) label = 4594; else {
   $$lcssa$i$i3083 = 3660360;
   $$lcssa8$i$i3082 = $32205;
   label = 4595;
  }
 }
 do if ((label | 0) == 4594) {
  if ((HEAP32[915097] | 0) >>> 0 >= 252) {
   $32212 = HEAP32[915096] | 0;
   if (($32212 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3083 = 3660384;
    $$lcssa8$i$i3082 = $32212;
    label = 4595;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 252) {
   $32217 = HEAP32[915102] | 0;
   if (($32217 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3083 = 3660408;
    $$lcssa8$i$i3082 = $32217;
    label = 4595;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 252) {
   $32222 = HEAP32[915108] | 0;
   if (($32222 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3083 = 3660432;
    $$lcssa8$i$i3082 = $32222;
    label = 4595;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 252) {
   $32227 = HEAP32[915114] | 0;
   if (($32227 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3083 = 3660456;
    $$lcssa8$i$i3082 = $32227;
    label = 4595;
    break;
   }
  }
  $$3$i$i3084 = __Znwj(252) | 0;
 } while (0);
 if ((label | 0) == 4595) {
  $32210 = $$lcssa8$i$i3082 + -4 | 0;
  HEAP32[$$lcssa$i$i3083 >> 2] = $32210;
  $$3$i$i3084 = HEAP32[$32210 >> 2] | 0;
 }
 $32231 = $$3$i$i3084 + 52 | 0;
 HEAP16[$$3$i$i3084 >> 1] = 100;
 HEAP16[$$3$i$i3084 + 2 >> 1] = 1;
 HEAP8[$$3$i$i3084 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3084 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3084 + 8 >> 2] = 200;
 HEAP32[$$3$i$i3084 + 12 >> 2] = 200;
 HEAP32[$$3$i$i3084 + 16 >> 2] = $32231;
 HEAP32[$$3$i$i3084 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3084 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3084 + 48 >> 0] = 0;
 HEAP32[$3037 >> 2] = $$3$i$i3084;
 _memcpy($32231 | 0, 3012674, 200) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3037);
 if ($$3$i$i3084 | 0) {
  $32242 = $$3$i$i3084 + 5 | 0;
  $32244 = (HEAP8[$32242 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$32242 >> 0] = $32244;
  if (!($32244 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3084);
  HEAP32[$3037 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 204;
 HEAP16[$9812 >> 1] = 683;
 HEAP16[$9813 >> 1] = 219;
 HEAP16[$9814 >> 1] = 698;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 564) label = 4610; else {
  $32248 = HEAP32[915090] | 0;
  if (($32248 | 0) == (HEAP32[915088] | 0)) label = 4610; else {
   $$lcssa$i$i3071 = 3660360;
   $$lcssa8$i$i3070 = $32248;
   label = 4611;
  }
 }
 do if ((label | 0) == 4610) {
  if ((HEAP32[915097] | 0) >>> 0 >= 564) {
   $32255 = HEAP32[915096] | 0;
   if (($32255 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3071 = 3660384;
    $$lcssa8$i$i3070 = $32255;
    label = 4611;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 564) {
   $32260 = HEAP32[915102] | 0;
   if (($32260 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3071 = 3660408;
    $$lcssa8$i$i3070 = $32260;
    label = 4611;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 564) {
   $32265 = HEAP32[915108] | 0;
   if (($32265 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3071 = 3660432;
    $$lcssa8$i$i3070 = $32265;
    label = 4611;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 564) {
   $32270 = HEAP32[915114] | 0;
   if (($32270 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3071 = 3660456;
    $$lcssa8$i$i3070 = $32270;
    label = 4611;
    break;
   }
  }
  $$3$i$i3072 = __Znwj(564) | 0;
 } while (0);
 if ((label | 0) == 4611) {
  $32253 = $$lcssa8$i$i3070 + -4 | 0;
  HEAP32[$$lcssa$i$i3071 >> 2] = $32253;
  $$3$i$i3072 = HEAP32[$32253 >> 2] | 0;
 }
 $32274 = $$3$i$i3072 + 52 | 0;
 HEAP16[$$3$i$i3072 >> 1] = 16;
 HEAP16[$$3$i$i3072 + 2 >> 1] = 16;
 HEAP8[$$3$i$i3072 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3072 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3072 + 8 >> 2] = 32;
 HEAP32[$$3$i$i3072 + 12 >> 2] = 512;
 HEAP32[$$3$i$i3072 + 16 >> 2] = $32274;
 HEAP32[$$3$i$i3072 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3072 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3072 + 48 >> 0] = 0;
 HEAP32[$3038 >> 2] = $$3$i$i3072;
 dest = $32274;
 src = 3012874;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3072 + 84 | 0;
 src = 3012906;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3072 + 116 | 0;
 src = 3012938;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3072 + 148 | 0;
 src = 3012970;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3072 + 180 | 0;
 src = 3013002;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3072 + 212 | 0;
 src = 3013034;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3072 + 244 | 0;
 src = 3013066;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3072 + 276 | 0;
 src = 3013098;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3072 + 308 | 0;
 src = 3013130;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3072 + 340 | 0;
 src = 3013162;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3072 + 372 | 0;
 src = 3013194;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3072 + 404 | 0;
 src = 3013226;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3072 + 436 | 0;
 src = 3013258;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3072 + 468 | 0;
 src = 3013290;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3072 + 500 | 0;
 src = 3013322;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i3072 + 532 | 0;
 src = 3013354;
 stop = dest + 32 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3038);
 if ($$3$i$i3072 | 0) {
  $32300 = $$3$i$i3072 + 5 | 0;
  $32302 = (HEAP8[$32300 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$32300 >> 0] = $32302;
  if (!($32302 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3072);
  HEAP32[$3038 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$9815 >> 1] = 172;
 HEAP16[$9816 >> 1] = 994;
 HEAP16[$9817 >> 1] = 174;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4756) label = 4626; else {
  $32306 = HEAP32[915090] | 0;
  if (($32306 | 0) == (HEAP32[915088] | 0)) label = 4626; else {
   $$lcssa$i$i3059 = 3660360;
   $$lcssa8$i$i3058 = $32306;
   label = 4627;
  }
 }
 do if ((label | 0) == 4626) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4756) {
   $32313 = HEAP32[915096] | 0;
   if (($32313 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3059 = 3660384;
    $$lcssa8$i$i3058 = $32313;
    label = 4627;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4756) {
   $32318 = HEAP32[915102] | 0;
   if (($32318 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3059 = 3660408;
    $$lcssa8$i$i3058 = $32318;
    label = 4627;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4756) {
   $32323 = HEAP32[915108] | 0;
   if (($32323 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3059 = 3660432;
    $$lcssa8$i$i3058 = $32323;
    label = 4627;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4756) {
   $32328 = HEAP32[915114] | 0;
   if (($32328 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3059 = 3660456;
    $$lcssa8$i$i3058 = $32328;
    label = 4627;
    break;
   }
  }
  $$3$i$i3060 = __Znwj(4756) | 0;
 } while (0);
 if ((label | 0) == 4627) {
  $32311 = $$lcssa8$i$i3058 + -4 | 0;
  HEAP32[$$lcssa$i$i3059 >> 2] = $32311;
  $$3$i$i3060 = HEAP32[$32311 >> 2] | 0;
 }
 $32332 = $$3$i$i3060 + 52 | 0;
 HEAP16[$$3$i$i3060 >> 1] = 784;
 HEAP16[$$3$i$i3060 + 2 >> 1] = 3;
 HEAP8[$$3$i$i3060 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3060 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3060 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i3060 + 12 >> 2] = 4704;
 HEAP32[$$3$i$i3060 + 16 >> 2] = $32332;
 HEAP32[$$3$i$i3060 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3060 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3060 + 48 >> 0] = 0;
 HEAP32[$3039 >> 2] = $$3$i$i3060;
 _memcpy($32332 | 0, 3013386, 1568) | 0;
 _memcpy($$3$i$i3060 + 1620 | 0, 3014954, 1568) | 0;
 _memcpy($$3$i$i3060 + 3188 | 0, 3016522, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3039);
 if ($$3$i$i3060 | 0) {
  $32345 = $$3$i$i3060 + 5 | 0;
  $32347 = (HEAP8[$32345 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$32345 >> 0] = $32347;
  if (!($32347 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3060);
  HEAP32[$3039 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$9818 >> 1] = 175;
 HEAP16[$9819 >> 1] = 994;
 HEAP16[$9820 >> 1] = 177;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4756) label = 4642; else {
  $32351 = HEAP32[915090] | 0;
  if (($32351 | 0) == (HEAP32[915088] | 0)) label = 4642; else {
   $$lcssa$i$i3047 = 3660360;
   $$lcssa8$i$i3046 = $32351;
   label = 4643;
  }
 }
 do if ((label | 0) == 4642) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4756) {
   $32358 = HEAP32[915096] | 0;
   if (($32358 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3047 = 3660384;
    $$lcssa8$i$i3046 = $32358;
    label = 4643;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4756) {
   $32363 = HEAP32[915102] | 0;
   if (($32363 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3047 = 3660408;
    $$lcssa8$i$i3046 = $32363;
    label = 4643;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4756) {
   $32368 = HEAP32[915108] | 0;
   if (($32368 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3047 = 3660432;
    $$lcssa8$i$i3046 = $32368;
    label = 4643;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4756) {
   $32373 = HEAP32[915114] | 0;
   if (($32373 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3047 = 3660456;
    $$lcssa8$i$i3046 = $32373;
    label = 4643;
    break;
   }
  }
  $$3$i$i3048 = __Znwj(4756) | 0;
 } while (0);
 if ((label | 0) == 4643) {
  $32356 = $$lcssa8$i$i3046 + -4 | 0;
  HEAP32[$$lcssa$i$i3047 >> 2] = $32356;
  $$3$i$i3048 = HEAP32[$32356 >> 2] | 0;
 }
 $32377 = $$3$i$i3048 + 52 | 0;
 HEAP16[$$3$i$i3048 >> 1] = 784;
 HEAP16[$$3$i$i3048 + 2 >> 1] = 3;
 HEAP8[$$3$i$i3048 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3048 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3048 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i3048 + 12 >> 2] = 4704;
 HEAP32[$$3$i$i3048 + 16 >> 2] = $32377;
 HEAP32[$$3$i$i3048 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3048 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3048 + 48 >> 0] = 0;
 HEAP32[$3040 >> 2] = $$3$i$i3048;
 _memcpy($32377 | 0, 3018090, 1568) | 0;
 _memcpy($$3$i$i3048 + 1620 | 0, 3019658, 1568) | 0;
 _memcpy($$3$i$i3048 + 3188 | 0, 3021226, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3040);
 if ($$3$i$i3048 | 0) {
  $32390 = $$3$i$i3048 + 5 | 0;
  $32392 = (HEAP8[$32390 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$32390 >> 0] = $32392;
  if (!($32392 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3048);
  HEAP32[$3040 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$9821 >> 1] = 178;
 HEAP16[$9822 >> 1] = 994;
 HEAP16[$9823 >> 1] = 180;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4756) label = 4658; else {
  $32396 = HEAP32[915090] | 0;
  if (($32396 | 0) == (HEAP32[915088] | 0)) label = 4658; else {
   $$lcssa$i$i3035 = 3660360;
   $$lcssa8$i$i3034 = $32396;
   label = 4659;
  }
 }
 do if ((label | 0) == 4658) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4756) {
   $32403 = HEAP32[915096] | 0;
   if (($32403 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3035 = 3660384;
    $$lcssa8$i$i3034 = $32403;
    label = 4659;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4756) {
   $32408 = HEAP32[915102] | 0;
   if (($32408 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3035 = 3660408;
    $$lcssa8$i$i3034 = $32408;
    label = 4659;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4756) {
   $32413 = HEAP32[915108] | 0;
   if (($32413 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3035 = 3660432;
    $$lcssa8$i$i3034 = $32413;
    label = 4659;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4756) {
   $32418 = HEAP32[915114] | 0;
   if (($32418 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3035 = 3660456;
    $$lcssa8$i$i3034 = $32418;
    label = 4659;
    break;
   }
  }
  $$3$i$i3036 = __Znwj(4756) | 0;
 } while (0);
 if ((label | 0) == 4659) {
  $32401 = $$lcssa8$i$i3034 + -4 | 0;
  HEAP32[$$lcssa$i$i3035 >> 2] = $32401;
  $$3$i$i3036 = HEAP32[$32401 >> 2] | 0;
 }
 $32422 = $$3$i$i3036 + 52 | 0;
 HEAP16[$$3$i$i3036 >> 1] = 784;
 HEAP16[$$3$i$i3036 + 2 >> 1] = 3;
 HEAP8[$$3$i$i3036 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3036 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3036 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i3036 + 12 >> 2] = 4704;
 HEAP32[$$3$i$i3036 + 16 >> 2] = $32422;
 HEAP32[$$3$i$i3036 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3036 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3036 + 48 >> 0] = 0;
 HEAP32[$3041 >> 2] = $$3$i$i3036;
 _memcpy($32422 | 0, 3022794, 1568) | 0;
 _memcpy($$3$i$i3036 + 1620 | 0, 3024362, 1568) | 0;
 _memcpy($$3$i$i3036 + 3188 | 0, 3025930, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3041);
 if ($$3$i$i3036 | 0) {
  $32435 = $$3$i$i3036 + 5 | 0;
  $32437 = (HEAP8[$32435 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$32435 >> 0] = $32437;
  if (!($32437 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3036);
  HEAP32[$3041 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$9824 >> 1] = 181;
 HEAP16[$9825 >> 1] = 994;
 HEAP16[$9826 >> 1] = 183;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4756) label = 4674; else {
  $32441 = HEAP32[915090] | 0;
  if (($32441 | 0) == (HEAP32[915088] | 0)) label = 4674; else {
   $$lcssa$i$i3023 = 3660360;
   $$lcssa8$i$i3022 = $32441;
   label = 4675;
  }
 }
 do if ((label | 0) == 4674) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4756) {
   $32448 = HEAP32[915096] | 0;
   if (($32448 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3023 = 3660384;
    $$lcssa8$i$i3022 = $32448;
    label = 4675;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4756) {
   $32453 = HEAP32[915102] | 0;
   if (($32453 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3023 = 3660408;
    $$lcssa8$i$i3022 = $32453;
    label = 4675;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4756) {
   $32458 = HEAP32[915108] | 0;
   if (($32458 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3023 = 3660432;
    $$lcssa8$i$i3022 = $32458;
    label = 4675;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4756) {
   $32463 = HEAP32[915114] | 0;
   if (($32463 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3023 = 3660456;
    $$lcssa8$i$i3022 = $32463;
    label = 4675;
    break;
   }
  }
  $$3$i$i3024 = __Znwj(4756) | 0;
 } while (0);
 if ((label | 0) == 4675) {
  $32446 = $$lcssa8$i$i3022 + -4 | 0;
  HEAP32[$$lcssa$i$i3023 >> 2] = $32446;
  $$3$i$i3024 = HEAP32[$32446 >> 2] | 0;
 }
 $32467 = $$3$i$i3024 + 52 | 0;
 HEAP16[$$3$i$i3024 >> 1] = 784;
 HEAP16[$$3$i$i3024 + 2 >> 1] = 3;
 HEAP8[$$3$i$i3024 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3024 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3024 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i3024 + 12 >> 2] = 4704;
 HEAP32[$$3$i$i3024 + 16 >> 2] = $32467;
 HEAP32[$$3$i$i3024 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3024 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3024 + 48 >> 0] = 0;
 HEAP32[$3042 >> 2] = $$3$i$i3024;
 _memcpy($32467 | 0, 3027498, 1568) | 0;
 _memcpy($$3$i$i3024 + 1620 | 0, 3029066, 1568) | 0;
 _memcpy($$3$i$i3024 + 3188 | 0, 3030634, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3042);
 if ($$3$i$i3024 | 0) {
  $32480 = $$3$i$i3024 + 5 | 0;
  $32482 = (HEAP8[$32480 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$32480 >> 0] = $32482;
  if (!($32482 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3024);
  HEAP32[$3042 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$9827 >> 1] = 184;
 HEAP16[$9828 >> 1] = 994;
 HEAP16[$9829 >> 1] = 185;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 3188) label = 4690; else {
  $32486 = HEAP32[915090] | 0;
  if (($32486 | 0) == (HEAP32[915088] | 0)) label = 4690; else {
   $$lcssa$i$i3011 = 3660360;
   $$lcssa8$i$i3010 = $32486;
   label = 4691;
  }
 }
 do if ((label | 0) == 4690) {
  if ((HEAP32[915097] | 0) >>> 0 >= 3188) {
   $32493 = HEAP32[915096] | 0;
   if (($32493 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i3011 = 3660384;
    $$lcssa8$i$i3010 = $32493;
    label = 4691;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 3188) {
   $32498 = HEAP32[915102] | 0;
   if (($32498 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i3011 = 3660408;
    $$lcssa8$i$i3010 = $32498;
    label = 4691;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 3188) {
   $32503 = HEAP32[915108] | 0;
   if (($32503 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i3011 = 3660432;
    $$lcssa8$i$i3010 = $32503;
    label = 4691;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 3188) {
   $32508 = HEAP32[915114] | 0;
   if (($32508 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i3011 = 3660456;
    $$lcssa8$i$i3010 = $32508;
    label = 4691;
    break;
   }
  }
  $$3$i$i3012 = __Znwj(3188) | 0;
 } while (0);
 if ((label | 0) == 4691) {
  $32491 = $$lcssa8$i$i3010 + -4 | 0;
  HEAP32[$$lcssa$i$i3011 >> 2] = $32491;
  $$3$i$i3012 = HEAP32[$32491 >> 2] | 0;
 }
 $32512 = $$3$i$i3012 + 52 | 0;
 HEAP16[$$3$i$i3012 >> 1] = 784;
 HEAP16[$$3$i$i3012 + 2 >> 1] = 2;
 HEAP8[$$3$i$i3012 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3012 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3012 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i3012 + 12 >> 2] = 3136;
 HEAP32[$$3$i$i3012 + 16 >> 2] = $32512;
 HEAP32[$$3$i$i3012 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3012 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3012 + 48 >> 0] = 0;
 HEAP32[$3043 >> 2] = $$3$i$i3012;
 _memcpy($32512 | 0, 3032202, 1568) | 0;
 _memcpy($$3$i$i3012 + 1620 | 0, 3033770, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3043);
 if ($$3$i$i3012 | 0) {
  $32524 = $$3$i$i3012 + 5 | 0;
  $32526 = (HEAP8[$32524 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$32524 >> 0] = $32526;
  if (!($32526 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3012);
  HEAP32[$3043 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$9830 >> 1] = 186;
 HEAP16[$9831 >> 1] = 994;
 HEAP16[$9832 >> 1] = 186;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1620) label = 4706; else {
  $32530 = HEAP32[915090] | 0;
  if (($32530 | 0) == (HEAP32[915088] | 0)) label = 4706; else {
   $$lcssa$i$i2999 = 3660360;
   $$lcssa8$i$i2998 = $32530;
   label = 4707;
  }
 }
 do if ((label | 0) == 4706) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1620) {
   $32537 = HEAP32[915096] | 0;
   if (($32537 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2999 = 3660384;
    $$lcssa8$i$i2998 = $32537;
    label = 4707;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1620) {
   $32542 = HEAP32[915102] | 0;
   if (($32542 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2999 = 3660408;
    $$lcssa8$i$i2998 = $32542;
    label = 4707;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1620) {
   $32547 = HEAP32[915108] | 0;
   if (($32547 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2999 = 3660432;
    $$lcssa8$i$i2998 = $32547;
    label = 4707;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1620) {
   $32552 = HEAP32[915114] | 0;
   if (($32552 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2999 = 3660456;
    $$lcssa8$i$i2998 = $32552;
    label = 4707;
    break;
   }
  }
  $$3$i$i3000 = __Znwj(1620) | 0;
 } while (0);
 if ((label | 0) == 4707) {
  $32535 = $$lcssa8$i$i2998 + -4 | 0;
  HEAP32[$$lcssa$i$i2999 >> 2] = $32535;
  $$3$i$i3000 = HEAP32[$32535 >> 2] | 0;
 }
 $32556 = $$3$i$i3000 + 52 | 0;
 HEAP16[$$3$i$i3000 >> 1] = 784;
 HEAP16[$$3$i$i3000 + 2 >> 1] = 1;
 HEAP8[$$3$i$i3000 + 4 >> 0] = 16;
 HEAP8[$$3$i$i3000 + 5 >> 0] = 1;
 HEAP32[$$3$i$i3000 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i3000 + 12 >> 2] = 1568;
 HEAP32[$$3$i$i3000 + 16 >> 2] = $32556;
 HEAP32[$$3$i$i3000 + 20 >> 2] = 0;
 HEAP32[$$3$i$i3000 + 24 >> 2] = 0;
 HEAP8[$$3$i$i3000 + 48 >> 0] = 0;
 HEAP32[$3044 >> 2] = $$3$i$i3000;
 _memcpy($32556 | 0, 3035338, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3044);
 if ($$3$i$i3000 | 0) {
  $32567 = $$3$i$i3000 + 5 | 0;
  $32569 = (HEAP8[$32567 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$32567 >> 0] = $32569;
  if (!($32569 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i3000);
  HEAP32[$3044 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$9833 >> 1] = 187;
 HEAP16[$9834 >> 1] = 994;
 HEAP16[$9835 >> 1] = 190;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6324) label = 4722; else {
  $32573 = HEAP32[915090] | 0;
  if (($32573 | 0) == (HEAP32[915088] | 0)) label = 4722; else {
   $$lcssa$i$i2987 = 3660360;
   $$lcssa8$i$i2986 = $32573;
   label = 4723;
  }
 }
 do if ((label | 0) == 4722) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6324) {
   $32580 = HEAP32[915096] | 0;
   if (($32580 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2987 = 3660384;
    $$lcssa8$i$i2986 = $32580;
    label = 4723;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6324) {
   $32585 = HEAP32[915102] | 0;
   if (($32585 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2987 = 3660408;
    $$lcssa8$i$i2986 = $32585;
    label = 4723;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6324) {
   $32590 = HEAP32[915108] | 0;
   if (($32590 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2987 = 3660432;
    $$lcssa8$i$i2986 = $32590;
    label = 4723;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6324) {
   $32595 = HEAP32[915114] | 0;
   if (($32595 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2987 = 3660456;
    $$lcssa8$i$i2986 = $32595;
    label = 4723;
    break;
   }
  }
  $$3$i$i2988 = __Znwj(6324) | 0;
 } while (0);
 if ((label | 0) == 4723) {
  $32578 = $$lcssa8$i$i2986 + -4 | 0;
  HEAP32[$$lcssa$i$i2987 >> 2] = $32578;
  $$3$i$i2988 = HEAP32[$32578 >> 2] | 0;
 }
 $32599 = $$3$i$i2988 + 52 | 0;
 HEAP16[$$3$i$i2988 >> 1] = 784;
 HEAP16[$$3$i$i2988 + 2 >> 1] = 4;
 HEAP8[$$3$i$i2988 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2988 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2988 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i2988 + 12 >> 2] = 6272;
 HEAP32[$$3$i$i2988 + 16 >> 2] = $32599;
 HEAP32[$$3$i$i2988 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2988 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2988 + 48 >> 0] = 0;
 HEAP32[$3045 >> 2] = $$3$i$i2988;
 _memcpy($32599 | 0, 3036906, 1568) | 0;
 _memcpy($$3$i$i2988 + 1620 | 0, 3038474, 1568) | 0;
 _memcpy($$3$i$i2988 + 3188 | 0, 3040042, 1568) | 0;
 _memcpy($$3$i$i2988 + 4756 | 0, 3041610, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3045);
 if ($$3$i$i2988 | 0) {
  $32613 = $$3$i$i2988 + 5 | 0;
  $32615 = (HEAP8[$32613 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$32613 >> 0] = $32615;
  if (!($32615 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2988);
  HEAP32[$3045 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$9836 >> 1] = 191;
 HEAP16[$9837 >> 1] = 994;
 HEAP16[$9838 >> 1] = 192;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 3188) label = 4738; else {
  $32619 = HEAP32[915090] | 0;
  if (($32619 | 0) == (HEAP32[915088] | 0)) label = 4738; else {
   $$lcssa$i$i2963 = 3660360;
   $$lcssa8$i$i2962 = $32619;
   label = 4739;
  }
 }
 do if ((label | 0) == 4738) {
  if ((HEAP32[915097] | 0) >>> 0 >= 3188) {
   $32626 = HEAP32[915096] | 0;
   if (($32626 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2963 = 3660384;
    $$lcssa8$i$i2962 = $32626;
    label = 4739;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 3188) {
   $32631 = HEAP32[915102] | 0;
   if (($32631 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2963 = 3660408;
    $$lcssa8$i$i2962 = $32631;
    label = 4739;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 3188) {
   $32636 = HEAP32[915108] | 0;
   if (($32636 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2963 = 3660432;
    $$lcssa8$i$i2962 = $32636;
    label = 4739;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 3188) {
   $32641 = HEAP32[915114] | 0;
   if (($32641 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2963 = 3660456;
    $$lcssa8$i$i2962 = $32641;
    label = 4739;
    break;
   }
  }
  $$3$i$i2964 = __Znwj(3188) | 0;
 } while (0);
 if ((label | 0) == 4739) {
  $32624 = $$lcssa8$i$i2962 + -4 | 0;
  HEAP32[$$lcssa$i$i2963 >> 2] = $32624;
  $$3$i$i2964 = HEAP32[$32624 >> 2] | 0;
 }
 $32645 = $$3$i$i2964 + 52 | 0;
 HEAP16[$$3$i$i2964 >> 1] = 784;
 HEAP16[$$3$i$i2964 + 2 >> 1] = 2;
 HEAP8[$$3$i$i2964 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2964 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2964 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i2964 + 12 >> 2] = 3136;
 HEAP32[$$3$i$i2964 + 16 >> 2] = $32645;
 HEAP32[$$3$i$i2964 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2964 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2964 + 48 >> 0] = 0;
 HEAP32[$3046 >> 2] = $$3$i$i2964;
 _memcpy($32645 | 0, 3043178, 1568) | 0;
 _memcpy($$3$i$i2964 + 1620 | 0, 3044746, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3046);
 if ($$3$i$i2964 | 0) {
  $32657 = $$3$i$i2964 + 5 | 0;
  $32659 = (HEAP8[$32657 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$32657 >> 0] = $32659;
  if (!($32659 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2964);
  HEAP32[$3046 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$9839 >> 1] = 193;
 HEAP16[$9840 >> 1] = 994;
 HEAP16[$9841 >> 1] = 195;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4756) label = 4754; else {
  $32663 = HEAP32[915090] | 0;
  if (($32663 | 0) == (HEAP32[915088] | 0)) label = 4754; else {
   $$lcssa$i$i2951 = 3660360;
   $$lcssa8$i$i2950 = $32663;
   label = 4755;
  }
 }
 do if ((label | 0) == 4754) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4756) {
   $32670 = HEAP32[915096] | 0;
   if (($32670 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2951 = 3660384;
    $$lcssa8$i$i2950 = $32670;
    label = 4755;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4756) {
   $32675 = HEAP32[915102] | 0;
   if (($32675 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2951 = 3660408;
    $$lcssa8$i$i2950 = $32675;
    label = 4755;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4756) {
   $32680 = HEAP32[915108] | 0;
   if (($32680 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2951 = 3660432;
    $$lcssa8$i$i2950 = $32680;
    label = 4755;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4756) {
   $32685 = HEAP32[915114] | 0;
   if (($32685 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2951 = 3660456;
    $$lcssa8$i$i2950 = $32685;
    label = 4755;
    break;
   }
  }
  $$3$i$i2952 = __Znwj(4756) | 0;
 } while (0);
 if ((label | 0) == 4755) {
  $32668 = $$lcssa8$i$i2950 + -4 | 0;
  HEAP32[$$lcssa$i$i2951 >> 2] = $32668;
  $$3$i$i2952 = HEAP32[$32668 >> 2] | 0;
 }
 $32689 = $$3$i$i2952 + 52 | 0;
 HEAP16[$$3$i$i2952 >> 1] = 784;
 HEAP16[$$3$i$i2952 + 2 >> 1] = 3;
 HEAP8[$$3$i$i2952 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2952 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2952 + 8 >> 2] = 1568;
 HEAP32[$$3$i$i2952 + 12 >> 2] = 4704;
 HEAP32[$$3$i$i2952 + 16 >> 2] = $32689;
 HEAP32[$$3$i$i2952 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2952 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2952 + 48 >> 0] = 0;
 HEAP32[$3047 >> 2] = $$3$i$i2952;
 _memcpy($32689 | 0, 3046314, 1568) | 0;
 _memcpy($$3$i$i2952 + 1620 | 0, 3047882, 1568) | 0;
 _memcpy($$3$i$i2952 + 3188 | 0, 3049450, 1568) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3047);
 if ($$3$i$i2952 | 0) {
  $32702 = $$3$i$i2952 + 5 | 0;
  $32704 = (HEAP8[$32702 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$32702 >> 0] = $32704;
  if (!($32704 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2952);
  HEAP32[$3047 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$9842 >> 1] = 196;
 HEAP16[$9843 >> 1] = 232;
 HEAP16[$9844 >> 1] = 296;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4900) label = 4770; else {
  $32708 = HEAP32[915090] | 0;
  if (($32708 | 0) == (HEAP32[915088] | 0)) label = 4770; else {
   $$lcssa$i$i2903 = 3660360;
   $$lcssa8$i$i2902 = $32708;
   label = 4771;
  }
 }
 do if ((label | 0) == 4770) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4900) {
   $32715 = HEAP32[915096] | 0;
   if (($32715 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2903 = 3660384;
    $$lcssa8$i$i2902 = $32715;
    label = 4771;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4900) {
   $32720 = HEAP32[915102] | 0;
   if (($32720 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2903 = 3660408;
    $$lcssa8$i$i2902 = $32720;
    label = 4771;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4900) {
   $32725 = HEAP32[915108] | 0;
   if (($32725 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2903 = 3660432;
    $$lcssa8$i$i2902 = $32725;
    label = 4771;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4900) {
   $32730 = HEAP32[915114] | 0;
   if (($32730 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2903 = 3660456;
    $$lcssa8$i$i2902 = $32730;
    label = 4771;
    break;
   }
  }
  $$3$i$i2904 = __Znwj(4900) | 0;
 } while (0);
 if ((label | 0) == 4771) {
  $32713 = $$lcssa8$i$i2902 + -4 | 0;
  HEAP32[$$lcssa$i$i2903 >> 2] = $32713;
  $$3$i$i2904 = HEAP32[$32713 >> 2] | 0;
 }
 $32734 = $$3$i$i2904 + 52 | 0;
 HEAP16[$$3$i$i2904 >> 1] = 24;
 HEAP16[$$3$i$i2904 + 2 >> 1] = 101;
 HEAP8[$$3$i$i2904 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2904 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2904 + 8 >> 2] = 48;
 HEAP32[$$3$i$i2904 + 12 >> 2] = 4848;
 HEAP32[$$3$i$i2904 + 16 >> 2] = $32734;
 HEAP32[$$3$i$i2904 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2904 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2904 + 48 >> 0] = 0;
 HEAP32[$3048 >> 2] = $$3$i$i2904;
 $dest$02$i2898 = $32734;
 $i$03$i2897 = 0;
 $src$01$i2899 = 3051018;
 while (1) {
  dest = $dest$02$i2898;
  src = $src$01$i2899;
  stop = dest + 48 | 0;
  do {
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
  } while ((dest | 0) < (stop | 0));
  $i$03$i2897 = $i$03$i2897 + 1 << 16 >> 16;
  if (($i$03$i2897 & 65535) >= 101) break; else {
   $dest$02$i2898 = $dest$02$i2898 + 48 | 0;
   $src$01$i2899 = $src$01$i2899 + 48 | 0;
  }
 }
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3048);
 if ($$3$i$i2904 | 0) {
  $32749 = $$3$i$i2904 + 5 | 0;
  $32751 = (HEAP8[$32749 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$32749 >> 0] = $32751;
  if (!($32751 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2904);
  HEAP32[$3048 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 776;
 HEAP16[$9845 >> 1] = 297;
 HEAP16[$9846 >> 1] = 971;
 HEAP16[$9847 >> 1] = 322;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 10244) label = 4788; else {
  $32755 = HEAP32[915090] | 0;
  if (($32755 | 0) == (HEAP32[915088] | 0)) label = 4788; else {
   $$lcssa$i$i2855 = 3660360;
   $$lcssa8$i$i2854 = $32755;
   label = 4789;
  }
 }
 do if ((label | 0) == 4788) {
  if ((HEAP32[915097] | 0) >>> 0 >= 10244) {
   $32762 = HEAP32[915096] | 0;
   if (($32762 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2855 = 3660384;
    $$lcssa8$i$i2854 = $32762;
    label = 4789;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 10244) {
   $32767 = HEAP32[915102] | 0;
   if (($32767 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2855 = 3660408;
    $$lcssa8$i$i2854 = $32767;
    label = 4789;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 10244) {
   $32772 = HEAP32[915108] | 0;
   if (($32772 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2855 = 3660432;
    $$lcssa8$i$i2854 = $32772;
    label = 4789;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 10244) {
   $32777 = HEAP32[915114] | 0;
   if (($32777 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2855 = 3660456;
    $$lcssa8$i$i2854 = $32777;
    label = 4789;
    break;
   }
  }
  $$3$i$i2856 = __Znwj(10244) | 0;
 } while (0);
 if ((label | 0) == 4789) {
  $32760 = $$lcssa8$i$i2854 + -4 | 0;
  HEAP32[$$lcssa$i$i2855 >> 2] = $32760;
  $$3$i$i2856 = HEAP32[$32760 >> 2] | 0;
 }
 $32781 = $$3$i$i2856 + 52 | 0;
 HEAP16[$$3$i$i2856 >> 1] = 196;
 HEAP16[$$3$i$i2856 + 2 >> 1] = 26;
 HEAP8[$$3$i$i2856 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2856 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2856 + 8 >> 2] = 392;
 HEAP32[$$3$i$i2856 + 12 >> 2] = 10192;
 HEAP32[$$3$i$i2856 + 16 >> 2] = $32781;
 HEAP32[$$3$i$i2856 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2856 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2856 + 48 >> 0] = 0;
 HEAP32[$3049 >> 2] = $$3$i$i2856;
 _memcpy($32781 | 0, 3055866, 392) | 0;
 _memcpy($$3$i$i2856 + 444 | 0, 3056258, 392) | 0;
 _memcpy($$3$i$i2856 + 836 | 0, 3056650, 392) | 0;
 _memcpy($$3$i$i2856 + 1228 | 0, 3057042, 392) | 0;
 _memcpy($$3$i$i2856 + 1620 | 0, 3057434, 392) | 0;
 _memcpy($$3$i$i2856 + 2012 | 0, 3057826, 392) | 0;
 _memcpy($$3$i$i2856 + 2404 | 0, 3058218, 392) | 0;
 _memcpy($$3$i$i2856 + 2796 | 0, 3058610, 392) | 0;
 _memcpy($$3$i$i2856 + 3188 | 0, 3059002, 392) | 0;
 _memcpy($$3$i$i2856 + 3580 | 0, 3059394, 392) | 0;
 _memcpy($$3$i$i2856 + 3972 | 0, 3059786, 392) | 0;
 _memcpy($$3$i$i2856 + 4364 | 0, 3060178, 392) | 0;
 _memcpy($$3$i$i2856 + 4756 | 0, 3060570, 392) | 0;
 _memcpy($$3$i$i2856 + 5148 | 0, 3060962, 392) | 0;
 _memcpy($$3$i$i2856 + 5540 | 0, 3061354, 392) | 0;
 _memcpy($$3$i$i2856 + 5932 | 0, 3061746, 392) | 0;
 _memcpy($$3$i$i2856 + 6324 | 0, 3062138, 392) | 0;
 _memcpy($$3$i$i2856 + 6716 | 0, 3062530, 392) | 0;
 _memcpy($$3$i$i2856 + 7108 | 0, 3062922, 392) | 0;
 _memcpy($$3$i$i2856 + 7500 | 0, 3063314, 392) | 0;
 _memcpy($$3$i$i2856 + 7892 | 0, 3063706, 392) | 0;
 _memcpy($$3$i$i2856 + 8284 | 0, 3064098, 392) | 0;
 _memcpy($$3$i$i2856 + 8676 | 0, 3064490, 392) | 0;
 _memcpy($$3$i$i2856 + 9068 | 0, 3064882, 392) | 0;
 _memcpy($$3$i$i2856 + 9460 | 0, 3065274, 392) | 0;
 _memcpy($$3$i$i2856 + 9852 | 0, 3065666, 392) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3049);
 if ($$3$i$i2856 | 0) {
  $32817 = $$3$i$i2856 + 5 | 0;
  $32819 = (HEAP8[$32817 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$32817 >> 0] = $32819;
  if (!($32819 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2856);
  HEAP32[$3049 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 776;
 HEAP16[$9848 >> 1] = 234;
 HEAP16[$9849 >> 1] = 952;
 HEAP16[$9850 >> 1] = 270;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 13372) label = 4804; else {
  $32823 = HEAP32[915090] | 0;
  if (($32823 | 0) == (HEAP32[915088] | 0)) label = 4804; else {
   $$lcssa$i$i2843 = 3660360;
   $$lcssa8$i$i2842 = $32823;
   label = 4805;
  }
 }
 do if ((label | 0) == 4804) {
  if ((HEAP32[915097] | 0) >>> 0 >= 13372) {
   $32830 = HEAP32[915096] | 0;
   if (($32830 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2843 = 3660384;
    $$lcssa8$i$i2842 = $32830;
    label = 4805;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 13372) {
   $32835 = HEAP32[915102] | 0;
   if (($32835 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2843 = 3660408;
    $$lcssa8$i$i2842 = $32835;
    label = 4805;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 13372) {
   $32840 = HEAP32[915108] | 0;
   if (($32840 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2843 = 3660432;
    $$lcssa8$i$i2842 = $32840;
    label = 4805;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 13372) {
   $32845 = HEAP32[915114] | 0;
   if (($32845 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2843 = 3660456;
    $$lcssa8$i$i2842 = $32845;
    label = 4805;
    break;
   }
  }
  $$3$i$i2844 = __Znwj(13372) | 0;
 } while (0);
 if ((label | 0) == 4805) {
  $32828 = $$lcssa8$i$i2842 + -4 | 0;
  HEAP32[$$lcssa$i$i2843 >> 2] = $32828;
  $$3$i$i2844 = HEAP32[$32828 >> 2] | 0;
 }
 $32849 = $$3$i$i2844 + 52 | 0;
 HEAP16[$$3$i$i2844 >> 1] = 180;
 HEAP16[$$3$i$i2844 + 2 >> 1] = 37;
 HEAP8[$$3$i$i2844 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2844 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2844 + 8 >> 2] = 360;
 HEAP32[$$3$i$i2844 + 12 >> 2] = 13320;
 HEAP32[$$3$i$i2844 + 16 >> 2] = $32849;
 HEAP32[$$3$i$i2844 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2844 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2844 + 48 >> 0] = 0;
 HEAP32[$3050 >> 2] = $$3$i$i2844;
 _memcpy($32849 | 0, 3066058, 360) | 0;
 _memcpy($$3$i$i2844 + 412 | 0, 3066418, 360) | 0;
 _memcpy($$3$i$i2844 + 772 | 0, 3066778, 360) | 0;
 _memcpy($$3$i$i2844 + 1132 | 0, 3067138, 360) | 0;
 _memcpy($$3$i$i2844 + 1492 | 0, 3067498, 360) | 0;
 _memcpy($$3$i$i2844 + 1852 | 0, 3067858, 360) | 0;
 _memcpy($$3$i$i2844 + 2212 | 0, 3068218, 360) | 0;
 _memcpy($$3$i$i2844 + 2572 | 0, 3068578, 360) | 0;
 _memcpy($$3$i$i2844 + 2932 | 0, 3068938, 360) | 0;
 _memcpy($$3$i$i2844 + 3292 | 0, 3069298, 360) | 0;
 _memcpy($$3$i$i2844 + 3652 | 0, 3069658, 360) | 0;
 _memcpy($$3$i$i2844 + 4012 | 0, 3070018, 360) | 0;
 _memcpy($$3$i$i2844 + 4372 | 0, 3070378, 360) | 0;
 _memcpy($$3$i$i2844 + 4732 | 0, 3070738, 360) | 0;
 _memcpy($$3$i$i2844 + 5092 | 0, 3071098, 360) | 0;
 _memcpy($$3$i$i2844 + 5452 | 0, 3071458, 360) | 0;
 _memcpy($$3$i$i2844 + 5812 | 0, 3071818, 360) | 0;
 _memcpy($$3$i$i2844 + 6172 | 0, 3072178, 360) | 0;
 _memcpy($$3$i$i2844 + 6532 | 0, 3072538, 360) | 0;
 _memcpy($$3$i$i2844 + 6892 | 0, 3072898, 360) | 0;
 _memcpy($$3$i$i2844 + 7252 | 0, 3073258, 360) | 0;
 _memcpy($$3$i$i2844 + 7612 | 0, 3073618, 360) | 0;
 _memcpy($$3$i$i2844 + 7972 | 0, 3073978, 360) | 0;
 _memcpy($$3$i$i2844 + 8332 | 0, 3074338, 360) | 0;
 _memcpy($$3$i$i2844 + 8692 | 0, 3074698, 360) | 0;
 _memcpy($$3$i$i2844 + 9052 | 0, 3075058, 360) | 0;
 _memcpy($$3$i$i2844 + 9412 | 0, 3075418, 360) | 0;
 _memcpy($$3$i$i2844 + 9772 | 0, 3075778, 360) | 0;
 _memcpy($$3$i$i2844 + 10132 | 0, 3076138, 360) | 0;
 _memcpy($$3$i$i2844 + 10492 | 0, 3076498, 360) | 0;
 _memcpy($$3$i$i2844 + 10852 | 0, 3076858, 360) | 0;
 _memcpy($$3$i$i2844 + 11212 | 0, 3077218, 360) | 0;
 _memcpy($$3$i$i2844 + 11572 | 0, 3077578, 360) | 0;
 _memcpy($$3$i$i2844 + 11932 | 0, 3077938, 360) | 0;
 _memcpy($$3$i$i2844 + 12292 | 0, 3078298, 360) | 0;
 _memcpy($$3$i$i2844 + 12652 | 0, 3078658, 360) | 0;
 _memcpy($$3$i$i2844 + 13012 | 0, 3079018, 360) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3050);
 if ($$3$i$i2844 | 0) {
  $32896 = $$3$i$i2844 + 5 | 0;
  $32898 = (HEAP8[$32896 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$32896 >> 0] = $32898;
  if (!($32898 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2844);
  HEAP32[$3050 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 776;
 HEAP16[$9851 >> 1] = 271;
 HEAP16[$9852 >> 1] = 952;
 HEAP16[$9853 >> 1] = 287;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6172) label = 4820; else {
  $32902 = HEAP32[915090] | 0;
  if (($32902 | 0) == (HEAP32[915088] | 0)) label = 4820; else {
   $$lcssa$i$i2831 = 3660360;
   $$lcssa8$i$i2830 = $32902;
   label = 4821;
  }
 }
 do if ((label | 0) == 4820) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6172) {
   $32909 = HEAP32[915096] | 0;
   if (($32909 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2831 = 3660384;
    $$lcssa8$i$i2830 = $32909;
    label = 4821;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6172) {
   $32914 = HEAP32[915102] | 0;
   if (($32914 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2831 = 3660408;
    $$lcssa8$i$i2830 = $32914;
    label = 4821;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6172) {
   $32919 = HEAP32[915108] | 0;
   if (($32919 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2831 = 3660432;
    $$lcssa8$i$i2830 = $32919;
    label = 4821;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6172) {
   $32924 = HEAP32[915114] | 0;
   if (($32924 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2831 = 3660456;
    $$lcssa8$i$i2830 = $32924;
    label = 4821;
    break;
   }
  }
  $$3$i$i2832 = __Znwj(6172) | 0;
 } while (0);
 if ((label | 0) == 4821) {
  $32907 = $$lcssa8$i$i2830 + -4 | 0;
  HEAP32[$$lcssa$i$i2831 >> 2] = $32907;
  $$3$i$i2832 = HEAP32[$32907 >> 2] | 0;
 }
 $32928 = $$3$i$i2832 + 52 | 0;
 HEAP16[$$3$i$i2832 >> 1] = 180;
 HEAP16[$$3$i$i2832 + 2 >> 1] = 17;
 HEAP8[$$3$i$i2832 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2832 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2832 + 8 >> 2] = 360;
 HEAP32[$$3$i$i2832 + 12 >> 2] = 6120;
 HEAP32[$$3$i$i2832 + 16 >> 2] = $32928;
 HEAP32[$$3$i$i2832 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2832 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2832 + 48 >> 0] = 0;
 HEAP32[$3051 >> 2] = $$3$i$i2832;
 _memcpy($32928 | 0, 3079378, 360) | 0;
 _memcpy($$3$i$i2832 + 412 | 0, 3079738, 360) | 0;
 _memcpy($$3$i$i2832 + 772 | 0, 3080098, 360) | 0;
 _memcpy($$3$i$i2832 + 1132 | 0, 3080458, 360) | 0;
 _memcpy($$3$i$i2832 + 1492 | 0, 3080818, 360) | 0;
 _memcpy($$3$i$i2832 + 1852 | 0, 3081178, 360) | 0;
 _memcpy($$3$i$i2832 + 2212 | 0, 3081538, 360) | 0;
 _memcpy($$3$i$i2832 + 2572 | 0, 3081898, 360) | 0;
 _memcpy($$3$i$i2832 + 2932 | 0, 3082258, 360) | 0;
 _memcpy($$3$i$i2832 + 3292 | 0, 3082618, 360) | 0;
 _memcpy($$3$i$i2832 + 3652 | 0, 3082978, 360) | 0;
 _memcpy($$3$i$i2832 + 4012 | 0, 3083338, 360) | 0;
 _memcpy($$3$i$i2832 + 4372 | 0, 3083698, 360) | 0;
 _memcpy($$3$i$i2832 + 4732 | 0, 3084058, 360) | 0;
 _memcpy($$3$i$i2832 + 5092 | 0, 3084418, 360) | 0;
 _memcpy($$3$i$i2832 + 5452 | 0, 3084778, 360) | 0;
 _memcpy($$3$i$i2832 + 5812 | 0, 3085138, 360) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3051);
 if ($$3$i$i2832 | 0) {
  $32955 = $$3$i$i2832 + 5 | 0;
  $32957 = (HEAP8[$32955 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$32955 >> 0] = $32957;
  if (!($32957 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2832);
  HEAP32[$3051 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 776;
 HEAP16[$9854 >> 1] = 288;
 HEAP16[$9855 >> 1] = 952;
 HEAP16[$9856 >> 1] = 291;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1492) label = 4836; else {
  $32961 = HEAP32[915090] | 0;
  if (($32961 | 0) == (HEAP32[915088] | 0)) label = 4836; else {
   $$lcssa$i$i2819 = 3660360;
   $$lcssa8$i$i2818 = $32961;
   label = 4837;
  }
 }
 do if ((label | 0) == 4836) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1492) {
   $32968 = HEAP32[915096] | 0;
   if (($32968 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2819 = 3660384;
    $$lcssa8$i$i2818 = $32968;
    label = 4837;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1492) {
   $32973 = HEAP32[915102] | 0;
   if (($32973 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2819 = 3660408;
    $$lcssa8$i$i2818 = $32973;
    label = 4837;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1492) {
   $32978 = HEAP32[915108] | 0;
   if (($32978 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2819 = 3660432;
    $$lcssa8$i$i2818 = $32978;
    label = 4837;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1492) {
   $32983 = HEAP32[915114] | 0;
   if (($32983 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2819 = 3660456;
    $$lcssa8$i$i2818 = $32983;
    label = 4837;
    break;
   }
  }
  $$3$i$i2820 = __Znwj(1492) | 0;
 } while (0);
 if ((label | 0) == 4837) {
  $32966 = $$lcssa8$i$i2818 + -4 | 0;
  HEAP32[$$lcssa$i$i2819 >> 2] = $32966;
  $$3$i$i2820 = HEAP32[$32966 >> 2] | 0;
 }
 $32987 = $$3$i$i2820 + 52 | 0;
 HEAP16[$$3$i$i2820 >> 1] = 180;
 HEAP16[$$3$i$i2820 + 2 >> 1] = 4;
 HEAP8[$$3$i$i2820 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2820 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2820 + 8 >> 2] = 360;
 HEAP32[$$3$i$i2820 + 12 >> 2] = 1440;
 HEAP32[$$3$i$i2820 + 16 >> 2] = $32987;
 HEAP32[$$3$i$i2820 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2820 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2820 + 48 >> 0] = 0;
 HEAP32[$3052 >> 2] = $$3$i$i2820;
 _memcpy($32987 | 0, 3085498, 360) | 0;
 _memcpy($$3$i$i2820 + 412 | 0, 3085858, 360) | 0;
 _memcpy($$3$i$i2820 + 772 | 0, 3086218, 360) | 0;
 _memcpy($$3$i$i2820 + 1132 | 0, 3086578, 360) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3052);
 if ($$3$i$i2820 | 0) {
  $33001 = $$3$i$i2820 + 5 | 0;
  $33003 = (HEAP8[$33001 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$33001 >> 0] = $33003;
  if (!($33003 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2820);
  HEAP32[$3052 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 776;
 HEAP16[$9857 >> 1] = 213;
 HEAP16[$9858 >> 1] = 881;
 HEAP16[$9859 >> 1] = 225;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2860) label = 4852; else {
  $33007 = HEAP32[915090] | 0;
  if (($33007 | 0) == (HEAP32[915088] | 0)) label = 4852; else {
   $$lcssa$i$i2807 = 3660360;
   $$lcssa8$i$i2806 = $33007;
   label = 4853;
  }
 }
 do if ((label | 0) == 4852) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2860) {
   $33014 = HEAP32[915096] | 0;
   if (($33014 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2807 = 3660384;
    $$lcssa8$i$i2806 = $33014;
    label = 4853;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2860) {
   $33019 = HEAP32[915102] | 0;
   if (($33019 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2807 = 3660408;
    $$lcssa8$i$i2806 = $33019;
    label = 4853;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2860) {
   $33024 = HEAP32[915108] | 0;
   if (($33024 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2807 = 3660432;
    $$lcssa8$i$i2806 = $33024;
    label = 4853;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2860) {
   $33029 = HEAP32[915114] | 0;
   if (($33029 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2807 = 3660456;
    $$lcssa8$i$i2806 = $33029;
    label = 4853;
    break;
   }
  }
  $$3$i$i2808 = __Znwj(2860) | 0;
 } while (0);
 if ((label | 0) == 4853) {
  $33012 = $$lcssa8$i$i2806 + -4 | 0;
  HEAP32[$$lcssa$i$i2807 >> 2] = $33012;
  $$3$i$i2808 = HEAP32[$33012 >> 2] | 0;
 }
 $33033 = $$3$i$i2808 + 52 | 0;
 HEAP16[$$3$i$i2808 >> 1] = 108;
 HEAP16[$$3$i$i2808 + 2 >> 1] = 13;
 HEAP8[$$3$i$i2808 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2808 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2808 + 8 >> 2] = 216;
 HEAP32[$$3$i$i2808 + 12 >> 2] = 2808;
 HEAP32[$$3$i$i2808 + 16 >> 2] = $33033;
 HEAP32[$$3$i$i2808 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2808 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2808 + 48 >> 0] = 0;
 HEAP32[$3053 >> 2] = $$3$i$i2808;
 _memcpy($33033 | 0, 3086938, 216) | 0;
 _memcpy($$3$i$i2808 + 268 | 0, 3087154, 216) | 0;
 _memcpy($$3$i$i2808 + 484 | 0, 3087370, 216) | 0;
 _memcpy($$3$i$i2808 + 700 | 0, 3087586, 216) | 0;
 _memcpy($$3$i$i2808 + 916 | 0, 3087802, 216) | 0;
 _memcpy($$3$i$i2808 + 1132 | 0, 3088018, 216) | 0;
 _memcpy($$3$i$i2808 + 1348 | 0, 3088234, 216) | 0;
 _memcpy($$3$i$i2808 + 1564 | 0, 3088450, 216) | 0;
 _memcpy($$3$i$i2808 + 1780 | 0, 3088666, 216) | 0;
 _memcpy($$3$i$i2808 + 1996 | 0, 3088882, 216) | 0;
 _memcpy($$3$i$i2808 + 2212 | 0, 3089098, 216) | 0;
 _memcpy($$3$i$i2808 + 2428 | 0, 3089314, 216) | 0;
 _memcpy($$3$i$i2808 + 2644 | 0, 3089530, 216) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3053);
 if ($$3$i$i2808 | 0) {
  $33056 = $$3$i$i2808 + 5 | 0;
  $33058 = (HEAP8[$33056 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$33056 >> 0] = $33058;
  if (!($33058 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2808);
  HEAP32[$3053 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 776;
 HEAP16[$9860 >> 1] = 226;
 HEAP16[$9861 >> 1] = 881;
 HEAP16[$9862 >> 1] = 228;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 700) label = 4868; else {
  $33062 = HEAP32[915090] | 0;
  if (($33062 | 0) == (HEAP32[915088] | 0)) label = 4868; else {
   $$lcssa$i$i2795 = 3660360;
   $$lcssa8$i$i2794 = $33062;
   label = 4869;
  }
 }
 do if ((label | 0) == 4868) {
  if ((HEAP32[915097] | 0) >>> 0 >= 700) {
   $33069 = HEAP32[915096] | 0;
   if (($33069 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2795 = 3660384;
    $$lcssa8$i$i2794 = $33069;
    label = 4869;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 700) {
   $33074 = HEAP32[915102] | 0;
   if (($33074 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2795 = 3660408;
    $$lcssa8$i$i2794 = $33074;
    label = 4869;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 700) {
   $33079 = HEAP32[915108] | 0;
   if (($33079 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2795 = 3660432;
    $$lcssa8$i$i2794 = $33079;
    label = 4869;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 700) {
   $33084 = HEAP32[915114] | 0;
   if (($33084 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2795 = 3660456;
    $$lcssa8$i$i2794 = $33084;
    label = 4869;
    break;
   }
  }
  $$3$i$i2796 = __Znwj(700) | 0;
 } while (0);
 if ((label | 0) == 4869) {
  $33067 = $$lcssa8$i$i2794 + -4 | 0;
  HEAP32[$$lcssa$i$i2795 >> 2] = $33067;
  $$3$i$i2796 = HEAP32[$33067 >> 2] | 0;
 }
 $33088 = $$3$i$i2796 + 52 | 0;
 HEAP16[$$3$i$i2796 >> 1] = 108;
 HEAP16[$$3$i$i2796 + 2 >> 1] = 3;
 HEAP8[$$3$i$i2796 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2796 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2796 + 8 >> 2] = 216;
 HEAP32[$$3$i$i2796 + 12 >> 2] = 648;
 HEAP32[$$3$i$i2796 + 16 >> 2] = $33088;
 HEAP32[$$3$i$i2796 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2796 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2796 + 48 >> 0] = 0;
 HEAP32[$3054 >> 2] = $$3$i$i2796;
 _memcpy($33088 | 0, 3089746, 216) | 0;
 _memcpy($$3$i$i2796 + 268 | 0, 3089962, 216) | 0;
 _memcpy($$3$i$i2796 + 484 | 0, 3090178, 216) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3054);
 if ($$3$i$i2796 | 0) {
  $33101 = $$3$i$i2796 + 5 | 0;
  $33103 = (HEAP8[$33101 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$33101 >> 0] = $33103;
  if (!($33103 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2796);
  HEAP32[$3054 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 769;
 HEAP16[$9863 >> 1] = 328;
 HEAP16[$9864 >> 1] = 984;
 HEAP16[$9865 >> 1] = 328;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 484) label = 4884; else {
  $33107 = HEAP32[915090] | 0;
  if (($33107 | 0) == (HEAP32[915088] | 0)) label = 4884; else {
   $$lcssa$i$i2783 = 3660360;
   $$lcssa8$i$i2782 = $33107;
   label = 4885;
  }
 }
 do if ((label | 0) == 4884) {
  if ((HEAP32[915097] | 0) >>> 0 >= 484) {
   $33114 = HEAP32[915096] | 0;
   if (($33114 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2783 = 3660384;
    $$lcssa8$i$i2782 = $33114;
    label = 4885;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 484) {
   $33119 = HEAP32[915102] | 0;
   if (($33119 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2783 = 3660408;
    $$lcssa8$i$i2782 = $33119;
    label = 4885;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 484) {
   $33124 = HEAP32[915108] | 0;
   if (($33124 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2783 = 3660432;
    $$lcssa8$i$i2782 = $33124;
    label = 4885;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 484) {
   $33129 = HEAP32[915114] | 0;
   if (($33129 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2783 = 3660456;
    $$lcssa8$i$i2782 = $33129;
    label = 4885;
    break;
   }
  }
  $$3$i$i2784 = __Znwj(484) | 0;
 } while (0);
 if ((label | 0) == 4885) {
  $33112 = $$lcssa8$i$i2782 + -4 | 0;
  HEAP32[$$lcssa$i$i2783 >> 2] = $33112;
  $$3$i$i2784 = HEAP32[$33112 >> 2] | 0;
 }
 $33133 = $$3$i$i2784 + 52 | 0;
 HEAP16[$$3$i$i2784 >> 1] = 216;
 HEAP16[$$3$i$i2784 + 2 >> 1] = 1;
 HEAP8[$$3$i$i2784 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2784 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2784 + 8 >> 2] = 432;
 HEAP32[$$3$i$i2784 + 12 >> 2] = 432;
 HEAP32[$$3$i$i2784 + 16 >> 2] = $33133;
 HEAP32[$$3$i$i2784 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2784 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2784 + 48 >> 0] = 0;
 HEAP32[$3055 >> 2] = $$3$i$i2784;
 _memcpy($33133 | 0, 3090394, 432) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3055);
 if ($$3$i$i2784 | 0) {
  $33144 = $$3$i$i2784 + 5 | 0;
  $33146 = (HEAP8[$33144 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$33144 >> 0] = $33146;
  if (!($33146 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2784);
  HEAP32[$3055 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 984;
 HEAP16[$9866 >> 1] = 208;
 HEAP16[$9867 >> 1] = 984;
 HEAP16[$9868 >> 1] = 327;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1012) label = 4900; else {
  $33150 = HEAP32[915090] | 0;
  if (($33150 | 0) == (HEAP32[915088] | 0)) label = 4900; else {
   $$lcssa$i$i2771 = 3660360;
   $$lcssa8$i$i2770 = $33150;
   label = 4901;
  }
 }
 do if ((label | 0) == 4900) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1012) {
   $33157 = HEAP32[915096] | 0;
   if (($33157 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2771 = 3660384;
    $$lcssa8$i$i2770 = $33157;
    label = 4901;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1012) {
   $33162 = HEAP32[915102] | 0;
   if (($33162 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2771 = 3660408;
    $$lcssa8$i$i2770 = $33162;
    label = 4901;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1012) {
   $33167 = HEAP32[915108] | 0;
   if (($33167 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2771 = 3660432;
    $$lcssa8$i$i2770 = $33167;
    label = 4901;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1012) {
   $33172 = HEAP32[915114] | 0;
   if (($33172 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2771 = 3660456;
    $$lcssa8$i$i2770 = $33172;
    label = 4901;
    break;
   }
  }
  $$3$i$i2772 = __Znwj(1012) | 0;
 } while (0);
 if ((label | 0) == 4901) {
  $33155 = $$lcssa8$i$i2770 + -4 | 0;
  HEAP32[$$lcssa$i$i2771 >> 2] = $33155;
  $$3$i$i2772 = HEAP32[$33155 >> 2] | 0;
 }
 $33176 = $$3$i$i2772 + 52 | 0;
 HEAP16[$$3$i$i2772 >> 1] = 4;
 HEAP16[$$3$i$i2772 + 2 >> 1] = 120;
 HEAP8[$$3$i$i2772 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2772 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2772 + 8 >> 2] = 8;
 HEAP32[$$3$i$i2772 + 12 >> 2] = 960;
 HEAP32[$$3$i$i2772 + 16 >> 2] = $33176;
 HEAP32[$$3$i$i2772 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2772 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2772 + 48 >> 0] = 0;
 HEAP32[$3056 >> 2] = $$3$i$i2772;
 $dest$02$i2766 = $33176;
 $i$03$i2765 = 0;
 $src$01$i2767 = 3090826;
 while (1) {
  $33186 = $src$01$i2767;
  $33187 = $33186;
  $33188 = HEAPU8[$33187 >> 0] | HEAPU8[$33187 + 1 >> 0] << 8 | HEAPU8[$33187 + 2 >> 0] << 16 | HEAPU8[$33187 + 3 >> 0] << 24;
  $33190 = $33186 + 4 | 0;
  $33191 = HEAPU8[$33190 >> 0] | HEAPU8[$33190 + 1 >> 0] << 8 | HEAPU8[$33190 + 2 >> 0] << 16 | HEAPU8[$33190 + 3 >> 0] << 24;
  $33192 = $dest$02$i2766;
  $33193 = $33192;
  HEAP8[$33193 >> 0] = $33188;
  HEAP8[$33193 + 1 >> 0] = $33188 >> 8;
  HEAP8[$33193 + 2 >> 0] = $33188 >> 16;
  HEAP8[$33193 + 3 >> 0] = $33188 >> 24;
  $33195 = $33192 + 4 | 0;
  HEAP8[$33195 >> 0] = $33191;
  HEAP8[$33195 + 1 >> 0] = $33191 >> 8;
  HEAP8[$33195 + 2 >> 0] = $33191 >> 16;
  HEAP8[$33195 + 3 >> 0] = $33191 >> 24;
  $i$03$i2765 = $i$03$i2765 + 1 << 16 >> 16;
  if (($i$03$i2765 & 65535) >= 120) break; else {
   $dest$02$i2766 = $dest$02$i2766 + 8 | 0;
   $src$01$i2767 = $src$01$i2767 + 8 | 0;
  }
 }
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3056);
 if ($$3$i$i2772 | 0) {
  $33201 = $$3$i$i2772 + 5 | 0;
  $33203 = (HEAP8[$33201 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$33201 >> 0] = $33203;
  if (!($33203 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2772);
  HEAP32[$3056 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 769;
 HEAP16[$9869 >> 1] = 208;
 HEAP16[$9870 >> 1] = 769;
 HEAP16[$9871 >> 1] = 327;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1012) label = 4918; else {
  $33207 = HEAP32[915090] | 0;
  if (($33207 | 0) == (HEAP32[915088] | 0)) label = 4918; else {
   $$lcssa$i$i2759 = 3660360;
   $$lcssa8$i$i2758 = $33207;
   label = 4919;
  }
 }
 do if ((label | 0) == 4918) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1012) {
   $33214 = HEAP32[915096] | 0;
   if (($33214 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2759 = 3660384;
    $$lcssa8$i$i2758 = $33214;
    label = 4919;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1012) {
   $33219 = HEAP32[915102] | 0;
   if (($33219 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2759 = 3660408;
    $$lcssa8$i$i2758 = $33219;
    label = 4919;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1012) {
   $33224 = HEAP32[915108] | 0;
   if (($33224 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2759 = 3660432;
    $$lcssa8$i$i2758 = $33224;
    label = 4919;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1012) {
   $33229 = HEAP32[915114] | 0;
   if (($33229 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2759 = 3660456;
    $$lcssa8$i$i2758 = $33229;
    label = 4919;
    break;
   }
  }
  $$3$i$i2760 = __Znwj(1012) | 0;
 } while (0);
 if ((label | 0) == 4919) {
  $33212 = $$lcssa8$i$i2758 + -4 | 0;
  HEAP32[$$lcssa$i$i2759 >> 2] = $33212;
  $$3$i$i2760 = HEAP32[$33212 >> 2] | 0;
 }
 $33233 = $$3$i$i2760 + 52 | 0;
 HEAP16[$$3$i$i2760 >> 1] = 4;
 HEAP16[$$3$i$i2760 + 2 >> 1] = 120;
 HEAP8[$$3$i$i2760 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2760 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2760 + 8 >> 2] = 8;
 HEAP32[$$3$i$i2760 + 12 >> 2] = 960;
 HEAP32[$$3$i$i2760 + 16 >> 2] = $33233;
 HEAP32[$$3$i$i2760 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2760 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2760 + 48 >> 0] = 0;
 HEAP32[$3057 >> 2] = $$3$i$i2760;
 $dest$02$i2754 = $33233;
 $i$03$i2753 = 0;
 $src$01$i2755 = 3091786;
 while (1) {
  $33243 = $src$01$i2755;
  $33244 = $33243;
  $33245 = HEAPU8[$33244 >> 0] | HEAPU8[$33244 + 1 >> 0] << 8 | HEAPU8[$33244 + 2 >> 0] << 16 | HEAPU8[$33244 + 3 >> 0] << 24;
  $33247 = $33243 + 4 | 0;
  $33248 = HEAPU8[$33247 >> 0] | HEAPU8[$33247 + 1 >> 0] << 8 | HEAPU8[$33247 + 2 >> 0] << 16 | HEAPU8[$33247 + 3 >> 0] << 24;
  $33249 = $dest$02$i2754;
  $33250 = $33249;
  HEAP8[$33250 >> 0] = $33245;
  HEAP8[$33250 + 1 >> 0] = $33245 >> 8;
  HEAP8[$33250 + 2 >> 0] = $33245 >> 16;
  HEAP8[$33250 + 3 >> 0] = $33245 >> 24;
  $33252 = $33249 + 4 | 0;
  HEAP8[$33252 >> 0] = $33248;
  HEAP8[$33252 + 1 >> 0] = $33248 >> 8;
  HEAP8[$33252 + 2 >> 0] = $33248 >> 16;
  HEAP8[$33252 + 3 >> 0] = $33248 >> 24;
  $i$03$i2753 = $i$03$i2753 + 1 << 16 >> 16;
  if (($i$03$i2753 & 65535) >= 120) break; else {
   $dest$02$i2754 = $dest$02$i2754 + 8 | 0;
   $src$01$i2755 = $src$01$i2755 + 8 | 0;
  }
 }
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3057);
 if ($$3$i$i2760 | 0) {
  $33258 = $$3$i$i2760 + 5 | 0;
  $33260 = (HEAP8[$33258 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$33258 >> 0] = $33260;
  if (!($33260 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2760);
  HEAP32[$3057 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 222;
 HEAP16[$9872 >> 1] = 228;
 HEAP16[$9873 >> 1] = 768;
 HEAP16[$9874 >> 1] = 247;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 21972) label = 4936; else {
  $33264 = HEAP32[915090] | 0;
  if (($33264 | 0) == (HEAP32[915088] | 0)) label = 4936; else {
   $$lcssa$i$i2747 = 3660360;
   $$lcssa8$i$i2746 = $33264;
   label = 4937;
  }
 }
 do if ((label | 0) == 4936) {
  if ((HEAP32[915097] | 0) >>> 0 >= 21972) {
   $33271 = HEAP32[915096] | 0;
   if (($33271 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2747 = 3660384;
    $$lcssa8$i$i2746 = $33271;
    label = 4937;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 21972) {
   $33276 = HEAP32[915102] | 0;
   if (($33276 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2747 = 3660408;
    $$lcssa8$i$i2746 = $33276;
    label = 4937;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 21972) {
   $33281 = HEAP32[915108] | 0;
   if (($33281 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2747 = 3660432;
    $$lcssa8$i$i2746 = $33281;
    label = 4937;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 21972) {
   $33286 = HEAP32[915114] | 0;
   if (($33286 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2747 = 3660456;
    $$lcssa8$i$i2746 = $33286;
    label = 4937;
    break;
   }
  }
  $$3$i$i2748 = __Znwj(21972) | 0;
 } while (0);
 if ((label | 0) == 4937) {
  $33269 = $$lcssa8$i$i2746 + -4 | 0;
  HEAP32[$$lcssa$i$i2747 >> 2] = $33269;
  $$3$i$i2748 = HEAP32[$33269 >> 2] | 0;
 }
 $33290 = $$3$i$i2748 + 52 | 0;
 HEAP16[$$3$i$i2748 >> 1] = 548;
 HEAP16[$$3$i$i2748 + 2 >> 1] = 20;
 HEAP8[$$3$i$i2748 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2748 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2748 + 8 >> 2] = 1096;
 HEAP32[$$3$i$i2748 + 12 >> 2] = 21920;
 HEAP32[$$3$i$i2748 + 16 >> 2] = $33290;
 HEAP32[$$3$i$i2748 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2748 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2748 + 48 >> 0] = 0;
 HEAP32[$3058 >> 2] = $$3$i$i2748;
 _memcpy($33290 | 0, 3092746, 1096) | 0;
 _memcpy($$3$i$i2748 + 1148 | 0, 3093842, 1096) | 0;
 _memcpy($$3$i$i2748 + 2244 | 0, 3094938, 1096) | 0;
 _memcpy($$3$i$i2748 + 3340 | 0, 3096034, 1096) | 0;
 _memcpy($$3$i$i2748 + 4436 | 0, 3097130, 1096) | 0;
 _memcpy($$3$i$i2748 + 5532 | 0, 3098226, 1096) | 0;
 _memcpy($$3$i$i2748 + 6628 | 0, 3099322, 1096) | 0;
 _memcpy($$3$i$i2748 + 7724 | 0, 3100418, 1096) | 0;
 _memcpy($$3$i$i2748 + 8820 | 0, 3101514, 1096) | 0;
 _memcpy($$3$i$i2748 + 9916 | 0, 3102610, 1096) | 0;
 _memcpy($$3$i$i2748 + 11012 | 0, 3103706, 1096) | 0;
 _memcpy($$3$i$i2748 + 12108 | 0, 3104802, 1096) | 0;
 _memcpy($$3$i$i2748 + 13204 | 0, 3105898, 1096) | 0;
 _memcpy($$3$i$i2748 + 14300 | 0, 3106994, 1096) | 0;
 _memcpy($$3$i$i2748 + 15396 | 0, 3108090, 1096) | 0;
 _memcpy($$3$i$i2748 + 16492 | 0, 3109186, 1096) | 0;
 _memcpy($$3$i$i2748 + 17588 | 0, 3110282, 1096) | 0;
 _memcpy($$3$i$i2748 + 18684 | 0, 3111378, 1096) | 0;
 _memcpy($$3$i$i2748 + 19780 | 0, 3112474, 1096) | 0;
 _memcpy($$3$i$i2748 + 20876 | 0, 3113570, 1096) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3058);
 if ($$3$i$i2748 | 0) {
  $33320 = $$3$i$i2748 + 5 | 0;
  $33322 = (HEAP8[$33320 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$33320 >> 0] = $33322;
  if (!($33322 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2748);
  HEAP32[$3058 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 222;
 HEAP16[$9875 >> 1] = 248;
 HEAP16[$9876 >> 1] = 768;
 HEAP16[$9877 >> 1] = 276;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31836) label = 4952; else {
  $33326 = HEAP32[915090] | 0;
  if (($33326 | 0) == (HEAP32[915088] | 0)) label = 4952; else {
   $$lcssa$i$i2735 = 3660360;
   $$lcssa8$i$i2734 = $33326;
   label = 4953;
  }
 }
 do if ((label | 0) == 4952) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31836) {
   $33333 = HEAP32[915096] | 0;
   if (($33333 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2735 = 3660384;
    $$lcssa8$i$i2734 = $33333;
    label = 4953;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31836) {
   $33338 = HEAP32[915102] | 0;
   if (($33338 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2735 = 3660408;
    $$lcssa8$i$i2734 = $33338;
    label = 4953;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31836) {
   $33343 = HEAP32[915108] | 0;
   if (($33343 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2735 = 3660432;
    $$lcssa8$i$i2734 = $33343;
    label = 4953;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31836) {
   $33348 = HEAP32[915114] | 0;
   if (($33348 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2735 = 3660456;
    $$lcssa8$i$i2734 = $33348;
    label = 4953;
    break;
   }
  }
  $$3$i$i2736 = __Znwj(31836) | 0;
 } while (0);
 if ((label | 0) == 4953) {
  $33331 = $$lcssa8$i$i2734 + -4 | 0;
  HEAP32[$$lcssa$i$i2735 >> 2] = $33331;
  $$3$i$i2736 = HEAP32[$33331 >> 2] | 0;
 }
 $33352 = $$3$i$i2736 + 52 | 0;
 HEAP16[$$3$i$i2736 >> 1] = 548;
 HEAP16[$$3$i$i2736 + 2 >> 1] = 29;
 HEAP8[$$3$i$i2736 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2736 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2736 + 8 >> 2] = 1096;
 HEAP32[$$3$i$i2736 + 12 >> 2] = 31784;
 HEAP32[$$3$i$i2736 + 16 >> 2] = $33352;
 HEAP32[$$3$i$i2736 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2736 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2736 + 48 >> 0] = 0;
 HEAP32[$3059 >> 2] = $$3$i$i2736;
 _memcpy($33352 | 0, 3114666, 1096) | 0;
 _memcpy($$3$i$i2736 + 1148 | 0, 3115762, 1096) | 0;
 _memcpy($$3$i$i2736 + 2244 | 0, 3116858, 1096) | 0;
 _memcpy($$3$i$i2736 + 3340 | 0, 3117954, 1096) | 0;
 _memcpy($$3$i$i2736 + 4436 | 0, 3119050, 1096) | 0;
 _memcpy($$3$i$i2736 + 5532 | 0, 3120146, 1096) | 0;
 _memcpy($$3$i$i2736 + 6628 | 0, 3121242, 1096) | 0;
 _memcpy($$3$i$i2736 + 7724 | 0, 3122338, 1096) | 0;
 _memcpy($$3$i$i2736 + 8820 | 0, 3123434, 1096) | 0;
 _memcpy($$3$i$i2736 + 9916 | 0, 3124530, 1096) | 0;
 _memcpy($$3$i$i2736 + 11012 | 0, 3125626, 1096) | 0;
 _memcpy($$3$i$i2736 + 12108 | 0, 3126722, 1096) | 0;
 _memcpy($$3$i$i2736 + 13204 | 0, 3127818, 1096) | 0;
 _memcpy($$3$i$i2736 + 14300 | 0, 3128914, 1096) | 0;
 _memcpy($$3$i$i2736 + 15396 | 0, 3130010, 1096) | 0;
 _memcpy($$3$i$i2736 + 16492 | 0, 3131106, 1096) | 0;
 _memcpy($$3$i$i2736 + 17588 | 0, 3132202, 1096) | 0;
 _memcpy($$3$i$i2736 + 18684 | 0, 3133298, 1096) | 0;
 _memcpy($$3$i$i2736 + 19780 | 0, 3134394, 1096) | 0;
 _memcpy($$3$i$i2736 + 20876 | 0, 3135490, 1096) | 0;
 _memcpy($$3$i$i2736 + 21972 | 0, 3136586, 1096) | 0;
 _memcpy($$3$i$i2736 + 23068 | 0, 3137682, 1096) | 0;
 _memcpy($$3$i$i2736 + 24164 | 0, 3138778, 1096) | 0;
 _memcpy($$3$i$i2736 + 25260 | 0, 3139874, 1096) | 0;
 _memcpy($$3$i$i2736 + 26356 | 0, 3140970, 1096) | 0;
 _memcpy($$3$i$i2736 + 27452 | 0, 3142066, 1096) | 0;
 _memcpy($$3$i$i2736 + 28548 | 0, 3143162, 1096) | 0;
 _memcpy($$3$i$i2736 + 29644 | 0, 3144258, 1096) | 0;
 _memcpy($$3$i$i2736 + 30740 | 0, 3145354, 1096) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3059);
 if ($$3$i$i2736 | 0) {
  $33391 = $$3$i$i2736 + 5 | 0;
  $33393 = (HEAP8[$33391 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$33391 >> 0] = $33393;
  if (!($33393 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2736);
  HEAP32[$3059 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 222;
 HEAP16[$9878 >> 1] = 277;
 HEAP16[$9879 >> 1] = 768;
 HEAP16[$9880 >> 1] = 305;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31836) label = 4968; else {
  $33397 = HEAP32[915090] | 0;
  if (($33397 | 0) == (HEAP32[915088] | 0)) label = 4968; else {
   $$lcssa$i$i2723 = 3660360;
   $$lcssa8$i$i2722 = $33397;
   label = 4969;
  }
 }
 do if ((label | 0) == 4968) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31836) {
   $33404 = HEAP32[915096] | 0;
   if (($33404 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2723 = 3660384;
    $$lcssa8$i$i2722 = $33404;
    label = 4969;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31836) {
   $33409 = HEAP32[915102] | 0;
   if (($33409 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2723 = 3660408;
    $$lcssa8$i$i2722 = $33409;
    label = 4969;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31836) {
   $33414 = HEAP32[915108] | 0;
   if (($33414 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2723 = 3660432;
    $$lcssa8$i$i2722 = $33414;
    label = 4969;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31836) {
   $33419 = HEAP32[915114] | 0;
   if (($33419 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2723 = 3660456;
    $$lcssa8$i$i2722 = $33419;
    label = 4969;
    break;
   }
  }
  $$3$i$i2724 = __Znwj(31836) | 0;
 } while (0);
 if ((label | 0) == 4969) {
  $33402 = $$lcssa8$i$i2722 + -4 | 0;
  HEAP32[$$lcssa$i$i2723 >> 2] = $33402;
  $$3$i$i2724 = HEAP32[$33402 >> 2] | 0;
 }
 $33423 = $$3$i$i2724 + 52 | 0;
 HEAP16[$$3$i$i2724 >> 1] = 548;
 HEAP16[$$3$i$i2724 + 2 >> 1] = 29;
 HEAP8[$$3$i$i2724 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2724 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2724 + 8 >> 2] = 1096;
 HEAP32[$$3$i$i2724 + 12 >> 2] = 31784;
 HEAP32[$$3$i$i2724 + 16 >> 2] = $33423;
 HEAP32[$$3$i$i2724 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2724 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2724 + 48 >> 0] = 0;
 HEAP32[$3060 >> 2] = $$3$i$i2724;
 _memcpy($33423 | 0, 3146450, 1096) | 0;
 _memcpy($$3$i$i2724 + 1148 | 0, 3147546, 1096) | 0;
 _memcpy($$3$i$i2724 + 2244 | 0, 3148642, 1096) | 0;
 _memcpy($$3$i$i2724 + 3340 | 0, 3149738, 1096) | 0;
 _memcpy($$3$i$i2724 + 4436 | 0, 3150834, 1096) | 0;
 _memcpy($$3$i$i2724 + 5532 | 0, 3151930, 1096) | 0;
 _memcpy($$3$i$i2724 + 6628 | 0, 3153026, 1096) | 0;
 _memcpy($$3$i$i2724 + 7724 | 0, 3154122, 1096) | 0;
 _memcpy($$3$i$i2724 + 8820 | 0, 3155218, 1096) | 0;
 _memcpy($$3$i$i2724 + 9916 | 0, 3156314, 1096) | 0;
 _memcpy($$3$i$i2724 + 11012 | 0, 3157410, 1096) | 0;
 _memcpy($$3$i$i2724 + 12108 | 0, 3158506, 1096) | 0;
 _memcpy($$3$i$i2724 + 13204 | 0, 3159602, 1096) | 0;
 _memcpy($$3$i$i2724 + 14300 | 0, 3160698, 1096) | 0;
 _memcpy($$3$i$i2724 + 15396 | 0, 3161794, 1096) | 0;
 _memcpy($$3$i$i2724 + 16492 | 0, 3162890, 1096) | 0;
 _memcpy($$3$i$i2724 + 17588 | 0, 3163986, 1096) | 0;
 _memcpy($$3$i$i2724 + 18684 | 0, 3165082, 1096) | 0;
 _memcpy($$3$i$i2724 + 19780 | 0, 3166178, 1096) | 0;
 _memcpy($$3$i$i2724 + 20876 | 0, 3167274, 1096) | 0;
 _memcpy($$3$i$i2724 + 21972 | 0, 3168370, 1096) | 0;
 _memcpy($$3$i$i2724 + 23068 | 0, 3169466, 1096) | 0;
 _memcpy($$3$i$i2724 + 24164 | 0, 3170562, 1096) | 0;
 _memcpy($$3$i$i2724 + 25260 | 0, 3171658, 1096) | 0;
 _memcpy($$3$i$i2724 + 26356 | 0, 3172754, 1096) | 0;
 _memcpy($$3$i$i2724 + 27452 | 0, 3173850, 1096) | 0;
 _memcpy($$3$i$i2724 + 28548 | 0, 3174946, 1096) | 0;
 _memcpy($$3$i$i2724 + 29644 | 0, 3176042, 1096) | 0;
 _memcpy($$3$i$i2724 + 30740 | 0, 3177138, 1096) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3060);
 if ($$3$i$i2724 | 0) {
  $33462 = $$3$i$i2724 + 5 | 0;
  $33464 = (HEAP8[$33462 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$33462 >> 0] = $33464;
  if (!($33464 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2724);
  HEAP32[$3060 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 222;
 HEAP16[$9881 >> 1] = 306;
 HEAP16[$9882 >> 1] = 768;
 HEAP16[$9883 >> 1] = 334;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31836) label = 4984; else {
  $33468 = HEAP32[915090] | 0;
  if (($33468 | 0) == (HEAP32[915088] | 0)) label = 4984; else {
   $$lcssa$i$i2711 = 3660360;
   $$lcssa8$i$i2710 = $33468;
   label = 4985;
  }
 }
 do if ((label | 0) == 4984) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31836) {
   $33475 = HEAP32[915096] | 0;
   if (($33475 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2711 = 3660384;
    $$lcssa8$i$i2710 = $33475;
    label = 4985;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31836) {
   $33480 = HEAP32[915102] | 0;
   if (($33480 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2711 = 3660408;
    $$lcssa8$i$i2710 = $33480;
    label = 4985;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31836) {
   $33485 = HEAP32[915108] | 0;
   if (($33485 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2711 = 3660432;
    $$lcssa8$i$i2710 = $33485;
    label = 4985;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31836) {
   $33490 = HEAP32[915114] | 0;
   if (($33490 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2711 = 3660456;
    $$lcssa8$i$i2710 = $33490;
    label = 4985;
    break;
   }
  }
  $$3$i$i2712 = __Znwj(31836) | 0;
 } while (0);
 if ((label | 0) == 4985) {
  $33473 = $$lcssa8$i$i2710 + -4 | 0;
  HEAP32[$$lcssa$i$i2711 >> 2] = $33473;
  $$3$i$i2712 = HEAP32[$33473 >> 2] | 0;
 }
 $33494 = $$3$i$i2712 + 52 | 0;
 HEAP16[$$3$i$i2712 >> 1] = 548;
 HEAP16[$$3$i$i2712 + 2 >> 1] = 29;
 HEAP8[$$3$i$i2712 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2712 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2712 + 8 >> 2] = 1096;
 HEAP32[$$3$i$i2712 + 12 >> 2] = 31784;
 HEAP32[$$3$i$i2712 + 16 >> 2] = $33494;
 HEAP32[$$3$i$i2712 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2712 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2712 + 48 >> 0] = 0;
 HEAP32[$3061 >> 2] = $$3$i$i2712;
 _memcpy($33494 | 0, 3178234, 1096) | 0;
 _memcpy($$3$i$i2712 + 1148 | 0, 3179330, 1096) | 0;
 _memcpy($$3$i$i2712 + 2244 | 0, 3180426, 1096) | 0;
 _memcpy($$3$i$i2712 + 3340 | 0, 3181522, 1096) | 0;
 _memcpy($$3$i$i2712 + 4436 | 0, 3182618, 1096) | 0;
 _memcpy($$3$i$i2712 + 5532 | 0, 3183714, 1096) | 0;
 _memcpy($$3$i$i2712 + 6628 | 0, 3184810, 1096) | 0;
 _memcpy($$3$i$i2712 + 7724 | 0, 3185906, 1096) | 0;
 _memcpy($$3$i$i2712 + 8820 | 0, 3187002, 1096) | 0;
 _memcpy($$3$i$i2712 + 9916 | 0, 3188098, 1096) | 0;
 _memcpy($$3$i$i2712 + 11012 | 0, 3189194, 1096) | 0;
 _memcpy($$3$i$i2712 + 12108 | 0, 3190290, 1096) | 0;
 _memcpy($$3$i$i2712 + 13204 | 0, 3191386, 1096) | 0;
 _memcpy($$3$i$i2712 + 14300 | 0, 3192482, 1096) | 0;
 _memcpy($$3$i$i2712 + 15396 | 0, 3193578, 1096) | 0;
 _memcpy($$3$i$i2712 + 16492 | 0, 3194674, 1096) | 0;
 _memcpy($$3$i$i2712 + 17588 | 0, 3195770, 1096) | 0;
 _memcpy($$3$i$i2712 + 18684 | 0, 3196866, 1096) | 0;
 _memcpy($$3$i$i2712 + 19780 | 0, 3197962, 1096) | 0;
 _memcpy($$3$i$i2712 + 20876 | 0, 3199058, 1096) | 0;
 _memcpy($$3$i$i2712 + 21972 | 0, 3200154, 1096) | 0;
 _memcpy($$3$i$i2712 + 23068 | 0, 3201250, 1096) | 0;
 _memcpy($$3$i$i2712 + 24164 | 0, 3202346, 1096) | 0;
 _memcpy($$3$i$i2712 + 25260 | 0, 3203442, 1096) | 0;
 _memcpy($$3$i$i2712 + 26356 | 0, 3204538, 1096) | 0;
 _memcpy($$3$i$i2712 + 27452 | 0, 3205634, 1096) | 0;
 _memcpy($$3$i$i2712 + 28548 | 0, 3206730, 1096) | 0;
 _memcpy($$3$i$i2712 + 29644 | 0, 3207826, 1096) | 0;
 _memcpy($$3$i$i2712 + 30740 | 0, 3208922, 1096) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3061);
 if ($$3$i$i2712 | 0) {
  $33533 = $$3$i$i2712 + 5 | 0;
  $33535 = (HEAP8[$33533 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$33533 >> 0] = $33535;
  if (!($33535 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2712);
  HEAP32[$3061 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 222;
 HEAP16[$9884 >> 1] = 335;
 HEAP16[$9885 >> 1] = 768;
 HEAP16[$9886 >> 1] = 363;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31836) label = 5e3; else {
  $33539 = HEAP32[915090] | 0;
  if (($33539 | 0) == (HEAP32[915088] | 0)) label = 5e3; else {
   $$lcssa$i$i2675 = 3660360;
   $$lcssa8$i$i2674 = $33539;
   label = 5001;
  }
 }
 do if ((label | 0) == 5e3) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31836) {
   $33546 = HEAP32[915096] | 0;
   if (($33546 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2675 = 3660384;
    $$lcssa8$i$i2674 = $33546;
    label = 5001;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31836) {
   $33551 = HEAP32[915102] | 0;
   if (($33551 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2675 = 3660408;
    $$lcssa8$i$i2674 = $33551;
    label = 5001;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31836) {
   $33556 = HEAP32[915108] | 0;
   if (($33556 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2675 = 3660432;
    $$lcssa8$i$i2674 = $33556;
    label = 5001;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31836) {
   $33561 = HEAP32[915114] | 0;
   if (($33561 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2675 = 3660456;
    $$lcssa8$i$i2674 = $33561;
    label = 5001;
    break;
   }
  }
  $$3$i$i2676 = __Znwj(31836) | 0;
 } while (0);
 if ((label | 0) == 5001) {
  $33544 = $$lcssa8$i$i2674 + -4 | 0;
  HEAP32[$$lcssa$i$i2675 >> 2] = $33544;
  $$3$i$i2676 = HEAP32[$33544 >> 2] | 0;
 }
 $33565 = $$3$i$i2676 + 52 | 0;
 HEAP16[$$3$i$i2676 >> 1] = 548;
 HEAP16[$$3$i$i2676 + 2 >> 1] = 29;
 HEAP8[$$3$i$i2676 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2676 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2676 + 8 >> 2] = 1096;
 HEAP32[$$3$i$i2676 + 12 >> 2] = 31784;
 HEAP32[$$3$i$i2676 + 16 >> 2] = $33565;
 HEAP32[$$3$i$i2676 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2676 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2676 + 48 >> 0] = 0;
 HEAP32[$3062 >> 2] = $$3$i$i2676;
 _memcpy($33565 | 0, 3210018, 1096) | 0;
 _memcpy($$3$i$i2676 + 1148 | 0, 3211114, 1096) | 0;
 _memcpy($$3$i$i2676 + 2244 | 0, 3212210, 1096) | 0;
 _memcpy($$3$i$i2676 + 3340 | 0, 3213306, 1096) | 0;
 _memcpy($$3$i$i2676 + 4436 | 0, 3214402, 1096) | 0;
 _memcpy($$3$i$i2676 + 5532 | 0, 3215498, 1096) | 0;
 _memcpy($$3$i$i2676 + 6628 | 0, 3216594, 1096) | 0;
 _memcpy($$3$i$i2676 + 7724 | 0, 3217690, 1096) | 0;
 _memcpy($$3$i$i2676 + 8820 | 0, 3218786, 1096) | 0;
 _memcpy($$3$i$i2676 + 9916 | 0, 3219882, 1096) | 0;
 _memcpy($$3$i$i2676 + 11012 | 0, 3220978, 1096) | 0;
 _memcpy($$3$i$i2676 + 12108 | 0, 3222074, 1096) | 0;
 _memcpy($$3$i$i2676 + 13204 | 0, 3223170, 1096) | 0;
 _memcpy($$3$i$i2676 + 14300 | 0, 3224266, 1096) | 0;
 _memcpy($$3$i$i2676 + 15396 | 0, 3225362, 1096) | 0;
 _memcpy($$3$i$i2676 + 16492 | 0, 3226458, 1096) | 0;
 _memcpy($$3$i$i2676 + 17588 | 0, 3227554, 1096) | 0;
 _memcpy($$3$i$i2676 + 18684 | 0, 3228650, 1096) | 0;
 _memcpy($$3$i$i2676 + 19780 | 0, 3229746, 1096) | 0;
 _memcpy($$3$i$i2676 + 20876 | 0, 3230842, 1096) | 0;
 _memcpy($$3$i$i2676 + 21972 | 0, 3231938, 1096) | 0;
 _memcpy($$3$i$i2676 + 23068 | 0, 3233034, 1096) | 0;
 _memcpy($$3$i$i2676 + 24164 | 0, 3234130, 1096) | 0;
 _memcpy($$3$i$i2676 + 25260 | 0, 3235226, 1096) | 0;
 _memcpy($$3$i$i2676 + 26356 | 0, 3236322, 1096) | 0;
 _memcpy($$3$i$i2676 + 27452 | 0, 3237418, 1096) | 0;
 _memcpy($$3$i$i2676 + 28548 | 0, 3238514, 1096) | 0;
 _memcpy($$3$i$i2676 + 29644 | 0, 3239610, 1096) | 0;
 _memcpy($$3$i$i2676 + 30740 | 0, 3240706, 1096) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3062);
 if ($$3$i$i2676 | 0) {
  $33604 = $$3$i$i2676 + 5 | 0;
  $33606 = (HEAP8[$33604 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$33604 >> 0] = $33606;
  if (!($33606 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2676);
  HEAP32[$3062 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 222;
 HEAP16[$9887 >> 1] = 364;
 HEAP16[$9888 >> 1] = 768;
 HEAP16[$9889 >> 1] = 392;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31836) label = 5016; else {
  $33610 = HEAP32[915090] | 0;
  if (($33610 | 0) == (HEAP32[915088] | 0)) label = 5016; else {
   $$lcssa$i$i2615 = 3660360;
   $$lcssa8$i$i2614 = $33610;
   label = 5017;
  }
 }
 do if ((label | 0) == 5016) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31836) {
   $33617 = HEAP32[915096] | 0;
   if (($33617 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2615 = 3660384;
    $$lcssa8$i$i2614 = $33617;
    label = 5017;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31836) {
   $33622 = HEAP32[915102] | 0;
   if (($33622 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2615 = 3660408;
    $$lcssa8$i$i2614 = $33622;
    label = 5017;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31836) {
   $33627 = HEAP32[915108] | 0;
   if (($33627 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2615 = 3660432;
    $$lcssa8$i$i2614 = $33627;
    label = 5017;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31836) {
   $33632 = HEAP32[915114] | 0;
   if (($33632 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2615 = 3660456;
    $$lcssa8$i$i2614 = $33632;
    label = 5017;
    break;
   }
  }
  $$3$i$i2616 = __Znwj(31836) | 0;
 } while (0);
 if ((label | 0) == 5017) {
  $33615 = $$lcssa8$i$i2614 + -4 | 0;
  HEAP32[$$lcssa$i$i2615 >> 2] = $33615;
  $$3$i$i2616 = HEAP32[$33615 >> 2] | 0;
 }
 $33636 = $$3$i$i2616 + 52 | 0;
 HEAP16[$$3$i$i2616 >> 1] = 548;
 HEAP16[$$3$i$i2616 + 2 >> 1] = 29;
 HEAP8[$$3$i$i2616 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2616 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2616 + 8 >> 2] = 1096;
 HEAP32[$$3$i$i2616 + 12 >> 2] = 31784;
 HEAP32[$$3$i$i2616 + 16 >> 2] = $33636;
 HEAP32[$$3$i$i2616 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2616 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2616 + 48 >> 0] = 0;
 HEAP32[$3063 >> 2] = $$3$i$i2616;
 _memcpy($33636 | 0, 3241802, 1096) | 0;
 _memcpy($$3$i$i2616 + 1148 | 0, 3242898, 1096) | 0;
 _memcpy($$3$i$i2616 + 2244 | 0, 3243994, 1096) | 0;
 _memcpy($$3$i$i2616 + 3340 | 0, 3245090, 1096) | 0;
 _memcpy($$3$i$i2616 + 4436 | 0, 3246186, 1096) | 0;
 _memcpy($$3$i$i2616 + 5532 | 0, 3247282, 1096) | 0;
 _memcpy($$3$i$i2616 + 6628 | 0, 3248378, 1096) | 0;
 _memcpy($$3$i$i2616 + 7724 | 0, 3249474, 1096) | 0;
 _memcpy($$3$i$i2616 + 8820 | 0, 3250570, 1096) | 0;
 _memcpy($$3$i$i2616 + 9916 | 0, 3251666, 1096) | 0;
 _memcpy($$3$i$i2616 + 11012 | 0, 3252762, 1096) | 0;
 _memcpy($$3$i$i2616 + 12108 | 0, 3253858, 1096) | 0;
 _memcpy($$3$i$i2616 + 13204 | 0, 3254954, 1096) | 0;
 _memcpy($$3$i$i2616 + 14300 | 0, 3256050, 1096) | 0;
 _memcpy($$3$i$i2616 + 15396 | 0, 3257146, 1096) | 0;
 _memcpy($$3$i$i2616 + 16492 | 0, 3258242, 1096) | 0;
 _memcpy($$3$i$i2616 + 17588 | 0, 3259338, 1096) | 0;
 _memcpy($$3$i$i2616 + 18684 | 0, 3260434, 1096) | 0;
 _memcpy($$3$i$i2616 + 19780 | 0, 3261530, 1096) | 0;
 _memcpy($$3$i$i2616 + 20876 | 0, 3262626, 1096) | 0;
 _memcpy($$3$i$i2616 + 21972 | 0, 3263722, 1096) | 0;
 _memcpy($$3$i$i2616 + 23068 | 0, 3264818, 1096) | 0;
 _memcpy($$3$i$i2616 + 24164 | 0, 3265914, 1096) | 0;
 _memcpy($$3$i$i2616 + 25260 | 0, 3267010, 1096) | 0;
 _memcpy($$3$i$i2616 + 26356 | 0, 3268106, 1096) | 0;
 _memcpy($$3$i$i2616 + 27452 | 0, 3269202, 1096) | 0;
 _memcpy($$3$i$i2616 + 28548 | 0, 3270298, 1096) | 0;
 _memcpy($$3$i$i2616 + 29644 | 0, 3271394, 1096) | 0;
 _memcpy($$3$i$i2616 + 30740 | 0, 3272490, 1096) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3063);
 if ($$3$i$i2616 | 0) {
  $33675 = $$3$i$i2616 + 5 | 0;
  $33677 = (HEAP8[$33675 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$33675 >> 0] = $33677;
  if (!($33677 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2616);
  HEAP32[$3063 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 222;
 HEAP16[$9890 >> 1] = 393;
 HEAP16[$9891 >> 1] = 768;
 HEAP16[$9892 >> 1] = 415;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 25260) label = 5032; else {
  $33681 = HEAP32[915090] | 0;
  if (($33681 | 0) == (HEAP32[915088] | 0)) label = 5032; else {
   $$lcssa$i$i2555 = 3660360;
   $$lcssa8$i$i2554 = $33681;
   label = 5033;
  }
 }
 do if ((label | 0) == 5032) {
  if ((HEAP32[915097] | 0) >>> 0 >= 25260) {
   $33688 = HEAP32[915096] | 0;
   if (($33688 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2555 = 3660384;
    $$lcssa8$i$i2554 = $33688;
    label = 5033;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 25260) {
   $33693 = HEAP32[915102] | 0;
   if (($33693 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2555 = 3660408;
    $$lcssa8$i$i2554 = $33693;
    label = 5033;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 25260) {
   $33698 = HEAP32[915108] | 0;
   if (($33698 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2555 = 3660432;
    $$lcssa8$i$i2554 = $33698;
    label = 5033;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 25260) {
   $33703 = HEAP32[915114] | 0;
   if (($33703 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2555 = 3660456;
    $$lcssa8$i$i2554 = $33703;
    label = 5033;
    break;
   }
  }
  $$3$i$i2556 = __Znwj(25260) | 0;
 } while (0);
 if ((label | 0) == 5033) {
  $33686 = $$lcssa8$i$i2554 + -4 | 0;
  HEAP32[$$lcssa$i$i2555 >> 2] = $33686;
  $$3$i$i2556 = HEAP32[$33686 >> 2] | 0;
 }
 $33707 = $$3$i$i2556 + 52 | 0;
 HEAP16[$$3$i$i2556 >> 1] = 548;
 HEAP16[$$3$i$i2556 + 2 >> 1] = 23;
 HEAP8[$$3$i$i2556 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2556 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2556 + 8 >> 2] = 1096;
 HEAP32[$$3$i$i2556 + 12 >> 2] = 25208;
 HEAP32[$$3$i$i2556 + 16 >> 2] = $33707;
 HEAP32[$$3$i$i2556 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2556 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2556 + 48 >> 0] = 0;
 HEAP32[$3064 >> 2] = $$3$i$i2556;
 _memcpy($33707 | 0, 3273586, 1096) | 0;
 _memcpy($$3$i$i2556 + 1148 | 0, 3274682, 1096) | 0;
 _memcpy($$3$i$i2556 + 2244 | 0, 3275778, 1096) | 0;
 _memcpy($$3$i$i2556 + 3340 | 0, 3276874, 1096) | 0;
 _memcpy($$3$i$i2556 + 4436 | 0, 3277970, 1096) | 0;
 _memcpy($$3$i$i2556 + 5532 | 0, 3279066, 1096) | 0;
 _memcpy($$3$i$i2556 + 6628 | 0, 3280162, 1096) | 0;
 _memcpy($$3$i$i2556 + 7724 | 0, 3281258, 1096) | 0;
 _memcpy($$3$i$i2556 + 8820 | 0, 3282354, 1096) | 0;
 _memcpy($$3$i$i2556 + 9916 | 0, 3283450, 1096) | 0;
 _memcpy($$3$i$i2556 + 11012 | 0, 3284546, 1096) | 0;
 _memcpy($$3$i$i2556 + 12108 | 0, 3285642, 1096) | 0;
 _memcpy($$3$i$i2556 + 13204 | 0, 3286738, 1096) | 0;
 _memcpy($$3$i$i2556 + 14300 | 0, 3287834, 1096) | 0;
 _memcpy($$3$i$i2556 + 15396 | 0, 3288930, 1096) | 0;
 _memcpy($$3$i$i2556 + 16492 | 0, 3290026, 1096) | 0;
 _memcpy($$3$i$i2556 + 17588 | 0, 3291122, 1096) | 0;
 _memcpy($$3$i$i2556 + 18684 | 0, 3292218, 1096) | 0;
 _memcpy($$3$i$i2556 + 19780 | 0, 3293314, 1096) | 0;
 _memcpy($$3$i$i2556 + 20876 | 0, 3294410, 1096) | 0;
 _memcpy($$3$i$i2556 + 21972 | 0, 3295506, 1096) | 0;
 _memcpy($$3$i$i2556 + 23068 | 0, 3296602, 1096) | 0;
 _memcpy($$3$i$i2556 + 24164 | 0, 3297698, 1096) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3064);
 if ($$3$i$i2556 | 0) {
  $33740 = $$3$i$i2556 + 5 | 0;
  $33742 = (HEAP8[$33740 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$33740 >> 0] = $33742;
  if (!($33742 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2556);
  HEAP32[$3064 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 233;
 HEAP16[$9893 >> 1] = 197;
 HEAP16[$9894 >> 1] = 413;
 HEAP16[$9895 >> 1] = 227;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 11460) label = 5048; else {
  $33746 = HEAP32[915090] | 0;
  if (($33746 | 0) == (HEAP32[915088] | 0)) label = 5048; else {
   $$lcssa$i$i2495 = 3660360;
   $$lcssa8$i$i2494 = $33746;
   label = 5049;
  }
 }
 do if ((label | 0) == 5048) {
  if ((HEAP32[915097] | 0) >>> 0 >= 11460) {
   $33753 = HEAP32[915096] | 0;
   if (($33753 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2495 = 3660384;
    $$lcssa8$i$i2494 = $33753;
    label = 5049;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 11460) {
   $33758 = HEAP32[915102] | 0;
   if (($33758 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2495 = 3660408;
    $$lcssa8$i$i2494 = $33758;
    label = 5049;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 11460) {
   $33763 = HEAP32[915108] | 0;
   if (($33763 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2495 = 3660432;
    $$lcssa8$i$i2494 = $33763;
    label = 5049;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 11460) {
   $33768 = HEAP32[915114] | 0;
   if (($33768 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2495 = 3660456;
    $$lcssa8$i$i2494 = $33768;
    label = 5049;
    break;
   }
  }
  $$3$i$i2496 = __Znwj(11460) | 0;
 } while (0);
 if ((label | 0) == 5049) {
  $33751 = $$lcssa8$i$i2494 + -4 | 0;
  HEAP32[$$lcssa$i$i2495 >> 2] = $33751;
  $$3$i$i2496 = HEAP32[$33751 >> 2] | 0;
 }
 $33772 = $$3$i$i2496 + 52 | 0;
 HEAP16[$$3$i$i2496 >> 1] = 184;
 HEAP16[$$3$i$i2496 + 2 >> 1] = 31;
 HEAP8[$$3$i$i2496 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2496 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2496 + 8 >> 2] = 368;
 HEAP32[$$3$i$i2496 + 12 >> 2] = 11408;
 HEAP32[$$3$i$i2496 + 16 >> 2] = $33772;
 HEAP32[$$3$i$i2496 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2496 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2496 + 48 >> 0] = 0;
 HEAP32[$3065 >> 2] = $$3$i$i2496;
 _memcpy($33772 | 0, 3298794, 368) | 0;
 _memcpy($$3$i$i2496 + 420 | 0, 3299162, 368) | 0;
 _memcpy($$3$i$i2496 + 788 | 0, 3299530, 368) | 0;
 _memcpy($$3$i$i2496 + 1156 | 0, 3299898, 368) | 0;
 _memcpy($$3$i$i2496 + 1524 | 0, 3300266, 368) | 0;
 _memcpy($$3$i$i2496 + 1892 | 0, 3300634, 368) | 0;
 _memcpy($$3$i$i2496 + 2260 | 0, 3301002, 368) | 0;
 _memcpy($$3$i$i2496 + 2628 | 0, 3301370, 368) | 0;
 _memcpy($$3$i$i2496 + 2996 | 0, 3301738, 368) | 0;
 _memcpy($$3$i$i2496 + 3364 | 0, 3302106, 368) | 0;
 _memcpy($$3$i$i2496 + 3732 | 0, 3302474, 368) | 0;
 _memcpy($$3$i$i2496 + 4100 | 0, 3302842, 368) | 0;
 _memcpy($$3$i$i2496 + 4468 | 0, 3303210, 368) | 0;
 _memcpy($$3$i$i2496 + 4836 | 0, 3303578, 368) | 0;
 _memcpy($$3$i$i2496 + 5204 | 0, 3303946, 368) | 0;
 _memcpy($$3$i$i2496 + 5572 | 0, 3304314, 368) | 0;
 _memcpy($$3$i$i2496 + 5940 | 0, 3304682, 368) | 0;
 _memcpy($$3$i$i2496 + 6308 | 0, 3305050, 368) | 0;
 _memcpy($$3$i$i2496 + 6676 | 0, 3305418, 368) | 0;
 _memcpy($$3$i$i2496 + 7044 | 0, 3305786, 368) | 0;
 _memcpy($$3$i$i2496 + 7412 | 0, 3306154, 368) | 0;
 _memcpy($$3$i$i2496 + 7780 | 0, 3306522, 368) | 0;
 _memcpy($$3$i$i2496 + 8148 | 0, 3306890, 368) | 0;
 _memcpy($$3$i$i2496 + 8516 | 0, 3307258, 368) | 0;
 _memcpy($$3$i$i2496 + 8884 | 0, 3307626, 368) | 0;
 _memcpy($$3$i$i2496 + 9252 | 0, 3307994, 368) | 0;
 _memcpy($$3$i$i2496 + 9620 | 0, 3308362, 368) | 0;
 _memcpy($$3$i$i2496 + 9988 | 0, 3308730, 368) | 0;
 _memcpy($$3$i$i2496 + 10356 | 0, 3309098, 368) | 0;
 _memcpy($$3$i$i2496 + 10724 | 0, 3309466, 368) | 0;
 _memcpy($$3$i$i2496 + 11092 | 0, 3309834, 368) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3065);
 if ($$3$i$i2496 | 0) {
  $33813 = $$3$i$i2496 + 5 | 0;
  $33815 = (HEAP8[$33813 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$33813 >> 0] = $33815;
  if (!($33815 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2496);
  HEAP32[$3065 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$9896 >> 1] = 419;
 HEAP16[$9897 >> 1] = 530;
 HEAP16[$9898 >> 1] = 453;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 22452) label = 5064; else {
  $33819 = HEAP32[915090] | 0;
  if (($33819 | 0) == (HEAP32[915088] | 0)) label = 5064; else {
   $$lcssa$i$i2435 = 3660360;
   $$lcssa8$i$i2434 = $33819;
   label = 5065;
  }
 }
 do if ((label | 0) == 5064) {
  if ((HEAP32[915097] | 0) >>> 0 >= 22452) {
   $33826 = HEAP32[915096] | 0;
   if (($33826 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2435 = 3660384;
    $$lcssa8$i$i2434 = $33826;
    label = 5065;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 22452) {
   $33831 = HEAP32[915102] | 0;
   if (($33831 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2435 = 3660408;
    $$lcssa8$i$i2434 = $33831;
    label = 5065;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 22452) {
   $33836 = HEAP32[915108] | 0;
   if (($33836 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2435 = 3660432;
    $$lcssa8$i$i2434 = $33836;
    label = 5065;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 22452) {
   $33841 = HEAP32[915114] | 0;
   if (($33841 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2435 = 3660456;
    $$lcssa8$i$i2434 = $33841;
    label = 5065;
    break;
   }
  }
  $$3$i$i2436 = __Znwj(22452) | 0;
 } while (0);
 if ((label | 0) == 5065) {
  $33824 = $$lcssa8$i$i2434 + -4 | 0;
  HEAP32[$$lcssa$i$i2435 >> 2] = $33824;
  $$3$i$i2436 = HEAP32[$33824 >> 2] | 0;
 }
 $33845 = $$3$i$i2436 + 52 | 0;
 HEAP16[$$3$i$i2436 >> 1] = 320;
 HEAP16[$$3$i$i2436 + 2 >> 1] = 35;
 HEAP8[$$3$i$i2436 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2436 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2436 + 8 >> 2] = 640;
 HEAP32[$$3$i$i2436 + 12 >> 2] = 22400;
 HEAP32[$$3$i$i2436 + 16 >> 2] = $33845;
 HEAP32[$$3$i$i2436 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2436 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2436 + 48 >> 0] = 0;
 HEAP32[$3066 >> 2] = $$3$i$i2436;
 _memcpy($33845 | 0, 3310202, 640) | 0;
 _memcpy($$3$i$i2436 + 692 | 0, 3310842, 640) | 0;
 _memcpy($$3$i$i2436 + 1332 | 0, 3311482, 640) | 0;
 _memcpy($$3$i$i2436 + 1972 | 0, 3312122, 640) | 0;
 _memcpy($$3$i$i2436 + 2612 | 0, 3312762, 640) | 0;
 _memcpy($$3$i$i2436 + 3252 | 0, 3313402, 640) | 0;
 _memcpy($$3$i$i2436 + 3892 | 0, 3314042, 640) | 0;
 _memcpy($$3$i$i2436 + 4532 | 0, 3314682, 640) | 0;
 _memcpy($$3$i$i2436 + 5172 | 0, 3315322, 640) | 0;
 _memcpy($$3$i$i2436 + 5812 | 0, 3315962, 640) | 0;
 _memcpy($$3$i$i2436 + 6452 | 0, 3316602, 640) | 0;
 _memcpy($$3$i$i2436 + 7092 | 0, 3317242, 640) | 0;
 _memcpy($$3$i$i2436 + 7732 | 0, 3317882, 640) | 0;
 _memcpy($$3$i$i2436 + 8372 | 0, 3318522, 640) | 0;
 _memcpy($$3$i$i2436 + 9012 | 0, 3319162, 640) | 0;
 _memcpy($$3$i$i2436 + 9652 | 0, 3319802, 640) | 0;
 _memcpy($$3$i$i2436 + 10292 | 0, 3320442, 640) | 0;
 _memcpy($$3$i$i2436 + 10932 | 0, 3321082, 640) | 0;
 _memcpy($$3$i$i2436 + 11572 | 0, 3321722, 640) | 0;
 _memcpy($$3$i$i2436 + 12212 | 0, 3322362, 640) | 0;
 _memcpy($$3$i$i2436 + 12852 | 0, 3323002, 640) | 0;
 _memcpy($$3$i$i2436 + 13492 | 0, 3323642, 640) | 0;
 _memcpy($$3$i$i2436 + 14132 | 0, 3324282, 640) | 0;
 _memcpy($$3$i$i2436 + 14772 | 0, 3324922, 640) | 0;
 _memcpy($$3$i$i2436 + 15412 | 0, 3325562, 640) | 0;
 _memcpy($$3$i$i2436 + 16052 | 0, 3326202, 640) | 0;
 _memcpy($$3$i$i2436 + 16692 | 0, 3326842, 640) | 0;
 _memcpy($$3$i$i2436 + 17332 | 0, 3327482, 640) | 0;
 _memcpy($$3$i$i2436 + 17972 | 0, 3328122, 640) | 0;
 _memcpy($$3$i$i2436 + 18612 | 0, 3328762, 640) | 0;
 _memcpy($$3$i$i2436 + 19252 | 0, 3329402, 640) | 0;
 _memcpy($$3$i$i2436 + 19892 | 0, 3330042, 640) | 0;
 _memcpy($$3$i$i2436 + 20532 | 0, 3330682, 640) | 0;
 _memcpy($$3$i$i2436 + 21172 | 0, 3331322, 640) | 0;
 _memcpy($$3$i$i2436 + 21812 | 0, 3331962, 640) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3066);
 if ($$3$i$i2436 | 0) {
  $33890 = $$3$i$i2436 + 5 | 0;
  $33892 = (HEAP8[$33890 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$33890 >> 0] = $33892;
  if (!($33892 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2436);
  HEAP32[$3066 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 769;
 HEAP16[$9899 >> 1] = 419;
 HEAP16[$9900 >> 1] = 994;
 HEAP16[$9901 >> 1] = 453;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 16012) label = 5080; else {
  $33896 = HEAP32[915090] | 0;
  if (($33896 | 0) == (HEAP32[915088] | 0)) label = 5080; else {
   $$lcssa$i$i2375 = 3660360;
   $$lcssa8$i$i2374 = $33896;
   label = 5081;
  }
 }
 do if ((label | 0) == 5080) {
  if ((HEAP32[915097] | 0) >>> 0 >= 16012) {
   $33903 = HEAP32[915096] | 0;
   if (($33903 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2375 = 3660384;
    $$lcssa8$i$i2374 = $33903;
    label = 5081;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 16012) {
   $33908 = HEAP32[915102] | 0;
   if (($33908 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2375 = 3660408;
    $$lcssa8$i$i2374 = $33908;
    label = 5081;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 16012) {
   $33913 = HEAP32[915108] | 0;
   if (($33913 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2375 = 3660432;
    $$lcssa8$i$i2374 = $33913;
    label = 5081;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 16012) {
   $33918 = HEAP32[915114] | 0;
   if (($33918 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2375 = 3660456;
    $$lcssa8$i$i2374 = $33918;
    label = 5081;
    break;
   }
  }
  $$3$i$i2376 = __Znwj(16012) | 0;
 } while (0);
 if ((label | 0) == 5081) {
  $33901 = $$lcssa8$i$i2374 + -4 | 0;
  HEAP32[$$lcssa$i$i2375 >> 2] = $33901;
  $$3$i$i2376 = HEAP32[$33901 >> 2] | 0;
 }
 $33922 = $$3$i$i2376 + 52 | 0;
 HEAP16[$$3$i$i2376 >> 1] = 228;
 HEAP16[$$3$i$i2376 + 2 >> 1] = 35;
 HEAP8[$$3$i$i2376 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2376 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2376 + 8 >> 2] = 456;
 HEAP32[$$3$i$i2376 + 12 >> 2] = 15960;
 HEAP32[$$3$i$i2376 + 16 >> 2] = $33922;
 HEAP32[$$3$i$i2376 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2376 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2376 + 48 >> 0] = 0;
 HEAP32[$3067 >> 2] = $$3$i$i2376;
 _memcpy($33922 | 0, 3332602, 456) | 0;
 _memcpy($$3$i$i2376 + 508 | 0, 3333058, 456) | 0;
 _memcpy($$3$i$i2376 + 964 | 0, 3333514, 456) | 0;
 _memcpy($$3$i$i2376 + 1420 | 0, 3333970, 456) | 0;
 _memcpy($$3$i$i2376 + 1876 | 0, 3334426, 456) | 0;
 _memcpy($$3$i$i2376 + 2332 | 0, 3334882, 456) | 0;
 _memcpy($$3$i$i2376 + 2788 | 0, 3335338, 456) | 0;
 _memcpy($$3$i$i2376 + 3244 | 0, 3335794, 456) | 0;
 _memcpy($$3$i$i2376 + 3700 | 0, 3336250, 456) | 0;
 _memcpy($$3$i$i2376 + 4156 | 0, 3336706, 456) | 0;
 _memcpy($$3$i$i2376 + 4612 | 0, 3337162, 456) | 0;
 _memcpy($$3$i$i2376 + 5068 | 0, 3337618, 456) | 0;
 _memcpy($$3$i$i2376 + 5524 | 0, 3338074, 456) | 0;
 _memcpy($$3$i$i2376 + 5980 | 0, 3338530, 456) | 0;
 _memcpy($$3$i$i2376 + 6436 | 0, 3338986, 456) | 0;
 _memcpy($$3$i$i2376 + 6892 | 0, 3339442, 456) | 0;
 _memcpy($$3$i$i2376 + 7348 | 0, 3339898, 456) | 0;
 _memcpy($$3$i$i2376 + 7804 | 0, 3340354, 456) | 0;
 _memcpy($$3$i$i2376 + 8260 | 0, 3340810, 456) | 0;
 _memcpy($$3$i$i2376 + 8716 | 0, 3341266, 456) | 0;
 _memcpy($$3$i$i2376 + 9172 | 0, 3341722, 456) | 0;
 _memcpy($$3$i$i2376 + 9628 | 0, 3342178, 456) | 0;
 _memcpy($$3$i$i2376 + 10084 | 0, 3342634, 456) | 0;
 _memcpy($$3$i$i2376 + 10540 | 0, 3343090, 456) | 0;
 _memcpy($$3$i$i2376 + 10996 | 0, 3343546, 456) | 0;
 _memcpy($$3$i$i2376 + 11452 | 0, 3344002, 456) | 0;
 _memcpy($$3$i$i2376 + 11908 | 0, 3344458, 456) | 0;
 _memcpy($$3$i$i2376 + 12364 | 0, 3344914, 456) | 0;
 _memcpy($$3$i$i2376 + 12820 | 0, 3345370, 456) | 0;
 _memcpy($$3$i$i2376 + 13276 | 0, 3345826, 456) | 0;
 _memcpy($$3$i$i2376 + 13732 | 0, 3346282, 456) | 0;
 _memcpy($$3$i$i2376 + 14188 | 0, 3346738, 456) | 0;
 _memcpy($$3$i$i2376 + 14644 | 0, 3347194, 456) | 0;
 _memcpy($$3$i$i2376 + 15100 | 0, 3347650, 456) | 0;
 _memcpy($$3$i$i2376 + 15556 | 0, 3348106, 456) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3067);
 if ($$3$i$i2376 | 0) {
  $33967 = $$3$i$i2376 + 5 | 0;
  $33969 = (HEAP8[$33967 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$33967 >> 0] = $33969;
  if (!($33969 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2376);
  HEAP32[$3067 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 225;
 HEAP16[$9902 >> 1] = 492;
 HEAP16[$9903 >> 1] = 765;
 HEAP16[$9904 >> 1] = 520;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31604) label = 5096; else {
  $33973 = HEAP32[915090] | 0;
  if (($33973 | 0) == (HEAP32[915088] | 0)) label = 5096; else {
   $$lcssa$i$i2315 = 3660360;
   $$lcssa8$i$i2314 = $33973;
   label = 5097;
  }
 }
 do if ((label | 0) == 5096) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31604) {
   $33980 = HEAP32[915096] | 0;
   if (($33980 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2315 = 3660384;
    $$lcssa8$i$i2314 = $33980;
    label = 5097;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31604) {
   $33985 = HEAP32[915102] | 0;
   if (($33985 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2315 = 3660408;
    $$lcssa8$i$i2314 = $33985;
    label = 5097;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31604) {
   $33990 = HEAP32[915108] | 0;
   if (($33990 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2315 = 3660432;
    $$lcssa8$i$i2314 = $33990;
    label = 5097;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31604) {
   $33995 = HEAP32[915114] | 0;
   if (($33995 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2315 = 3660456;
    $$lcssa8$i$i2314 = $33995;
    label = 5097;
    break;
   }
  }
  $$3$i$i2316 = __Znwj(31604) | 0;
 } while (0);
 if ((label | 0) == 5097) {
  $33978 = $$lcssa8$i$i2314 + -4 | 0;
  HEAP32[$$lcssa$i$i2315 >> 2] = $33978;
  $$3$i$i2316 = HEAP32[$33978 >> 2] | 0;
 }
 $33999 = $$3$i$i2316 + 52 | 0;
 HEAP16[$$3$i$i2316 >> 1] = 544;
 HEAP16[$$3$i$i2316 + 2 >> 1] = 29;
 HEAP8[$$3$i$i2316 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2316 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2316 + 8 >> 2] = 1088;
 HEAP32[$$3$i$i2316 + 12 >> 2] = 31552;
 HEAP32[$$3$i$i2316 + 16 >> 2] = $33999;
 HEAP32[$$3$i$i2316 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2316 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2316 + 48 >> 0] = 0;
 HEAP32[$3068 >> 2] = $$3$i$i2316;
 _memcpy($33999 | 0, 3348562, 1088) | 0;
 _memcpy($$3$i$i2316 + 1140 | 0, 3349650, 1088) | 0;
 _memcpy($$3$i$i2316 + 2228 | 0, 3350738, 1088) | 0;
 _memcpy($$3$i$i2316 + 3316 | 0, 3351826, 1088) | 0;
 _memcpy($$3$i$i2316 + 4404 | 0, 3352914, 1088) | 0;
 _memcpy($$3$i$i2316 + 5492 | 0, 3354002, 1088) | 0;
 _memcpy($$3$i$i2316 + 6580 | 0, 3355090, 1088) | 0;
 _memcpy($$3$i$i2316 + 7668 | 0, 3356178, 1088) | 0;
 _memcpy($$3$i$i2316 + 8756 | 0, 3357266, 1088) | 0;
 _memcpy($$3$i$i2316 + 9844 | 0, 3358354, 1088) | 0;
 _memcpy($$3$i$i2316 + 10932 | 0, 3359442, 1088) | 0;
 _memcpy($$3$i$i2316 + 12020 | 0, 3360530, 1088) | 0;
 _memcpy($$3$i$i2316 + 13108 | 0, 3361618, 1088) | 0;
 _memcpy($$3$i$i2316 + 14196 | 0, 3362706, 1088) | 0;
 _memcpy($$3$i$i2316 + 15284 | 0, 3363794, 1088) | 0;
 _memcpy($$3$i$i2316 + 16372 | 0, 3364882, 1088) | 0;
 _memcpy($$3$i$i2316 + 17460 | 0, 3365970, 1088) | 0;
 _memcpy($$3$i$i2316 + 18548 | 0, 3367058, 1088) | 0;
 _memcpy($$3$i$i2316 + 19636 | 0, 3368146, 1088) | 0;
 _memcpy($$3$i$i2316 + 20724 | 0, 3369234, 1088) | 0;
 _memcpy($$3$i$i2316 + 21812 | 0, 3370322, 1088) | 0;
 _memcpy($$3$i$i2316 + 22900 | 0, 3371410, 1088) | 0;
 _memcpy($$3$i$i2316 + 23988 | 0, 3372498, 1088) | 0;
 _memcpy($$3$i$i2316 + 25076 | 0, 3373586, 1088) | 0;
 _memcpy($$3$i$i2316 + 26164 | 0, 3374674, 1088) | 0;
 _memcpy($$3$i$i2316 + 27252 | 0, 3375762, 1088) | 0;
 _memcpy($$3$i$i2316 + 28340 | 0, 3376850, 1088) | 0;
 _memcpy($$3$i$i2316 + 29428 | 0, 3377938, 1088) | 0;
 _memcpy($$3$i$i2316 + 30516 | 0, 3379026, 1088) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3068);
 if ($$3$i$i2316 | 0) {
  $34038 = $$3$i$i2316 + 5 | 0;
  $34040 = (HEAP8[$34038 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$34038 >> 0] = $34040;
  if (!($34040 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2316);
  HEAP32[$3068 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 225;
 HEAP16[$9905 >> 1] = 521;
 HEAP16[$9906 >> 1] = 765;
 HEAP16[$9907 >> 1] = 549;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31604) label = 5112; else {
  $34044 = HEAP32[915090] | 0;
  if (($34044 | 0) == (HEAP32[915088] | 0)) label = 5112; else {
   $$lcssa$i$i2255 = 3660360;
   $$lcssa8$i$i2254 = $34044;
   label = 5113;
  }
 }
 do if ((label | 0) == 5112) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31604) {
   $34051 = HEAP32[915096] | 0;
   if (($34051 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2255 = 3660384;
    $$lcssa8$i$i2254 = $34051;
    label = 5113;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31604) {
   $34056 = HEAP32[915102] | 0;
   if (($34056 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2255 = 3660408;
    $$lcssa8$i$i2254 = $34056;
    label = 5113;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31604) {
   $34061 = HEAP32[915108] | 0;
   if (($34061 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2255 = 3660432;
    $$lcssa8$i$i2254 = $34061;
    label = 5113;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31604) {
   $34066 = HEAP32[915114] | 0;
   if (($34066 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2255 = 3660456;
    $$lcssa8$i$i2254 = $34066;
    label = 5113;
    break;
   }
  }
  $$3$i$i2256 = __Znwj(31604) | 0;
 } while (0);
 if ((label | 0) == 5113) {
  $34049 = $$lcssa8$i$i2254 + -4 | 0;
  HEAP32[$$lcssa$i$i2255 >> 2] = $34049;
  $$3$i$i2256 = HEAP32[$34049 >> 2] | 0;
 }
 $34070 = $$3$i$i2256 + 52 | 0;
 HEAP16[$$3$i$i2256 >> 1] = 544;
 HEAP16[$$3$i$i2256 + 2 >> 1] = 29;
 HEAP8[$$3$i$i2256 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2256 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2256 + 8 >> 2] = 1088;
 HEAP32[$$3$i$i2256 + 12 >> 2] = 31552;
 HEAP32[$$3$i$i2256 + 16 >> 2] = $34070;
 HEAP32[$$3$i$i2256 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2256 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2256 + 48 >> 0] = 0;
 HEAP32[$3069 >> 2] = $$3$i$i2256;
 _memcpy($34070 | 0, 3380114, 1088) | 0;
 _memcpy($$3$i$i2256 + 1140 | 0, 3381202, 1088) | 0;
 _memcpy($$3$i$i2256 + 2228 | 0, 3382290, 1088) | 0;
 _memcpy($$3$i$i2256 + 3316 | 0, 3383378, 1088) | 0;
 _memcpy($$3$i$i2256 + 4404 | 0, 3384466, 1088) | 0;
 _memcpy($$3$i$i2256 + 5492 | 0, 3385554, 1088) | 0;
 _memcpy($$3$i$i2256 + 6580 | 0, 3386642, 1088) | 0;
 _memcpy($$3$i$i2256 + 7668 | 0, 3387730, 1088) | 0;
 _memcpy($$3$i$i2256 + 8756 | 0, 3388818, 1088) | 0;
 _memcpy($$3$i$i2256 + 9844 | 0, 3389906, 1088) | 0;
 _memcpy($$3$i$i2256 + 10932 | 0, 3390994, 1088) | 0;
 _memcpy($$3$i$i2256 + 12020 | 0, 3392082, 1088) | 0;
 _memcpy($$3$i$i2256 + 13108 | 0, 3393170, 1088) | 0;
 _memcpy($$3$i$i2256 + 14196 | 0, 3394258, 1088) | 0;
 _memcpy($$3$i$i2256 + 15284 | 0, 3395346, 1088) | 0;
 _memcpy($$3$i$i2256 + 16372 | 0, 3396434, 1088) | 0;
 _memcpy($$3$i$i2256 + 17460 | 0, 3397522, 1088) | 0;
 _memcpy($$3$i$i2256 + 18548 | 0, 3398610, 1088) | 0;
 _memcpy($$3$i$i2256 + 19636 | 0, 3399698, 1088) | 0;
 _memcpy($$3$i$i2256 + 20724 | 0, 3400786, 1088) | 0;
 _memcpy($$3$i$i2256 + 21812 | 0, 3401874, 1088) | 0;
 _memcpy($$3$i$i2256 + 22900 | 0, 3402962, 1088) | 0;
 _memcpy($$3$i$i2256 + 23988 | 0, 3404050, 1088) | 0;
 _memcpy($$3$i$i2256 + 25076 | 0, 3405138, 1088) | 0;
 _memcpy($$3$i$i2256 + 26164 | 0, 3406226, 1088) | 0;
 _memcpy($$3$i$i2256 + 27252 | 0, 3407314, 1088) | 0;
 _memcpy($$3$i$i2256 + 28340 | 0, 3408402, 1088) | 0;
 _memcpy($$3$i$i2256 + 29428 | 0, 3409490, 1088) | 0;
 _memcpy($$3$i$i2256 + 30516 | 0, 3410578, 1088) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3069);
 if ($$3$i$i2256 | 0) {
  $34109 = $$3$i$i2256 + 5 | 0;
  $34111 = (HEAP8[$34109 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$34109 >> 0] = $34111;
  if (!($34111 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2256);
  HEAP32[$3069 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 225;
 HEAP16[$9908 >> 1] = 550;
 HEAP16[$9909 >> 1] = 765;
 HEAP16[$9910 >> 1] = 574;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 27252) label = 5128; else {
  $34115 = HEAP32[915090] | 0;
  if (($34115 | 0) == (HEAP32[915088] | 0)) label = 5128; else {
   $$lcssa$i$i2231 = 3660360;
   $$lcssa8$i$i2230 = $34115;
   label = 5129;
  }
 }
 do if ((label | 0) == 5128) {
  if ((HEAP32[915097] | 0) >>> 0 >= 27252) {
   $34122 = HEAP32[915096] | 0;
   if (($34122 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2231 = 3660384;
    $$lcssa8$i$i2230 = $34122;
    label = 5129;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 27252) {
   $34127 = HEAP32[915102] | 0;
   if (($34127 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2231 = 3660408;
    $$lcssa8$i$i2230 = $34127;
    label = 5129;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 27252) {
   $34132 = HEAP32[915108] | 0;
   if (($34132 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2231 = 3660432;
    $$lcssa8$i$i2230 = $34132;
    label = 5129;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 27252) {
   $34137 = HEAP32[915114] | 0;
   if (($34137 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2231 = 3660456;
    $$lcssa8$i$i2230 = $34137;
    label = 5129;
    break;
   }
  }
  $$3$i$i2232 = __Znwj(27252) | 0;
 } while (0);
 if ((label | 0) == 5129) {
  $34120 = $$lcssa8$i$i2230 + -4 | 0;
  HEAP32[$$lcssa$i$i2231 >> 2] = $34120;
  $$3$i$i2232 = HEAP32[$34120 >> 2] | 0;
 }
 $34141 = $$3$i$i2232 + 52 | 0;
 HEAP16[$$3$i$i2232 >> 1] = 544;
 HEAP16[$$3$i$i2232 + 2 >> 1] = 25;
 HEAP8[$$3$i$i2232 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2232 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2232 + 8 >> 2] = 1088;
 HEAP32[$$3$i$i2232 + 12 >> 2] = 27200;
 HEAP32[$$3$i$i2232 + 16 >> 2] = $34141;
 HEAP32[$$3$i$i2232 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2232 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2232 + 48 >> 0] = 0;
 HEAP32[$3070 >> 2] = $$3$i$i2232;
 _memcpy($34141 | 0, 3411666, 1088) | 0;
 _memcpy($$3$i$i2232 + 1140 | 0, 3412754, 1088) | 0;
 _memcpy($$3$i$i2232 + 2228 | 0, 3413842, 1088) | 0;
 _memcpy($$3$i$i2232 + 3316 | 0, 3414930, 1088) | 0;
 _memcpy($$3$i$i2232 + 4404 | 0, 3416018, 1088) | 0;
 _memcpy($$3$i$i2232 + 5492 | 0, 3417106, 1088) | 0;
 _memcpy($$3$i$i2232 + 6580 | 0, 3418194, 1088) | 0;
 _memcpy($$3$i$i2232 + 7668 | 0, 3419282, 1088) | 0;
 _memcpy($$3$i$i2232 + 8756 | 0, 3420370, 1088) | 0;
 _memcpy($$3$i$i2232 + 9844 | 0, 3421458, 1088) | 0;
 _memcpy($$3$i$i2232 + 10932 | 0, 3422546, 1088) | 0;
 _memcpy($$3$i$i2232 + 12020 | 0, 3423634, 1088) | 0;
 _memcpy($$3$i$i2232 + 13108 | 0, 3424722, 1088) | 0;
 _memcpy($$3$i$i2232 + 14196 | 0, 3425810, 1088) | 0;
 _memcpy($$3$i$i2232 + 15284 | 0, 3426898, 1088) | 0;
 _memcpy($$3$i$i2232 + 16372 | 0, 3427986, 1088) | 0;
 _memcpy($$3$i$i2232 + 17460 | 0, 3429074, 1088) | 0;
 _memcpy($$3$i$i2232 + 18548 | 0, 3430162, 1088) | 0;
 _memcpy($$3$i$i2232 + 19636 | 0, 3431250, 1088) | 0;
 _memcpy($$3$i$i2232 + 20724 | 0, 3432338, 1088) | 0;
 _memcpy($$3$i$i2232 + 21812 | 0, 3433426, 1088) | 0;
 _memcpy($$3$i$i2232 + 22900 | 0, 3434514, 1088) | 0;
 _memcpy($$3$i$i2232 + 23988 | 0, 3435602, 1088) | 0;
 _memcpy($$3$i$i2232 + 25076 | 0, 3436690, 1088) | 0;
 _memcpy($$3$i$i2232 + 26164 | 0, 3437778, 1088) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3070);
 if ($$3$i$i2232 | 0) {
  $34176 = $$3$i$i2232 + 5 | 0;
  $34178 = (HEAP8[$34176 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$34176 >> 0] = $34178;
  if (!($34178 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2232);
  HEAP32[$3070 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 225;
 HEAP16[$9911 >> 1] = 575;
 HEAP16[$9912 >> 1] = 765;
 HEAP16[$9913 >> 1] = 603;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31604) label = 5144; else {
  $34182 = HEAP32[915090] | 0;
  if (($34182 | 0) == (HEAP32[915088] | 0)) label = 5144; else {
   $$lcssa$i$i2219 = 3660360;
   $$lcssa8$i$i2218 = $34182;
   label = 5145;
  }
 }
 do if ((label | 0) == 5144) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31604) {
   $34189 = HEAP32[915096] | 0;
   if (($34189 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2219 = 3660384;
    $$lcssa8$i$i2218 = $34189;
    label = 5145;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31604) {
   $34194 = HEAP32[915102] | 0;
   if (($34194 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2219 = 3660408;
    $$lcssa8$i$i2218 = $34194;
    label = 5145;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31604) {
   $34199 = HEAP32[915108] | 0;
   if (($34199 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2219 = 3660432;
    $$lcssa8$i$i2218 = $34199;
    label = 5145;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31604) {
   $34204 = HEAP32[915114] | 0;
   if (($34204 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2219 = 3660456;
    $$lcssa8$i$i2218 = $34204;
    label = 5145;
    break;
   }
  }
  $$3$i$i2220 = __Znwj(31604) | 0;
 } while (0);
 if ((label | 0) == 5145) {
  $34187 = $$lcssa8$i$i2218 + -4 | 0;
  HEAP32[$$lcssa$i$i2219 >> 2] = $34187;
  $$3$i$i2220 = HEAP32[$34187 >> 2] | 0;
 }
 $34208 = $$3$i$i2220 + 52 | 0;
 HEAP16[$$3$i$i2220 >> 1] = 544;
 HEAP16[$$3$i$i2220 + 2 >> 1] = 29;
 HEAP8[$$3$i$i2220 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2220 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2220 + 8 >> 2] = 1088;
 HEAP32[$$3$i$i2220 + 12 >> 2] = 31552;
 HEAP32[$$3$i$i2220 + 16 >> 2] = $34208;
 HEAP32[$$3$i$i2220 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2220 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2220 + 48 >> 0] = 0;
 HEAP32[$3071 >> 2] = $$3$i$i2220;
 _memcpy($34208 | 0, 3438866, 1088) | 0;
 _memcpy($$3$i$i2220 + 1140 | 0, 3439954, 1088) | 0;
 _memcpy($$3$i$i2220 + 2228 | 0, 3441042, 1088) | 0;
 _memcpy($$3$i$i2220 + 3316 | 0, 3442130, 1088) | 0;
 _memcpy($$3$i$i2220 + 4404 | 0, 3443218, 1088) | 0;
 _memcpy($$3$i$i2220 + 5492 | 0, 3444306, 1088) | 0;
 _memcpy($$3$i$i2220 + 6580 | 0, 3445394, 1088) | 0;
 _memcpy($$3$i$i2220 + 7668 | 0, 3446482, 1088) | 0;
 _memcpy($$3$i$i2220 + 8756 | 0, 3447570, 1088) | 0;
 _memcpy($$3$i$i2220 + 9844 | 0, 3448658, 1088) | 0;
 _memcpy($$3$i$i2220 + 10932 | 0, 3449746, 1088) | 0;
 _memcpy($$3$i$i2220 + 12020 | 0, 3450834, 1088) | 0;
 _memcpy($$3$i$i2220 + 13108 | 0, 3451922, 1088) | 0;
 _memcpy($$3$i$i2220 + 14196 | 0, 3453010, 1088) | 0;
 _memcpy($$3$i$i2220 + 15284 | 0, 3454098, 1088) | 0;
 _memcpy($$3$i$i2220 + 16372 | 0, 3455186, 1088) | 0;
 _memcpy($$3$i$i2220 + 17460 | 0, 3456274, 1088) | 0;
 _memcpy($$3$i$i2220 + 18548 | 0, 3457362, 1088) | 0;
 _memcpy($$3$i$i2220 + 19636 | 0, 3458450, 1088) | 0;
 _memcpy($$3$i$i2220 + 20724 | 0, 3459538, 1088) | 0;
 _memcpy($$3$i$i2220 + 21812 | 0, 3460626, 1088) | 0;
 _memcpy($$3$i$i2220 + 22900 | 0, 3461714, 1088) | 0;
 _memcpy($$3$i$i2220 + 23988 | 0, 3462802, 1088) | 0;
 _memcpy($$3$i$i2220 + 25076 | 0, 3463890, 1088) | 0;
 _memcpy($$3$i$i2220 + 26164 | 0, 3464978, 1088) | 0;
 _memcpy($$3$i$i2220 + 27252 | 0, 3466066, 1088) | 0;
 _memcpy($$3$i$i2220 + 28340 | 0, 3467154, 1088) | 0;
 _memcpy($$3$i$i2220 + 29428 | 0, 3468242, 1088) | 0;
 _memcpy($$3$i$i2220 + 30516 | 0, 3469330, 1088) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3071);
 if ($$3$i$i2220 | 0) {
  $34247 = $$3$i$i2220 + 5 | 0;
  $34249 = (HEAP8[$34247 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$34247 >> 0] = $34249;
  if (!($34249 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2220);
  HEAP32[$3071 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 225;
 HEAP16[$9914 >> 1] = 604;
 HEAP16[$9915 >> 1] = 765;
 HEAP16[$9916 >> 1] = 632;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 31604) label = 5160; else {
  $34253 = HEAP32[915090] | 0;
  if (($34253 | 0) == (HEAP32[915088] | 0)) label = 5160; else {
   $$lcssa$i$i2207 = 3660360;
   $$lcssa8$i$i2206 = $34253;
   label = 5161;
  }
 }
 do if ((label | 0) == 5160) {
  if ((HEAP32[915097] | 0) >>> 0 >= 31604) {
   $34260 = HEAP32[915096] | 0;
   if (($34260 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2207 = 3660384;
    $$lcssa8$i$i2206 = $34260;
    label = 5161;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 31604) {
   $34265 = HEAP32[915102] | 0;
   if (($34265 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2207 = 3660408;
    $$lcssa8$i$i2206 = $34265;
    label = 5161;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 31604) {
   $34270 = HEAP32[915108] | 0;
   if (($34270 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2207 = 3660432;
    $$lcssa8$i$i2206 = $34270;
    label = 5161;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 31604) {
   $34275 = HEAP32[915114] | 0;
   if (($34275 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2207 = 3660456;
    $$lcssa8$i$i2206 = $34275;
    label = 5161;
    break;
   }
  }
  $$3$i$i2208 = __Znwj(31604) | 0;
 } while (0);
 if ((label | 0) == 5161) {
  $34258 = $$lcssa8$i$i2206 + -4 | 0;
  HEAP32[$$lcssa$i$i2207 >> 2] = $34258;
  $$3$i$i2208 = HEAP32[$34258 >> 2] | 0;
 }
 $34279 = $$3$i$i2208 + 52 | 0;
 HEAP16[$$3$i$i2208 >> 1] = 544;
 HEAP16[$$3$i$i2208 + 2 >> 1] = 29;
 HEAP8[$$3$i$i2208 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2208 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2208 + 8 >> 2] = 1088;
 HEAP32[$$3$i$i2208 + 12 >> 2] = 31552;
 HEAP32[$$3$i$i2208 + 16 >> 2] = $34279;
 HEAP32[$$3$i$i2208 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2208 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2208 + 48 >> 0] = 0;
 HEAP32[$3072 >> 2] = $$3$i$i2208;
 _memcpy($34279 | 0, 3470418, 1088) | 0;
 _memcpy($$3$i$i2208 + 1140 | 0, 3471506, 1088) | 0;
 _memcpy($$3$i$i2208 + 2228 | 0, 3472594, 1088) | 0;
 _memcpy($$3$i$i2208 + 3316 | 0, 3473682, 1088) | 0;
 _memcpy($$3$i$i2208 + 4404 | 0, 3474770, 1088) | 0;
 _memcpy($$3$i$i2208 + 5492 | 0, 3475858, 1088) | 0;
 _memcpy($$3$i$i2208 + 6580 | 0, 3476946, 1088) | 0;
 _memcpy($$3$i$i2208 + 7668 | 0, 3478034, 1088) | 0;
 _memcpy($$3$i$i2208 + 8756 | 0, 3479122, 1088) | 0;
 _memcpy($$3$i$i2208 + 9844 | 0, 3480210, 1088) | 0;
 _memcpy($$3$i$i2208 + 10932 | 0, 3481298, 1088) | 0;
 _memcpy($$3$i$i2208 + 12020 | 0, 3482386, 1088) | 0;
 _memcpy($$3$i$i2208 + 13108 | 0, 3483474, 1088) | 0;
 _memcpy($$3$i$i2208 + 14196 | 0, 3484562, 1088) | 0;
 _memcpy($$3$i$i2208 + 15284 | 0, 3485650, 1088) | 0;
 _memcpy($$3$i$i2208 + 16372 | 0, 3486738, 1088) | 0;
 _memcpy($$3$i$i2208 + 17460 | 0, 3487826, 1088) | 0;
 _memcpy($$3$i$i2208 + 18548 | 0, 3488914, 1088) | 0;
 _memcpy($$3$i$i2208 + 19636 | 0, 3490002, 1088) | 0;
 _memcpy($$3$i$i2208 + 20724 | 0, 3491090, 1088) | 0;
 _memcpy($$3$i$i2208 + 21812 | 0, 3492178, 1088) | 0;
 _memcpy($$3$i$i2208 + 22900 | 0, 3493266, 1088) | 0;
 _memcpy($$3$i$i2208 + 23988 | 0, 3494354, 1088) | 0;
 _memcpy($$3$i$i2208 + 25076 | 0, 3495442, 1088) | 0;
 _memcpy($$3$i$i2208 + 26164 | 0, 3496530, 1088) | 0;
 _memcpy($$3$i$i2208 + 27252 | 0, 3497618, 1088) | 0;
 _memcpy($$3$i$i2208 + 28340 | 0, 3498706, 1088) | 0;
 _memcpy($$3$i$i2208 + 29428 | 0, 3499794, 1088) | 0;
 _memcpy($$3$i$i2208 + 30516 | 0, 3500882, 1088) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3072);
 if ($$3$i$i2208 | 0) {
  $34318 = $$3$i$i2208 + 5 | 0;
  $34320 = (HEAP8[$34318 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$34318 >> 0] = $34320;
  if (!($34320 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2208);
  HEAP32[$3072 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 225;
 HEAP16[$9917 >> 1] = 633;
 HEAP16[$9918 >> 1] = 765;
 HEAP16[$9919 >> 1] = 659;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 29428) label = 5176; else {
  $34324 = HEAP32[915090] | 0;
  if (($34324 | 0) == (HEAP32[915088] | 0)) label = 5176; else {
   $$lcssa$i$i2195 = 3660360;
   $$lcssa8$i$i2194 = $34324;
   label = 5177;
  }
 }
 do if ((label | 0) == 5176) {
  if ((HEAP32[915097] | 0) >>> 0 >= 29428) {
   $34331 = HEAP32[915096] | 0;
   if (($34331 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2195 = 3660384;
    $$lcssa8$i$i2194 = $34331;
    label = 5177;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 29428) {
   $34336 = HEAP32[915102] | 0;
   if (($34336 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2195 = 3660408;
    $$lcssa8$i$i2194 = $34336;
    label = 5177;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 29428) {
   $34341 = HEAP32[915108] | 0;
   if (($34341 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2195 = 3660432;
    $$lcssa8$i$i2194 = $34341;
    label = 5177;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 29428) {
   $34346 = HEAP32[915114] | 0;
   if (($34346 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2195 = 3660456;
    $$lcssa8$i$i2194 = $34346;
    label = 5177;
    break;
   }
  }
  $$3$i$i2196 = __Znwj(29428) | 0;
 } while (0);
 if ((label | 0) == 5177) {
  $34329 = $$lcssa8$i$i2194 + -4 | 0;
  HEAP32[$$lcssa$i$i2195 >> 2] = $34329;
  $$3$i$i2196 = HEAP32[$34329 >> 2] | 0;
 }
 $34350 = $$3$i$i2196 + 52 | 0;
 HEAP16[$$3$i$i2196 >> 1] = 544;
 HEAP16[$$3$i$i2196 + 2 >> 1] = 27;
 HEAP8[$$3$i$i2196 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2196 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2196 + 8 >> 2] = 1088;
 HEAP32[$$3$i$i2196 + 12 >> 2] = 29376;
 HEAP32[$$3$i$i2196 + 16 >> 2] = $34350;
 HEAP32[$$3$i$i2196 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2196 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2196 + 48 >> 0] = 0;
 HEAP32[$3073 >> 2] = $$3$i$i2196;
 _memcpy($34350 | 0, 3501970, 1088) | 0;
 _memcpy($$3$i$i2196 + 1140 | 0, 3503058, 1088) | 0;
 _memcpy($$3$i$i2196 + 2228 | 0, 3504146, 1088) | 0;
 _memcpy($$3$i$i2196 + 3316 | 0, 3505234, 1088) | 0;
 _memcpy($$3$i$i2196 + 4404 | 0, 3506322, 1088) | 0;
 _memcpy($$3$i$i2196 + 5492 | 0, 3507410, 1088) | 0;
 _memcpy($$3$i$i2196 + 6580 | 0, 3508498, 1088) | 0;
 _memcpy($$3$i$i2196 + 7668 | 0, 3509586, 1088) | 0;
 _memcpy($$3$i$i2196 + 8756 | 0, 3510674, 1088) | 0;
 _memcpy($$3$i$i2196 + 9844 | 0, 3511762, 1088) | 0;
 _memcpy($$3$i$i2196 + 10932 | 0, 3512850, 1088) | 0;
 _memcpy($$3$i$i2196 + 12020 | 0, 3513938, 1088) | 0;
 _memcpy($$3$i$i2196 + 13108 | 0, 3515026, 1088) | 0;
 _memcpy($$3$i$i2196 + 14196 | 0, 3516114, 1088) | 0;
 _memcpy($$3$i$i2196 + 15284 | 0, 3517202, 1088) | 0;
 _memcpy($$3$i$i2196 + 16372 | 0, 3518290, 1088) | 0;
 _memcpy($$3$i$i2196 + 17460 | 0, 3519378, 1088) | 0;
 _memcpy($$3$i$i2196 + 18548 | 0, 3520466, 1088) | 0;
 _memcpy($$3$i$i2196 + 19636 | 0, 3521554, 1088) | 0;
 _memcpy($$3$i$i2196 + 20724 | 0, 3522642, 1088) | 0;
 _memcpy($$3$i$i2196 + 21812 | 0, 3523730, 1088) | 0;
 _memcpy($$3$i$i2196 + 22900 | 0, 3524818, 1088) | 0;
 _memcpy($$3$i$i2196 + 23988 | 0, 3525906, 1088) | 0;
 _memcpy($$3$i$i2196 + 25076 | 0, 3526994, 1088) | 0;
 _memcpy($$3$i$i2196 + 26164 | 0, 3528082, 1088) | 0;
 _memcpy($$3$i$i2196 + 27252 | 0, 3529170, 1088) | 0;
 _memcpy($$3$i$i2196 + 28340 | 0, 3530258, 1088) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3073);
 if ($$3$i$i2196 | 0) {
  $34387 = $$3$i$i2196 + 5 | 0;
  $34389 = (HEAP8[$34387 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$34387 >> 0] = $34389;
  if (!($34389 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2196);
  HEAP32[$3073 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 769;
 HEAP16[$9920 >> 1] = 619;
 HEAP16[$9921 >> 1] = 994;
 HEAP16[$9922 >> 1] = 659;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 18748) label = 5192; else {
  $34393 = HEAP32[915090] | 0;
  if (($34393 | 0) == (HEAP32[915088] | 0)) label = 5192; else {
   $$lcssa$i$i2183 = 3660360;
   $$lcssa8$i$i2182 = $34393;
   label = 5193;
  }
 }
 do if ((label | 0) == 5192) {
  if ((HEAP32[915097] | 0) >>> 0 >= 18748) {
   $34400 = HEAP32[915096] | 0;
   if (($34400 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2183 = 3660384;
    $$lcssa8$i$i2182 = $34400;
    label = 5193;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 18748) {
   $34405 = HEAP32[915102] | 0;
   if (($34405 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2183 = 3660408;
    $$lcssa8$i$i2182 = $34405;
    label = 5193;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 18748) {
   $34410 = HEAP32[915108] | 0;
   if (($34410 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2183 = 3660432;
    $$lcssa8$i$i2182 = $34410;
    label = 5193;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 18748) {
   $34415 = HEAP32[915114] | 0;
   if (($34415 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2183 = 3660456;
    $$lcssa8$i$i2182 = $34415;
    label = 5193;
    break;
   }
  }
  $$3$i$i2184 = __Znwj(18748) | 0;
 } while (0);
 if ((label | 0) == 5193) {
  $34398 = $$lcssa8$i$i2182 + -4 | 0;
  HEAP32[$$lcssa$i$i2183 >> 2] = $34398;
  $$3$i$i2184 = HEAP32[$34398 >> 2] | 0;
 }
 $34419 = $$3$i$i2184 + 52 | 0;
 HEAP16[$$3$i$i2184 >> 1] = 228;
 HEAP16[$$3$i$i2184 + 2 >> 1] = 41;
 HEAP8[$$3$i$i2184 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2184 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2184 + 8 >> 2] = 456;
 HEAP32[$$3$i$i2184 + 12 >> 2] = 18696;
 HEAP32[$$3$i$i2184 + 16 >> 2] = $34419;
 HEAP32[$$3$i$i2184 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2184 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2184 + 48 >> 0] = 0;
 HEAP32[$3074 >> 2] = $$3$i$i2184;
 _memcpy($34419 | 0, 3531346, 456) | 0;
 _memcpy($$3$i$i2184 + 508 | 0, 3531802, 456) | 0;
 _memcpy($$3$i$i2184 + 964 | 0, 3532258, 456) | 0;
 _memcpy($$3$i$i2184 + 1420 | 0, 3532714, 456) | 0;
 _memcpy($$3$i$i2184 + 1876 | 0, 3533170, 456) | 0;
 _memcpy($$3$i$i2184 + 2332 | 0, 3533626, 456) | 0;
 _memcpy($$3$i$i2184 + 2788 | 0, 3534082, 456) | 0;
 _memcpy($$3$i$i2184 + 3244 | 0, 3534538, 456) | 0;
 _memcpy($$3$i$i2184 + 3700 | 0, 3534994, 456) | 0;
 _memcpy($$3$i$i2184 + 4156 | 0, 3535450, 456) | 0;
 _memcpy($$3$i$i2184 + 4612 | 0, 3535906, 456) | 0;
 _memcpy($$3$i$i2184 + 5068 | 0, 3536362, 456) | 0;
 _memcpy($$3$i$i2184 + 5524 | 0, 3536818, 456) | 0;
 _memcpy($$3$i$i2184 + 5980 | 0, 3537274, 456) | 0;
 _memcpy($$3$i$i2184 + 6436 | 0, 3537730, 456) | 0;
 _memcpy($$3$i$i2184 + 6892 | 0, 3538186, 456) | 0;
 _memcpy($$3$i$i2184 + 7348 | 0, 3538642, 456) | 0;
 _memcpy($$3$i$i2184 + 7804 | 0, 3539098, 456) | 0;
 _memcpy($$3$i$i2184 + 8260 | 0, 3539554, 456) | 0;
 _memcpy($$3$i$i2184 + 8716 | 0, 3540010, 456) | 0;
 _memcpy($$3$i$i2184 + 9172 | 0, 3540466, 456) | 0;
 _memcpy($$3$i$i2184 + 9628 | 0, 3540922, 456) | 0;
 _memcpy($$3$i$i2184 + 10084 | 0, 3541378, 456) | 0;
 _memcpy($$3$i$i2184 + 10540 | 0, 3541834, 456) | 0;
 _memcpy($$3$i$i2184 + 10996 | 0, 3542290, 456) | 0;
 _memcpy($$3$i$i2184 + 11452 | 0, 3542746, 456) | 0;
 _memcpy($$3$i$i2184 + 11908 | 0, 3543202, 456) | 0;
 _memcpy($$3$i$i2184 + 12364 | 0, 3543658, 456) | 0;
 _memcpy($$3$i$i2184 + 12820 | 0, 3544114, 456) | 0;
 _memcpy($$3$i$i2184 + 13276 | 0, 3544570, 456) | 0;
 _memcpy($$3$i$i2184 + 13732 | 0, 3545026, 456) | 0;
 _memcpy($$3$i$i2184 + 14188 | 0, 3545482, 456) | 0;
 _memcpy($$3$i$i2184 + 14644 | 0, 3545938, 456) | 0;
 _memcpy($$3$i$i2184 + 15100 | 0, 3546394, 456) | 0;
 _memcpy($$3$i$i2184 + 15556 | 0, 3546850, 456) | 0;
 _memcpy($$3$i$i2184 + 16012 | 0, 3547306, 456) | 0;
 _memcpy($$3$i$i2184 + 16468 | 0, 3547762, 456) | 0;
 _memcpy($$3$i$i2184 + 16924 | 0, 3548218, 456) | 0;
 _memcpy($$3$i$i2184 + 17380 | 0, 3548674, 456) | 0;
 _memcpy($$3$i$i2184 + 17836 | 0, 3549130, 456) | 0;
 _memcpy($$3$i$i2184 + 18292 | 0, 3549586, 456) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3074);
 if ($$3$i$i2184 | 0) {
  $34470 = $$3$i$i2184 + 5 | 0;
  $34472 = (HEAP8[$34470 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$34470 >> 0] = $34472;
  if (!($34472 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2184);
  HEAP32[$3074 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 212;
 HEAP16[$9923 >> 1] = 619;
 HEAP16[$9924 >> 1] = 221;
 HEAP16[$9925 >> 1] = 659;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1036) label = 5208; else {
  $34476 = HEAP32[915090] | 0;
  if (($34476 | 0) == (HEAP32[915088] | 0)) label = 5208; else {
   $$lcssa$i$i2171 = 3660360;
   $$lcssa8$i$i2170 = $34476;
   label = 5209;
  }
 }
 do if ((label | 0) == 5208) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1036) {
   $34483 = HEAP32[915096] | 0;
   if (($34483 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2171 = 3660384;
    $$lcssa8$i$i2170 = $34483;
    label = 5209;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1036) {
   $34488 = HEAP32[915102] | 0;
   if (($34488 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2171 = 3660408;
    $$lcssa8$i$i2170 = $34488;
    label = 5209;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1036) {
   $34493 = HEAP32[915108] | 0;
   if (($34493 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2171 = 3660432;
    $$lcssa8$i$i2170 = $34493;
    label = 5209;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1036) {
   $34498 = HEAP32[915114] | 0;
   if (($34498 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2171 = 3660456;
    $$lcssa8$i$i2170 = $34498;
    label = 5209;
    break;
   }
  }
  $$3$i$i2172 = __Znwj(1036) | 0;
 } while (0);
 if ((label | 0) == 5209) {
  $34481 = $$lcssa8$i$i2170 + -4 | 0;
  HEAP32[$$lcssa$i$i2171 >> 2] = $34481;
  $$3$i$i2172 = HEAP32[$34481 >> 2] | 0;
 }
 $34502 = $$3$i$i2172 + 52 | 0;
 HEAP16[$$3$i$i2172 >> 1] = 12;
 HEAP16[$$3$i$i2172 + 2 >> 1] = 41;
 HEAP8[$$3$i$i2172 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2172 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2172 + 8 >> 2] = 24;
 HEAP32[$$3$i$i2172 + 12 >> 2] = 984;
 HEAP32[$$3$i$i2172 + 16 >> 2] = $34502;
 HEAP32[$$3$i$i2172 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2172 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2172 + 48 >> 0] = 0;
 HEAP32[$3075 >> 2] = $$3$i$i2172;
 dest = $34502;
 src = 3550042;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 76 | 0;
 src = 3550066;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 100 | 0;
 src = 3550090;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 124 | 0;
 src = 3550114;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 148 | 0;
 src = 3550138;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 172 | 0;
 src = 3550162;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 196 | 0;
 src = 3550186;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 220 | 0;
 src = 3550210;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 244 | 0;
 src = 3550234;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 268 | 0;
 src = 3550258;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 292 | 0;
 src = 3550282;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 316 | 0;
 src = 3550306;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 340 | 0;
 src = 3550330;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 364 | 0;
 src = 3550354;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 388 | 0;
 src = 3550378;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 412 | 0;
 src = 3550402;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 436 | 0;
 src = 3550426;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 460 | 0;
 src = 3550450;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 484 | 0;
 src = 3550474;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 508 | 0;
 src = 3550498;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 532 | 0;
 src = 3550522;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 556 | 0;
 src = 3550546;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 580 | 0;
 src = 3550570;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 604 | 0;
 src = 3550594;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 628 | 0;
 src = 3550618;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 652 | 0;
 src = 3550642;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 676 | 0;
 src = 3550666;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 700 | 0;
 src = 3550690;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 724 | 0;
 src = 3550714;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 748 | 0;
 src = 3550738;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 772 | 0;
 src = 3550762;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 796 | 0;
 src = 3550786;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 820 | 0;
 src = 3550810;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 844 | 0;
 src = 3550834;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 868 | 0;
 src = 3550858;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 892 | 0;
 src = 3550882;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 916 | 0;
 src = 3550906;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 940 | 0;
 src = 3550930;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 964 | 0;
 src = 3550954;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 988 | 0;
 src = 3550978;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2172 + 1012 | 0;
 src = 3551002;
 stop = dest + 24 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3075);
 if ($$3$i$i2172 | 0) {
  $34553 = $$3$i$i2172 + 5 | 0;
  $34555 = (HEAP8[$34553 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$34553 >> 0] = $34555;
  if (!($34555 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2172);
  HEAP32[$3075 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 24;
 HEAP16[$9926 >> 1] = 89;
 HEAP16[$9927 >> 1] = 118;
 HEAP16[$9928 >> 1] = 184;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 18484) label = 5224; else {
  $34559 = HEAP32[915090] | 0;
  if (($34559 | 0) == (HEAP32[915088] | 0)) label = 5224; else {
   $$lcssa$i$i2159 = 3660360;
   $$lcssa8$i$i2158 = $34559;
   label = 5225;
  }
 }
 do if ((label | 0) == 5224) {
  if ((HEAP32[915097] | 0) >>> 0 >= 18484) {
   $34566 = HEAP32[915096] | 0;
   if (($34566 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2159 = 3660384;
    $$lcssa8$i$i2158 = $34566;
    label = 5225;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 18484) {
   $34571 = HEAP32[915102] | 0;
   if (($34571 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2159 = 3660408;
    $$lcssa8$i$i2158 = $34571;
    label = 5225;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 18484) {
   $34576 = HEAP32[915108] | 0;
   if (($34576 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2159 = 3660432;
    $$lcssa8$i$i2158 = $34576;
    label = 5225;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 18484) {
   $34581 = HEAP32[915114] | 0;
   if (($34581 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2159 = 3660456;
    $$lcssa8$i$i2158 = $34581;
    label = 5225;
    break;
   }
  }
  $$3$i$i2160 = __Znwj(18484) | 0;
 } while (0);
 if ((label | 0) == 5225) {
  $34564 = $$lcssa8$i$i2158 + -4 | 0;
  HEAP32[$$lcssa$i$i2159 >> 2] = $34564;
  $$3$i$i2160 = HEAP32[$34564 >> 2] | 0;
 }
 $34585 = $$3$i$i2160 + 52 | 0;
 HEAP16[$$3$i$i2160 >> 1] = 96;
 HEAP16[$$3$i$i2160 + 2 >> 1] = 96;
 HEAP8[$$3$i$i2160 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2160 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2160 + 8 >> 2] = 192;
 HEAP32[$$3$i$i2160 + 12 >> 2] = 18432;
 HEAP32[$$3$i$i2160 + 16 >> 2] = $34585;
 HEAP32[$$3$i$i2160 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2160 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2160 + 48 >> 0] = 0;
 HEAP32[$3076 >> 2] = $$3$i$i2160;
 $dest$02$i2154 = $34585;
 $i$03$i2153 = 0;
 $src$01$i2155 = 3551026;
 while (1) {
  _memcpy($dest$02$i2154 | 0, $src$01$i2155 | 0, 192) | 0;
  $i$03$i2153 = $i$03$i2153 + 1 << 16 >> 16;
  if (($i$03$i2153 & 65535) >= 96) break; else {
   $dest$02$i2154 = $dest$02$i2154 + 192 | 0;
   $src$01$i2155 = $src$01$i2155 + 192 | 0;
  }
 }
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3076);
 if ($$3$i$i2160 | 0) {
  $34600 = $$3$i$i2160 + 5 | 0;
  $34602 = (HEAP8[$34600 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$34600 >> 0] = $34602;
  if (!($34602 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2160);
  HEAP32[$3076 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 5;
 HEAP16[$9929 >> 1] = 73;
 HEAP16[$9930 >> 1] = 193;
 HEAP16[$9931 >> 1] = 88;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6196) label = 5242; else {
  $34606 = HEAP32[915090] | 0;
  if (($34606 | 0) == (HEAP32[915088] | 0)) label = 5242; else {
   $$lcssa$i$i2147 = 3660360;
   $$lcssa8$i$i2146 = $34606;
   label = 5243;
  }
 }
 do if ((label | 0) == 5242) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6196) {
   $34613 = HEAP32[915096] | 0;
   if (($34613 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2147 = 3660384;
    $$lcssa8$i$i2146 = $34613;
    label = 5243;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6196) {
   $34618 = HEAP32[915102] | 0;
   if (($34618 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2147 = 3660408;
    $$lcssa8$i$i2146 = $34618;
    label = 5243;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6196) {
   $34623 = HEAP32[915108] | 0;
   if (($34623 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2147 = 3660432;
    $$lcssa8$i$i2146 = $34623;
    label = 5243;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6196) {
   $34628 = HEAP32[915114] | 0;
   if (($34628 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2147 = 3660456;
    $$lcssa8$i$i2146 = $34628;
    label = 5243;
    break;
   }
  }
  $$3$i$i2148 = __Znwj(6196) | 0;
 } while (0);
 if ((label | 0) == 5243) {
  $34611 = $$lcssa8$i$i2146 + -4 | 0;
  HEAP32[$$lcssa$i$i2147 >> 2] = $34611;
  $$3$i$i2148 = HEAP32[$34611 >> 2] | 0;
 }
 $34632 = $$3$i$i2148 + 52 | 0;
 HEAP16[$$3$i$i2148 >> 1] = 192;
 HEAP16[$$3$i$i2148 + 2 >> 1] = 16;
 HEAP8[$$3$i$i2148 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2148 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2148 + 8 >> 2] = 384;
 HEAP32[$$3$i$i2148 + 12 >> 2] = 6144;
 HEAP32[$$3$i$i2148 + 16 >> 2] = $34632;
 HEAP32[$$3$i$i2148 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2148 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2148 + 48 >> 0] = 0;
 HEAP32[$3077 >> 2] = $$3$i$i2148;
 _memcpy($34632 | 0, 3569458, 384) | 0;
 _memcpy($$3$i$i2148 + 436 | 0, 3569842, 384) | 0;
 _memcpy($$3$i$i2148 + 820 | 0, 3570226, 384) | 0;
 _memcpy($$3$i$i2148 + 1204 | 0, 3570610, 384) | 0;
 _memcpy($$3$i$i2148 + 1588 | 0, 3570994, 384) | 0;
 _memcpy($$3$i$i2148 + 1972 | 0, 3571378, 384) | 0;
 _memcpy($$3$i$i2148 + 2356 | 0, 3571762, 384) | 0;
 _memcpy($$3$i$i2148 + 2740 | 0, 3572146, 384) | 0;
 _memcpy($$3$i$i2148 + 3124 | 0, 3572530, 384) | 0;
 _memcpy($$3$i$i2148 + 3508 | 0, 3572914, 384) | 0;
 _memcpy($$3$i$i2148 + 3892 | 0, 3573298, 384) | 0;
 _memcpy($$3$i$i2148 + 4276 | 0, 3573682, 384) | 0;
 _memcpy($$3$i$i2148 + 4660 | 0, 3574066, 384) | 0;
 _memcpy($$3$i$i2148 + 5044 | 0, 3574450, 384) | 0;
 _memcpy($$3$i$i2148 + 5428 | 0, 3574834, 384) | 0;
 _memcpy($$3$i$i2148 + 5812 | 0, 3575218, 384) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3077);
 if ($$3$i$i2148 | 0) {
  $34658 = $$3$i$i2148 + 5 | 0;
  $34660 = (HEAP8[$34658 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$34658 >> 0] = $34660;
  if (!($34660 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2148);
  HEAP32[$3077 >> 2] = 0;
 }
 $34662 = $3078;
 HEAP32[$34662 >> 2] = 47711229;
 HEAP32[$34662 + 4 >> 2] = 2490369;
 HEAP32[$9932 >> 2] = 65535;
 HEAP16[$3079 >> 1] = 1021;
 HEAP16[$9933 >> 1] = 728;
 HEAP16[$9934 >> 1] = 1;
 HEAP16[$9935 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3078, $3079);
 $34666 = $3080;
 HEAP32[$34666 >> 2] = 50135904;
 HEAP32[$34666 + 4 >> 2] = 65693;
 HEAP32[$9936 >> 2] = 65535;
 HEAP16[$3081 >> 1] = 864;
 HEAP16[$9937 >> 1] = 765;
 HEAP16[$9938 >> 1] = 157;
 HEAP16[$9939 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3080, $3081);
 $34670 = $3082;
 HEAP32[$34670 >> 2] = 47711072;
 HEAP32[$34670 + 4 >> 2] = 2424833;
 HEAP32[$9940 >> 2] = 33808;
 HEAP16[$3083 >> 1] = 864;
 HEAP16[$9941 >> 1] = 728;
 HEAP16[$9942 >> 1] = 1;
 HEAP16[$9943 >> 1] = 37;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3082, $3083);
 $34674 = $3084;
 HEAP32[$34674 >> 2] = 47711073;
 HEAP32[$34674 + 4 >> 2] = 65692;
 HEAP32[$9944 >> 2] = 33808;
 HEAP16[$3085 >> 1] = 865;
 HEAP16[$9945 >> 1] = 728;
 HEAP16[$9946 >> 1] = 156;
 HEAP16[$9947 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3084, $3085);
 $34678 = $3086;
 HEAP32[$34678 >> 2] = 47776741;
 HEAP32[$34678 + 4 >> 2] = 2359320;
 HEAP32[$9948 >> 2] = 54937;
 HEAP16[$3087 >> 1] = 997;
 HEAP16[$9949 >> 1] = 729;
 HEAP16[$9950 >> 1] = 24;
 HEAP16[$9951 >> 1] = 36;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3086, $3087);
 $34682 = $3088;
 HEAP32[$34682 >> 2] = 47710293;
 HEAP32[$34682 + 4 >> 2] = 2491143;
 HEAP32[$9952 >> 2] = 54937;
 HEAP16[$3089 >> 1] = 85;
 HEAP16[$9953 >> 1] = 728;
 HEAP16[$9954 >> 1] = 9;
 HEAP16[$9955 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3088, $3089);
 $34686 = $3090;
 HEAP32[$34686 >> 2] = 47710293;
 HEAP32[$34686 + 4 >> 2] = 2491143;
 HEAP32[$9956 >> 2] = 54937;
 HEAP16[$3091 >> 1] = 847;
 HEAP16[$9957 >> 1] = 728;
 HEAP16[$9958 >> 1] = 13;
 HEAP16[$9959 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3090, $3091);
 $34690 = $3092;
 HEAP32[$34690 >> 2] = 47710293;
 HEAP32[$34690 + 4 >> 2] = 2491119;
 HEAP32[$9960 >> 2] = 54937;
 HEAP16[$3093 >> 1] = 85;
 HEAP16[$9961 >> 1] = 728;
 HEAP16[$9962 >> 1] = 9;
 HEAP16[$9963 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3092, $3093);
 $34694 = $3094;
 HEAP32[$34694 >> 2] = 47710293;
 HEAP32[$34694 + 4 >> 2] = 2491119;
 HEAP32[$9964 >> 2] = 54937;
 HEAP16[$3095 >> 1] = 823;
 HEAP16[$9965 >> 1] = 728;
 HEAP16[$9966 >> 1] = 13;
 HEAP16[$9967 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3094, $3095);
 $34698 = $3096;
 HEAP32[$34698 >> 2] = 47776655;
 HEAP32[$34698 + 4 >> 2] = 2359320;
 HEAP32[$9968 >> 2] = 54937;
 HEAP16[$3097 >> 1] = 911;
 HEAP16[$9969 >> 1] = 729;
 HEAP16[$9970 >> 1] = 24;
 HEAP16[$9971 >> 1] = 36;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3096, $3097);
 $34702 = $3098;
 HEAP32[$34702 >> 2] = 47710210;
 HEAP32[$34702 + 4 >> 2] = 2490451;
 HEAP32[$9972 >> 2] = 54937;
 HEAP16[$3099 >> 1] = 80;
 HEAP16[$9973 >> 1] = 728;
 HEAP16[$9974 >> 1] = 5;
 HEAP16[$9975 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3098, $3099);
 $34706 = $3100;
 HEAP32[$34706 >> 2] = 47710210;
 HEAP32[$34706 + 4 >> 2] = 2490451;
 HEAP32[$9976 >> 2] = 54937;
 HEAP16[$3101 >> 1] = 80;
 HEAP16[$9977 >> 1] = 728;
 HEAP16[$9978 >> 1] = 5;
 HEAP16[$9979 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3100, $3101);
 $34710 = $3102;
 HEAP32[$34710 >> 2] = 47776609;
 HEAP32[$34710 + 4 >> 2] = 2359312;
 HEAP32[$9980 >> 2] = 54937;
 HEAP16[$3103 >> 1] = 865;
 HEAP16[$9981 >> 1] = 729;
 HEAP16[$9982 >> 1] = 16;
 HEAP16[$9983 >> 1] = 36;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3102, $3103);
 $34714 = $3104;
 HEAP32[$34714 >> 2] = 48694119;
 HEAP32[$34714 + 4 >> 2] = 131073;
 HEAP32[$9984 >> 2] = 0;
 HEAP16[$3105 >> 1] = 871;
 HEAP16[$9985 >> 1] = 743;
 HEAP16[$9986 >> 1] = 1;
 HEAP16[$9987 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3104, $3105);
 $34718 = $3106;
 HEAP32[$34718 >> 2] = 48956263;
 HEAP32[$34718 + 4 >> 2] = 131073;
 HEAP32[$9988 >> 2] = 0;
 HEAP16[$3107 >> 1] = 871;
 HEAP16[$9989 >> 1] = 747;
 HEAP16[$9990 >> 1] = 1;
 HEAP16[$9991 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3106, $3107);
 $34722 = $3108;
 HEAP32[$34722 >> 2] = 48628584;
 HEAP32[$34722 + 4 >> 2] = 131073;
 HEAP32[$9992 >> 2] = 0;
 HEAP16[$3109 >> 1] = 872;
 HEAP16[$9993 >> 1] = 742;
 HEAP16[$9994 >> 1] = 1;
 HEAP16[$9995 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3108, $3109);
 $34726 = $3110;
 HEAP32[$34726 >> 2] = 48890728;
 HEAP32[$34726 + 4 >> 2] = 131073;
 HEAP32[$9996 >> 2] = 0;
 HEAP16[$3111 >> 1] = 872;
 HEAP16[$9997 >> 1] = 746;
 HEAP16[$9998 >> 1] = 1;
 HEAP16[$9999 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3110, $3111);
 $34730 = $3112;
 HEAP32[$34730 >> 2] = 48563049;
 HEAP32[$34730 + 4 >> 2] = 131073;
 HEAP32[$10000 >> 2] = 0;
 HEAP16[$3113 >> 1] = 873;
 HEAP16[$10001 >> 1] = 741;
 HEAP16[$10002 >> 1] = 1;
 HEAP16[$10003 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3112, $3113);
 $34734 = $3114;
 HEAP32[$34734 >> 2] = 48825193;
 HEAP32[$34734 + 4 >> 2] = 131073;
 HEAP32[$10004 >> 2] = 0;
 HEAP16[$3115 >> 1] = 873;
 HEAP16[$10005 >> 1] = 745;
 HEAP16[$10006 >> 1] = 1;
 HEAP16[$10007 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3114, $3115);
 $34738 = $3116;
 HEAP32[$34738 >> 2] = 48628586;
 HEAP32[$34738 + 4 >> 2] = 131073;
 HEAP32[$10008 >> 2] = 0;
 HEAP16[$3117 >> 1] = 874;
 HEAP16[$10009 >> 1] = 742;
 HEAP16[$10010 >> 1] = 1;
 HEAP16[$10011 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3116, $3117);
 $34742 = $3118;
 HEAP32[$34742 >> 2] = 48890730;
 HEAP32[$34742 + 4 >> 2] = 131073;
 HEAP32[$10012 >> 2] = 0;
 HEAP16[$3119 >> 1] = 874;
 HEAP16[$10013 >> 1] = 746;
 HEAP16[$10014 >> 1] = 1;
 HEAP16[$10015 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3118, $3119);
 $34746 = $3120;
 HEAP32[$34746 >> 2] = 48694123;
 HEAP32[$34746 + 4 >> 2] = 131073;
 HEAP32[$10016 >> 2] = 0;
 HEAP16[$3121 >> 1] = 875;
 HEAP16[$10017 >> 1] = 743;
 HEAP16[$10018 >> 1] = 1;
 HEAP16[$10019 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3120, $3121);
 $34750 = $3122;
 HEAP32[$34750 >> 2] = 48956267;
 HEAP32[$34750 + 4 >> 2] = 131073;
 HEAP32[$10020 >> 2] = 0;
 HEAP16[$3123 >> 1] = 875;
 HEAP16[$10021 >> 1] = 747;
 HEAP16[$10022 >> 1] = 1;
 HEAP16[$10023 >> 1] = 2;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3122, $3123);
 $34754 = $3124;
 HEAP32[$34754 >> 2] = 47841369;
 HEAP32[$34754 + 4 >> 2] = 2228225;
 HEAP32[$10024 >> 2] = 33808;
 HEAP16[$3125 >> 1] = 89;
 HEAP16[$10025 >> 1] = 730;
 HEAP16[$10026 >> 1] = 1;
 HEAP16[$10027 >> 1] = 34;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3124, $3125);
 $34758 = $3126;
 HEAP32[$34758 >> 2] = 50004055;
 HEAP32[$34758 + 4 >> 2] = 65538;
 HEAP32[$10028 >> 2] = 33808;
 HEAP16[$3127 >> 1] = 87;
 HEAP16[$10029 >> 1] = 763;
 HEAP16[$10030 >> 1] = 2;
 HEAP16[$10031 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3126, $3127);
 $34762 = $3128;
 HEAP32[$34762 >> 2] = 47841367;
 HEAP32[$34762 + 4 >> 2] = 2162689;
 HEAP32[$10032 >> 2] = 65535;
 HEAP16[$3129 >> 1] = 87;
 HEAP16[$10033 >> 1] = 730;
 HEAP16[$10034 >> 1] = 1;
 HEAP16[$10035 >> 1] = 33;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3128, $3129);
 $34766 = $3130;
 HEAP32[$34766 >> 2] = 47841368;
 HEAP32[$34766 + 4 >> 2] = 65537;
 HEAP32[$10036 >> 2] = 65535;
 HEAP16[$3131 >> 1] = 88;
 HEAP16[$10037 >> 1] = 730;
 HEAP16[$10038 >> 1] = 1;
 HEAP16[$10039 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3130, $3131);
 $34770 = $3132;
 HEAP32[$34770 >> 2] = 47906904;
 HEAP32[$34770 + 4 >> 2] = 2097153;
 HEAP32[$10040 >> 2] = 54937;
 HEAP16[$3133 >> 1] = 88;
 HEAP16[$10041 >> 1] = 731;
 HEAP16[$10042 >> 1] = 1;
 HEAP16[$10043 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3132, $3133);
 $34774 = $3134;
 HEAP32[$34774 >> 2] = 47842111;
 HEAP32[$34774 + 4 >> 2] = 2228225;
 HEAP32[$10044 >> 2] = 33808;
 HEAP16[$3135 >> 1] = 831;
 HEAP16[$10045 >> 1] = 730;
 HEAP16[$10046 >> 1] = 1;
 HEAP16[$10047 >> 1] = 34;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3134, $3135);
 $34778 = $3136;
 HEAP32[$34778 >> 2] = 50004797;
 HEAP32[$34778 + 4 >> 2] = 65538;
 HEAP32[$10048 >> 2] = 33808;
 HEAP16[$3137 >> 1] = 829;
 HEAP16[$10049 >> 1] = 763;
 HEAP16[$10050 >> 1] = 2;
 HEAP16[$10051 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3136, $3137);
 $34782 = $3138;
 HEAP32[$34782 >> 2] = 47842109;
 HEAP32[$34782 + 4 >> 2] = 2162689;
 HEAP32[$10052 >> 2] = 65535;
 HEAP16[$3139 >> 1] = 829;
 HEAP16[$10053 >> 1] = 730;
 HEAP16[$10054 >> 1] = 1;
 HEAP16[$10055 >> 1] = 33;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3138, $3139);
 $34786 = $3140;
 HEAP32[$34786 >> 2] = 47842110;
 HEAP32[$34786 + 4 >> 2] = 65537;
 HEAP32[$10056 >> 2] = 65535;
 HEAP16[$3141 >> 1] = 830;
 HEAP16[$10057 >> 1] = 730;
 HEAP16[$10058 >> 1] = 1;
 HEAP16[$10059 >> 1] = 1;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3140, $3141);
 $34790 = $3142;
 HEAP32[$34790 >> 2] = 47907646;
 HEAP32[$34790 + 4 >> 2] = 2097153;
 HEAP32[$10060 >> 2] = 54937;
 HEAP16[$3143 >> 1] = 830;
 HEAP16[$10061 >> 1] = 731;
 HEAP16[$10062 >> 1] = 1;
 HEAP16[$10063 >> 1] = 32;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3142, $3143);
 $34794 = $3144;
 HEAP32[$34794 >> 2] = 47710210;
 HEAP32[$34794 + 4 >> 2] = 2490451;
 HEAP32[$10064 >> 2] = 54937;
 HEAP16[$3145 >> 1] = 80;
 HEAP16[$10065 >> 1] = 728;
 HEAP16[$10066 >> 1] = 5;
 HEAP16[$10067 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3144, $3145);
 $34798 = $3146;
 HEAP32[$34798 >> 2] = 47710210;
 HEAP32[$34798 + 4 >> 2] = 2490451;
 HEAP32[$10068 >> 2] = 54937;
 HEAP16[$3147 >> 1] = 80;
 HEAP16[$10069 >> 1] = 728;
 HEAP16[$10070 >> 1] = 5;
 HEAP16[$10071 >> 1] = 38;
 __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($front, $3146, $3147);
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 2;
 HEAP16[$10072 >> 1] = 728;
 HEAP16[$10073 >> 1] = 79;
 HEAP16[$10074 >> 1] = 765;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 6132) label = 5258; else {
  $34804 = HEAP32[915090] | 0;
  if (($34804 | 0) == (HEAP32[915088] | 0)) label = 5258; else {
   $$lcssa$i$i2135 = 3660360;
   $$lcssa8$i$i2134 = $34804;
   label = 5259;
  }
 }
 do if ((label | 0) == 5258) {
  if ((HEAP32[915097] | 0) >>> 0 >= 6132) {
   $34811 = HEAP32[915096] | 0;
   if (($34811 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2135 = 3660384;
    $$lcssa8$i$i2134 = $34811;
    label = 5259;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 6132) {
   $34816 = HEAP32[915102] | 0;
   if (($34816 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2135 = 3660408;
    $$lcssa8$i$i2134 = $34816;
    label = 5259;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 6132) {
   $34821 = HEAP32[915108] | 0;
   if (($34821 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2135 = 3660432;
    $$lcssa8$i$i2134 = $34821;
    label = 5259;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 6132) {
   $34826 = HEAP32[915114] | 0;
   if (($34826 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2135 = 3660456;
    $$lcssa8$i$i2134 = $34826;
    label = 5259;
    break;
   }
  }
  $$3$i$i2136 = __Znwj(6132) | 0;
 } while (0);
 if ((label | 0) == 5259) {
  $34809 = $$lcssa8$i$i2134 + -4 | 0;
  HEAP32[$$lcssa$i$i2135 >> 2] = $34809;
  $$3$i$i2136 = HEAP32[$34809 >> 2] | 0;
 }
 $34830 = $$3$i$i2136 + 52 | 0;
 HEAP16[$$3$i$i2136 >> 1] = 80;
 HEAP16[$$3$i$i2136 + 2 >> 1] = 38;
 HEAP8[$$3$i$i2136 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2136 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2136 + 8 >> 2] = 160;
 HEAP32[$$3$i$i2136 + 12 >> 2] = 6080;
 HEAP32[$$3$i$i2136 + 16 >> 2] = $34830;
 HEAP32[$$3$i$i2136 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2136 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2136 + 48 >> 0] = 0;
 HEAP32[$3148 >> 2] = $$3$i$i2136;
 _memcpy($34830 | 0, 3575602, 160) | 0;
 _memcpy($$3$i$i2136 + 212 | 0, 3575762, 160) | 0;
 _memcpy($$3$i$i2136 + 372 | 0, 3575922, 160) | 0;
 _memcpy($$3$i$i2136 + 532 | 0, 3576082, 160) | 0;
 _memcpy($$3$i$i2136 + 692 | 0, 3576242, 160) | 0;
 _memcpy($$3$i$i2136 + 852 | 0, 3576402, 160) | 0;
 _memcpy($$3$i$i2136 + 1012 | 0, 3576562, 160) | 0;
 _memcpy($$3$i$i2136 + 1172 | 0, 3576722, 160) | 0;
 _memcpy($$3$i$i2136 + 1332 | 0, 3576882, 160) | 0;
 _memcpy($$3$i$i2136 + 1492 | 0, 3577042, 160) | 0;
 _memcpy($$3$i$i2136 + 1652 | 0, 3577202, 160) | 0;
 _memcpy($$3$i$i2136 + 1812 | 0, 3577362, 160) | 0;
 _memcpy($$3$i$i2136 + 1972 | 0, 3577522, 160) | 0;
 _memcpy($$3$i$i2136 + 2132 | 0, 3577682, 160) | 0;
 _memcpy($$3$i$i2136 + 2292 | 0, 3577842, 160) | 0;
 _memcpy($$3$i$i2136 + 2452 | 0, 3578002, 160) | 0;
 _memcpy($$3$i$i2136 + 2612 | 0, 3578162, 160) | 0;
 _memcpy($$3$i$i2136 + 2772 | 0, 3578322, 160) | 0;
 _memcpy($$3$i$i2136 + 2932 | 0, 3578482, 160) | 0;
 _memcpy($$3$i$i2136 + 3092 | 0, 3578642, 160) | 0;
 _memcpy($$3$i$i2136 + 3252 | 0, 3578802, 160) | 0;
 _memcpy($$3$i$i2136 + 3412 | 0, 3578962, 160) | 0;
 _memcpy($$3$i$i2136 + 3572 | 0, 3579122, 160) | 0;
 _memcpy($$3$i$i2136 + 3732 | 0, 3579282, 160) | 0;
 _memcpy($$3$i$i2136 + 3892 | 0, 3579442, 160) | 0;
 _memcpy($$3$i$i2136 + 4052 | 0, 3579602, 160) | 0;
 _memcpy($$3$i$i2136 + 4212 | 0, 3579762, 160) | 0;
 _memcpy($$3$i$i2136 + 4372 | 0, 3579922, 160) | 0;
 _memcpy($$3$i$i2136 + 4532 | 0, 3580082, 160) | 0;
 _memcpy($$3$i$i2136 + 4692 | 0, 3580242, 160) | 0;
 _memcpy($$3$i$i2136 + 4852 | 0, 3580402, 160) | 0;
 _memcpy($$3$i$i2136 + 5012 | 0, 3580562, 160) | 0;
 _memcpy($$3$i$i2136 + 5172 | 0, 3580722, 160) | 0;
 _memcpy($$3$i$i2136 + 5332 | 0, 3580882, 160) | 0;
 _memcpy($$3$i$i2136 + 5492 | 0, 3581042, 160) | 0;
 _memcpy($$3$i$i2136 + 5652 | 0, 3581202, 160) | 0;
 _memcpy($$3$i$i2136 + 5812 | 0, 3581362, 160) | 0;
 _memcpy($$3$i$i2136 + 5972 | 0, 3581522, 160) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3148);
 if ($$3$i$i2136 | 0) {
  $34878 = $$3$i$i2136 + 5 | 0;
  $34880 = (HEAP8[$34878 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$34878 >> 0] = $34880;
  if (!($34880 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2136);
  HEAP32[$3148 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 94;
 HEAP16[$10075 >> 1] = 728;
 HEAP16[$10076 >> 1] = 822;
 HEAP16[$10077 >> 1] = 748;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 30796) label = 5274; else {
  $34884 = HEAP32[915090] | 0;
  if (($34884 | 0) == (HEAP32[915088] | 0)) label = 5274; else {
   $$lcssa$i$i2123 = 3660360;
   $$lcssa8$i$i2122 = $34884;
   label = 5275;
  }
 }
 do if ((label | 0) == 5274) {
  if ((HEAP32[915097] | 0) >>> 0 >= 30796) {
   $34891 = HEAP32[915096] | 0;
   if (($34891 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2123 = 3660384;
    $$lcssa8$i$i2122 = $34891;
    label = 5275;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 30796) {
   $34896 = HEAP32[915102] | 0;
   if (($34896 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2123 = 3660408;
    $$lcssa8$i$i2122 = $34896;
    label = 5275;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 30796) {
   $34901 = HEAP32[915108] | 0;
   if (($34901 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2123 = 3660432;
    $$lcssa8$i$i2122 = $34901;
    label = 5275;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 30796) {
   $34906 = HEAP32[915114] | 0;
   if (($34906 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2123 = 3660456;
    $$lcssa8$i$i2122 = $34906;
    label = 5275;
    break;
   }
  }
  $$3$i$i2124 = __Znwj(30796) | 0;
 } while (0);
 if ((label | 0) == 5275) {
  $34889 = $$lcssa8$i$i2122 + -4 | 0;
  HEAP32[$$lcssa$i$i2123 >> 2] = $34889;
  $$3$i$i2124 = HEAP32[$34889 >> 2] | 0;
 }
 $34910 = $$3$i$i2124 + 52 | 0;
 HEAP16[$$3$i$i2124 >> 1] = 732;
 HEAP16[$$3$i$i2124 + 2 >> 1] = 21;
 HEAP8[$$3$i$i2124 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2124 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2124 + 8 >> 2] = 1464;
 HEAP32[$$3$i$i2124 + 12 >> 2] = 30744;
 HEAP32[$$3$i$i2124 + 16 >> 2] = $34910;
 HEAP32[$$3$i$i2124 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2124 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2124 + 48 >> 0] = 0;
 HEAP32[$3149 >> 2] = $$3$i$i2124;
 _memcpy($34910 | 0, 3581682, 1464) | 0;
 _memcpy($$3$i$i2124 + 1516 | 0, 3583146, 1464) | 0;
 _memcpy($$3$i$i2124 + 2980 | 0, 3584610, 1464) | 0;
 _memcpy($$3$i$i2124 + 4444 | 0, 3586074, 1464) | 0;
 _memcpy($$3$i$i2124 + 5908 | 0, 3587538, 1464) | 0;
 _memcpy($$3$i$i2124 + 7372 | 0, 3589002, 1464) | 0;
 _memcpy($$3$i$i2124 + 8836 | 0, 3590466, 1464) | 0;
 _memcpy($$3$i$i2124 + 10300 | 0, 3591930, 1464) | 0;
 _memcpy($$3$i$i2124 + 11764 | 0, 3593394, 1464) | 0;
 _memcpy($$3$i$i2124 + 13228 | 0, 3594858, 1464) | 0;
 _memcpy($$3$i$i2124 + 14692 | 0, 3596322, 1464) | 0;
 _memcpy($$3$i$i2124 + 16156 | 0, 3597786, 1464) | 0;
 _memcpy($$3$i$i2124 + 17620 | 0, 3599250, 1464) | 0;
 _memcpy($$3$i$i2124 + 19084 | 0, 3600714, 1464) | 0;
 _memcpy($$3$i$i2124 + 20548 | 0, 3602178, 1464) | 0;
 _memcpy($$3$i$i2124 + 22012 | 0, 3603642, 1464) | 0;
 _memcpy($$3$i$i2124 + 23476 | 0, 3605106, 1464) | 0;
 _memcpy($$3$i$i2124 + 24940 | 0, 3606570, 1464) | 0;
 _memcpy($$3$i$i2124 + 26404 | 0, 3608034, 1464) | 0;
 _memcpy($$3$i$i2124 + 27868 | 0, 3609498, 1464) | 0;
 _memcpy($$3$i$i2124 + 29332 | 0, 3610962, 1464) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3149);
 if ($$3$i$i2124 | 0) {
  $34941 = $$3$i$i2124 + 5 | 0;
  $34943 = (HEAP8[$34941 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$34941 >> 0] = $34943;
  if (!($34943 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2124);
  HEAP32[$3149 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 94;
 HEAP16[$10078 >> 1] = 749;
 HEAP16[$10079 >> 1] = 822;
 HEAP16[$10080 >> 1] = 761;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 19084) label = 5290; else {
  $34947 = HEAP32[915090] | 0;
  if (($34947 | 0) == (HEAP32[915088] | 0)) label = 5290; else {
   $$lcssa$i$i2111 = 3660360;
   $$lcssa8$i$i2110 = $34947;
   label = 5291;
  }
 }
 do if ((label | 0) == 5290) {
  if ((HEAP32[915097] | 0) >>> 0 >= 19084) {
   $34954 = HEAP32[915096] | 0;
   if (($34954 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2111 = 3660384;
    $$lcssa8$i$i2110 = $34954;
    label = 5291;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 19084) {
   $34959 = HEAP32[915102] | 0;
   if (($34959 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2111 = 3660408;
    $$lcssa8$i$i2110 = $34959;
    label = 5291;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 19084) {
   $34964 = HEAP32[915108] | 0;
   if (($34964 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2111 = 3660432;
    $$lcssa8$i$i2110 = $34964;
    label = 5291;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 19084) {
   $34969 = HEAP32[915114] | 0;
   if (($34969 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2111 = 3660456;
    $$lcssa8$i$i2110 = $34969;
    label = 5291;
    break;
   }
  }
  $$3$i$i2112 = __Znwj(19084) | 0;
 } while (0);
 if ((label | 0) == 5291) {
  $34952 = $$lcssa8$i$i2110 + -4 | 0;
  HEAP32[$$lcssa$i$i2111 >> 2] = $34952;
  $$3$i$i2112 = HEAP32[$34952 >> 2] | 0;
 }
 $34973 = $$3$i$i2112 + 52 | 0;
 HEAP16[$$3$i$i2112 >> 1] = 732;
 HEAP16[$$3$i$i2112 + 2 >> 1] = 13;
 HEAP8[$$3$i$i2112 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2112 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2112 + 8 >> 2] = 1464;
 HEAP32[$$3$i$i2112 + 12 >> 2] = 19032;
 HEAP32[$$3$i$i2112 + 16 >> 2] = $34973;
 HEAP32[$$3$i$i2112 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2112 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2112 + 48 >> 0] = 0;
 HEAP32[$3150 >> 2] = $$3$i$i2112;
 _memcpy($34973 | 0, 3612426, 1464) | 0;
 _memcpy($$3$i$i2112 + 1516 | 0, 3613890, 1464) | 0;
 _memcpy($$3$i$i2112 + 2980 | 0, 3615354, 1464) | 0;
 _memcpy($$3$i$i2112 + 4444 | 0, 3616818, 1464) | 0;
 _memcpy($$3$i$i2112 + 5908 | 0, 3618282, 1464) | 0;
 _memcpy($$3$i$i2112 + 7372 | 0, 3619746, 1464) | 0;
 _memcpy($$3$i$i2112 + 8836 | 0, 3621210, 1464) | 0;
 _memcpy($$3$i$i2112 + 10300 | 0, 3622674, 1464) | 0;
 _memcpy($$3$i$i2112 + 11764 | 0, 3624138, 1464) | 0;
 _memcpy($$3$i$i2112 + 13228 | 0, 3625602, 1464) | 0;
 _memcpy($$3$i$i2112 + 14692 | 0, 3627066, 1464) | 0;
 _memcpy($$3$i$i2112 + 16156 | 0, 3628530, 1464) | 0;
 _memcpy($$3$i$i2112 + 17620 | 0, 3629994, 1464) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3150);
 if ($$3$i$i2112 | 0) {
  $34996 = $$3$i$i2112 + 5 | 0;
  $34998 = (HEAP8[$34996 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$34996 >> 0] = $34998;
  if (!($34998 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2112);
  HEAP32[$3150 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 94;
 HEAP16[$10081 >> 1] = 762;
 HEAP16[$10082 >> 1] = 822;
 HEAP16[$10083 >> 1] = 765;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 5908) label = 5306; else {
  $35002 = HEAP32[915090] | 0;
  if (($35002 | 0) == (HEAP32[915088] | 0)) label = 5306; else {
   $$lcssa$i$i2099 = 3660360;
   $$lcssa8$i$i2098 = $35002;
   label = 5307;
  }
 }
 do if ((label | 0) == 5306) {
  if ((HEAP32[915097] | 0) >>> 0 >= 5908) {
   $35009 = HEAP32[915096] | 0;
   if (($35009 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2099 = 3660384;
    $$lcssa8$i$i2098 = $35009;
    label = 5307;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 5908) {
   $35014 = HEAP32[915102] | 0;
   if (($35014 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2099 = 3660408;
    $$lcssa8$i$i2098 = $35014;
    label = 5307;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 5908) {
   $35019 = HEAP32[915108] | 0;
   if (($35019 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2099 = 3660432;
    $$lcssa8$i$i2098 = $35019;
    label = 5307;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 5908) {
   $35024 = HEAP32[915114] | 0;
   if (($35024 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2099 = 3660456;
    $$lcssa8$i$i2098 = $35024;
    label = 5307;
    break;
   }
  }
  $$3$i$i2100 = __Znwj(5908) | 0;
 } while (0);
 if ((label | 0) == 5307) {
  $35007 = $$lcssa8$i$i2098 + -4 | 0;
  HEAP32[$$lcssa$i$i2099 >> 2] = $35007;
  $$3$i$i2100 = HEAP32[$35007 >> 2] | 0;
 }
 $35028 = $$3$i$i2100 + 52 | 0;
 HEAP16[$$3$i$i2100 >> 1] = 732;
 HEAP16[$$3$i$i2100 + 2 >> 1] = 4;
 HEAP8[$$3$i$i2100 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2100 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2100 + 8 >> 2] = 1464;
 HEAP32[$$3$i$i2100 + 12 >> 2] = 5856;
 HEAP32[$$3$i$i2100 + 16 >> 2] = $35028;
 HEAP32[$$3$i$i2100 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2100 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2100 + 48 >> 0] = 0;
 HEAP32[$3151 >> 2] = $$3$i$i2100;
 _memcpy($35028 | 0, 3631458, 1464) | 0;
 _memcpy($$3$i$i2100 + 1516 | 0, 3632922, 1464) | 0;
 _memcpy($$3$i$i2100 + 2980 | 0, 3634386, 1464) | 0;
 _memcpy($$3$i$i2100 + 4444 | 0, 3635850, 1464) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3151);
 if ($$3$i$i2100 | 0) {
  $35042 = $$3$i$i2100 + 5 | 0;
  $35044 = (HEAP8[$35042 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$35042 >> 0] = $35044;
  if (!($35044 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2100);
  HEAP32[$3151 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 836;
 HEAP16[$10084 >> 1] = 728;
 HEAP16[$10085 >> 1] = 863;
 HEAP16[$10086 >> 1] = 765;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2180) label = 5322; else {
  $35048 = HEAP32[915090] | 0;
  if (($35048 | 0) == (HEAP32[915088] | 0)) label = 5322; else {
   $$lcssa$i$i2087 = 3660360;
   $$lcssa8$i$i2086 = $35048;
   label = 5323;
  }
 }
 do if ((label | 0) == 5322) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2180) {
   $35055 = HEAP32[915096] | 0;
   if (($35055 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2087 = 3660384;
    $$lcssa8$i$i2086 = $35055;
    label = 5323;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2180) {
   $35060 = HEAP32[915102] | 0;
   if (($35060 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2087 = 3660408;
    $$lcssa8$i$i2086 = $35060;
    label = 5323;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2180) {
   $35065 = HEAP32[915108] | 0;
   if (($35065 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2087 = 3660432;
    $$lcssa8$i$i2086 = $35065;
    label = 5323;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2180) {
   $35070 = HEAP32[915114] | 0;
   if (($35070 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2087 = 3660456;
    $$lcssa8$i$i2086 = $35070;
    label = 5323;
    break;
   }
  }
  $$3$i$i2088 = __Znwj(2180) | 0;
 } while (0);
 if ((label | 0) == 5323) {
  $35053 = $$lcssa8$i$i2086 + -4 | 0;
  HEAP32[$$lcssa$i$i2087 >> 2] = $35053;
  $$3$i$i2088 = HEAP32[$35053 >> 2] | 0;
 }
 $35074 = $$3$i$i2088 + 52 | 0;
 HEAP16[$$3$i$i2088 >> 1] = 28;
 HEAP16[$$3$i$i2088 + 2 >> 1] = 38;
 HEAP8[$$3$i$i2088 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2088 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2088 + 8 >> 2] = 56;
 HEAP32[$$3$i$i2088 + 12 >> 2] = 2128;
 HEAP32[$$3$i$i2088 + 16 >> 2] = $35074;
 HEAP32[$$3$i$i2088 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2088 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2088 + 48 >> 0] = 0;
 HEAP32[$3152 >> 2] = $$3$i$i2088;
 dest = $35074;
 src = 3637314;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 108 | 0;
 src = 3637370;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 164 | 0;
 src = 3637426;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 220 | 0;
 src = 3637482;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 276 | 0;
 src = 3637538;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 332 | 0;
 src = 3637594;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 388 | 0;
 src = 3637650;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 444 | 0;
 src = 3637706;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 500 | 0;
 src = 3637762;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 556 | 0;
 src = 3637818;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 612 | 0;
 src = 3637874;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 668 | 0;
 src = 3637930;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 724 | 0;
 src = 3637986;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 780 | 0;
 src = 3638042;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 836 | 0;
 src = 3638098;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 892 | 0;
 src = 3638154;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 948 | 0;
 src = 3638210;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1004 | 0;
 src = 3638266;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1060 | 0;
 src = 3638322;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1116 | 0;
 src = 3638378;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1172 | 0;
 src = 3638434;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1228 | 0;
 src = 3638490;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1284 | 0;
 src = 3638546;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1340 | 0;
 src = 3638602;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1396 | 0;
 src = 3638658;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1452 | 0;
 src = 3638714;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1508 | 0;
 src = 3638770;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1564 | 0;
 src = 3638826;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1620 | 0;
 src = 3638882;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1676 | 0;
 src = 3638938;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1732 | 0;
 src = 3638994;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1788 | 0;
 src = 3639050;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1844 | 0;
 src = 3639106;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1900 | 0;
 src = 3639162;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 1956 | 0;
 src = 3639218;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 2012 | 0;
 src = 3639274;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 2068 | 0;
 src = 3639330;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2088 + 2124 | 0;
 src = 3639386;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3152);
 if ($$3$i$i2088 | 0) {
  $35122 = $$3$i$i2088 + 5 | 0;
  $35124 = (HEAP8[$35122 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$35122 >> 0] = $35124;
  if (!($35124 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2088);
  HEAP32[$3152 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 881;
 HEAP16[$10087 >> 1] = 729;
 HEAP16[$10088 >> 1] = 1020;
 HEAP16[$10089 >> 1] = 764;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 10132) label = 5338; else {
  $35128 = HEAP32[915090] | 0;
  if (($35128 | 0) == (HEAP32[915088] | 0)) label = 5338; else {
   $$lcssa$i$i2075 = 3660360;
   $$lcssa8$i$i2074 = $35128;
   label = 5339;
  }
 }
 do if ((label | 0) == 5338) {
  if ((HEAP32[915097] | 0) >>> 0 >= 10132) {
   $35135 = HEAP32[915096] | 0;
   if (($35135 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2075 = 3660384;
    $$lcssa8$i$i2074 = $35135;
    label = 5339;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 10132) {
   $35140 = HEAP32[915102] | 0;
   if (($35140 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2075 = 3660408;
    $$lcssa8$i$i2074 = $35140;
    label = 5339;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 10132) {
   $35145 = HEAP32[915108] | 0;
   if (($35145 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2075 = 3660432;
    $$lcssa8$i$i2074 = $35145;
    label = 5339;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 10132) {
   $35150 = HEAP32[915114] | 0;
   if (($35150 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2075 = 3660456;
    $$lcssa8$i$i2074 = $35150;
    label = 5339;
    break;
   }
  }
  $$3$i$i2076 = __Znwj(10132) | 0;
 } while (0);
 if ((label | 0) == 5339) {
  $35133 = $$lcssa8$i$i2074 + -4 | 0;
  HEAP32[$$lcssa$i$i2075 >> 2] = $35133;
  $$3$i$i2076 = HEAP32[$35133 >> 2] | 0;
 }
 $35154 = $$3$i$i2076 + 52 | 0;
 HEAP16[$$3$i$i2076 >> 1] = 140;
 HEAP16[$$3$i$i2076 + 2 >> 1] = 36;
 HEAP8[$$3$i$i2076 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2076 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2076 + 8 >> 2] = 280;
 HEAP32[$$3$i$i2076 + 12 >> 2] = 10080;
 HEAP32[$$3$i$i2076 + 16 >> 2] = $35154;
 HEAP32[$$3$i$i2076 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2076 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2076 + 48 >> 0] = 0;
 HEAP32[$3153 >> 2] = $$3$i$i2076;
 _memcpy($35154 | 0, 3639442, 280) | 0;
 _memcpy($$3$i$i2076 + 332 | 0, 3639722, 280) | 0;
 _memcpy($$3$i$i2076 + 612 | 0, 3640002, 280) | 0;
 _memcpy($$3$i$i2076 + 892 | 0, 3640282, 280) | 0;
 _memcpy($$3$i$i2076 + 1172 | 0, 3640562, 280) | 0;
 _memcpy($$3$i$i2076 + 1452 | 0, 3640842, 280) | 0;
 _memcpy($$3$i$i2076 + 1732 | 0, 3641122, 280) | 0;
 _memcpy($$3$i$i2076 + 2012 | 0, 3641402, 280) | 0;
 _memcpy($$3$i$i2076 + 2292 | 0, 3641682, 280) | 0;
 _memcpy($$3$i$i2076 + 2572 | 0, 3641962, 280) | 0;
 _memcpy($$3$i$i2076 + 2852 | 0, 3642242, 280) | 0;
 _memcpy($$3$i$i2076 + 3132 | 0, 3642522, 280) | 0;
 _memcpy($$3$i$i2076 + 3412 | 0, 3642802, 280) | 0;
 _memcpy($$3$i$i2076 + 3692 | 0, 3643082, 280) | 0;
 _memcpy($$3$i$i2076 + 3972 | 0, 3643362, 280) | 0;
 _memcpy($$3$i$i2076 + 4252 | 0, 3643642, 280) | 0;
 _memcpy($$3$i$i2076 + 4532 | 0, 3643922, 280) | 0;
 _memcpy($$3$i$i2076 + 4812 | 0, 3644202, 280) | 0;
 _memcpy($$3$i$i2076 + 5092 | 0, 3644482, 280) | 0;
 _memcpy($$3$i$i2076 + 5372 | 0, 3644762, 280) | 0;
 _memcpy($$3$i$i2076 + 5652 | 0, 3645042, 280) | 0;
 _memcpy($$3$i$i2076 + 5932 | 0, 3645322, 280) | 0;
 _memcpy($$3$i$i2076 + 6212 | 0, 3645602, 280) | 0;
 _memcpy($$3$i$i2076 + 6492 | 0, 3645882, 280) | 0;
 _memcpy($$3$i$i2076 + 6772 | 0, 3646162, 280) | 0;
 _memcpy($$3$i$i2076 + 7052 | 0, 3646442, 280) | 0;
 _memcpy($$3$i$i2076 + 7332 | 0, 3646722, 280) | 0;
 _memcpy($$3$i$i2076 + 7612 | 0, 3647002, 280) | 0;
 _memcpy($$3$i$i2076 + 7892 | 0, 3647282, 280) | 0;
 _memcpy($$3$i$i2076 + 8172 | 0, 3647562, 280) | 0;
 _memcpy($$3$i$i2076 + 8452 | 0, 3647842, 280) | 0;
 _memcpy($$3$i$i2076 + 8732 | 0, 3648122, 280) | 0;
 _memcpy($$3$i$i2076 + 9012 | 0, 3648402, 280) | 0;
 _memcpy($$3$i$i2076 + 9292 | 0, 3648682, 280) | 0;
 _memcpy($$3$i$i2076 + 9572 | 0, 3648962, 280) | 0;
 _memcpy($$3$i$i2076 + 9852 | 0, 3649242, 280) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3153);
 if ($$3$i$i2076 | 0) {
  $35200 = $$3$i$i2076 + 5 | 0;
  $35202 = (HEAP8[$35200 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$35200 >> 0] = $35202;
  if (!($35202 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2076);
  HEAP32[$3153 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 907;
 HEAP16[$10090 >> 1] = 729;
 HEAP16[$10091 >> 1] = 930;
 HEAP16[$10092 >> 1] = 764;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 1780) label = 5354; else {
  $35206 = HEAP32[915090] | 0;
  if (($35206 | 0) == (HEAP32[915088] | 0)) label = 5354; else {
   $$lcssa$i$i2063 = 3660360;
   $$lcssa8$i$i2062 = $35206;
   label = 5355;
  }
 }
 do if ((label | 0) == 5354) {
  if ((HEAP32[915097] | 0) >>> 0 >= 1780) {
   $35213 = HEAP32[915096] | 0;
   if (($35213 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2063 = 3660384;
    $$lcssa8$i$i2062 = $35213;
    label = 5355;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 1780) {
   $35218 = HEAP32[915102] | 0;
   if (($35218 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2063 = 3660408;
    $$lcssa8$i$i2062 = $35218;
    label = 5355;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 1780) {
   $35223 = HEAP32[915108] | 0;
   if (($35223 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2063 = 3660432;
    $$lcssa8$i$i2062 = $35223;
    label = 5355;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 1780) {
   $35228 = HEAP32[915114] | 0;
   if (($35228 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2063 = 3660456;
    $$lcssa8$i$i2062 = $35228;
    label = 5355;
    break;
   }
  }
  $$3$i$i2064 = __Znwj(1780) | 0;
 } while (0);
 if ((label | 0) == 5355) {
  $35211 = $$lcssa8$i$i2062 + -4 | 0;
  HEAP32[$$lcssa$i$i2063 >> 2] = $35211;
  $$3$i$i2064 = HEAP32[$35211 >> 2] | 0;
 }
 $35232 = $$3$i$i2064 + 52 | 0;
 HEAP16[$$3$i$i2064 >> 1] = 24;
 HEAP16[$$3$i$i2064 + 2 >> 1] = 36;
 HEAP8[$$3$i$i2064 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2064 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2064 + 8 >> 2] = 48;
 HEAP32[$$3$i$i2064 + 12 >> 2] = 1728;
 HEAP32[$$3$i$i2064 + 16 >> 2] = $35232;
 HEAP32[$$3$i$i2064 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2064 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2064 + 48 >> 0] = 0;
 HEAP32[$3154 >> 2] = $$3$i$i2064;
 dest = $35232;
 src = 3649522;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 100 | 0;
 src = 3649570;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 148 | 0;
 src = 3649618;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 196 | 0;
 src = 3649666;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 244 | 0;
 src = 3649714;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 292 | 0;
 src = 3649762;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 340 | 0;
 src = 3649810;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 388 | 0;
 src = 3649858;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 436 | 0;
 src = 3649906;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 484 | 0;
 src = 3649954;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 532 | 0;
 src = 3650002;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 580 | 0;
 src = 3650050;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 628 | 0;
 src = 3650098;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 676 | 0;
 src = 3650146;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 724 | 0;
 src = 3650194;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 772 | 0;
 src = 3650242;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 820 | 0;
 src = 3650290;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 868 | 0;
 src = 3650338;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 916 | 0;
 src = 3650386;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 964 | 0;
 src = 3650434;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 1012 | 0;
 src = 3650482;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 1060 | 0;
 src = 3650530;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 1108 | 0;
 src = 3650578;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 1156 | 0;
 src = 3650626;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 1204 | 0;
 src = 3650674;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 1252 | 0;
 src = 3650722;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 1300 | 0;
 src = 3650770;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 1348 | 0;
 src = 3650818;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 1396 | 0;
 src = 3650866;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 1444 | 0;
 src = 3650914;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 1492 | 0;
 src = 3650962;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 1540 | 0;
 src = 3651010;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 1588 | 0;
 src = 3651058;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 1636 | 0;
 src = 3651106;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 1684 | 0;
 src = 3651154;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2064 + 1732 | 0;
 src = 3651202;
 stop = dest + 48 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3154);
 if ($$3$i$i2064 | 0) {
  $35278 = $$3$i$i2064 + 5 | 0;
  $35280 = (HEAP8[$35278 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$35278 >> 0] = $35280;
  if (!($35280 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2064);
  HEAP32[$3154 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 836;
 HEAP16[$10093 >> 1] = 728;
 HEAP16[$10094 >> 1] = 863;
 HEAP16[$10095 >> 1] = 765;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 2180) label = 5370; else {
  $35284 = HEAP32[915090] | 0;
  if (($35284 | 0) == (HEAP32[915088] | 0)) label = 5370; else {
   $$lcssa$i$i2051 = 3660360;
   $$lcssa8$i$i2050 = $35284;
   label = 5371;
  }
 }
 do if ((label | 0) == 5370) {
  if ((HEAP32[915097] | 0) >>> 0 >= 2180) {
   $35291 = HEAP32[915096] | 0;
   if (($35291 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2051 = 3660384;
    $$lcssa8$i$i2050 = $35291;
    label = 5371;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 2180) {
   $35296 = HEAP32[915102] | 0;
   if (($35296 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2051 = 3660408;
    $$lcssa8$i$i2050 = $35296;
    label = 5371;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 2180) {
   $35301 = HEAP32[915108] | 0;
   if (($35301 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2051 = 3660432;
    $$lcssa8$i$i2050 = $35301;
    label = 5371;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 2180) {
   $35306 = HEAP32[915114] | 0;
   if (($35306 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2051 = 3660456;
    $$lcssa8$i$i2050 = $35306;
    label = 5371;
    break;
   }
  }
  $$3$i$i2052 = __Znwj(2180) | 0;
 } while (0);
 if ((label | 0) == 5371) {
  $35289 = $$lcssa8$i$i2050 + -4 | 0;
  HEAP32[$$lcssa$i$i2051 >> 2] = $35289;
  $$3$i$i2052 = HEAP32[$35289 >> 2] | 0;
 }
 $35310 = $$3$i$i2052 + 52 | 0;
 HEAP16[$$3$i$i2052 >> 1] = 28;
 HEAP16[$$3$i$i2052 + 2 >> 1] = 38;
 HEAP8[$$3$i$i2052 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2052 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2052 + 8 >> 2] = 56;
 HEAP32[$$3$i$i2052 + 12 >> 2] = 2128;
 HEAP32[$$3$i$i2052 + 16 >> 2] = $35310;
 HEAP32[$$3$i$i2052 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2052 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2052 + 48 >> 0] = 0;
 HEAP32[$3155 >> 2] = $$3$i$i2052;
 dest = $35310;
 src = 3651250;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 108 | 0;
 src = 3651306;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 164 | 0;
 src = 3651362;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 220 | 0;
 src = 3651418;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 276 | 0;
 src = 3651474;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 332 | 0;
 src = 3651530;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 388 | 0;
 src = 3651586;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 444 | 0;
 src = 3651642;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 500 | 0;
 src = 3651698;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 556 | 0;
 src = 3651754;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 612 | 0;
 src = 3651810;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 668 | 0;
 src = 3651866;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 724 | 0;
 src = 3651922;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 780 | 0;
 src = 3651978;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 836 | 0;
 src = 3652034;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 892 | 0;
 src = 3652090;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 948 | 0;
 src = 3652146;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1004 | 0;
 src = 3652202;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1060 | 0;
 src = 3652258;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1116 | 0;
 src = 3652314;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1172 | 0;
 src = 3652370;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1228 | 0;
 src = 3652426;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1284 | 0;
 src = 3652482;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1340 | 0;
 src = 3652538;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1396 | 0;
 src = 3652594;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1452 | 0;
 src = 3652650;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1508 | 0;
 src = 3652706;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1564 | 0;
 src = 3652762;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1620 | 0;
 src = 3652818;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1676 | 0;
 src = 3652874;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1732 | 0;
 src = 3652930;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1788 | 0;
 src = 3652986;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1844 | 0;
 src = 3653042;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1900 | 0;
 src = 3653098;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 1956 | 0;
 src = 3653154;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 2012 | 0;
 src = 3653210;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 2068 | 0;
 src = 3653266;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 dest = $$3$i$i2052 + 2124 | 0;
 src = 3653322;
 stop = dest + 56 | 0;
 do {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
 } while ((dest | 0) < (stop | 0));
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3155);
 if ($$3$i$i2052 | 0) {
  $35358 = $$3$i$i2052 + 5 | 0;
  $35360 = (HEAP8[$35358 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$35358 >> 0] = $35360;
  if (!($35360 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2052);
  HEAP32[$3155 >> 2] = 0;
 }
 dest = $0;
 stop = dest + 24 | 0;
 do {
  HEAP16[dest >> 1] = 0;
  dest = dest + 2 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$0 >> 1] = 935;
 HEAP16[$10096 >> 1] = 729;
 HEAP16[$10097 >> 1] = 1002;
 HEAP16[$10098 >> 1] = 764;
 __ZN10BGRPalette11classic_332Ev() | 0;
 if ((HEAP32[915091] | 0) >>> 0 < 4948) label = 5386; else {
  $35364 = HEAP32[915090] | 0;
  if (($35364 | 0) == (HEAP32[915088] | 0)) label = 5386; else {
   $$lcssa$i$i2039 = 3660360;
   $$lcssa8$i$i2038 = $35364;
   label = 5387;
  }
 }
 do if ((label | 0) == 5386) {
  if ((HEAP32[915097] | 0) >>> 0 >= 4948) {
   $35371 = HEAP32[915096] | 0;
   if (($35371 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i$i2039 = 3660384;
    $$lcssa8$i$i2038 = $35371;
    label = 5387;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= 4948) {
   $35376 = HEAP32[915102] | 0;
   if (($35376 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i$i2039 = 3660408;
    $$lcssa8$i$i2038 = $35376;
    label = 5387;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= 4948) {
   $35381 = HEAP32[915108] | 0;
   if (($35381 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i$i2039 = 3660432;
    $$lcssa8$i$i2038 = $35381;
    label = 5387;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= 4948) {
   $35386 = HEAP32[915114] | 0;
   if (($35386 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i$i2039 = 3660456;
    $$lcssa8$i$i2038 = $35386;
    label = 5387;
    break;
   }
  }
  $$3$i$i2040 = __Znwj(4948) | 0;
 } while (0);
 if ((label | 0) == 5387) {
  $35369 = $$lcssa8$i$i2038 + -4 | 0;
  HEAP32[$$lcssa$i$i2039 >> 2] = $35369;
  $$3$i$i2040 = HEAP32[$35369 >> 2] | 0;
 }
 $35390 = $$3$i$i2040 + 52 | 0;
 HEAP16[$$3$i$i2040 >> 1] = 68;
 HEAP16[$$3$i$i2040 + 2 >> 1] = 36;
 HEAP8[$$3$i$i2040 + 4 >> 0] = 16;
 HEAP8[$$3$i$i2040 + 5 >> 0] = 1;
 HEAP32[$$3$i$i2040 + 8 >> 2] = 136;
 HEAP32[$$3$i$i2040 + 12 >> 2] = 4896;
 HEAP32[$$3$i$i2040 + 16 >> 2] = $35390;
 HEAP32[$$3$i$i2040 + 20 >> 2] = 0;
 HEAP32[$$3$i$i2040 + 24 >> 2] = 0;
 HEAP8[$$3$i$i2040 + 48 >> 0] = 0;
 HEAP32[$3156 >> 2] = $$3$i$i2040;
 _memcpy($35390 | 0, 3653378, 136) | 0;
 _memcpy($$3$i$i2040 + 188 | 0, 3653514, 136) | 0;
 _memcpy($$3$i$i2040 + 324 | 0, 3653650, 136) | 0;
 _memcpy($$3$i$i2040 + 460 | 0, 3653786, 136) | 0;
 _memcpy($$3$i$i2040 + 596 | 0, 3653922, 136) | 0;
 _memcpy($$3$i$i2040 + 732 | 0, 3654058, 136) | 0;
 _memcpy($$3$i$i2040 + 868 | 0, 3654194, 136) | 0;
 _memcpy($$3$i$i2040 + 1004 | 0, 3654330, 136) | 0;
 _memcpy($$3$i$i2040 + 1140 | 0, 3654466, 136) | 0;
 _memcpy($$3$i$i2040 + 1276 | 0, 3654602, 136) | 0;
 _memcpy($$3$i$i2040 + 1412 | 0, 3654738, 136) | 0;
 _memcpy($$3$i$i2040 + 1548 | 0, 3654874, 136) | 0;
 _memcpy($$3$i$i2040 + 1684 | 0, 3655010, 136) | 0;
 _memcpy($$3$i$i2040 + 1820 | 0, 3655146, 136) | 0;
 _memcpy($$3$i$i2040 + 1956 | 0, 3655282, 136) | 0;
 _memcpy($$3$i$i2040 + 2092 | 0, 3655418, 136) | 0;
 _memcpy($$3$i$i2040 + 2228 | 0, 3655554, 136) | 0;
 _memcpy($$3$i$i2040 + 2364 | 0, 3655690, 136) | 0;
 _memcpy($$3$i$i2040 + 2500 | 0, 3655826, 136) | 0;
 _memcpy($$3$i$i2040 + 2636 | 0, 3655962, 136) | 0;
 _memcpy($$3$i$i2040 + 2772 | 0, 3656098, 136) | 0;
 _memcpy($$3$i$i2040 + 2908 | 0, 3656234, 136) | 0;
 _memcpy($$3$i$i2040 + 3044 | 0, 3656370, 136) | 0;
 _memcpy($$3$i$i2040 + 3180 | 0, 3656506, 136) | 0;
 _memcpy($$3$i$i2040 + 3316 | 0, 3656642, 136) | 0;
 _memcpy($$3$i$i2040 + 3452 | 0, 3656778, 136) | 0;
 _memcpy($$3$i$i2040 + 3588 | 0, 3656914, 136) | 0;
 _memcpy($$3$i$i2040 + 3724 | 0, 3657050, 136) | 0;
 _memcpy($$3$i$i2040 + 3860 | 0, 3657186, 136) | 0;
 _memcpy($$3$i$i2040 + 3996 | 0, 3657322, 136) | 0;
 _memcpy($$3$i$i2040 + 4132 | 0, 3657458, 136) | 0;
 _memcpy($$3$i$i2040 + 4268 | 0, 3657594, 136) | 0;
 _memcpy($$3$i$i2040 + 4404 | 0, 3657730, 136) | 0;
 _memcpy($$3$i$i2040 + 4540 | 0, 3657866, 136) | 0;
 _memcpy($$3$i$i2040 + 4676 | 0, 3658002, 136) | 0;
 _memcpy($$3$i$i2040 + 4812 | 0, 3658138, 136) | 0;
 __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($front, $0, $3156);
 if (!$$3$i$i2040) {
  $10101 = _emscripten_asm_const_ii(1, 2) | 0;
  HEAP32[$front >> 2] = 9488;
  HEAP32[$3188 >> 2] = 9704;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3325);
  $10102 = $front + 2552 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10102);
  $10103 = $front + 2536 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10103);
  $10104 = $front + 2524 | 0;
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10104);
  __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3207);
  STACKTOP = sp;
  return 0;
 }
 $35436 = $$3$i$i2040 + 5 | 0;
 $35438 = (HEAP8[$35436 >> 0] | 0) + -1 << 24 >> 24;
 HEAP8[$35436 >> 0] = $35438;
 if (!($35438 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($$3$i$i2040);
 HEAP32[$3156 >> 2] = 0;
 $10101 = _emscripten_asm_const_ii(1, 2) | 0;
 HEAP32[$front >> 2] = 9488;
 HEAP32[$3188 >> 2] = 9704;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3325);
 $10102 = $front + 2552 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10102);
 $10103 = $front + 2536 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10103);
 $10104 = $front + 2524 | 0;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($10104);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($3207);
 STACKTOP = sp;
 return 0;
}

function _malloc($bytes) {
 $bytes = $bytes | 0;
 var $$0 = 0, $$lcssa = 0, $$lcssa141 = 0, $$lcssa142 = 0, $$lcssa144 = 0, $$lcssa147 = 0, $$lcssa149 = 0, $$lcssa151 = 0, $$lcssa153 = 0, $$lcssa155 = 0, $$lcssa157 = 0, $$pre$phi$i$iZ2D = 0, $$pre$phi$i14Z2D = 0, $$pre$phi$i17$iZ2D = 0, $$pre$phi$iZ2D = 0, $$pre$phi10$i$iZ2D = 0, $$pre$phiZ2D = 0, $$rsize$4$i = 0, $100 = 0, $1001 = 0, $1006 = 0, $101 = 0, $1012 = 0, $1015 = 0, $1016 = 0, $1034 = 0, $1036 = 0, $1043 = 0, $1044 = 0, $1045 = 0, $1053 = 0, $1055 = 0, $1056 = 0, $1057 = 0, $107 = 0, $111 = 0, $113 = 0, $114 = 0, $116 = 0, $118 = 0, $12 = 0, $120 = 0, $122 = 0, $124 = 0, $126 = 0, $128 = 0, $133 = 0, $139 = 0, $14 = 0, $142 = 0, $145 = 0, $148 = 0, $149 = 0, $15 = 0, $150 = 0, $152 = 0, $155 = 0, $157 = 0, $16 = 0, $160 = 0, $162 = 0, $165 = 0, $168 = 0, $169 = 0, $17 = 0, $171 = 0, $172 = 0, $174 = 0, $175 = 0, $177 = 0, $178 = 0, $18 = 0, $183 = 0, $184 = 0, $193 = 0, $198 = 0, $202 = 0, $208 = 0, $215 = 0, $219 = 0, $227 = 0, $229 = 0, $230 = 0, $232 = 0, $233 = 0, $234 = 0, $238 = 0, $239 = 0, $247 = 0, $248 = 0, $249 = 0, $25 = 0, $251 = 0, $252 = 0, $257 = 0, $258 = 0, $261 = 0, $263 = 0, $266 = 0, $271 = 0, $278 = 0, $28 = 0, $287 = 0, $288 = 0, $292 = 0, $298 = 0, $303 = 0, $306 = 0, $310 = 0, $312 = 0, $313 = 0, $315 = 0, $317 = 0, $319 = 0, $32 = 0, $321 = 0, $323 = 0, $325 = 0, $327 = 0, $337 = 0, $338 = 0, $340 = 0, $349 = 0, $35 = 0, $351 = 0, $354 = 0, $356 = 0, $359 = 0, $361 = 0, $364 = 0, $367 = 0, $368 = 0, $370 = 0, $371 = 0, $373 = 0, $374 = 0, $376 = 0, $377 = 0, $382 = 0, $383 = 0, $39 = 0, $392 = 0, $397 = 0, $4 = 0, $401 = 0, $407 = 0, $414 = 0, $418 = 0, $42 = 0, $426 = 0, $429 = 0, $430 = 0, $431 = 0, $435 = 0, $436 = 0, $442 = 0, $447 = 0, $448 = 0, $45 = 0, $451 = 0, $453 = 0, $456 = 0, $461 = 0, $467 = 0, $469 = 0, $47 = 0, $471 = 0, $472 = 0, $48 = 0, $490 = 0, $492 = 0, $499 = 0, $5 = 0, $50 = 0, $500 = 0, $501 = 0, $509 = 0, $511 = 0, $512 = 0, $514 = 0, $52 = 0, $523 = 0, $527 = 0, $529 = 0, $530 = 0, $531 = 0, $539 = 0, $54 = 0, $546 = 0, $547 = 0, $548 = 0, $549 = 0, $550 = 0, $551 = 0, $553 = 0, $555 = 0, $556 = 0, $56 = 0, $562 = 0, $564 = 0, $566 = 0, $573 = 0, $575 = 0, $576 = 0, $577 = 0, $58 = 0, $585 = 0, $586 = 0, $589 = 0, $593 = 0, $597 = 0, $599 = 0, $6 = 0, $60 = 0, $605 = 0, $609 = 0, $613 = 0, $62 = 0, $622 = 0, $623 = 0, $629 = 0, $632 = 0, $635 = 0, $637 = 0, $642 = 0, $648 = 0, $65 = 0, $653 = 0, $654 = 0, $655 = 0, $661 = 0, $662 = 0, $663 = 0, $67 = 0, $678 = 0, $68 = 0, $683 = 0, $684 = 0, $686 = 0, $69 = 0, $692 = 0, $694 = 0, $7 = 0, $70 = 0, $704 = 0, $708 = 0, $71 = 0, $714 = 0, $716 = 0, $722 = 0, $726 = 0, $727 = 0, $732 = 0, $738 = 0, $743 = 0, $746 = 0, $747 = 0, $750 = 0, $752 = 0, $754 = 0, $757 = 0, $768 = 0, $773 = 0, $775 = 0, $778 = 0, $78 = 0, $780 = 0, $783 = 0, $786 = 0, $787 = 0, $788 = 0, $790 = 0, $792 = 0, $793 = 0, $795 = 0, $796 = 0, $801 = 0, $802 = 0, $811 = 0, $816 = 0, $819 = 0, $82 = 0, $820 = 0, $826 = 0, $834 = 0, $840 = 0, $843 = 0, $844 = 0, $845 = 0, $849 = 0, $85 = 0, $850 = 0, $856 = 0, $861 = 0, $862 = 0, $865 = 0, $867 = 0, $870 = 0, $875 = 0, $881 = 0, $883 = 0, $885 = 0, $886 = 0, $89 = 0, $904 = 0, $906 = 0, $91 = 0, $913 = 0, $914 = 0, $915 = 0, $92 = 0, $922 = 0, $926 = 0, $930 = 0, $932 = 0, $938 = 0, $939 = 0, $94 = 0, $941 = 0, $942 = 0, $946 = 0, $95 = 0, $951 = 0, $952 = 0, $953 = 0, $959 = 0, $96 = 0, $966 = 0, $971 = 0, $974 = 0, $975 = 0, $976 = 0, $980 = 0, $981 = 0, $987 = 0, $992 = 0, $993 = 0, $996 = 0, $998 = 0, $F$0$i$i = 0, $F1$0$i = 0, $F4$0 = 0, $F4$0$i$i = 0, $F5$0$i = 0, $I1$0$i$i = 0, $I7$0$i = 0, $I7$0$i$i = 0, $K12$0$i = 0, $K2$0$i$i = 0, $K8$0$i$i = 0, $R$1$i = 0, $R$1$i$i = 0, $R$1$i$i$lcssa = 0, $R$1$i$lcssa = 0, $R$1$i9 = 0, $R$1$i9$lcssa = 0, $R$3$i = 0, $R$3$i$i = 0, $R$3$i11 = 0, $RP$1$i = 0, $RP$1$i$i = 0, $RP$1$i$i$lcssa = 0, $RP$1$i$lcssa = 0, $RP$1$i8 = 0, $RP$1$i8$lcssa = 0, $T$0$i = 0, $T$0$i$i = 0, $T$0$i$i$lcssa = 0, $T$0$i$i$lcssa140 = 0, $T$0$i$lcssa = 0, $T$0$i$lcssa156 = 0, $T$0$i18$i = 0, $T$0$i18$i$lcssa = 0, $T$0$i18$i$lcssa139 = 0, $br$2$ph$i = 0, $i$01$i$i = 0, $idx$0$i = 0, $nb$0 = 0, $oldfirst$0$i$i = 0, $p$0$i$i = 0, $qsize$0$i$i = 0, $rsize$0$i = 0, $rsize$0$i$lcssa = 0, $rsize$0$i5 = 0, $rsize$1$i = 0, $rsize$3$i = 0, $rsize$4$lcssa$i = 0, $rsize$412$i = 0, $rst$0$i = 0, $rst$1$i = 0, $sizebits$0$i = 0, $sp$0$i$i = 0, $sp$0$i$i$i = 0, $sp$068$i = 0, $sp$068$i$lcssa = 0, $sp$167$i = 0, $sp$167$i$lcssa = 0, $ssize$0$i = 0, $ssize$2$ph$i = 0, $ssize$5$i = 0, $t$0$i = 0, $t$0$i4 = 0, $t$2$i = 0, $t$4$ph$i = 0, $t$4$v$4$i = 0, $t$411$i = 0, $tbase$746$i = 0, $tsize$745$i = 0, $v$0$i = 0, $v$0$i$lcssa = 0, $v$0$i6 = 0, $v$1$i = 0, $v$3$i = 0, $v$4$lcssa$i = 0, $v$413$i = 0, label = 0;
 do if ($bytes >>> 0 < 245) {
  $4 = $bytes >>> 0 < 11 ? 16 : $bytes + 11 & -8;
  $5 = $4 >>> 3;
  $6 = HEAP32[915129] | 0;
  $7 = $6 >>> $5;
  if ($7 & 3 | 0) {
   $12 = ($7 & 1 ^ 1) + $5 | 0;
   $14 = 3660556 + ($12 << 1 << 2) | 0;
   $15 = $14 + 8 | 0;
   $16 = HEAP32[$15 >> 2] | 0;
   $17 = $16 + 8 | 0;
   $18 = HEAP32[$17 >> 2] | 0;
   do if (($14 | 0) == ($18 | 0)) HEAP32[915129] = $6 & ~(1 << $12); else {
    if ($18 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort();
    $25 = $18 + 12 | 0;
    if ((HEAP32[$25 >> 2] | 0) == ($16 | 0)) {
     HEAP32[$25 >> 2] = $14;
     HEAP32[$15 >> 2] = $18;
     break;
    } else _abort();
   } while (0);
   $28 = $12 << 3;
   HEAP32[$16 + 4 >> 2] = $28 | 3;
   $32 = $16 + $28 + 4 | 0;
   HEAP32[$32 >> 2] = HEAP32[$32 >> 2] | 1;
   $$0 = $17;
   return $$0 | 0;
  }
  $35 = HEAP32[915131] | 0;
  if ($4 >>> 0 > $35 >>> 0) {
   if ($7 | 0) {
    $39 = 2 << $5;
    $42 = $7 << $5 & ($39 | 0 - $39);
    $45 = ($42 & 0 - $42) + -1 | 0;
    $47 = $45 >>> 12 & 16;
    $48 = $45 >>> $47;
    $50 = $48 >>> 5 & 8;
    $52 = $48 >>> $50;
    $54 = $52 >>> 2 & 4;
    $56 = $52 >>> $54;
    $58 = $56 >>> 1 & 2;
    $60 = $56 >>> $58;
    $62 = $60 >>> 1 & 1;
    $65 = ($50 | $47 | $54 | $58 | $62) + ($60 >>> $62) | 0;
    $67 = 3660556 + ($65 << 1 << 2) | 0;
    $68 = $67 + 8 | 0;
    $69 = HEAP32[$68 >> 2] | 0;
    $70 = $69 + 8 | 0;
    $71 = HEAP32[$70 >> 2] | 0;
    do if (($67 | 0) == ($71 | 0)) {
     HEAP32[915129] = $6 & ~(1 << $65);
     $89 = $35;
    } else {
     if ($71 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort();
     $78 = $71 + 12 | 0;
     if ((HEAP32[$78 >> 2] | 0) == ($69 | 0)) {
      HEAP32[$78 >> 2] = $67;
      HEAP32[$68 >> 2] = $71;
      $89 = HEAP32[915131] | 0;
      break;
     } else _abort();
    } while (0);
    $82 = ($65 << 3) - $4 | 0;
    HEAP32[$69 + 4 >> 2] = $4 | 3;
    $85 = $69 + $4 | 0;
    HEAP32[$85 + 4 >> 2] = $82 | 1;
    HEAP32[$85 + $82 >> 2] = $82;
    if ($89 | 0) {
     $91 = HEAP32[915134] | 0;
     $92 = $89 >>> 3;
     $94 = 3660556 + ($92 << 1 << 2) | 0;
     $95 = HEAP32[915129] | 0;
     $96 = 1 << $92;
     if (!($95 & $96)) {
      HEAP32[915129] = $95 | $96;
      $$pre$phiZ2D = $94 + 8 | 0;
      $F4$0 = $94;
     } else {
      $100 = $94 + 8 | 0;
      $101 = HEAP32[$100 >> 2] | 0;
      if ($101 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort(); else {
       $$pre$phiZ2D = $100;
       $F4$0 = $101;
      }
     }
     HEAP32[$$pre$phiZ2D >> 2] = $91;
     HEAP32[$F4$0 + 12 >> 2] = $91;
     HEAP32[$91 + 8 >> 2] = $F4$0;
     HEAP32[$91 + 12 >> 2] = $94;
    }
    HEAP32[915131] = $82;
    HEAP32[915134] = $85;
    $$0 = $70;
    return $$0 | 0;
   }
   $107 = HEAP32[915130] | 0;
   if (!$107) $nb$0 = $4; else {
    $111 = ($107 & 0 - $107) + -1 | 0;
    $113 = $111 >>> 12 & 16;
    $114 = $111 >>> $113;
    $116 = $114 >>> 5 & 8;
    $118 = $114 >>> $116;
    $120 = $118 >>> 2 & 4;
    $122 = $118 >>> $120;
    $124 = $122 >>> 1 & 2;
    $126 = $122 >>> $124;
    $128 = $126 >>> 1 & 1;
    $133 = HEAP32[3660820 + (($116 | $113 | $120 | $124 | $128) + ($126 >>> $128) << 2) >> 2] | 0;
    $rsize$0$i = (HEAP32[$133 + 4 >> 2] & -8) - $4 | 0;
    $t$0$i = $133;
    $v$0$i = $133;
    while (1) {
     $139 = HEAP32[$t$0$i + 16 >> 2] | 0;
     if (!$139) {
      $142 = HEAP32[$t$0$i + 20 >> 2] | 0;
      if (!$142) {
       $rsize$0$i$lcssa = $rsize$0$i;
       $v$0$i$lcssa = $v$0$i;
       break;
      } else $145 = $142;
     } else $145 = $139;
     $148 = (HEAP32[$145 + 4 >> 2] & -8) - $4 | 0;
     $149 = $148 >>> 0 < $rsize$0$i >>> 0;
     $rsize$0$i = $149 ? $148 : $rsize$0$i;
     $t$0$i = $145;
     $v$0$i = $149 ? $145 : $v$0$i;
    }
    $150 = HEAP32[915133] | 0;
    if ($v$0$i$lcssa >>> 0 < $150 >>> 0) _abort();
    $152 = $v$0$i$lcssa + $4 | 0;
    if ($v$0$i$lcssa >>> 0 >= $152 >>> 0) _abort();
    $155 = HEAP32[$v$0$i$lcssa + 24 >> 2] | 0;
    $157 = HEAP32[$v$0$i$lcssa + 12 >> 2] | 0;
    do if (($157 | 0) == ($v$0$i$lcssa | 0)) {
     $168 = $v$0$i$lcssa + 20 | 0;
     $169 = HEAP32[$168 >> 2] | 0;
     if (!$169) {
      $171 = $v$0$i$lcssa + 16 | 0;
      $172 = HEAP32[$171 >> 2] | 0;
      if (!$172) {
       $R$3$i = 0;
       break;
      } else {
       $R$1$i = $172;
       $RP$1$i = $171;
      }
     } else {
      $R$1$i = $169;
      $RP$1$i = $168;
     }
     while (1) {
      $174 = $R$1$i + 20 | 0;
      $175 = HEAP32[$174 >> 2] | 0;
      if ($175 | 0) {
       $R$1$i = $175;
       $RP$1$i = $174;
       continue;
      }
      $177 = $R$1$i + 16 | 0;
      $178 = HEAP32[$177 >> 2] | 0;
      if (!$178) {
       $R$1$i$lcssa = $R$1$i;
       $RP$1$i$lcssa = $RP$1$i;
       break;
      } else {
       $R$1$i = $178;
       $RP$1$i = $177;
      }
     }
     if ($RP$1$i$lcssa >>> 0 < $150 >>> 0) _abort(); else {
      HEAP32[$RP$1$i$lcssa >> 2] = 0;
      $R$3$i = $R$1$i$lcssa;
      break;
     }
    } else {
     $160 = HEAP32[$v$0$i$lcssa + 8 >> 2] | 0;
     if ($160 >>> 0 < $150 >>> 0) _abort();
     $162 = $160 + 12 | 0;
     if ((HEAP32[$162 >> 2] | 0) != ($v$0$i$lcssa | 0)) _abort();
     $165 = $157 + 8 | 0;
     if ((HEAP32[$165 >> 2] | 0) == ($v$0$i$lcssa | 0)) {
      HEAP32[$162 >> 2] = $157;
      HEAP32[$165 >> 2] = $160;
      $R$3$i = $157;
      break;
     } else _abort();
    } while (0);
    do if ($155 | 0) {
     $183 = HEAP32[$v$0$i$lcssa + 28 >> 2] | 0;
     $184 = 3660820 + ($183 << 2) | 0;
     if (($v$0$i$lcssa | 0) == (HEAP32[$184 >> 2] | 0)) {
      HEAP32[$184 >> 2] = $R$3$i;
      if (!$R$3$i) {
       HEAP32[915130] = HEAP32[915130] & ~(1 << $183);
       break;
      }
     } else {
      if ($155 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort();
      $193 = $155 + 16 | 0;
      if ((HEAP32[$193 >> 2] | 0) == ($v$0$i$lcssa | 0)) HEAP32[$193 >> 2] = $R$3$i; else HEAP32[$155 + 20 >> 2] = $R$3$i;
      if (!$R$3$i) break;
     }
     $198 = HEAP32[915133] | 0;
     if ($R$3$i >>> 0 < $198 >>> 0) _abort();
     HEAP32[$R$3$i + 24 >> 2] = $155;
     $202 = HEAP32[$v$0$i$lcssa + 16 >> 2] | 0;
     do if ($202 | 0) if ($202 >>> 0 < $198 >>> 0) _abort(); else {
      HEAP32[$R$3$i + 16 >> 2] = $202;
      HEAP32[$202 + 24 >> 2] = $R$3$i;
      break;
     } while (0);
     $208 = HEAP32[$v$0$i$lcssa + 20 >> 2] | 0;
     if ($208 | 0) if ($208 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort(); else {
      HEAP32[$R$3$i + 20 >> 2] = $208;
      HEAP32[$208 + 24 >> 2] = $R$3$i;
      break;
     }
    } while (0);
    if ($rsize$0$i$lcssa >>> 0 < 16) {
     $215 = $rsize$0$i$lcssa + $4 | 0;
     HEAP32[$v$0$i$lcssa + 4 >> 2] = $215 | 3;
     $219 = $v$0$i$lcssa + $215 + 4 | 0;
     HEAP32[$219 >> 2] = HEAP32[$219 >> 2] | 1;
    } else {
     HEAP32[$v$0$i$lcssa + 4 >> 2] = $4 | 3;
     HEAP32[$152 + 4 >> 2] = $rsize$0$i$lcssa | 1;
     HEAP32[$152 + $rsize$0$i$lcssa >> 2] = $rsize$0$i$lcssa;
     $227 = HEAP32[915131] | 0;
     if ($227 | 0) {
      $229 = HEAP32[915134] | 0;
      $230 = $227 >>> 3;
      $232 = 3660556 + ($230 << 1 << 2) | 0;
      $233 = HEAP32[915129] | 0;
      $234 = 1 << $230;
      if (!($233 & $234)) {
       HEAP32[915129] = $233 | $234;
       $$pre$phi$iZ2D = $232 + 8 | 0;
       $F1$0$i = $232;
      } else {
       $238 = $232 + 8 | 0;
       $239 = HEAP32[$238 >> 2] | 0;
       if ($239 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort(); else {
        $$pre$phi$iZ2D = $238;
        $F1$0$i = $239;
       }
      }
      HEAP32[$$pre$phi$iZ2D >> 2] = $229;
      HEAP32[$F1$0$i + 12 >> 2] = $229;
      HEAP32[$229 + 8 >> 2] = $F1$0$i;
      HEAP32[$229 + 12 >> 2] = $232;
     }
     HEAP32[915131] = $rsize$0$i$lcssa;
     HEAP32[915134] = $152;
    }
    $$0 = $v$0$i$lcssa + 8 | 0;
    return $$0 | 0;
   }
  } else $nb$0 = $4;
 } else if ($bytes >>> 0 > 4294967231) $nb$0 = -1; else {
  $247 = $bytes + 11 | 0;
  $248 = $247 & -8;
  $249 = HEAP32[915130] | 0;
  if (!$249) $nb$0 = $248; else {
   $251 = 0 - $248 | 0;
   $252 = $247 >>> 8;
   if (!$252) $idx$0$i = 0; else if ($248 >>> 0 > 16777215) $idx$0$i = 31; else {
    $257 = ($252 + 1048320 | 0) >>> 16 & 8;
    $258 = $252 << $257;
    $261 = ($258 + 520192 | 0) >>> 16 & 4;
    $263 = $258 << $261;
    $266 = ($263 + 245760 | 0) >>> 16 & 2;
    $271 = 14 - ($261 | $257 | $266) + ($263 << $266 >>> 15) | 0;
    $idx$0$i = $248 >>> ($271 + 7 | 0) & 1 | $271 << 1;
   }
   $278 = HEAP32[3660820 + ($idx$0$i << 2) >> 2] | 0;
   L123 : do if (!$278) {
    $rsize$3$i = $251;
    $t$2$i = 0;
    $v$3$i = 0;
    label = 86;
   } else {
    $rsize$0$i5 = $251;
    $rst$0$i = 0;
    $sizebits$0$i = $248 << (($idx$0$i | 0) == 31 ? 0 : 25 - ($idx$0$i >>> 1) | 0);
    $t$0$i4 = $278;
    $v$0$i6 = 0;
    while (1) {
     $287 = HEAP32[$t$0$i4 + 4 >> 2] & -8;
     $288 = $287 - $248 | 0;
     if ($288 >>> 0 < $rsize$0$i5 >>> 0) if (($287 | 0) == ($248 | 0)) {
      $rsize$412$i = $288;
      $t$411$i = $t$0$i4;
      $v$413$i = $t$0$i4;
      label = 90;
      break L123;
     } else {
      $rsize$1$i = $288;
      $v$1$i = $t$0$i4;
     } else {
      $rsize$1$i = $rsize$0$i5;
      $v$1$i = $v$0$i6;
     }
     $292 = HEAP32[$t$0$i4 + 20 >> 2] | 0;
     $t$0$i4 = HEAP32[$t$0$i4 + 16 + ($sizebits$0$i >>> 31 << 2) >> 2] | 0;
     $rst$1$i = ($292 | 0) == 0 | ($292 | 0) == ($t$0$i4 | 0) ? $rst$0$i : $292;
     $298 = ($t$0$i4 | 0) == 0;
     if ($298) {
      $rsize$3$i = $rsize$1$i;
      $t$2$i = $rst$1$i;
      $v$3$i = $v$1$i;
      label = 86;
      break;
     } else {
      $rsize$0$i5 = $rsize$1$i;
      $rst$0$i = $rst$1$i;
      $sizebits$0$i = $sizebits$0$i << ($298 & 1 ^ 1);
      $v$0$i6 = $v$1$i;
     }
    }
   } while (0);
   if ((label | 0) == 86) {
    if (($t$2$i | 0) == 0 & ($v$3$i | 0) == 0) {
     $303 = 2 << $idx$0$i;
     $306 = $249 & ($303 | 0 - $303);
     if (!$306) {
      $nb$0 = $248;
      break;
     }
     $310 = ($306 & 0 - $306) + -1 | 0;
     $312 = $310 >>> 12 & 16;
     $313 = $310 >>> $312;
     $315 = $313 >>> 5 & 8;
     $317 = $313 >>> $315;
     $319 = $317 >>> 2 & 4;
     $321 = $317 >>> $319;
     $323 = $321 >>> 1 & 2;
     $325 = $321 >>> $323;
     $327 = $325 >>> 1 & 1;
     $t$4$ph$i = HEAP32[3660820 + (($315 | $312 | $319 | $323 | $327) + ($325 >>> $327) << 2) >> 2] | 0;
    } else $t$4$ph$i = $t$2$i;
    if (!$t$4$ph$i) {
     $rsize$4$lcssa$i = $rsize$3$i;
     $v$4$lcssa$i = $v$3$i;
    } else {
     $rsize$412$i = $rsize$3$i;
     $t$411$i = $t$4$ph$i;
     $v$413$i = $v$3$i;
     label = 90;
    }
   }
   if ((label | 0) == 90) while (1) {
    label = 0;
    $337 = (HEAP32[$t$411$i + 4 >> 2] & -8) - $248 | 0;
    $338 = $337 >>> 0 < $rsize$412$i >>> 0;
    $$rsize$4$i = $338 ? $337 : $rsize$412$i;
    $t$4$v$4$i = $338 ? $t$411$i : $v$413$i;
    $340 = HEAP32[$t$411$i + 16 >> 2] | 0;
    if ($340 | 0) {
     $rsize$412$i = $$rsize$4$i;
     $t$411$i = $340;
     $v$413$i = $t$4$v$4$i;
     label = 90;
     continue;
    }
    $t$411$i = HEAP32[$t$411$i + 20 >> 2] | 0;
    if (!$t$411$i) {
     $rsize$4$lcssa$i = $$rsize$4$i;
     $v$4$lcssa$i = $t$4$v$4$i;
     break;
    } else {
     $rsize$412$i = $$rsize$4$i;
     $v$413$i = $t$4$v$4$i;
     label = 90;
    }
   }
   if (!$v$4$lcssa$i) $nb$0 = $248; else if ($rsize$4$lcssa$i >>> 0 < ((HEAP32[915131] | 0) - $248 | 0) >>> 0) {
    $349 = HEAP32[915133] | 0;
    if ($v$4$lcssa$i >>> 0 < $349 >>> 0) _abort();
    $351 = $v$4$lcssa$i + $248 | 0;
    if ($v$4$lcssa$i >>> 0 >= $351 >>> 0) _abort();
    $354 = HEAP32[$v$4$lcssa$i + 24 >> 2] | 0;
    $356 = HEAP32[$v$4$lcssa$i + 12 >> 2] | 0;
    do if (($356 | 0) == ($v$4$lcssa$i | 0)) {
     $367 = $v$4$lcssa$i + 20 | 0;
     $368 = HEAP32[$367 >> 2] | 0;
     if (!$368) {
      $370 = $v$4$lcssa$i + 16 | 0;
      $371 = HEAP32[$370 >> 2] | 0;
      if (!$371) {
       $R$3$i11 = 0;
       break;
      } else {
       $R$1$i9 = $371;
       $RP$1$i8 = $370;
      }
     } else {
      $R$1$i9 = $368;
      $RP$1$i8 = $367;
     }
     while (1) {
      $373 = $R$1$i9 + 20 | 0;
      $374 = HEAP32[$373 >> 2] | 0;
      if ($374 | 0) {
       $R$1$i9 = $374;
       $RP$1$i8 = $373;
       continue;
      }
      $376 = $R$1$i9 + 16 | 0;
      $377 = HEAP32[$376 >> 2] | 0;
      if (!$377) {
       $R$1$i9$lcssa = $R$1$i9;
       $RP$1$i8$lcssa = $RP$1$i8;
       break;
      } else {
       $R$1$i9 = $377;
       $RP$1$i8 = $376;
      }
     }
     if ($RP$1$i8$lcssa >>> 0 < $349 >>> 0) _abort(); else {
      HEAP32[$RP$1$i8$lcssa >> 2] = 0;
      $R$3$i11 = $R$1$i9$lcssa;
      break;
     }
    } else {
     $359 = HEAP32[$v$4$lcssa$i + 8 >> 2] | 0;
     if ($359 >>> 0 < $349 >>> 0) _abort();
     $361 = $359 + 12 | 0;
     if ((HEAP32[$361 >> 2] | 0) != ($v$4$lcssa$i | 0)) _abort();
     $364 = $356 + 8 | 0;
     if ((HEAP32[$364 >> 2] | 0) == ($v$4$lcssa$i | 0)) {
      HEAP32[$361 >> 2] = $356;
      HEAP32[$364 >> 2] = $359;
      $R$3$i11 = $356;
      break;
     } else _abort();
    } while (0);
    do if ($354 | 0) {
     $382 = HEAP32[$v$4$lcssa$i + 28 >> 2] | 0;
     $383 = 3660820 + ($382 << 2) | 0;
     if (($v$4$lcssa$i | 0) == (HEAP32[$383 >> 2] | 0)) {
      HEAP32[$383 >> 2] = $R$3$i11;
      if (!$R$3$i11) {
       HEAP32[915130] = HEAP32[915130] & ~(1 << $382);
       break;
      }
     } else {
      if ($354 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort();
      $392 = $354 + 16 | 0;
      if ((HEAP32[$392 >> 2] | 0) == ($v$4$lcssa$i | 0)) HEAP32[$392 >> 2] = $R$3$i11; else HEAP32[$354 + 20 >> 2] = $R$3$i11;
      if (!$R$3$i11) break;
     }
     $397 = HEAP32[915133] | 0;
     if ($R$3$i11 >>> 0 < $397 >>> 0) _abort();
     HEAP32[$R$3$i11 + 24 >> 2] = $354;
     $401 = HEAP32[$v$4$lcssa$i + 16 >> 2] | 0;
     do if ($401 | 0) if ($401 >>> 0 < $397 >>> 0) _abort(); else {
      HEAP32[$R$3$i11 + 16 >> 2] = $401;
      HEAP32[$401 + 24 >> 2] = $R$3$i11;
      break;
     } while (0);
     $407 = HEAP32[$v$4$lcssa$i + 20 >> 2] | 0;
     if ($407 | 0) if ($407 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort(); else {
      HEAP32[$R$3$i11 + 20 >> 2] = $407;
      HEAP32[$407 + 24 >> 2] = $R$3$i11;
      break;
     }
    } while (0);
    do if ($rsize$4$lcssa$i >>> 0 < 16) {
     $414 = $rsize$4$lcssa$i + $248 | 0;
     HEAP32[$v$4$lcssa$i + 4 >> 2] = $414 | 3;
     $418 = $v$4$lcssa$i + $414 + 4 | 0;
     HEAP32[$418 >> 2] = HEAP32[$418 >> 2] | 1;
    } else {
     HEAP32[$v$4$lcssa$i + 4 >> 2] = $248 | 3;
     HEAP32[$351 + 4 >> 2] = $rsize$4$lcssa$i | 1;
     HEAP32[$351 + $rsize$4$lcssa$i >> 2] = $rsize$4$lcssa$i;
     $426 = $rsize$4$lcssa$i >>> 3;
     if ($rsize$4$lcssa$i >>> 0 < 256) {
      $429 = 3660556 + ($426 << 1 << 2) | 0;
      $430 = HEAP32[915129] | 0;
      $431 = 1 << $426;
      if (!($430 & $431)) {
       HEAP32[915129] = $430 | $431;
       $$pre$phi$i14Z2D = $429 + 8 | 0;
       $F5$0$i = $429;
      } else {
       $435 = $429 + 8 | 0;
       $436 = HEAP32[$435 >> 2] | 0;
       if ($436 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort(); else {
        $$pre$phi$i14Z2D = $435;
        $F5$0$i = $436;
       }
      }
      HEAP32[$$pre$phi$i14Z2D >> 2] = $351;
      HEAP32[$F5$0$i + 12 >> 2] = $351;
      HEAP32[$351 + 8 >> 2] = $F5$0$i;
      HEAP32[$351 + 12 >> 2] = $429;
      break;
     }
     $442 = $rsize$4$lcssa$i >>> 8;
     if (!$442) $I7$0$i = 0; else if ($rsize$4$lcssa$i >>> 0 > 16777215) $I7$0$i = 31; else {
      $447 = ($442 + 1048320 | 0) >>> 16 & 8;
      $448 = $442 << $447;
      $451 = ($448 + 520192 | 0) >>> 16 & 4;
      $453 = $448 << $451;
      $456 = ($453 + 245760 | 0) >>> 16 & 2;
      $461 = 14 - ($451 | $447 | $456) + ($453 << $456 >>> 15) | 0;
      $I7$0$i = $rsize$4$lcssa$i >>> ($461 + 7 | 0) & 1 | $461 << 1;
     }
     $467 = 3660820 + ($I7$0$i << 2) | 0;
     HEAP32[$351 + 28 >> 2] = $I7$0$i;
     $469 = $351 + 16 | 0;
     HEAP32[$469 + 4 >> 2] = 0;
     HEAP32[$469 >> 2] = 0;
     $471 = HEAP32[915130] | 0;
     $472 = 1 << $I7$0$i;
     if (!($471 & $472)) {
      HEAP32[915130] = $471 | $472;
      HEAP32[$467 >> 2] = $351;
      HEAP32[$351 + 24 >> 2] = $467;
      HEAP32[$351 + 12 >> 2] = $351;
      HEAP32[$351 + 8 >> 2] = $351;
      break;
     }
     $K12$0$i = $rsize$4$lcssa$i << (($I7$0$i | 0) == 31 ? 0 : 25 - ($I7$0$i >>> 1) | 0);
     $T$0$i = HEAP32[$467 >> 2] | 0;
     while (1) {
      if ((HEAP32[$T$0$i + 4 >> 2] & -8 | 0) == ($rsize$4$lcssa$i | 0)) {
       $T$0$i$lcssa = $T$0$i;
       label = 148;
       break;
      }
      $490 = $T$0$i + 16 + ($K12$0$i >>> 31 << 2) | 0;
      $492 = HEAP32[$490 >> 2] | 0;
      if (!$492) {
       $$lcssa157 = $490;
       $T$0$i$lcssa156 = $T$0$i;
       label = 145;
       break;
      } else {
       $K12$0$i = $K12$0$i << 1;
       $T$0$i = $492;
      }
     }
     if ((label | 0) == 145) if ($$lcssa157 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort(); else {
      HEAP32[$$lcssa157 >> 2] = $351;
      HEAP32[$351 + 24 >> 2] = $T$0$i$lcssa156;
      HEAP32[$351 + 12 >> 2] = $351;
      HEAP32[$351 + 8 >> 2] = $351;
      break;
     } else if ((label | 0) == 148) {
      $499 = $T$0$i$lcssa + 8 | 0;
      $500 = HEAP32[$499 >> 2] | 0;
      $501 = HEAP32[915133] | 0;
      if ($500 >>> 0 >= $501 >>> 0 & $T$0$i$lcssa >>> 0 >= $501 >>> 0) {
       HEAP32[$500 + 12 >> 2] = $351;
       HEAP32[$499 >> 2] = $351;
       HEAP32[$351 + 8 >> 2] = $500;
       HEAP32[$351 + 12 >> 2] = $T$0$i$lcssa;
       HEAP32[$351 + 24 >> 2] = 0;
       break;
      } else _abort();
     }
    } while (0);
    $$0 = $v$4$lcssa$i + 8 | 0;
    return $$0 | 0;
   } else $nb$0 = $248;
  }
 } while (0);
 $509 = HEAP32[915131] | 0;
 if ($509 >>> 0 >= $nb$0 >>> 0) {
  $511 = $509 - $nb$0 | 0;
  $512 = HEAP32[915134] | 0;
  if ($511 >>> 0 > 15) {
   $514 = $512 + $nb$0 | 0;
   HEAP32[915134] = $514;
   HEAP32[915131] = $511;
   HEAP32[$514 + 4 >> 2] = $511 | 1;
   HEAP32[$514 + $511 >> 2] = $511;
   HEAP32[$512 + 4 >> 2] = $nb$0 | 3;
  } else {
   HEAP32[915131] = 0;
   HEAP32[915134] = 0;
   HEAP32[$512 + 4 >> 2] = $509 | 3;
   $523 = $512 + $509 + 4 | 0;
   HEAP32[$523 >> 2] = HEAP32[$523 >> 2] | 1;
  }
  $$0 = $512 + 8 | 0;
  return $$0 | 0;
 }
 $527 = HEAP32[915132] | 0;
 if ($527 >>> 0 > $nb$0 >>> 0) {
  $529 = $527 - $nb$0 | 0;
  HEAP32[915132] = $529;
  $530 = HEAP32[915135] | 0;
  $531 = $530 + $nb$0 | 0;
  HEAP32[915135] = $531;
  HEAP32[$531 + 4 >> 2] = $529 | 1;
  HEAP32[$530 + 4 >> 2] = $nb$0 | 3;
  $$0 = $530 + 8 | 0;
  return $$0 | 0;
 }
 do if (!(HEAP32[915247] | 0)) {
  $539 = _sysconf(30) | 0;
  if (!($539 + -1 & $539)) {
   HEAP32[915249] = $539;
   HEAP32[915248] = $539;
   HEAP32[915250] = -1;
   HEAP32[915251] = -1;
   HEAP32[915252] = 0;
   HEAP32[915240] = 0;
   HEAP32[915247] = (_time(0) | 0) & -16 ^ 1431655768;
   break;
  } else _abort();
 } while (0);
 $546 = $nb$0 + 48 | 0;
 $547 = HEAP32[915249] | 0;
 $548 = $nb$0 + 47 | 0;
 $549 = $547 + $548 | 0;
 $550 = 0 - $547 | 0;
 $551 = $549 & $550;
 if ($551 >>> 0 <= $nb$0 >>> 0) {
  $$0 = 0;
  return $$0 | 0;
 }
 $553 = HEAP32[915239] | 0;
 if ($553 | 0) {
  $555 = HEAP32[915237] | 0;
  $556 = $555 + $551 | 0;
  if ($556 >>> 0 <= $555 >>> 0 | $556 >>> 0 > $553 >>> 0) {
   $$0 = 0;
   return $$0 | 0;
  }
 }
 L257 : do if (!(HEAP32[915240] & 4)) {
  $562 = HEAP32[915135] | 0;
  L259 : do if (!$562) label = 173; else {
   $sp$0$i$i = 3660964;
   while (1) {
    $564 = HEAP32[$sp$0$i$i >> 2] | 0;
    if ($564 >>> 0 <= $562 >>> 0) {
     $566 = $sp$0$i$i + 4 | 0;
     if (($564 + (HEAP32[$566 >> 2] | 0) | 0) >>> 0 > $562 >>> 0) {
      $$lcssa153 = $sp$0$i$i;
      $$lcssa155 = $566;
      break;
     }
    }
    $sp$0$i$i = HEAP32[$sp$0$i$i + 8 >> 2] | 0;
    if (!$sp$0$i$i) {
     label = 173;
     break L259;
    }
   }
   $597 = $549 - (HEAP32[915132] | 0) & $550;
   if ($597 >>> 0 < 2147483647) {
    $599 = _sbrk($597 | 0) | 0;
    if (($599 | 0) == ((HEAP32[$$lcssa153 >> 2] | 0) + (HEAP32[$$lcssa155 >> 2] | 0) | 0)) {
     if (($599 | 0) != (-1 | 0)) {
      $tbase$746$i = $599;
      $tsize$745$i = $597;
      label = 193;
      break L257;
     }
    } else {
     $br$2$ph$i = $599;
     $ssize$2$ph$i = $597;
     label = 183;
    }
   }
  } while (0);
  do if ((label | 0) == 173) {
   $573 = _sbrk(0) | 0;
   if (($573 | 0) != (-1 | 0)) {
    $575 = $573;
    $576 = HEAP32[915248] | 0;
    $577 = $576 + -1 | 0;
    if (!($577 & $575)) $ssize$0$i = $551; else $ssize$0$i = $551 - $575 + ($577 + $575 & 0 - $576) | 0;
    $585 = HEAP32[915237] | 0;
    $586 = $585 + $ssize$0$i | 0;
    if ($ssize$0$i >>> 0 > $nb$0 >>> 0 & $ssize$0$i >>> 0 < 2147483647) {
     $589 = HEAP32[915239] | 0;
     if ($589 | 0) if ($586 >>> 0 <= $585 >>> 0 | $586 >>> 0 > $589 >>> 0) break;
     $593 = _sbrk($ssize$0$i | 0) | 0;
     if (($593 | 0) == ($573 | 0)) {
      $tbase$746$i = $573;
      $tsize$745$i = $ssize$0$i;
      label = 193;
      break L257;
     } else {
      $br$2$ph$i = $593;
      $ssize$2$ph$i = $ssize$0$i;
      label = 183;
     }
    }
   }
  } while (0);
  L279 : do if ((label | 0) == 183) {
   $605 = 0 - $ssize$2$ph$i | 0;
   do if ($546 >>> 0 > $ssize$2$ph$i >>> 0 & ($ssize$2$ph$i >>> 0 < 2147483647 & ($br$2$ph$i | 0) != (-1 | 0))) {
    $609 = HEAP32[915249] | 0;
    $613 = $548 - $ssize$2$ph$i + $609 & 0 - $609;
    if ($613 >>> 0 < 2147483647) if ((_sbrk($613 | 0) | 0) == (-1 | 0)) {
     _sbrk($605 | 0) | 0;
     break L279;
    } else {
     $ssize$5$i = $613 + $ssize$2$ph$i | 0;
     break;
    } else $ssize$5$i = $ssize$2$ph$i;
   } else $ssize$5$i = $ssize$2$ph$i; while (0);
   if (($br$2$ph$i | 0) != (-1 | 0)) {
    $tbase$746$i = $br$2$ph$i;
    $tsize$745$i = $ssize$5$i;
    label = 193;
    break L257;
   }
  } while (0);
  HEAP32[915240] = HEAP32[915240] | 4;
  label = 190;
 } else label = 190; while (0);
 if ((label | 0) == 190) if ($551 >>> 0 < 2147483647) {
  $622 = _sbrk($551 | 0) | 0;
  $623 = _sbrk(0) | 0;
  if ($622 >>> 0 < $623 >>> 0 & (($622 | 0) != (-1 | 0) & ($623 | 0) != (-1 | 0))) {
   $629 = $623 - $622 | 0;
   if ($629 >>> 0 > ($nb$0 + 40 | 0) >>> 0) {
    $tbase$746$i = $622;
    $tsize$745$i = $629;
    label = 193;
   }
  }
 }
 if ((label | 0) == 193) {
  $632 = (HEAP32[915237] | 0) + $tsize$745$i | 0;
  HEAP32[915237] = $632;
  if ($632 >>> 0 > (HEAP32[915238] | 0) >>> 0) HEAP32[915238] = $632;
  $635 = HEAP32[915135] | 0;
  do if (!$635) {
   $637 = HEAP32[915133] | 0;
   if (($637 | 0) == 0 | $tbase$746$i >>> 0 < $637 >>> 0) HEAP32[915133] = $tbase$746$i;
   HEAP32[915241] = $tbase$746$i;
   HEAP32[915242] = $tsize$745$i;
   HEAP32[915244] = 0;
   HEAP32[915138] = HEAP32[915247];
   HEAP32[915137] = -1;
   $i$01$i$i = 0;
   do {
    $642 = 3660556 + ($i$01$i$i << 1 << 2) | 0;
    HEAP32[$642 + 12 >> 2] = $642;
    HEAP32[$642 + 8 >> 2] = $642;
    $i$01$i$i = $i$01$i$i + 1 | 0;
   } while (($i$01$i$i | 0) != 32);
   $648 = $tbase$746$i + 8 | 0;
   $653 = ($648 & 7 | 0) == 0 ? 0 : 0 - $648 & 7;
   $654 = $tbase$746$i + $653 | 0;
   $655 = $tsize$745$i + -40 - $653 | 0;
   HEAP32[915135] = $654;
   HEAP32[915132] = $655;
   HEAP32[$654 + 4 >> 2] = $655 | 1;
   HEAP32[$654 + $655 + 4 >> 2] = 40;
   HEAP32[915136] = HEAP32[915251];
  } else {
   $sp$068$i = 3660964;
   do {
    $661 = HEAP32[$sp$068$i >> 2] | 0;
    $662 = $sp$068$i + 4 | 0;
    $663 = HEAP32[$662 >> 2] | 0;
    if (($tbase$746$i | 0) == ($661 + $663 | 0)) {
     $$lcssa147 = $661;
     $$lcssa149 = $662;
     $$lcssa151 = $663;
     $sp$068$i$lcssa = $sp$068$i;
     label = 203;
     break;
    }
    $sp$068$i = HEAP32[$sp$068$i + 8 >> 2] | 0;
   } while (($sp$068$i | 0) != 0);
   if ((label | 0) == 203) if (!(HEAP32[$sp$068$i$lcssa + 12 >> 2] & 8)) if ($635 >>> 0 < $tbase$746$i >>> 0 & $635 >>> 0 >= $$lcssa147 >>> 0) {
    HEAP32[$$lcssa149 >> 2] = $$lcssa151 + $tsize$745$i;
    $678 = $635 + 8 | 0;
    $683 = ($678 & 7 | 0) == 0 ? 0 : 0 - $678 & 7;
    $684 = $635 + $683 | 0;
    $686 = $tsize$745$i - $683 + (HEAP32[915132] | 0) | 0;
    HEAP32[915135] = $684;
    HEAP32[915132] = $686;
    HEAP32[$684 + 4 >> 2] = $686 | 1;
    HEAP32[$684 + $686 + 4 >> 2] = 40;
    HEAP32[915136] = HEAP32[915251];
    break;
   }
   $692 = HEAP32[915133] | 0;
   if ($tbase$746$i >>> 0 < $692 >>> 0) {
    HEAP32[915133] = $tbase$746$i;
    $757 = $tbase$746$i;
   } else $757 = $692;
   $694 = $tbase$746$i + $tsize$745$i | 0;
   $sp$167$i = 3660964;
   while (1) {
    if ((HEAP32[$sp$167$i >> 2] | 0) == ($694 | 0)) {
     $$lcssa144 = $sp$167$i;
     $sp$167$i$lcssa = $sp$167$i;
     label = 211;
     break;
    }
    $sp$167$i = HEAP32[$sp$167$i + 8 >> 2] | 0;
    if (!$sp$167$i) {
     $sp$0$i$i$i = 3660964;
     break;
    }
   }
   if ((label | 0) == 211) if (!(HEAP32[$sp$167$i$lcssa + 12 >> 2] & 8)) {
    HEAP32[$$lcssa144 >> 2] = $tbase$746$i;
    $704 = $sp$167$i$lcssa + 4 | 0;
    HEAP32[$704 >> 2] = (HEAP32[$704 >> 2] | 0) + $tsize$745$i;
    $708 = $tbase$746$i + 8 | 0;
    $714 = $tbase$746$i + (($708 & 7 | 0) == 0 ? 0 : 0 - $708 & 7) | 0;
    $716 = $694 + 8 | 0;
    $722 = $694 + (($716 & 7 | 0) == 0 ? 0 : 0 - $716 & 7) | 0;
    $726 = $714 + $nb$0 | 0;
    $727 = $722 - $714 - $nb$0 | 0;
    HEAP32[$714 + 4 >> 2] = $nb$0 | 3;
    do if (($722 | 0) == ($635 | 0)) {
     $732 = (HEAP32[915132] | 0) + $727 | 0;
     HEAP32[915132] = $732;
     HEAP32[915135] = $726;
     HEAP32[$726 + 4 >> 2] = $732 | 1;
    } else {
     if (($722 | 0) == (HEAP32[915134] | 0)) {
      $738 = (HEAP32[915131] | 0) + $727 | 0;
      HEAP32[915131] = $738;
      HEAP32[915134] = $726;
      HEAP32[$726 + 4 >> 2] = $738 | 1;
      HEAP32[$726 + $738 >> 2] = $738;
      break;
     }
     $743 = HEAP32[$722 + 4 >> 2] | 0;
     if (($743 & 3 | 0) == 1) {
      $746 = $743 & -8;
      $747 = $743 >>> 3;
      L331 : do if ($743 >>> 0 < 256) {
       $750 = HEAP32[$722 + 8 >> 2] | 0;
       $752 = HEAP32[$722 + 12 >> 2] | 0;
       $754 = 3660556 + ($747 << 1 << 2) | 0;
       do if (($750 | 0) != ($754 | 0)) {
        if ($750 >>> 0 < $757 >>> 0) _abort();
        if ((HEAP32[$750 + 12 >> 2] | 0) == ($722 | 0)) break;
        _abort();
       } while (0);
       if (($752 | 0) == ($750 | 0)) {
        HEAP32[915129] = HEAP32[915129] & ~(1 << $747);
        break;
       }
       do if (($752 | 0) == ($754 | 0)) $$pre$phi10$i$iZ2D = $752 + 8 | 0; else {
        if ($752 >>> 0 < $757 >>> 0) _abort();
        $768 = $752 + 8 | 0;
        if ((HEAP32[$768 >> 2] | 0) == ($722 | 0)) {
         $$pre$phi10$i$iZ2D = $768;
         break;
        }
        _abort();
       } while (0);
       HEAP32[$750 + 12 >> 2] = $752;
       HEAP32[$$pre$phi10$i$iZ2D >> 2] = $750;
      } else {
       $773 = HEAP32[$722 + 24 >> 2] | 0;
       $775 = HEAP32[$722 + 12 >> 2] | 0;
       do if (($775 | 0) == ($722 | 0)) {
        $786 = $722 + 16 | 0;
        $787 = $786 + 4 | 0;
        $788 = HEAP32[$787 >> 2] | 0;
        if (!$788) {
         $790 = HEAP32[$786 >> 2] | 0;
         if (!$790) {
          $R$3$i$i = 0;
          break;
         } else {
          $R$1$i$i = $790;
          $RP$1$i$i = $786;
         }
        } else {
         $R$1$i$i = $788;
         $RP$1$i$i = $787;
        }
        while (1) {
         $792 = $R$1$i$i + 20 | 0;
         $793 = HEAP32[$792 >> 2] | 0;
         if ($793 | 0) {
          $R$1$i$i = $793;
          $RP$1$i$i = $792;
          continue;
         }
         $795 = $R$1$i$i + 16 | 0;
         $796 = HEAP32[$795 >> 2] | 0;
         if (!$796) {
          $R$1$i$i$lcssa = $R$1$i$i;
          $RP$1$i$i$lcssa = $RP$1$i$i;
          break;
         } else {
          $R$1$i$i = $796;
          $RP$1$i$i = $795;
         }
        }
        if ($RP$1$i$i$lcssa >>> 0 < $757 >>> 0) _abort(); else {
         HEAP32[$RP$1$i$i$lcssa >> 2] = 0;
         $R$3$i$i = $R$1$i$i$lcssa;
         break;
        }
       } else {
        $778 = HEAP32[$722 + 8 >> 2] | 0;
        if ($778 >>> 0 < $757 >>> 0) _abort();
        $780 = $778 + 12 | 0;
        if ((HEAP32[$780 >> 2] | 0) != ($722 | 0)) _abort();
        $783 = $775 + 8 | 0;
        if ((HEAP32[$783 >> 2] | 0) == ($722 | 0)) {
         HEAP32[$780 >> 2] = $775;
         HEAP32[$783 >> 2] = $778;
         $R$3$i$i = $775;
         break;
        } else _abort();
       } while (0);
       if (!$773) break;
       $801 = HEAP32[$722 + 28 >> 2] | 0;
       $802 = 3660820 + ($801 << 2) | 0;
       do if (($722 | 0) == (HEAP32[$802 >> 2] | 0)) {
        HEAP32[$802 >> 2] = $R$3$i$i;
        if ($R$3$i$i | 0) break;
        HEAP32[915130] = HEAP32[915130] & ~(1 << $801);
        break L331;
       } else {
        if ($773 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort();
        $811 = $773 + 16 | 0;
        if ((HEAP32[$811 >> 2] | 0) == ($722 | 0)) HEAP32[$811 >> 2] = $R$3$i$i; else HEAP32[$773 + 20 >> 2] = $R$3$i$i;
        if (!$R$3$i$i) break L331;
       } while (0);
       $816 = HEAP32[915133] | 0;
       if ($R$3$i$i >>> 0 < $816 >>> 0) _abort();
       HEAP32[$R$3$i$i + 24 >> 2] = $773;
       $819 = $722 + 16 | 0;
       $820 = HEAP32[$819 >> 2] | 0;
       do if ($820 | 0) if ($820 >>> 0 < $816 >>> 0) _abort(); else {
        HEAP32[$R$3$i$i + 16 >> 2] = $820;
        HEAP32[$820 + 24 >> 2] = $R$3$i$i;
        break;
       } while (0);
       $826 = HEAP32[$819 + 4 >> 2] | 0;
       if (!$826) break;
       if ($826 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort(); else {
        HEAP32[$R$3$i$i + 20 >> 2] = $826;
        HEAP32[$826 + 24 >> 2] = $R$3$i$i;
        break;
       }
      } while (0);
      $oldfirst$0$i$i = $722 + $746 | 0;
      $qsize$0$i$i = $746 + $727 | 0;
     } else {
      $oldfirst$0$i$i = $722;
      $qsize$0$i$i = $727;
     }
     $834 = $oldfirst$0$i$i + 4 | 0;
     HEAP32[$834 >> 2] = HEAP32[$834 >> 2] & -2;
     HEAP32[$726 + 4 >> 2] = $qsize$0$i$i | 1;
     HEAP32[$726 + $qsize$0$i$i >> 2] = $qsize$0$i$i;
     $840 = $qsize$0$i$i >>> 3;
     if ($qsize$0$i$i >>> 0 < 256) {
      $843 = 3660556 + ($840 << 1 << 2) | 0;
      $844 = HEAP32[915129] | 0;
      $845 = 1 << $840;
      do if (!($844 & $845)) {
       HEAP32[915129] = $844 | $845;
       $$pre$phi$i17$iZ2D = $843 + 8 | 0;
       $F4$0$i$i = $843;
      } else {
       $849 = $843 + 8 | 0;
       $850 = HEAP32[$849 >> 2] | 0;
       if ($850 >>> 0 >= (HEAP32[915133] | 0) >>> 0) {
        $$pre$phi$i17$iZ2D = $849;
        $F4$0$i$i = $850;
        break;
       }
       _abort();
      } while (0);
      HEAP32[$$pre$phi$i17$iZ2D >> 2] = $726;
      HEAP32[$F4$0$i$i + 12 >> 2] = $726;
      HEAP32[$726 + 8 >> 2] = $F4$0$i$i;
      HEAP32[$726 + 12 >> 2] = $843;
      break;
     }
     $856 = $qsize$0$i$i >>> 8;
     do if (!$856) $I7$0$i$i = 0; else {
      if ($qsize$0$i$i >>> 0 > 16777215) {
       $I7$0$i$i = 31;
       break;
      }
      $861 = ($856 + 1048320 | 0) >>> 16 & 8;
      $862 = $856 << $861;
      $865 = ($862 + 520192 | 0) >>> 16 & 4;
      $867 = $862 << $865;
      $870 = ($867 + 245760 | 0) >>> 16 & 2;
      $875 = 14 - ($865 | $861 | $870) + ($867 << $870 >>> 15) | 0;
      $I7$0$i$i = $qsize$0$i$i >>> ($875 + 7 | 0) & 1 | $875 << 1;
     } while (0);
     $881 = 3660820 + ($I7$0$i$i << 2) | 0;
     HEAP32[$726 + 28 >> 2] = $I7$0$i$i;
     $883 = $726 + 16 | 0;
     HEAP32[$883 + 4 >> 2] = 0;
     HEAP32[$883 >> 2] = 0;
     $885 = HEAP32[915130] | 0;
     $886 = 1 << $I7$0$i$i;
     if (!($885 & $886)) {
      HEAP32[915130] = $885 | $886;
      HEAP32[$881 >> 2] = $726;
      HEAP32[$726 + 24 >> 2] = $881;
      HEAP32[$726 + 12 >> 2] = $726;
      HEAP32[$726 + 8 >> 2] = $726;
      break;
     }
     $K8$0$i$i = $qsize$0$i$i << (($I7$0$i$i | 0) == 31 ? 0 : 25 - ($I7$0$i$i >>> 1) | 0);
     $T$0$i18$i = HEAP32[$881 >> 2] | 0;
     while (1) {
      if ((HEAP32[$T$0$i18$i + 4 >> 2] & -8 | 0) == ($qsize$0$i$i | 0)) {
       $T$0$i18$i$lcssa = $T$0$i18$i;
       label = 281;
       break;
      }
      $904 = $T$0$i18$i + 16 + ($K8$0$i$i >>> 31 << 2) | 0;
      $906 = HEAP32[$904 >> 2] | 0;
      if (!$906) {
       $$lcssa = $904;
       $T$0$i18$i$lcssa139 = $T$0$i18$i;
       label = 278;
       break;
      } else {
       $K8$0$i$i = $K8$0$i$i << 1;
       $T$0$i18$i = $906;
      }
     }
     if ((label | 0) == 278) if ($$lcssa >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort(); else {
      HEAP32[$$lcssa >> 2] = $726;
      HEAP32[$726 + 24 >> 2] = $T$0$i18$i$lcssa139;
      HEAP32[$726 + 12 >> 2] = $726;
      HEAP32[$726 + 8 >> 2] = $726;
      break;
     } else if ((label | 0) == 281) {
      $913 = $T$0$i18$i$lcssa + 8 | 0;
      $914 = HEAP32[$913 >> 2] | 0;
      $915 = HEAP32[915133] | 0;
      if ($914 >>> 0 >= $915 >>> 0 & $T$0$i18$i$lcssa >>> 0 >= $915 >>> 0) {
       HEAP32[$914 + 12 >> 2] = $726;
       HEAP32[$913 >> 2] = $726;
       HEAP32[$726 + 8 >> 2] = $914;
       HEAP32[$726 + 12 >> 2] = $T$0$i18$i$lcssa;
       HEAP32[$726 + 24 >> 2] = 0;
       break;
      } else _abort();
     }
    } while (0);
    $$0 = $714 + 8 | 0;
    return $$0 | 0;
   } else $sp$0$i$i$i = 3660964;
   while (1) {
    $922 = HEAP32[$sp$0$i$i$i >> 2] | 0;
    if ($922 >>> 0 <= $635 >>> 0) {
     $926 = $922 + (HEAP32[$sp$0$i$i$i + 4 >> 2] | 0) | 0;
     if ($926 >>> 0 > $635 >>> 0) {
      $$lcssa142 = $926;
      break;
     }
    }
    $sp$0$i$i$i = HEAP32[$sp$0$i$i$i + 8 >> 2] | 0;
   }
   $930 = $$lcssa142 + -47 | 0;
   $932 = $930 + 8 | 0;
   $938 = $930 + (($932 & 7 | 0) == 0 ? 0 : 0 - $932 & 7) | 0;
   $939 = $635 + 16 | 0;
   $941 = $938 >>> 0 < $939 >>> 0 ? $635 : $938;
   $942 = $941 + 8 | 0;
   $946 = $tbase$746$i + 8 | 0;
   $951 = ($946 & 7 | 0) == 0 ? 0 : 0 - $946 & 7;
   $952 = $tbase$746$i + $951 | 0;
   $953 = $tsize$745$i + -40 - $951 | 0;
   HEAP32[915135] = $952;
   HEAP32[915132] = $953;
   HEAP32[$952 + 4 >> 2] = $953 | 1;
   HEAP32[$952 + $953 + 4 >> 2] = 40;
   HEAP32[915136] = HEAP32[915251];
   $959 = $941 + 4 | 0;
   HEAP32[$959 >> 2] = 27;
   HEAP32[$942 >> 2] = HEAP32[915241];
   HEAP32[$942 + 4 >> 2] = HEAP32[915242];
   HEAP32[$942 + 8 >> 2] = HEAP32[915243];
   HEAP32[$942 + 12 >> 2] = HEAP32[915244];
   HEAP32[915241] = $tbase$746$i;
   HEAP32[915242] = $tsize$745$i;
   HEAP32[915244] = 0;
   HEAP32[915243] = $942;
   $p$0$i$i = $941 + 24 | 0;
   do {
    $p$0$i$i = $p$0$i$i + 4 | 0;
    HEAP32[$p$0$i$i >> 2] = 7;
   } while (($p$0$i$i + 4 | 0) >>> 0 < $$lcssa142 >>> 0);
   if (($941 | 0) != ($635 | 0)) {
    $966 = $941 - $635 | 0;
    HEAP32[$959 >> 2] = HEAP32[$959 >> 2] & -2;
    HEAP32[$635 + 4 >> 2] = $966 | 1;
    HEAP32[$941 >> 2] = $966;
    $971 = $966 >>> 3;
    if ($966 >>> 0 < 256) {
     $974 = 3660556 + ($971 << 1 << 2) | 0;
     $975 = HEAP32[915129] | 0;
     $976 = 1 << $971;
     if (!($975 & $976)) {
      HEAP32[915129] = $975 | $976;
      $$pre$phi$i$iZ2D = $974 + 8 | 0;
      $F$0$i$i = $974;
     } else {
      $980 = $974 + 8 | 0;
      $981 = HEAP32[$980 >> 2] | 0;
      if ($981 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort(); else {
       $$pre$phi$i$iZ2D = $980;
       $F$0$i$i = $981;
      }
     }
     HEAP32[$$pre$phi$i$iZ2D >> 2] = $635;
     HEAP32[$F$0$i$i + 12 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $F$0$i$i;
     HEAP32[$635 + 12 >> 2] = $974;
     break;
    }
    $987 = $966 >>> 8;
    if (!$987) $I1$0$i$i = 0; else if ($966 >>> 0 > 16777215) $I1$0$i$i = 31; else {
     $992 = ($987 + 1048320 | 0) >>> 16 & 8;
     $993 = $987 << $992;
     $996 = ($993 + 520192 | 0) >>> 16 & 4;
     $998 = $993 << $996;
     $1001 = ($998 + 245760 | 0) >>> 16 & 2;
     $1006 = 14 - ($996 | $992 | $1001) + ($998 << $1001 >>> 15) | 0;
     $I1$0$i$i = $966 >>> ($1006 + 7 | 0) & 1 | $1006 << 1;
    }
    $1012 = 3660820 + ($I1$0$i$i << 2) | 0;
    HEAP32[$635 + 28 >> 2] = $I1$0$i$i;
    HEAP32[$635 + 20 >> 2] = 0;
    HEAP32[$939 >> 2] = 0;
    $1015 = HEAP32[915130] | 0;
    $1016 = 1 << $I1$0$i$i;
    if (!($1015 & $1016)) {
     HEAP32[915130] = $1015 | $1016;
     HEAP32[$1012 >> 2] = $635;
     HEAP32[$635 + 24 >> 2] = $1012;
     HEAP32[$635 + 12 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $635;
     break;
    }
    $K2$0$i$i = $966 << (($I1$0$i$i | 0) == 31 ? 0 : 25 - ($I1$0$i$i >>> 1) | 0);
    $T$0$i$i = HEAP32[$1012 >> 2] | 0;
    while (1) {
     if ((HEAP32[$T$0$i$i + 4 >> 2] & -8 | 0) == ($966 | 0)) {
      $T$0$i$i$lcssa = $T$0$i$i;
      label = 307;
      break;
     }
     $1034 = $T$0$i$i + 16 + ($K2$0$i$i >>> 31 << 2) | 0;
     $1036 = HEAP32[$1034 >> 2] | 0;
     if (!$1036) {
      $$lcssa141 = $1034;
      $T$0$i$i$lcssa140 = $T$0$i$i;
      label = 304;
      break;
     } else {
      $K2$0$i$i = $K2$0$i$i << 1;
      $T$0$i$i = $1036;
     }
    }
    if ((label | 0) == 304) if ($$lcssa141 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort(); else {
     HEAP32[$$lcssa141 >> 2] = $635;
     HEAP32[$635 + 24 >> 2] = $T$0$i$i$lcssa140;
     HEAP32[$635 + 12 >> 2] = $635;
     HEAP32[$635 + 8 >> 2] = $635;
     break;
    } else if ((label | 0) == 307) {
     $1043 = $T$0$i$i$lcssa + 8 | 0;
     $1044 = HEAP32[$1043 >> 2] | 0;
     $1045 = HEAP32[915133] | 0;
     if ($1044 >>> 0 >= $1045 >>> 0 & $T$0$i$i$lcssa >>> 0 >= $1045 >>> 0) {
      HEAP32[$1044 + 12 >> 2] = $635;
      HEAP32[$1043 >> 2] = $635;
      HEAP32[$635 + 8 >> 2] = $1044;
      HEAP32[$635 + 12 >> 2] = $T$0$i$i$lcssa;
      HEAP32[$635 + 24 >> 2] = 0;
      break;
     } else _abort();
    }
   }
  } while (0);
  $1053 = HEAP32[915132] | 0;
  if ($1053 >>> 0 > $nb$0 >>> 0) {
   $1055 = $1053 - $nb$0 | 0;
   HEAP32[915132] = $1055;
   $1056 = HEAP32[915135] | 0;
   $1057 = $1056 + $nb$0 | 0;
   HEAP32[915135] = $1057;
   HEAP32[$1057 + 4 >> 2] = $1055 | 1;
   HEAP32[$1056 + 4 >> 2] = $nb$0 | 3;
   $$0 = $1056 + 8 | 0;
   return $$0 | 0;
  }
 }
 HEAP32[(___errno_location() | 0) >> 2] = 12;
 $$0 = 0;
 return $$0 | 0;
}

function _free($mem) {
 $mem = $mem | 0;
 var $$lcssa = 0, $$pre$phi41Z2D = 0, $$pre$phi43Z2D = 0, $$pre$phiZ2D = 0, $1 = 0, $104 = 0, $105 = 0, $113 = 0, $114 = 0, $12 = 0, $122 = 0, $130 = 0, $135 = 0, $136 = 0, $139 = 0, $141 = 0, $143 = 0, $15 = 0, $158 = 0, $16 = 0, $163 = 0, $165 = 0, $168 = 0, $171 = 0, $174 = 0, $177 = 0, $178 = 0, $179 = 0, $181 = 0, $183 = 0, $184 = 0, $186 = 0, $187 = 0, $193 = 0, $194 = 0, $2 = 0, $20 = 0, $203 = 0, $208 = 0, $211 = 0, $212 = 0, $218 = 0, $23 = 0, $233 = 0, $236 = 0, $237 = 0, $238 = 0, $242 = 0, $243 = 0, $249 = 0, $25 = 0, $254 = 0, $255 = 0, $258 = 0, $260 = 0, $263 = 0, $268 = 0, $27 = 0, $274 = 0, $278 = 0, $279 = 0, $297 = 0, $299 = 0, $306 = 0, $307 = 0, $308 = 0, $316 = 0, $40 = 0, $45 = 0, $47 = 0, $5 = 0, $50 = 0, $52 = 0, $55 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $64 = 0, $65 = 0, $67 = 0, $68 = 0, $73 = 0, $74 = 0, $8 = 0, $83 = 0, $88 = 0, $9 = 0, $91 = 0, $92 = 0, $98 = 0, $F18$0 = 0, $I20$0 = 0, $K21$0 = 0, $R$1 = 0, $R$1$lcssa = 0, $R$3 = 0, $R8$1 = 0, $R8$1$lcssa = 0, $R8$3 = 0, $RP$1 = 0, $RP$1$lcssa = 0, $RP10$1 = 0, $RP10$1$lcssa = 0, $T$0 = 0, $T$0$lcssa = 0, $T$0$lcssa48 = 0, $p$1 = 0, $psize$1 = 0, $psize$2 = 0, $sp$0$i = 0, $sp$0$in$i = 0, label = 0;
 if (!$mem) return;
 $1 = $mem + -8 | 0;
 $2 = HEAP32[915133] | 0;
 if ($1 >>> 0 < $2 >>> 0) _abort();
 $5 = HEAP32[$mem + -4 >> 2] | 0;
 $6 = $5 & 3;
 if (($6 | 0) == 1) _abort();
 $8 = $5 & -8;
 $9 = $1 + $8 | 0;
 do if (!($5 & 1)) {
  $12 = HEAP32[$1 >> 2] | 0;
  if (!$6) return;
  $15 = $1 + (0 - $12) | 0;
  $16 = $12 + $8 | 0;
  if ($15 >>> 0 < $2 >>> 0) _abort();
  if (($15 | 0) == (HEAP32[915134] | 0)) {
   $104 = $9 + 4 | 0;
   $105 = HEAP32[$104 >> 2] | 0;
   if (($105 & 3 | 0) != 3) {
    $p$1 = $15;
    $psize$1 = $16;
    break;
   }
   HEAP32[915131] = $16;
   HEAP32[$104 >> 2] = $105 & -2;
   HEAP32[$15 + 4 >> 2] = $16 | 1;
   HEAP32[$15 + $16 >> 2] = $16;
   return;
  }
  $20 = $12 >>> 3;
  if ($12 >>> 0 < 256) {
   $23 = HEAP32[$15 + 8 >> 2] | 0;
   $25 = HEAP32[$15 + 12 >> 2] | 0;
   $27 = 3660556 + ($20 << 1 << 2) | 0;
   if (($23 | 0) != ($27 | 0)) {
    if ($23 >>> 0 < $2 >>> 0) _abort();
    if ((HEAP32[$23 + 12 >> 2] | 0) != ($15 | 0)) _abort();
   }
   if (($25 | 0) == ($23 | 0)) {
    HEAP32[915129] = HEAP32[915129] & ~(1 << $20);
    $p$1 = $15;
    $psize$1 = $16;
    break;
   }
   if (($25 | 0) == ($27 | 0)) $$pre$phi43Z2D = $25 + 8 | 0; else {
    if ($25 >>> 0 < $2 >>> 0) _abort();
    $40 = $25 + 8 | 0;
    if ((HEAP32[$40 >> 2] | 0) == ($15 | 0)) $$pre$phi43Z2D = $40; else _abort();
   }
   HEAP32[$23 + 12 >> 2] = $25;
   HEAP32[$$pre$phi43Z2D >> 2] = $23;
   $p$1 = $15;
   $psize$1 = $16;
   break;
  }
  $45 = HEAP32[$15 + 24 >> 2] | 0;
  $47 = HEAP32[$15 + 12 >> 2] | 0;
  do if (($47 | 0) == ($15 | 0)) {
   $58 = $15 + 16 | 0;
   $59 = $58 + 4 | 0;
   $60 = HEAP32[$59 >> 2] | 0;
   if (!$60) {
    $62 = HEAP32[$58 >> 2] | 0;
    if (!$62) {
     $R$3 = 0;
     break;
    } else {
     $R$1 = $62;
     $RP$1 = $58;
    }
   } else {
    $R$1 = $60;
    $RP$1 = $59;
   }
   while (1) {
    $64 = $R$1 + 20 | 0;
    $65 = HEAP32[$64 >> 2] | 0;
    if ($65 | 0) {
     $R$1 = $65;
     $RP$1 = $64;
     continue;
    }
    $67 = $R$1 + 16 | 0;
    $68 = HEAP32[$67 >> 2] | 0;
    if (!$68) {
     $R$1$lcssa = $R$1;
     $RP$1$lcssa = $RP$1;
     break;
    } else {
     $R$1 = $68;
     $RP$1 = $67;
    }
   }
   if ($RP$1$lcssa >>> 0 < $2 >>> 0) _abort(); else {
    HEAP32[$RP$1$lcssa >> 2] = 0;
    $R$3 = $R$1$lcssa;
    break;
   }
  } else {
   $50 = HEAP32[$15 + 8 >> 2] | 0;
   if ($50 >>> 0 < $2 >>> 0) _abort();
   $52 = $50 + 12 | 0;
   if ((HEAP32[$52 >> 2] | 0) != ($15 | 0)) _abort();
   $55 = $47 + 8 | 0;
   if ((HEAP32[$55 >> 2] | 0) == ($15 | 0)) {
    HEAP32[$52 >> 2] = $47;
    HEAP32[$55 >> 2] = $50;
    $R$3 = $47;
    break;
   } else _abort();
  } while (0);
  if (!$45) {
   $p$1 = $15;
   $psize$1 = $16;
  } else {
   $73 = HEAP32[$15 + 28 >> 2] | 0;
   $74 = 3660820 + ($73 << 2) | 0;
   if (($15 | 0) == (HEAP32[$74 >> 2] | 0)) {
    HEAP32[$74 >> 2] = $R$3;
    if (!$R$3) {
     HEAP32[915130] = HEAP32[915130] & ~(1 << $73);
     $p$1 = $15;
     $psize$1 = $16;
     break;
    }
   } else {
    if ($45 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort();
    $83 = $45 + 16 | 0;
    if ((HEAP32[$83 >> 2] | 0) == ($15 | 0)) HEAP32[$83 >> 2] = $R$3; else HEAP32[$45 + 20 >> 2] = $R$3;
    if (!$R$3) {
     $p$1 = $15;
     $psize$1 = $16;
     break;
    }
   }
   $88 = HEAP32[915133] | 0;
   if ($R$3 >>> 0 < $88 >>> 0) _abort();
   HEAP32[$R$3 + 24 >> 2] = $45;
   $91 = $15 + 16 | 0;
   $92 = HEAP32[$91 >> 2] | 0;
   do if ($92 | 0) if ($92 >>> 0 < $88 >>> 0) _abort(); else {
    HEAP32[$R$3 + 16 >> 2] = $92;
    HEAP32[$92 + 24 >> 2] = $R$3;
    break;
   } while (0);
   $98 = HEAP32[$91 + 4 >> 2] | 0;
   if (!$98) {
    $p$1 = $15;
    $psize$1 = $16;
   } else if ($98 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort(); else {
    HEAP32[$R$3 + 20 >> 2] = $98;
    HEAP32[$98 + 24 >> 2] = $R$3;
    $p$1 = $15;
    $psize$1 = $16;
    break;
   }
  }
 } else {
  $p$1 = $1;
  $psize$1 = $8;
 } while (0);
 if ($p$1 >>> 0 >= $9 >>> 0) _abort();
 $113 = $9 + 4 | 0;
 $114 = HEAP32[$113 >> 2] | 0;
 if (!($114 & 1)) _abort();
 if (!($114 & 2)) {
  if (($9 | 0) == (HEAP32[915135] | 0)) {
   $122 = (HEAP32[915132] | 0) + $psize$1 | 0;
   HEAP32[915132] = $122;
   HEAP32[915135] = $p$1;
   HEAP32[$p$1 + 4 >> 2] = $122 | 1;
   if (($p$1 | 0) != (HEAP32[915134] | 0)) return;
   HEAP32[915134] = 0;
   HEAP32[915131] = 0;
   return;
  }
  if (($9 | 0) == (HEAP32[915134] | 0)) {
   $130 = (HEAP32[915131] | 0) + $psize$1 | 0;
   HEAP32[915131] = $130;
   HEAP32[915134] = $p$1;
   HEAP32[$p$1 + 4 >> 2] = $130 | 1;
   HEAP32[$p$1 + $130 >> 2] = $130;
   return;
  }
  $135 = ($114 & -8) + $psize$1 | 0;
  $136 = $114 >>> 3;
  do if ($114 >>> 0 < 256) {
   $139 = HEAP32[$9 + 8 >> 2] | 0;
   $141 = HEAP32[$9 + 12 >> 2] | 0;
   $143 = 3660556 + ($136 << 1 << 2) | 0;
   if (($139 | 0) != ($143 | 0)) {
    if ($139 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort();
    if ((HEAP32[$139 + 12 >> 2] | 0) != ($9 | 0)) _abort();
   }
   if (($141 | 0) == ($139 | 0)) {
    HEAP32[915129] = HEAP32[915129] & ~(1 << $136);
    break;
   }
   if (($141 | 0) == ($143 | 0)) $$pre$phi41Z2D = $141 + 8 | 0; else {
    if ($141 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort();
    $158 = $141 + 8 | 0;
    if ((HEAP32[$158 >> 2] | 0) == ($9 | 0)) $$pre$phi41Z2D = $158; else _abort();
   }
   HEAP32[$139 + 12 >> 2] = $141;
   HEAP32[$$pre$phi41Z2D >> 2] = $139;
  } else {
   $163 = HEAP32[$9 + 24 >> 2] | 0;
   $165 = HEAP32[$9 + 12 >> 2] | 0;
   do if (($165 | 0) == ($9 | 0)) {
    $177 = $9 + 16 | 0;
    $178 = $177 + 4 | 0;
    $179 = HEAP32[$178 >> 2] | 0;
    if (!$179) {
     $181 = HEAP32[$177 >> 2] | 0;
     if (!$181) {
      $R8$3 = 0;
      break;
     } else {
      $R8$1 = $181;
      $RP10$1 = $177;
     }
    } else {
     $R8$1 = $179;
     $RP10$1 = $178;
    }
    while (1) {
     $183 = $R8$1 + 20 | 0;
     $184 = HEAP32[$183 >> 2] | 0;
     if ($184 | 0) {
      $R8$1 = $184;
      $RP10$1 = $183;
      continue;
     }
     $186 = $R8$1 + 16 | 0;
     $187 = HEAP32[$186 >> 2] | 0;
     if (!$187) {
      $R8$1$lcssa = $R8$1;
      $RP10$1$lcssa = $RP10$1;
      break;
     } else {
      $R8$1 = $187;
      $RP10$1 = $186;
     }
    }
    if ($RP10$1$lcssa >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort(); else {
     HEAP32[$RP10$1$lcssa >> 2] = 0;
     $R8$3 = $R8$1$lcssa;
     break;
    }
   } else {
    $168 = HEAP32[$9 + 8 >> 2] | 0;
    if ($168 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort();
    $171 = $168 + 12 | 0;
    if ((HEAP32[$171 >> 2] | 0) != ($9 | 0)) _abort();
    $174 = $165 + 8 | 0;
    if ((HEAP32[$174 >> 2] | 0) == ($9 | 0)) {
     HEAP32[$171 >> 2] = $165;
     HEAP32[$174 >> 2] = $168;
     $R8$3 = $165;
     break;
    } else _abort();
   } while (0);
   if ($163 | 0) {
    $193 = HEAP32[$9 + 28 >> 2] | 0;
    $194 = 3660820 + ($193 << 2) | 0;
    if (($9 | 0) == (HEAP32[$194 >> 2] | 0)) {
     HEAP32[$194 >> 2] = $R8$3;
     if (!$R8$3) {
      HEAP32[915130] = HEAP32[915130] & ~(1 << $193);
      break;
     }
    } else {
     if ($163 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort();
     $203 = $163 + 16 | 0;
     if ((HEAP32[$203 >> 2] | 0) == ($9 | 0)) HEAP32[$203 >> 2] = $R8$3; else HEAP32[$163 + 20 >> 2] = $R8$3;
     if (!$R8$3) break;
    }
    $208 = HEAP32[915133] | 0;
    if ($R8$3 >>> 0 < $208 >>> 0) _abort();
    HEAP32[$R8$3 + 24 >> 2] = $163;
    $211 = $9 + 16 | 0;
    $212 = HEAP32[$211 >> 2] | 0;
    do if ($212 | 0) if ($212 >>> 0 < $208 >>> 0) _abort(); else {
     HEAP32[$R8$3 + 16 >> 2] = $212;
     HEAP32[$212 + 24 >> 2] = $R8$3;
     break;
    } while (0);
    $218 = HEAP32[$211 + 4 >> 2] | 0;
    if ($218 | 0) if ($218 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort(); else {
     HEAP32[$R8$3 + 20 >> 2] = $218;
     HEAP32[$218 + 24 >> 2] = $R8$3;
     break;
    }
   }
  } while (0);
  HEAP32[$p$1 + 4 >> 2] = $135 | 1;
  HEAP32[$p$1 + $135 >> 2] = $135;
  if (($p$1 | 0) == (HEAP32[915134] | 0)) {
   HEAP32[915131] = $135;
   return;
  } else $psize$2 = $135;
 } else {
  HEAP32[$113 >> 2] = $114 & -2;
  HEAP32[$p$1 + 4 >> 2] = $psize$1 | 1;
  HEAP32[$p$1 + $psize$1 >> 2] = $psize$1;
  $psize$2 = $psize$1;
 }
 $233 = $psize$2 >>> 3;
 if ($psize$2 >>> 0 < 256) {
  $236 = 3660556 + ($233 << 1 << 2) | 0;
  $237 = HEAP32[915129] | 0;
  $238 = 1 << $233;
  if (!($237 & $238)) {
   HEAP32[915129] = $237 | $238;
   $$pre$phiZ2D = $236 + 8 | 0;
   $F18$0 = $236;
  } else {
   $242 = $236 + 8 | 0;
   $243 = HEAP32[$242 >> 2] | 0;
   if ($243 >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort(); else {
    $$pre$phiZ2D = $242;
    $F18$0 = $243;
   }
  }
  HEAP32[$$pre$phiZ2D >> 2] = $p$1;
  HEAP32[$F18$0 + 12 >> 2] = $p$1;
  HEAP32[$p$1 + 8 >> 2] = $F18$0;
  HEAP32[$p$1 + 12 >> 2] = $236;
  return;
 }
 $249 = $psize$2 >>> 8;
 if (!$249) $I20$0 = 0; else if ($psize$2 >>> 0 > 16777215) $I20$0 = 31; else {
  $254 = ($249 + 1048320 | 0) >>> 16 & 8;
  $255 = $249 << $254;
  $258 = ($255 + 520192 | 0) >>> 16 & 4;
  $260 = $255 << $258;
  $263 = ($260 + 245760 | 0) >>> 16 & 2;
  $268 = 14 - ($258 | $254 | $263) + ($260 << $263 >>> 15) | 0;
  $I20$0 = $psize$2 >>> ($268 + 7 | 0) & 1 | $268 << 1;
 }
 $274 = 3660820 + ($I20$0 << 2) | 0;
 HEAP32[$p$1 + 28 >> 2] = $I20$0;
 HEAP32[$p$1 + 20 >> 2] = 0;
 HEAP32[$p$1 + 16 >> 2] = 0;
 $278 = HEAP32[915130] | 0;
 $279 = 1 << $I20$0;
 do if (!($278 & $279)) {
  HEAP32[915130] = $278 | $279;
  HEAP32[$274 >> 2] = $p$1;
  HEAP32[$p$1 + 24 >> 2] = $274;
  HEAP32[$p$1 + 12 >> 2] = $p$1;
  HEAP32[$p$1 + 8 >> 2] = $p$1;
 } else {
  $K21$0 = $psize$2 << (($I20$0 | 0) == 31 ? 0 : 25 - ($I20$0 >>> 1) | 0);
  $T$0 = HEAP32[$274 >> 2] | 0;
  while (1) {
   if ((HEAP32[$T$0 + 4 >> 2] & -8 | 0) == ($psize$2 | 0)) {
    $T$0$lcssa = $T$0;
    label = 130;
    break;
   }
   $297 = $T$0 + 16 + ($K21$0 >>> 31 << 2) | 0;
   $299 = HEAP32[$297 >> 2] | 0;
   if (!$299) {
    $$lcssa = $297;
    $T$0$lcssa48 = $T$0;
    label = 127;
    break;
   } else {
    $K21$0 = $K21$0 << 1;
    $T$0 = $299;
   }
  }
  if ((label | 0) == 127) if ($$lcssa >>> 0 < (HEAP32[915133] | 0) >>> 0) _abort(); else {
   HEAP32[$$lcssa >> 2] = $p$1;
   HEAP32[$p$1 + 24 >> 2] = $T$0$lcssa48;
   HEAP32[$p$1 + 12 >> 2] = $p$1;
   HEAP32[$p$1 + 8 >> 2] = $p$1;
   break;
  } else if ((label | 0) == 130) {
   $306 = $T$0$lcssa + 8 | 0;
   $307 = HEAP32[$306 >> 2] | 0;
   $308 = HEAP32[915133] | 0;
   if ($307 >>> 0 >= $308 >>> 0 & $T$0$lcssa >>> 0 >= $308 >>> 0) {
    HEAP32[$307 + 12 >> 2] = $p$1;
    HEAP32[$306 >> 2] = $p$1;
    HEAP32[$p$1 + 8 >> 2] = $307;
    HEAP32[$p$1 + 12 >> 2] = $T$0$lcssa;
    HEAP32[$p$1 + 24 >> 2] = 0;
    break;
   } else _abort();
  }
 } while (0);
 $316 = (HEAP32[915137] | 0) + -1 | 0;
 HEAP32[915137] = $316;
 if (!$316) $sp$0$in$i = 3660972; else return;
 while (1) {
  $sp$0$i = HEAP32[$sp$0$in$i >> 2] | 0;
  if (!$sp$0$i) break; else $sp$0$in$i = $sp$0$i + 8 | 0;
 }
 HEAP32[915137] = -1;
 return;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $26 = 0, $27 = 0, $28 = 0, $29 = 0, $30 = 0, $31 = 0, $48 = 0, $56 = 0, $59 = 0, $6 = 0, $60 = 0, $61 = 0, $64 = 0, $67 = 0, $70 = 0, $77 = 0, $78 = 0, $79 = 0, $does_dst_type_point_to_our_static_type$0$off0 = 0, $does_dst_type_point_to_our_static_type$0$off0$lcssa = 0, $does_dst_type_point_to_our_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$0$off0 = 0, $is_dst_type_derived_from_static_type$1$off0 = 0, $is_dst_type_derived_from_static_type$2$off0 = 0, $p$0 = 0, $p2$0 = 0, $p2$1 = 0, $p2$2 = 0, label = 0;
 L1 : do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
   $6 = $info + 28 | 0;
   if ((HEAP32[$6 >> 2] | 0) != 1) HEAP32[$6 >> 2] = $path_below;
  }
 } else {
  if (($this | 0) != (HEAP32[$info >> 2] | 0)) {
   $59 = HEAP32[$this + 12 >> 2] | 0;
   $60 = $this + 16 + ($59 << 3) | 0;
   __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this + 16 | 0, $info, $current_ptr, $path_below, $use_strcmp);
   $61 = $this + 24 | 0;
   if (($59 | 0) <= 1) break;
   $64 = HEAP32[$this + 8 >> 2] | 0;
   if (!($64 & 2)) {
    $67 = $info + 36 | 0;
    if ((HEAP32[$67 >> 2] | 0) != 1) {
     if (!($64 & 1)) {
      $79 = $info + 54 | 0;
      $p2$2 = $61;
      while (1) {
       if (HEAP8[$79 >> 0] | 0) break L1;
       if ((HEAP32[$67 >> 2] | 0) == 1) break L1;
       __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$2, $info, $current_ptr, $path_below, $use_strcmp);
       $p2$2 = $p2$2 + 8 | 0;
       if ($p2$2 >>> 0 >= $60 >>> 0) break L1;
      }
     }
     $77 = $info + 24 | 0;
     $78 = $info + 54 | 0;
     $p2$1 = $61;
     while (1) {
      if (HEAP8[$78 >> 0] | 0) break L1;
      if ((HEAP32[$67 >> 2] | 0) == 1) if ((HEAP32[$77 >> 2] | 0) == 1) break L1;
      __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$1, $info, $current_ptr, $path_below, $use_strcmp);
      $p2$1 = $p2$1 + 8 | 0;
      if ($p2$1 >>> 0 >= $60 >>> 0) break L1;
     }
    }
   }
   $70 = $info + 54 | 0;
   $p2$0 = $61;
   while (1) {
    if (HEAP8[$70 >> 0] | 0) break L1;
    __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($p2$0, $info, $current_ptr, $path_below, $use_strcmp);
    $p2$0 = $p2$0 + 8 | 0;
    if ($p2$0 >>> 0 >= $60 >>> 0) break L1;
   }
  }
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $14 = $info + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    $20 = $info + 44 | 0;
    if ((HEAP32[$20 >> 2] | 0) == 4) break;
    $26 = $this + 16 + (HEAP32[$this + 12 >> 2] << 3) | 0;
    $27 = $info + 52 | 0;
    $28 = $info + 53 | 0;
    $29 = $info + 54 | 0;
    $30 = $this + 8 | 0;
    $31 = $info + 24 | 0;
    $does_dst_type_point_to_our_static_type$0$off0 = 0;
    $is_dst_type_derived_from_static_type$0$off0 = 0;
    $p$0 = $this + 16 | 0;
    L34 : while (1) {
     if ($p$0 >>> 0 >= $26 >>> 0) {
      $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;
      $is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off0;
      label = 20;
      break;
     }
     HEAP8[$27 >> 0] = 0;
     HEAP8[$28 >> 0] = 0;
     __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0, $info, $current_ptr, $current_ptr, 1, $use_strcmp);
     if (HEAP8[$29 >> 0] | 0) {
      $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;
      $is_dst_type_derived_from_static_type$2$off0 = $is_dst_type_derived_from_static_type$0$off0;
      label = 20;
      break;
     }
     do if (!(HEAP8[$28 >> 0] | 0)) {
      $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;
      $is_dst_type_derived_from_static_type$1$off0 = $is_dst_type_derived_from_static_type$0$off0;
     } else {
      if (!(HEAP8[$27 >> 0] | 0)) if (!(HEAP32[$30 >> 2] & 1)) {
       $does_dst_type_point_to_our_static_type$0$off0$lcssa = $does_dst_type_point_to_our_static_type$0$off0;
       $is_dst_type_derived_from_static_type$2$off0 = 1;
       label = 20;
       break L34;
      } else {
       $does_dst_type_point_to_our_static_type$1$off0 = $does_dst_type_point_to_our_static_type$0$off0;
       $is_dst_type_derived_from_static_type$1$off0 = 1;
       break;
      }
      if ((HEAP32[$31 >> 2] | 0) == 1) {
       label = 25;
       break L34;
      }
      if (!(HEAP32[$30 >> 2] & 2)) {
       label = 25;
       break L34;
      } else {
       $does_dst_type_point_to_our_static_type$1$off0 = 1;
       $is_dst_type_derived_from_static_type$1$off0 = 1;
      }
     } while (0);
     $does_dst_type_point_to_our_static_type$0$off0 = $does_dst_type_point_to_our_static_type$1$off0;
     $is_dst_type_derived_from_static_type$0$off0 = $is_dst_type_derived_from_static_type$1$off0;
     $p$0 = $p$0 + 8 | 0;
    }
    do if ((label | 0) == 20) {
     if (!$does_dst_type_point_to_our_static_type$0$off0$lcssa) {
      HEAP32[$14 >> 2] = $current_ptr;
      $48 = $info + 40 | 0;
      HEAP32[$48 >> 2] = (HEAP32[$48 >> 2] | 0) + 1;
      if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$31 >> 2] | 0) == 2) {
       HEAP8[$29 >> 0] = 1;
       if ($is_dst_type_derived_from_static_type$2$off0) {
        label = 25;
        break;
       } else {
        $56 = 4;
        break;
       }
      }
     }
     if ($is_dst_type_derived_from_static_type$2$off0) label = 25; else $56 = 4;
    } while (0);
    if ((label | 0) == 25) $56 = 3;
    HEAP32[$20 >> 2] = $56;
    break;
   }
  }
  if (($path_below | 0) == 1) HEAP32[$info + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZN6BitmapC2EhRKS_($this, $out_bpp, $bmp) {
 $this = $this | 0;
 $out_bpp = $out_bpp | 0;
 $bmp = $bmp | 0;
 var $$0$i = 0, $$0$i1 = 0, $0 = 0, $10 = 0, $11 = 0, $126 = 0, $127 = 0, $130 = 0, $134 = 0, $16 = 0, $18 = 0, $19 = 0, $2 = 0, $27 = 0, $28 = 0, $30 = 0, $35 = 0, $44 = 0, $47 = 0, $5 = 0, $54 = 0, $59 = 0, $6 = 0, $b$02$i = 0, $dest$015 = 0, $dest$1$lcssa = 0, $dest$110 = 0, $indvars$iv$i = 0, $pixel$0 = 0, $res$0$lcssa$i = 0, $res$01$i = 0, $src$014 = 0, $src$1$lcssa = 0, $src$18 = 0, $x$012 = 0, $y$016 = 0, label = 0;
 $0 = HEAP32[$bmp >> 2] | 0;
 $2 = HEAP16[$0 + 4 >> 1] | 0;
 if (($2 & 255) << 24 >> 24 == $out_bpp << 24 >> 24) {
  HEAP32[$this >> 2] = $0;
  HEAP8[$0 + 5 >> 0] = (($2 & 65535) >>> 8 & 255) + 1 << 24 >> 24;
  return;
 }
 $5 = $out_bpp & 255;
 $6 = HEAP32[$0 >> 2] | 0;
 $10 = __ZN6Bitmap10DataBitmap9constructEhtt($out_bpp, $6 & 65535, $6 >>> 16 & 65535) | 0;
 HEAP32[$this >> 2] = $10;
 $11 = HEAP32[$bmp >> 2] | 0;
 $16 = ((HEAPU8[$11 + 4 >> 0] | 0) + 7 | 0) >>> 3;
 $18 = ($5 + 7 | 0) >>> 3;
 $19 = $18 & 255;
 L5 : do if (HEAP16[$11 + 2 >> 1] | 0) {
  $27 = ($16 | 0) == 0;
  $28 = $19 << 24 >> 24 == 0;
  $30 = $11;
  $dest$015 = HEAP32[$10 + 16 >> 2] | 0;
  $src$014 = HEAP32[$11 + 16 >> 2] | 0;
  $y$016 = 0;
  L7 : while (1) {
   L9 : do if (!(HEAP16[$30 >> 1] | 0)) {
    $35 = $30;
    $dest$1$lcssa = $dest$015;
    $src$1$lcssa = $src$014;
   } else {
    $47 = $30;
    $dest$110 = $dest$015;
    $src$18 = $src$014;
    $x$012 = 0;
    while (1) {
     if ($27) $res$0$lcssa$i = 0; else {
      $b$02$i = 0;
      $res$01$i = 0;
      while (1) {
       $44 = HEAPU8[$src$18 + $b$02$i >> 0] << ($b$02$i << 3) | $res$01$i;
       $b$02$i = $b$02$i + 1 | 0;
       if (($b$02$i | 0) == ($16 | 0)) {
        $res$0$lcssa$i = $44;
        break;
       } else $res$01$i = $44;
      }
     }
     switch (HEAPU8[$47 + 4 >> 0] | 0) {
     case 8:
      {
       $$0$i1 = HEAP32[$47 + 52 + (($res$0$lcssa$i & 255) << 2) >> 2] | 0;
       break;
      }
     case 15:
      {
       $54 = $res$0$lcssa$i >>> 7;
       $59 = $res$0$lcssa$i >>> 2;
       $$0$i1 = $res$0$lcssa$i << 3 & 248 | $59 & 7 | ($59 & 248 | $54 & 7) << 8 | ($54 & 248 | $res$0$lcssa$i >>> 12 & 7) << 16;
       break;
      }
     case 16:
      {
       $$0$i1 = $res$0$lcssa$i << 3 & 248 | $res$0$lcssa$i >>> 2 & 7 | ($res$0$lcssa$i >>> 3 & 252 | $res$0$lcssa$i >>> 9 & 3) << 8 | ($res$0$lcssa$i >>> 8 & 248 | $res$0$lcssa$i >>> 13 & 7) << 16;
       break;
      }
     case 32:
     case 24:
      {
       $$0$i1 = $res$0$lcssa$i & 16777215;
       break;
      }
     default:
      {
       label = 14;
       break L7;
      }
     }
     switch ($out_bpp << 24 >> 24) {
     case 8:
     case 15:
     case 16:
      {
       $pixel$0 = $$0$i1 << 16 & 16711680 | $$0$i1 & 65280 | $$0$i1 >>> 16 & 255;
       break;
      }
     default:
      $pixel$0 = $$0$i1;
     }
     switch ($5 | 0) {
     case 8:
      {
       $$0$i = $pixel$0 >>> 16 & 224 | $pixel$0 >>> 11 & 28 | $pixel$0 >>> 6 & 3;
       break;
      }
     case 15:
      {
       $$0$i = $pixel$0 << 7 & 31744 | $pixel$0 >>> 6 & 992 | $pixel$0 >>> 19 & 31;
       break;
      }
     case 16:
      {
       $$0$i = $pixel$0 << 8 & 63488 | $pixel$0 >>> 5 & 2016 | $pixel$0 >>> 19 & 31;
       break;
      }
     case 24:
     case 32:
      {
       $$0$i = $pixel$0;
       break;
      }
     default:
      {
       label = 21;
       break L7;
      }
     }
     if ($28) $130 = $47; else {
      $indvars$iv$i = 0;
      do {
       HEAP8[$dest$110 + $indvars$iv$i >> 0] = $$0$i >>> ($indvars$iv$i << 3);
       $indvars$iv$i = $indvars$iv$i + 1 | 0;
      } while (($indvars$iv$i & 255) << 24 >> 24 != $19 << 24 >> 24);
      $130 = HEAP32[$bmp >> 2] | 0;
     }
     $126 = $src$18 + $16 | 0;
     $127 = $dest$110 + $18 | 0;
     $x$012 = $x$012 + 1 | 0;
     if ($x$012 >>> 0 >= (HEAPU16[$130 >> 1] | 0) >>> 0) {
      $35 = $130;
      $dest$1$lcssa = $127;
      $src$1$lcssa = $126;
      break L9;
     } else {
      $47 = $130;
      $dest$110 = $127;
      $src$18 = $126;
     }
    }
   } while (0);
   $y$016 = $y$016 + 1 | 0;
   if ($y$016 >>> 0 >= (HEAPU16[$35 + 2 >> 1] | 0) >>> 0) break L5; else {
    $30 = $35;
    $dest$015 = $dest$1$lcssa;
    $src$014 = $src$1$lcssa;
   }
  }
  if ((label | 0) == 14) _exit(0); else if ((label | 0) == 21) ___assert_fail(3658598, 3658604, 409, 3658658);
 } while (0);
 if ($out_bpp << 24 >> 24 != 8) return;
 $134 = (HEAP32[$this >> 2] | 0) + 52 | 0;
 __ZN10BGRPalette11classic_332Ev() | 0;
 _memcpy($134 | 0, 3659320, 1024) | 0;
 return;
}

function __ZN14Front_JS_Natif4drawERK9RDPPatBltRK4Rect($this, $cmd, $clip) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 $clip = $clip | 0;
 var $$0$i1 = 0, $$0$i5 = 0, $1 = 0, $105 = 0, $111 = 0, $112 = 0, $114 = 0, $117 = 0, $119 = 0, $121 = 0, $127 = 0, $130 = 0, $136 = 0, $139 = 0, $140 = 0, $145 = 0, $146 = 0, $149 = 0, $151 = 0, $154 = 0, $160 = 0, $164 = 0, $172 = 0, $176 = 0, $179 = 0, $181 = 0, $187 = 0, $19 = 0, $2 = 0, $204 = 0, $205 = 0, $216 = 0, $217 = 0, $27 = 0, $31 = 0, $44 = 0, $45 = 0, $49 = 0, $5 = 0, $8 = 0, $81 = 0, $rect$sroa$16$0 = 0, $rect$sroa$24$0 = 0;
 $1 = $cmd + 16 | 0;
 $2 = HEAP32[$cmd + 12 >> 2] | 0;
 $5 = HEAPU8[$this + 2580 >> 0] | 0;
 L1 : do switch ($5 | 0) {
 case 8:
  {
   $8 = HEAP32[$this + 2584 + (($2 & 255) << 2) >> 2] | 0;
   $19 = HEAP32[$this + 2584 + ((HEAP32[$1 >> 2] & 255) << 2) >> 2] | 0;
   $$0$i1 = $19 << 16 & 16711680 | $19 & 65280 | $19 >>> 16 & 255;
   $$0$i5 = $8 << 16 & 16711680 | $8 & 65280 | $8 >>> 16 & 255;
   break;
  }
 case 15:
  {
   $27 = $2 >>> 7;
   $31 = $2 >>> 2;
   $44 = HEAP32[$1 >> 2] | 0;
   $45 = $44 >>> 7;
   $49 = $44 >>> 2;
   $$0$i1 = $45 & 248 | $44 >>> 12 & 7 | ($49 & 248 | $45 & 7) << 8 | ($44 << 3 & 248 | $49 & 7) << 16;
   $$0$i5 = $27 & 248 | $2 >>> 12 & 7 | ($31 & 248 | $27 & 7) << 8 | ($2 << 3 & 248 | $31 & 7) << 16;
   break;
  }
 case 16:
  {
   $81 = HEAP32[$1 >> 2] | 0;
   $$0$i1 = $81 >>> 8 & 248 | $81 >>> 13 & 7 | ($81 >>> 3 & 252 | $81 >>> 9 & 3) << 8 | ($81 << 3 & 248 | $81 >>> 2 & 7) << 16;
   $$0$i5 = $2 >>> 8 & 248 | $2 >>> 13 & 7 | ($2 >>> 3 & 252 | $2 >>> 9 & 3) << 8 | ($2 << 3 & 248 | $2 >>> 2 & 7) << 16;
   break;
  }
 case 32:
 case 24:
  {
   switch ($5 | 0) {
   case 24:
   case 32:
    {
     $$0$i1 = HEAP32[$1 >> 2] & 16777215;
     $$0$i5 = $2 & 16777215;
     break L1;
     break;
    }
   default:
    _exit(0);
   }
   break;
  }
 default:
  _exit(0);
 } while (0);
 $105 = HEAP32[$this + 52 >> 2] | 0;
 $111 = ((($105 >>> 16) + 65535 | $105 + 65535) & 32768 | 0) == 0;
 $112 = HEAP16[$clip >> 1] | 0;
 $114 = $112 << 16 >> 16 > 0 ? $112 : 0;
 $117 = HEAP16[$clip + 2 >> 1] | 0;
 $119 = $117 << 16 >> 16 > 0 ? $117 : 0;
 $121 = $111 ? $105 << 16 >> 16 : 0;
 $127 = (HEAPU16[$clip + 4 >> 1] | 0) + ($112 & 65535) << 16 >> 16;
 $130 = $111 ? $105 >> 16 : 0;
 $136 = (HEAPU16[$clip + 6 >> 1] | 0) + ($117 & 65535) << 16 >> 16;
 $139 = (($127 | 0) < ($121 | 0) ? $127 : $121) - ($114 << 16 >> 16) | 0;
 $140 = (($136 | 0) < ($130 | 0) ? $136 : $130) - ($119 << 16 >> 16) | 0;
 $145 = (($140 + 65535 | $139 + 65535) & 32768 | 0) == 0;
 $146 = HEAP16[$cmd >> 1] | 0;
 $149 = ($146 << 16 >> 16 < $114 << 16 >> 16 ? $114 : $146) << 16 >> 16;
 $151 = HEAP16[$cmd + 2 >> 1] | 0;
 $154 = ($151 << 16 >> 16 < $119 << 16 >> 16 ? $119 : $151) << 16 >> 16;
 $160 = (HEAPU16[$cmd + 4 >> 1] | 0) + ($146 & 65535) << 16 >> 16;
 $164 = ($145 ? $139 : 0) + ($114 & 65535) << 16 >> 16;
 $172 = (HEAPU16[$cmd + 6 >> 1] | 0) + ($151 & 65535) << 16 >> 16;
 $176 = ($145 ? $140 : 0) + ($119 & 65535) << 16 >> 16;
 $179 = (($164 | 0) < ($160 | 0) ? $164 : $160) - $149 | 0;
 $181 = (($176 | 0) < ($172 | 0) ? $176 : $172) - $154 | 0;
 $187 = (($181 + 65535 | $179 + 65535) & 32768 | 0) == 0;
 $rect$sroa$16$0 = $187 ? $179 & 65535 : 0;
 $rect$sroa$24$0 = $187 ? $181 & 65535 : 0;
 switch (HEAPU8[$cmd + 8 >> 0] | 0 | 0) {
 case 90:
  {
   _emscripten_asm_const_iiiiiiiiiii(4, $149 | 0, $154 | 0, $rect$sroa$16$0 & 65535 | 0, $rect$sroa$24$0 & 65535 | 0, $$0$i5 >>> 16 & 255 | 0, $$0$i5 >>> 8 & 255 | 0, $$0$i5 & 255 | 0, $$0$i1 >>> 16 & 255 | 0, $$0$i1 >>> 8 & 255 | 0, $$0$i1 & 255 | 0) | 0;
   return;
  }
 case 240:
  {
   $204 = $rect$sroa$16$0 & 65535;
   $205 = $rect$sroa$24$0 & 65535;
   _emscripten_asm_const_iiiiii(3, $149 | 0, $154 | 0, $204 | 0, $205 | 0, $$0$i5 | 0) | 0;
   _emscripten_asm_const_iiiiiiii(5, $149 | 0, $154 | 0, $204 | 0, $205 | 0, $$0$i1 >>> 16 & 255 | 0, $$0$i1 >>> 8 & 255 | 0, $$0$i1 & 255 | 0) | 0;
   return;
  }
 case 0:
  {
   _emscripten_asm_const_iiiiii(3, $149 | 0, $154 | 0, $rect$sroa$16$0 & 65535 | 0, $rect$sroa$24$0 & 65535 | 0, 255) | 0;
   return;
  }
 case 85:
  {
   $216 = $149 + -1 | 0;
   $217 = $154 + -1 | 0;
   _emscripten_asm_const_iiiiiii(6, $216 | 0, $217 | 0, $216 | 0, $217 | 0, ($rect$sroa$16$0 & 65535) + 2 | 0, ($rect$sroa$24$0 & 65535) + 2 | 0) | 0;
   return;
  }
 case 255:
  {
   _emscripten_asm_const_iiiiii(3, $149 | 0, $154 | 0, $rect$sroa$16$0 & 65535 | 0, $rect$sroa$24$0 & 65535 | 0, -1) | 0;
   return;
  }
 default:
  return;
 }
}

function __ZN14Front_JS_Natif4drawERK9RDPMemBltRK4RectRK6Bitmap($this, $cmd, $clip, $bitmap) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 $clip = $clip | 0;
 $bitmap = $bitmap | 0;
 var $1 = 0, $10 = 0, $101 = 0, $105 = 0, $109 = 0, $11 = 0, $111 = 0, $122 = 0, $124 = 0, $13 = 0, $15 = 0, $16 = 0, $18 = 0, $2 = 0, $20 = 0, $21 = 0, $23 = 0, $29 = 0, $3 = 0, $33 = 0, $39 = 0, $42 = 0, $43 = 0, $44 = 0, $45 = 0, $5 = 0, $58 = 0, $59 = 0, $6 = 0, $60 = 0, $62 = 0, $65 = 0, $67 = 0, $7 = 0, $71 = 0, $75 = 0, $77 = 0, $8 = 0, $88 = 0, $90 = 0, $92 = 0, $93 = 0, $94 = 0, $96 = 0, $99 = 0, $bitmapBpp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $bitmapBpp = sp;
 $1 = $cmd + 2 | 0;
 $2 = $1;
 $3 = HEAPU16[$2 >> 1] | HEAPU16[$2 + 2 >> 1] << 16;
 $5 = $1 + 4 | 0;
 $6 = HEAPU16[$5 >> 1] | HEAPU16[$5 + 2 >> 1] << 16;
 $7 = $3 & 65535;
 $8 = _bitshift64Lshr($3 | 0, $6 | 0, 16) | 0;
 $10 = $8 & 65535;
 $11 = _bitshift64Lshr($3 | 0, $6 | 0, 48) | 0;
 $13 = HEAP16[$clip >> 1] | 0;
 $15 = $7 << 16 >> 16 < $13 << 16 >> 16 ? $13 : $7;
 $16 = $15 << 16 >> 16;
 $18 = HEAP16[$clip + 2 >> 1] | 0;
 $20 = $10 << 16 >> 16 < $18 << 16 >> 16 ? $18 : $10;
 $21 = $20 << 16 >> 16;
 $23 = $6 + $3 << 16 >> 16;
 $29 = (HEAPU16[$clip + 4 >> 1] | 0) + ($13 & 65535) << 16 >> 16;
 $33 = $11 + $8 << 16 >> 16;
 $39 = (HEAPU16[$clip + 6 >> 1] | 0) + ($18 & 65535) << 16 >> 16;
 $42 = (($29 | 0) < ($23 | 0) ? $29 : $23) - $16 | 0;
 $43 = $42 & 65535;
 $44 = (($39 | 0) < ($33 | 0) ? $39 : $33) - $21 | 0;
 $45 = $44 & 65535;
 if ($43 << 16 >> 16 == 0 | (($44 + 65535 | $42 + 65535) & 32768 | 0) != 0) {
  STACKTOP = sp;
  return;
 }
 switch (HEAPU8[$cmd + 10 >> 0] | 0 | 0) {
 case 0:
  {
   _emscripten_asm_const_iiiiii(3, $16 | 0, $21 | 0, $42 & 65535 | 0, $44 & 65535 | 0, 255) | 0;
   STACKTOP = sp;
   return;
  }
 case 255:
  {
   _emscripten_asm_const_iiiiii(3, $16 | 0, $21 | 0, $42 & 65535 | 0, $44 & 65535 | 0, -1) | 0;
   STACKTOP = sp;
   return;
  }
 case 204:
  {
   __ZN6BitmapC2EhRKS_($bitmapBpp, 32, $bitmap);
   $58 = HEAP32[$bitmapBpp >> 2] | 0;
   $59 = HEAP32[$58 >> 2] | 0;
   $60 = $59 & 65535;
   $62 = HEAP32[$this + 52 >> 2] | 0;
   $65 = $62 - ($15 & 65535) & 65535;
   $67 = $43 << 16 >> 16 < $65 << 16 >> 16 ? $43 : $65;
   $71 = $59 >>> 16 & 65535;
   $75 = ($62 >>> 16) - ($20 & 65535) & 65535;
   $77 = $45 << 16 >> 16 < $75 << 16 >> 16 ? $45 : $75;
   _emscripten_asm_const_iiiiiii(10, $16 | 0, $21 | 0, ($67 << 16 >> 16 < $60 << 16 >> 16 ? $67 : $60) << 16 >> 16 | 0, ($77 << 16 >> 16 < $71 << 16 >> 16 ? $77 : $71) << 16 >> 16 | 0, HEAP32[$58 + 16 >> 2] | 0, HEAP32[$58 + 12 >> 2] | 0) | 0;
   if ($58 | 0) {
    $88 = $58 + 5 | 0;
    $90 = (HEAP8[$88 >> 0] | 0) + -1 << 24 >> 24;
    HEAP8[$88 >> 0] = $90;
    if (!($90 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($58);
    HEAP32[$bitmapBpp >> 2] = 0;
   }
   STACKTOP = sp;
   return;
  }
 case 238:
  {
   __ZN6BitmapC2EhRKS_($bitmapBpp, 32, $bitmap);
   $92 = HEAP32[$bitmapBpp >> 2] | 0;
   $93 = HEAP32[$92 >> 2] | 0;
   $94 = $93 & 65535;
   $96 = HEAP32[$this + 52 >> 2] | 0;
   $99 = $96 - ($15 & 65535) & 65535;
   $101 = $43 << 16 >> 16 < $99 << 16 >> 16 ? $43 : $99;
   $105 = $93 >>> 16 & 65535;
   $109 = ($96 >>> 16) - ($20 & 65535) & 65535;
   $111 = $45 << 16 >> 16 < $109 << 16 >> 16 ? $45 : $109;
   _emscripten_asm_const_iiiiiii(10, $16 | 0, $21 | 0, ($101 << 16 >> 16 < $94 << 16 >> 16 ? $101 : $94) << 16 >> 16 | 0, ($111 << 16 >> 16 < $105 << 16 >> 16 ? $111 : $105) << 16 >> 16 | 0, HEAP32[$92 + 16 >> 2] | 0, HEAP32[$92 + 12 >> 2] | 0) | 0;
   if ($92 | 0) {
    $122 = $92 + 5 | 0;
    $124 = (HEAP8[$122 >> 0] | 0) + -1 << 24 >> 24;
    HEAP8[$122 >> 0] = $124;
    if (!($124 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($92);
    HEAP32[$bitmapBpp >> 2] = 0;
   }
   STACKTOP = sp;
   return;
  }
 default:
  {
   STACKTOP = sp;
   return;
  }
 }
}

function __ZN14ClientTimeZoneC2Ev($this) {
 $this = $this | 0;
 var $0 = 0, $110 = 0, $2 = 0, $20 = 0, $5 = 0, $50 = 0, $60 = 0, $62 = 0, $65 = 0, $80 = 0, $i$02$i = 0, $i$02$i2 = 0, $i$1$i = 0, $i$1$i6 = 0, $i_t$01$i = 0, $i_t$01$i3 = 0, $ucode$0$i = 0, $ucode$0$i5 = 0, label = 0, $i_t$01$i3$looptemp = 0, $i_t$01$i$looptemp = 0;
 $0 = $this + 168 | 0;
 _memset($this | 0, 0, 172) | 0;
 $2 = 71;
 $i$02$i2 = 0;
 $i_t$01$i3 = 0;
 L1 : while (1) {
  switch ($2 >>> 4 | 0) {
  case 11:
  case 10:
  case 9:
  case 8:
   {
    break L1;
    break;
   }
  case 7:
  case 6:
  case 5:
  case 4:
  case 3:
  case 2:
  case 1:
  case 0:
   {
    $i$1$i6 = $i$02$i2;
    $ucode$0$i5 = $2;
    break;
   }
  case 13:
  case 12:
   {
    $5 = $i$02$i2 + 1 | 0;
    $i$1$i6 = $5;
    $ucode$0$i5 = (HEAPU8[3658296 + $5 >> 0] | 0) & 63 | $2 << 6 & 1984;
    break;
   }
  case 14:
   {
    $20 = $i$02$i2 + 2 | 0;
    $i$1$i6 = $20;
    $ucode$0$i5 = (HEAPU8[3658296 + ($i$02$i2 + 1) >> 0] | 0) << 6 & 4032 | $2 << 12 & 61440 | (HEAPU8[3658296 + $20 >> 0] | 0) & 63;
    break;
   }
  case 15:
   {
    $i$1$i6 = $i$02$i2 + 3 | 0;
    $ucode$0$i5 = (HEAPU8[3658296 + ($i$02$i2 + 1) >> 0] | 0) << 6 & 4032 | $2 << 12 & 258048 | (HEAPU8[3658296 + ($i$02$i2 + 2) >> 0] | 0) & 63;
    break;
   }
  default:
   {
    label = 6;
    break L1;
   }
  }
  $i_t$01$i3$looptemp = $i_t$01$i3;
  $i_t$01$i3 = $i_t$01$i3 + 2 | 0;
  if ($i_t$01$i3 >>> 0 > 64) break;
  HEAP8[$this + 4 + $i_t$01$i3$looptemp >> 0] = $ucode$0$i5;
  HEAP8[($i_t$01$i3$looptemp | 1) + ($this + 4) >> 0] = $ucode$0$i5 >>> 8;
  $50 = $i$1$i6 + 1 | 0;
  if (($50 | 0) == 3) break; else {
   $2 = HEAPU8[3658296 + $50 >> 0] | 0;
   $i$02$i2 = $50;
  }
 }
 if ((label | 0) == 6) {}
 HEAP16[$this + 68 >> 1] = 0;
 HEAP16[$this + 70 >> 1] = 10;
 HEAP16[$this + 72 >> 1] = 0;
 HEAP16[$this + 74 >> 1] = 5;
 HEAP16[$this + 76 >> 1] = 2;
 $60 = $this + 78 | 0;
 HEAP16[$60 >> 1] = 0;
 HEAP16[$60 + 2 >> 1] = 0;
 HEAP16[$60 + 4 >> 1] = 0;
 HEAP16[$60 + 6 >> 1] = 0;
 HEAP16[$60 + 8 >> 1] = 0;
 $62 = 71;
 $i$02$i = 0;
 $i_t$01$i = 0;
 L12 : while (1) {
  switch ($62 >>> 4 | 0) {
  case 11:
  case 10:
  case 9:
  case 8:
   {
    label = 17;
    break L12;
    break;
   }
  case 7:
  case 6:
  case 5:
  case 4:
  case 3:
  case 2:
  case 1:
  case 0:
   {
    $i$1$i = $i$02$i;
    $ucode$0$i = $62;
    break;
   }
  case 13:
  case 12:
   {
    $65 = $i$02$i + 1 | 0;
    $i$1$i = $65;
    $ucode$0$i = (HEAPU8[3658300 + $65 >> 0] | 0) & 63 | $62 << 6 & 1984;
    break;
   }
  case 14:
   {
    $80 = $i$02$i + 2 | 0;
    $i$1$i = $80;
    $ucode$0$i = (HEAPU8[3658300 + ($i$02$i + 1) >> 0] | 0) << 6 & 4032 | $62 << 12 & 61440 | (HEAPU8[3658300 + $80 >> 0] | 0) & 63;
    break;
   }
  case 15:
   {
    $i$1$i = $i$02$i + 3 | 0;
    $ucode$0$i = (HEAPU8[3658300 + ($i$02$i + 1) >> 0] | 0) << 6 & 4032 | $62 << 12 & 258048 | (HEAPU8[3658300 + ($i$02$i + 2) >> 0] | 0) & 63;
    break;
   }
  default:
   {
    label = 14;
    break L12;
   }
  }
  $i_t$01$i$looptemp = $i_t$01$i;
  $i_t$01$i = $i_t$01$i + 2 | 0;
  if ($i_t$01$i >>> 0 > 64) {
   label = 17;
   break;
  }
  HEAP8[$this + 88 + $i_t$01$i$looptemp >> 0] = $ucode$0$i;
  HEAP8[($i_t$01$i$looptemp | 1) + ($this + 88) >> 0] = $ucode$0$i >>> 8;
  $110 = $i$1$i + 1 | 0;
  if (($110 | 0) == 19) {
   label = 17;
   break;
  } else {
   $62 = HEAPU8[3658300 + $110 >> 0] | 0;
   $i$02$i = $110;
  }
 }
 if ((label | 0) == 14) {} else if ((label | 0) == 17) {
  HEAP16[$this + 152 >> 1] = 0;
  HEAP16[$this + 154 >> 1] = 3;
  HEAP16[$this + 156 >> 1] = 0;
  HEAP16[$this + 158 >> 1] = 5;
  HEAP16[$this + 160 >> 1] = 1;
  HEAP16[$this + 162 >> 1] = 0;
  HEAP16[$this + 164 >> 1] = 0;
  HEAP16[$this + 166 >> 1] = 0;
  HEAP32[$0 >> 2] = -60;
  return;
 }
}

function ___stdio_write($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 var $$0 = 0, $0 = 0, $1 = 0, $10 = 0, $15 = 0, $20 = 0, $25 = 0, $3 = 0, $34 = 0, $36 = 0, $38 = 0, $49 = 0, $5 = 0, $9 = 0, $cnt$0 = 0, $cnt$1 = 0, $iov$0 = 0, $iov$0$lcssa11 = 0, $iov$1 = 0, $iovcnt$0 = 0, $iovcnt$0$lcssa12 = 0, $iovcnt$1 = 0, $iovs = 0, $rem$0 = 0, $vararg_buffer = 0, $vararg_buffer3 = 0, label = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 48 | 0;
 $vararg_buffer3 = sp + 16 | 0;
 $vararg_buffer = sp;
 $iovs = sp + 32 | 0;
 $0 = $f + 28 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 HEAP32[$iovs >> 2] = $1;
 $3 = $f + 20 | 0;
 $5 = (HEAP32[$3 >> 2] | 0) - $1 | 0;
 HEAP32[$iovs + 4 >> 2] = $5;
 HEAP32[$iovs + 8 >> 2] = $buf;
 HEAP32[$iovs + 12 >> 2] = $len;
 $9 = $f + 60 | 0;
 $10 = $f + 44 | 0;
 $iov$0 = $iovs;
 $iovcnt$0 = 2;
 $rem$0 = $5 + $len | 0;
 while (1) {
  if (!(HEAP32[915117] | 0)) {
   HEAP32[$vararg_buffer3 >> 2] = HEAP32[$9 >> 2];
   HEAP32[$vararg_buffer3 + 4 >> 2] = $iov$0;
   HEAP32[$vararg_buffer3 + 8 >> 2] = $iovcnt$0;
   $cnt$0 = ___syscall_ret(___syscall146(146, $vararg_buffer3 | 0) | 0) | 0;
  } else {
   _pthread_cleanup_push(21, $f | 0);
   HEAP32[$vararg_buffer >> 2] = HEAP32[$9 >> 2];
   HEAP32[$vararg_buffer + 4 >> 2] = $iov$0;
   HEAP32[$vararg_buffer + 8 >> 2] = $iovcnt$0;
   $15 = ___syscall_ret(___syscall146(146, $vararg_buffer | 0) | 0) | 0;
   _pthread_cleanup_pop(0);
   $cnt$0 = $15;
  }
  if (($rem$0 | 0) == ($cnt$0 | 0)) {
   label = 6;
   break;
  }
  if (($cnt$0 | 0) < 0) {
   $iov$0$lcssa11 = $iov$0;
   $iovcnt$0$lcssa12 = $iovcnt$0;
   label = 8;
   break;
  }
  $34 = $rem$0 - $cnt$0 | 0;
  $36 = HEAP32[$iov$0 + 4 >> 2] | 0;
  if ($cnt$0 >>> 0 > $36 >>> 0) {
   $38 = HEAP32[$10 >> 2] | 0;
   HEAP32[$0 >> 2] = $38;
   HEAP32[$3 >> 2] = $38;
   $49 = HEAP32[$iov$0 + 12 >> 2] | 0;
   $cnt$1 = $cnt$0 - $36 | 0;
   $iov$1 = $iov$0 + 8 | 0;
   $iovcnt$1 = $iovcnt$0 + -1 | 0;
  } else if (($iovcnt$0 | 0) == 2) {
   HEAP32[$0 >> 2] = (HEAP32[$0 >> 2] | 0) + $cnt$0;
   $49 = $36;
   $cnt$1 = $cnt$0;
   $iov$1 = $iov$0;
   $iovcnt$1 = 2;
  } else {
   $49 = $36;
   $cnt$1 = $cnt$0;
   $iov$1 = $iov$0;
   $iovcnt$1 = $iovcnt$0;
  }
  HEAP32[$iov$1 >> 2] = (HEAP32[$iov$1 >> 2] | 0) + $cnt$1;
  HEAP32[$iov$1 + 4 >> 2] = $49 - $cnt$1;
  $iov$0 = $iov$1;
  $iovcnt$0 = $iovcnt$1;
  $rem$0 = $34;
 }
 if ((label | 0) == 6) {
  $20 = HEAP32[$10 >> 2] | 0;
  HEAP32[$f + 16 >> 2] = $20 + (HEAP32[$f + 48 >> 2] | 0);
  $25 = $20;
  HEAP32[$0 >> 2] = $25;
  HEAP32[$3 >> 2] = $25;
  $$0 = $len;
 } else if ((label | 0) == 8) {
  HEAP32[$f + 16 >> 2] = 0;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$3 >> 2] = 0;
  HEAP32[$f >> 2] = HEAP32[$f >> 2] | 32;
  if (($iovcnt$0$lcssa12 | 0) == 2) $$0 = 0; else $$0 = $len - (HEAP32[$iov$0$lcssa11 + 4 >> 2] | 0) | 0;
 }
 STACKTOP = sp;
 return $$0 | 0;
}
function __ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap($this, $bitmap_data, $bmp) {
 $this = $this | 0;
 $bitmap_data = $bitmap_data | 0;
 $bmp = $bmp | 0;
 var $$4 = 0, $$5 = 0, $0 = 0, $1 = 0, $13 = 0, $19 = 0, $20 = 0, $21 = 0, $27 = 0, $29 = 0, $3 = 0, $30 = 0, $32 = 0, $33 = 0, $34 = 0, $37 = 0, $4 = 0, $40 = 0, $43 = 0, $46 = 0, $48 = 0, $5 = 0, $54 = 0, $55 = 0, $56 = 0, $57 = 0, $58 = 0, $61 = 0, $63 = 0, $67 = 0, $71 = 0, $73 = 0, $8 = 0, $90 = 0, $92 = 0, $bitmapBpp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $bitmapBpp = sp;
 $0 = HEAP16[$bitmap_data >> 1] | 0;
 $1 = $0 & 65535;
 $3 = HEAP16[$bitmap_data + 2 >> 1] | 0;
 $4 = $3 & 65535;
 $5 = $bitmap_data + 4 | 0;
 $8 = (HEAPU16[$5 >> 1] | 0) - $1 | 0;
 $13 = (HEAPU16[$bitmap_data + 6 >> 1] | 0) - $4 | 0;
 $19 = (($13 + 4 | $8 + 4) & 32768 | 0) == 0;
 $20 = $this + 52 | 0;
 $21 = HEAP32[$20 >> 2] | 0;
 $27 = ((($21 >>> 16) + 65535 | $21 + 65535) & 32768 | 0) == 0;
 $29 = $0 << 16 >> 16 > 0 ? $0 : 0;
 $30 = $29 << 16 >> 16;
 $32 = $3 << 16 >> 16 > 0 ? $3 : 0;
 $33 = $32 << 16 >> 16;
 $34 = $27 ? $21 << 16 >> 16 : 0;
 $37 = ($19 ? $8 + 5 | 0 : 0) + $1 << 16 >> 16;
 $40 = $27 ? $21 >> 16 : 0;
 $43 = ($19 ? $13 + 5 | 0 : 0) + $4 << 16 >> 16;
 $46 = (($37 | 0) < ($34 | 0) ? $37 : $34) - $30 | 0;
 $48 = (($43 | 0) < ($40 | 0) ? $43 : $40) - $33 | 0;
 $54 = (($48 + 65535 | $46 + 65535) & 32768 | 0) == 0;
 $$4 = $54 ? $48 & 65535 : 0;
 $$5 = $54 ? $46 & 65535 : 0;
 __ZN6BitmapC2EhRKS_($bitmapBpp, 32, $bmp);
 $55 = HEAP32[$bitmapBpp >> 2] | 0;
 $56 = HEAP32[$55 >> 2] | 0;
 $57 = $56 & 65535;
 $58 = HEAP32[$20 >> 2] | 0;
 $61 = $58 - ($29 & 65535) & 65535;
 $63 = $$5 << 16 >> 16 < $61 << 16 >> 16 ? $$5 : $61;
 $67 = $56 >>> 16 & 65535;
 $71 = ($58 >>> 16) - ($32 & 65535) & 65535;
 $73 = $$4 << 16 >> 16 < $71 << 16 >> 16 ? $$4 : $71;
 _emscripten_asm_const_iiiiiiii(2, $30 | 0, $33 | 0, ($63 << 16 >> 16 < $57 << 16 >> 16 ? $63 : $57) << 16 >> 16 | 0, ($73 << 16 >> 16 < $67 << 16 >> 16 ? $73 : $67) << 16 >> 16 | 0, HEAP32[$55 + 16 >> 2] | 0, HEAP32[$55 + 12 >> 2] | 0, ($56 & 65535) + -1 - (HEAPU16[$5 >> 1] | 0) + (HEAPU16[$bitmap_data >> 1] | 0) | 0) | 0;
 if (!$55) {
  STACKTOP = sp;
  return;
 }
 $90 = $55 + 5 | 0;
 $92 = (HEAP8[$90 >> 0] | 0) + -1 << 24 >> 24;
 HEAP8[$90 >> 0] = $92;
 if (!($92 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($55);
 HEAP32[$bitmapBpp >> 2] = 0;
 STACKTOP = sp;
 return;
}

function __ZN14Front_JS_Natif4drawERK9RDPScrBltRK4Rect($this, $cmd, $clip) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 $clip = $clip | 0;
 var $1 = 0, $10 = 0, $13 = 0, $15 = 0, $17 = 0, $23 = 0, $26 = 0, $32 = 0, $35 = 0, $36 = 0, $41 = 0, $42 = 0, $45 = 0, $47 = 0, $50 = 0, $56 = 0, $60 = 0, $68 = 0, $7 = 0, $72 = 0, $75 = 0, $77 = 0, $8 = 0, $89 = 0, $95 = 0;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 $7 = ((($1 >>> 16) + 65535 | $1 + 65535) & 32768 | 0) == 0;
 $8 = HEAP16[$clip >> 1] | 0;
 $10 = $8 << 16 >> 16 > 0 ? $8 : 0;
 $13 = HEAP16[$clip + 2 >> 1] | 0;
 $15 = $13 << 16 >> 16 > 0 ? $13 : 0;
 $17 = $7 ? $1 << 16 >> 16 : 0;
 $23 = (HEAPU16[$clip + 4 >> 1] | 0) + ($8 & 65535) << 16 >> 16;
 $26 = $7 ? $1 >> 16 : 0;
 $32 = (HEAPU16[$clip + 6 >> 1] | 0) + ($13 & 65535) << 16 >> 16;
 $35 = (($23 | 0) < ($17 | 0) ? $23 : $17) - ($10 << 16 >> 16) | 0;
 $36 = (($32 | 0) < ($26 | 0) ? $32 : $26) - ($15 << 16 >> 16) | 0;
 $41 = (($36 + 65535 | $35 + 65535) & 32768 | 0) == 0;
 $42 = HEAP16[$cmd >> 1] | 0;
 $45 = ($42 << 16 >> 16 < $10 << 16 >> 16 ? $10 : $42) << 16 >> 16;
 $47 = HEAP16[$cmd + 2 >> 1] | 0;
 $50 = ($47 << 16 >> 16 < $15 << 16 >> 16 ? $15 : $47) << 16 >> 16;
 $56 = (HEAPU16[$cmd + 4 >> 1] | 0) + ($42 & 65535) << 16 >> 16;
 $60 = ($41 ? $35 : 0) + ($10 & 65535) << 16 >> 16;
 $68 = (HEAPU16[$cmd + 6 >> 1] | 0) + ($47 & 65535) << 16 >> 16;
 $72 = ($41 ? $36 : 0) + ($15 & 65535) << 16 >> 16;
 $75 = (($60 | 0) < ($56 | 0) ? $60 : $56) - $45 | 0;
 $77 = (($72 | 0) < ($68 | 0) ? $72 : $68) - $50 | 0;
 if (($75 & 65535) << 16 >> 16 == 0 | (($77 + 65535 | $75 + 65535) & 32768 | 0) != 0) return;
 $89 = (HEAPU16[$cmd + 10 >> 1] | 0) + $45 - ($42 << 16 >> 16) | 0;
 $95 = (HEAPU16[$cmd + 12 >> 1] | 0) + $50 - ($47 << 16 >> 16) | 0;
 switch (HEAPU8[$cmd + 8 >> 0] | 0 | 0) {
 case 0:
  {
   _emscripten_asm_const_iiiiii(3, $45 | 0, $50 | 0, $75 & 65535 | 0, $77 & 65535 | 0, 255) | 0;
   return;
  }
 case 85:
  {
   _emscripten_asm_const_iiiiiii(8, $89 | 0, $95 | 0, $45 + -1 | 0, $50 + -1 | 0, ($75 & 65535) + 2 | 0, ($77 & 65535) + 2 | 0) | 0;
   return;
  }
 case 255:
  {
   _emscripten_asm_const_iiiiii(3, $45 | 0, $50 | 0, $75 & 65535 | 0, $77 & 65535 | 0, -1) | 0;
   return;
  }
 case 204:
  {
   _emscripten_asm_const_iiiiiii(9, $89 | 0, $95 | 0, $45 + -1 | 0, $50 + -1 | 0, ($75 & 65535) + 2 | 0, ($77 & 65535) + 2 | 0) | 0;
   return;
  }
 default:
  return;
 }
}

function __ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $23 = 0, $24 = 0, $26 = 0, $33 = 0, $43 = 0, $45 = 0, $6 = 0, $is_dst_type_derived_from_static_type$0$off02 = 0, label = 0;
 do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
   $6 = $info + 28 | 0;
   if ((HEAP32[$6 >> 2] | 0) != 1) HEAP32[$6 >> 2] = $path_below;
  }
 } else {
  if (($this | 0) != (HEAP32[$info >> 2] | 0)) {
   $45 = HEAP32[$this + 8 >> 2] | 0;
   FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$45 >> 2] | 0) + 24 >> 2] & 3]($45, $info, $current_ptr, $path_below, $use_strcmp);
   break;
  }
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $14 = $info + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    $20 = $info + 44 | 0;
    if ((HEAP32[$20 >> 2] | 0) == 4) break;
    $23 = $info + 52 | 0;
    HEAP8[$23 >> 0] = 0;
    $24 = $info + 53 | 0;
    HEAP8[$24 >> 0] = 0;
    $26 = HEAP32[$this + 8 >> 2] | 0;
    FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$26 >> 2] | 0) + 20 >> 2] & 7]($26, $info, $current_ptr, $current_ptr, 1, $use_strcmp);
    if (!(HEAP8[$24 >> 0] | 0)) {
     $is_dst_type_derived_from_static_type$0$off02 = 0;
     label = 13;
    } else if (!(HEAP8[$23 >> 0] | 0)) {
     $is_dst_type_derived_from_static_type$0$off02 = 1;
     label = 13;
    } else label = 17;
    do if ((label | 0) == 13) {
     HEAP32[$14 >> 2] = $current_ptr;
     $33 = $info + 40 | 0;
     HEAP32[$33 >> 2] = (HEAP32[$33 >> 2] | 0) + 1;
     if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$info + 24 >> 2] | 0) == 2) {
      HEAP8[$info + 54 >> 0] = 1;
      if ($is_dst_type_derived_from_static_type$0$off02) {
       label = 17;
       break;
      } else {
       $43 = 4;
       break;
      }
     }
     if ($is_dst_type_derived_from_static_type$0$off02) label = 17; else $43 = 4;
    } while (0);
    if ((label | 0) == 17) $43 = 3;
    HEAP32[$20 >> 2] = $43;
    break;
   }
  }
  if (($path_below | 0) == 1) HEAP32[$info + 32 >> 2] = 1;
 } while (0);
 return;
}

function __ZN14Front_JS_Natif4drawERK10RDPDestBltRK4Rect($this, $cmd, $clip) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 $clip = $clip | 0;
 var $1 = 0, $10 = 0, $13 = 0, $15 = 0, $17 = 0, $23 = 0, $26 = 0, $32 = 0, $35 = 0, $36 = 0, $41 = 0, $42 = 0, $45 = 0, $47 = 0, $50 = 0, $56 = 0, $60 = 0, $68 = 0, $7 = 0, $72 = 0, $75 = 0, $77 = 0, $8 = 0, $90 = 0, $91 = 0;
 $1 = HEAP32[$this + 52 >> 2] | 0;
 $7 = ((($1 >>> 16) + 65535 | $1 + 65535) & 32768 | 0) == 0;
 $8 = HEAP16[$clip >> 1] | 0;
 $10 = $8 << 16 >> 16 > 0 ? $8 : 0;
 $13 = HEAP16[$clip + 2 >> 1] | 0;
 $15 = $13 << 16 >> 16 > 0 ? $13 : 0;
 $17 = $7 ? $1 << 16 >> 16 : 0;
 $23 = (HEAPU16[$clip + 4 >> 1] | 0) + ($8 & 65535) << 16 >> 16;
 $26 = $7 ? $1 >> 16 : 0;
 $32 = (HEAPU16[$clip + 6 >> 1] | 0) + ($13 & 65535) << 16 >> 16;
 $35 = (($23 | 0) < ($17 | 0) ? $23 : $17) - ($10 << 16 >> 16) | 0;
 $36 = (($32 | 0) < ($26 | 0) ? $32 : $26) - ($15 << 16 >> 16) | 0;
 $41 = (($36 + 65535 | $35 + 65535) & 32768 | 0) == 0;
 $42 = HEAP16[$cmd >> 1] | 0;
 $45 = ($42 << 16 >> 16 < $10 << 16 >> 16 ? $10 : $42) << 16 >> 16;
 $47 = HEAP16[$cmd + 2 >> 1] | 0;
 $50 = ($47 << 16 >> 16 < $15 << 16 >> 16 ? $15 : $47) << 16 >> 16;
 $56 = (HEAPU16[$cmd + 4 >> 1] | 0) + ($42 & 65535) << 16 >> 16;
 $60 = ($41 ? $35 : 0) + ($10 & 65535) << 16 >> 16;
 $68 = (HEAPU16[$cmd + 6 >> 1] | 0) + ($47 & 65535) << 16 >> 16;
 $72 = ($41 ? $36 : 0) + ($15 & 65535) << 16 >> 16;
 $75 = (($60 | 0) < ($56 | 0) ? $60 : $56) - $45 | 0;
 $77 = (($72 | 0) < ($68 | 0) ? $72 : $68) - $50 | 0;
 if (($75 & 65535) << 16 >> 16 == 0 | (($77 + 65535 | $75 + 65535) & 32768 | 0) != 0) return;
 switch (HEAPU8[$cmd + 8 >> 0] | 0 | 0) {
 case 0:
  {
   _emscripten_asm_const_iiiiii(3, $45 | 0, $50 | 0, $75 & 65535 | 0, $77 & 65535 | 0, 255) | 0;
   return;
  }
 case 85:
  {
   $90 = $45 + -1 | 0;
   $91 = $50 + -1 | 0;
   _emscripten_asm_const_iiiiiii(6, $90 | 0, $91 | 0, $90 | 0, $91 | 0, ($75 & 65535) + 2 | 0, ($77 & 65535) + 2 | 0) | 0;
   return;
  }
 case 255:
  {
   _emscripten_asm_const_iiiiii(3, $45 | 0, $50 | 0, $75 & 65535 | 0, $77 & 65535 | 0, -1) | 0;
   return;
  }
 default:
  return;
 }
}

function __ZN6Bitmap10DataBitmap9constructEhtt($bpp, $cx, $cy) {
 $bpp = $bpp | 0;
 $cx = $cx | 0;
 $cy = $cy | 0;
 var $$3$i = 0, $$lcssa$i = 0, $$lcssa8$i = 0, $10 = 0, $11 = 0, $14 = 0, $19 = 0, $2 = 0, $21 = 0, $26 = 0, $31 = 0, $36 = 0, $46 = 0, $5 = 0, $6 = 0, $8 = 0, label = 0;
 $2 = ($cx & 65535) + 3 & 65532;
 $5 = (($bpp & 255) + 7 | 0) >>> 3;
 $6 = $cy & 65535;
 $8 = Math_imul(Math_imul($6, $5) | 0, $2) | 0;
 $10 = $bpp << 24 >> 24 == 8 ? 1076 : 52;
 $11 = $8 + $10 | 0;
 if ((HEAP32[915091] | 0) >>> 0 < $11 >>> 0) label = 3; else {
  $14 = HEAP32[915090] | 0;
  if (($14 | 0) == (HEAP32[915088] | 0)) label = 3; else {
   $$lcssa$i = 3660360;
   $$lcssa8$i = $14;
   label = 4;
  }
 }
 do if ((label | 0) == 3) {
  if ((HEAP32[915097] | 0) >>> 0 >= $11 >>> 0) {
   $21 = HEAP32[915096] | 0;
   if (($21 | 0) != (HEAP32[915094] | 0)) {
    $$lcssa$i = 3660384;
    $$lcssa8$i = $21;
    label = 4;
    break;
   }
  }
  if ((HEAP32[915103] | 0) >>> 0 >= $11 >>> 0) {
   $26 = HEAP32[915102] | 0;
   if (($26 | 0) != (HEAP32[915100] | 0)) {
    $$lcssa$i = 3660408;
    $$lcssa8$i = $26;
    label = 4;
    break;
   }
  }
  if ((HEAP32[915109] | 0) >>> 0 >= $11 >>> 0) {
   $31 = HEAP32[915108] | 0;
   if (($31 | 0) != (HEAP32[915106] | 0)) {
    $$lcssa$i = 3660432;
    $$lcssa8$i = $31;
    label = 4;
    break;
   }
  }
  if ((HEAP32[915115] | 0) >>> 0 >= $11 >>> 0) {
   $36 = HEAP32[915114] | 0;
   if (($36 | 0) != (HEAP32[915112] | 0)) {
    $$lcssa$i = 3660456;
    $$lcssa8$i = $36;
    label = 4;
    break;
   }
  }
  $$3$i = __Znwj($11) | 0;
 } while (0);
 if ((label | 0) == 4) {
  $19 = $$lcssa8$i + -4 | 0;
  HEAP32[$$lcssa$i >> 2] = $19;
  $$3$i = HEAP32[$19 >> 2] | 0;
 }
 HEAP16[$$3$i >> 1] = $2;
 HEAP16[$$3$i + 2 >> 1] = $cy;
 HEAP8[$$3$i + 4 >> 0] = $bpp;
 HEAP8[$$3$i + 5 >> 0] = 1;
 $46 = Math_imul($2, $5) | 0;
 HEAP32[$$3$i + 8 >> 2] = $46;
 HEAP32[$$3$i + 12 >> 2] = Math_imul($46, $6) | 0;
 HEAP32[$$3$i + 16 >> 2] = $$3$i + $10;
 HEAP32[$$3$i + 20 >> 2] = 0;
 HEAP32[$$3$i + 24 >> 2] = 0;
 HEAP8[$$3$i + 48 >> 0] = 0;
 return $$3$i | 0;
}

function ___dynamic_cast($static_ptr, $static_type, $dst_type, $src2dst_offset) {
 $static_ptr = $static_ptr | 0;
 $static_type = $static_type | 0;
 $dst_type = $dst_type | 0;
 $src2dst_offset = $src2dst_offset | 0;
 var $0 = 0, $10 = 0, $11 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $3 = 0, $5 = 0, $9 = 0, $dst_ptr$0 = 0, $info = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $info = sp;
 $0 = HEAP32[$static_ptr >> 2] | 0;
 $3 = $static_ptr + (HEAP32[$0 + -8 >> 2] | 0) | 0;
 $5 = HEAP32[$0 + -4 >> 2] | 0;
 HEAP32[$info >> 2] = $dst_type;
 HEAP32[$info + 4 >> 2] = $static_ptr;
 HEAP32[$info + 8 >> 2] = $static_type;
 HEAP32[$info + 12 >> 2] = $src2dst_offset;
 $9 = $info + 16 | 0;
 $10 = $info + 20 | 0;
 $11 = $info + 24 | 0;
 $12 = $info + 28 | 0;
 $13 = $info + 32 | 0;
 $14 = $info + 40 | 0;
 $15 = ($5 | 0) == ($dst_type | 0);
 dest = $9;
 stop = dest + 36 | 0;
 do {
  HEAP32[dest >> 2] = 0;
  dest = dest + 4 | 0;
 } while ((dest | 0) < (stop | 0));
 HEAP16[$9 + 36 >> 1] = 0;
 HEAP8[$9 + 38 >> 0] = 0;
 L1 : do if ($15) {
  HEAP32[$info + 48 >> 2] = 1;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$dst_type >> 2] | 0) + 20 >> 2] & 7]($dst_type, $info, $3, $3, 1, 0);
  $dst_ptr$0 = (HEAP32[$11 >> 2] | 0) == 1 ? $3 : 0;
 } else {
  FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$5 >> 2] | 0) + 24 >> 2] & 3]($5, $info, $3, 1, 0);
  switch (HEAP32[$info + 36 >> 2] | 0) {
  case 0:
   {
    $dst_ptr$0 = (HEAP32[$14 >> 2] | 0) == 1 & (HEAP32[$12 >> 2] | 0) == 1 & (HEAP32[$13 >> 2] | 0) == 1 ? HEAP32[$10 >> 2] | 0 : 0;
    break L1;
    break;
   }
  case 1:
   break;
  default:
   {
    $dst_ptr$0 = 0;
    break L1;
   }
  }
  if ((HEAP32[$11 >> 2] | 0) != 1) if (!((HEAP32[$14 >> 2] | 0) == 0 & (HEAP32[$12 >> 2] | 0) == 1 & (HEAP32[$13 >> 2] | 0) == 1)) {
   $dst_ptr$0 = 0;
   break;
  }
  $dst_ptr$0 = HEAP32[$9 >> 2] | 0;
 } while (0);
 STACKTOP = sp;
 return $dst_ptr$0 | 0;
}

function __ZN6Bitmap10DataBitmap8destructEPS0_($cdata) {
 $cdata = $cdata | 0;
 var $1 = 0, $10 = 0, $34 = 0, $__begin$04$lcssa$i = 0, $__begin$04$lcssa$i$i = 0, label = 0;
 $1 = HEAP32[$cdata + 20 >> 2] | 0;
 if ((HEAP32[915086] | 0) >>> 0 <= $1 >>> 0 & (HEAP32[915087] | 0) >>> 0 > $1 >>> 0) {
  $__begin$04$lcssa$i$i = 3660344;
  label = 3;
 } else if ((HEAP32[915092] | 0) >>> 0 <= $1 >>> 0 & (HEAP32[915093] | 0) >>> 0 > $1 >>> 0) {
  $__begin$04$lcssa$i$i = 3660368;
  label = 3;
 } else if ((HEAP32[915098] | 0) >>> 0 <= $1 >>> 0 & (HEAP32[915099] | 0) >>> 0 > $1 >>> 0) {
  $__begin$04$lcssa$i$i = 3660392;
  label = 3;
 } else if ((HEAP32[915104] | 0) >>> 0 <= $1 >>> 0 & (HEAP32[915105] | 0) >>> 0 > $1 >>> 0) {
  $__begin$04$lcssa$i$i = 3660416;
  label = 3;
 } else if ((HEAP32[915110] | 0) >>> 0 <= $1 >>> 0 & (HEAP32[915111] | 0) >>> 0 > $1 >>> 0) {
  $__begin$04$lcssa$i$i = 3660440;
  label = 3;
 } else __ZdlPv($1);
 if ((label | 0) == 3) {
  $10 = $__begin$04$lcssa$i$i + 16 | 0;
  HEAP32[HEAP32[$10 >> 2] >> 2] = $1;
  HEAP32[$10 >> 2] = (HEAP32[$10 >> 2] | 0) + 4;
 }
 if ((HEAP32[915086] | 0) >>> 0 <= $cdata >>> 0 & (HEAP32[915087] | 0) >>> 0 > $cdata >>> 0) $__begin$04$lcssa$i = 3660344; else if ((HEAP32[915092] | 0) >>> 0 <= $cdata >>> 0 & (HEAP32[915093] | 0) >>> 0 > $cdata >>> 0) $__begin$04$lcssa$i = 3660368; else if ((HEAP32[915098] | 0) >>> 0 <= $cdata >>> 0 & (HEAP32[915099] | 0) >>> 0 > $cdata >>> 0) $__begin$04$lcssa$i = 3660392; else if ((HEAP32[915104] | 0) >>> 0 <= $cdata >>> 0 & (HEAP32[915105] | 0) >>> 0 > $cdata >>> 0) $__begin$04$lcssa$i = 3660416; else if ((HEAP32[915110] | 0) >>> 0 <= $cdata >>> 0 & (HEAP32[915111] | 0) >>> 0 > $cdata >>> 0) $__begin$04$lcssa$i = 3660440; else {
  __ZdlPv($cdata);
  return;
 }
 $34 = $__begin$04$lcssa$i + 16 | 0;
 HEAP32[HEAP32[$34 >> 2] >> 2] = $cdata;
 HEAP32[$34 >> 2] = (HEAP32[$34 >> 2] | 0) + 4;
 return;
}

function __ZN14Front_JS_Natif4drawERK10RDPMem3BltRK4RectRK6Bitmap($this, $cmd, $clip, $bitmap) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 $clip = $clip | 0;
 $bitmap = $bitmap | 0;
 var $1 = 0, $12 = 0, $18 = 0, $2 = 0, $24 = 0, $32 = 0, $38 = 0, $41 = 0, $43 = 0, $5 = 0, $51 = 0, $59 = 0, $68 = 0, $70 = 0, $8 = 0, $9 = 0, $bitmapBpp = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $bitmapBpp = sp;
 $1 = HEAP16[$cmd + 2 >> 1] | 0;
 $2 = HEAP16[$clip >> 1] | 0;
 $5 = ($1 << 16 >> 16 < $2 << 16 >> 16 ? $2 : $1) << 16 >> 16;
 $8 = HEAP16[$cmd + 4 >> 1] | 0;
 $9 = HEAP16[$clip + 2 >> 1] | 0;
 $12 = ($8 << 16 >> 16 < $9 << 16 >> 16 ? $9 : $8) << 16 >> 16;
 $18 = (HEAPU16[$cmd + 6 >> 1] | 0) + ($1 & 65535) << 16 >> 16;
 $24 = (HEAPU16[$clip + 4 >> 1] | 0) + ($2 & 65535) << 16 >> 16;
 $32 = (HEAPU16[$cmd + 8 >> 1] | 0) + ($8 & 65535) << 16 >> 16;
 $38 = (HEAPU16[$clip + 6 >> 1] | 0) + ($9 & 65535) << 16 >> 16;
 $41 = (($24 | 0) < ($18 | 0) ? $24 : $18) - $5 | 0;
 $43 = (($38 | 0) < ($32 | 0) ? $38 : $32) - $12 | 0;
 if (($41 & 65535) << 16 >> 16 == 0 | (($43 + 65535 | $41 + 65535) & 32768 | 0) != 0) {
  STACKTOP = sp;
  return;
 }
 $51 = HEAP32[HEAP32[$bitmap >> 2] >> 2] | 0;
 if (($51 & 65535) << 16 >> 16 == 0 | $51 >>> 0 < 65536) {
  STACKTOP = sp;
  return;
 }
 if ((HEAP8[$cmd + 10 >> 0] | 0) != -72) {
  STACKTOP = sp;
  return;
 }
 __ZN6BitmapC2EhRKS_($bitmapBpp, 32, $bitmap);
 $59 = HEAP32[$bitmapBpp >> 2] | 0;
 _emscripten_asm_const_iiiiiiiii(11, $5 | 0, $12 | 0, $41 & 65535 | 0, $43 & 65535 | 0, HEAP32[$59 + 16 >> 2] | 0, HEAP32[$59 + 12 >> 2] | 0, 0, HEAP32[$cmd + 16 >> 2] | 0) | 0;
 if ($59 | 0) {
  $68 = $59 + 5 | 0;
  $70 = (HEAP8[$68 >> 0] | 0) + -1 << 24 >> 24;
  HEAP8[$68 >> 0] = $70;
  if (!($70 << 24 >> 24)) __ZN6Bitmap10DataBitmap8destructEPS0_($59);
  HEAP32[$bitmapBpp >> 2] = 0;
 }
 STACKTOP = sp;
 return;
}

function __ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect($this, $cmd, $clip) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 $clip = $clip | 0;
 var $0 = 0, $1 = 0, $10 = 0, $17 = 0, $23 = 0, $3 = 0, $31 = 0, $37 = 0, $40 = 0, $41 = 0, $46 = 0, $48 = 0, $54 = 0, $57 = 0, $60 = 0, $61 = 0, $65 = 0, $68 = 0, $7 = 0, $72 = 0, $75 = 0, $76 = 0, $8 = 0, $81 = 0, $83 = 0;
 $0 = HEAP16[$clip >> 1] | 0;
 $1 = HEAP16[$cmd >> 1] | 0;
 $3 = $0 << 16 >> 16 < $1 << 16 >> 16 ? $1 : $0;
 $7 = HEAP16[$clip + 2 >> 1] | 0;
 $8 = HEAP16[$cmd + 2 >> 1] | 0;
 $10 = $7 << 16 >> 16 < $8 << 16 >> 16 ? $8 : $7;
 $17 = (HEAPU16[$clip + 4 >> 1] | 0) + ($0 & 65535) << 16 >> 16;
 $23 = (HEAPU16[$cmd + 4 >> 1] | 0) + ($1 & 65535) << 16 >> 16;
 $31 = (HEAPU16[$clip + 6 >> 1] | 0) + ($7 & 65535) << 16 >> 16;
 $37 = (HEAPU16[$cmd + 6 >> 1] | 0) + ($8 & 65535) << 16 >> 16;
 $40 = (($23 | 0) < ($17 | 0) ? $23 : $17) - ($3 << 16 >> 16) | 0;
 $41 = (($37 | 0) < ($31 | 0) ? $37 : $31) - ($10 << 16 >> 16) | 0;
 $46 = (($41 + 65535 | $40 + 65535) & 32768 | 0) == 0;
 $48 = HEAP32[$this + 52 >> 2] | 0;
 $54 = ((($48 >>> 16) + 65535 | $48 + 65535) & 32768 | 0) == 0;
 $57 = ($3 << 16 >> 16 > 0 ? $3 : 0) << 16 >> 16;
 $60 = ($10 << 16 >> 16 > 0 ? $10 : 0) << 16 >> 16;
 $61 = $54 ? $48 << 16 >> 16 : 0;
 $65 = ($46 ? $40 : 0) + ($3 & 65535) << 16 >> 16;
 $68 = $54 ? $48 >> 16 : 0;
 $72 = ($46 ? $41 : 0) + ($10 & 65535) << 16 >> 16;
 $75 = (($65 | 0) < ($61 | 0) ? $65 : $61) - $57 | 0;
 $76 = (($72 | 0) < ($68 | 0) ? $72 : $68) - $60 | 0;
 $81 = (($76 + 65535 | $75 + 65535) & 32768 | 0) == 0;
 $83 = HEAP32[$cmd + 8 >> 2] | 0;
 _emscripten_asm_const_iiiiii(3, $57 | 0, $60 | 0, ($81 ? $75 & 65535 : 0) | 0, ($81 ? $76 & 65535 : 0) | 0, $83 >>> 8 & 248 | $83 >>> 13 & 7 | ($83 >>> 3 & 252 | $83 >>> 9 & 3) << 8 | ($83 << 3 & 248 | $83 >>> 2 & 7) << 16 | 0) | 0;
 return;
}

function __ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $11 = 0, $12 = 0, $15 = 0, $16 = 0, $17 = 0, $20 = 0, $3 = 0, $4 = 0, $5 = 0, $6 = 0, $8 = 0, $p$0 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below); else {
  $3 = $info + 52 | 0;
  $4 = HEAP16[$3 >> 1] | 0;
  $5 = $4 & 255;
  $6 = $info + 53 | 0;
  $8 = ($4 & 65535) >>> 8 & 255;
  $11 = HEAP32[$this + 12 >> 2] | 0;
  $12 = $this + 16 + ($11 << 3) | 0;
  HEAP8[$3 >> 0] = 0;
  HEAP8[$6 >> 0] = 0;
  __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this + 16 | 0, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
  L4 : do if (($11 | 0) > 1) {
   $15 = $info + 24 | 0;
   $16 = $this + 8 | 0;
   $17 = $info + 54 | 0;
   $p$0 = $this + 24 | 0;
   do {
    if (HEAP8[$17 >> 0] | 0) break L4;
    $20 = HEAP16[$3 >> 1] | 0;
    if (!(($20 & 255) << 24 >> 24)) {
     if (($20 & 65535) >= 256) if (!(HEAP32[$16 >> 2] & 1)) break L4;
    } else {
     if ((HEAP32[$15 >> 2] | 0) == 1) break L4;
     if (!(HEAP32[$16 >> 2] & 2)) break L4;
    }
    HEAP8[$3 >> 0] = 0;
    HEAP8[$6 >> 0] = 0;
    __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($p$0, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
    $p$0 = $p$0 + 8 | 0;
   } while ($p$0 >>> 0 < $12 >>> 0);
  } while (0);
  HEAP8[$3 >> 0] = $5;
  HEAP8[$6 >> 0] = $8;
 }
 return;
}

function __ZN14Front_JS_Natif4drawERK9RDPLineToRK4Rect($this, $cmd, $clip) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 $clip = $clip | 0;
 var $$0$i = 0, $1 = 0, $15 = 0, $19 = 0, $3 = 0, $52 = 0, $53 = 0, $56 = 0.0, $58 = 0, $60 = 0.0, $63 = 0.0, $66 = 0.0, $68 = 0, $69 = 0, $7 = 0, $70 = 0, $71 = 0, $x1$0 = 0.0, $x2$0 = 0.0, $y1$0 = 0.0, $y2$0 = 0.0;
 $1 = HEAP32[$cmd + 12 >> 2] | 0;
 $3 = HEAP8[$this + 2580 >> 0] | 0;
 __ZN10BGRPalette11classic_332Ev() | 0;
 switch ($3 & 255 | 0) {
 case 8:
  {
   $7 = HEAP32[3659320 + (($1 & 255) << 2) >> 2] | 0;
   $$0$i = $7 << 16 & 16711680 | $7 & 65280 | $7 >>> 16 & 255;
   break;
  }
 case 15:
  {
   $15 = $1 >>> 7;
   $19 = $1 >>> 2;
   $$0$i = $15 & 248 | $1 >>> 12 & 7 | ($19 & 248 | $15 & 7) << 8 | ($1 << 3 & 248 | $19 & 7) << 16;
   break;
  }
 case 16:
  {
   $$0$i = $1 >>> 8 & 248 | $1 >>> 13 & 7 | ($1 >>> 3 & 252 | $1 >>> 9 & 3) << 8 | ($1 << 3 & 248 | $1 >>> 2 & 7) << 16;
   break;
  }
 case 32:
 case 24:
  {
   $$0$i = $1 & 16777215;
   break;
  }
 default:
  _exit(0);
 }
 $52 = $$0$i >>> 16;
 $53 = $$0$i >>> 8;
 $56 = +(HEAP16[$cmd + 2 >> 1] | 0);
 $58 = HEAP32[$cmd + 4 >> 2] | 0;
 $60 = +(($58 & 65535) << 16 >> 16);
 $63 = +(($58 >>> 16 & 65535) << 16 >> 16);
 $66 = +(HEAP16[$cmd + 8 >> 1] | 0);
 if (!($56 > $63)) {
  $x1$0 = $56;
  $x2$0 = $63;
  $y1$0 = $60;
  $y2$0 = $66;
  $68 = $$0$i & 255;
  $69 = $53 & 255;
  $70 = $52 & 255;
  $71 = _emscripten_asm_const_iddddiii(7, +$x1$0, +$y1$0, +$x2$0, +$y2$0, $68 | 0, $69 | 0, $70 | 0) | 0;
  return;
 }
 $x1$0 = $63;
 $x2$0 = $56;
 $y1$0 = $66;
 $y2$0 = $60;
 $68 = $$0$i & 255;
 $69 = $53 & 255;
 $70 = $52 & 255;
 $71 = _emscripten_asm_const_iddddiii(7, +$x1$0, +$y1$0, +$x2$0, +$y2$0, $68 | 0, $69 | 0, $70 | 0) | 0;
 return;
}

function __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i($this, $info, $dst_ptr, $current_ptr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 var $16 = 0, $17 = 0, $22 = 0, $25 = 0, $5 = 0, $6 = 0;
 HEAP8[$info + 53 >> 0] = 1;
 do if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
  HEAP8[$info + 52 >> 0] = 1;
  $5 = $info + 16 | 0;
  $6 = HEAP32[$5 >> 2] | 0;
  if (!$6) {
   HEAP32[$5 >> 2] = $dst_ptr;
   HEAP32[$info + 24 >> 2] = $path_below;
   HEAP32[$info + 36 >> 2] = 1;
   if (!(($path_below | 0) == 1 ? (HEAP32[$info + 48 >> 2] | 0) == 1 : 0)) break;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  if (($6 | 0) != ($dst_ptr | 0)) {
   $25 = $info + 36 | 0;
   HEAP32[$25 >> 2] = (HEAP32[$25 >> 2] | 0) + 1;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  $16 = $info + 24 | 0;
  $17 = HEAP32[$16 >> 2] | 0;
  if (($17 | 0) == 2) {
   HEAP32[$16 >> 2] = $path_below;
   $22 = $path_below;
  } else $22 = $17;
  if (($22 | 0) == 1 ? (HEAP32[$info + 48 >> 2] | 0) == 1 : 0) HEAP8[$info + 54 >> 0] = 1;
 } while (0);
 return;
}

function __ZN10BGRPalette11classic_332Ev() {
 var $11 = 0, $16 = 0, $17 = 0, $9 = 0, $bindex$04$i = 0, $gindex$03$i = 0;
 if (HEAP8[3659312] | 0) return 3659320;
 if (!(___cxa_guard_acquire(3659312) | 0)) return 3659320; else $bindex$04$i = 0;
 do {
  $9 = $bindex$04$i << 4 | $bindex$04$i | $bindex$04$i << 6 | $bindex$04$i << 2;
  $gindex$03$i = 0;
  do {
   $11 = $gindex$03$i << 2;
   $16 = $9 | ($gindex$03$i << 5 | $11 | $gindex$03$i >>> 1) << 8;
   $17 = $11 | $bindex$04$i;
   HEAP32[3659320 + ($17 << 2) >> 2] = $16;
   HEAP32[3659320 + (($17 | 32) << 2) >> 2] = $16 | 2359296;
   HEAP32[3659320 + (($17 | 64) << 2) >> 2] = $16 | 4784128;
   HEAP32[3659320 + (($17 | 96) << 2) >> 2] = $16 | 7143424;
   HEAP32[3659320 + (($17 | 128) << 2) >> 2] = $16 | 9568256;
   HEAP32[3659320 + (($17 | 160) << 2) >> 2] = $16 | 11927552;
   HEAP32[3659320 + (($17 | 192) << 2) >> 2] = $16 | 14352384;
   HEAP32[3659320 + (($17 | 224) << 2) >> 2] = $16 | 16711680;
   $gindex$03$i = $gindex$03$i + 1 | 0;
  } while (($gindex$03$i | 0) != 8);
  $bindex$04$i = $bindex$04$i + 1 | 0;
 } while (($bindex$04$i | 0) != 4);
 ___cxa_guard_release(3659312);
 return 3659320;
}

function __ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $14 = 0, $20 = 0, $6 = 0;
 do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) {
  if ((HEAP32[$info + 4 >> 2] | 0) == ($current_ptr | 0)) {
   $6 = $info + 28 | 0;
   if ((HEAP32[$6 >> 2] | 0) != 1) HEAP32[$6 >> 2] = $path_below;
  }
 } else if (($this | 0) == (HEAP32[$info >> 2] | 0)) {
  if ((HEAP32[$info + 16 >> 2] | 0) != ($current_ptr | 0)) {
   $14 = $info + 20 | 0;
   if ((HEAP32[$14 >> 2] | 0) != ($current_ptr | 0)) {
    HEAP32[$info + 32 >> 2] = $path_below;
    HEAP32[$14 >> 2] = $current_ptr;
    $20 = $info + 40 | 0;
    HEAP32[$20 >> 2] = (HEAP32[$20 >> 2] | 0) + 1;
    if ((HEAP32[$info + 36 >> 2] | 0) == 1) if ((HEAP32[$info + 24 >> 2] | 0) == 2) HEAP8[$info + 54 >> 0] = 1;
    HEAP32[$info + 44 >> 2] = 4;
    break;
   }
  }
  if (($path_below | 0) == 1) HEAP32[$info + 32 >> 2] = 1;
 } while (0);
 return;
}

function _fflush($f) {
 $f = $f | 0;
 var $$0 = 0, $$012 = 0, $$014 = 0, $23 = 0, $27 = 0, $6 = 0, $phitmp = 0, $r$0$lcssa = 0, $r$03 = 0, $r$1 = 0;
 do if (!$f) {
  if (!(HEAP32[2514] | 0)) $27 = 0; else $27 = _fflush(HEAP32[2514] | 0) | 0;
  ___lock(3660496);
  $$012 = HEAP32[915123] | 0;
  if (!$$012) $r$0$lcssa = $27; else {
   $$014 = $$012;
   $r$03 = $27;
   while (1) {
    if ((HEAP32[$$014 + 76 >> 2] | 0) > -1) $23 = ___lockfile($$014) | 0; else $23 = 0;
    if ((HEAP32[$$014 + 20 >> 2] | 0) >>> 0 > (HEAP32[$$014 + 28 >> 2] | 0) >>> 0) $r$1 = ___fflush_unlocked($$014) | 0 | $r$03; else $r$1 = $r$03;
    if ($23 | 0) ___unlockfile($$014);
    $$014 = HEAP32[$$014 + 56 >> 2] | 0;
    if (!$$014) {
     $r$0$lcssa = $r$1;
     break;
    } else $r$03 = $r$1;
   }
  }
  ___unlock(3660496);
  $$0 = $r$0$lcssa;
 } else {
  if ((HEAP32[$f + 76 >> 2] | 0) <= -1) {
   $$0 = ___fflush_unlocked($f) | 0;
   break;
  }
  $phitmp = (___lockfile($f) | 0) == 0;
  $6 = ___fflush_unlocked($f) | 0;
  if ($phitmp) $$0 = $6; else {
   ___unlockfile($f);
   $$0 = $6;
  }
 } while (0);
 return $$0 | 0;
}

function __ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv($this, $thrown_type, $adjustedPtr) {
 $this = $this | 0;
 $thrown_type = $thrown_type | 0;
 $adjustedPtr = $adjustedPtr | 0;
 var $$0 = 0, $$2 = 0, $2 = 0, $info = 0, dest = 0, sp = 0, stop = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 64 | 0;
 $info = sp;
 if (($this | 0) == ($thrown_type | 0)) $$2 = 1; else if (!$thrown_type) $$2 = 0; else {
  $2 = ___dynamic_cast($thrown_type, 152, 120, 0) | 0;
  if (!$2) $$2 = 0; else {
   dest = $info;
   stop = dest + 56 | 0;
   do {
    HEAP32[dest >> 2] = 0;
    dest = dest + 4 | 0;
   } while ((dest | 0) < (stop | 0));
   HEAP32[$info >> 2] = $2;
   HEAP32[$info + 8 >> 2] = $this;
   HEAP32[$info + 12 >> 2] = -1;
   HEAP32[$info + 48 >> 2] = 1;
   FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$2 >> 2] | 0) + 28 >> 2] & 7]($2, $info, HEAP32[$adjustedPtr >> 2] | 0, 1);
   if ((HEAP32[$info + 24 >> 2] | 0) == 1) {
    HEAP32[$adjustedPtr >> 2] = HEAP32[$info + 16 >> 2];
    $$0 = 1;
   } else $$0 = 0;
   $$2 = $$0;
  }
 }
 STACKTOP = sp;
 return $$2 | 0;
}

function __ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $5 = 0, $6 = 0, $9 = 0, $p$0 = 0;
 L1 : do if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below); else {
  $5 = HEAP32[$this + 12 >> 2] | 0;
  $6 = $this + 16 + ($5 << 3) | 0;
  __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this + 16 | 0, $info, $adjustedPtr, $path_below);
  if (($5 | 0) > 1) {
   $9 = $info + 54 | 0;
   $p$0 = $this + 24 | 0;
   do {
    __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($p$0, $info, $adjustedPtr, $path_below);
    if (HEAP8[$9 >> 0] | 0) break L1;
    $p$0 = $p$0 + 8 | 0;
   } while ($p$0 >>> 0 < $6 >>> 0);
  }
 } while (0);
 return;
}

function __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $0 = 0, $1 = 0, $6 = 0, $9 = 0;
 $0 = $info + 16 | 0;
 $1 = HEAP32[$0 >> 2] | 0;
 do if (!$1) {
  HEAP32[$0 >> 2] = $adjustedPtr;
  HEAP32[$info + 24 >> 2] = $path_below;
  HEAP32[$info + 36 >> 2] = 1;
 } else {
  if (($1 | 0) != ($adjustedPtr | 0)) {
   $9 = $info + 36 | 0;
   HEAP32[$9 >> 2] = (HEAP32[$9 >> 2] | 0) + 1;
   HEAP32[$info + 24 >> 2] = 2;
   HEAP8[$info + 54 >> 0] = 1;
   break;
  }
  $6 = $info + 24 | 0;
  if ((HEAP32[$6 >> 2] | 0) == 2) HEAP32[$6 >> 2] = $path_below;
 } while (0);
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$current_ptr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 20 >> 2] & 7]($8, $info, $dst_ptr, $current_ptr + $offset_to_base$0 | 0, $1 & 2 | 0 ? $path_below : 2, $use_strcmp);
 return;
}

function ___fflush_unlocked($f) {
 $f = $f | 0;
 var $$0 = 0, $0 = 0, $10 = 0, $11 = 0, $12 = 0, $2 = 0, $9 = 0, label = 0;
 $0 = $f + 20 | 0;
 $2 = $f + 28 | 0;
 if ((HEAP32[$0 >> 2] | 0) >>> 0 > (HEAP32[$2 >> 2] | 0) >>> 0) {
  FUNCTION_TABLE_iiii[HEAP32[$f + 36 >> 2] & 7]($f, 0, 0) | 0;
  if (!(HEAP32[$0 >> 2] | 0)) $$0 = -1; else label = 3;
 } else label = 3;
 if ((label | 0) == 3) {
  $9 = $f + 4 | 0;
  $10 = HEAP32[$9 >> 2] | 0;
  $11 = $f + 8 | 0;
  $12 = HEAP32[$11 >> 2] | 0;
  if ($10 >>> 0 < $12 >>> 0) FUNCTION_TABLE_iiii[HEAP32[$f + 40 >> 2] & 7]($f, $10 - $12 | 0, 1) | 0;
  HEAP32[$f + 16 >> 2] = 0;
  HEAP32[$2 >> 2] = 0;
  HEAP32[$0 >> 2] = 0;
  HEAP32[$11 >> 2] = 0;
  HEAP32[$9 >> 2] = 0;
  $$0 = 0;
 }
 return $$0 | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $4 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below); else {
  $4 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiiiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 20 >> 2] & 7]($4, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp);
 }
 return;
}

function __ZNK10__cxxabiv122__base_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib($this, $info, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$current_ptr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 24 >> 2] & 3]($8, $info, $current_ptr + $offset_to_base$0 | 0, $1 & 2 | 0 ? $path_below : 2, $use_strcmp);
 return;
}

function runPostSets() {}
function _memset(ptr, value, num) {
 ptr = ptr | 0;
 value = value | 0;
 num = num | 0;
 var stop = 0, value4 = 0, stop4 = 0, unaligned = 0;
 stop = ptr + num | 0;
 if ((num | 0) >= 20) {
  value = value & 255;
  unaligned = ptr & 3;
  value4 = value | value << 8 | value << 16 | value << 24;
  stop4 = stop & ~3;
  if (unaligned) {
   unaligned = ptr + 4 - unaligned | 0;
   while ((ptr | 0) < (unaligned | 0)) {
    HEAP8[ptr >> 0] = value;
    ptr = ptr + 1 | 0;
   }
  }
  while ((ptr | 0) < (stop4 | 0)) {
   HEAP32[ptr >> 2] = value4;
   ptr = ptr + 4 | 0;
  }
 }
 while ((ptr | 0) < (stop | 0)) {
  HEAP8[ptr >> 0] = value;
  ptr = ptr + 1 | 0;
 }
 return ptr - num | 0;
}

function _memcpy(dest, src, num) {
 dest = dest | 0;
 src = src | 0;
 num = num | 0;
 var ret = 0;
 if ((num | 0) >= 4096) return _emscripten_memcpy_big(dest | 0, src | 0, num | 0) | 0;
 ret = dest | 0;
 if ((dest & 3) == (src & 3)) {
  while (dest & 3) {
   if (!num) return ret | 0;
   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
   dest = dest + 1 | 0;
   src = src + 1 | 0;
   num = num - 1 | 0;
  }
  while ((num | 0) >= 4) {
   HEAP32[dest >> 2] = HEAP32[src >> 2];
   dest = dest + 4 | 0;
   src = src + 4 | 0;
   num = num - 4 | 0;
  }
 }
 while ((num | 0) > 0) {
  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;
  dest = dest + 1 | 0;
  src = src + 1 | 0;
  num = num - 1 | 0;
 }
 return ret | 0;
}

function __ZNK10__cxxabiv122__base_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $1 = 0, $2 = 0, $8 = 0, $offset_to_base$0 = 0;
 $1 = HEAP32[$this + 4 >> 2] | 0;
 $2 = $1 >> 8;
 if (!($1 & 1)) $offset_to_base$0 = $2; else $offset_to_base$0 = HEAP32[(HEAP32[$adjustedPtr >> 2] | 0) + $2 >> 2] | 0;
 $8 = HEAP32[$this >> 2] | 0;
 FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$8 >> 2] | 0) + 28 >> 2] & 7]($8, $info, $adjustedPtr + $offset_to_base$0 | 0, $1 & 2 | 0 ? $path_below : 2);
 return;
}

function ___stdio_seek($f, $off, $whence) {
 $f = $f | 0;
 $off = $off | 0;
 $whence = $whence | 0;
 var $5 = 0, $ret = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 32 | 0;
 $vararg_buffer = sp;
 $ret = sp + 20 | 0;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$f + 60 >> 2];
 HEAP32[$vararg_buffer + 4 >> 2] = 0;
 HEAP32[$vararg_buffer + 8 >> 2] = $off;
 HEAP32[$vararg_buffer + 12 >> 2] = $ret;
 HEAP32[$vararg_buffer + 16 >> 2] = $whence;
 if ((___syscall_ret(___syscall140(140, $vararg_buffer | 0) | 0) | 0) < 0) {
  HEAP32[$ret >> 2] = -1;
  $5 = -1;
 } else $5 = HEAP32[$ret >> 2] | 0;
 STACKTOP = sp;
 return $5 | 0;
}

function __ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 var $4 = 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below); else {
  $4 = HEAP32[$this + 8 >> 2] | 0;
  FUNCTION_TABLE_viiii[HEAP32[(HEAP32[$4 >> 2] | 0) + 28 >> 2] & 7]($4, $info, $adjustedPtr, $path_below);
 }
 return;
}

function __ZThn8_N14Front_JS_NatifD0Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this + -8 | 0;
 HEAP32[$0 >> 2] = 9488;
 HEAP32[$0 + 8 >> 2] = 9704;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 5780 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 2552 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 2536 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 2524 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 2512 | 0);
 __ZdlPv($0);
 return;
}

function __ZThn8_N14Front_JS_NatifD1Ev($this) {
 $this = $this | 0;
 var $0 = 0;
 $0 = $this + -8 | 0;
 HEAP32[$0 >> 2] = 9488;
 HEAP32[$0 + 8 >> 2] = 9704;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 5780 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 2552 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 2536 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 2524 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($0 + 2512 | 0);
 return;
}

function __ZN14Front_JS_NatifD0Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 9488;
 HEAP32[$this + 8 >> 2] = 9704;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 5780 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 2552 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 2536 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 2524 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 2512 | 0);
 __ZdlPv($this);
 return;
}

function __ZN14Front_JS_NatifD2Ev($this) {
 $this = $this | 0;
 HEAP32[$this >> 2] = 9488;
 HEAP32[$this + 8 >> 2] = 9704;
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 5780 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 2552 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 2536 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 2524 | 0);
 __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this + 2512 | 0);
 return;
}

function ___stdout_write($f, $buf, $len) {
 $f = $f | 0;
 $buf = $buf | 0;
 $len = $len | 0;
 var $9 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 80 | 0;
 $vararg_buffer = sp;
 HEAP32[$f + 36 >> 2] = 5;
 if (!(HEAP32[$f >> 2] & 64)) {
  HEAP32[$vararg_buffer >> 2] = HEAP32[$f + 60 >> 2];
  HEAP32[$vararg_buffer + 4 >> 2] = 21505;
  HEAP32[$vararg_buffer + 8 >> 2] = sp + 12;
  if (___syscall54(54, $vararg_buffer | 0) | 0) HEAP8[$f + 75 >> 0] = -1;
 }
 $9 = ___stdio_write($f, $buf, $len) | 0;
 STACKTOP = sp;
 return $9 | 0;
}

function __Znwj($size) {
 $size = $size | 0;
 var $$lcssa = 0, $$size = 0, $1 = 0, $3 = 0, $5 = 0, label = 0;
 $$size = ($size | 0) == 0 ? 1 : $size;
 while (1) {
  $1 = _malloc($$size) | 0;
  if ($1 | 0) {
   $$lcssa = $1;
   label = 6;
   break;
  }
  $3 = __ZSt15get_new_handlerv() | 0;
  if (!$3) {
   label = 5;
   break;
  }
  FUNCTION_TABLE_v[$3 & 1]();
 }
 if ((label | 0) == 5) {
  $5 = ___cxa_allocate_exception(4) | 0;
  HEAP32[$5 >> 2] = 10148;
  ___cxa_throw($5 | 0, 176, 17);
 } else if ((label | 0) == 6) return $$lcssa | 0;
 return 0;
}

function __ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib($this, $info, $dst_ptr, $current_ptr, $path_below, $use_strcmp) {
 $this = $this | 0;
 $info = $info | 0;
 $dst_ptr = $dst_ptr | 0;
 $current_ptr = $current_ptr | 0;
 $path_below = $path_below | 0;
 $use_strcmp = $use_strcmp | 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info29process_static_type_above_dstEPNS_19__dynamic_cast_infoEPKvS4_i(0, $info, $dst_ptr, $current_ptr, $path_below);
 return;
}

function copyTempDouble(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[ptr >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[ptr + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[ptr + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[ptr + 3 >> 0];
 HEAP8[tempDoublePtr + 4 >> 0] = HEAP8[ptr + 4 >> 0];
 HEAP8[tempDoublePtr + 5 >> 0] = HEAP8[ptr + 5 >> 0];
 HEAP8[tempDoublePtr + 6 >> 0] = HEAP8[ptr + 6 >> 0];
 HEAP8[tempDoublePtr + 7 >> 0] = HEAP8[ptr + 7 >> 0];
}

function __ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi($this, $info, $adjustedPtr, $path_below) {
 $this = $this | 0;
 $info = $info | 0;
 $adjustedPtr = $adjustedPtr | 0;
 $path_below = $path_below | 0;
 if (($this | 0) == (HEAP32[$info + 8 >> 2] | 0)) __ZNK10__cxxabiv117__class_type_info24process_found_base_classEPNS_19__dynamic_cast_infoEPvi(0, $info, $adjustedPtr, $path_below);
 return;
}

function ___stdio_close($f) {
 $f = $f | 0;
 var $3 = 0, $vararg_buffer = 0, sp = 0;
 sp = STACKTOP;
 STACKTOP = STACKTOP + 16 | 0;
 $vararg_buffer = sp;
 HEAP32[$vararg_buffer >> 2] = HEAP32[$f + 60 >> 2];
 $3 = ___syscall_ret(___syscall6(6, $vararg_buffer | 0) | 0) | 0;
 STACKTOP = sp;
 return $3 | 0;
}

function __ZN14Front_JS_Natif15send_to_channelERKN8CHANNELS10ChannelDefEPKhjji($this, $channel, $data, $length, $chunk_size, $flags) {
 $this = $this | 0;
 $channel = $channel | 0;
 $data = $data | 0;
 $length = $length | 0;
 $chunk_size = $chunk_size | 0;
 $flags = $flags | 0;
 return;
}

function __ZN8FrontAPI39disable_input_event_and_graphics_updateEbb($this, $disable_input_event, $disable_graphics_update) {
 $this = $this | 0;
 $disable_input_event = $disable_input_event | 0;
 $disable_graphics_update = $disable_graphics_update | 0;
 return 0;
}

function _bitshift64Lshr(low, high, bits) {
 low = low | 0;
 high = high | 0;
 bits = bits | 0;
 if ((bits | 0) < 32) {
  tempRet0 = high >>> bits;
  return low >>> bits | (high & (1 << bits) - 1) << 32 - bits;
 }
 tempRet0 = 0;
 return high >>> bits - 32 | 0;
}

function copyTempFloat(ptr) {
 ptr = ptr | 0;
 HEAP8[tempDoublePtr >> 0] = HEAP8[ptr >> 0];
 HEAP8[tempDoublePtr + 1 >> 0] = HEAP8[ptr + 1 >> 0];
 HEAP8[tempDoublePtr + 2 >> 0] = HEAP8[ptr + 2 >> 0];
 HEAP8[tempDoublePtr + 3 >> 0] = HEAP8[ptr + 3 >> 0];
}

function dynCall_viiiiii(index, a1, a2, a3, a4, a5, a6) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 a6 = a6 | 0;
 FUNCTION_TABLE_viiiiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0, a6 | 0);
}

function dynCall_viiiii(index, a1, a2, a3, a4, a5) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 a5 = a5 | 0;
 FUNCTION_TABLE_viiiii[index & 3](a1 | 0, a2 | 0, a3 | 0, a4 | 0, a5 | 0);
}

function __ZN14Front_JS_Natif4drawERK13RDPGlyphIndexRK4RectRK10GlyphCache($this, $cmd, $clip, $gly_cache) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 $clip = $clip | 0;
 $gly_cache = $gly_cache | 0;
 return;
}

function dynCall_iiiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 return FUNCTION_TABLE_iiiii[index & 1](a1 | 0, a2 | 0, a3 | 0, a4 | 0) | 0;
}

function dynCall_viiii(index, a1, a2, a3, a4) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 a4 = a4 | 0;
 FUNCTION_TABLE_viiii[index & 7](a1 | 0, a2 | 0, a3 | 0, a4 | 0);
}

function __ZN8FrontAPI23send_data_indication_exEtPKhj($this, $channelId, $data, $size) {
 $this = $this | 0;
 $channelId = $channelId | 0;
 $data = $data | 0;
 $size = $size | 0;
 return;
}

function ___syscall_ret($r) {
 $r = $r | 0;
 var $$0 = 0;
 if ($r >>> 0 > 4294963200) {
  HEAP32[(___errno_location() | 0) >> 2] = 0 - $r;
  $$0 = -1;
 } else $$0 = $r;
 return $$0 | 0;
}

function __ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEED2Ev($this) {
 $this = $this | 0;
 if (HEAP8[$this >> 0] & 1) __ZdlPv(HEAP32[$this + 8 >> 2] | 0);
 return;
}

function __ZN14Front_JS_Natif13server_resizeEiii($this, $width, $height, $bpp) {
 $this = $this | 0;
 $width = $width | 0;
 $height = $height | 0;
 $bpp = $bpp | 0;
 return 0;
}

function __ZNK8FrontAPI20intersect_order_capsEiPh($this, $idx, $proxy_order_caps) {
 $this = $this | 0;
 $idx = $idx | 0;
 $proxy_order_caps = $proxy_order_caps | 0;
 return;
}

function dynCall_iiii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 return FUNCTION_TABLE_iiii[index & 7](a1 | 0, a2 | 0, a3 | 0) | 0;
}

function dynCall_viii(index, a1, a2, a3) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 a3 = a3 | 0;
 FUNCTION_TABLE_viii[index & 31](a1 | 0, a2 | 0, a3 | 0);
}

function ___errno_location() {
 var $$0 = 0;
 if (!(HEAP32[915117] | 0)) $$0 = 3660512; else $$0 = HEAP32[(_pthread_self() | 0) + 64 >> 2] | 0;
 return $$0 | 0;
}
function stackAlloc(size) {
 size = size | 0;
 var ret = 0;
 ret = STACKTOP;
 STACKTOP = STACKTOP + size | 0;
 STACKTOP = STACKTOP + 15 & -16;
 return ret | 0;
}

function __ZN14Front_JS_Natif4drawERKN3RDP14RDPMultiScrBltERK4Rect($this, $cmd, $clip) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 $clip = $clip | 0;
 return;
}

function __ZN14Front_JS_Natif4drawERKN3RDP14RDPMultiPatBltERK4Rect($this, $cmd, $clip) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 $clip = $clip | 0;
 return;
}

function __ZN14Front_JS_Natif4drawERK18RDPMultiOpaqueRectRK4Rect($this, $cmd, $clip) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 $clip = $clip | 0;
 return;
}

function establishStackSpace(stackBase, stackMax) {
 stackBase = stackBase | 0;
 stackMax = stackMax | 0;
 STACKTOP = stackBase;
 STACK_MAX = stackMax;
}

function __ZN14Front_JS_Natif4drawERK14RDPMultiDstBltRK4Rect($this, $cmd, $clip) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 $clip = $clip | 0;
 return;
}

function __ZN14Front_JS_Natif4drawERK12RDPPolygonSCRK4Rect($this, $cmd, $clip) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 $clip = $clip | 0;
 return;
}

function __ZN14Front_JS_Natif4drawERK12RDPPolygonCBRK4Rect($this, $cmd, $clip) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 $clip = $clip | 0;
 return;
}

function __ZN14Front_JS_Natif4drawERK12RDPEllipseSCRK4Rect($this, $cmd, $clip) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 $clip = $clip | 0;
 return;
}

function __ZN14Front_JS_Natif4drawERK12RDPEllipseCBRK4Rect($this, $cmd, $clip) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 $clip = $clip | 0;
 return;
}

function __ZN14Front_JS_Natif4drawERK11RDPPolylineRK4Rect($this, $cmd, $clip) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 $clip = $clip | 0;
 return;
}

function dynCall_iii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 return FUNCTION_TABLE_iii[index & 1](a1 | 0, a2 | 0) | 0;
}

function __ZNK8FrontAPI23intersect_order_caps_exER9OrderCaps($this, $order_caps) {
 $this = $this | 0;
 $order_caps = $order_caps | 0;
 return;
}

function __ZN3gdi10GraphicApi7set_rowEjPKh($this, $rownum, $data) {
 $this = $this | 0;
 $rownum = $rownum | 0;
 $data = $data | 0;
 return;
}

function setThrew(threw, value) {
 threw = threw | 0;
 value = value | 0;
 if (!__THREW__) {
  __THREW__ = threw;
  threwValue = value;
 }
}

function __ZN14Front_JS_Natif4drawERKN3RDP4RAIL19NewOrExistingWindowE($this, $order) {
 $this = $this | 0;
 $order = $order | 0;
 return;
}

function __ZThn8_N14Front_JS_Natif23update_pointer_positionEtt($this, $x, $y) {
 $this = $this | 0;
 $x = $x | 0;
 $y = $y | 0;
 return;
}

function __ZN8FrontAPI30retrieve_client_capability_setER10Capability($this, $caps) {
 $this = $this | 0;
 $caps = $caps | 0;
 return 1;
}

function dynCall_vii(index, a1, a2) {
 index = index | 0;
 a1 = a1 | 0;
 a2 = a2 | 0;
 FUNCTION_TABLE_vii[index & 31](a1 | 0, a2 | 0);
}

function __ZN14Front_JS_Natif14setmod_paletteERK10BGRPalette($this, $palette) {
 $this = $this | 0;
 $palette = $palette | 0;
 return;
}

function b8(p0, p1, p2, p3, p4, p5) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 p5 = p5 | 0;
 abort(8);
}

function __ZN8FrontAPI14session_updateERK10array_viewIKcE($this, $message) {
 $this = $this | 0;
 $message = $message | 0;
 return;
}

function __ZN3gdi10GraphicApi11set_paletteERK10BGRPalette($this, $palette) {
 $this = $this | 0;
 $palette = $palette | 0;
 return;
}

function __ZN14Front_JS_Natif4drawERKN3RDP4RAIL13DeletedWindowE($this, $order) {
 $this = $this | 0;
 $order = $order | 0;
 return;
}

function __ZN14Front_JS_Natif23update_pointer_positionEtt($this, $x, $y) {
 $this = $this | 0;
 $x = $x | 0;
 $y = $y | 0;
 return;
}

function __ZN14Front_JS_Natif4drawERKN3RDP4RAIL10WindowIconE($this, $order) {
 $this = $this | 0;
 $order = $order | 0;
 return;
}

function __ZN14Front_JS_Natif4drawERKN3RDP4RAIL10CachedIconE($this, $order) {
 $this = $this | 0;
 $order = $order | 0;
 return;
}

function __ZN8FrontAPI23set_keyboard_indicatorsEt($this, $LedFlags) {
 $this = $this | 0;
 $LedFlags = $LedFlags | 0;
 return;
}

function __ZN3gdi10GraphicApi4drawERKN3RDP4RAIL19NewOrExistingWindowE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}

function __ZN3gdi10GraphicApi11set_pointerERK7Pointer($this, $cursor) {
 $this = $this | 0;
 $cursor = $cursor | 0;
 return;
}

function __ZN14Front_JS_Natif4drawERKN3RDP11FrameMarkerE($this, $order) {
 $this = $this | 0;
 $order = $order | 0;
 return;
}

function __ZN8FrontAPI21session_probe_startedEb($this, $started) {
 $this = $this | 0;
 $started = $started | 0;
 return;
}

function __ZN3gdi10GraphicApi4drawERKN3RDP4RAIL13DeletedWindowE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}

function __ZN8FrontAPI18send_fastpath_dataER8InStream($this, $data) {
 $this = $this | 0;
 $data = $data | 0;
 return;
}

function __ZSt15get_new_handlerv() {
 var $0 = 0;
 $0 = HEAP32[915253] | 0;
 HEAP32[915253] = $0 + 0;
 return $0 | 0;
}

function __ZN8FrontAPI29set_focus_on_password_textboxEb($this, $set) {
 $this = $this | 0;
 $set = $set | 0;
 return;
}

function dynCall_ii(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 return FUNCTION_TABLE_ii[index & 7](a1 | 0) | 0;
}

function __ZN3gdi10GraphicApi4drawERKN3RDP4RAIL10WindowIconE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}

function __ZN3gdi10GraphicApi4drawERKN3RDP4RAIL10CachedIconE($this, $0) {
 $this = $this | 0;
 $0 = $0 | 0;
 return;
}

function __GLOBAL__sub_I_bitmap_data_allocator_cpp() {
 ___cxa_atexit(20, 3660344, ___dso_handle | 0) | 0;
 return;
}

function b1(p0, p1, p2, p3, p4) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 p4 = p4 | 0;
 abort(1);
}

function __ZN3gdi10GraphicApi4drawERK13RDPBrushCache($this, $cmd) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 return;
}

function __ZN14Front_JS_Natif4drawERK13RDPBrushCache($this, $cmd) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 return;
}

function __ZN4aux_11BmpMemAllocD2Ev($this) {
 $this = $this | 0;
 __ZdlPv(HEAP32[$this + 120 >> 2] | 0);
 return;
}

function __ZN3gdi10GraphicApi4drawERK11RDPColCache($this, $cmd) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 return;
}

function __ZN14Front_JS_Natif4drawERK11RDPColCache($this, $cmd) {
 $this = $this | 0;
 $cmd = $cmd | 0;
 return;
}

function __ZN8FrontAPI22set_consent_ui_visibleEb($this, $set) {
 $this = $this | 0;
 $set = $set | 0;
 return;
}

function b7(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(7);
 return 0;
}

function __ZN10__cxxabiv121__vmi_class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function dynCall_vi(index, a1) {
 index = index | 0;
 a1 = a1 | 0;
 FUNCTION_TABLE_vi[index & 31](a1 | 0);
}

function __ZN10__cxxabiv120__si_class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZNK14Front_JS_Natif16get_channel_listEv($this) {
 $this = $this | 0;
 return $this + 5260 | 0;
}

function __ZN8FrontAPI13set_keylayoutEi($this, $LCID) {
 $this = $this | 0;
 $LCID = $LCID | 0;
 return;
}

function _cleanup_161($p) {
 $p = $p | 0;
 if (!(HEAP32[$p + 68 >> 2] | 0)) ___unlockfile($p);
 return;
}

function __ZN10__cxxabiv117__class_type_infoD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function b10(p0, p1, p2, p3) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 p3 = p3 | 0;
 abort(10);
}

function __ZThn8_N8FrontAPID0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this + -8 | 0);
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNK10__cxxabiv116__shim_type_info5noop1Ev($this) {
 $this = $this | 0;
 return;
}

function b0(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(0);
 return 0;
}

function __ZN8FrontAPI9get_eventEv($this) {
 $this = $this | 0;
 return $this + 24 | 0;
}

function __ZN10__cxxabiv116__shim_type_infoD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9bad_allocD0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN14Front_JS_Natif12begin_updateEv($this) {
 $this = $this | 0;
 return;
}

function __ZNK8FrontAPI13get_keylayoutEv($this) {
 $this = $this | 0;
 return -1;
}

function __ZN8FrontAPID0Ev($this) {
 $this = $this | 0;
 __ZdlPv($this);
 return;
}

function __ZN14Front_JS_Natif10end_updateEv($this) {
 $this = $this | 0;
 return;
}

function dynCall_v(index) {
 index = index | 0;
 FUNCTION_TABLE_v[index & 1]();
}

function __ZNKSt9bad_alloc4whatEv($this) {
 $this = $this | 0;
 return 3659253;
}

function b5(p0, p1, p2) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 p2 = p2 | 0;
 abort(5);
}

function __ZN3gdi10GraphicApi4syncEv($this) {
 $this = $this | 0;
 return;
}

function b9(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(9);
 return 0;
}

function __ZThn8_N8FrontAPID1Ev($this) {
 $this = $this | 0;
 return;
}

function setTempRet0(value) {
 value = value | 0;
 tempRet0 = value;
}

function __ZNSt9type_infoD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9exceptionD2Ev($this) {
 $this = $this | 0;
 return;
}

function __ZNSt9bad_allocD2Ev($this) {
 $this = $this | 0;
 return;
}

function ___cxa_pure_virtual__wrapper() {
 ___cxa_pure_virtual();
}

function __ZdlPv($ptr) {
 $ptr = $ptr | 0;
 _free($ptr);
 return;
}

function __ZN8FrontAPID2Ev($this) {
 $this = $this | 0;
 return;
}

function stackRestore(top) {
 top = top | 0;
 STACKTOP = top;
}

function b3(p0, p1) {
 p0 = p0 | 0;
 p1 = p1 | 0;
 abort(3);
}

function b4(p0) {
 p0 = p0 | 0;
 abort(4);
 return 0;
}

function ___unlockfile($f) {
 $f = $f | 0;
 return;
}

function ___lockfile($f) {
 $f = $f | 0;
 return 0;
}

function getTempRet0() {
 return tempRet0 | 0;
}

function stackSave() {
 return STACKTOP | 0;
}

function b2(p0) {
 p0 = p0 | 0;
 abort(2);
}

function b6() {
 abort(6);
}

// EMSCRIPTEN_END_FUNCS
var FUNCTION_TABLE_iiii = [b0,__ZN8FrontAPI39disable_input_event_and_graphics_updateEbb,___stdout_write,___stdio_seek,__ZNK10__cxxabiv117__class_type_info9can_catchEPKNS_16__shim_type_infoERPv,___stdio_write,b0,b0];
var FUNCTION_TABLE_viiiii = [b1,__ZNK10__cxxabiv117__class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv120__si_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib,__ZNK10__cxxabiv121__vmi_class_type_info16search_below_dstEPNS_19__dynamic_cast_infoEPKvib];
var FUNCTION_TABLE_vi = [b2,__ZN14Front_JS_NatifD2Ev,__ZN14Front_JS_NatifD0Ev,__ZN3gdi10GraphicApi4syncEv,__ZN14Front_JS_Natif12begin_updateEv,__ZN14Front_JS_Natif10end_updateEv,__ZThn8_N14Front_JS_NatifD1Ev,__ZThn8_N14Front_JS_NatifD0Ev,__ZN8FrontAPID2Ev,__ZN8FrontAPID0Ev,__ZThn8_N8FrontAPID1Ev,__ZThn8_N8FrontAPID0Ev,__ZN10__cxxabiv116__shim_type_infoD2Ev,__ZN10__cxxabiv117__class_type_infoD0Ev,__ZNK10__cxxabiv116__shim_type_info5noop1Ev,__ZNK10__cxxabiv116__shim_type_info5noop2Ev,__ZN10__cxxabiv120__si_class_type_infoD0Ev,__ZNSt9bad_allocD2Ev,__ZNSt9bad_allocD0Ev,__ZN10__cxxabiv121__vmi_class_type_infoD0Ev,__ZN4aux_11BmpMemAllocD2Ev,_cleanup_161,b2,b2,b2,b2,b2,b2,b2
,b2,b2,b2];
var FUNCTION_TABLE_vii = [b3,__ZN3gdi10GraphicApi11set_pointerERK7Pointer,__ZN3gdi10GraphicApi11set_paletteERK10BGRPalette,__ZN14Front_JS_Natif4drawERKN3RDP11FrameMarkerE,__ZN14Front_JS_Natif4drawERKN3RDP4RAIL19NewOrExistingWindowE,__ZN14Front_JS_Natif4drawERKN3RDP4RAIL10WindowIconE,__ZN14Front_JS_Natif4drawERKN3RDP4RAIL10CachedIconE,__ZN14Front_JS_Natif4drawERKN3RDP4RAIL13DeletedWindowE,__ZN14Front_JS_Natif4drawERK11RDPColCache,__ZN14Front_JS_Natif4drawERK13RDPBrushCache,__ZNK8FrontAPI23intersect_order_caps_exER9OrderCaps,__ZN8FrontAPI18send_fastpath_dataER8InStream,__ZN8FrontAPI23set_keyboard_indicatorsEt,__ZN8FrontAPI21session_probe_startedEb,__ZN8FrontAPI13set_keylayoutEi,__ZN8FrontAPI29set_focus_on_password_textboxEb,__ZN8FrontAPI22set_consent_ui_visibleEb,__ZN8FrontAPI14session_updateERK10array_viewIKcE,__ZN14Front_JS_Natif14setmod_paletteERK10BGRPalette,__ZN3gdi10GraphicApi4drawERKN3RDP4RAIL19NewOrExistingWindowE,__ZN3gdi10GraphicApi4drawERKN3RDP4RAIL10WindowIconE,__ZN3gdi10GraphicApi4drawERKN3RDP4RAIL10CachedIconE,__ZN3gdi10GraphicApi4drawERKN3RDP4RAIL13DeletedWindowE,__ZN3gdi10GraphicApi4drawERK11RDPColCache,__ZN3gdi10GraphicApi4drawERK13RDPBrushCache,b3,b3,b3,b3
,b3,b3,b3];
var FUNCTION_TABLE_ii = [b4,__ZNK14Front_JS_Natif16get_channel_listEv,__ZN8FrontAPI9get_eventEv,__ZNK8FrontAPI13get_keylayoutEv,___stdio_close,__ZNKSt9bad_alloc4whatEv,b4,b4];
var FUNCTION_TABLE_viii = [b5,__ZN14Front_JS_Natif4drawERK10RDPDestBltRK4Rect,__ZN14Front_JS_Natif4drawERK14RDPMultiDstBltRK4Rect,__ZN14Front_JS_Natif4drawERK9RDPPatBltRK4Rect,__ZN14Front_JS_Natif4drawERKN3RDP14RDPMultiPatBltERK4Rect,__ZN14Front_JS_Natif4drawERK13RDPOpaqueRectRK4Rect,__ZN14Front_JS_Natif4drawERK18RDPMultiOpaqueRectRK4Rect,__ZN14Front_JS_Natif4drawERK9RDPScrBltRK4Rect,__ZN14Front_JS_Natif4drawERKN3RDP14RDPMultiScrBltERK4Rect,__ZN14Front_JS_Natif4drawERK9RDPLineToRK4Rect,__ZN14Front_JS_Natif4drawERK12RDPPolygonSCRK4Rect,__ZN14Front_JS_Natif4drawERK12RDPPolygonCBRK4Rect,__ZN14Front_JS_Natif4drawERK11RDPPolylineRK4Rect,__ZN14Front_JS_Natif4drawERK12RDPEllipseSCRK4Rect,__ZN14Front_JS_Natif4drawERK12RDPEllipseCBRK4Rect,__ZN14Front_JS_Natif4drawERK13RDPBitmapDataRK6Bitmap,__ZN3gdi10GraphicApi7set_rowEjPKh,__ZNK8FrontAPI20intersect_order_capsEiPh,__ZN14Front_JS_Natif23update_pointer_positionEtt,__ZThn8_N14Front_JS_Natif23update_pointer_positionEtt,b5,b5,b5,b5,b5,b5,b5,b5,b5
,b5,b5,b5];
var FUNCTION_TABLE_v = [b6,___cxa_pure_virtual__wrapper];
var FUNCTION_TABLE_iiiii = [b7,__ZN14Front_JS_Natif13server_resizeEiii];
var FUNCTION_TABLE_viiiiii = [b8,__ZN14Front_JS_Natif15send_to_channelERKN8CHANNELS10ChannelDefEPKhjji,__ZNK10__cxxabiv117__class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv120__si_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,__ZNK10__cxxabiv121__vmi_class_type_info16search_above_dstEPNS_19__dynamic_cast_infoEPKvS4_ib,b8,b8,b8];
var FUNCTION_TABLE_iii = [b9,__ZN8FrontAPI30retrieve_client_capability_setER10Capability];
var FUNCTION_TABLE_viiii = [b10,__ZN14Front_JS_Natif4drawERK9RDPMemBltRK4RectRK6Bitmap,__ZN14Front_JS_Natif4drawERK10RDPMem3BltRK4RectRK6Bitmap,__ZN14Front_JS_Natif4drawERK13RDPGlyphIndexRK4RectRK10GlyphCache,__ZN8FrontAPI23send_data_indication_exEtPKhj,__ZNK10__cxxabiv117__class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv120__si_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi,__ZNK10__cxxabiv121__vmi_class_type_info27has_unambiguous_public_baseEPNS_19__dynamic_cast_infoEPvi];

  return { _free: _free, _main: _main, _memset: _memset, _malloc: _malloc, _memcpy: _memcpy, _bitshift64Lshr: _bitshift64Lshr, _fflush: _fflush, ___errno_location: ___errno_location, __GLOBAL__sub_I_bitmap_data_allocator_cpp: __GLOBAL__sub_I_bitmap_data_allocator_cpp, runPostSets: runPostSets, stackAlloc: stackAlloc, stackSave: stackSave, stackRestore: stackRestore, establishStackSpace: establishStackSpace, setThrew: setThrew, setTempRet0: setTempRet0, getTempRet0: getTempRet0, dynCall_iiii: dynCall_iiii, dynCall_viiiii: dynCall_viiiii, dynCall_vi: dynCall_vi, dynCall_vii: dynCall_vii, dynCall_ii: dynCall_ii, dynCall_viii: dynCall_viii, dynCall_v: dynCall_v, dynCall_iiiii: dynCall_iiiii, dynCall_viiiiii: dynCall_viiiiii, dynCall_iii: dynCall_iii, dynCall_viiii: dynCall_viiii };
})
// EMSCRIPTEN_END_ASM
(Module.asmGlobalArg, Module.asmLibraryArg, buffer);
var __GLOBAL__sub_I_bitmap_data_allocator_cpp = Module["__GLOBAL__sub_I_bitmap_data_allocator_cpp"] = asm["__GLOBAL__sub_I_bitmap_data_allocator_cpp"];
var _free = Module["_free"] = asm["_free"];
var _main = Module["_main"] = asm["_main"];
var _memset = Module["_memset"] = asm["_memset"];
var _malloc = Module["_malloc"] = asm["_malloc"];
var _memcpy = Module["_memcpy"] = asm["_memcpy"];
var _bitshift64Lshr = Module["_bitshift64Lshr"] = asm["_bitshift64Lshr"];
var _fflush = Module["_fflush"] = asm["_fflush"];
var ___errno_location = Module["___errno_location"] = asm["___errno_location"];
var runPostSets = Module["runPostSets"] = asm["runPostSets"];
var dynCall_iiii = Module["dynCall_iiii"] = asm["dynCall_iiii"];
var dynCall_viiiii = Module["dynCall_viiiii"] = asm["dynCall_viiiii"];
var dynCall_vi = Module["dynCall_vi"] = asm["dynCall_vi"];
var dynCall_vii = Module["dynCall_vii"] = asm["dynCall_vii"];
var dynCall_ii = Module["dynCall_ii"] = asm["dynCall_ii"];
var dynCall_viii = Module["dynCall_viii"] = asm["dynCall_viii"];
var dynCall_v = Module["dynCall_v"] = asm["dynCall_v"];
var dynCall_iiiii = Module["dynCall_iiiii"] = asm["dynCall_iiiii"];
var dynCall_viiiiii = Module["dynCall_viiiiii"] = asm["dynCall_viiiiii"];
var dynCall_iii = Module["dynCall_iii"] = asm["dynCall_iii"];
var dynCall_viiii = Module["dynCall_viiii"] = asm["dynCall_viiii"];
;

Runtime.stackAlloc = asm['stackAlloc'];
Runtime.stackSave = asm['stackSave'];
Runtime.stackRestore = asm['stackRestore'];
Runtime.establishStackSpace = asm['establishStackSpace'];

Runtime.setTempRet0 = asm['setTempRet0'];
Runtime.getTempRet0 = asm['getTempRet0'];



// === Auto-generated postamble setup entry stuff ===



if (memoryInitializer) {
  if (typeof Module['locateFile'] === 'function') {
    memoryInitializer = Module['locateFile'](memoryInitializer);
  } else if (Module['memoryInitializerPrefixURL']) {
    memoryInitializer = Module['memoryInitializerPrefixURL'] + memoryInitializer;
  }
  if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {
    var data = Module['readBinary'](memoryInitializer);
    HEAPU8.set(data, Runtime.GLOBAL_BASE);
  } else {
    addRunDependency('memory initializer');
    var applyMemoryInitializer = function(data) {
      if (data.byteLength) data = new Uint8Array(data);
      HEAPU8.set(data, Runtime.GLOBAL_BASE);
      // Delete the typed array that contains the large blob of the memory initializer request response so that
      // we won't keep unnecessary memory lying around. However, keep the XHR object itself alive so that e.g.
      // its .status field can still be accessed later.
      if (Module['memoryInitializerRequest']) delete Module['memoryInitializerRequest'].response;
      removeRunDependency('memory initializer');
    }
    function doBrowserLoad() {
      Module['readAsync'](memoryInitializer, applyMemoryInitializer, function() {
        throw 'could not load memory initializer ' + memoryInitializer;
      });
    }
    if (Module['memoryInitializerRequest']) {
      // a network request has already been created, just use that
      function useRequest() {
        var request = Module['memoryInitializerRequest'];
        if (request.status !== 200 && request.status !== 0) {
          // If you see this warning, the issue may be that you are using locateFile or memoryInitializerPrefixURL, and defining them in JS. That
          // means that the HTML file doesn't know about them, and when it tries to create the mem init request early, does it to the wrong place.
          // Look in your browser's devtools network console to see what's going on.
          console.warn('a problem seems to have happened with Module.memoryInitializerRequest, status: ' + request.status + ', retrying ' + memoryInitializer);
          doBrowserLoad();
          return;
        }
        applyMemoryInitializer(request.response);
      }
      if (Module['memoryInitializerRequest'].response) {
        setTimeout(useRequest, 0); // it's already here; but, apply it asynchronously
      } else {
        Module['memoryInitializerRequest'].addEventListener('load', useRequest); // wait for it
      }
    } else {
      // fetch it from the network ourselves
      doBrowserLoad();
    }
  }
}

function ExitStatus(status) {
  this.name = "ExitStatus";
  this.message = "Program terminated with exit(" + status + ")";
  this.status = status;
};
ExitStatus.prototype = new Error();
ExitStatus.prototype.constructor = ExitStatus;

var initialStackTop;
var preloadStartTime = null;
var calledMain = false;

dependenciesFulfilled = function runCaller() {
  // If run has never been called, and we should call run (INVOKE_RUN is true, and Module.noInitialRun is not false)
  if (!Module['calledRun']) run();
  if (!Module['calledRun']) dependenciesFulfilled = runCaller; // try this again later, after new deps are fulfilled
}

Module['callMain'] = Module.callMain = function callMain(args) {

  args = args || [];

  ensureInitRuntime();

  var argc = args.length+1;
  function pad() {
    for (var i = 0; i < 4-1; i++) {
      argv.push(0);
    }
  }
  var argv = [allocate(intArrayFromString(Module['thisProgram']), 'i8', ALLOC_NORMAL) ];
  pad();
  for (var i = 0; i < argc-1; i = i + 1) {
    argv.push(allocate(intArrayFromString(args[i]), 'i8', ALLOC_NORMAL));
    pad();
  }
  argv.push(0);
  argv = allocate(argv, 'i32', ALLOC_NORMAL);


  try {

    var ret = Module['_main'](argc, argv, 0);


    // if we're not running an evented main loop, it's time to exit
    exit(ret, /* implicit = */ true);
  }
  catch(e) {
    if (e instanceof ExitStatus) {
      // exit() throws this once it's done to make sure execution
      // has been stopped completely
      return;
    } else if (e == 'SimulateInfiniteLoop') {
      // running an evented main loop, don't immediately exit
      Module['noExitRuntime'] = true;
      return;
    } else {
      if (e && typeof e === 'object' && e.stack) Module.printErr('exception thrown: ' + [e, e.stack]);
      throw e;
    }
  } finally {
    calledMain = true;
  }
}




function run(args) {
  args = args || Module['arguments'];

  if (preloadStartTime === null) preloadStartTime = Date.now();

  if (runDependencies > 0) {
    return;
  }

  preRun();

  if (runDependencies > 0) return; // a preRun added a dependency, run will be called later
  if (Module['calledRun']) return; // run may have just been called through dependencies being fulfilled just in this very frame

  function doRun() {
    if (Module['calledRun']) return; // run may have just been called while the async setStatus time below was happening
    Module['calledRun'] = true;

    if (ABORT) return; 

    ensureInitRuntime();

    preMain();


    if (Module['onRuntimeInitialized']) Module['onRuntimeInitialized']();

    if (Module['_main'] && shouldRunNow) Module['callMain'](args);

    postRun();
  }

  if (Module['setStatus']) {
    Module['setStatus']('Running...');
    setTimeout(function() {
      setTimeout(function() {
        Module['setStatus']('');
      }, 1);
      doRun();
    }, 1);
  } else {
    doRun();
  }
}
Module['run'] = Module.run = run;

function exit(status, implicit) {
  if (implicit && Module['noExitRuntime']) {
    return;
  }

  if (Module['noExitRuntime']) {
  } else {

    ABORT = true;
    EXITSTATUS = status;
    STACKTOP = initialStackTop;

    exitRuntime();

    if (Module['onExit']) Module['onExit'](status);
  }

  if (ENVIRONMENT_IS_NODE) {
    process['exit'](status);
  } else if (ENVIRONMENT_IS_SHELL && typeof quit === 'function') {
    quit(status);
  }
  // if we reach here, we must throw an exception to halt the current execution
  throw new ExitStatus(status);
}
Module['exit'] = Module.exit = exit;

var abortDecorators = [];

function abort(what) {
  if (what !== undefined) {
    Module.print(what);
    Module.printErr(what);
    what = JSON.stringify(what)
  } else {
    what = '';
  }

  ABORT = true;
  EXITSTATUS = 1;

  var extra = '\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.';

  var output = 'abort(' + what + ') at ' + stackTrace() + extra;
  if (abortDecorators) {
    abortDecorators.forEach(function(decorator) {
      output = decorator(output, what);
    });
  }
  throw output;
}
Module['abort'] = Module.abort = abort;

// {{PRE_RUN_ADDITIONS}}

if (Module['preInit']) {
  if (typeof Module['preInit'] == 'function') Module['preInit'] = [Module['preInit']];
  while (Module['preInit'].length > 0) {
    Module['preInit'].pop()();
  }
}

// shouldRunNow refers to calling main(), not run().
var shouldRunNow = true;
if (Module['noInitialRun']) {
  shouldRunNow = false;
}


run();

// {{POST_RUN_ADDITIONS}}






// {{MODULE_ADDITIONS}}






